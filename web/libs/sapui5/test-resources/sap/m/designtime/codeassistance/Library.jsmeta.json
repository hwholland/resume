{"!name":"sap.m","!version":"1.17.0","!define":{"sap.m.Switch":{"getCustomTextOn":{"!description":"Gets current value of property <code>customTextOn<\/code>.\n\nCustom text for the \"ON\" state.\n\n\"ON\" translated to the current language is the default value.\nBeware that the given text will be cut off if available space is exceeded.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setName":{"!description":"Sets a new value for property <code>name<\/code>.\n\nThe name to be used in the HTML code for the switch (e.g. for HTML forms that send data to the server via submit).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.m.Switch","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"getName":{"!description":"Gets current value of property <code>name<\/code>.\n\nThe name to be used in the HTML code for the switch (e.g. for HTML forms that send data to the server via submit).\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setCustomTextOn":{"!description":"Sets a new value for property <code>customTextOn<\/code>.\n\nCustom text for the \"ON\" state.\n\n\"ON\" translated to the current language is the default value.\nBeware that the given text will be cut off if available space is exceeded.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sCustomTextOn: String) -> sap.m.Switch","parameters":{"sCustomTextOn":"type: string, description: New value for property <code>customTextOn<\/code>"}},"!proto":"sap.ui.core.Control","!category":"class","detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.m.Switch<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Switch","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new Switch.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getState state} : boolean (default: false)<\/li>\n<li>{@link #getCustomTextOn customTextOn} : string (default: )<\/li>\n<li>{@link #getCustomTextOff customTextOff} : string (default: )<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getName name} : string (default: )<\/li>\n<li>{@link #getType type} : sap.m.SwitchType (default: Default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.m.Switch","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nWhether the switch is enabled.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setCustomTextOff":{"!description":"Sets a new value for property <code>customTextOff<\/code>.\n\nCustom text for the \"OFF\" state.\n\n\"OFF\" translated to the current language is the default value.\nBeware that the given text will be cut off if available space is exceeded.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sCustomTextOff: String) -> sap.m.Switch","parameters":{"sCustomTextOff":"type: string, description: New value for property <code>customTextOff<\/code>"}},"getCustomTextOff":{"!description":"Gets current value of property <code>customTextOff<\/code>.\n\nCustom text for the \"OFF\" state.\n\n\"OFF\" translated to the current language is the default value.\nBeware that the given text will be cut off if available space is exceeded.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!description":"A switch is a user interface control on mobile devices that is used for change between binary states. The user can also drag the button handle or tap to change the state.","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.Switch.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.m.Switch<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Switch<\/code> itself.\n\nTriggered when a switch changes the state.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Switch","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Switch<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setType":{"!description":"Sets a new value for property <code>type<\/code>.\n\nType of a Switch. Possibles values \"Default\", \"AcceptReject\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn(sType: sap.m.SwitchType) -> sap.m.Switch","parameters":{"sType":"type: sap.m.SwitchType, description: New value for property <code>type<\/code>"}},"fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>state<\/code> of type <code>boolean<\/code>The new state of the switch.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Switch","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"extend":{"!description":"Creates a new subclass of class sap.m.Switch with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nWhether the switch is enabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.m.Switch","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"getState":{"!description":"Gets current value of property <code>state<\/code>.\n\nA boolean value indicating whether the switch is on or off.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/m/Switch","!helpDescription":"A switch is a user interface control on mobile devices that is used for change between binary states. The user can also drag the button handle or tap to change the state.","getType":{"!description":"Gets current value of property <code>type<\/code>.\n\nType of a Switch. Possibles values \"Default\", \"AcceptReject\".\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.SwitchType"},"setState":{"!description":"Change the switch state between on and off.","!static":false,"!category":"function","!type":"fn(bState: Boolean) -> sap.m.Switch","parameters":{"bState":"type: boolean, description: undefined"}}},"sap.m.ObjectMarkerType":{"!description":"Predefined types for ObjectMarker.","Favorite":{"!description":"Favorite type","!category":"enum","!type":"String"},"Locked":{"!description":"Locked type","!category":"enum","!type":"String"},"Draft":{"!description":"Draft type","!category":"enum","!type":"String"},"!module":"sap/m/library","Unsaved":{"!description":"Unsaved type","!category":"enum","!type":"String"},"!category":"static class","Flagged":{"!description":"Flagged type","!category":"enum","!type":"String"}},"sap.m.MessagePopoverItem":{"!description":"Items provide information about Error Messages in the page.","getMetadata":{"!description":"Returns a metadata object for class sap.m.MessagePopoverItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.core.Element","setLongtextUrl":{"!description":"Sets a new value for property <code>longtextUrl<\/code>.\n\nSpecifies long text description location URL\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLongtextUrl: sap.ui.core.URI) -> sap.m.MessagePopoverItem","parameters":{"sLongtextUrl":"type: sap.ui.core.URI, description: New value for property <code>longtextUrl<\/code>"}},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nSpecifies the title of the message\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.MessagePopoverItem","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"!category":"class","setDescription":{"!description":"Sets a new value for property <code>description<\/code>.\n\nSpecifies detailed description of the message\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sDescription: String) -> sap.m.MessagePopoverItem","parameters":{"sDescription":"type: string, description: New value for property <code>description<\/code>"}},"setType":{"!description":"Sets a new value for property <code>type<\/code>.\n\nSpecifies the type of the message\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Error<\/code>.","!static":false,"!category":"function","!type":"fn(sType: sap.ui.core.MessageType) -> sap.m.MessagePopoverItem","parameters":{"sType":"type: sap.ui.core.MessageType, description: New value for property <code>type<\/code>"}},"getDescription":{"!description":"Gets current value of property <code>description<\/code>.\n\nSpecifies detailed description of the message\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.m.MessagePopoverItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMarkupDescription":{"!description":"Gets current value of property <code>markupDescription<\/code>.\n\nSpecifies if description should be interpreted as markup\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new MessagePopoverItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getType type} : sap.ui.core.MessageType (default: Error)<\/li>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getDescription description} : string (default: )<\/li>\n<li>{@link #getMarkupDescription markupDescription} : boolean (default: false)<\/li>\n<li>{@link #getLongtextUrl longtextUrl} : sap.ui.core.URI<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nSpecifies the title of the message\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/m/MessagePopoverItem","!helpDescription":"Items provide information about Error Messages in the page.","getType":{"!description":"Gets current value of property <code>type<\/code>.\n\nSpecifies the type of the message\n\nDefault value is <code>Error<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.MessageType"},"getLongtextUrl":{"!description":"Gets current value of property <code>longtextUrl<\/code>.\n\nSpecifies long text description location URL","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"setMarkupDescription":{"!description":"Sets a new value for property <code>markupDescription<\/code>.\n\nSpecifies if description should be interpreted as markup\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bMarkupDescription: Boolean) -> sap.m.MessagePopoverItem","parameters":{"bMarkupDescription":"type: boolean, description: New value for property <code>markupDescription<\/code>"}}},"sap.m.MessagePage_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.MessagePage with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.MessagePage"},"sap.m.semantic.SemanticPage":{"addCustomHeaderContent":{"!description":"Adds some customHeaderContent to the aggregation <code>customHeaderContent<\/code>.","!static":false,"!category":"function","!type":"fn(oCustomHeaderContent: sap.m.Button) -> sap.m.semantic.SemanticPage","parameters":{"oCustomHeaderContent":"type: sap.m.Button, description: the customHeaderContent to add; if empty, nothing is inserted"}},"destroyLandmarkInfo":{"!description":"Destroys the landmarkInfo in the aggregation <code>landmarkInfo<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.SemanticPage"},"getCustomFooterContent":{"!description":"Gets content of aggregation <code>customFooterContent<\/code>.\n\nCustom footer buttons","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"setSubHeader":{"!description":"Sets the aggregated <code>subHeader<\/code>.","!static":false,"!category":"function","!type":"fn(oSubHeader: sap.m.IBar) -> sap.m.semantic.SemanticPage","parameters":{"oSubHeader":"type: sap.m.IBar, description: The subHeader to set"}},"setTitleLevel":{"!description":"Sets a new value for property <code>titleLevel<\/code>.\n\nSee {@link sap.m.Page#titleLevel}\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sTitleLevel: sap.ui.core.TitleLevel) -> sap.m.semantic.SemanticPage","parameters":{"sTitleLevel":"type: sap.ui.core.TitleLevel, description: New value for property <code>titleLevel<\/code>"}},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nSee {@link sap.m.Page#title}","!static":false,"!category":"function","!type":"fn() -> String"},"indexOfCustomHeaderContent":{"!description":"Checks for the provided <code>sap.m.Button<\/code> in the aggregation <code>customHeaderContent<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oCustomHeaderContent: sap.m.Button) -> Number","parameters":{"oCustomHeaderContent":"type: sap.m.Button, description: The customHeaderContent whose index is looked for"}},"getShowFooter":{"!description":"Gets current value of property <code>showFooter<\/code>.\n\nHides or shows the page footer\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeCustomFooterContent":{"!description":"Removes a customFooterContent from the aggregation <code>customFooterContent<\/code>.","!static":false,"!category":"function","!type":"fn(vCustomFooterContent: Number | String | sap.m.Button) -> sap.m.Button","parameters":{"vCustomFooterContent":"type: int|string|sap.m.Button, description: The customFooterContentto remove or its index or id"}},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.SemanticPage"},"!description":"A semantic page is an enhanced {@link sap.m.Page}, that can contain controls with semantic meaning @see sap.m.semantic.SemanticControl.<br>\n\nContent specified in the {@link sap.m.semantic.SemanticPage#semanticControls} aggregations will be automatically positioned in dedicated sections of the footer or the header of the page, depending on the control's semantics.<br>\nFor example, a semantic button of type {@link sap.m.semantic.PositiveAction} will be positioned in the right side of the footer, and in logically correct sequence order with respect to any other included semantic controls.<br>\n\nThe full list of what we internally define for semantic content is:\n <ul>\n     <li>Visual properties (e.g. AddAction will be styled as an icon button)<\/li>\n     <li>Position in the page (UX guidelines specify that some buttons should be in the header only, while others are in the footer or the \"share\" menu, so we do the correct positioning)<\/li>\n     <li>Sequence order (UX guidelines define a specific sequence order of semantic controls with respect to each other)<\/li>\n     <li>Default localized tooltip for icon-only buttons<\/li>\n     <li>Overflow behavior (UX quidelines define which buttons are allowed to go to the overflow of the toolbar when the screen gets narrower). For icon buttons, we ensure that the text label of the button appears when the button is in overflow, as specified by UX.<\/li>\n     <li>Screen reader support (invisible text for reading the semantic type)<\/li>\n <\/ul>\n\nIn addition to the predefined semantic controls, the SemanticPage can host also custom application-provided controls. It preserves most of the API of {@link sap.m.Page} for specifying page content.<br>","getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.SemanticPage.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"destroyCustomFooterContent":{"!description":"Destroys all the customFooterContent in the aggregation <code>customFooterContent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.SemanticPage"},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nSee {@link sap.m.Page#title}\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.semantic.SemanticPage","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"removeAllCustomHeaderContent":{"!description":"Removes all the controls from the aggregation <code>customHeaderContent<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"extend":{"!description":"Creates a new subclass of class sap.m.semantic.SemanticPage with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getCustomHeaderContent":{"!description":"Gets content of aggregation <code>customHeaderContent<\/code>.\n\nCustom header buttons","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"getShowSubHeader":{"!description":"Gets current value of property <code>showSubHeader<\/code>.\n\nSee {@link sap.m.Page#showSubHeader}\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/m/semantic/SemanticPage","!helpDescription":"A semantic page is an enhanced {@link sap.m.Page}, that can contain controls with semantic meaning @see sap.m.semantic.SemanticControl.<br>\n\nContent specified in the {@link sap.m.semantic.SemanticPage#semanticControls} aggregations will be automatically positioned in dedicated sections of the footer or the header of the page, depending on the control's semantics.<br>\nFor example, a semantic button of type {@link sap.m.semantic.PositiveAction} will be positioned in the right side of the footer, and in logically correct sequence order with respect to any other included semantic controls.<br>\n\nThe full list of what we internally define for semantic content is:\n <ul>\n     <li>Visual properties (e.g. AddAction will be styled as an icon button)<\/li>\n     <li>Position in the page (UX guidelines specify that some buttons should be in the header only, while others are in the footer or the \"share\" menu, so we do the correct positioning)<\/li>\n     <li>Sequence order (UX guidelines define a specific sequence order of semantic controls with respect to each other)<\/li>\n     <li>Default localized tooltip for icon-only buttons<\/li>\n     <li>Overflow behavior (UX quidelines define which buttons are allowed to go to the overflow of the toolbar when the screen gets narrower). For icon buttons, we ensure that the text label of the button appears when the button is in overflow, as specified by UX.<\/li>\n     <li>Screen reader support (invisible text for reading the semantic type)<\/li>\n <\/ul>\n\nIn addition to the predefined semantic controls, the SemanticPage can host also custom application-provided controls. It preserves most of the API of {@link sap.m.Page} for specifying page content.<br>","insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.m.semantic.SemanticPage","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}},"insertCustomFooterContent":{"!description":"Inserts a customFooterContent into the aggregation <code>customFooterContent<\/code>.","!static":false,"!category":"function","!type":"fn(oCustomFooterContent: sap.m.Button, iIndex: Number) -> sap.m.semantic.SemanticPage","parameters":{"oCustomFooterContent":"type: sap.m.Button, description: the customFooterContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the customFooterContent should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the customFooterContent is inserted at position 0; for a value\n             greater than the current size of the aggregation, the customFooterContent is inserted at\n             the last position"}},"setLandmarkInfo":{"!description":"Sets the aggregated <code>landmarkInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oLandmarkInfo: sap.m.PageAccessibleLandmarkInfo) -> sap.m.semantic.SemanticPage","parameters":{"oLandmarkInfo":"type: sap.m.PageAccessibleLandmarkInfo, description: The landmarkInfo to set"}},"detachNavButtonPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>navButtonPress<\/code> event of this <code>sap.m.semantic.SemanticPage<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.semantic.SemanticPage","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getShowNavButton":{"!description":"Gets current value of property <code>showNavButton<\/code>.\n\nSee {@link sap.m.Page#showNavButton}\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireNavButtonPress":{"!description":"Fires event <code>navButtonPress<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.semantic.SemanticPage","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nSee {@link sap.m.Page#content}","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","getEnableScrolling":{"!description":"Gets current value of property <code>enableScrolling<\/code>.\n\nSee {@link sap.m.Page#enableScrolling}\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","indexOfCustomFooterContent":{"!description":"Checks for the provided <code>sap.m.Button<\/code> in the aggregation <code>customFooterContent<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oCustomFooterContent: sap.m.Button) -> Number","parameters":{"oCustomFooterContent":"type: sap.m.Button, description: The customFooterContent whose index is looked for"}},"destroySubHeader":{"!description":"Destroys the subHeader in the aggregation <code>subHeader<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.SemanticPage"},"setShowSubHeader":{"!description":"Sets a new value for property <code>showSubHeader<\/code>.\n\nSee {@link sap.m.Page#showSubHeader}\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSubHeader: Boolean) -> sap.m.semantic.SemanticPage","parameters":{"bShowSubHeader":"type: boolean, description: New value for property <code>showSubHeader<\/code>"}},"!constructorDescription":"Constructor for a new SemanticPage\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getTitleLevel titleLevel} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getShowNavButton showNavButton} : boolean (default: false)<\/li>\n<li>{@link #getShowSubHeader showSubHeader} : boolean (default: true)<\/li>\n<li>{@link #getEnableScrolling enableScrolling} : boolean (default: true)<\/li>\n<li>{@link #getShowFooter showFooter} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSubHeader subHeader} : sap.m.IBar<\/li>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getCustomHeaderContent customHeaderContent} : sap.m.Button[]<\/li>\n<li>{@link #getCustomFooterContent customFooterContent} : sap.m.Button[]<\/li>\n<li>{@link #getLandmarkInfo landmarkInfo} : sap.m.PageAccessibleLandmarkInfo<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:navButtonPress navButtonPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","removeCustomHeaderContent":{"!description":"Removes a customHeaderContent from the aggregation <code>customHeaderContent<\/code>.","!static":false,"!category":"function","!type":"fn(vCustomHeaderContent: Number | String | sap.m.Button) -> sap.m.Button","parameters":{"vCustomHeaderContent":"type: int|string|sap.m.Button, description: The customHeaderContentto remove or its index or id"}},"destroyCustomHeaderContent":{"!description":"Destroys all the customHeaderContent in the aggregation <code>customHeaderContent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.SemanticPage"},"setShowFooter":{"!description":"Sets a new value for property <code>showFooter<\/code>.\n\nHides or shows the page footer\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowFooter: Boolean) -> sap.m.semantic.SemanticPage","parameters":{"bShowFooter":"type: boolean, description: New value for property <code>showFooter<\/code>"}},"removeAllCustomFooterContent":{"!description":"Removes all the controls from the aggregation <code>customFooterContent<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"getSubHeader":{"!description":"Gets content of aggregation <code>subHeader<\/code>.\n\nSee {@link sap.m.Page#subHeader}","!static":false,"!category":"function","!type":"fn() -> sap.m.IBar"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setShowNavButton":{"!description":"Sets a new value for property <code>showNavButton<\/code>.\n\nSee {@link sap.m.Page#showNavButton}\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowNavButton: Boolean) -> sap.m.semantic.SemanticPage","parameters":{"bShowNavButton":"type: boolean, description: New value for property <code>showNavButton<\/code>"}},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.m.semantic.SemanticPage","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"addCustomFooterContent":{"!description":"Adds some customFooterContent to the aggregation <code>customFooterContent<\/code>.","!static":false,"!category":"function","!type":"fn(oCustomFooterContent: sap.m.Button) -> sap.m.semantic.SemanticPage","parameters":{"oCustomFooterContent":"type: sap.m.Button, description: the customFooterContent to add; if empty, nothing is inserted"}},"attachNavButtonPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>navButtonPress<\/code> event of this <code>sap.m.semantic.SemanticPage<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.semantic.SemanticPage<\/code> itself.\n\nSee {@link sap.m.Page#navButtonPress}","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.semantic.SemanticPage","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.semantic.SemanticPage<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"insertCustomHeaderContent":{"!description":"Inserts a customHeaderContent into the aggregation <code>customHeaderContent<\/code>.","!static":false,"!category":"function","!type":"fn(oCustomHeaderContent: sap.m.Button, iIndex: Number) -> sap.m.semantic.SemanticPage","parameters":{"oCustomHeaderContent":"type: sap.m.Button, description: the customHeaderContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the customHeaderContent should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the customHeaderContent is inserted at position 0; for a value\n             greater than the current size of the aggregation, the customHeaderContent is inserted at\n             the last position"}},"getTitleLevel":{"!description":"Gets current value of property <code>titleLevel<\/code>.\n\nSee {@link sap.m.Page#titleLevel}\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TitleLevel"},"setEnableScrolling":{"!description":"Sets a new value for property <code>enableScrolling<\/code>.\n\nSee {@link sap.m.Page#enableScrolling}\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableScrolling: Boolean) -> sap.m.semantic.SemanticPage","parameters":{"bEnableScrolling":"type: boolean, description: New value for property <code>enableScrolling<\/code>"}},"getLandmarkInfo":{"!description":"Gets content of aggregation <code>landmarkInfo<\/code>.\n\nAccessible landmark settings to be applied to the containers of the <code>sap.m.Page<\/code> control.\n\nIf not set, no landmarks will be written.","!static":false,"!category":"function","!type":"fn() -> sap.m.PageAccessibleLandmarkInfo"}},"sap.m.IBar":{"!description":"\n  Interface for controls which are suitable as a Header, Subheader or Footer of a Page.\n  If the control does not want to get a context base style class, it has to implement the isContextSensitive method and return false","!module":"sap/m/library","!category":"static class"},"sap.m.P13nDimMeasureItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.P13nDimMeasureItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.P13nDimMeasureItem"},"sap.m.MessageBox":{"!description":"Provides easier methods to create sap.m.Dialog with type sap.m.DialogType.Message, such as standard alerts,\nconfirmation dialogs, or arbitrary message dialogs.\n\nAs <code>MessageBox<\/code> is a static class, a <code>jQuery.sap.require(\"sap.m.MessageBox\");<\/code> statement\nmust be explicitly executed before the class can be used. Example:\n<pre>\n  jQuery.sap.require(\"sap.m.MessageBox\");\n  sap.m.MessageBox.show(\n      \"This message should appear in the message box.\", {\n          icon: sap.m.MessageBox.Icon.INFORMATION,\n          title: \"My message box title\",\n          actions: [sap.m.MessageBox.Action.YES, sap.m.MessageBox.Action.NO],\n          onClose: function(oAction) { / * do something * / }\n      }\n    );\n<\/pre>","Action":"sap.m.MessageBox.Action","show":{"!description":"Creates and displays a sap.m.Dialog with type sap.m.DialogType.Message with the given text and buttons, and optionally other parts.\nAfter the user has tapped a button, the <code>onClose<\/code> function is invoked when given.\n\nThe only mandatory parameter is <code>vMessage<\/code>. Either a string with the corresponding text or even\na layout control could be provided.\n\n<pre>\nsap.m.MessageBox.show(\"This message should appear in the message box\", {\n    icon: sap.m.MessageBox.Icon.NONE,                    // default\n    title: \"\",                                           // default\n    actions: sap.m.MessageBox.Action.OK                  // default\n    onClose: null                                        // default\n    styleClass: \"\"                                       // default\n    initialFocus: null                                   // default\n    textDirection: sap.ui.core.TextDirection.Inherit     // default\n});\n<\/pre>\n\nThe created dialog is executed asynchronously. When it has been created and registered for rendering,\nthis function returns without waiting for a user reaction.\n\nWhen applications have to react on the users choice, they have to provide a callback function and\npostpone any reaction on the user choice until that callback is triggered.\n\nThe signature of the callback is\n\n  function (oAction);\n\nwhere <code>oAction<\/code> is the button that the user has tapped. For example, when the user has pressed the close button,\na sap.m.MessageBox.Action.Close is returned.","!static":"true","!category":"function","!type":"fn(vMessage: String, mOptions?: Object)"},"!category":"namespace","error":{"!description":"Displays an error dialog with the given message, an ERROR icon, a CLOSE button..\nIf a callback is given, it is called after the error box\nhas been closed by the user with one of the buttons.\n\n<pre>\nsap.m.MessageBox.error(\"This message should appear in the error message box\", {\n    title: \"Error\",                                      // default\n    onClose: null                                        // default\n    styleClass: \"\"                                       // default\n    initialFocus: null                                   // default\n    textDirection: sap.ui.core.TextDirection.Inherit     // default\n    });\n<\/pre>\n\nThe callback is called with the following signature\n\n\n<pre>\n  function (oAction)\n<\/pre>\n\nThe error dialog opened by this method is processed asynchronously.\nApplications have to use <code>fnCallback<\/code> to continue work after the\nuser closed the error dialog.","!static":"true","!category":"function","!type":"fn(vMessage: String, mOptions?: Object)"},"confirm":{"!description":"Displays a confirmation dialog with the given message, a QUESTION icon, an OK button\nand a Cancel button. If a callback is given, it is called after the confirmation box\nhas been closed by the user with one of the buttons.\n\n<pre>\nsap.m.MessageBox.confirm(\"This message should appear in the confirmation\", {\n    title: \"Confirm\",                                    // default\n    onClose: null                                        // default\n    styleClass: \"\"                                       // default\n    initialFocus: null                                   // default\n    textDirection: sap.ui.core.TextDirection.Inherit     // default\n    });\n<\/pre>\n\nThe callback is called with the following signature\n\n<pre>\n  function(oAction)\n<\/pre>\n\nwhere oAction is set by one of the following three values:\n1. sap.m.MessageBox.Action.OK: OK (confirmed) button is tapped.\n2. sap.m.MessageBox.Action.Cancel: Cancel (unconfirmed) button is tapped.\n3. null: Confirm dialog is closed by calling <code>sap.m.InstanceManager.closeAllDialogs()<\/code>\n\nThe confirmation dialog opened by this method is processed asynchronously.\nApplications have to use <code>fnCallback<\/code> to continue work after the\nuser closed the confirmation dialog","!static":"true","!category":"function","!type":"fn(vMessage: String, mOptions?: Object)"},"!module":"sap/m/MessageBox","!helpDescription":"Provides easier methods to create sap.m.Dialog with type sap.m.DialogType.Message, such as standard alerts,\nconfirmation dialogs, or arbitrary message dialogs.\n\nAs <code>MessageBox<\/code> is a static class, a <code>jQuery.sap.require(\"sap.m.MessageBox\");<\/code> statement\nmust be explicitly executed before the class can be used. Example:\n<pre>\n  jQuery.sap.require(\"sap.m.MessageBox\");\n  sap.m.MessageBox.show(\n      \"This message should appear in the message box.\", {\n          icon: sap.m.MessageBox.Icon.INFORMATION,\n          title: \"My message box title\",\n          actions: [sap.m.MessageBox.Action.YES, sap.m.MessageBox.Action.NO],\n          onClose: function(oAction) { / * do something * / }\n      }\n    );\n<\/pre>","alert":{"!description":"Displays an alert dialog with the given message and an OK button (no icons).\n\n<pre>\nsap.m.MessageBox.alert(\"This message should appear in the alert\", {\n    title: \"Alert\",                                      // default\n    onClose: null,                                       // default\n    styleClass: \"\"                                       // default\n    initialFocus: null                                   // default\n    textDirection: sap.ui.core.TextDirection.Inherit     // default\n});\n<\/pre>\n\nIf a callback is given, it is called after the alert dialog has been closed\nby the user via the OK button. The callback is called with the following signature:\n\n<pre>\n  function (oAction)\n<\/pre>\n\nwhere <code>oAction<\/code> can be either sap.m.MessageBox.Action.OK when the alert dialog is closed by tapping on the OK button\n   or null when the alert dialog is closed by calling <code>sap.m.InstanceManager.closeAllDialogs()<\/code>.\n\nThe alert dialog opened by this method is processed asynchronously.\nApplications have to use <code>fnCallback<\/code> to continue work after the\nuser closed the alert dialog.","!static":"true","!category":"function","!type":"fn(vMessage: String, mOptions?: Object)"},"success":{"!description":"Displays a success dialog with the given message, a SUCCESS icon, an OK button.\nIf a callback is given, it is called after the success box\nhas been closed by the user with one of the buttons.\n\n<pre>\nsap.m.MessageBox.success(\"This message should appear in the success message box\", {\n    title: \"Success\",                                    // default\n    onClose: null                                        // default\n    styleClass: \"\"                                       // default\n    initialFocus: null                                   // default\n    textDirection: sap.ui.core.TextDirection.Inherit     // default\n    });\n<\/pre>\n\nThe callback is called with the following signature\n\n<pre>\n  function(oAction)\n<\/pre>\n\nThe success dialog opened by this method is processed asynchronously.\nApplications have to use <code>fnCallback<\/code> to continue work after the\nuser closed the success dialog","!static":"true","!category":"function","!type":"fn(vMessage: String, mOptions?: Object)"},"warning":{"!description":"Displays a warning dialog with the given message, a WARNING icon, an OK button.\nIf a callback is given, it is called after the warning box\nhas been closed by the user with one of the buttons.\n\n<pre>\nsap.m.MessageBox.warning(\"This message should appear in the warning message box\", {\n    title: \"Warning\",                                    // default\n    onClose: null                                        // default\n    styleClass: \"\"                                       // default\n    initialFocus: null                                   // default\n    textDirection: sap.ui.core.TextDirection.Inherit     // default\n    });\n<\/pre>\n\nThe callback is called with the following signature\n\t\t\t\t *\n<pre>\n  function (oAction)\n<\/pre>\n\nThe warning dialog opened by this method is processed asynchronously.\nApplications have to use <code>fnCallback<\/code> to continue work after the\nuser closed the warning dialog","!static":"true","!category":"function","!type":"fn(vMessage: String, mOptions?: Object)"},"information":{"!description":"Displays an information dialog with the given message, an INFO icon, an OK button.\nIf a callback is given, it is called after the info box\nhas been closed by the user with one of the buttons.\n\n<pre>\nsap.m.MessageBox.information(\"This message should appear in the information message box\", {\n    title: \"Information\",                                // default\n    onClose: null                                        // default\n    styleClass: \"\"                                       // default\n    initialFocus: null                                   // default\n    textDirection: sap.ui.core.TextDirection.Inherit     // default\n    });\n<\/pre>\n\nThe callback is called with the following signature\n\t\t\t\t *\n<pre>\n  function (oAction)\n<\/pre>\n\nThe information dialog opened by this method is processed asynchronously.\nApplications have to use <code>fnCallback<\/code> to continue work after the\nuser closed the information dialog","!static":"true","!category":"function","!type":"fn(vMessage: String, mOptions?: Object)"},"Icon":"sap.m.MessageBox.Icon"},"sap.m.P13nFilterPanel_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.P13nFilterPanel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.P13nPanel.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.P13nFilterPanel"},"sap.m.RadioButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.RadioButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.RadioButton"},"sap.m.semantic.SortAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.SortAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.SortAction"},"sap.m.Button_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.Button with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.Button"},"sap.m.semantic.CancelAction":{"!description":"A CancelAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","extend":{"!description":"Creates a new subclass of class sap.m.semantic.CancelAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.CancelAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new CancelAction.","!module":"sap/m/semantic/CancelAction","!helpDescription":"A CancelAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","!proto":"sap.m.semantic.SemanticButton","!category":"class"},"sap.m.UploadCollection":{"upload":{"!description":"Starts the upload for all selected files.","!static":false,"!category":"function","!type":"fn()"},"addHeaderParameter":{"!description":"Adds some headerParameter to the aggregation <code>headerParameters<\/code>.","!static":false,"!category":"function","!type":"fn(oHeaderParameter: sap.m.UploadCollectionParameter) -> sap.m.UploadCollection","parameters":{"oHeaderParameter":"type: sap.m.UploadCollectionParameter, description: the headerParameter to add; if empty, nothing is inserted"}},"removeAllHeaderParameters":{"!description":"Removes all the controls from the aggregation <code>headerParameters<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.UploadCollectionParameter]"},"getSameFilenameAllowed":{"!description":"Gets current value of property <code>sameFilenameAllowed<\/code>.\n\nAllows the user to use the same name for a file when editing the file name. 'Same name' refers to an already existing file name in the list.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachFilenameLengthExceed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>filenameLengthExceed<\/code> event of this <code>sap.m.UploadCollection<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.UploadCollection","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"destroyHeaderParameters":{"!description":"Destroys all the headerParameters in the aggregation <code>headerParameters<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.UploadCollection"},"setMaximumFileSize":{"!description":"Sets a new value for property <code>maximumFileSize<\/code>.\n\nSpecifies a file size limit in megabytes that prevents the upload if at least one file exceeds the limit.\nThis property is not supported by Internet Explorer 8 and 9.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fMaximumFileSize: Number) -> sap.m.UploadCollection","parameters":{"fMaximumFileSize":"type: float, description: New value for property <code>maximumFileSize<\/code>"}},"attachSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>selectionChange<\/code> event of this <code>sap.m.UploadCollection<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.UploadCollection<\/code> itself.\n\nFires when selection is changed via user interaction inside the control.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.UploadCollection","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.UploadCollection<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setMultiple":{"!description":"Sets a new value for property <code>multiple<\/code>.\n\nLets the user select multiple files from the same folder and then upload them.\nInternet Explorer 8 and 9 do not support this property.\nPlease note that the various operating systems for mobile devices can react differently to the property so that fewer upload functions may be available in some cases.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bMultiple: Boolean) -> sap.m.UploadCollection","parameters":{"bMultiple":"type: boolean, description: New value for property <code>multiple<\/code>"}},"getNumberOfAttachmentsText":{"!description":"Gets current value of property <code>numberOfAttachmentsText<\/code>.\n\nSets the title text in the toolbar of the list of attachments.\nTo show as well the number of attachments in brackets like the default text does. The number of attachments could be retrieved via \"getItems().length\".\nIf a new title is set, the default is deactivated.\nThe default value is set to language-dependent \"Attachments (n)\".","!static":false,"!category":"function","!type":"fn() -> String"},"indexOfHeaderParameter":{"!description":"Checks for the provided <code>sap.m.UploadCollectionParameter<\/code> in the aggregation <code>headerParameters<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oHeaderParameter: sap.m.UploadCollectionParameter) -> Number","parameters":{"oHeaderParameter":"type: sap.m.UploadCollectionParameter, description: The headerParameter whose index is looked for"}},"indexOfParameter":{"!description":"Checks for the provided <code>sap.m.UploadCollectionParameter<\/code> in the aggregation <code>parameters<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oParameter: sap.m.UploadCollectionParameter) -> Number","parameters":{"oParameter":"type: sap.m.UploadCollectionParameter, description: The parameter whose index is looked for"}},"destroyParameters":{"!description":"Destroys all the parameters in the aggregation <code>parameters<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.UploadCollection"},"attachBeforeUploadStarts":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beforeUploadStarts<\/code> event of this <code>sap.m.UploadCollection<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.UploadCollection<\/code> itself.\n\nThe event is triggered before the actual upload starts. An event is fired per file. All the necessary header parameters should be set here.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.UploadCollection","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.UploadCollection<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"openFileDialog":{"!description":"Opens the FileUploader dialog. When an UploadCollectionItem is provided, this method can be used to update a file with a new version.\nIn this case, the upload progress can be sequenced using the events: beforeUploadStarts, uploadComplete and uploadTerminated. For this use,\nmultiple properties from the UploadCollection have to be set to false. If no UploadCollectionItem is provided, only the dialog opens\nand no further configuration of the UploadCollection is needed.","!static":false,"!category":"function","!type":"fn(item: sap.m.UploadCollectionItem) -> sap.m.UploadCollection","parameters":{"item":"type: sap.m.UploadCollectionItem, description: The item to update with a new version. This parameter is mandatory."}},"!description":"This control allows you to upload single or multiple files from your devices (desktop, tablet or phone) and attach them to the application.\n\nThe consuming application needs to take into account that the consistency checks of the model during the upload of the file need to be performed, for example, if the user is editing or deleting a file.","fireUploadComplete":{"!description":"Fires event <code>uploadComplete<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>readyStateXHR<\/code> of type <code>string<\/code>Ready state XHR. This parameter is deprecated since version 1.28.0., use parameter files instead.<\/li>\n<li><code>response<\/code> of type <code>string<\/code>Response of the completed upload request. This parameter is deprecated since version 1.28.0., use parameter files instead.<\/li>\n<li><code>status<\/code> of type <code>string<\/code>Status Code of the completed upload event. This parameter is deprecated since version 1.28.0., use parameter files instead.<\/li>\n<li><code>files<\/code> of type <code>object[]<\/code>A list of uploaded files. Each entry contains the following members.\nfileName\t: The name of a file to be uploaded.\nresponse\t: Response message which comes from the server. On the server side, this response has to be put within the 'body' tags of the response document of the iFrame. It can consist of a return code and an optional message. This does not work in cross-domain scenarios.\nresponseRaw : HTTP-Response which comes from the server. This property is not supported by Internet Explorer Versions lower than 9.\nstatus\t: Status of the XHR request. This property is not supported by Internet Explorer 9 and lower.\nheaders : HTTP-Response-Headers which come from the server. Provided as a JSON-map, i.e. each header-field is reflected by a property in the header-object, with the property value reflecting the header-field's content. This property is not supported by Internet Explorer 9 and lower.\nSince version 1.28.0.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.UploadCollection","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getMaximumFilenameLength":{"!description":"Gets current value of property <code>maximumFilenameLength<\/code>.\n\nSpecifies the maximum length of a file name.\nIf the maximum file name length is exceeded, the corresponding event 'filenameLengthExceed' is triggered.","!static":false,"!category":"function","!type":"fn() -> Number"},"fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>documentId<\/code> of type <code>string<\/code>An unique Id of the attached document.\nThis parameter is deprecated since version 1.28.0, use parameter files instead.<\/li>\n<li><code>files<\/code> of type <code>object[]<\/code>A FileList of individually selected files from the underlying system. See www.w3.org for the FileList Interface definition.\nLimitation: Internet Explorer 9 supports only single file with property file.name.\nSince version 1.28.0.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.UploadCollection","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"extend":{"!description":"Creates a new subclass of class sap.m.UploadCollection with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"fireFileRenamed":{"!description":"Fires event <code>fileRenamed<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>documentId<\/code> of type <code>string<\/code>An unique Id of the attached document.\nThis parameter is deprecated since version 1.28.0, use parameter item instead.<\/li>\n<li><code>fileName<\/code> of type <code>string<\/code>The new file name.\nThis parameter is deprecated since version 1.28.0, use parameter item instead.<\/li>\n<li><code>item<\/code> of type <code>sap.m.UploadCollectionItem<\/code>The renamed UI element as a UploadCollectionItem.\nSince version 1.28.0.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.UploadCollection","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getUploadEnabled":{"!description":"Gets current value of property <code>uploadEnabled<\/code>.\n\nEnables the upload of a file.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/m/UploadCollection","fireFileDeleted":{"!description":"Fires event <code>fileDeleted<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>documentId<\/code> of type <code>string<\/code>An unique Id of the attached document.\nThis parameter is deprecated since version 1.28.0, use parameter item instead.<\/li>\n<li><code>item<\/code> of type <code>sap.m.UploadCollectionItem<\/code>An item to be deleted from the collection.\nSince version 1.28.0.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.UploadCollection","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachFileRenamed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>fileRenamed<\/code> event of this <code>sap.m.UploadCollection<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.UploadCollection<\/code> itself.\n\nThe event is triggered when the file name is changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.UploadCollection","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.UploadCollection<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getNoDataText":{"!description":"Gets current value of property <code>noDataText<\/code>.\n\nAllows you to set your own text for the 'No data' text label.","!static":false,"!category":"function","!type":"fn() -> String"},"getHeaderParameters":{"!description":"Gets content of aggregation <code>headerParameters<\/code>.\n\nSpecifies the header parameters for the FileUploader that are submitted only with XHR requests.\nHeader parameters are not supported by Internet Explorer 8 and 9.","!static":false,"!category":"function","!type":"fn() -> [sap.m.UploadCollectionParameter]"},"removeAllParameters":{"!description":"Removes all the controls from the aggregation <code>parameters<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.UploadCollectionParameter]"},"setMaximumFilenameLength":{"!description":"Sets a new value for property <code>maximumFilenameLength<\/code>.\n\nSpecifies the maximum length of a file name.\nIf the maximum file name length is exceeded, the corresponding event 'filenameLengthExceed' is triggered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iMaximumFilenameLength: Number) -> sap.m.UploadCollection","parameters":{"iMaximumFilenameLength":"type: int, description: New value for property <code>maximumFilenameLength<\/code>"}},"attachTypeMissmatch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>typeMissmatch<\/code> event of this <code>sap.m.UploadCollection<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.UploadCollection<\/code> itself.\n\nThe event is triggered when the file type or the MIME type don't match the permitted types (only if the fileType property or the mimeType property are provided by the application).","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.UploadCollection","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.UploadCollection<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"addParameter":{"!description":"Adds some parameter to the aggregation <code>parameters<\/code>.","!static":false,"!category":"function","!type":"fn(oParameter: sap.m.UploadCollectionParameter) -> sap.m.UploadCollection","parameters":{"oParameter":"type: sap.m.UploadCollectionParameter, description: the parameter to add; if empty, nothing is inserted"}},"detachTypeMissmatch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>typeMissmatch<\/code> event of this <code>sap.m.UploadCollection<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.UploadCollection","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getFileType":{"!description":"Gets current value of property <code>fileType<\/code>.\n\nDefines the allowed file types for the upload.\nThe chosen files will be checked against an array of file types.\nIf at least one file does not fit the file type requirements, the upload is prevented.  Example: [\"jpg\", \"png\", \"bmp\"].","!static":false,"!category":"function","!type":"fn() -> [String]"},"getMultiple":{"!description":"Gets current value of property <code>multiple<\/code>.\n\nLets the user select multiple files from the same folder and then upload them.\nInternet Explorer 8 and 9 do not support this property.\nPlease note that the various operating systems for mobile devices can react differently to the property so that fewer upload functions may be available in some cases.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachFileDeleted":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>fileDeleted<\/code> event of this <code>sap.m.UploadCollection<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.UploadCollection","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"unbindItems":{"!description":"Unbinds aggregation <code>items<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.UploadCollection"},"setMode":{"!description":"Sets a new value for property <code>mode<\/code>.\n\nDefines the selection mode of the control (e.g. None, SingleSelect, MultiSelect, SingleSelectLeft, SingleSelectMaster).\nSince the UploadCollection reacts like a list for attachments, the API is close to the ListBase Interface.\nsap.m.ListMode.Delete mode is not supported and will be automatically set to sap.m.ListMode.None.\nIn addition, if instant upload is set to false the mode sap.m.ListMode.MultiSelect is not supported and will be automatically set to sap.m.ListMode.None.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sMode: sap.m.ListMode) -> sap.m.UploadCollection","parameters":{"sMode":"type: sap.m.ListMode, description: New value for property <code>mode<\/code>"}},"setShowSeparators":{"!description":"Sets a new value for property <code>showSeparators<\/code>.\n\nDefines whether separators are shown between list items.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>All<\/code>.","!static":false,"!category":"function","!type":"fn(sShowSeparators: sap.m.ListSeparators) -> sap.m.UploadCollection","parameters":{"sShowSeparators":"type: sap.m.ListSeparators, description: New value for property <code>showSeparators<\/code>"}},"fireBeforeUploadStarts":{"!description":"Fires event <code>beforeUploadStarts<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>fileName<\/code> of type <code>string<\/code>Specifies the name of the file to be uploaded.<\/li>\n<li><code>addHeaderParameter<\/code> of type <code>function<\/code>Adds a header parameter to the file that will be uploaded.<\/li>\n<li><code>getHeaderParameter<\/code> of type <code>function<\/code>Returns the corresponding header parameter (type sap.m.UploadCollectionParameter) if available.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.UploadCollection","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getInstantUpload":{"!description":"Gets current value of property <code>instantUpload<\/code>.\n\nIf false, no upload is triggered when a file is selected. In addition, if a file was selected, a new FileUploader instance is created to ensure that multiple files from multiple folders can be chosen.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowSeparators":{"!description":"Gets current value of property <code>showSeparators<\/code>.\n\nDefines whether separators are shown between list items.\n\nDefault value is <code>All<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ListSeparators"},"setSelectedItem":{"!description":"Selects or deselects the given list item.","!static":false,"!category":"function","!type":"fn(uploadCollectionItem: sap.m.UploadCollectionItem, select: Boolean) -> sap.m.UploadCollection","parameters":{"select":"type: boolean, description: Sets selected status of the item. Default value is true.","uploadCollectionItem":"type: sap.m.UploadCollectionItem, description: The item whose selection to be changed. This parameter is mandatory."}},"getParameters":{"!description":"Gets content of aggregation <code>parameters<\/code>.\n\nSpecifies the parameters for the FileUploader that are rendered as a hidden input field.","!static":false,"!category":"function","!type":"fn() -> [sap.m.UploadCollectionParameter]"},"destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.UploadCollection"},"setMimeType":{"!description":"Sets a new value for property <code>mimeType<\/code>.\n\nDefines the allowed MIME types of files to be uploaded.\nThe chosen files will be checked against an array of MIME types.\nIf at least one file does not fit the MIME type requirements, the upload is prevented.\nThis property is not supported by Internet Explorer 8 and 9. Example: mimeType [\"image/png\", \"image/jpeg\"].\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sMimeType: [String]) -> sap.m.UploadCollection","parameters":{"sMimeType":"type: string[], description: New value for property <code>mimeType<\/code>"}},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.m.UploadCollection<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.UploadCollection","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireFilenameLengthExceed":{"!description":"Fires event <code>filenameLengthExceed<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>documentId<\/code> of type <code>string<\/code>An unique Id of the attached document.\nThis parameter is deprecated since version 1.28.0, use parameter files instead.<\/li>\n<li><code>files<\/code> of type <code>object[]<\/code>A FileList of individually selected files from the underlying system.\nLimitation: Internet Explorer 9 supports only single file with property file.name.\nSince version 1.28.0.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.UploadCollection","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nUploaded items.","!static":false,"!category":"function","!type":"fn() -> [sap.m.UploadCollectionItem]"},"getMaximumFileSize":{"!description":"Gets current value of property <code>maximumFileSize<\/code>.\n\nSpecifies a file size limit in megabytes that prevents the upload if at least one file exceeds the limit.\nThis property is not supported by Internet Explorer 8 and 9.","!static":false,"!category":"function","!type":"fn() -> Number"},"indexOfItem":{"!description":"Checks for the provided <code>sap.m.UploadCollectionItem<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.UploadCollectionItem) -> Number","parameters":{"oItem":"type: sap.m.UploadCollectionItem, description: The item whose index is looked for"}},"getMode":{"!description":"Gets current value of property <code>mode<\/code>.\n\nDefines the selection mode of the control (e.g. None, SingleSelect, MultiSelect, SingleSelectLeft, SingleSelectMaster).\nSince the UploadCollection reacts like a list for attachments, the API is close to the ListBase Interface.\nsap.m.ListMode.Delete mode is not supported and will be automatically set to sap.m.ListMode.None.\nIn addition, if instant upload is set to false the mode sap.m.ListMode.MultiSelect is not supported and will be automatically set to sap.m.ListMode.None.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ListMode"},"getToolbar":{"!description":"Gets content of aggregation <code>toolbar<\/code>.\n\nSpecifies the toolbar.","!static":false,"!category":"function","!type":"fn() -> sap.m.OverflowToolbar"},"detachUploadTerminated":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>uploadTerminated<\/code> event of this <code>sap.m.UploadCollection<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.UploadCollection","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getSelectedItem":{"!description":"Returns selected UploadCollectionItem.","!static":false,"!category":"function","!type":"fn() -> sap.m.UploadCollectionItem"},"insertHeaderParameter":{"!description":"Inserts a headerParameter into the aggregation <code>headerParameters<\/code>.","!static":false,"!category":"function","!type":"fn(oHeaderParameter: sap.m.UploadCollectionParameter, iIndex: Number) -> sap.m.UploadCollection","parameters":{"oHeaderParameter":"type: sap.m.UploadCollectionParameter, description: the headerParameter to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the headerParameter should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the headerParameter is inserted at position 0; for a value\n             greater than the current size of the aggregation, the headerParameter is inserted at\n             the last position"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.UploadCollection.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachFilenameLengthExceed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>filenameLengthExceed<\/code> event of this <code>sap.m.UploadCollection<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.UploadCollection<\/code> itself.\n\nThe event is triggered when the name of a chosen file is longer than the value specified with the maximumFilenameLength property (only if provided by the application).","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.UploadCollection","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.UploadCollection<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.m.UploadCollection<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.UploadCollection<\/code> itself.\n\nThe event is triggered when files are selected in the FileUploader dialog. Applications can set parameters and headerParameters which will be dispatched to the embedded FileUploader control.\nLimitation: parameters and headerParameters are not supported by Internet Explorer 9.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.UploadCollection","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.UploadCollection<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.UploadCollectionItem]"},"downloadItem":{"!description":"Downloads the given item.\nThis function delegates to {sap.m.UploadCollectionItem.download}.","!static":false,"!category":"function","!type":"fn(uploadCollectionItem: sap.m.UploadCollectionItem, askForLocation: Boolean) -> Boolean","parameters":{"uploadCollectionItem":"type: sap.m.UploadCollectionItem, description: The item to download. This parameter is mandatory.","askForLocation":"type: boolean, description: Decides whether to ask for a location to download or not."}},"getUploadUrl":{"!description":"Gets current value of property <code>uploadUrl<\/code>.\n\nSpecifies the URL where the uploaded files have to be stored.\n\nDefault value is <code>../../../upload<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"selectAll":{"!description":"Select all items in \"MultiSelection\" mode.","!static":false,"!category":"function","!type":"fn() -> sap.m.UploadCollection"},"detachFileSizeExceed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>fileSizeExceed<\/code> event of this <code>sap.m.UploadCollection<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.UploadCollection","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!helpDescription":"This control allows you to upload single or multiple files from your devices (desktop, tablet or phone) and attach them to the application.\n\nThe consuming application needs to take into account that the consistency checks of the model during the upload of the file need to be performed, for example, if the user is editing or deleting a file.","attachUploadComplete":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>uploadComplete<\/code> event of this <code>sap.m.UploadCollection<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.UploadCollection<\/code> itself.\n\nThe event is triggered as soon as the upload request is completed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.UploadCollection","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.UploadCollection<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setInstantUpload":{"!description":"Sets a new value for property <code>instantUpload<\/code>.\n\nIf false, no upload is triggered when a file is selected. In addition, if a file was selected, a new FileUploader instance is created to ensure that multiple files from multiple folders can be chosen.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bInstantUpload: Boolean) -> sap.m.UploadCollection","parameters":{"bInstantUpload":"type: boolean, description: New value for property <code>instantUpload<\/code>"}},"attachFileDeleted":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>fileDeleted<\/code> event of this <code>sap.m.UploadCollection<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.UploadCollection<\/code> itself.\n\nThe event is triggered when an uploaded attachment is selected and the Delete button is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.UploadCollection","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.UploadCollection<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"insertParameter":{"!description":"Inserts a parameter into the aggregation <code>parameters<\/code>.","!static":false,"!category":"function","!type":"fn(oParameter: sap.m.UploadCollectionParameter, iIndex: Number) -> sap.m.UploadCollection","parameters":{"oParameter":"type: sap.m.UploadCollectionParameter, description: the parameter to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the parameter should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the parameter is inserted at position 0; for a value\n             greater than the current size of the aggregation, the parameter is inserted at\n             the last position"}},"detachBeforeUploadStarts":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beforeUploadStarts<\/code> event of this <code>sap.m.UploadCollection<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.UploadCollection","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireUploadTerminated":{"!description":"Fires event <code>uploadTerminated<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>fileName<\/code> of type <code>string<\/code>Specifies the name of the file of which the upload is to be terminated.<\/li>\n<li><code>getHeaderParameter<\/code> of type <code>function<\/code>This callback function returns the corresponding header parameter (type sap.m.UploadCollectionParameter) if available.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.UploadCollection","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.m.UploadCollectionItem) -> sap.m.UploadCollectionItem","parameters":{"vItem":"type: int|string|sap.m.UploadCollectionItem, description: The itemto remove or its index or id"}},"removeHeaderParameter":{"!description":"Removes a headerParameter from the aggregation <code>headerParameters<\/code>.","!static":false,"!category":"function","!type":"fn(vHeaderParameter: Number | String | sap.m.UploadCollectionParameter) -> sap.m.UploadCollectionParameter","parameters":{"vHeaderParameter":"type: int|string|sap.m.UploadCollectionParameter, description: The headerParameterto remove or its index or id"}},"fireSelectionChange":{"!description":"Fires event <code>selectionChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selectedItem<\/code> of type <code>sap.m.UploadCollectionItem<\/code>The item whose selection has changed. In <code>MultiSelect<\/code> mode, only the selected item upmost is returned. This parameter can be used for single-selection modes.<\/li>\n<li><code>selectedItems<\/code> of type <code>sap.m.UploadCollectionItem[]<\/code>Array of items whose selection has changed. This parameter can be used for <code>MultiSelect<\/code> mode.<\/li>\n<li><code>selected<\/code> of type <code>boolean<\/code>Indicates whether the <code>listItem<\/code> parameter is selected or not.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.UploadCollection","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setNoDataText":{"!description":"Sets a new value for property <code>noDataText<\/code>.\n\nAllows you to set your own text for the 'No data' text label.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNoDataText: String) -> sap.m.UploadCollection","parameters":{"sNoDataText":"type: string, description: New value for property <code>noDataText<\/code>"}},"!proto":"sap.ui.core.Control","!category":"class","addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.UploadCollectionItem) -> sap.m.UploadCollection","parameters":{"oItem":"type: sap.m.UploadCollectionItem, description: the item to add; if empty, nothing is inserted"}},"detachFileRenamed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>fileRenamed<\/code> event of this <code>sap.m.UploadCollection<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.UploadCollection","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new UploadCollection.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFileType fileType} : string[]<\/li>\n<li>{@link #getMaximumFilenameLength maximumFilenameLength} : int<\/li>\n<li>{@link #getMaximumFileSize maximumFileSize} : float<\/li>\n<li>{@link #getMimeType mimeType} : string[]<\/li>\n<li>{@link #getMultiple multiple} : boolean (default: false)<\/li>\n<li>{@link #getNoDataText noDataText} : string<\/li>\n<li>{@link #getSameFilenameAllowed sameFilenameAllowed} : boolean (default: false)<\/li>\n<li>{@link #getShowSeparators showSeparators} : sap.m.ListSeparators (default: All)<\/li>\n<li>{@link #getUploadEnabled uploadEnabled} : boolean (default: true)<\/li>\n<li>{@link #getUploadUrl uploadUrl} : string (default: ../../../upload)<\/li>\n<li>{@link #getInstantUpload instantUpload} : boolean (default: true)<\/li>\n<li>{@link #getNumberOfAttachmentsText numberOfAttachmentsText} : string<\/li>\n<li>{@link #getMode mode} : sap.m.ListMode (default: None)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.UploadCollectionItem[] (default)<\/li>\n<li>{@link #getHeaderParameters headerParameters} : sap.m.UploadCollectionParameter[]<\/li>\n<li>{@link #getParameters parameters} : sap.m.UploadCollectionParameter[]<\/li>\n<li>{@link #getToolbar toolbar} : sap.m.OverflowToolbar<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:fileDeleted fileDeleted} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:filenameLengthExceed filenameLengthExceed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:fileRenamed fileRenamed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:fileSizeExceed fileSizeExceed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:typeMissmatch typeMissmatch} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:uploadComplete uploadComplete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:uploadTerminated uploadTerminated} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeUploadStarts beforeUploadStarts} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getSelectedItems":{"!description":"Returns an array containing the selected UploadCollectionItems.","!static":false,"!category":"function","!type":"fn() -> [sap.m.UploadCollectionItem]"},"detachSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>selectionChange<\/code> event of this <code>sap.m.UploadCollection<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.UploadCollection","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"bindItems":{"!description":"Binds aggregation <code>items<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.UploadCollection","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"removeParameter":{"!description":"Removes a parameter from the aggregation <code>parameters<\/code>.","!static":false,"!category":"function","!type":"fn(vParameter: Number | String | sap.m.UploadCollectionParameter) -> sap.m.UploadCollectionParameter","parameters":{"vParameter":"type: int|string|sap.m.UploadCollectionParameter, description: The parameterto remove or its index or id"}},"setFileType":{"!description":"Sets a new value for property <code>fileType<\/code>.\n\nDefines the allowed file types for the upload.\nThe chosen files will be checked against an array of file types.\nIf at least one file does not fit the file type requirements, the upload is prevented.  Example: [\"jpg\", \"png\", \"bmp\"].\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFileType: [String]) -> sap.m.UploadCollection","parameters":{"sFileType":"type: string[], description: New value for property <code>fileType<\/code>"}},"getMimeType":{"!description":"Gets current value of property <code>mimeType<\/code>.\n\nDefines the allowed MIME types of files to be uploaded.\nThe chosen files will be checked against an array of MIME types.\nIf at least one file does not fit the MIME type requirements, the upload is prevented.\nThis property is not supported by Internet Explorer 8 and 9. Example: mimeType [\"image/png\", \"image/jpeg\"].","!static":false,"!category":"function","!type":"fn() -> [String]"},"attachUploadTerminated":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>uploadTerminated<\/code> event of this <code>sap.m.UploadCollection<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.UploadCollection<\/code> itself.\n\nThe event is triggered as soon as the upload request was terminated by the user.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.UploadCollection","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.UploadCollection<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireTypeMissmatch":{"!description":"Fires event <code>typeMissmatch<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>documentId<\/code> of type <code>string<\/code>An unique Id of the attached document.\nThis parameter is deprecated since version 1.28.0, use parameter files instead.<\/li>\n<li><code>fileType<\/code> of type <code>string<\/code>File type.\nThis parameter is deprecated since version 1.28.0, use parameter files instead.<\/li>\n<li><code>mimeType<\/code> of type <code>string<\/code>MIME type.\nThis parameter is deprecated since version 1.28.0, use parameter files instead.<\/li>\n<li><code>files<\/code> of type <code>object[]<\/code>A FileList of individually selected files from the underlying system.\nLimitation: Internet Explorer 9 supports only single file.\nSince version 1.28.0.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.UploadCollection","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"fireFileSizeExceed":{"!description":"Fires event <code>fileSizeExceed<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>documentId<\/code> of type <code>string<\/code>An unique Id of the attached document.\nThis parameter is deprecated since version 1.28.0, use parameter files instead.<\/li>\n<li><code>fileSize<\/code> of type <code>string<\/code>The size in MB of a file to be uploaded.\nThis parameter is deprecated since version 1.28.0, use parameter files instead.<\/li>\n<li><code>files<\/code> of type <code>object[]<\/code>A FileList of individually selected files from the underlying system.\nLimitation: Internet Explorer 9 supports only single file with property file.name.\nSince version 1.28.0.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.UploadCollection","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setSameFilenameAllowed":{"!description":"Sets a new value for property <code>sameFilenameAllowed<\/code>.\n\nAllows the user to use the same name for a file when editing the file name. 'Same name' refers to an already existing file name in the list.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSameFilenameAllowed: Boolean) -> sap.m.UploadCollection","parameters":{"bSameFilenameAllowed":"type: boolean, description: New value for property <code>sameFilenameAllowed<\/code>"}},"setUploadUrl":{"!description":"Sets a new value for property <code>uploadUrl<\/code>.\n\nSpecifies the URL where the uploaded files have to be stored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>../../../upload<\/code>.","!static":false,"!category":"function","!type":"fn(sUploadUrl: String) -> sap.m.UploadCollection","parameters":{"sUploadUrl":"type: string, description: New value for property <code>uploadUrl<\/code>"}},"attachFileSizeExceed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>fileSizeExceed<\/code> event of this <code>sap.m.UploadCollection<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.UploadCollection<\/code> itself.\n\nThe event is triggered when the file size of an uploaded file is exceeded (only if the maxFileSize property was provided by the application).\nThis event is not supported by Internet Explorer 9.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.UploadCollection","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.UploadCollection<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setUploadEnabled":{"!description":"Sets a new value for property <code>uploadEnabled<\/code>.\n\nEnables the upload of a file.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUploadEnabled: Boolean) -> sap.m.UploadCollection","parameters":{"bUploadEnabled":"type: boolean, description: New value for property <code>uploadEnabled<\/code>"}},"setToolbar":{"!description":"Sets the aggregated <code>toolbar<\/code>.","!static":false,"!category":"function","!type":"fn(oToolbar: sap.m.OverflowToolbar) -> sap.m.UploadCollection","parameters":{"oToolbar":"type: sap.m.OverflowToolbar, description: The toolbar to set"}},"destroyToolbar":{"!description":"Destroys the toolbar in the aggregation <code>toolbar<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.UploadCollection"},"setNumberOfAttachmentsText":{"!description":"Sets a new value for property <code>numberOfAttachmentsText<\/code>.\n\nSets the title text in the toolbar of the list of attachments.\nTo show as well the number of attachments in brackets like the default text does. The number of attachments could be retrieved via \"getItems().length\".\nIf a new title is set, the default is deactivated.\nThe default value is set to language-dependent \"Attachments (n)\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNumberOfAttachmentsText: String) -> sap.m.UploadCollection","parameters":{"sNumberOfAttachmentsText":"type: string, description: New value for property <code>numberOfAttachmentsText<\/code>"}},"setSelectedItemById":{"!description":"Sets a UploadCollectionItem to be selected by id. In single mode, the method removes the previous selection.","!static":false,"!category":"function","!type":"fn(id: String, select: Boolean) -> sap.m.UploadCollection","parameters":{"select":"type: boolean, description: Sets selected status of the item. Default value is true.","id":"type: string, description: The id of the item whose selection to be changed."}},"detachUploadComplete":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>uploadComplete<\/code> event of this <code>sap.m.UploadCollection<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.UploadCollection","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.UploadCollectionItem, iIndex: Number) -> sap.m.UploadCollection","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position","oItem":"type: sap.m.UploadCollectionItem, description: the item to insert; if empty, nothing is inserted"}}},"sap.m.DateRangeSelection":{"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"setDateValue":{"!description":"Setter for property <code>dateValue<\/code>.\n\nThe start date of the range as JavaScript Date object. This is independent from any formatter.\n\n<b>Note:<\/b> If this property is used, the <code>value<\/code> property should not be changed from the caller.","!static":false,"!category":"function","!type":"fn(oDateValue: Object) -> sap.m.DatePicker","parameters":{"oDateValue":"type: object, description: New value for property <code>dateValue<\/code>"}},"!proto":"sap.m.DatePicker","!category":"class","setSecondDateValue":{"!description":"Sets a new value for property <code>secondDateValue<\/code>.\n\nThe end date of the range as JavaScript Date object. This is independent from any formatter.\n\n<b>Note:<\/b> If this property is used, the <code>value<\/code> property should not be changed from the caller.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oSecondDateValue: Object) -> sap.m.DateRangeSelection","parameters":{"oSecondDateValue":"type: object, description: New value for property <code>secondDateValue<\/code>"}},"!constructorDescription":"Constructor for a new DateRangeSelection.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDelimiter delimiter} : string (default: -)<\/li>\n<li>{@link #getSecondDateValue secondDateValue} : object<\/li>\n<li>{@link #getFrom from} : object<\/li>\n<li>{@link #getTo to} : object<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.DatePicker#constructor sap.m.DatePicker}\ncan be used as well.","setDelimiter":{"!description":"Sets a new value for property <code>delimiter<\/code>.\n\nDelimiter between start and end date. Default value is \"-\".\nIf no delimiter is given, the one defined for the used locale is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-<\/code>.","!static":false,"!category":"function","!type":"fn(sDelimiter: String) -> sap.m.DateRangeSelection","parameters":{"sDelimiter":"type: string, description: New value for property <code>delimiter<\/code>"}},"setValueFormat":{"!description":"Setter for property <code>valueFormat<\/code>.\n\n<b>Note:<\/b> Property <code>valueFormat<\/code> is not supported in the <code>sap.m.DateRangeSelection<\/code> control.","!static":false,"!category":"function","!type":"fn(sValueFormat: String) -> sap.m.DateRangeSelection","parameters":{"sValueFormat":"type: string, description: New value for property valueFormat"}},"getFrom":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22.0 Use <code>dateValue<\/code> instead.<br>Gets current value of property <code>from<\/code>.\n\nStart date of the range.","!static":false,"!category":"function","!type":"fn() -> Object"},"!description":"This is a date range input control with a calendar as date picker.\n\nA date range can be entered using a calendar that opens in a popup. Alternatively a value can be entered directly in the input field by typing it in.\n(This is only possible on desktop devices, on mobile devices keyboard input is not possible.)\nIf a date range is entered by typing it into the input field, it must fit to the used date format and locale. (See <code>sap.ui.core.format.DateFormat<\/code>)\n\nThere are two options to provide a date for the <code>DateRangeSelection<\/code>.\nYou can put a date range as a string to the property <code>value<\/code> or you can put JavaScript Date objects to the properties <code>dateValue<\/code> and <code>secondDateValue<\/code>.\nOnly one of the properties should be used at one time, but they are synchronized internally.\nWhat property to use depends on the use case of the application.\n<ul>\n<li>Use the <code>value<\/code> property if the date range is already provided as a formatted string.<\/li>\n<li>Use the <code>dateValue<\/code> and <code>secondDateValue<\/code> properties if the date range is already provided as JavaScript Date objects or you want to work with JavaScript Date objects.<\/li>\n<\/ul>\n\nAll formatting and parsing of dates from and to strings is done using the {@link sap.ui.core.format.DateFormat}, so read the corresponding documentation if you need some information about this.\n\nSupported format options are pattern-based on Unicode LDML Date Format notation. {@link http://unicode.org/reports/tr35/#Date_Field_Symbol_Table}\n\nFor example, if the <code>displayFormat<\/code> is \"MMM d, y\", <code>delimiter<\/code> is \"-\" and the used locale is English,\na valid <code>value<\/code> string is \"Jul 29, 2015 - Jul 31, 2015\" and it will be displayed in the same way in the input field.\n\nIf no <code>placeholder<\/code> is set to the <code>DatePicker<\/code> the used <code>displayFormat<\/code> is shown as placeholder.\nIf another placeholder is needed, it must be set.\n\nInternally the <code>sap.ui.unified.Calendar<\/code> is used, but it is only needed if the <code>DateRangeSelection<\/code> is opened. This means that it is not needed for the initial rendering.\nIf the <code>sap.ui.unified<\/code> library is not loaded before the <code>DateRangeSelection<\/code> is opened, it will be loaded upon opening.\nThis could lead to a waiting time before a <code>DateRangeSelection<\/code> is opened the first time. To prevent this, applications using the <code>DateRangeSelection<\/code> should also load\nthe <code>sap.ui.unified<\/code> library.","init":{"!description":"This file defines behavior for the control","!static":false,"!category":"function","!type":"fn()"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.DateRangeSelection.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getValueFormat":{"!description":"Getter for property <code>valueFormat<\/code>.\n\n<b>Note:<\/b> Property <code>valueFormat<\/code> is not supported in the <code>sap.m.DateRangeSelection<\/code> control.","!static":false,"!category":"function","!type":"fn() -> String"},"setFrom":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22.0 Use <code>dateValue<\/code> instead.<br>Sets a new value for property <code>from<\/code>.\n\nStart date of the range.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oFrom: Object) -> sap.m.DateRangeSelection","parameters":{"oFrom":"type: object, description: New value for property <code>from<\/code>"}},"getTo":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22.0 Use <code>secondDateValue<\/code> instead.<br>Gets current value of property <code>to<\/code>.\n\nEnd date of the range.","!static":false,"!category":"function","!type":"fn() -> Object"},"fireChange":{"!description":"Fire event change to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'value' of type <code>string<\/code> The new value of the <code>sap.m.DateRangeSelection<\/code>.<\/li>\n<li>'valid' of type <code>boolean<\/code> Indicator for a valid date.<\/li>\n<li>'from' of type <code>object<\/code> Current start date after change.<\/li>\n<li>'to' of type <code>object<\/code> Current end date after change.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.DateRangeSelection","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event."}},"getDelimiter":{"!description":"Gets current value of property <code>delimiter<\/code>.\n\nDelimiter between start and end date. Default value is \"-\".\nIf no delimiter is given, the one defined for the used locale is used.\n\nDefault value is <code>-<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.m.DateRangeSelection with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.DatePicker.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getValue":{"!description":"Getter for property <code>value<\/code>.\n\nReturns a date as a string in the format defined in property <code>displayFormat<\/code>.\n\n<b>Note:<\/b> As the value string always used the <code>displayFormat<\/code>, it is both locale-dependent and calendar-type-dependent.\n\nIf this property is used, the <code>dateValue<\/code> property should not be changed from the caller.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/m/DateRangeSelection","!helpDescription":"This is a date range input control with a calendar as date picker.\n\nA date range can be entered using a calendar that opens in a popup. Alternatively a value can be entered directly in the input field by typing it in.\n(This is only possible on desktop devices, on mobile devices keyboard input is not possible.)\nIf a date range is entered by typing it into the input field, it must fit to the used date format and locale. (See <code>sap.ui.core.format.DateFormat<\/code>)\n\nThere are two options to provide a date for the <code>DateRangeSelection<\/code>.\nYou can put a date range as a string to the property <code>value<\/code> or you can put JavaScript Date objects to the properties <code>dateValue<\/code> and <code>secondDateValue<\/code>.\nOnly one of the properties should be used at one time, but they are synchronized internally.\nWhat property to use depends on the use case of the application.\n<ul>\n<li>Use the <code>value<\/code> property if the date range is already provided as a formatted string.<\/li>\n<li>Use the <code>dateValue<\/code> and <code>secondDateValue<\/code> properties if the date range is already provided as JavaScript Date objects or you want to work with JavaScript Date objects.<\/li>\n<\/ul>\n\nAll formatting and parsing of dates from and to strings is done using the {@link sap.ui.core.format.DateFormat}, so read the corresponding documentation if you need some information about this.\n\nSupported format options are pattern-based on Unicode LDML Date Format notation. {@link http://unicode.org/reports/tr35/#Date_Field_Symbol_Table}\n\nFor example, if the <code>displayFormat<\/code> is \"MMM d, y\", <code>delimiter<\/code> is \"-\" and the used locale is English,\na valid <code>value<\/code> string is \"Jul 29, 2015 - Jul 31, 2015\" and it will be displayed in the same way in the input field.\n\nIf no <code>placeholder<\/code> is set to the <code>DatePicker<\/code> the used <code>displayFormat<\/code> is shown as placeholder.\nIf another placeholder is needed, it must be set.\n\nInternally the <code>sap.ui.unified.Calendar<\/code> is used, but it is only needed if the <code>DateRangeSelection<\/code> is opened. This means that it is not needed for the initial rendering.\nIf the <code>sap.ui.unified<\/code> library is not loaded before the <code>DateRangeSelection<\/code> is opened, it will be loaded upon opening.\nThis could lead to a waiting time before a <code>DateRangeSelection<\/code> is opened the first time. To prevent this, applications using the <code>DateRangeSelection<\/code> should also load\nthe <code>sap.ui.unified<\/code> library.","getSecondDateValue":{"!description":"Gets current value of property <code>secondDateValue<\/code>.\n\nThe end date of the range as JavaScript Date object. This is independent from any formatter.\n\n<b>Note:<\/b> If this property is used, the <code>value<\/code> property should not be changed from the caller.","!static":false,"!category":"function","!type":"fn() -> Object"},"setValue":{"!description":"Setter for property <code>value<\/code>.\n\nExpects a date as a string in the format defined in property <code>displayFormat<\/code>.\n\n<b>Note:<\/b> As the value string always used the <code>displayFormat<\/code>, it is both locale-dependent and calendar-type-dependent.\n\nIf this property is used, the <code>dateValue<\/code> property should not be changed from the caller.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.m.DatePicker","parameters":{"sValue":"type: string, description: The new value of the input."}},"setTo":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22.0 Use <code>secondDateValue<\/code> instead.<br>Sets a new value for property <code>to<\/code>.\n\nEnd date of the range.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oTo: Object) -> sap.m.DateRangeSelection","parameters":{"oTo":"type: object, description: New value for property <code>to<\/code>"}},"getDateValue":{"!description":"Getter for property <code>dateValue<\/code>.\n\nThe start date of the range as JavaScript Date object. This is independent from any formatter.\n\n<b>Note:<\/b> If this property is used, the <code>value<\/code> property should not be changed from the caller.","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.m.InputListItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.InputListItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.InputListItem"},"sap.m.BusyIndicator":{"setCustomIconDensityAware":{"!description":"Sets a new value for property <code>customIconDensityAware<\/code>.\n\nIf this is set to false, the src image will be loaded directly without attempting\nto fetch the density perfect image for high density device.\nBy default, this is set to true but then one or more requests are sent to the server,\ntrying to get the density perfect version of the specified image.\nIf bandwidth is the key for the application, set this value to false.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bCustomIconDensityAware: Boolean) -> sap.m.BusyIndicator","parameters":{"bCustomIconDensityAware":"type: boolean, description: New value for property <code>customIconDensityAware<\/code>"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getCustomIconHeight":{"!description":"Gets current value of property <code>customIconHeight<\/code>.\n\nHeight of the provided icon. By default 44px are used.\n\nDefault value is <code>44px<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","getCustomIconDensityAware":{"!description":"Gets current value of property <code>customIconDensityAware<\/code>.\n\nIf this is set to false, the src image will be loaded directly without attempting\nto fetch the density perfect image for high density device.\nBy default, this is set to true but then one or more requests are sent to the server,\ntrying to get the density perfect version of the specified image.\nIf bandwidth is the key for the application, set this value to false.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","setCustomIconWidth":{"!description":"Sets a new value for property <code>customIconWidth<\/code>.\n\nWidth of the provided icon. By default 44px are used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>44px<\/code>.","!static":false,"!category":"function","!type":"fn(sCustomIconWidth: sap.ui.core.CSSSize) -> sap.m.BusyIndicator","parameters":{"sCustomIconWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>customIconWidth<\/code>"}},"setCustomIconHeight":{"!description":"Sets a new value for property <code>customIconHeight<\/code>.\n\nHeight of the provided icon. By default 44px are used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>44px<\/code>.","!static":false,"!category":"function","!type":"fn(sCustomIconHeight: sap.ui.core.CSSSize) -> sap.m.BusyIndicator","parameters":{"sCustomIconHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>customIconHeight<\/code>"}},"!constructorDescription":"Constructor for a new BusyIndicator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getCustomIcon customIcon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getCustomIconRotationSpeed customIconRotationSpeed} : int (default: 1000)<\/li>\n<li>{@link #getCustomIconDensityAware customIconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getCustomIconWidth customIconWidth} : sap.ui.core.CSSSize (default: 44px)<\/li>\n<li>{@link #getCustomIconHeight customIconHeight} : sap.ui.core.CSSSize (default: 44px)<\/li>\n<li>{@link #getSize size} : sap.ui.core.CSSSize (default: 1rem)<\/li>\n<li>{@link #getDesign design} : string (default: auto)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.m.BusyIndicator","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"setCustomIconRotationSpeed":{"!description":"Sets a new value for property <code>customIconRotationSpeed<\/code>.\n\nDefines the rotation speed of the given image.\nIf a .gif is used, the speed has to be set to 0.\nThe unit is in ms.\n<b>Note:<\/b> Values are considered valid when greater than or equal to 0.\nIf invalid value is provided the speed defaults to 0.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1000<\/code>.","!static":false,"!category":"function","!type":"fn(iCustomIconRotationSpeed: Number) -> sap.m.BusyIndicator","parameters":{"iCustomIconRotationSpeed":"type: int, description: New value for property <code>customIconRotationSpeed<\/code>"}},"setSize":{"!description":"Sets a new value for property <code>size<\/code>.\n\nDefines the size of the busy indicator.\nThe animation consists of three circles, each of which will be this size.\nTherefore the total width of the control amounts to three times the given size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1rem<\/code>.","!static":false,"!category":"function","!type":"fn(sSize: sap.ui.core.CSSSize) -> sap.m.BusyIndicator","parameters":{"sSize":"type: sap.ui.core.CSSSize, description: New value for property <code>size<\/code>"}},"setCustomIcon":{"!description":"Sets a new value for property <code>customIcon<\/code>.\n\nIcon URL if an icon is used as the busy indicator.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sCustomIcon: sap.ui.core.URI) -> sap.m.BusyIndicator","parameters":{"sCustomIcon":"type: sap.ui.core.URI, description: New value for property <code>customIcon<\/code>"}},"getCustomIconWidth":{"!description":"Gets current value of property <code>customIconWidth<\/code>.\n\nWidth of the provided icon. By default 44px are used.\n\nDefault value is <code>44px<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!description":"Control to indicate that the system is busy with some task and the user has to wait.","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.BusyIndicator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nDefines text to be displayed below the busy indicator.\nIt can be used to inform the user of the current operation.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nOptions for the text direction are RTL and LTR.\nAlternatively, the control can inherit the text direction from its parent container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.m.BusyIndicator","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.BusyIndicator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getSize":{"!description":"Gets current value of property <code>size<\/code>.\n\nDefines the size of the busy indicator.\nThe animation consists of three circles, each of which will be this size.\nTherefore the total width of the control amounts to three times the given size.\n\nDefault value is <code>1rem<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!module":"sap/m/BusyIndicator","getCustomIcon":{"!description":"Gets current value of property <code>customIcon<\/code>.\n\nIcon URL if an icon is used as the busy indicator.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getDesign":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.1 undefined<br>Gets current value of property <code>design<\/code>.\n\nSetting this property will not have any effect on the appearance of the BusyIndicator\nin versions greater than or equal to 1.32.1\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"Control to indicate that the system is busy with some task and the user has to wait.","getCustomIconRotationSpeed":{"!description":"Gets current value of property <code>customIconRotationSpeed<\/code>.\n\nDefines the rotation speed of the given image.\nIf a .gif is used, the speed has to be set to 0.\nThe unit is in ms.\n<b>Note:<\/b> Values are considered valid when greater than or equal to 0.\nIf invalid value is provided the speed defaults to 0.\n\nDefault value is <code>1000<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setDesign":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.1 undefined<br>Sets a new value for property <code>design<\/code>.\n\nSetting this property will not have any effect on the appearance of the BusyIndicator\nin versions greater than or equal to 1.32.1\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn(sDesign: String) -> sap.m.BusyIndicator","parameters":{"sDesign":"type: string, description: New value for property <code>design<\/code>"}},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nOptions for the text direction are RTL and LTR.\nAlternatively, the control can inherit the text direction from its parent container.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nDefines text to be displayed below the busy indicator.\nIt can be used to inform the user of the current operation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.m.BusyIndicator","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.m.ImageHelper":{"!description":"Helper for Images.","!module":"sap/m/library","!helpDescription":"Helper for Images.","!category":"namespace","getImageControl":{"!description":"Creates or updates an image control.","!static":"true","!category":"function","!type":"fn(sImgId: String, oImageControl: sap.m.Image, oParent: sap.ui.core.Control, mProperties: Map, aCssClassesToAdd: Array, aCssClassesToRemove: Array)"}},"sap.m.P13nConditionPanel":{"setAutoAddNewRow":{"!description":"Sets a new value for property <code>autoAddNewRow<\/code>.\n\nadds initial a new empty condition row\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bAutoAddNewRow: Boolean) -> sap.m.P13nConditionPanel","parameters":{"bAutoAddNewRow":"type: boolean, description: New value for property <code>autoAddNewRow<\/code>"}},"getDisableFirstRemoveIcon":{"!description":"Gets current value of property <code>disableFirstRemoveIcon<\/code>.\n\nmakes the remove icon on the first condition row disabled when only one condition exist.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMaxConditions":{"!description":"Gets current value of property <code>maxConditions<\/code>.\n\ndefines the max number of conditions on the ConditionPanel\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setDisableFirstRemoveIcon":{"!description":"Sets a new value for property <code>disableFirstRemoveIcon<\/code>.\n\nmakes the remove icon on the first condition row disabled when only one condition exist.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bDisableFirstRemoveIcon: Boolean) -> sap.m.P13nConditionPanel","parameters":{"bDisableFirstRemoveIcon":"type: boolean, description: New value for property <code>disableFirstRemoveIcon<\/code>"}},"!proto":"sap.ui.core.Control","!category":"class","setOperations":{"!description":"setter for the supported operations which we show per condition row. This array of \"default\" operations will only be used when we do not have\non the keyfield itself some specific operations and a keyfield is of not of type date or numeric.","!static":false,"!category":"function","!type":"fn(aOperations: [sap.m.P13nConditionOperation], sType: String)","parameters":{"sType":"type: string, description: defines the type for which this operations will be used. is sType is not defined the operations will be used as default\n       operations.","aOperations":"type: sap.m.P13nConditionOperation[], description: array of operations [sap.m.P13nConditionOperation.BT, sap.m.P13nConditionOperation.EQ]"}},"addCondition":{"!description":"add a single condition.","!static":false,"!category":"function","!type":"fn(oCondition: Object)","parameters":{"oCondition":"type: object, description: the new condition of type { \"key\": \"007\", \"operation\": sap.m.P13nConditionOperation.Ascending, \"keyField\":\n       \"keyFieldKey\", \"value1\": \"\", \"value2\": \"\"};"}},"setAutoReduceKeyFieldItems":{"!description":"Sets a new value for property <code>autoReduceKeyFieldItems<\/code>.\n\nKeyField value can only be selected once. When you set the property to true the ConditionPanel will automatically offers on the\nKeyField drop down only the keyFields which are not used. The default behavior is that in each keyField dropdown all keyfields are\nlisted.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bAutoReduceKeyFieldItems: Boolean) -> sap.m.P13nConditionPanel","parameters":{"bAutoReduceKeyFieldItems":"type: boolean, description: New value for property <code>autoReduceKeyFieldItems<\/code>"}},"setValidationExecutor":{"!description":"Sets a new value for property <code>validationExecutor<\/code>.\n\nCalls the validation listener tbd...\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oValidationExecutor: Object) -> sap.m.P13nConditionPanel","parameters":{"oValidationExecutor":"type: object, description: New value for property <code>validationExecutor<\/code>"}},"getAutoReduceKeyFieldItems":{"!description":"Gets current value of property <code>autoReduceKeyFieldItems<\/code>.\n\nKeyField value can only be selected once. When you set the property to true the ConditionPanel will automatically offers on the\nKeyField drop down only the keyFields which are not used. The default behavior is that in each keyField dropdown all keyfields are\nlisted.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowLabel":{"!description":"Sets a new value for property <code>showLabel<\/code>.\n\nshow additional labels in the condition\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowLabel: Boolean) -> sap.m.P13nConditionPanel","parameters":{"bShowLabel":"type: boolean, description: New value for property <code>showLabel<\/code>"}},"detachDataChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>dataChange<\/code> event of this <code>sap.m.P13nConditionPanel<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.P13nConditionPanel","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new P13nConditionPanel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMaxConditions maxConditions} : string (default: -1)<\/li>\n<li>{@link #getExclude exclude} : boolean (default: false)<\/li>\n<li>{@link #getContainerQuery containerQuery} : boolean (default: false)<\/li>\n<li>{@link #getAutoAddNewRow autoAddNewRow} : boolean (default: false)<\/li>\n<li>{@link #getDisableFirstRemoveIcon disableFirstRemoveIcon} : boolean (default: false)<\/li>\n<li>{@link #getAlwaysShowAddIcon alwaysShowAddIcon} : boolean (default: true)<\/li>\n<li>{@link #getUsePrevConditionSetting usePrevConditionSetting} : boolean (default: true)<\/li>\n<li>{@link #getAutoReduceKeyFieldItems autoReduceKeyFieldItems} : boolean (default: false)<\/li>\n<li>{@link #getLayoutMode layoutMode} : string<\/li>\n<li>{@link #getShowLabel showLabel} : boolean (default: false)<\/li>\n<li>{@link #getDisplayFormat displayFormat} : string<\/li>\n<li>{@link #getValidationExecutor validationExecutor} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:dataChange dataChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setConditions":{"!description":"This method must be used to assign a list of conditions.","!static":false,"!category":"function","!type":"fn(aConditions: [Object])","parameters":{"aConditions":"type: object[], description: array of Conditions."}},"insertCondition":{"!description":"insert a single condition.","!static":false,"!category":"function","!type":"fn(oCondition: Object, index: Number)","parameters":{"index":"type: int, description: of the new condition","oCondition":"type: object, description: the new condition of type { \"key\": \"007\", \"operation\": sap.m.P13nConditionOperation.Ascending, \"keyField\":\n       \"keyFieldKey\", \"value1\": \"\", \"value2\": \"\"};"}},"getValidationExecutor":{"!description":"Gets current value of property <code>validationExecutor<\/code>.\n\nCalls the validation listener tbd...","!static":false,"!category":"function","!type":"fn() -> Object"},"getAlwaysShowAddIcon":{"!description":"Gets current value of property <code>alwaysShowAddIcon<\/code>.\n\nmakes the Add icon visible on each condition row. If is set to false the Add is only visible at the end and you can only append a\nnew condition.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getKeyFields":{"!description":"getter for KeyFields array","!static":false,"!category":"function","!type":"fn() -> [Object]"},"setKeyFields":{"!description":"This method allows you to specify the KeyFields for the conditions. You can set an array of object with Key and Text properties to define the\nkeyfields.","!static":false,"!category":"function","!type":"fn(aKeyFields: Array)","parameters":{"aKeyFields":"type: array, description: array of KeyFields [{key: \"CompanyCode\", text: \"ID\"}, {key:\"CompanyName\", text : \"Name\"}]"}},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getAutoAddNewRow":{"!description":"Gets current value of property <code>autoAddNewRow<\/code>.\n\nadds initial a new empty condition row\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.P13nConditionPanel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getOperations":{"!description":"returns the default array of operations","!static":false,"!category":"function","!type":"fn(sType: String) -> [sap.m.P13nConditionOperation]","parameters":{"sType":"type: string, description: defines the type for which the operations should be returned."}},"removeAllKeyFields":{"!description":"removes all KeyFields","!static":false,"!category":"function","!type":"fn()"},"setMaxConditions":{"!description":"Sets a new value for property <code>maxConditions<\/code>.\n\ndefines the max number of conditions on the ConditionPanel\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn(sMaxConditions: String) -> sap.m.P13nConditionPanel","parameters":{"sMaxConditions":"type: string, description: New value for property <code>maxConditions<\/code>"}},"addOperation":{"!description":"add a single operation","!static":false,"!category":"function","!type":"fn(oOperation: sap.m.P13nConditionOperation, sType: String)","parameters":{"sType":"type: string, description: defines the type for which this operations will be used.","oOperation":"type: sap.m.P13nConditionOperation, description: undefined"}},"getShowLabel":{"!description":"Gets current value of property <code>showLabel<\/code>.\n\nshow additional labels in the condition\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setExclude":{"!description":"Sets a new value for property <code>exclude<\/code>.\n\nexclude options for filter\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bExclude: Boolean) -> sap.m.P13nConditionPanel","parameters":{"bExclude":"type: boolean, description: New value for property <code>exclude<\/code>"}},"getUsePrevConditionSetting":{"!description":"Gets current value of property <code>usePrevConditionSetting<\/code>.\n\nnew added condition use the settings from the previous condition as default.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getConditions":{"!description":"returns array of all defined conditions.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"getExclude":{"!description":"Gets current value of property <code>exclude<\/code>.\n\nexclude options for filter\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setUsePrevConditionSetting":{"!description":"Sets a new value for property <code>usePrevConditionSetting<\/code>.\n\nnew added condition use the settings from the previous condition as default.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUsePrevConditionSetting: Boolean) -> sap.m.P13nConditionPanel","parameters":{"bUsePrevConditionSetting":"type: boolean, description: New value for property <code>usePrevConditionSetting<\/code>"}},"getContainerQuery":{"!description":"Gets current value of property <code>containerQuery<\/code>.\n\ndefines if the mediaQuery or a ContainerResize will be used for layout update. When the P13nConditionPanel is used on a dialog the\nproperty should be set to true!\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllOperations":{"!description":"remove all operations","!static":false,"!category":"function","!type":"fn(sType: String)","parameters":{"sType":"type: string, description: defines the type for which all operations should be removed"}},"extend":{"!description":"Creates a new subclass of class sap.m.P13nConditionPanel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setDisplayFormat":{"!description":"Sets a new value for property <code>displayFormat<\/code>.\n\nThis represents the displayFormat of the condition Values. With the value \"UpperCase\" the entered value of the condition will be\nconverted to upperCase.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDisplayFormat: String) -> sap.m.P13nConditionPanel","parameters":{"sDisplayFormat":"type: string, description: New value for property <code>displayFormat<\/code>"}},"removeCondition":{"!description":"remove a single condition.","!static":false,"!category":"function","!type":"fn(vCondition: Object)","parameters":{"vCondition":"type: object, description: is the condition which should be removed. can be either a string with the key of the condition of the condition\n       object itself."}},"fireDataChange":{"!description":"Fires event <code>dataChange<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.P13nConditionPanel","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getDisplayFormat":{"!description":"Gets current value of property <code>displayFormat<\/code>.\n\nThis represents the displayFormat of the condition Values. With the value \"UpperCase\" the entered value of the condition will be\nconverted to upperCase.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/m/P13nConditionPanel","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getLayoutMode":{"!description":"Gets current value of property <code>layoutMode<\/code>.\n\ncan be used to control the layout behavior. Default is \"\" which will automatically change the layout. With \"Desktop\", \"Table\"\nor\"Phone\" you can set a fixed layout.","!static":false,"!category":"function","!type":"fn() -> String"},"addKeyField":{"!description":"add a single KeyField","!static":false,"!category":"function","!type":"fn(oKeyField: Object)","parameters":{"oKeyField":"type: object, description: {key: \"CompanyCode\", text: \"ID\"}"}},"removeValidationErrors":{"!description":"removes all errors/warning states from the value1/2 fields of all conditions.","!static":false,"!category":"function","!type":"fn()"},"attachDataChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>dataChange<\/code> event of this <code>sap.m.P13nConditionPanel<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.P13nConditionPanel<\/code> itself.\n\nWorkaround for updating the binding","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.P13nConditionPanel","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.P13nConditionPanel<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeInvalidConditions":{"!description":"removes all invalid conditions.","!static":false,"!category":"function","!type":"fn()"},"removeAllConditions":{"!description":"remove all conditions.","!static":false,"!category":"function","!type":"fn()"}},"sap.m.QuickViewPage_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.QuickViewPage with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.QuickViewPage"},"sap.m.Image_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.Image with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.Image"},"sap.m.TablePersoDialog_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.TablePersoDialog with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.TablePersoDialog"},"sap.m.InputType":{"!description":"A subset of input types that fits to a simple API returning one string.\nNot available on purpose: button, checkbox, hidden, image, password, radio, range, reset, search, submit.","Email":{"!description":"A text field for specifying an email address. Brings up a keyboard optimized for email address entry.","!category":"enum","!type":"String"},"DatetimeLocale":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.9.1 Please use dedicated sap.m.DateTimeInput control with type \"DateTime\" to create date-time input.<br>An input control for specifying a date and time value where the format depends on the locale.","!category":"enum","!type":"String"},"!category":"static class","Text":{"!description":"default (text)","!category":"enum","!type":"String"},"Time":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.9.1 Please use dedicated sap.m.DateTimeInput control with type \"Time\" to create time input.<br>An input control for specifying a time value. The user can select the hour, minute, and optionally AM or PM.","!category":"enum","!type":"String"},"Date":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.9.1 Please use sap.m.DateTimeInput control with type \"Date\" to create date input.<br>An input control for specifying a date value. The user can select a month, day of the month, and year.","!category":"enum","!type":"String"},"Url":{"!description":"A text field for specifying a URL. Brings up a keyboard optimized for URL entry.","!category":"enum","!type":"String"},"Month":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.9.1 There is no cross-platform support. Please do not use this Input type.<br>An input control for selecting a month.","!category":"enum","!type":"String"},"!module":"sap/m/library","Number":{"!description":"A text field for specifying a number. Brings up a number pad keyboard. Specifying an input type of \\d* or [0-9]* is equivalent to using this type.","!category":"enum","!type":"String"},"Tel":{"!description":"A text field for specifying a phone number. Brings up a phone pad keyboard.","!category":"enum","!type":"String"},"Week":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.9.1 There is no cross-platform support. Please do not use this Input type.<br>An input control for selecting a week.","!category":"enum","!type":"String"},"Datetime":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.9.1 Please use dedicated sap.m.DateTimeInput control with type \"DateTime\" to create date-time input.<br>An input control for specifying a date and time value. The user can select a month, day of the month, year, and time of day.","!category":"enum","!type":"String"},"Password":{"!description":"Password input where the user entry cannot be seen.","!category":"enum","!type":"String"}},"sap.m.Wizard":{"attachStepActivate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>stepActivate<\/code> event of this <code>sap.m.Wizard<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Wizard<\/code> itself.\n\nThe StepActivated event is fired every time a new step is activated.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Wizard","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Wizard<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"addStep":{"!description":"Adds a new step to the Wizard.","!static":false,"!category":"function","!type":"fn(wizardStep: sap.m.WizardStep) -> sap.m.Wizard","parameters":{"wizardStep":"type: sap.m.WizardStep, description: New WizardStep to add to the Wizard"}},"previousStep":{"!description":"Discards the current step and goes one step back.","!static":false,"!category":"function","!type":"fn() -> sap.m.Wizard"},"!proto":"sap.ui.core.Control","getShowNextButton":{"!description":"Gets current value of property <code>showNextButton<\/code>.\n\nControls the visibility of the next button. The developers can choose to control the flow of the\nsteps either through the API (with <code>nextStep<\/code> and <code>previousStep<\/code> methods) or let the user click\nthe next button, and control it with <code>validateStep<\/code> or <code>invalidateStep<\/code> methods.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","removeStep":{"!description":"Dynamic step removal is not yet supported.","!static":false,"!category":"function","!type":"fn()"},"setEnableBranching":{"!description":"Sets a new value for property <code>enableBranching<\/code>.\n\nEnables the branching functionality of the Wizard.\nBranching gives the developer the ability to define multiple routes a user\nis able to take based on the input in the current step.\nIt is up to the developer to programatically check for what is the input in the\ncurrent step and set a concrete next step amongs the available subsequent steps.\nNote: If this property is set to false, <code>next<\/code> and <code>subSequentSteps<\/code>\nassociations of the WizardStep control are ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableBranching: Boolean) -> sap.m.Wizard","parameters":{"bEnableBranching":"type: boolean, description: New value for property <code>enableBranching<\/code>"}},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDetermines the width of the Wizard.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getProgress":{"!description":"Returns the number of the last activated step in the Wizard.","!static":false,"!category":"function","!type":"fn() -> Number"},"getFinishButtonText":{"!description":"Returns the finish button text which will be rendered.","!static":false,"!category":"function","!type":"fn() -> String"},"invalidateStep":{"!description":"Invalidates the given step.","!static":false,"!category":"function","!type":"fn(step: sap.m.WizardStep) -> sap.m.Wizard","parameters":{"step":"type: sap.m.WizardStep, description: The step to be invalidated."}},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nDetermines the height of the Wizard.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new Wizard.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getShowNextButton showNextButton} : boolean (default: true)<\/li>\n<li>{@link #getFinishButtonText finishButtonText} : string (default: Review)<\/li>\n<li>{@link #getEnableBranching enableBranching} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSteps steps} : sap.m.WizardStep[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:stepActivate stepActivate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:complete complete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","detachStepActivate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>stepActivate<\/code> event of this <code>sap.m.Wizard<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Wizard","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"removeAllSteps":{"!description":"Removes all steps from the Wizard.","!static":false,"!category":"function","!type":"fn() -> sap.m.Control"},"setFinishButtonText":{"!description":"Sets the text for the finish button. By default it is \"Review\".","!static":false,"!category":"function","!type":"fn(value: String) -> sap.m.Wizard","parameters":{"value":"type: string, description: The text of the finish button."}},"indexOfStep":{"!description":"Checks for the provided <code>sap.m.WizardStep<\/code> in the aggregation <code>steps<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oStep: sap.m.WizardStep) -> Number","parameters":{"oStep":"type: sap.m.WizardStep, description: The step whose index is looked for"}},"getSteps":{"!description":"Gets content of aggregation <code>steps<\/code>.\n\nThe wizard steps to be included in the content of the control.","!static":false,"!category":"function","!type":"fn() -> [sap.m.WizardStep]"},"getEnableBranching":{"!description":"Gets current value of property <code>enableBranching<\/code>.\n\nEnables the branching functionality of the Wizard.\nBranching gives the developer the ability to define multiple routes a user\nis able to take based on the input in the current step.\nIt is up to the developer to programatically check for what is the input in the\ncurrent step and set a concrete next step amongs the available subsequent steps.\nNote: If this property is set to false, <code>next<\/code> and <code>subSequentSteps<\/code>\nassociations of the WizardStep control are ignored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"The Wizard control enables users to accomplish a single goal\nwhich consists of multiple dependable sub-tasks.\nEach sub-task is provided in the form of a WizardStep.","detachComplete":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>complete<\/code> event of this <code>sap.m.Wizard<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Wizard","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.Wizard.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setShowNextButton":{"!description":"Sets the visiblity of the next button.","!static":false,"!category":"function","!type":"fn(value: Boolean) -> sap.m.Wizard","parameters":{"value":"type: boolean, description: True to show the button or false to hide it."}},"fireComplete":{"!description":"Fires event <code>complete<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Wizard","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"goToStep":{"!description":"Goes to the given step.","!static":false,"!category":"function","!type":"fn(step: sap.m.WizardStep, focusFirstStepElement: Boolean) -> sap.m.Wizard","parameters":{"focusFirstStepElement":"type: boolean, description: Defines whether the focus should be changed to the first element.","step":"type: sap.m.WizardStep, description: The step to go to."}},"discardProgress":{"!description":"Discards all progress done from the given step(incl.) to the end of the wizard.\nThe verified state of the steps is returned to the initial provided.","!static":false,"!category":"function","!type":"fn(step: sap.m.WizardStep) -> sap.m.Wizard","parameters":{"step":"type: sap.m.WizardStep, description: The step after which the progress is discarded."}},"fireStepActivate":{"!description":"Fires event <code>stepActivate<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>index<\/code> of type <code>int<\/code>The index of the activated step as a parameter. One-based.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Wizard","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nDetermines the height of the Wizard.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.m.Wizard","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDetermines the width of the Wizard.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.Wizard","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.Wizard with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"validateStep":{"!description":"Validates the given step.","!static":false,"!category":"function","!type":"fn(step: sap.m.WizardStep) -> sap.m.Wizard","parameters":{"step":"type: sap.m.WizardStep, description: The step to be validated."}},"insertStep":{"!description":"Dynamic step insertion is not yet supported.","!static":false,"!category":"function","!type":"fn()"},"!module":"sap/m/Wizard","!helpDescription":"The Wizard control enables users to accomplish a single goal\nwhich consists of multiple dependable sub-tasks.\nEach sub-task is provided in the form of a WizardStep.","destroySteps":{"!description":"Destroys all aggregated steps in the Wizard.","!static":false,"!category":"function","!type":"fn() -> sap.m.Wizard"},"getProgressStep":{"!description":"Returns the last activated step in the Wizard.","!static":false,"!category":"function","!type":"fn() -> sap.m.WizardStep"},"nextStep":{"!description":"Validates the current step, and moves one step further.","!static":false,"!category":"function","!type":"fn() -> sap.m.Wizard"},"attachComplete":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>complete<\/code> event of this <code>sap.m.Wizard<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Wizard<\/code> itself.\n\nThe complete event is fired when the user clicks the finish button of the Wizard.\nThe finish button is only available on the last step of the Wizard.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Wizard","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Wizard<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.m.Wizard_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.Wizard with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.Wizard"},"sap.m.SelectType":{"!description":"Enumeration for different Select types.","!module":"sap/m/library","IconOnly":{"!description":"Will show only the specified icon.","!category":"enum","!type":"String"},"!category":"static class","Default":{"!description":"Will show the text.","!category":"enum","!type":"String"}},"sap.m.ListHeaderDesign":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16 Has no functionality since 1.16.<br>Defines the different header styles.","Plain":{"!description":"Plain header style","!category":"enum","!type":"String"},"!module":"sap/m/library","!category":"static class","Standard":{"!description":"Standard header style","!category":"enum","!type":"String"}},"sap.m.semantic.ShareInJamAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.ShareInJamAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.ShareInJamAction"},"sap.m.P13nGroupItem":{"!description":"Type for <code>groupItems<\/code> aggregation in P13nGroupPanel control.","getMetadata":{"!description":"Returns a metadata object for class sap.m.P13nGroupItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.core.Item","!category":"class","getShowIfGrouped":{"!description":"Gets current value of property <code>showIfGrouped<\/code>.\n\nmake the grouped column as normalcolumn visible\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.m.P13nGroupItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getColumnKey":{"!description":"Gets current value of property <code>columnKey<\/code>.\n\nkey of the column","!static":false,"!category":"function","!type":"fn() -> String"},"setColumnKey":{"!description":"Sets a new value for property <code>columnKey<\/code>.\n\nkey of the column\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sColumnKey: String) -> sap.m.P13nGroupItem","parameters":{"sColumnKey":"type: string, description: New value for property <code>columnKey<\/code>"}},"!constructorDescription":"Constructor for a new P13nGroupItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getOperation operation} : string<\/li>\n<li>{@link #getColumnKey columnKey} : string<\/li>\n<li>{@link #getShowIfGrouped showIfGrouped} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","!module":"sap/m/P13nGroupItem","!helpDescription":"Type for <code>groupItems<\/code> aggregation in P13nGroupPanel control.","getOperation":{"!description":"Gets current value of property <code>operation<\/code>.\n\nsap.m.P13nConditionOperation","!static":false,"!category":"function","!type":"fn() -> String"},"setOperation":{"!description":"Sets a new value for property <code>operation<\/code>.\n\nsap.m.P13nConditionOperation\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sOperation: String) -> sap.m.P13nGroupItem","parameters":{"sOperation":"type: string, description: New value for property <code>operation<\/code>"}},"setShowIfGrouped":{"!description":"Sets a new value for property <code>showIfGrouped<\/code>.\n\nmake the grouped column as normalcolumn visible\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowIfGrouped: Boolean) -> sap.m.P13nGroupItem","parameters":{"bShowIfGrouped":"type: boolean, description: New value for property <code>showIfGrouped<\/code>"}}},"sap.m.FlexItemData":{"setBaseSize":{"!description":"Sets a new value for property <code>baseSize<\/code>.\n\nThe base size is the initial main size of the item for the flex algorithm. If set to \"auto\", this will be the computed size of the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn(sBaseSize: sap.ui.core.CSSSize) -> sap.m.FlexItemData","parameters":{"sBaseSize":"type: sap.ui.core.CSSSize, description: New value for property <code>baseSize<\/code>"}},"setMinWidth":{"!description":"Sets a new value for property <code>minWidth<\/code>.\n\nThe minimum height of the flex item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn(sMinWidth: sap.ui.core.CSSSize) -> sap.m.FlexItemData","parameters":{"sMinWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>minWidth<\/code>"}},"!proto":"sap.ui.core.LayoutData","getBackgroundDesign":{"!description":"Gets current value of property <code>backgroundDesign<\/code>.\n\nDefines the background style of the flex item.\n\nDefault value is <code>Transparent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.BackgroundDesign"},"setBackgroundDesign":{"!description":"Sets a new value for property <code>backgroundDesign<\/code>.\n\nDefines the background style of the flex item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Transparent<\/code>.","!static":false,"!category":"function","!type":"fn(sBackgroundDesign: sap.m.BackgroundDesign) -> sap.m.FlexItemData","parameters":{"sBackgroundDesign":"type: sap.m.BackgroundDesign, description: New value for property <code>backgroundDesign<\/code>"}},"!category":"class","getShrinkFactor":{"!description":"Gets current value of property <code>shrinkFactor<\/code>.\n\nThe shrink factor determines how much the flex item will shrink relative to the rest of the flex items in the flex container when negative free space is distributed.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getMaxWidth":{"!description":"Gets current value of property <code>maxWidth<\/code>.\n\nThe maximum height of the flex item.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setGrowFactor":{"!description":"Sets a new value for property <code>growFactor<\/code>.\n\nDetermines the flexibility of the flex item when allocatable space is remaining.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(fGrowFactor: Number) -> sap.m.FlexItemData","parameters":{"fGrowFactor":"type: float, description: New value for property <code>growFactor<\/code>"}},"getMinWidth":{"!description":"Gets current value of property <code>minWidth<\/code>.\n\nThe minimum height of the flex item.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new <code>sap.m.FlexItemData<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAlignSelf alignSelf} : sap.m.FlexAlignSelf (default: Auto)<\/li>\n<li>{@link #getOrder order} : int (default: 0)<\/li>\n<li>{@link #getGrowFactor growFactor} : float (default: 0)<\/li>\n<li>{@link #getShrinkFactor shrinkFactor} : float (default: 1)<\/li>\n<li>{@link #getBaseSize baseSize} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getMinHeight minHeight} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getMaxHeight maxHeight} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getMinWidth minWidth} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getMaxWidth maxWidth} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getStyleClass styleClass} : string (default: )<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign (default: Transparent)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.LayoutData#constructor sap.ui.core.LayoutData}\ncan be used as well.","getMinHeight":{"!description":"Gets current value of property <code>minHeight<\/code>.\n\nThe minimum height of the flex item.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getBaseSize":{"!description":"Gets current value of property <code>baseSize<\/code>.\n\nThe base size is the initial main size of the item for the flex algorithm. If set to \"auto\", this will be the computed size of the item.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setMaxHeight":{"!description":"Sets a new value for property <code>maxHeight<\/code>.\n\nThe maximum height of the flex item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sMaxHeight: sap.ui.core.CSSSize) -> sap.m.FlexItemData","parameters":{"sMaxHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>maxHeight<\/code>"}},"setShrinkFactor":{"!description":"Sets a new value for property <code>shrinkFactor<\/code>.\n\nThe shrink factor determines how much the flex item will shrink relative to the rest of the flex items in the flex container when negative free space is distributed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn(fShrinkFactor: Number) -> sap.m.FlexItemData","parameters":{"fShrinkFactor":"type: float, description: New value for property <code>shrinkFactor<\/code>"}},"setMinHeight":{"!description":"Sets a new value for property <code>minHeight<\/code>.\n\nThe minimum height of the flex item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn(sMinHeight: sap.ui.core.CSSSize) -> sap.m.FlexItemData","parameters":{"sMinHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>minHeight<\/code>"}},"getMaxHeight":{"!description":"Gets current value of property <code>maxHeight<\/code>.\n\nThe maximum height of the flex item.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getGrowFactor":{"!description":"Gets current value of property <code>growFactor<\/code>.\n\nDetermines the flexibility of the flex item when allocatable space is remaining.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!description":"Holds layout data for a FlexBox|HBox|VBox","getMetadata":{"!description":"Returns a metadata object for class sap.m.FlexItemData.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setMaxWidth":{"!description":"Sets a new value for property <code>maxWidth<\/code>.\n\nThe maximum height of the flex item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sMaxWidth: sap.ui.core.CSSSize) -> sap.m.FlexItemData","parameters":{"sMaxWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>maxWidth<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.FlexItemData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.LayoutData.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getStyleClass":{"!description":"Gets current value of property <code>styleClass<\/code>.\n\nThe style class will be applied to the flex item and can be used for CSS selectors\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setOrder":{"!description":"Sets a new value for property <code>order<\/code>.\n\nDetermines the display order of flex items independent of their source code order.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iOrder: Number) -> sap.m.FlexItemData","parameters":{"iOrder":"type: int, description: New value for property <code>order<\/code>"}},"!module":"sap/m/FlexItemData","!helpDescription":"Holds layout data for a FlexBox|HBox|VBox","getOrder":{"!description":"Gets current value of property <code>order<\/code>.\n\nDetermines the display order of flex items independent of their source code order.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setStyleClass":{"!description":"Sets a new value for property <code>styleClass<\/code>.\n\nThe style class will be applied to the flex item and can be used for CSS selectors\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sStyleClass: String) -> sap.m.FlexItemData","parameters":{"sStyleClass":"type: string, description: New value for property <code>styleClass<\/code>"}},"getAlignSelf":{"!description":"Gets current value of property <code>alignSelf<\/code>.\n\nDetermines cross-axis alignment of individual element (not currently supported in Internet Explorer)\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.FlexAlignSelf"},"setAlignSelf":{"!description":"Sets a new value for property <code>alignSelf<\/code>.\n\nDetermines cross-axis alignment of individual element (not currently supported in Internet Explorer)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sAlignSelf: sap.m.FlexAlignSelf) -> sap.m.FlexItemData","parameters":{"sAlignSelf":"type: sap.m.FlexAlignSelf, description: New value for property <code>alignSelf<\/code>"}}},"sap.m.FlexAlignContent":{"!description":"Available options for the layout of container lines along the cross axis of the flexbox layout. <b>Note:<\/b> This property has no effect in Internet Explorer 10.","Center":{"!description":"Line are packed toward the center of the line.","!category":"enum","!type":"String"},"!module":"sap/m/library","SpaceBetween":{"!description":"Lines are evenly distributed in the line.","!category":"enum","!type":"String"},"Start":{"!description":"Lines are packed toward the start of the line.","!category":"enum","!type":"String"},"SpaceAround":{"!description":"Lines are evenly distributed in the line, with half-size spaces on either end.\n<b>Note:<\/b> This value behaves like SpaceBetween in Internet Explorer 10.","!category":"enum","!type":"String"},"Stretch":{"!description":"Lines stretch to take up the remaining space.","!category":"enum","!type":"String"},"!category":"static class","End":{"!description":"Lines are packed toward the end of the line.","!category":"enum","!type":"String"},"Inherit":{"!description":"Inherits the value from its parent.","!category":"enum","!type":"String"}},"sap.m.semantic.PositiveAction":{"!description":"A PositiveAction button has default semantic-specific properties and\nis eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","extend":{"!description":"Creates a new subclass of class sap.m.semantic.PositiveAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.PositiveAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new PositiveAction.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.SemanticButton#constructor sap.m.semantic.SemanticButton}\ncan be used as well.","!module":"sap/m/semantic/PositiveAction","!helpDescription":"A PositiveAction button has default semantic-specific properties and\nis eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nButton text","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.m.semantic.SemanticButton","!category":"class","setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nButton text\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.m.semantic.PositiveAction","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.m.Bar_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.Bar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.Bar"},"sap.m.ObjectStatus_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ObjectStatus with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ObjectStatus"},"sap.m.IconTab":{"!description":"\nRepresents an interface for controls, which are suitable as items for the sap.m.IconTabBar.\nThe classes which implement this interface are:\n- sap.m.IconTabFilter\n- sap.m.IconTabSeparator","!module":"sap/m/library","!category":"static class"},"sap.m.QuickView_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.QuickView with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.QuickViewBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.QuickView"},"sap.m.Tile":{"!description":"A tile to be displayed in the tile container. Use this\ntile as the base class for specialized tile implementations.\nUse the renderer _addOuterClass methods to add a style class to the main\nsurface of the Tile. In this class set the background color, gradients\nor background images.\nInstead of implementing the default render method in the renderer, implement\nyour content HTML in the _renderContent method of the specialized tile.","getMetadata":{"!description":"Returns a metadata object for class sap.m.Tile.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.core.Control","!category":"class","extend":{"!description":"Creates a new subclass of class sap.m.Tile with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.m.Tile<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Tile","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Tile","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!constructorDescription":"Constructor for a new Tile.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getRemovable removable} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/m/Tile","!helpDescription":"A tile to be displayed in the tile container. Use this\ntile as the base class for specialized tile implementations.\nUse the renderer _addOuterClass methods to add a style class to the main\nsurface of the Tile. In this class set the background color, gradients\nor background images.\nInstead of implementing the default render method in the renderer, implement\nyour content HTML in the _renderContent method of the specialized tile.","setRemovable":{"!description":"Sets a new value for property <code>removable<\/code>.\n\nDetermines whether the tile is movable within the surrounding tile container. The remove event is fired by the tile container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bRemovable: Boolean) -> sap.m.Tile","parameters":{"bRemovable":"type: boolean, description: New value for property <code>removable<\/code>"}},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.m.Tile<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Tile<\/code> itself.\n\nTap event is raised if the user taps or clicks the control.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Tile","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Tile<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getRemovable":{"!description":"Gets current value of property <code>removable<\/code>.\n\nDetermines whether the tile is movable within the surrounding tile container. The remove event is fired by the tile container.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.m.MessageStrip":{"fireClose":{"!description":"Fires event <code>close<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.MessageStrip","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setShowIcon":{"!description":"Sets a new value for property <code>showIcon<\/code>.\n\nDetermines if an icon is displayed for the message.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowIcon: Boolean) -> sap.m.MessageStrip","parameters":{"bShowIcon":"type: boolean, description: New value for property <code>showIcon<\/code>"}},"destroyLink":{"!description":"Destroys the link in the aggregation <code>link<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.MessageStrip"},"setShowCloseButton":{"!description":"Sets a new value for property <code>showCloseButton<\/code>.\n\nDetermines if the message has a close button in the upper right corner.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowCloseButton: Boolean) -> sap.m.MessageStrip","parameters":{"bShowCloseButton":"type: boolean, description: New value for property <code>showCloseButton<\/code>"}},"!proto":"sap.ui.core.Control","!category":"class","!constructorDescription":"Constructor for a new MessageStrip.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getType type} : sap.ui.core.MessageType (default: Information)<\/li>\n<li>{@link #getCustomIcon customIcon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getShowIcon showIcon} : boolean (default: false)<\/li>\n<li>{@link #getShowCloseButton showCloseButton} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getLink link} : sap.m.Link (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:close close} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","attachClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>close<\/code> event of this <code>sap.m.MessageStrip<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.MessageStrip<\/code> itself.\n\nThis event will be fired after the container is closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.MessageStrip","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.MessageStrip<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setCustomIcon":{"!description":"Sets a new value for property <code>customIcon<\/code>.\n\nDetermines a custom icon which is displayed.\nIf none is set, the default icon for this message type is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sCustomIcon: sap.ui.core.URI) -> sap.m.MessageStrip","parameters":{"sCustomIcon":"type: sap.ui.core.URI, description: New value for property <code>customIcon<\/code>"}},"close":{"!description":"Closes the MessageStrip.\nThis method sets the visible property of the MessageStrip to false.\nThe MessageStrip can be shown again by setting the visible property to true.","!static":false,"!category":"function","!type":"fn()"},"!description":"MessageStrip is a control that enables the embedding of application-related messages in the application.\nThere are 4 types of messages: Information, Success, Warning and Error.\nEach message can have a close button, so that it can be removed from the UI if needed.","getShowCloseButton":{"!description":"Gets current value of property <code>showCloseButton<\/code>.\n\nDetermines if the message has a close button in the upper right corner.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>close<\/code> event of this <code>sap.m.MessageStrip<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.MessageStrip","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.MessageStrip.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nDetermines the text of the message.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setType":{"!description":"Setter for property type.\nDefault value is sap.ui.core.MessageType.Information","!static":false,"!category":"function","!type":"fn(sType: sap.ui.core.MessageType) -> sap.m.MessageStrip","parameters":{"sType":"type: sap.ui.core.MessageType, description: The Message type"}},"getShowIcon":{"!description":"Gets current value of property <code>showIcon<\/code>.\n\nDetermines if an icon is displayed for the message.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.m.MessageStrip with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setLink":{"!description":"Sets the aggregated <code>link<\/code>.","!static":false,"!category":"function","!type":"fn(oLink: sap.m.Link) -> sap.m.MessageStrip","parameters":{"oLink":"type: sap.m.Link, description: The link to set"}},"getLink":{"!description":"Gets content of aggregation <code>link<\/code>.\n\nAdds a sap.m.Link control which will be displayed at the end of the message.","!static":false,"!category":"function","!type":"fn() -> sap.m.Link"},"!module":"sap/m/MessageStrip","getCustomIcon":{"!description":"Gets current value of property <code>customIcon<\/code>.\n\nDetermines a custom icon which is displayed.\nIf none is set, the default icon for this message type is used.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"!helpDescription":"MessageStrip is a control that enables the embedding of application-related messages in the application.\nThere are 4 types of messages: Information, Success, Warning and Error.\nEach message can have a close button, so that it can be removed from the UI if needed.","getType":{"!description":"Gets current value of property <code>type<\/code>.\n\nDetermines the type of messages that are displayed in the MessageStrip.\nPossible values are: Information (default), Success, Warning, Error.\nIf None is passed, the value is set to Information and a warning is displayed in the console.\n\nDefault value is <code>Information<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.MessageType"},"setText":{"!description":"Setter for property text.\nDefault value is empty/undefined","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.m.MessageStrip","parameters":{"sText":"type: string, description: new value for property text"}}},"sap.m.Text_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.Text with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.Text"},"sap.m.ActionListItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ActionListItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ActionListItem"},"sap.m.DateTimeInput_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.DateTimeInput with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.DateTimeInput"},"sap.m.Panel_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.Panel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.Panel"},"sap.m.NotificationListGroup":{"!description":"The NotificationListItemGroup control is used for grouping NotificationListItems of the same type.","removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.m.NotificationListItem) -> sap.m.NotificationListItem","parameters":{"vItem":"type: int|string|sap.m.NotificationListItem, description: The itemto remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.NotificationListGroup.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setCollapsed":{"!description":"Sets a new value for property <code>collapsed<\/code>.\n\nDetermines if the group is collapsed or expanded.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bCollapsed: Boolean) -> sap.m.NotificationListGroup","parameters":{"bCollapsed":"type: boolean, description: New value for property <code>collapsed<\/code>"}},"!proto":"sap.m.NotificationListBase","destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.NotificationListGroup"},"!category":"class","removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.NotificationListItem]"},"extend":{"!description":"Creates a new subclass of class sap.m.NotificationListGroup with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.NotificationListBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.NotificationListItem) -> sap.m.NotificationListGroup","parameters":{"oItem":"type: sap.m.NotificationListItem, description: the item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nThe NotificationListItems inside the group.","!static":false,"!category":"function","!type":"fn() -> [sap.m.NotificationListItem]"},"setAutoPriority":{"!description":"Sets a new value for property <code>autoPriority<\/code>.\n\nDetermines if the group will automatically set the priority based on the highest priority of its notifications or get its priority from the developer.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bAutoPriority: Boolean) -> sap.m.NotificationListGroup","parameters":{"bAutoPriority":"type: boolean, description: New value for property <code>autoPriority<\/code>"}},"!constructorDescription":"Constructor for a new NotificationListGroup.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getCollapsed collapsed} : boolean (default: false)<\/li>\n<li>{@link #getAutoPriority autoPriority} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.NotificationListItem[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.NotificationListBase#constructor sap.m.NotificationListBase}\ncan be used as well.","!module":"sap/m/NotificationListGroup","indexOfItem":{"!description":"Checks for the provided <code>sap.m.NotificationListItem<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.NotificationListItem) -> Number","parameters":{"oItem":"type: sap.m.NotificationListItem, description: The item whose index is looked for"}},"!helpDescription":"The NotificationListItemGroup control is used for grouping NotificationListItems of the same type.","getAutoPriority":{"!description":"Gets current value of property <code>autoPriority<\/code>.\n\nDetermines if the group will automatically set the priority based on the highest priority of its notifications or get its priority from the developer.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.NotificationListItem, iIndex: Number) -> sap.m.NotificationListGroup","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position","oItem":"type: sap.m.NotificationListItem, description: the item to insert; if empty, nothing is inserted"}},"getCollapsed":{"!description":"Gets current value of property <code>collapsed<\/code>.\n\nDetermines if the group is collapsed or expanded.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.m.SwitchType":{"!description":"Enumaration for different switch types.","AcceptReject":{"!description":"Switch with accept and reject icons","!category":"enum","!type":"String"},"!module":"sap/m/library","!category":"static class","Default":{"!description":"Will show \"ON\" and \"OFF\" translated to the current language or the custom text if provided","!category":"enum","!type":"String"}},"sap.m.semantic.AddAction":{"!description":"An AddAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.\n\nSee {@link sap.m.semantic.MasterPage#addAction}, {@link sap.m.semantic.FullscreenPage#addAction}, {@link sap.m.semantic.DetailPage#addAction}","extend":{"!description":"Creates a new subclass of class sap.m.semantic.AddAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.AddAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new AddAction.","!module":"sap/m/semantic/AddAction","!helpDescription":"An AddAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.\n\nSee {@link sap.m.semantic.MasterPage#addAction}, {@link sap.m.semantic.FullscreenPage#addAction}, {@link sap.m.semantic.DetailPage#addAction}","!proto":"sap.m.semantic.SemanticButton","!category":"class"},"sap.m.ToolbarSpacer_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ToolbarSpacer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ToolbarSpacer"},"sap.m.BusyIndicator_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.BusyIndicator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.BusyIndicator"},"sap.m.ViewSettingsCustomTab":{"!description":"The ViewSettingsCustomTab control is used for adding custom tabs in the ViewSettingsDialog.","getMetadata":{"!description":"Returns a metadata object for class sap.m.ViewSettingsCustomTab.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nThe content of this Custom tab","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Item","removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nCustom tab title\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.ViewSettingsCustomTab","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"!category":"class","addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.m.ViewSettingsCustomTab","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nCustom tab button icon\n\nDefault value is <code>sap-icon://competitor<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"extend":{"!description":"Creates a new subclass of class sap.m.ViewSettingsCustomTab with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nCustom tab button icon\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>sap-icon://competitor<\/code>.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.m.ViewSettingsCustomTab","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"!constructorDescription":"Constructor for a new ViewSettingsCustomTab.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: sap-icon://competitor)<\/li>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nCustom tab title\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/m/ViewSettingsCustomTab","!helpDescription":"The ViewSettingsCustomTab control is used for adding custom tabs in the ViewSettingsDialog.","getTabButton":{"!description":"Gets or creates the sap.m.Button instance for the custom tab.","!static":false,"!category":"function","!type":"fn(oOptions: Object) -> sap.m.Button","parameters":{"oOptions":"type: object, description: undefined"}},"insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.m.ViewSettingsCustomTab","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ViewSettingsCustomTab"}},"sap.m.ToolbarSpacer":{"!description":"This control can be used to add horizontal space between toolbar items.\nNote: ToolbarLayoutData should not be used with this control.","extend":{"!description":"Creates a new subclass of class sap.m.ToolbarSpacer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.ToolbarSpacer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new ToolbarSpacer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: )<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/m/ToolbarSpacer","!helpDescription":"This control can be used to add horizontal space between toolbar items.\nNote: ToolbarLayoutData should not be used with this control.","!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDefines the width of the horizontal space.\nNote: Empty(\"\") value makes the space flexible which means it covers the remaining space between toolbar items.\nThis feature can be used to push next item to the edge of the toolbar.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDefines the width of the horizontal space.\nNote: Empty(\"\") value makes the space flexible which means it covers the remaining space between toolbar items.\nThis feature can be used to push next item to the edge of the toolbar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.ToolbarSpacer","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}}},"sap.m.SelectList_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.SelectList with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.SelectList"},"sap.m.UploadCollectionParameter":{"!description":"Represents a parameter for the UploadCollection.","extend":{"!description":"Creates a new subclass of class sap.m.UploadCollectionParameter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setName":{"!description":"Sets a new value for property <code>name<\/code>.\n\nSpecifies the name of the parameter.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.m.UploadCollectionParameter","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nSpecifies the value of the parameter.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.UploadCollectionParameter.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new UploadCollectionParameter.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getValue value} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getName":{"!description":"Gets current value of property <code>name<\/code>.\n\nSpecifies the name of the parameter.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/m/UploadCollectionParameter","!helpDescription":"Represents a parameter for the UploadCollection.","setValue":{"!description":"Sets a new value for property <code>value<\/code>.\n\nSpecifies the value of the parameter.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.m.UploadCollectionParameter","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"!proto":"sap.ui.core.Element","!category":"class"},"sap.m.P13nConditionPanel_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.P13nConditionPanel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.P13nConditionPanel"},"sap.m.PlanningCalendarRow_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.PlanningCalendarRow with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.PlanningCalendarRow"},"sap.m.MaskInput":{"!description":"The <code>sap.m.MaskInput<\/code> control allows users to easily enter data in a certain format and in a fixed-width input\n(for example: date, time, phone number, credit card number, currency, IP address, MAC address, and others).","getMask":{"!description":"Gets current value of property <code>mask<\/code>.\n\nMask defined by its characters type (respectively, by its length).\nYou should consider the following important facts:\n1. The mask characters normally correspond to an existing rule (one rule per unique char).\nCharacters which don't, are considered immutable characters (for example, the mask '2099', where '9' corresponds to a rule\nfor digits, has the characters '2' and '0' as immutable).\n2. Adding a rule corresponding to the <code>placeholderSymbol<\/code> is not recommended and would lead to an unpredictable behavior.\n3. You can use the special escape character '^' called \"Caret\" prepending a rule character to make it immutable.\nUse the double escape '^^' if you want to make use of the escape character as a immutable one.","!static":false,"!category":"function","!type":"fn() -> String"},"insertRule":{"!description":"Inserts a rule into the aggregation <code>rules<\/code>.","!static":false,"!category":"function","!type":"fn(oRule: sap.m.MaskInputRule, iIndex: Number) -> sap.m.MaskInput","parameters":{"oRule":"type: sap.m.MaskInputRule, description: the rule to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the rule should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the rule is inserted at position 0; for a value\n             greater than the current size of the aggregation, the rule is inserted at\n             the last position"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.MaskInput.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getPlaceholderSymbol":{"!description":"Gets current value of property <code>placeholderSymbol<\/code>.\n\nDefines a placeholder symbol. Shown at the position where there is no user input yet.\n\nDefault value is <code>_<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"_feedReplaceChar":{"!description":"Gets a replacement string for the character being placed in the input.\nSubclasses may override this method in order to get some additional behavior. For instance, switching current input\ncharacter with other for time input purposes. As an example, if the user enters \"2\" (in 12-hour format), the consumer may use\nthis method to replace the input from \"2\" to \"02\".","!static":false,"!category":"function","!type":"fn(sChar: String, iPlacePosition: Number, sCurrentInputValue: String) -> String","parameters":{"iPlacePosition":"type: int, description: The position the character should occupy","sCurrentInputValue":"type: string, description: The value currently inside the input field (may differ from the property value)","sChar":"type: String, description: The current character from the input"}},"!proto":"sap.m.InputBase","indexOfRule":{"!description":"Checks for the provided <code>sap.m.MaskInputRule<\/code> in the aggregation <code>rules<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oRule: sap.m.MaskInputRule) -> Number","parameters":{"oRule":"type: sap.m.MaskInputRule, description: The rule whose index is looked for"}},"!category":"class","_isCharAllowed":{"!description":"Verifies whether a character at a given position is allowed according to its mask rule.","!static":false,"!category":"function","!type":"fn(sChar: String, iIndex: Number)","parameters":{"iIndex":"type: int, description: The position of the character","sChar":"type: String, description: The character"}},"destroyRules":{"!description":"Destroys all the rules in the aggregation <code>rules<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.MaskInput"},"extend":{"!description":"Creates a new subclass of class sap.m.MaskInput with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.InputBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new MaskInput.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPlaceholderSymbol placeholderSymbol} : string (default: _)<\/li>\n<li>{@link #getMask mask} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getRules rules} : sap.m.MaskInputRule[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.InputBase#constructor sap.m.InputBase}\ncan be used as well.","!module":"sap/m/MaskInput","addRule":{"!description":"Adds some rule to the aggregation <code>rules<\/code>.","!static":false,"!category":"function","!type":"fn(oRule: sap.m.MaskInputRule) -> sap.m.MaskInput","parameters":{"oRule":"type: sap.m.MaskInputRule, description: the rule to add; if empty, nothing is inserted"}},"!helpDescription":"The <code>sap.m.MaskInput<\/code> control allows users to easily enter data in a certain format and in a fixed-width input\n(for example: date, time, phone number, credit card number, currency, IP address, MAC address, and others).","removeAllRules":{"!description":"Removes all the controls from the aggregation <code>rules<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.MaskInputRule]"},"setValue":{"!description":"Setter for property <code>value<\/code>.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.m.MaskInput","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>."}},"removeRule":{"!description":"Removes a rule from the aggregation <code>rules<\/code>.","!static":false,"!category":"function","!type":"fn(vRule: Number | String | sap.m.MaskInputRule) -> sap.m.MaskInputRule","parameters":{"vRule":"type: int|string|sap.m.MaskInputRule, description: The ruleto remove or its index or id"}},"getRules":{"!description":"Gets content of aggregation <code>rules<\/code>.\n\nA list of validation rules (one rule per mask character).","!static":false,"!category":"function","!type":"fn() -> [sap.m.MaskInputRule]"}},"sap.m.Page":{"destroyHeaderContent":{"!description":"Destroys all the headerContent in the aggregation <code>headerContent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Page"},"destroyLandmarkInfo":{"!description":"Destroys the landmarkInfo in the aggregation <code>landmarkInfo<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Page"},"setSubHeader":{"!description":"Sets the aggregated <code>subHeader<\/code>.","!static":false,"!category":"function","!type":"fn(oSubHeader: sap.m.IBar) -> sap.m.Page","parameters":{"oSubHeader":"type: sap.m.IBar, description: The subHeader to set"}},"addHeaderContent":{"!description":"Adds some headerContent to the aggregation <code>headerContent<\/code>.","!static":false,"!category":"function","!type":"fn(oHeaderContent: sap.ui.core.Control) -> sap.m.Page","parameters":{"oHeaderContent":"type: sap.ui.core.Control, description: the headerContent to add; if empty, nothing is inserted"}},"setTitleLevel":{"!description":"Sets a new value for property <code>titleLevel<\/code>.\n\nDefines the semantic level of the title. Using \"Auto\" no explicit level information is written.\nUsed for accessibility purposes only.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sTitleLevel: sap.ui.core.TitleLevel) -> sap.m.Page","parameters":{"sTitleLevel":"type: sap.ui.core.TitleLevel, description: New value for property <code>titleLevel<\/code>"}},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nThe title text appearing in the page header bar.","!static":false,"!category":"function","!type":"fn() -> String"},"getShowFooter":{"!description":"Gets current value of property <code>showFooter<\/code>.\n\nWhether this page shall have a footer\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowHeader":{"!description":"Sets a new value for property <code>showHeader<\/code>.\n\nWhether this page shall have a header.\nIf set to true, either the control under the \"customHeader\" aggregation is used, or if there is no such control, a Header control is constructed from the properties \"title\", \"showNavButton\", \"navButtonText\" and \"icon\" depending on the platform.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowHeader: Boolean) -> sap.m.Page","parameters":{"bShowHeader":"type: boolean, description: New value for property <code>showHeader<\/code>"}},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Page"},"!description":"A page is a basic container for a mobile application screen. Usually one page is displayed at a time (in landscape mode or on tablets depending on the layout two pages might be displayed side-by-side).","getMetadata":{"!description":"Returns a metadata object for class sap.m.Page.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setNavButtonType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 Deprecated since the MVI theme is removed now. This property is only usable with a Button text in that theme.<br>Sets a new value for property <code>navButtonType<\/code>.\n\nThis property is used to set the appearance of the NavButton. By default when showNavButton is set to true, a back button will be shown in iOS and an up button in other platforms. In case you want to show a normal button in the left header area, you can set the value to \"Default\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Back<\/code>.","!static":false,"!category":"function","!type":"fn(sNavButtonType: sap.m.ButtonType) -> sap.m.Page","parameters":{"sNavButtonType":"type: sap.m.ButtonType, description: New value for property <code>navButtonType<\/code>"}},"removeHeaderContent":{"!description":"Removes a headerContent from the aggregation <code>headerContent<\/code>.","!static":false,"!category":"function","!type":"fn(vHeaderContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vHeaderContent":"type: int|string|sap.ui.core.Control, description: The headerContentto remove or its index or id"}},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nThe title text appearing in the page header bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.Page","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"attachNavButtonTap":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.12.2 the navButtonPress event is replacing this event<br>Attaches event handler <code>fnFunction<\/code> to the <code>navButtonTap<\/code> event of this <code>sap.m.Page<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Page<\/code> itself.\n\nthis event is fired when Nav Button is tapped","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Page","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Page<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getShowHeader":{"!description":"Gets current value of property <code>showHeader<\/code>.\n\nWhether this page shall have a header.\nIf set to true, either the control under the \"customHeader\" aggregation is used, or if there is no such control, a Header control is constructed from the properties \"title\", \"showNavButton\", \"navButtonText\" and \"icon\" depending on the platform.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"setNavButtonText":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 Deprecated since the MVI theme is removed now. This property only affected the NavButton in that theme.<br>Sets a new value for property <code>navButtonText<\/code>.\n\nThe text of the nav button when running in iOS (if shown) in case it deviates from the default, which is \"Back\". This property is mvi-theme-dependent and will not have any effect in other themes.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNavButtonText: String) -> sap.m.Page","parameters":{"sNavButtonText":"type: string, description: New value for property <code>navButtonText<\/code>"}},"scrollTo":{"!description":"Scrolls to the given position. Only available if enableScrolling is set to \"true\".","!static":false,"!category":"function","!type":"fn(y: Number, time: Number) -> sap.m.Page","parameters":{"y":"type: int, description: The vertical pixel position to scroll to. Scrolling down happens with positive values.","time":"type: int, description: The duration of animated scrolling. To scroll immediately without animation, give 0 as value. 0 is also the default value, when this optional parameter is omitted."}},"extend":{"!description":"Creates a new subclass of class sap.m.Page with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 Deprecated since the MVI theme is removed now. This property only affected the NavButton in that theme.<br>Sets a new value for property <code>icon<\/code>.\n\nthe icon that is rendered in the page header bar in non-iOS phone/tablet platforms. This property is theme-dependent and only has an effect in the MVI theme.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.m.Page","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"getShowSubHeader":{"!description":"Gets current value of property <code>showSubHeader<\/code>.\n\nWhether this page shall show the subheader.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/m/Page","!helpDescription":"A page is a basic container for a mobile application screen. Usually one page is displayed at a time (in landscape mode or on tablets depending on the layout two pages might be displayed side-by-side).","removeAllHeaderContent":{"!description":"Removes all the controls from the aggregation <code>headerContent<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setFooter":{"!description":"Sets the aggregated <code>footer<\/code>.","!static":false,"!category":"function","!type":"fn(oFooter: sap.m.IBar) -> sap.m.Page","parameters":{"oFooter":"type: sap.m.IBar, description: The footer to set"}},"getCustomHeader":{"!description":"Gets content of aggregation <code>customHeader<\/code>.\n\nThe (optional) custom header of this page.\nUse this aggregation only when a custom header is constructed where the default header consisting of title text + nav button is not sufficient.\nIf this aggregation is set, the simple properties \"title\", \"showNavButton\", \"NavButtonText\" and \"icon\" are not used.","!static":false,"!category":"function","!type":"fn() -> sap.m.IBar"},"insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.m.Page","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}},"setLandmarkInfo":{"!description":"Sets the aggregated <code>landmarkInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oLandmarkInfo: sap.m.PageAccessibleLandmarkInfo) -> sap.m.Page","parameters":{"oLandmarkInfo":"type: sap.m.PageAccessibleLandmarkInfo, description: The landmarkInfo to set"}},"detachNavButtonPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>navButtonPress<\/code> event of this <code>sap.m.Page<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Page","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getShowNavButton":{"!description":"Gets current value of property <code>showNavButton<\/code>.\n\nA nav button will be rendered on the left area of header bar if this property is set to true.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireNavButtonPress":{"!description":"Fires event <code>navButtonPress<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Page","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nThe content of this page","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","getBackgroundDesign":{"!description":"Gets current value of property <code>backgroundDesign<\/code>.\n\nThis property is used to set the background color of a page. When a list is placed inside a page, the value \"List\" should be used to display a gray background. \"Standard\", with the value white, is used as default if not specified.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.PageBackgroundDesign"},"getEnableScrolling":{"!description":"Gets current value of property <code>enableScrolling<\/code>.\n\nEnable vertical scrolling of page contents. Page headers and footers are fixed and do not scroll.\nIf set to false, there will be no vertical scrolling at all.\n\nThe Page only allows vertical scrolling because horizontal scrolling is discouraged in general for full-page content. If it still needs to be achieved, disable the Page scrolling and use a ScrollContainer as full-page content of the Page. This allows you to freely configure scrolling. It can also be used to create horizontally-scrolling sub-areas of (vertically-scrolling) Pages.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getHeaderContent":{"!description":"Gets content of aggregation <code>headerContent<\/code>.\n\nControls to be added to the right side of the page header. Usually an application would use Button controls and limit the number to one when the application needs to run on smartphones. There is no automatic overflow handling when the space is insufficient.\nWhen a customHeader is used, this aggregation will be ignored.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setBackgroundDesign":{"!description":"Sets a new value for property <code>backgroundDesign<\/code>.\n\nThis property is used to set the background color of a page. When a list is placed inside a page, the value \"List\" should be used to display a gray background. \"Standard\", with the value white, is used as default if not specified.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn(sBackgroundDesign: sap.m.PageBackgroundDesign) -> sap.m.Page","parameters":{"sBackgroundDesign":"type: sap.m.PageBackgroundDesign, description: New value for property <code>backgroundDesign<\/code>"}},"!category":"class","destroyFooter":{"!description":"Destroys the footer in the aggregation <code>footer<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Page"},"destroySubHeader":{"!description":"Destroys the subHeader in the aggregation <code>subHeader<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Page"},"getNavButtonType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 Deprecated since the MVI theme is removed now. This property is only usable with a Button text in that theme.<br>Gets current value of property <code>navButtonType<\/code>.\n\nThis property is used to set the appearance of the NavButton. By default when showNavButton is set to true, a back button will be shown in iOS and an up button in other platforms. In case you want to show a normal button in the left header area, you can set the value to \"Default\".\n\nDefault value is <code>Back<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ButtonType"},"setContentOnlyBusy":{"!description":"Sets a new value for property <code>contentOnlyBusy<\/code>.\n\nDecides which area is covered by the local BusyIndicator when <code>page.setBusy()<\/code> is called. By default the entire page is covered, including headers and footer. When this property is set to \"true\", only the content area is covered (not header/sub header and footer), which is useful e.g. when there is a SearchField in the sub header and live search continuously updates the content area while the user is still able to type.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bContentOnlyBusy: Boolean) -> sap.m.Page","parameters":{"bContentOnlyBusy":"type: boolean, description: New value for property <code>contentOnlyBusy<\/code>"}},"setShowSubHeader":{"!description":"Sets a new value for property <code>showSubHeader<\/code>.\n\nWhether this page shall show the subheader.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSubHeader: Boolean) -> sap.m.Page","parameters":{"bShowSubHeader":"type: boolean, description: New value for property <code>showSubHeader<\/code>"}},"!constructorDescription":"Constructor for a new Page.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getTitleLevel titleLevel} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getShowNavButton showNavButton} : boolean (default: false)<\/li>\n<li>{@link #getShowHeader showHeader} : boolean (default: true)<\/li>\n<li>{@link #getShowSubHeader showSubHeader} : boolean (default: true)<\/li>\n<li>{@link #getNavButtonText navButtonText} : string<\/li>\n<li>{@link #getNavButtonTooltip navButtonTooltip} : string<\/li>\n<li>{@link #getEnableScrolling enableScrolling} : boolean (default: true)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.PageBackgroundDesign (default: Standard)<\/li>\n<li>{@link #getNavButtonType navButtonType} : sap.m.ButtonType (default: Back)<\/li>\n<li>{@link #getShowFooter showFooter} : boolean (default: true)<\/li>\n<li>{@link #getContentOnlyBusy contentOnlyBusy} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getCustomHeader customHeader} : sap.m.IBar<\/li>\n<li>{@link #getFooter footer} : sap.m.IBar<\/li>\n<li>{@link #getSubHeader subHeader} : sap.m.IBar<\/li>\n<li>{@link #getHeaderContent headerContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getLandmarkInfo landmarkInfo} : sap.m.PageAccessibleLandmarkInfo<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:navButtonTap navButtonTap} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:navButtonPress navButtonPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","fireNavButtonTap":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.12.2 the navButtonPress event is replacing this event<br>Fires event <code>navButtonTap<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Page","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getContentOnlyBusy":{"!description":"Gets current value of property <code>contentOnlyBusy<\/code>.\n\nDecides which area is covered by the local BusyIndicator when <code>page.setBusy()<\/code> is called. By default the entire page is covered, including headers and footer. When this property is set to \"true\", only the content area is covered (not header/sub header and footer), which is useful e.g. when there is a SearchField in the sub header and live search continuously updates the content area while the user is still able to type.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getNavButtonText":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 Deprecated since the MVI theme is removed now. This property only affected the NavButton in that theme.<br>Gets current value of property <code>navButtonText<\/code>.\n\nThe text of the nav button when running in iOS (if shown) in case it deviates from the default, which is \"Back\". This property is mvi-theme-dependent and will not have any effect in other themes.","!static":false,"!category":"function","!type":"fn() -> String"},"detachNavButtonTap":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.12.2 the navButtonPress event is replacing this event<br>Detaches event handler <code>fnFunction<\/code> from the <code>navButtonTap<\/code> event of this <code>sap.m.Page<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Page","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"destroyCustomHeader":{"!description":"Destroys the customHeader in the aggregation <code>customHeader<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Page"},"setShowFooter":{"!description":"Sets a new value for property <code>showFooter<\/code>.\n\nWhether this page shall have a footer\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowFooter: Boolean) -> sap.m.Page","parameters":{"bShowFooter":"type: boolean, description: New value for property <code>showFooter<\/code>"}},"setNavButtonTooltip":{"!description":"Sets a new value for property <code>navButtonTooltip<\/code>.\n\nThe tooltip of the nav button\n\nSince version 1.34\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNavButtonTooltip: String) -> sap.m.Page","parameters":{"sNavButtonTooltip":"type: string, description: New value for property <code>navButtonTooltip<\/code>"}},"getFooter":{"!description":"Gets content of aggregation <code>footer<\/code>.\n\nThe (optional) footer of this page. It is always located at the bottom of the page","!static":false,"!category":"function","!type":"fn() -> sap.m.IBar"},"getSubHeader":{"!description":"Gets content of aggregation <code>subHeader<\/code>.\n\na subHeader will be rendered directly under the header","!static":false,"!category":"function","!type":"fn() -> sap.m.IBar"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"indexOfHeaderContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>headerContent<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oHeaderContent: sap.ui.core.Control) -> Number","parameters":{"oHeaderContent":"type: sap.ui.core.Control, description: The headerContent whose index is looked for"}},"setShowNavButton":{"!description":"Sets a new value for property <code>showNavButton<\/code>.\n\nA nav button will be rendered on the left area of header bar if this property is set to true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowNavButton: Boolean) -> sap.m.Page","parameters":{"bShowNavButton":"type: boolean, description: New value for property <code>showNavButton<\/code>"}},"scrollToElement":{"!description":"Scrolls to an element(DOM or sap.ui.core.Element) within the page if the element is rendered.","!static":false,"!category":"function","!type":"fn(oElement: HTMLElement | sap.ui.core.Element, iTime?: Number) -> sap.m.Page","parameters":{"oElement":"type: HTMLElement|sap.ui.core.Element, description: The element to which should be scrolled.","iTime":"type: int, description: The duration of animated scrolling. To scroll immediately without animation, give 0 as value or leave it default."}},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.m.Page","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"insertHeaderContent":{"!description":"Inserts a headerContent into the aggregation <code>headerContent<\/code>.","!static":false,"!category":"function","!type":"fn(oHeaderContent: sap.ui.core.Control, iIndex: Number) -> sap.m.Page","parameters":{"oHeaderContent":"type: sap.ui.core.Control, description: the headerContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the headerContent should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the headerContent is inserted at position 0; for a value\n             greater than the current size of the aggregation, the headerContent is inserted at\n             the last position"}},"attachNavButtonPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>navButtonPress<\/code> event of this <code>sap.m.Page<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Page<\/code> itself.\n\nthis event is fired when Nav Button is pressed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Page","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Page<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getIcon":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 Deprecated since the MVI theme is removed now. This property only affected the NavButton in that theme.<br>Gets current value of property <code>icon<\/code>.\n\nthe icon that is rendered in the page header bar in non-iOS phone/tablet platforms. This property is theme-dependent and only has an effect in the MVI theme.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getNavButtonTooltip":{"!description":"Gets current value of property <code>navButtonTooltip<\/code>.\n\nThe tooltip of the nav button\n\nSince version 1.34","!static":false,"!category":"function","!type":"fn() -> String"},"getTitleLevel":{"!description":"Gets current value of property <code>titleLevel<\/code>.\n\nDefines the semantic level of the title. Using \"Auto\" no explicit level information is written.\nUsed for accessibility purposes only.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TitleLevel"},"setEnableScrolling":{"!description":"Sets a new value for property <code>enableScrolling<\/code>.\n\nEnable vertical scrolling of page contents. Page headers and footers are fixed and do not scroll.\nIf set to false, there will be no vertical scrolling at all.\n\nThe Page only allows vertical scrolling because horizontal scrolling is discouraged in general for full-page content. If it still needs to be achieved, disable the Page scrolling and use a ScrollContainer as full-page content of the Page. This allows you to freely configure scrolling. It can also be used to create horizontally-scrolling sub-areas of (vertically-scrolling) Pages.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableScrolling: Boolean) -> sap.m.Page","parameters":{"bEnableScrolling":"type: boolean, description: New value for property <code>enableScrolling<\/code>"}},"getLandmarkInfo":{"!description":"Gets content of aggregation <code>landmarkInfo<\/code>.\n\nAccessible landmark settings to be applied on the containers of the <code>sap.m.Page<\/code> control.\n\nIf not set, no landmarks will be written.","!static":false,"!category":"function","!type":"fn() -> sap.m.PageAccessibleLandmarkInfo"}},"sap.m.QuickViewCard_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.QuickViewCard with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.QuickViewBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.QuickViewCard"},"sap.m.RangeSlider_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.RangeSlider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Slider.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.RangeSlider"},"sap.m.ListItemBase":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"fireDetailTap":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20.0 Instead, use <code>detailPress<\/code> event.<br>Fires event <code>detailTap<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ListItemBase","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setSelected":{"!description":"Sets a new value for property <code>selected<\/code>.\n\nDefines the selected state of the list items.\n<b>Note:<\/b> Binding the <code>selected<\/code> property in single selection modes may cause unwanted results if you have more than one selected items in your binding.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSelected: Boolean) -> sap.m.ListItemBase","parameters":{"bSelected":"type: boolean, description: New value for property <code>selected<\/code>"}},"setUnread":{"!description":"Sets a new value for property <code>unread<\/code>.\n\nActivates the unread indicator for the list item, if set to <code>true<\/code>.\n<b>Note:<\/b> This flag is ignored when the <code>showUnread<\/code> property of the parent is set to <code>false<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bUnread: Boolean) -> sap.m.ListItemBase","parameters":{"bUnread":"type: boolean, description: New value for property <code>unread<\/code>"}},"!proto":"sap.ui.core.Control","attachDetailPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>detailPress<\/code> event of this <code>sap.m.ListItemBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ListItemBase<\/code> itself.\n\nFires when the user clicks on the detail button of the control.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ListItemBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ListItemBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachDetailPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>detailPress<\/code> event of this <code>sap.m.ListItemBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ListItemBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!category":"class","!constructorDescription":"Constructor for a new ListItemBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getType type} : sap.m.ListType (default: Inactive)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getUnread unread} : boolean (default: false)<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getCounter counter} : int<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:tap tap} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:detailTap detailTap} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:detailPress detailPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.m.ListItemBase","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"fireTap":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20.0 Instead, use <code>press<\/code> event.<br>Fires event <code>tap<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ListItemBase","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.m.ListItemBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ListItemBase<\/code> itself.\n\nFires when the user clicks on the control.\n<b>Note:<\/b> This event is not fired when the parent <code>mode<\/code> is <code>SingleSelectMaster<\/code> or when the <code>includeItemInSelection<\/code> property is set to <code>true<\/code>.\nIf there is an interactive element that handles its own <code>press<\/code> event then the list item's <code>press<\/code> event is not fired.\nAlso see {@link sap.m.ListBase#attachItemPress}.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ListItemBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ListItemBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachTap":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20.0 Instead, use <code>press<\/code> event.<br>Detaches event handler <code>fnFunction<\/code> from the <code>tap<\/code> event of this <code>sap.m.ListItemBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ListItemBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!description":"ListItemBase contains the base features of all specific list items.","setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nWhether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.m.ListItemBase","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"attachDetailTap":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20.0 Instead, use <code>detailPress<\/code> event.<br>Attaches event handler <code>fnFunction<\/code> to the <code>detailTap<\/code> event of this <code>sap.m.ListItemBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ListItemBase<\/code> itself.\n\nFires when the user taps on the detail button of the control.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ListItemBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ListItemBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getCounter":{"!description":"Gets current value of property <code>counter<\/code>.\n\nDefines the counter value of the list items.","!static":false,"!category":"function","!type":"fn() -> Number"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.ListItemBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nWhether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getUnread":{"!description":"Gets current value of property <code>unread<\/code>.\n\nActivates the unread indicator for the list item, if set to <code>true<\/code>.\n<b>Note:<\/b> This flag is ignored when the <code>showUnread<\/code> property of the parent is set to <code>false<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireDetailPress":{"!description":"Fires event <code>detailPress<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ListItemBase","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachTap":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20.0 Instead, use <code>press<\/code> event.<br>Attaches event handler <code>fnFunction<\/code> to the <code>tap<\/code> event of this <code>sap.m.ListItemBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ListItemBase<\/code> itself.\n\nFires when the user taps on the control.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ListItemBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ListItemBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setType":{"!description":"Sets a new value for property <code>type<\/code>.\n\nDefines the visual indication and behavior of the list items, e.g. <code>Active<\/code>, <code>Navigation<\/code>, <code>Detail<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inactive<\/code>.","!static":false,"!category":"function","!type":"fn(sType: sap.m.ListType) -> sap.m.ListItemBase","parameters":{"sType":"type: sap.m.ListType, description: New value for property <code>type<\/code>"}},"setCounter":{"!description":"Sets a new value for property <code>counter<\/code>.\n\nDefines the counter value of the list items.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iCounter: Number) -> sap.m.ListItemBase","parameters":{"iCounter":"type: int, description: New value for property <code>counter<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.ListItemBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.m.ListItemBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ListItemBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ListItemBase","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getSelected":{"!description":"Gets current value of property <code>selected<\/code>.\n\nDefines the selected state of the list items.\n<b>Note:<\/b> Binding the <code>selected<\/code> property in single selection modes may cause unwanted results if you have more than one selected items in your binding.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTabbables":{"!description":"Returns the tabbable DOM elements as a jQuery collection","!static":false,"!category":"function","!type":"fn() -> jQuery"},"!module":"sap/m/ListItemBase","!helpDescription":"ListItemBase contains the base features of all specific list items.","getType":{"!description":"Gets current value of property <code>type<\/code>.\n\nDefines the visual indication and behavior of the list items, e.g. <code>Active<\/code>, <code>Navigation<\/code>, <code>Detail<\/code>.\n\nDefault value is <code>Inactive<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ListType"},"detachDetailTap":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20.0 Instead, use <code>detailPress<\/code> event.<br>Detaches event handler <code>fnFunction<\/code> from the <code>detailTap<\/code> event of this <code>sap.m.ListItemBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ListItemBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}}},"sap.m.Column":{"setLastValue":{"!description":"Sets the last value of the column if mergeDuplicates property is true","!static":false,"!category":"function","!type":"fn(value: Object) -> sap.m.Column","parameters":{"value":"type: any, description: Any Value"}},"getPopinDisplay":{"!description":"Gets current value of property <code>popinDisplay<\/code>.\n\nDefines enumerated display options for the pop-in.\n\nDefault value is <code>Block<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.PopinDisplay"},"getPopinHAlign":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.14 Use popinDisplay property instead.<br>Gets current value of property <code>popinHAlign<\/code>.\n\nHorizontal alignment of the pop-in content. Available alignment settings are \"Begin\", \"Center\", \"End\", \"Left\", and \"Right\".\n\nNOTE: Controls with a text align do not inherit the horizontal alignment.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextAlign"},"getMinScreenWidth":{"!description":"Gets current value of property <code>minScreenWidth<\/code>.\n\nBy default column is always shown. If you set this property, control checks the minimum width of the screen to show or hide this column.\nAs you can give specific CSS sizes(e.g: \"480px\" or \"40em\"), you can also use sap.m.ScreenSize enumeration(e.g: \"Phone\", \"Tablet\", \"Desktop\", \"Small\", \"Medium\", \"Large\", ....).\n\nsap.m.Column.MediaQuery1->Range1 = 199\n\nThis property can be used for responsive design. e.g: \"40em\"(or \"640px\" or \"Tablet\") setting shows this column in iPad(and Desktop) but hides in iPhone.\nPlease also see \"demandPopin\" property","!static":false,"!category":"function","!type":"fn() -> String"},"setHeader":{"!description":"Sets the aggregated <code>header<\/code>.","!static":false,"!category":"function","!type":"fn(oHeader: sap.ui.core.Control) -> sap.m.Column","parameters":{"oHeader":"type: sap.ui.core.Control, description: The header to set"}},"applyAlignTo":{"!description":"Apply text alignment of the Column to Text/Label/Link...\n\nTODO: This is so ugly to check content functions\ninstead we should document how to use our controls\nto inherit text-alignment and we should add a new\nsap.ui.core.TextAlign type called \"Inherit\"","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control, sAlign?: String) -> sap.ui.core.Control","parameters":{"sAlign":"type: String, description: TextAlign enumeration","oControl":"type: sap.ui.core.Control, description: List control"}},"getVAlign":{"!description":"Gets current value of property <code>vAlign<\/code>.\n\nVertical alignment of the cells in a column. Possible values are \"Inherit\", \"Top\", \"Middle\", \"Bottom\"\nThis property does not affect the vertical alignment of header and footer.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.VerticalAlign"},"setInitialOrder":{"!description":"Sets the initial order of the column","!static":false,"!category":"function","!type":"fn(nOrder: Number)","parameters":{"nOrder":"type: int, description: initial order of the column"}},"!description":"The <code>sap.m.Column<\/code> allows to define column specific properties that will be applied when rendering the <code>sap.m.Table<\/code>.","setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nSpecifies whether or not the column is visible. Invisible columns are not rendered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.m.Column","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.Column.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLastValue":{"!description":"Gets the last value of the column","!static":false,"!category":"function","!type":"fn()"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nSpecifies whether or not the column is visible. Invisible columns are not rendered.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getHAlign":{"!description":"Gets current value of property <code>hAlign<\/code>.\n\nHorizontal alignment of the column content. Available alignment settings are \"Begin\", \"Center\", \"End\", \"Left\", and \"Right\".\n\nNOTE: Control with a \"textAlign\" property inherits the horizontal alignment.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextAlign"},"onItemsRemoved":{"!description":"Gets called from the Table when the all items are removed","!static":false,"!category":"function","!type":"fn()"},"extend":{"!description":"Creates a new subclass of class sap.m.Column with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getStyleClass":{"!description":"Gets current value of property <code>styleClass<\/code>.\n\nCSS class name for column contents(header, cells and footer of column). This property can be used for different column styling. If column is shown as pop-in then this class name is applied to related pop-in row.","!static":false,"!category":"function","!type":"fn() -> String"},"setDisplayViaMedia":{"!description":"Display or hide the column from given table via checking media query changes","!static":false,"!category":"function","!type":"fn(oTableDomRef: Object)","parameters":{"oTableDomRef":"type: Object, description: Table DOM reference"}},"setMergeDuplicates":{"!description":"Sets a new value for property <code>mergeDuplicates<\/code>.\n\nSet \"true\" to merge repeating cells(duplicates) into one cell block.\nPlease see \"mergeFunctionName\" property to customize this property.\nNote: This feature must not be used together with two-way binding. This property is ignored if a column is shown in the pop-in.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bMergeDuplicates: Boolean) -> sap.m.Column","parameters":{"bMergeDuplicates":"type: boolean, description: New value for property <code>mergeDuplicates<\/code>"}},"!module":"sap/m/Column","!helpDescription":"The <code>sap.m.Column<\/code> allows to define column specific properties that will be applied when rendering the <code>sap.m.Table<\/code>.","setFooter":{"!description":"Sets the aggregated <code>footer<\/code>.","!static":false,"!category":"function","!type":"fn(oFooter: sap.ui.core.Control) -> sap.m.Column","parameters":{"oFooter":"type: sap.ui.core.Control, description: The footer to set"}},"setIndex":{"!description":"Sets the visible column index\nNegative index values can be used to clear","!static":false,"!category":"function","!type":"fn(nIndex: Number)","parameters":{"nIndex":"type: int, description: index of the visible column"}},"getDemandPopin":{"!description":"Gets current value of property <code>demandPopin<\/code>.\n\nAccording to your minScreenWidth settings, the column can be hidden in different screen sizes.\nSetting this property to true, shows this column as pop-in instead of hiding it.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setPopinDisplay":{"!description":"Sets a new value for property <code>popinDisplay<\/code>.\n\nDefines enumerated display options for the pop-in.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Block<\/code>.","!static":false,"!category":"function","!type":"fn(sPopinDisplay: sap.m.PopinDisplay) -> sap.m.Column","parameters":{"sPopinDisplay":"type: sap.m.PopinDisplay, description: New value for property <code>popinDisplay<\/code>"}},"clearLastValue":{"!description":"Clears the last value of the column if mergeDuplicates property is true","!static":false,"!category":"function","!type":"fn() -> sap.m.Column"},"getInitialOrder":{"!description":"Gets the initial order of the column","!static":false,"!category":"function","!type":"fn() -> Number"},"setDemandPopin":{"!description":"Sets a new value for property <code>demandPopin<\/code>.\n\nAccording to your minScreenWidth settings, the column can be hidden in different screen sizes.\nSetting this property to true, shows this column as pop-in instead of hiding it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bDemandPopin: Boolean) -> sap.m.Column","parameters":{"bDemandPopin":"type: boolean, description: New value for property <code>demandPopin<\/code>"}},"!proto":"sap.ui.core.Element","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDefines the width of the column. If you leave it empty then this column covers the remaining space.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"destroyFooter":{"!description":"Destroys the footer in the aggregation <code>footer<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Column"},"getMergeFunctionName":{"!description":"Gets current value of property <code>mergeFunctionName<\/code>.\n\nDefines the value getter(serialization) function if \"mergeDuplicates\" property is set \"true\"\nControl itself uses this function to compare values of two repeating cells.\nDefault value \"getText\" is suitable for Label and Text control.\ne.g. For \"Icon\" control \"getSrc\" can be used.\nNote: You can pass one string parameter to given function after \"#\" sign. e.g. \"data#myparameter\"\n\nDefault value is <code>getText<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getHeader":{"!description":"Gets content of aggregation <code>header<\/code>.\n\nControl to be displayed in the column header.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!constructorDescription":"Constructor for a new Column.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHAlign hAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getVAlign vAlign} : sap.ui.core.VerticalAlign (default: Inherit)<\/li>\n<li>{@link #getStyleClass styleClass} : string<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getMinScreenWidth minScreenWidth} : string<\/li>\n<li>{@link #getDemandPopin demandPopin} : boolean (default: false)<\/li>\n<li>{@link #getPopinHAlign popinHAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getPopinDisplay popinDisplay} : sap.m.PopinDisplay (default: Block)<\/li>\n<li>{@link #getMergeDuplicates mergeDuplicates} : boolean (default: false)<\/li>\n<li>{@link #getMergeFunctionName mergeFunctionName} : string (default: getText)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getHeader header} : sap.ui.core.Control (default)<\/li>\n<li>{@link #getFooter footer} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","setVAlign":{"!description":"Sets a new value for property <code>vAlign<\/code>.\n\nVertical alignment of the cells in a column. Possible values are \"Inherit\", \"Top\", \"Middle\", \"Bottom\"\nThis property does not affect the vertical alignment of header and footer.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sVAlign: sap.ui.core.VerticalAlign) -> sap.m.Column","parameters":{"sVAlign":"type: sap.ui.core.VerticalAlign, description: New value for property <code>vAlign<\/code>"}},"setDisplay":{"!description":"Display or hide the column from given table\nThis does not set the visibility property of the column","!static":false,"!category":"function","!type":"fn(oTableDomRef: Object, bDisplay?: Boolean)","parameters":{"bDisplay":"type: boolean, description: whether visible or not","oTableDomRef":"type: Object, description: Table DOM reference"}},"getFooter":{"!description":"Gets content of aggregation <code>footer<\/code>.\n\nControl to be displayed in the column footer.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"setMergeFunctionName":{"!description":"Sets a new value for property <code>mergeFunctionName<\/code>.\n\nDefines the value getter(serialization) function if \"mergeDuplicates\" property is set \"true\"\nControl itself uses this function to compare values of two repeating cells.\nDefault value \"getText\" is suitable for Label and Text control.\ne.g. For \"Icon\" control \"getSrc\" can be used.\nNote: You can pass one string parameter to given function after \"#\" sign. e.g. \"data#myparameter\"\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>getText<\/code>.","!static":false,"!category":"function","!type":"fn(sMergeFunctionName: String) -> sap.m.Column","parameters":{"sMergeFunctionName":"type: string, description: New value for property <code>mergeFunctionName<\/code>"}},"getCssAlign":{"!description":"Returns CSS alignment according to column hAlign setting or given parameter\nfor Begin/End values checks the locale settings","!static":false,"!category":"function","!type":"fn(sAlign?: String) -> String","parameters":{"sAlign":"type: String, description: TextAlign enumeration"}},"isPopin":{"!description":"Determines whether the column will be shown as pop-in or not","!static":false,"!category":"function","!type":"fn()"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDefines the width of the column. If you leave it empty then this column covers the remaining space.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.Column","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"isHidden":{"!description":"Determines whether the column will be hidden via media queries or not","!static":false,"!category":"function","!type":"fn()"},"setPopinHAlign":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.14 Use popinDisplay property instead.<br>Sets a new value for property <code>popinHAlign<\/code>.\n\nHorizontal alignment of the pop-in content. Available alignment settings are \"Begin\", \"Center\", \"End\", \"Left\", and \"Right\".\n\nNOTE: Controls with a text align do not inherit the horizontal alignment.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn(sPopinHAlign: sap.ui.core.TextAlign) -> sap.m.Column","parameters":{"sPopinHAlign":"type: sap.ui.core.TextAlign, description: New value for property <code>popinHAlign<\/code>"}},"setOrder":{"!description":"Sets the order of the column\nDoes not do the visual effect\nTable should be invalidate to re-render","!static":false,"!category":"function","!type":"fn(nOrder: Number)","parameters":{"nOrder":"type: int, description: order of the column"}},"setHAlign":{"!description":"Sets a new value for property <code>hAlign<\/code>.\n\nHorizontal alignment of the column content. Available alignment settings are \"Begin\", \"Center\", \"End\", \"Left\", and \"Right\".\n\nNOTE: Control with a \"textAlign\" property inherits the horizontal alignment.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn(sHAlign: sap.ui.core.TextAlign) -> sap.m.Column","parameters":{"sHAlign":"type: sap.ui.core.TextAlign, description: New value for property <code>hAlign<\/code>"}},"destroyHeader":{"!description":"Destroys the header in the aggregation <code>header<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Column"},"getOrder":{"!description":"Gets the order of the column","!static":false,"!category":"function","!type":"fn() -> Number"},"setMinScreenWidth":{"!description":"Sets a new value for property <code>minScreenWidth<\/code>.\n\nBy default column is always shown. If you set this property, control checks the minimum width of the screen to show or hide this column.\nAs you can give specific CSS sizes(e.g: \"480px\" or \"40em\"), you can also use sap.m.ScreenSize enumeration(e.g: \"Phone\", \"Tablet\", \"Desktop\", \"Small\", \"Medium\", \"Large\", ....).\n\nsap.m.Column.MediaQuery1->Range1 = 199\n\nThis property can be used for responsive design. e.g: \"40em\"(or \"640px\" or \"Tablet\") setting shows this column in iPad(and Desktop) but hides in iPhone.\nPlease also see \"demandPopin\" property\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sMinScreenWidth: String) -> sap.m.Column","parameters":{"sMinScreenWidth":"type: string, description: New value for property <code>minScreenWidth<\/code>"}},"setStyleClass":{"!description":"Sets a new value for property <code>styleClass<\/code>.\n\nCSS class name for column contents(header, cells and footer of column). This property can be used for different column styling. If column is shown as pop-in then this class name is applied to related pop-in row.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sStyleClass: String) -> sap.m.Column","parameters":{"sStyleClass":"type: string, description: New value for property <code>styleClass<\/code>"}},"getMergeDuplicates":{"!description":"Gets current value of property <code>mergeDuplicates<\/code>.\n\nSet \"true\" to merge repeating cells(duplicates) into one cell block.\nPlease see \"mergeFunctionName\" property to customize this property.\nNote: This feature must not be used together with two-way binding. This property is ignored if a column is shown in the pop-in.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.m.ListKeyboardMode":{"!description":"Defines the keyboard handling behavior of the <code>sap.m.List<\/code> or <code>sap.m.Table<\/code>.","Navigation":{"!description":"This default mode is suitable if the number of items is unlimited or if there is no editable field within the item.\nWhile the last/first interactive element within an item has the focus, pressing tab/shift+tab moves the focus to the next/previous element in the tab chain after/before the <code>sap.m.List<\/code> or <code>sap.m.Table<\/code>.","!category":"enum","!type":"String"},"!module":"sap/m/library","!category":"static class","Edit":{"!description":"This mode is suitable if the number of items is limited and if there are editable fields within the item.\nWhile the last/first interactive element within an item has the focus, pressing tab/shift+tab moves the focus to the next/previous element in the tab chain after/before the item <\/code>.","!category":"enum","!type":"String"}},"sap.m.ToolbarSeparator_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ToolbarSeparator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ToolbarSeparator"},"sap.m.QuickViewGroupElementType":{"!description":"QuickViewGroupElement is a combination of one label and another control (Link or Text) associated to this label","!module":"sap/m/library","phone":{"!description":"Displays a phone number link for direct dialing","!category":"enum","!type":"String"},"link":{"!description":"Displayes a regular HTML link","!category":"enum","!type":"String"},"mobile":{"!description":"Displays a phone number link for direct dialing and an icon for sending a text message","!category":"enum","!type":"String"},"!category":"static class","text":{"!description":"Dislpays text","!category":"enum","!type":"String"},"email":{"!description":"Displays an e-mail link","!category":"enum","!type":"String"},"pageLink":{"!description":"Dislpays a link for navigating to another QuickViewPage","!category":"enum","!type":"String"}},"sap.m.P13nColumnsItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.P13nColumnsItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.P13nColumnsItem"},"sap.m.TabContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.TabContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.TabContainer"},"sap.m.semantic.IGroup":{"!description":"\n  Marker interface for controls which are suitable as items of the group aggregation of sap.m.Semantic.MasterPage.","!module":"sap/m/library","!category":"static class"},"sap.m.MaskInput_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.MaskInput with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.InputBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.MaskInput"},"sap.m.PagingButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.PagingButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.PagingButton"},"sap.m.ViewSettingsCustomTab_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ViewSettingsCustomTab with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ViewSettingsCustomTab"},"sap.m.ObjectIdentifier_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ObjectIdentifier with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ObjectIdentifier"},"sap.m.SelectListKeyboardNavigationMode":{"!description":"Defines the keyboard navigation mode.","!module":"sap/m/library","!category":"static class","Delimited":{"!description":"Keyboard navigation is delimited at the last item or first item of the list.","!category":"enum","!type":"String"},"None":{"!description":"Keyboard navigation is disabled.","!category":"enum","!type":"String"}},"sap.m.Toolbar":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nThe content of the toolbar.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDefines the width of the control.\nBy default, Toolbar is a block element. If the the width is not explicitly set, the control will assume its natural size.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nDefines the height of the control.\nNote: By default, the Height property depends on the used theme and the Design property.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new Toolbar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getActive active} : boolean (default: false)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getDesign design} : sap.m.ToolbarDesign (default: Auto)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.m.Toolbar","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nSets the enabled property of all controls defined in the content aggregation.\nNote: This property does not apply to the toolbar itself, but rather to its items.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.m.Toolbar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Toolbar<\/code> itself.\n\nFired when the user clicks on the toolbar, if the Active property is set to \"true\".","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Toolbar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Toolbar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Toolbar"},"!description":"The Toolbar control is a horizontal container that is most commonly used to display buttons, labels, selects and various other input controls.\n\nBy default, Toolbar items are shrinkable if they have percent-based width (e.g. Input, Slider) or implement the {@link sap.ui.core.IShrinkable} interface (e.g. Text, Label). This behavior can be overridden by providing {@link sap.m.ToolbarLayoutData} for the Toolbar items.\n\nNote: It is recommended that you use {@link sap.m.OverflowToolbar} over Toolbar, unless you want to avoid overflow in favor of shrinking.","getActiveDesign":{"!description":"Returns the currently applied design property of the Toolbar.","!static":false,"!category":"function","!type":"fn() -> sap.m.ToolbarDesign"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.Toolbar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.m.Toolbar","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nDefines the height of the control.\nNote: By default, the Height property depends on the used theme and the Design property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.m.Toolbar","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDefines the width of the control.\nBy default, Toolbar is a block element. If the the width is not explicitly set, the control will assume its natural size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.Toolbar","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.Toolbar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.m.Toolbar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Toolbar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>srcControl<\/code> of type <code>sap.ui.core.Control<\/code>The toolbar item that was pressed<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Toolbar","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nSets the enabled property of all controls defined in the content aggregation.\nNote: This property does not apply to the toolbar itself, but rather to its items.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.m.Toolbar","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"setActive":{"!description":"Sets a new value for property <code>active<\/code>.\n\nIndicates that the whole toolbar is clickable. The Press event is fired only if Active is set to true.\nNote: This property should be used when there are no interactive controls inside the toolbar and the toolbar itself is meant to be interactive.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bActive: Boolean) -> sap.m.Toolbar","parameters":{"bActive":"type: boolean, description: New value for property <code>active<\/code>"}},"!module":"sap/m/Toolbar","getDesign":{"!description":"Gets current value of property <code>design<\/code>.\n\nDefines the toolbar design.\nNote: Design settings are theme-dependent. They also determine the default height of the toolbar.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ToolbarDesign"},"!helpDescription":"The Toolbar control is a horizontal container that is most commonly used to display buttons, labels, selects and various other input controls.\n\nBy default, Toolbar items are shrinkable if they have percent-based width (e.g. Input, Slider) or implement the {@link sap.ui.core.IShrinkable} interface (e.g. Text, Label). This behavior can be overridden by providing {@link sap.m.ToolbarLayoutData} for the Toolbar items.\n\nNote: It is recommended that you use {@link sap.m.OverflowToolbar} over Toolbar, unless you want to avoid overflow in favor of shrinking.","setDesign":{"!description":"Sets a new value for property <code>design<\/code>.\n\nDefines the toolbar design.\nNote: Design settings are theme-dependent. They also determine the default height of the toolbar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sDesign: sap.m.ToolbarDesign) -> sap.m.Toolbar","parameters":{"sDesign":"type: sap.m.ToolbarDesign, description: New value for property <code>design<\/code>"}},"getActive":{"!description":"Gets current value of property <code>active<\/code>.\n\nIndicates that the whole toolbar is clickable. The Press event is fired only if Active is set to true.\nNote: This property should be used when there are no interactive controls inside the toolbar and the toolbar itself is meant to be interactive.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.m.Toolbar","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}},"getTitleId":{"!description":"Returns the first sap.m.Title control id inside the toolbar for the accessibility","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.m.GrowingEnablement":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","extend":{"!description":"Creates a new subclass of class sap.m.GrowingEnablement with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.GrowingEnablement.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Creates a GrowingEnablement delegate that can be attached to ListBase Controls requiring capabilities for growing","!module":"sap/m/GrowingEnablement","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","!proto":"sap.ui.base.Object","!category":"class"},"sap.m.PageAccessibleLandmarkInfo_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.PageAccessibleLandmarkInfo with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.PageAccessibleLandmarkInfo"},"sap.m.semantic.SemanticPage_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.SemanticPage with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.SemanticPage"},"sap.m.ComboBoxTextField_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ComboBoxTextField with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.InputBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ComboBoxTextField"},"sap.m.ToolbarDesign":{"!description":"Types of the Toolbar Design.","Auto":{"!description":"The toolbar can be inserted into other controls and if the design is \"Auto\" then it inherits the design from parent control.","!category":"enum","!type":"String"},"!module":"sap/m/library","Transparent":{"!description":"The toolbar and its content will be displayed transparent.","!category":"enum","!type":"String"},"!category":"static class","Info":{"!description":"The toolbar appears smaller than the regular size to show information(e.g: text, icon).","!category":"enum","!type":"String"},"Solid":{"!description":"The toolbar has a solid background. Its content will be rendered in a standard way.","!category":"enum","!type":"String"}},"sap.m.NotificationListItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.NotificationListItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.NotificationListBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.NotificationListItem"},"sap.m.semantic.PrintAction":{"!description":"A PrintAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","extend":{"!description":"Creates a new subclass of class sap.m.semantic.PrintAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.PrintAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new PrintAction.","!module":"sap/m/semantic/PrintAction","!helpDescription":"A PrintAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","!proto":"sap.m.semantic.SemanticButton","!category":"class"},"sap.m.FlexRendertype":{"!description":"Determines the type of HTML elements used for rendering controls.","Div":{"!description":"The UI5 controls are wrapped in DIV elements","!category":"enum","!type":"String"},"!module":"sap/m/library","!category":"static class","List":{"!description":"The UI5 controls are wrapped in LI elements, the entire Flex Box is an unordered list (UL)","!category":"enum","!type":"String"}},"sap.m.P13nDialog":{"setShowReset":{"!description":"Sets a new value for property <code>showReset<\/code>.\n\nThis property determines whether the 'Restore' button is shown inside the dialog. If this property is set to true, clicking the\n'Reset' button will trigger the <code>reset<\/code> event sending a notification that model data must be reset.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowReset: Boolean) -> sap.m.P13nDialog","parameters":{"bShowReset":"type: boolean, description: New value for property <code>showReset<\/code>"}},"getShowResetEnabled":{"!description":"Gets current value of property <code>showResetEnabled<\/code>.\n\nThis property determines whether the 'Restore' button is enabled and is taken into account only if <code>showReset<\/code> is set\nto <code>true<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removePanel":{"!description":"Removes a panel from the aggregation <code>panels<\/code>.","!static":false,"!category":"function","!type":"fn(vPanel: Number | String | sap.m.P13nPanel) -> sap.m.P13nPanel","parameters":{"vPanel":"type: int|string|sap.m.P13nPanel, description: The panelto remove or its index or id"}},"unbindPanels":{"!description":"Unbinds aggregation <code>panels<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.P13nDialog"},"!proto":"sap.m.Dialog","!category":"class","fireReset":{"!description":"Fires event <code>reset<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.P13nDialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"destroyPanels":{"!description":"Destroys all the panels in the aggregation <code>panels<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.P13nDialog"},"detachOk":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>ok<\/code> event of this <code>sap.m.P13nDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.P13nDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setValidationExecutor":{"!description":"Sets a new value for property <code>validationExecutor<\/code>.\n\nCalls the validation listener once all panel-relevant validation checks have been done. This callback function is called in order\nto perform cross-model validation checks.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oValidationExecutor: Object) -> sap.m.P13nDialog","parameters":{"oValidationExecutor":"type: object, description: New value for property <code>validationExecutor<\/code>"}},"setShowResetEnabled":{"!description":"Sets a new value for property <code>showResetEnabled<\/code>.\n\nThis property determines whether the 'Restore' button is enabled and is taken into account only if <code>showReset<\/code> is set\nto <code>true<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowResetEnabled: Boolean) -> sap.m.P13nDialog","parameters":{"bShowResetEnabled":"type: boolean, description: New value for property <code>showResetEnabled<\/code>"}},"!constructorDescription":"Constructor for a new P13nDialog.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getInitialVisiblePanelType initialVisiblePanelType} : string<\/li>\n<li>{@link #getShowReset showReset} : boolean (default: false)<\/li>\n<li>{@link #getShowResetEnabled showResetEnabled} : boolean (default: false)<\/li>\n<li>{@link #getValidationExecutor validationExecutor} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPanels panels} : sap.m.P13nPanel[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:ok ok} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:reset reset} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Dialog#constructor sap.m.Dialog}\ncan be used as well.","getValidationExecutor":{"!description":"Gets current value of property <code>validationExecutor<\/code>.\n\nCalls the validation listener once all panel-relevant validation checks have been done. This callback function is called in order\nto perform cross-model validation checks.","!static":false,"!category":"function","!type":"fn() -> Object"},"addPanel":{"!description":"Adds some panel to the aggregation <code>panels<\/code>.","!static":false,"!category":"function","!type":"fn(oPanel: sap.m.P13nPanel) -> sap.m.P13nDialog","parameters":{"oPanel":"type: sap.m.P13nPanel, description: the panel to add; if empty, nothing is inserted"}},"getVisiblePanel":{"!description":"Returns visible panel.","!static":false,"!category":"function","!type":"fn() -> sap.m.P13nPanel | null"},"attachOk":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>ok<\/code> event of this <code>sap.m.P13nDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.P13nDialog<\/code> itself.\n\nEvent fired if the 'ok' button in P13nDialog is clicked.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.P13nDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.P13nDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireCancel":{"!description":"Fires event <code>cancel<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.P13nDialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!description":"The P13nDialog control provides a dialog that contains one or more panels. On each of the panels, one or more changes with regards to a\n       table can be processed. For example, a panel to set a column to invisible, change the order of the columns or a panel to sort or filter\n       tables.","bindPanels":{"!description":"Binds aggregation <code>panels<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.P13nDialog","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getShowReset":{"!description":"Gets current value of property <code>showReset<\/code>.\n\nThis property determines whether the 'Restore' button is shown inside the dialog. If this property is set to true, clicking the\n'Reset' button will trigger the <code>reset<\/code> event sending a notification that model data must be reset.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachCancel":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>cancel<\/code> event of this <code>sap.m.P13nDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.P13nDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.P13nDialog.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setInitialVisiblePanelType":{"!description":"Sets a new value for property <code>initialVisiblePanelType<\/code>.\n\nThis property determines which panel is initially shown when dialog is opened. Due to extensibility reason the type should be\n<code>string<\/code>. So it is feasible to add a custom panel without expanding the type.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sInitialVisiblePanelType: String) -> sap.m.P13nDialog","parameters":{"sInitialVisiblePanelType":"type: string, description: New value for property <code>initialVisiblePanelType<\/code>"}},"getPanels":{"!description":"Gets content of aggregation <code>panels<\/code>.\n\nThe dialog panels displayed in the dialog.","!static":false,"!category":"function","!type":"fn() -> [sap.m.P13nPanel]"},"getInitialVisiblePanelType":{"!description":"Gets current value of property <code>initialVisiblePanelType<\/code>.\n\nThis property determines which panel is initially shown when dialog is opened. Due to extensibility reason the type should be\n<code>string<\/code>. So it is feasible to add a custom panel without expanding the type.","!static":false,"!category":"function","!type":"fn() -> String"},"detachReset":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>reset<\/code> event of this <code>sap.m.P13nDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.P13nDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.m.P13nDialog with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Dialog.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/m/P13nDialog","removeAllPanels":{"!description":"Removes all the controls from the aggregation <code>panels<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.P13nPanel]"},"!helpDescription":"The P13nDialog control provides a dialog that contains one or more panels. On each of the panels, one or more changes with regards to a\n       table can be processed. For example, a panel to set a column to invisible, change the order of the columns or a panel to sort or filter\n       tables.","indexOfPanel":{"!description":"Checks for the provided <code>sap.m.P13nPanel<\/code> in the aggregation <code>panels<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oPanel: sap.m.P13nPanel) -> Number","parameters":{"oPanel":"type: sap.m.P13nPanel, description: The panel whose index is looked for"}},"insertPanel":{"!description":"Inserts a panel into the aggregation <code>panels<\/code>.","!static":false,"!category":"function","!type":"fn(oPanel: sap.m.P13nPanel, iIndex: Number) -> sap.m.P13nDialog","parameters":{"oPanel":"type: sap.m.P13nPanel, description: the panel to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the panel should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the panel is inserted at position 0; for a value\n             greater than the current size of the aggregation, the panel is inserted at\n             the last position"}},"fireOk":{"!description":"Fires event <code>ok<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.P13nDialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachReset":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>reset<\/code> event of this <code>sap.m.P13nDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.P13nDialog<\/code> itself.\n\nEvent fired if the 'reset' button in P13nDialog is clicked.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.P13nDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.P13nDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachCancel":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>cancel<\/code> event of this <code>sap.m.P13nDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.P13nDialog<\/code> itself.\n\nEvent fired if the 'cancel' button in P13nDialog is clicked.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.P13nDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.P13nDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.m.ViewSettingsDialog":{"fireResetFilters":{"!description":"Fires event <code>resetFilters<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ViewSettingsDialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"removePresetFilterItem":{"!description":"Removes a presetFilterItem from the aggregation <code>presetFilterItems<\/code>.","!static":false,"!category":"function","!type":"fn(vPresetFilterItem: Number | String | sap.m.ViewSettingsItem) -> sap.m.ViewSettingsItem","parameters":{"vPresetFilterItem":"type: int|string|sap.m.ViewSettingsItem, description: The presetFilterItemto remove or its index or id"}},"bindSortItems":{"!description":"Binds aggregation <code>sortItems<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.ViewSettingsDialog","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"setSelectedPresetFilterItem":{"!description":"Sets the selected preset filter item.","!static":false,"!category":"function","!type":"fn(vItemOrKey: sap.m.ViewSettingsItem | String) -> sap.m.ViewSettingsDialog","parameters":{"vItemOrKey":"type: sap.m.ViewSettingsItem|string, description: The selected item or the item's key string"}},"removeSortItem":{"!description":"Removes a sortItem from the aggregation <code>sortItems<\/code>.","!static":false,"!category":"function","!type":"fn(vSortItem: Number | String | sap.m.ViewSettingsItem) -> sap.m.ViewSettingsItem","parameters":{"vSortItem":"type: int|string|sap.m.ViewSettingsItem, description: The sortItemto remove or its index or id"}},"getGroupItems":{"!description":"Gets content of aggregation <code>groupItems<\/code>.\n\nThe list of items with key and value that can be grouped on (for example, a list of columns for a table).","!static":false,"!category":"function","!type":"fn() -> [sap.m.ViewSettingsItem]"},"removeAllCustomTabs":{"!description":"Removes all the controls from the aggregation <code>customTabs<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ViewSettingsCustomTab]"},"getSortItems":{"!description":"Gets content of aggregation <code>sortItems<\/code>.\n\nThe list of items with key and value that can be sorted over (for example, a list of columns for a table).","!static":false,"!category":"function","!type":"fn() -> [sap.m.ViewSettingsItem]"},"setGroupDescending":{"!description":"Sets a new value for property <code>groupDescending<\/code>.\n\nDetermines whether the group order is descending or ascending (default).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bGroupDescending: Boolean) -> sap.m.ViewSettingsDialog","parameters":{"bGroupDescending":"type: boolean, description: New value for property <code>groupDescending<\/code>"}},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nDefines the title of the dialog. If not set and there is only one active tab, the dialog uses the default \"View\" or \"Sort\", \"Group\", \"Filter\" respectively.","!static":false,"!category":"function","!type":"fn() -> String"},"addCustomTab":{"!description":"Overwrites the aggregation setter in order to have ID validation logic as some strings\nare reserved for the predefined tabs.","!static":false,"!category":"function","!type":"fn(oCustomTab: Object) -> sap.m.ViewSettingsDialog","parameters":{"oCustomTab":"type: object, description: The custom tab to be added"}},"removeStyleClass":{"!description":"Forward method to the inner dialog method: removeStyleClass.","!static":false,"!category":"function","!type":"fn() -> sap.m.ViewSettingsDialog"},"setSelectedSortItem":{"!description":"Sets the selected sort item (either by key or by item).","!static":false,"!category":"function","!type":"fn(vItemOrKey: sap.m.ViewSettingsItem | String) -> sap.m.ViewSettingsDialog","parameters":{"vItemOrKey":"type: sap.m.ViewSettingsItem|string, description: The selected item or the item's key string"}},"getPresetFilterItems":{"!description":"Gets content of aggregation <code>presetFilterItems<\/code>.\n\nThe list of preset filter items that allows the selection of more complex or custom filters. These entries are displayed at the top of the filter tab.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ViewSettingsItem]"},"indexOfCustomTab":{"!description":"Checks for the provided <code>sap.m.ViewSettingsCustomTab<\/code> in the aggregation <code>customTabs<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oCustomTab: sap.m.ViewSettingsCustomTab) -> Number","parameters":{"oCustomTab":"type: sap.m.ViewSettingsCustomTab, description: The customTab whose index is looked for"}},"unbindSortItems":{"!description":"Unbinds aggregation <code>sortItems<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.ViewSettingsDialog"},"getSelectedFilterString":{"!description":"Gets the filter string in format: \"filter name (subfilter1 name, subfilter2\nname, ...), ...\".\nFor custom and preset filters it will only add the filter name to the resulting string.","!static":false,"!category":"function","!type":"fn() -> String"},"getSelectedSortItem":{"!description":"ID of the element which is the current target of the association <code>selectedSortItem<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ViewSettingsItem"},"fireFilterDetailPageOpened":{"!description":"Fires event <code>filterDetailPageOpened<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>parentFilterItem<\/code> of type <code>sap.m.ViewSettingsFilterItem<\/code>The filter item for which the details are opened.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ViewSettingsDialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"insertGroupItem":{"!description":"Inserts a groupItem into the aggregation <code>groupItems<\/code>.","!static":false,"!category":"function","!type":"fn(oGroupItem: sap.m.ViewSettingsItem, iIndex: Number) -> sap.m.ViewSettingsDialog","parameters":{"oGroupItem":"type: sap.m.ViewSettingsItem, description: the groupItem to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the groupItem should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the groupItem is inserted at position 0; for a value\n             greater than the current size of the aggregation, the groupItem is inserted at\n             the last position"}},"getSelectedGroupItem":{"!description":"ID of the element which is the current target of the association <code>selectedGroupItem<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ViewSettingsItem"},"fireCancel":{"!description":"Fires event <code>cancel<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ViewSettingsDialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!description":"The ViewSettingsDialog control provides functionality to easily select the options for sorting, grouping, and filtering data. It is a composite control, consisting of a modal popover and several internal lists. There are three different tabs (Sort, Group, Filter) in the dialog that can be activated by filling the respective associations. If only one association is filled, the other tabs are automatically hidden. The selected options can be used to create sorters and filters for the table.","detachCancel":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>cancel<\/code> event of this <code>sap.m.ViewSettingsDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ViewSettingsDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.ViewSettingsDialog.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getSortDescending":{"!description":"Gets current value of property <code>sortDescending<\/code>.\n\nDetermines whether the sort order is descending or ascending (default).\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertFilterItem":{"!description":"Inserts a filterItem into the aggregation <code>filterItems<\/code>.","!static":false,"!category":"function","!type":"fn(oFilterItem: sap.m.ViewSettingsItem, iIndex: Number) -> sap.m.ViewSettingsDialog","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the filterItem should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the filterItem is inserted at position 0; for a value\n             greater than the current size of the aggregation, the filterItem is inserted at\n             the last position","oFilterItem":"type: sap.m.ViewSettingsItem, description: the filterItem to insert; if empty, nothing is inserted"}},"setTitle":{"!description":"Sets the title of the internal dialog.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.ViewSettingsDialog","parameters":{"sTitle":"type: string, description: The title text for the dialog"}},"removeCustomTab":{"!description":"Removes a customTab from the aggregation <code>customTabs<\/code>.","!static":false,"!category":"function","!type":"fn(vCustomTab: Number | String | sap.m.ViewSettingsCustomTab) -> sap.m.ViewSettingsCustomTab","parameters":{"vCustomTab":"type: int|string|sap.m.ViewSettingsCustomTab, description: The customTabto remove or its index or id"}},"indexOfSortItem":{"!description":"Checks for the provided <code>sap.m.ViewSettingsItem<\/code> in the aggregation <code>sortItems<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSortItem: sap.m.ViewSettingsItem) -> Number","parameters":{"oSortItem":"type: sap.m.ViewSettingsItem, description: The sortItem whose index is looked for"}},"extend":{"!description":"Creates a new subclass of class sap.m.ViewSettingsDialog with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getSelectedFilterKeys":{"!description":"Gets the selected filter object in format {key: boolean}.\n\nIt can be used to create matching sorters and filters to apply the selected settings to the data.","!static":false,"!category":"function","!type":"fn() -> Object"},"setBusy":{"!description":"Forward the busy state setting to the internal dialog instance.\nNeeded because of the not-bullet proof implementation of setBusy in sap.ui.core.Control","!static":false,"!category":"function","!type":"fn(bBusy: Boolean) -> sap.m.ViewSettingsDialog","parameters":{"bBusy":"type: boolean, description: The busy state flag"}},"!module":"sap/m/ViewSettingsDialog","!helpDescription":"The ViewSettingsDialog control provides functionality to easily select the options for sorting, grouping, and filtering data. It is a composite control, consisting of a modal popover and several internal lists. There are three different tabs (Sort, Group, Filter) in the dialog that can be activated by filling the respective associations. If only one association is filled, the other tabs are automatically hidden. The selected options can be used to create sorters and filters for the table.","addStyleClass":{"!description":"Forward method to the inner dialog method: addStyleClass.","!static":false,"!category":"function","!type":"fn() -> sap.m.ViewSettingsDialog"},"addFilterItem":{"!description":"Adds some filterItem to the aggregation <code>filterItems<\/code>.","!static":false,"!category":"function","!type":"fn(oFilterItem: sap.m.ViewSettingsItem) -> sap.m.ViewSettingsDialog","parameters":{"oFilterItem":"type: sap.m.ViewSettingsItem, description: the filterItem to add; if empty, nothing is inserted"}},"detachConfirm":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>confirm<\/code> event of this <code>sap.m.ViewSettingsDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ViewSettingsDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"unbindGroupItems":{"!description":"Unbinds aggregation <code>groupItems<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.ViewSettingsDialog"},"bindPresetFilterItems":{"!description":"Binds aggregation <code>presetFilterItems<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.ViewSettingsDialog","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"removeAllGroupItems":{"!description":"Removes all the controls from the aggregation <code>groupItems<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ViewSettingsItem]"},"setSortDescending":{"!description":"Sets a new value for property <code>sortDescending<\/code>.\n\nDetermines whether the sort order is descending or ascending (default).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSortDescending: Boolean) -> sap.m.ViewSettingsDialog","parameters":{"bSortDescending":"type: boolean, description: New value for property <code>sortDescending<\/code>"}},"attachCancel":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>cancel<\/code> event of this <code>sap.m.ViewSettingsDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ViewSettingsDialog<\/code> itself.\n\nCalled when the Cancel button is pressed. It can be used to set the state of custom filter controls.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ViewSettingsDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ViewSettingsDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setSelectedGroupItem":{"!description":"Sets the selected group item (either by key or by item).","!static":false,"!category":"function","!type":"fn(vItemOrKey: sap.m.ViewSettingsItem | String) -> sap.m.ViewSettingsDialog","parameters":{"vItemOrKey":"type: sap.m.ViewSettingsItem|string, description: The selected item or the item's key string"}},"getSelectedFilterItems":{"!description":"Returns the selected filters as an array of ViewSettingsItems.\n\nIt can be used to create matching sorters and filters to apply the selected settings to the data.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ViewSettingsItem]"},"indexOfPresetFilterItem":{"!description":"Checks for the provided <code>sap.m.ViewSettingsItem<\/code> in the aggregation <code>presetFilterItems<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oPresetFilterItem: sap.m.ViewSettingsItem) -> Number","parameters":{"oPresetFilterItem":"type: sap.m.ViewSettingsItem, description: The presetFilterItem whose index is looked for"}},"bindGroupItems":{"!description":"Binds aggregation <code>groupItems<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.ViewSettingsDialog","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"toggleStyleClass":{"!description":"Forward method to the inner dialog method: toggleStyleClass.","!static":false,"!category":"function","!type":"fn() -> sap.m.ViewSettingsDialog"},"insertPresetFilterItem":{"!description":"Inserts a presetFilterItem into the aggregation <code>presetFilterItems<\/code>.","!static":false,"!category":"function","!type":"fn(oPresetFilterItem: sap.m.ViewSettingsItem, iIndex: Number) -> sap.m.ViewSettingsDialog","parameters":{"oPresetFilterItem":"type: sap.m.ViewSettingsItem, description: the presetFilterItem to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the presetFilterItem should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the presetFilterItem is inserted at position 0; for a value\n             greater than the current size of the aggregation, the presetFilterItem is inserted at\n             the last position"}},"unbindPresetFilterItems":{"!description":"Unbinds aggregation <code>presetFilterItems<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.ViewSettingsDialog"},"!proto":"sap.ui.core.Control","attachConfirm":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>confirm<\/code> event of this <code>sap.m.ViewSettingsDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ViewSettingsDialog<\/code> itself.\n\nIndicates that the user has pressed the OK button and the selected sort, group, and filter settings should be applied to the data on this page.\n<\/br><\/br><b>Note:<\/b> Custom tabs are not converted to event parameters automatically. For custom tabs, you have to read the state of your controls inside the callback of this event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ViewSettingsDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ViewSettingsDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"unbindCustomTabs":{"!description":"Unbinds aggregation <code>customTabs<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.ViewSettingsDialog"},"!category":"class","insertSortItem":{"!description":"Inserts a sortItem into the aggregation <code>sortItems<\/code>.","!static":false,"!category":"function","!type":"fn(oSortItem: sap.m.ViewSettingsItem, iIndex: Number) -> sap.m.ViewSettingsDialog","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the sortItem should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the sortItem is inserted at position 0; for a value\n             greater than the current size of the aggregation, the sortItem is inserted at\n             the last position","oSortItem":"type: sap.m.ViewSettingsItem, description: the sortItem to insert; if empty, nothing is inserted"}},"addGroupItem":{"!description":"Adds a group item and sets the association to reflect the selected state.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.ViewSettingsItem) -> sap.m.ViewSettingsDialog","parameters":{"oItem":"type: sap.m.ViewSettingsItem, description: The item to be added to the group items"}},"fireConfirm":{"!description":"Fires event <code>confirm<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>sortItem<\/code> of type <code>sap.m.ViewSettingsItem<\/code>The selected sort item.<\/li>\n<li><code>sortDescending<\/code> of type <code>boolean<\/code>The selected sort order (true = descending, false = ascending).<\/li>\n<li><code>groupItem<\/code> of type <code>sap.m.ViewSettingsItem<\/code>The selected group item.<\/li>\n<li><code>groupDescending<\/code> of type <code>boolean<\/code>The selected group order (true = descending, false = ascending).<\/li>\n<li><code>presetFilterItem<\/code> of type <code>sap.m.ViewSettingsItem<\/code>The selected preset filter item.<\/li>\n<li><code>filterItems<\/code> of type <code>sap.m.ViewSettingsItem[]<\/code>The selected filters in an array of ViewSettingsItem.<\/li>\n<li><code>filterKeys<\/code> of type <code>object<\/code>The selected filter items in an object notation format: { key: boolean }. If a custom control filter was displayed (for example, the user clicked on the filter item), the value for its key is set to true to indicate that there has been an interaction with the control.<\/li>\n<li><code>filterString<\/code> of type <code>string<\/code>The selected filter items in a string format to display in the control's header bar in format \"Filtered by: key (subkey1, subkey2, subkey3)\".<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ViewSettingsDialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!constructorDescription":"Constructor for a new ViewSettingsDialog.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getSortDescending sortDescending} : boolean (default: false)<\/li>\n<li>{@link #getGroupDescending groupDescending} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSortItems sortItems} : sap.m.ViewSettingsItem[]<\/li>\n<li>{@link #getGroupItems groupItems} : sap.m.ViewSettingsItem[]<\/li>\n<li>{@link #getFilterItems filterItems} : sap.m.ViewSettingsItem[]<\/li>\n<li>{@link #getPresetFilterItems presetFilterItems} : sap.m.ViewSettingsItem[]<\/li>\n<li>{@link #getCustomTabs customTabs} : sap.m.ViewSettingsCustomTab[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:confirm confirm} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:resetFilters resetFilters} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:filterDetailPageOpened filterDetailPageOpened} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","destroyCustomTabs":{"!description":"Destroys all the customTabs in the aggregation <code>customTabs<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ViewSettingsDialog"},"removeFilterItem":{"!description":"Removes a filter Item and resets the remembered page if it was the filter detail page of the removed filter.","!static":false,"!category":"function","!type":"fn(vFilterItem: Number | sap.m.ViewSettingsFilterItem | String) -> sap.m.ViewSettingsDialog","parameters":{"vFilterItem":"type: int|sap.m.ViewSettingsFilterItem|string, description: The filter item's index, or the item itself, or its id"}},"addPresetFilterItem":{"!description":"Adds a preset filter item and sets the association to reflect the selected state.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.ViewSettingsItem) -> sap.m.ViewSettingsDialog","parameters":{"oItem":"type: sap.m.ViewSettingsItem, description: The selected item or a string with the key"}},"removeAllPresetFilterItems":{"!description":"Removes all the controls from the aggregation <code>presetFilterItems<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ViewSettingsItem]"},"hasStyleClass":{"!description":"Forward method to the inner dialog method: hasStyleClass.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addSortItem":{"!description":"Adds a sort item and sets the association to reflect the selected state.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.ViewSettingsItem) -> sap.m.ViewSettingsDialog","parameters":{"oItem":"type: sap.m.ViewSettingsItem, description: The item to be added to the aggregation"}},"destroyPresetFilterItems":{"!description":"Destroys all the presetFilterItems in the aggregation <code>presetFilterItems<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ViewSettingsDialog"},"destroySortItems":{"!description":"Destroys all the sortItems in the aggregation <code>sortItems<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ViewSettingsDialog"},"getGroupDescending":{"!description":"Gets current value of property <code>groupDescending<\/code>.\n\nDetermines whether the group order is descending or ascending (default).\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFilterItems":{"!description":"Gets content of aggregation <code>filterItems<\/code>.\n\nThe list of items with key and value that can be filtered on (for example, a list of columns for a table). A filterItem is associated with one or more detail filters.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ViewSettingsItem]"},"destroyGroupItems":{"!description":"Destroys all the groupItems in the aggregation <code>groupItems<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ViewSettingsDialog"},"removeAllFilterItems":{"!description":"Removes all filter Items and resets the remembered page if it was a filter detail page and all of its filter items are being removed.","!static":false,"!category":"function","!type":"fn() -> sap.m.ViewSettingsDialog"},"destroyFilterItems":{"!description":"Destroys all the filterItems in the aggregation <code>filterItems<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ViewSettingsDialog"},"getDomRef":{"!description":"Forward method to the inner dialog method: getDomRef.","!static":false,"!category":"function","!type":"fn() -> Element"},"unbindFilterItems":{"!description":"Unbinds aggregation <code>filterItems<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.ViewSettingsDialog"},"attachFilterDetailPageOpened":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>filterDetailPageOpened<\/code> event of this <code>sap.m.ViewSettingsDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ViewSettingsDialog<\/code> itself.\n\nFired when the filter detail page is opened.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ViewSettingsDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ViewSettingsDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"indexOfFilterItem":{"!description":"Checks for the provided <code>sap.m.ViewSettingsItem<\/code> in the aggregation <code>filterItems<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oFilterItem: sap.m.ViewSettingsItem) -> Number","parameters":{"oFilterItem":"type: sap.m.ViewSettingsItem, description: The filterItem whose index is looked for"}},"setSelectedFilterKeys":{"!description":"Sets the selected filter object in format {key: boolean}.","!static":false,"!category":"function","!type":"fn(oSelectedFilterKeys: Object) -> sap.m.ViewSettingsDialog","parameters":{"oSelectedFilterKeys":"type: object, description: A configuration object with filter item and sub item keys in the format: { key: boolean }.\n        Setting boolean to true will set the filter to true, false or omitting an entry will set the filter to false.\n        It can be used to set the dialog state based on presets."}},"detachResetFilters":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>resetFilters<\/code> event of this <code>sap.m.ViewSettingsDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ViewSettingsDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"bindCustomTabs":{"!description":"Binds aggregation <code>customTabs<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.ViewSettingsDialog","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"insertCustomTab":{"!description":"Inserts a customTab into the aggregation <code>customTabs<\/code>.","!static":false,"!category":"function","!type":"fn(oCustomTab: sap.m.ViewSettingsCustomTab, iIndex: Number) -> sap.m.ViewSettingsDialog","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the customTab should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the customTab is inserted at position 0; for a value\n             greater than the current size of the aggregation, the customTab is inserted at\n             the last position","oCustomTab":"type: sap.m.ViewSettingsCustomTab, description: the customTab to insert; if empty, nothing is inserted"}},"attachResetFilters":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>resetFilters<\/code> event of this <code>sap.m.ViewSettingsDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ViewSettingsDialog<\/code> itself.\n\nCalled when the reset filters button is pressed. It can be used to clear the state of custom filter controls.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ViewSettingsDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ViewSettingsDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getSelectedPresetFilterItem":{"!description":"ID of the element which is the current target of the association <code>selectedPresetFilterItem<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ViewSettingsItem"},"bindFilterItems":{"!description":"Binds aggregation <code>filterItems<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.ViewSettingsDialog","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"removeAllSortItems":{"!description":"Removes all the controls from the aggregation <code>sortItems<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ViewSettingsItem]"},"getCustomTabs":{"!description":"Gets content of aggregation <code>customTabs<\/code>.\n\nThe list of all the custom tabs.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ViewSettingsCustomTab]"},"indexOfGroupItem":{"!description":"Checks for the provided <code>sap.m.ViewSettingsItem<\/code> in the aggregation <code>groupItems<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oGroupItem: sap.m.ViewSettingsItem) -> Number","parameters":{"oGroupItem":"type: sap.m.ViewSettingsItem, description: The groupItem whose index is looked for"}},"removeGroupItem":{"!description":"Removes a groupItem from the aggregation <code>groupItems<\/code>.","!static":false,"!category":"function","!type":"fn(vGroupItem: Number | String | sap.m.ViewSettingsItem) -> sap.m.ViewSettingsItem","parameters":{"vGroupItem":"type: int|string|sap.m.ViewSettingsItem, description: The groupItemto remove or its index or id"}},"detachFilterDetailPageOpened":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>filterDetailPageOpened<\/code> event of this <code>sap.m.ViewSettingsDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ViewSettingsDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"open":{"!description":"Opens the ViewSettingsDialog relative to the parent control.","!static":false,"!category":"function","!type":"fn(sPageId?: String) -> sap.m.ViewSettingsDialog","parameters":{"sPageId":"type: string, description: The ID of the initial page to be opened in the dialog.\n\tThe available values are \"sort\", \"group\", \"filter\" or IDs of custom tabs."}}},"sap.m.IconTabFilter_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.IconTabFilter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.IconTabFilter"},"sap.m.QuickView":{"openBy":{"!description":"Opens the QuickView.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control) -> sap.m.QuickView","parameters":{"oControl":"type: sap.ui.core.Control, description: The control which opens the QuickView."}},"attachAfterClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterClose<\/code> event of this <code>sap.m.QuickView<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.QuickView<\/code> itself.\n\nThis event fires after the QuickView is closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.QuickView","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.QuickView<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.m.QuickViewBase","attachAfterOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterOpen<\/code> event of this <code>sap.m.QuickView<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.QuickView<\/code> itself.\n\nThis event fires after the QuickView is opened.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.QuickView","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.QuickView<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe width of the QuickView. The property takes effect only when running on desktop or tablet.\n\nDefault value is <code>320px<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"fireBeforeClose":{"!description":"Fires event <code>beforeClose<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>openBy<\/code> of type <code>sap.ui.core.Control<\/code>This parameter refers to the control, which opens the QuickView.<\/li>\n<li><code>origin<\/code> of type <code>sap.m.Button<\/code>This parameter contains the control,\nwhich triggers the close of the QuickView.\nIt is undefined when running on desktop or tablet.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.QuickView","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"detachAfterClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterClose<\/code> event of this <code>sap.m.QuickView<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.QuickView","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new QuickView.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPlacement placement} : sap.m.PlacementType (default: Right)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 320px)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterOpen afterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterClose afterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeOpen beforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeClose beforeClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.QuickViewBase#constructor sap.m.QuickViewBase}\ncan be used as well.","fireBeforeOpen":{"!description":"Fires event <code>beforeOpen<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>openBy<\/code> of type <code>sap.ui.core.Control<\/code>This parameter refers to the control, which opens the QuickView.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.QuickView","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"detachBeforeOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beforeOpen<\/code> event of this <code>sap.m.QuickView<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.QuickView","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!description":"The QuickView control renders a responsive popover (sap.m.Popover or sap.m.Dialog)\nand displays information of an object in a business-card format. It also allows this object to be linked to\nanother object using one of the links in the responsive popover. Clicking that link updates the information in the\npopover with the data of the linked object. Unlimited number of objects can be linked.","getMetadata":{"!description":"Returns a metadata object for class sap.m.QuickView.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"fireAfterOpen":{"!description":"Fires event <code>afterOpen<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>openBy<\/code> of type <code>sap.ui.core.Control<\/code>This parameter refers to the control, which opens the QuickView.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.QuickView","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getPlacement":{"!description":"Gets current value of property <code>placement<\/code>.\n\nThis property is reused from sap.m.Popover and only takes effect when running on desktop or tablet. Please refer the documentation of the placement property of sap.m.Popover.\n\nDefault value is <code>Right<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.PlacementType"},"attachBeforeOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beforeOpen<\/code> event of this <code>sap.m.QuickView<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.QuickView<\/code> itself.\n\nThis event fires before the QuickView is opened.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.QuickView","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.QuickView<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachBeforeClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beforeClose<\/code> event of this <code>sap.m.QuickView<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.QuickView","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setWidth":{"!description":"The method sets the width of the QuickView.\nWorks only on desktop or tablet.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.QuickView","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: The new width of the QuickView."}},"attachBeforeClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beforeClose<\/code> event of this <code>sap.m.QuickView<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.QuickView<\/code> itself.\n\nThis event fires before the QuickView is closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.QuickView","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.QuickView<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachAfterOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterOpen<\/code> event of this <code>sap.m.QuickView<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.QuickView","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.m.QuickView with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.QuickViewBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/m/QuickView","!helpDescription":"The QuickView control renders a responsive popover (sap.m.Popover or sap.m.Dialog)\nand displays information of an object in a business-card format. It also allows this object to be linked to\nanother object using one of the links in the responsive popover. Clicking that link updates the information in the\npopover with the data of the linked object. Unlimited number of objects can be linked.","fireAfterClose":{"!description":"Fires event <code>afterClose<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>openBy<\/code> of type <code>sap.ui.core.Control<\/code>This parameter refers to the control, which opens the QuickView.<\/li>\n<li><code>origin<\/code> of type <code>sap.m.Button<\/code>This parameter contains the control,\nwhich triggers the close of the QuickView.\nIt is undefined when running on desktop or tablet.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.QuickView","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setPlacement":{"!description":"The method sets placement position of the QuickView.","!static":false,"!category":"function","!type":"fn(sPlacement: sap.m.PlacementType) -> sap.m.QuickView","parameters":{"sPlacement":"type: sap.m.PlacementType, description: The side from which the QuickView appears relative to the control that opens it."}}},"sap.m.ComboBoxTextField":{"!description":"The <code>sap.m.ComboBoxTextField<\/code>.","getMetadata":{"!description":"Returns a metadata object for class sap.m.ComboBoxTextField.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"!proto":"sap.m.InputBase","!category":"class","setMaxWidth":{"!description":"Sets a new value for property <code>maxWidth<\/code>.\n\nSets the maximum width of the text field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sMaxWidth: sap.ui.core.CSSSize) -> sap.m.ComboBoxTextField","parameters":{"sMaxWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>maxWidth<\/code>"}},"setShowButton":{"!description":"Sets a new value for property <code>showButton<\/code>.\n\nIndicates whether the dropdown arrow button is shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowButton: Boolean) -> sap.m.ComboBoxTextField","parameters":{"bShowButton":"type: boolean, description: New value for property <code>showButton<\/code>"}},"getMaxWidth":{"!description":"Gets current value of property <code>maxWidth<\/code>.\n\nSets the maximum width of the text field.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"extend":{"!description":"Creates a new subclass of class sap.m.ComboBoxTextField with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.InputBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getValue":{"!description":"Gets the <code>value<\/code>.\n\nDefault value is an empty string.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new <code>sap.m.ComboBoxTextField<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMaxWidth maxWidth} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getShowButton showButton} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.InputBase#constructor sap.m.InputBase}\ncan be used as well.","!module":"sap/m/ComboBoxTextField","!helpDescription":"The <code>sap.m.ComboBoxTextField<\/code>.","getShowButton":{"!description":"Gets current value of property <code>showButton<\/code>.\n\nIndicates whether the dropdown arrow button is shown.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.m.ViewSettingsFilterItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ViewSettingsFilterItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ViewSettingsItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ViewSettingsFilterItem"},"sap.m.Table":{"!description":"<code>sap.m.Table<\/code> control provides a set of sophisticated and convenience functions for responsive table design.\nTo render the <code>sap.m.Table<\/code> properly, the order of the <code>columns<\/code> aggregation should match with the order of the items <code>cells<\/code> aggregation. Also <code>sap.m.Table<\/code> requires at least one visible <code>sap.m.Column<\/code> in <code>columns<\/code> aggregation.\nFor mobile devices, the recommended limit of table rows is 100 (based on 4 columns) to assure proper performance. To improve initial rendering on large tables, use the <code>growing<\/code> feature.","addColumn":{"!description":"Adds some column to the aggregation <code>columns<\/code>.","!static":false,"!category":"function","!type":"fn(oColumn: sap.m.Column) -> sap.m.Table","parameters":{"oColumn":"type: sap.m.Column, description: the column to add; if empty, nothing is inserted"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.Table.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setShowOverlay":{"!description":"Sets a new value for property <code>showOverlay<\/code>.\n\nSetting this property to <code>true<\/code> will show an overlay on top of the table content and prevents the user interaction with it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowOverlay: Boolean) -> sap.m.Table","parameters":{"bShowOverlay":"type: boolean, description: New value for property <code>showOverlay<\/code>"}},"destroyColumns":{"!description":"Destroys all the columns in the aggregation <code>columns<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Table"},"getFixedLayout":{"!description":"Gets current value of property <code>fixedLayout<\/code>.\n\nDefines the algorithm to be used to layout the table cells, rows, and columns.\nBy default, a table is rendered with fixed layout algorithm. This means the horizontal layout only depends on the table's width and the width of the columns, not the contents of the cells. Cells in subsequent rows do not affect column widths. This allows a browser to layout the table faster than the auto table layout since the browser can begin to display the table once the first row has been analyzed.\n\nWhen this property is set to <code>false<\/code>, <code>sap.m.Table<\/code> is rendered with auto layout algorithm. This means, the width of the table and its cells depends on the contents of the cells. The column width is set by the widest unbreakable content inside the cells. This can make the rendering slow, since the browser needs to read through all the content in the table before determining the final layout.\n<b>Note:<\/b> Since <code>sap.m.Table<\/code> does not have its own scrollbars, setting <code>fixedLayout<\/code> to false can force the table to overflow, which may cause visual problems. It is suggested to use this property when a table has a few columns in wide screens or within the horizontal scroll container (e.g <code>sap.m.Dialog<\/code>) to handle overflow.\nIn auto layout mode the <code>width<\/code> property of <code>sap.m.Column<\/code> is taken into account as a minimum width.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.m.ListBase","getBackgroundDesign":{"!description":"Gets current value of property <code>backgroundDesign<\/code>.\n\nSets the background style of the table. Depending on the theme, you can change the state of the background from <code>Solid<\/code> to <code>Translucent<\/code> or to <code>Transparent<\/code>.\n\nDefault value is <code>Translucent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.BackgroundDesign"},"setBackgroundDesign":{"!description":"Sets a new value for property <code>backgroundDesign<\/code>.\n\nSets the background style of the table. Depending on the theme, you can change the state of the background from <code>Solid<\/code> to <code>Translucent<\/code> or to <code>Transparent<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Translucent<\/code>.","!static":false,"!category":"function","!type":"fn(sBackgroundDesign: sap.m.BackgroundDesign) -> sap.m.Table","parameters":{"sBackgroundDesign":"type: sap.m.BackgroundDesign, description: New value for property <code>backgroundDesign<\/code>"}},"setFixedLayout":{"!description":"Sets a new value for property <code>fixedLayout<\/code>.\n\nDefines the algorithm to be used to layout the table cells, rows, and columns.\nBy default, a table is rendered with fixed layout algorithm. This means the horizontal layout only depends on the table's width and the width of the columns, not the contents of the cells. Cells in subsequent rows do not affect column widths. This allows a browser to layout the table faster than the auto table layout since the browser can begin to display the table once the first row has been analyzed.\n\nWhen this property is set to <code>false<\/code>, <code>sap.m.Table<\/code> is rendered with auto layout algorithm. This means, the width of the table and its cells depends on the contents of the cells. The column width is set by the widest unbreakable content inside the cells. This can make the rendering slow, since the browser needs to read through all the content in the table before determining the final layout.\n<b>Note:<\/b> Since <code>sap.m.Table<\/code> does not have its own scrollbars, setting <code>fixedLayout<\/code> to false can force the table to overflow, which may cause visual problems. It is suggested to use this property when a table has a few columns in wide screens or within the horizontal scroll container (e.g <code>sap.m.Dialog<\/code>) to handle overflow.\nIn auto layout mode the <code>width<\/code> property of <code>sap.m.Column<\/code> is taken into account as a minimum width.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bFixedLayout: Boolean) -> sap.m.Table","parameters":{"bFixedLayout":"type: boolean, description: New value for property <code>fixedLayout<\/code>"}},"!category":"class","indexOfColumn":{"!description":"Checks for the provided <code>sap.m.Column<\/code> in the aggregation <code>columns<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oColumn: sap.m.Column) -> Number","parameters":{"oColumn":"type: sap.m.Column, description: The column whose index is looked for"}},"getColumns":{"!description":"Getter for aggregation columns.","!static":false,"!category":"function","!type":"fn(bSort?: Boolean) -> [sap.m.Column]","parameters":{"bSort":"type: Boolean, description: set true to get the columns in an order that respects personalization settings"}},"extend":{"!description":"Creates a new subclass of class sap.m.Table with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getShowOverlay":{"!description":"Gets current value of property <code>showOverlay<\/code>.\n\nSetting this property to <code>true<\/code> will show an overlay on top of the table content and prevents the user interaction with it.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeColumn":{"!description":"Removes a column from the aggregation <code>columns<\/code>.","!static":false,"!category":"function","!type":"fn(vColumn: Number | String | sap.m.Column) -> sap.m.Column","parameters":{"vColumn":"type: int|string|sap.m.Column, description: The columnto remove or its index or id"}},"!constructorDescription":"Constructor for a new Table.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign (default: Translucent)<\/li>\n<li>{@link #getFixedLayout fixedLayout} : boolean (default: true)<\/li>\n<li>{@link #getShowOverlay showOverlay} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getColumns columns} : sap.m.Column[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListBase#constructor sap.m.ListBase}\ncan be used as well.","!module":"sap/m/Table","insertColumn":{"!description":"Inserts a column into the aggregation <code>columns<\/code>.","!static":false,"!category":"function","!type":"fn(oColumn: sap.m.Column, iIndex: Number) -> sap.m.Table","parameters":{"oColumn":"type: sap.m.Column, description: the column to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the column should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the column is inserted at position 0; for a value\n             greater than the current size of the aggregation, the column is inserted at\n             the last position"}},"!helpDescription":"<code>sap.m.Table<\/code> control provides a set of sophisticated and convenience functions for responsive table design.\nTo render the <code>sap.m.Table<\/code> properly, the order of the <code>columns<\/code> aggregation should match with the order of the items <code>cells<\/code> aggregation. Also <code>sap.m.Table<\/code> requires at least one visible <code>sap.m.Column<\/code> in <code>columns<\/code> aggregation.\nFor mobile devices, the recommended limit of table rows is 100 (based on 4 columns) to assure proper performance. To improve initial rendering on large tables, use the <code>growing<\/code> feature.","removeAllColumns":{"!description":"Removes all the controls from the aggregation <code>columns<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Column]"}},"sap.m.Menu_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.Menu with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.Menu"},"sap.m.SuggestionItem":{"!description":"Display suggestion list items.","getSuggestionText":{"!description":"Return suggestion text. By default, it is the value of the <code>text<\/code> property.\n\nSubclasses may override this function.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.SuggestionItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.core.Item","!category":"class","setDescription":{"!description":"Sets a new value for property <code>description<\/code>.\n\nAdditional text of type string, optionally to be displayed along with this item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sDescription: String) -> sap.m.SuggestionItem","parameters":{"sDescription":"type: string, description: New value for property <code>description<\/code>"}},"getDescription":{"!description":"Gets current value of property <code>description<\/code>.\n\nAdditional text of type string, optionally to be displayed along with this item.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nThe icon belonging to this list item instance.\nThis can be an URI to an image or an icon font URI.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.m.SuggestionItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nThe icon belonging to this list item instance.\nThis can be an URI to an image or an icon font URI.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sIcon: String) -> sap.m.SuggestionItem","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"}},"!constructorDescription":"Constructor for a new SuggestionItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : string (default: )<\/li>\n<li>{@link #getDescription description} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","!module":"sap/m/SuggestionItem","!helpDescription":"Display suggestion list items.","render":{"!description":"Produces the HTML of the suggestion item and writes it to render-output-buffer.\n\nSubclasses may override this function.","!static":false,"!category":"function","!type":"fn(oRenderManager: sap.ui.core.RenderManager, oItem: sap.m.SuggestionItem, sSearch: String, bSelected: Boolean)","parameters":{"sSearch":"type: string, description: The search text that should be emphasized","oRenderManager":"type: sap.ui.core.RenderManager, description: The <code>RenderManager<\/code>","oItem":"type: sap.m.SuggestionItem, description: The item which should be rendered","bSelected":"type: boolean, description: The item is selected"}}},"sap.m.RatingIndicatorVisualMode":{"!description":"Possible values for the visualization of float values in the RatingIndicator Control.","Half":{"!description":"Values are rounded to the nearest half value (e.g. 1.7 -> 1.5).","!category":"enum","!type":"String"},"!module":"sap/m/library","!category":"static class","Full":{"!description":"Values are rounded to the nearest integer value (e.g. 1.7 -> 2).","!category":"enum","!type":"String"}},"sap.m.Dialog":{"getStretchOnPhone":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.13.1 Please use the new stretch property instead. This enables a stretched dialog even on tablet and desktop. If you want to achieve the same effect as stretchOnPhone, please set the stretch with jQuery.device.is.phone, then dialog is only stretched when runs on phone.<br>Gets current value of property <code>stretchOnPhone<\/code>.\n\nDetermines whether the dialog will displayed on full screen on a phone.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getLeftButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.1 \nLeftButton has been deprecated since 1.15.1. Please use the beginButton instead which is more RTL friendly.<br>ID of the element which is the current target of the association <code>leftButton<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Button"},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"attachAfterClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterClose<\/code> event of this <code>sap.m.Dialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Dialog<\/code> itself.\n\nThis event will be fired after the dialog is closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Dialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Dialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getContentHeight":{"!description":"Gets current value of property <code>contentHeight<\/code>.\n\nPreferred height of content in Dialog. If the preferred height is bigger than the available space on screen, it will be overwritten by the maximum available height on screen in order to make sure that dialog isn't cut off.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setHorizontalScrolling":{"!description":"Sets a new value for property <code>horizontalScrolling<\/code>.\n\nIndicates if user can scroll horizontally inside dialog when the content is bigger than the content area.\nDialog detects if there's sap.m.NavContainer, sap.m.Page, sap.m.ScrollContainer or sap.m.SplitContainer as direct child added to dialog. If there is, dialog will turn off scrolling by setting this property to false automatically ignoring the existing value of this property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHorizontalScrolling: Boolean) -> sap.m.Dialog","parameters":{"bHorizontalScrolling":"type: boolean, description: New value for property <code>horizontalScrolling<\/code>"}},"setInitialFocus":{"!description":"Sets the associated <code>initialFocus<\/code>.","!static":false,"!category":"function","!type":"fn(oInitialFocus: sap.ui.core.Control) -> sap.m.Dialog","parameters":{"oInitialFocus":"type: sap.ui.core.Control, description: Id of an element which becomes the new target of this initialFocus association; alternatively, an element instance may be given"}},"destroyButtons":{"!description":"Destroys all the buttons in the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Dialog"},"setSubHeader":{"!description":"Sets the aggregated <code>subHeader<\/code>.","!static":false,"!category":"function","!type":"fn(oSubHeader: sap.m.IBar) -> sap.m.Dialog","parameters":{"oSubHeader":"type: sap.m.IBar, description: The subHeader to set"}},"detachAfterClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterClose<\/code> event of this <code>sap.m.Dialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Dialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getDraggable":{"!description":"Gets current value of property <code>draggable<\/code>.\n\nIndicates whether the dialog is draggable. If this property is set to true, the dialog will be draggable by it's header. This property has a default value false. The Dialog can be draggable only in desktop mode.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nTitle text appears in the dialog header.","!static":false,"!category":"function","!type":"fn() -> String"},"setEndButton":{"!description":"Sets the aggregated <code>endButton<\/code>.","!static":false,"!category":"function","!type":"fn(oEndButton: sap.m.Button) -> sap.m.Dialog","parameters":{"oEndButton":"type: sap.m.Button, description: The endButton to set"}},"fireBeforeOpen":{"!description":"Fires event <code>beforeOpen<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Dialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setContentWidth":{"!description":"Sets a new value for property <code>contentWidth<\/code>.\n\nPreferred width of content in Dialog. This property affects the width of dialog on phone in landscape mode, tablet or desktop, because the dialog has a fixed width on phone in portrait mode. If the preferred width is less than the minimum width of dilaog or more than the available width of the screen, it will be overwritten by the min or max value. The current mininum value of dialog width on tablet is 400px.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sContentWidth: sap.ui.core.CSSSize) -> sap.m.Dialog","parameters":{"sContentWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>contentWidth<\/code>"}},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setVerticalScrolling":{"!description":"Sets a new value for property <code>verticalScrolling<\/code>.\n\nIndicates if user can scroll vertically inside dialog when the content is bigger than the content area.\nDialog detects if there's sap.m.NavContainer, sap.m.Page, sap.m.ScrollContainer or sap.m.SplitContainer as direct child added to dialog. If there is, dialog will turn off scrolling by setting this property to false automatically ignoring the existing value of this property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVerticalScrolling: Boolean) -> sap.m.Dialog","parameters":{"bVerticalScrolling":"type: boolean, description: New value for property <code>verticalScrolling<\/code>"}},"setContentHeight":{"!description":"Sets a new value for property <code>contentHeight<\/code>.\n\nPreferred height of content in Dialog. If the preferred height is bigger than the available space on screen, it will be overwritten by the maximum available height on screen in order to make sure that dialog isn't cut off.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sContentHeight: sap.ui.core.CSSSize) -> sap.m.Dialog","parameters":{"sContentHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>contentHeight<\/code>"}},"setShowHeader":{"!description":"Sets a new value for property <code>showHeader<\/code>.\n\nDetermines whether the header is shown inside the dialog. If this property is set to true, the text and icon property are ignored. This property has a default value true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowHeader: Boolean) -> sap.m.Dialog","parameters":{"bShowHeader":"type: boolean, description: New value for property <code>showHeader<\/code>"}},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Dialog"},"!description":"The Dialog control is used to interrupt the current processing of an application to prompt the user for information or a response.","getMetadata":{"!description":"Returns a metadata object for class sap.m.Dialog.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"fireAfterOpen":{"!description":"Fires event <code>afterOpen<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Dialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setBeginButton":{"!description":"Sets the aggregated <code>beginButton<\/code>.","!static":false,"!category":"function","!type":"fn(oBeginButton: sap.m.Button) -> sap.m.Dialog","parameters":{"oBeginButton":"type: sap.m.Button, description: The beginButton to set"}},"attachBeforeOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beforeOpen<\/code> event of this <code>sap.m.Dialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Dialog<\/code> itself.\n\nThis event will be fired before the dialog is opened.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Dialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Dialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setLeftButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.1 \nLeftButton has been deprecated since 1.15.1. Please use the beginButton instead which is more RTL friendly.<br>Sets the associated <code>leftButton<\/code>.","!static":false,"!category":"function","!type":"fn(oLeftButton: sap.m.Button) -> sap.m.Dialog","parameters":{"oLeftButton":"type: sap.m.Button, description: Id of an element which becomes the new target of this leftButton association; alternatively, an element instance may be given"}},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nTitle text appears in the dialog header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.Dialog","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"addButton":{"!description":"Adds some button to the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn(oButton: sap.m.Button) -> sap.m.Dialog","parameters":{"oButton":"type: sap.m.Button, description: the button to add; if empty, nothing is inserted"}},"getShowHeader":{"!description":"Gets current value of property <code>showHeader<\/code>.\n\nDetermines whether the header is shown inside the dialog. If this property is set to true, the text and icon property are ignored. This property has a default value true.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"indexOfButton":{"!description":"Checks for the provided <code>sap.m.Button<\/code> in the aggregation <code>buttons<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oButton: sap.m.Button) -> Number","parameters":{"oButton":"type: sap.m.Button, description: The button whose index is looked for"}},"detachAfterOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterOpen<\/code> event of this <code>sap.m.Dialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Dialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.m.Dialog with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nIcon displayed in the dialog's header. This icon is invisible on the iOS platform and it's density aware. You can use the density convention (@2, @1.5, etc.) to provide higher resolution image for higher density screen.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.m.Dialog","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"isOpen":{"!description":"The method checks if the Dialog is open. It returns true when the Dialog is currently open (this includes opening and closing animations), otherwise it returns false.","!static":false,"!category":"function","!type":"fn()"},"!module":"sap/m/Dialog","insertButton":{"!description":"Inserts a button into the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn(oButton: sap.m.Button, iIndex: Number) -> sap.m.Dialog","parameters":{"oButton":"type: sap.m.Button, description: the button to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the button should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the button is inserted at position 0; for a value\n             greater than the current size of the aggregation, the button is inserted at\n             the last position"}},"!helpDescription":"The Dialog control is used to interrupt the current processing of an application to prompt the user for information or a response.","getType":{"!description":"Gets current value of property <code>type<\/code>.\n\nThe type of the dialog. In theme sap_bluecrystal, the type \"message\" will limit the dialog's width within 480px on tablet and desktop.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.DialogType"},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"getCustomHeader":{"!description":"Gets content of aggregation <code>customHeader<\/code>.\n\nCustomHeader is only supported in theme sap_bluecrystal. When it's set, the icon, title and showHeader are properties ignored. Only the customHeader is shown as the header of the dialog.","!static":false,"!category":"function","!type":"fn() -> sap.m.IBar"},"insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.m.Dialog","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}},"removeAllButtons":{"!description":"Removes all the controls from the aggregation <code>buttons<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getVerticalScrolling":{"!description":"Gets current value of property <code>verticalScrolling<\/code>.\n\nIndicates if user can scroll vertically inside dialog when the content is bigger than the content area.\nDialog detects if there's sap.m.NavContainer, sap.m.Page, sap.m.ScrollContainer or sap.m.SplitContainer as direct child added to dialog. If there is, dialog will turn off scrolling by setting this property to false automatically ignoring the existing value of this property.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nThe content inside the dialog.<br/><b>Note:<\/b> When the content of the <code>Dialog<\/code> is comprised of controls that use <code>position: absolute<\/code>, such as <code>SplitContainer<\/code>, the dialog has to have either <code>stretch: true<\/code> or <code>contentHeight<\/code> set.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","attachAfterOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterOpen<\/code> event of this <code>sap.m.Dialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Dialog<\/code> itself.\n\nThis event will be fired after the dialog is opened.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Dialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Dialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!category":"class","getInitialFocus":{"!description":"ID of the element which is the current target of the association <code>initialFocus<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"destroySubHeader":{"!description":"Destroys the subHeader in the aggregation <code>subHeader<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Dialog"},"getResizable":{"!description":"Gets current value of property <code>resizable<\/code>.\n\nIndicates whether the dialog is resizable. the dialog is resizable. If this property is set to true, the dialog will have a resize handler in it's bottom right corner. This property has a default value false. The Dialog can be resizable only in desktop mode.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireBeforeClose":{"!description":"Fires event <code>beforeClose<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>origin<\/code> of type <code>sap.m.Button<\/code>This indicates the trigger of closing the dialog. If dialog is closed by either leftButton or rightButton, the button that closes the dialog is set to this parameter. Otherwise this parameter is set to null.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Dialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setDraggable":{"!description":"Sets a new value for property <code>draggable<\/code>.\n\nIndicates whether the dialog is draggable. If this property is set to true, the dialog will be draggable by it's header. This property has a default value false. The Dialog can be draggable only in desktop mode.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bDraggable: Boolean) -> sap.m.Dialog","parameters":{"bDraggable":"type: boolean, description: New value for property <code>draggable<\/code>"}},"setStretch":{"!description":"Sets a new value for property <code>stretch<\/code>.\n\nDetermines  if the dialog will be stretched to full screen. This property is only applicable to standard dialog and message type dialog ignores this property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bStretch: Boolean) -> sap.m.Dialog","parameters":{"bStretch":"type: boolean, description: New value for property <code>stretch<\/code>"}},"getContentWidth":{"!description":"Gets current value of property <code>contentWidth<\/code>.\n\nPreferred width of content in Dialog. This property affects the width of dialog on phone in landscape mode, tablet or desktop, because the dialog has a fixed width on phone in portrait mode. If the preferred width is less than the minimum width of dilaog or more than the available width of the screen, it will be overwritten by the min or max value. The current mininum value of dialog width on tablet is 400px.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getRightButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.1 \nRightButton has been deprecated since 1.15.1. Please use the endButton instead which is more RTL friendly.<br>ID of the element which is the current target of the association <code>rightButton<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Button"},"!constructorDescription":"Constructor for a new Dialog.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getShowHeader showHeader} : boolean (default: true)<\/li>\n<li>{@link #getType type} : sap.m.DialogType (default: Standard)<\/li>\n<li>{@link #getState state} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getStretchOnPhone stretchOnPhone} : boolean (default: false)<\/li>\n<li>{@link #getStretch stretch} : boolean (default: false)<\/li>\n<li>{@link #getContentWidth contentWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getContentHeight contentHeight} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHorizontalScrolling horizontalScrolling} : boolean (default: true)<\/li>\n<li>{@link #getVerticalScrolling verticalScrolling} : boolean (default: true)<\/li>\n<li>{@link #getResizable resizable} : boolean (default: false)<\/li>\n<li>{@link #getDraggable draggable} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getSubHeader subHeader} : sap.m.IBar<\/li>\n<li>{@link #getCustomHeader customHeader} : sap.m.IBar<\/li>\n<li>{@link #getBeginButton beginButton} : sap.m.Button<\/li>\n<li>{@link #getEndButton endButton} : sap.m.Button<\/li>\n<li>{@link #getButtons buttons} : sap.m.Button[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:beforeOpen beforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterOpen afterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeClose beforeClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterClose afterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.m.Dialog","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getEndButton":{"!description":"Gets content of aggregation <code>endButton<\/code>.\n\nThe button which is rendered to the right side (left side in RTL mode) of the beginButton in the footer area inside the dialog. From UI5 version 1.21.1, there's a new aggregation \"buttons\" created with which more than 2 buttons can be added to the footer area of dialog. If the new \"buttons\" aggregation is set, any change made to this aggregation has no effect anymore. When runs on the phone, this button (and the beginButton together when set) is (are) rendered at the center of the footer area. When runs on the other platforms, this button (and the beginButton together when set) is (are) rendered at the right side (left side in RTL mode) of the footer area.","!static":false,"!category":"function","!type":"fn() -> sap.m.Button"},"setCustomHeader":{"!description":"Sets the aggregated <code>customHeader<\/code>.","!static":false,"!category":"function","!type":"fn(oCustomHeader: sap.m.IBar) -> sap.m.Dialog","parameters":{"oCustomHeader":"type: sap.m.IBar, description: The customHeader to set"}},"close":{"!description":"Close the dialog.","!static":false,"!category":"function","!type":"fn()"},"detachBeforeOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beforeOpen<\/code> event of this <code>sap.m.Dialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Dialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getHorizontalScrolling":{"!description":"Gets current value of property <code>horizontalScrolling<\/code>.\n\nIndicates if user can scroll horizontally inside dialog when the content is bigger than the content area.\nDialog detects if there's sap.m.NavContainer, sap.m.Page, sap.m.ScrollContainer or sap.m.SplitContainer as direct child added to dialog. If there is, dialog will turn off scrolling by setting this property to false automatically ignoring the existing value of this property.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyCustomHeader":{"!description":"Destroys the customHeader in the aggregation <code>customHeader<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Dialog"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"destroyEndButton":{"!description":"Destroys the endButton in the aggregation <code>endButton<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Dialog"},"setRightButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.1 \nRightButton has been deprecated since 1.15.1. Please use the endButton instead which is more RTL friendly.<br>Sets the associated <code>rightButton<\/code>.","!static":false,"!category":"function","!type":"fn(oRightButton: sap.m.Button) -> sap.m.Dialog","parameters":{"oRightButton":"type: sap.m.Button, description: Id of an element which becomes the new target of this rightButton association; alternatively, an element instance may be given"}},"getButtons":{"!description":"Gets content of aggregation <code>buttons<\/code>.\n\nButtons can be added to the footer area of dialog through this aggregation. When this aggregation is set, any change to beginButton and endButton has no effect anymore. Buttons which are inside this aggregation are aligned at the right side (left side in RTL mode) of the footer instead of in the middle of the footer.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"getSubHeader":{"!description":"Gets content of aggregation <code>subHeader<\/code>.\n\nWhen subHeader is assigned to Dialog, it's rendered directly after the main header in Dialog. SubHeader is out of the content area and won't be scrolled when content's size is bigger than the content area's size.","!static":false,"!category":"function","!type":"fn() -> sap.m.IBar"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"setResizable":{"!description":"Sets a new value for property <code>resizable<\/code>.\n\nIndicates whether the dialog is resizable. the dialog is resizable. If this property is set to true, the dialog will have a resize handler in it's bottom right corner. This property has a default value false. The Dialog can be resizable only in desktop mode.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bResizable: Boolean) -> sap.m.Dialog","parameters":{"bResizable":"type: boolean, description: New value for property <code>resizable<\/code>"}},"destroyBeginButton":{"!description":"Destroys the beginButton in the aggregation <code>beginButton<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Dialog"},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"_getAnyHeader":{"!description":"Returns the custom header instance when the customHeader aggregation is set. Otherwise it returns the internal managed\nheader instance. This method can be called within composite controls which use sap.m.Dialog inside.","!static":false,"!category":"function","!type":"fn()"},"detachBeforeClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beforeClose<\/code> event of this <code>sap.m.Dialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Dialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.m.Dialog","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"setType":{"!description":"Sets a new value for property <code>type<\/code>.\n\nThe type of the dialog. In theme sap_bluecrystal, the type \"message\" will limit the dialog's width within 480px on tablet and desktop.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn(sType: sap.m.DialogType) -> sap.m.Dialog","parameters":{"sType":"type: sap.m.DialogType, description: New value for property <code>type<\/code>"}},"getStretch":{"!description":"Gets current value of property <code>stretch<\/code>.\n\nDetermines  if the dialog will be stretched to full screen. This property is only applicable to standard dialog and message type dialog ignores this property.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachBeforeClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beforeClose<\/code> event of this <code>sap.m.Dialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Dialog<\/code> itself.\n\nThis event will be fired before the dialog is closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Dialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Dialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nIcon displayed in the dialog's header. This icon is invisible on the iOS platform and it's density aware. You can use the density convention (@2, @1.5, etc.) to provide higher resolution image for higher density screen.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.m.Dialog","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"getBeginButton":{"!description":"Gets content of aggregation <code>beginButton<\/code>.\n\nThe button which is rendered to the left side (right side in RTL mode) of the endButton in the footer area inside the dialog. From UI5 version 1.21.1, there's a new aggregation \"buttons\" created with which more than 2 buttons can be added to the footer area of dialog. If the new \"buttons\" aggregation is set, any change made to this aggregation has no effect anymore. When runs on the phone, this button (and the endButton together when set) is (are) rendered at the center of the footer area. When runs on the other platforms, this button (and the endButton together when set) is (are) rendered at the right side (left side in RTL mode) of the footer area.","!static":false,"!category":"function","!type":"fn() -> sap.m.Button"},"getState":{"!description":"Gets current value of property <code>state<\/code>.\n\nThe state affects the icon and the title color. If other than \"None\" is set, a predefined icon will be added to the dialog. Setting icon property will overwrite the predefined icon. The default value is \"None\" which doesn't add any icon to the Dialog control. This property is by now only supported by blue crystal theme.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"fireAfterClose":{"!description":"Fires event <code>afterClose<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>origin<\/code> of type <code>sap.m.Button<\/code>This indicates the trigger of closing the dialog. If dialog is closed by either leftButton or rightButton, the button that closes the dialog is set to this parameter. Otherwise this parameter is set to null.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Dialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"removeButton":{"!description":"Removes a button from the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn(vButton: Number | String | sap.m.Button) -> sap.m.Button","parameters":{"vButton":"type: int|string|sap.m.Button, description: The buttonto remove or its index or id"}},"setState":{"!description":"Sets a new value for property <code>state<\/code>.\n\nThe state affects the icon and the title color. If other than \"None\" is set, a predefined icon will be added to the dialog. Setting icon property will overwrite the predefined icon. The default value is \"None\" which doesn't add any icon to the Dialog control. This property is by now only supported by blue crystal theme.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sState: sap.ui.core.ValueState) -> sap.m.Dialog","parameters":{"sState":"type: sap.ui.core.ValueState, description: New value for property <code>state<\/code>"}},"setStretchOnPhone":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.13.1 Please use the new stretch property instead. This enables a stretched dialog even on tablet and desktop. If you want to achieve the same effect as stretchOnPhone, please set the stretch with jQuery.device.is.phone, then dialog is only stretched when runs on phone.<br>Sets a new value for property <code>stretchOnPhone<\/code>.\n\nDetermines whether the dialog will displayed on full screen on a phone.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bStretchOnPhone: Boolean) -> sap.m.Dialog","parameters":{"bStretchOnPhone":"type: boolean, description: New value for property <code>stretchOnPhone<\/code>"}},"open":{"!description":"Open the dialog.","!static":false,"!category":"function","!type":"fn()"}},"sap.m.SegmentedButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.SegmentedButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.SegmentedButton"},"sap.m.routing.TargetHandler_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.routing.TargetHandler with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(closeDialogs: Boolean)","prototype":"sap.m.routing.TargetHandler"},"sap.m.ColumnListItem":{"!description":"<code>sap.m.ColumnListItem<\/code> can be used with the <code>cells<\/code> aggregation to create rows for the <code>sap.m.Table<\/code> control.\nThe <code>columns<\/code> aggregation of the <code>sap.m.Table<\/code> should match with the cells aggregation.\n\n<b>Note:<\/b> This control should only be used within the <code>sap.m.Table<\/code> control.\nThe inherited <code>counter<\/code> property of <code>sap.m.ListItemBase<\/code> is not supported.","removeAllCells":{"!description":"Removes all the controls from the aggregation <code>cells<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"addCell":{"!description":"Adds some cell to the aggregation <code>cells<\/code>.","!static":false,"!category":"function","!type":"fn(oCell: sap.ui.core.Control) -> sap.m.ColumnListItem","parameters":{"oCell":"type: sap.ui.core.Control, description: the cell to add; if empty, nothing is inserted"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.ColumnListItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"destroyCells":{"!description":"Destroys all the cells in the aggregation <code>cells<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ColumnListItem"},"!proto":"sap.m.ListItemBase","unbindCells":{"!description":"Unbinds aggregation <code>cells<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.ColumnListItem"},"!category":"class","bindCells":{"!description":"Binds aggregation <code>cells<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.ColumnListItem","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"indexOfCell":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>cells<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oCell: sap.ui.core.Control) -> Number","parameters":{"oCell":"type: sap.ui.core.Control, description: The cell whose index is looked for"}},"extend":{"!description":"Creates a new subclass of class sap.m.ColumnListItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getTabbables":{"!description":"Returns the tabbable DOM elements as a jQuery collection\nWhen popin is available this separated dom should also be included","!static":false,"!category":"function","!type":"fn() -> jQuery"},"!constructorDescription":"Constructor for a new ColumnListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVAlign vAlign} : sap.ui.core.VerticalAlign (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCells cells} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well.","hasPopin":{"!description":"Determines whether control has pop-in or not.","!static":false,"!category":"function","!type":"fn()"},"!module":"sap/m/ColumnListItem","!helpDescription":"<code>sap.m.ColumnListItem<\/code> can be used with the <code>cells<\/code> aggregation to create rows for the <code>sap.m.Table<\/code> control.\nThe <code>columns<\/code> aggregation of the <code>sap.m.Table<\/code> should match with the cells aggregation.\n\n<b>Note:<\/b> This control should only be used within the <code>sap.m.Table<\/code> control.\nThe inherited <code>counter<\/code> property of <code>sap.m.ListItemBase<\/code> is not supported.","insertCell":{"!description":"Inserts a cell into the aggregation <code>cells<\/code>.","!static":false,"!category":"function","!type":"fn(oCell: sap.ui.core.Control, iIndex: Number) -> sap.m.ColumnListItem","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the cell should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the cell is inserted at position 0; for a value\n             greater than the current size of the aggregation, the cell is inserted at\n             the last position","oCell":"type: sap.ui.core.Control, description: the cell to insert; if empty, nothing is inserted"}},"removeCell":{"!description":"Removes a cell from the aggregation <code>cells<\/code>.","!static":false,"!category":"function","!type":"fn(vCell: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vCell":"type: int|string|sap.ui.core.Control, description: The cellto remove or its index or id"}},"removePopin":{"!description":"Pemove pop-in from DOM","!static":false,"!category":"function","!type":"fn()"},"$Popin":{"!description":"Returns pop-in DOMRef as a jQuery Object","!static":false,"!category":"function","!type":"fn()"},"getCells":{"!description":"Gets content of aggregation <code>cells<\/code>.\n\nEvery <code>control<\/code> inside the <code>cells<\/code> aggregation defines one cell of the row.\n<b>Note:<\/b> The order of the <code>cells<\/code> aggregation must match the order of the <code>columns<\/code> aggregation of <code>sap.m.Table<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getPopin":{"!description":"Returns the pop-in element.","!static":false,"!category":"function","!type":"fn()"},"getVAlign":{"!description":"Gets current value of property <code>vAlign<\/code>.\n\nSets the vertical alignment of all the cells within the table row (including selection and navigation).\n<b>Note:<\/b> <code>vAlign<\/code> property of <code>sap.m.Column<\/code> overrides the property for cell vertical alignment if both are set.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.VerticalAlign"},"setVAlign":{"!description":"Sets a new value for property <code>vAlign<\/code>.\n\nSets the vertical alignment of all the cells within the table row (including selection and navigation).\n<b>Note:<\/b> <code>vAlign<\/code> property of <code>sap.m.Column<\/code> overrides the property for cell vertical alignment if both are set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sVAlign: sap.ui.core.VerticalAlign) -> sap.m.ColumnListItem","parameters":{"sVAlign":"type: sap.ui.core.VerticalAlign, description: New value for property <code>vAlign<\/code>"}}},"sap.m.IconTabFilter":{"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nThe content displayed for this item (optional).\n\nIf this content is set, it is displayed instead of the general content inside the IconTabBar.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Item","!category":"class","getIconDensityAware":{"!description":"Gets current value of property <code>iconDensityAware<\/code>.\n\nIf set to true, it sends one or more requests,\ntrying to get the density perfect version of the image if this version of\nthe image doesn't exist on the server. Default value is set to true.\n\nIf bandwidth is key for the application, set this value to false.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new IconTabFilter.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getCount count} : string (default: )<\/li>\n<li>{@link #getShowAll showAll} : boolean (default: false)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getIconColor iconColor} : sap.ui.core.IconColor (default: Default)<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getDesign design} : sap.m.IconTabFilterDesign (default: Vertical)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","setIconDensityAware":{"!description":"Sets a new value for property <code>iconDensityAware<\/code>.\n\nIf set to true, it sends one or more requests,\ntrying to get the density perfect version of the image if this version of\nthe image doesn't exist on the server. Default value is set to true.\n\nIf bandwidth is key for the application, set this value to false.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bIconDensityAware: Boolean) -> sap.m.IconTabFilter","parameters":{"bIconDensityAware":"type: boolean, description: New value for property <code>iconDensityAware<\/code>"}},"setShowAll":{"!description":"Sets a new value for property <code>showAll<\/code>.\n\nEnables special visualization for disabled filter (show all items).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowAll: Boolean) -> sap.m.IconTabFilter","parameters":{"bShowAll":"type: boolean, description: New value for property <code>showAll<\/code>"}},"getCount":{"!description":"Gets current value of property <code>count<\/code>.\n\nRepresents the \"count\" text, which is displayed in the tab filter.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.IconTabFilter"},"setCount":{"!description":"Sets a new value for property <code>count<\/code>.\n\nRepresents the \"count\" text, which is displayed in the tab filter.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sCount: String) -> sap.m.IconTabFilter","parameters":{"sCount":"type: string, description: New value for property <code>count<\/code>"}},"!description":"Represents a selectable item inside an IconTabBar.","setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nSpecifies whether the tab filter is rendered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.m.IconTabFilter","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.IconTabFilter.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nSpecifies whether the tab filter is rendered.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getShowAll":{"!description":"Gets current value of property <code>showAll<\/code>.\n\nEnables special visualization for disabled filter (show all items).\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.m.IconTabFilter","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nSpecifies the icon to be displayed for the tab filter.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"extend":{"!description":"Creates a new subclass of class sap.m.IconTabFilter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nSpecifies the icon to be displayed for the tab filter.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.m.IconTabFilter","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"!module":"sap/m/IconTabFilter","getDesign":{"!description":"Gets current value of property <code>design<\/code>.\n\nSpecifies whether the icon and the texts are placed vertically or horizontally.\n\nDefault value is <code>Vertical<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.IconTabFilterDesign"},"getIconColor":{"!description":"Gets current value of property <code>iconColor<\/code>.\n\nSpecifies the icon color.\n\nIf an icon font is used, the color can be chosen from the icon colors (sap.ui.core.IconColor).\nPossible semantic colors are: Neutral, Positive, Critical, Negative.\nInstead of the semantic icon color the brand color can be used, this is named Default.\nSemantic colors and brand colors should not be mixed up inside one IconTabBar.\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.IconColor"},"!helpDescription":"Represents a selectable item inside an IconTabBar.","setDesign":{"!description":"Sets a new value for property <code>design<\/code>.\n\nSpecifies whether the icon and the texts are placed vertically or horizontally.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Vertical<\/code>.","!static":false,"!category":"function","!type":"fn(sDesign: sap.m.IconTabFilterDesign) -> sap.m.IconTabFilter","parameters":{"sDesign":"type: sap.m.IconTabFilterDesign, description: New value for property <code>design<\/code>"}},"insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.m.IconTabFilter","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}},"setIconColor":{"!description":"Sets a new value for property <code>iconColor<\/code>.\n\nSpecifies the icon color.\n\nIf an icon font is used, the color can be chosen from the icon colors (sap.ui.core.IconColor).\nPossible semantic colors are: Neutral, Positive, Critical, Negative.\nInstead of the semantic icon color the brand color can be used, this is named Default.\nSemantic colors and brand colors should not be mixed up inside one IconTabBar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn(sIconColor: sap.ui.core.IconColor) -> sap.m.IconTabFilter","parameters":{"sIconColor":"type: sap.ui.core.IconColor, description: New value for property <code>iconColor<\/code>"}}},"sap.m.DateTimeInput":{"setName":{"!description":"Sets a new value for property <code>name<\/code>.\n\nDefines the name of the control for the purposes of form submission.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.m.DateTimeInput","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"getName":{"!description":"Gets current value of property <code>name<\/code>.\n\nDefines the name of the control for the purposes of form submission.","!static":false,"!category":"function","!type":"fn() -> String"},"getPlaceholder":{"!description":"Gets current value of property <code>placeholder<\/code>.\n\nDefines a short hint intended to aid the user with data entry when the control has no value.","!static":false,"!category":"function","!type":"fn() -> String"},"getShowValueStateMessage":{"!description":"Gets current value of property <code>showValueStateMessage<\/code>.\n\nIndicates whether the value state message should be shown or not.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setDateValue":{"!description":"Sets a new value for property <code>dateValue<\/code>.\n\nThis property as JavaScript Date Object can be used to assign a new value which is independent from valueFormat.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oDateValue: Object) -> sap.m.DateTimeInput","parameters":{"oDateValue":"type: object, description: New value for property <code>dateValue<\/code>"}},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nDefines whether the control can be modified by the user or not.\n<b>Note:<\/b> A user can tab to non-editable control, highlight it, and copy the text from it.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","getTextAlign":{"!description":"Gets current value of property <code>textAlign<\/code>.\n\nDefines the horizontal alignment of the text that is shown inside the input field.\n\nDefault value is <code>Initial<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextAlign"},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDefines the width of the control.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.m.DateTimeInput<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.DateTimeInput","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setValueStateText":{"!description":"Sets a new value for property <code>valueStateText<\/code>.\n\nDefines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sValueStateText: String) -> sap.m.DateTimeInput","parameters":{"sValueStateText":"type: string, description: New value for property <code>valueStateText<\/code>"}},"!constructorDescription":"Constructor for a new DateTimeInput.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getValueStateText valueStateText} : string<\/li>\n<li>{@link #getShowValueStateMessage showValueStateMessage} : boolean (default: true)<\/li>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getPlaceholder placeholder} : string<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Initial)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getType type} : sap.m.DateTimeInputType (default: Date)<\/li>\n<li>{@link #getDisplayFormat displayFormat} : string<\/li>\n<li>{@link #getValueFormat valueFormat} : string<\/li>\n<li>{@link #getDateValue dateValue} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.m.DateTimeInput","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"setPlaceholder":{"!description":"Sets a new value for property <code>placeholder<\/code>.\n\nDefines a short hint intended to aid the user with data entry when the control has no value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sPlaceholder: String) -> sap.m.DateTimeInput","parameters":{"sPlaceholder":"type: string, description: New value for property <code>placeholder<\/code>"}},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nIndicates whether the user can interact with the control or not.\n<b>Note:<\/b> Disabled controls cannot be focused and they are out of the tab-chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setValueFormat":{"!description":"Sets a new value for property <code>valueFormat<\/code>.\n\nGiven value property should match with valueFormat to parse date. Default value is taken from locale settings.\nYou can only set and get value in this format.\nIf you use data-binding on value property with type sap.ui.model.type.Date you can ignore this property or the latter wins.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sValueFormat: String) -> sap.m.DateTimeInput","parameters":{"sValueFormat":"type: string, description: New value for property <code>valueFormat<\/code>"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.8 Instead, use the dedicated <code>sap.m.DatePicker<\/code>, <code>sap.m.TimePicker<\/code> or <code>sap.m.DateTimePicker<\/code> controls.<br>Allows end users to interact with date and/or time and select from a date and/or time pad.\n\n<b>Note:<\/b> This control should not be used any longer, instead please use the dedicated <code>sap.m.DatePicker<\/code>, <code>sap.m.TimePicker<\/code> or <code>sap.m.DateTimePicker<\/code> control.","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.DateTimeInput.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getValueStateText":{"!description":"Gets current value of property <code>valueStateText<\/code>.\n\nDefines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle.","!static":false,"!category":"function","!type":"fn() -> String"},"setValueState":{"!description":"Sets a new value for property <code>valueState<\/code>.\n\nVisualizes the validation state of the control, e.g. <code>Error<\/code>, <code>Warning<\/code>, <code>Success<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.m.DateTimeInput","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"getValueFormat":{"!description":"Gets current value of property <code>valueFormat<\/code>.\n\nGiven value property should match with valueFormat to parse date. Default value is taken from locale settings.\nYou can only set and get value in this format.\nIf you use data-binding on value property with type sap.ui.model.type.Date you can ignore this property or the latter wins.","!static":false,"!category":"function","!type":"fn() -> String"},"unbindValue":{"!description":"Unbinds property <code>value<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.DateTimeInput"},"setTextAlign":{"!description":"Sets a new value for property <code>textAlign<\/code>.\n\nDefines the horizontal alignment of the text that is shown inside the input field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Initial<\/code>.","!static":false,"!category":"function","!type":"fn(sTextAlign: sap.ui.core.TextAlign) -> sap.m.DateTimeInput","parameters":{"sTextAlign":"type: sap.ui.core.TextAlign, description: New value for property <code>textAlign<\/code>"}},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nDefines the text directionality of the input field, e.g. <code>RTL<\/code>, <code>LTR<\/code>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.m.DateTimeInput","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.m.DateTimeInput<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.DateTimeInput<\/code> itself.\n\nThis event gets fired when the selection has finished and the value has changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.DateTimeInput","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.DateTimeInput<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setShowValueStateMessage":{"!description":"Sets a new value for property <code>showValueStateMessage<\/code>.\n\nIndicates whether the value state message should be shown or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowValueStateMessage: Boolean) -> sap.m.DateTimeInput","parameters":{"bShowValueStateMessage":"type: boolean, description: New value for property <code>showValueStateMessage<\/code>"}},"setType":{"!description":"Sets a new value for property <code>type<\/code>.\n\nType of DateTimeInput (e.g. Date, Time, DateTime)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Date<\/code>.","!static":false,"!category":"function","!type":"fn(sType: sap.m.DateTimeInputType) -> sap.m.DateTimeInput","parameters":{"sType":"type: sap.m.DateTimeInputType, description: New value for property <code>type<\/code>"}},"fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value<\/code> of type <code>string<\/code>The string value of the control in given valueFormat (or locale format).<\/li>\n<li><code>dateValue<\/code> of type <code>object<\/code>The value of control as JavaScript Date Object or null if value is empty.<\/li>\n<li><code>valid<\/code> of type <code>boolean<\/code>if set, the entered value is a valid date.\nIf not set the entered value cannot be converted to a date.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.DateTimeInput","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDefines the width of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.DateTimeInput","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.DateTimeInput with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setDisplayFormat":{"!description":"Sets a new value for property <code>displayFormat<\/code>.\n\nDisplays date value in this given format in text field. Default value is taken from locale settings.\nIf you use data-binding on value property with type sap.ui.model.type.Date then you can ignore this property or the latter wins.\nIf the user's browser supports native picker then this property is overwritten by browser with locale settings.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDisplayFormat: String) -> sap.m.DateTimeInput","parameters":{"sDisplayFormat":"type: string, description: New value for property <code>displayFormat<\/code>"}},"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nDefines the value of the control.\n\nThe new value must be in the format set by <code>valueFormat<\/code>.\n\nThe \"Now\" literal can also be assigned as a parameter to show the current date and/or time.","!static":false,"!category":"function","!type":"fn() -> String"},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nIndicates whether the user can interact with the control or not.\n<b>Note:<\/b> Disabled controls cannot be focused and they are out of the tab-chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.m.DateTimeInput","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"getDisplayFormat":{"!description":"Gets current value of property <code>displayFormat<\/code>.\n\nDisplays date value in this given format in text field. Default value is taken from locale settings.\nIf you use data-binding on value property with type sap.ui.model.type.Date then you can ignore this property or the latter wins.\nIf the user's browser supports native picker then this property is overwritten by browser with locale settings.","!static":false,"!category":"function","!type":"fn() -> String"},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nDefines whether the control can be modified by the user or not.\n<b>Note:<\/b> A user can tab to non-editable control, highlight it, and copy the text from it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEditable: Boolean) -> sap.m.DateTimeInput","parameters":{"bEditable":"type: boolean, description: New value for property <code>editable<\/code>"}},"!module":"sap/m/DateTimeInput","getValueState":{"!description":"Gets current value of property <code>valueState<\/code>.\n\nVisualizes the validation state of the control, e.g. <code>Error<\/code>, <code>Warning<\/code>, <code>Success<\/code>.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.8 Instead, use the dedicated <code>sap.m.DatePicker<\/code>, <code>sap.m.TimePicker<\/code> or <code>sap.m.DateTimePicker<\/code> controls.<br>Allows end users to interact with date and/or time and select from a date and/or time pad.\n\n<b>Note:<\/b> This control should not be used any longer, instead please use the dedicated <code>sap.m.DatePicker<\/code>, <code>sap.m.TimePicker<\/code> or <code>sap.m.DateTimePicker<\/code> control.","getType":{"!description":"Gets current value of property <code>type<\/code>.\n\nType of DateTimeInput (e.g. Date, Time, DateTime)\n\nDefault value is <code>Date<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.DateTimeInputType"},"setValue":{"!description":"Sets a new value for property <code>value<\/code>.\n\nDefines the value of the control.\n\nThe new value must be in the format set by <code>valueFormat<\/code>.\n\nThe \"Now\" literal can also be assigned as a parameter to show the current date and/or time.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.m.DateTimeInput","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"bindValue":{"!description":"Binds property <code>value<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.DateTimeInput","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getDateValue":{"!description":"Gets current value of property <code>dateValue<\/code>.\n\nThis property as JavaScript Date Object can be used to assign a new value which is independent from valueFormat.","!static":false,"!category":"function","!type":"fn() -> Object"},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nDefines the text directionality of the input field, e.g. <code>RTL<\/code>, <code>LTR<\/code>\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"}},"sap.m.semantic.EditAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.EditAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.EditAction"},"sap.m.semantic.GroupAction":{"!description":"A GroupAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","extend":{"!description":"Creates a new subclass of class sap.m.semantic.GroupAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.GroupAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new GroupAction.","!module":"sap/m/semantic/GroupAction","!helpDescription":"A GroupAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","!proto":"sap.m.semantic.SemanticButton","!category":"class"},"sap.m.IconTabSeparator_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.IconTabSeparator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.IconTabSeparator"},"sap.m.P13nColumnsPanel":{"bindColumnsItems":{"!description":"Binds aggregation <code>columnsItems<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.P13nColumnsPanel","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"removeItem":{"!description":"Remove item from items aggregation","!static":false,"!category":"function","!type":"fn(oItem: sap.m.P13nItem) -> sap.m.P13nItem","parameters":{"oItem":"type: sap.m.P13nItem, description: is the item that shall be removed"}},"detachChangeColumnsItems":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>changeColumnsItems<\/code> event of this <code>sap.m.P13nColumnsPanel<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.P13nColumnsPanel","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireSetData":{"!description":"Fires event <code>setData<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.P13nColumnsPanel","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!proto":"sap.m.P13nPanel","attachAddColumnsItem":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>addColumnsItem<\/code> event of this <code>sap.m.P13nColumnsPanel<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.P13nColumnsPanel<\/code> itself.\n\nEvent raised when a <code>columnsItem<\/code> is added.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.P13nColumnsPanel","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.P13nColumnsPanel<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroyItems":{"!description":"Destroy all items from items aggregation","!static":false,"!category":"function","!type":"fn() -> sap.m.P13nColumnsPanel"},"!category":"class","getColumnsItems":{"!description":"Gets content of aggregation <code>columnsItems<\/code>.\n\nList of columns that has been changed.","!static":false,"!category":"function","!type":"fn() -> [sap.m.P13nColumnsItem]"},"addItem":{"!description":"Add item to items aggregation","!static":false,"!category":"function","!type":"fn(oItem: sap.m.P13nItem) -> sap.m.P13nColumnsPanel","parameters":{"oItem":"type: sap.m.P13nItem, description: is the new item that shall be added"}},"!constructorDescription":"Constructor for a new P13nColumnsPanel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisibleItemsThreshold visibleItemsThreshold} : int (default: -1)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getColumnsItems columnsItems} : sap.m.P13nColumnsItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:addColumnsItem addColumnsItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:changeColumnsItems changeColumnsItems} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:setData setData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.P13nPanel#constructor sap.m.P13nPanel}\ncan be used as well.","getVisibleItemsThreshold":{"!description":"Gets current value of property <code>visibleItemsThreshold<\/code>.\n\nSpecifies a threshold of visible items. If the end user makes a lot of columns visible, this might cause performance to slow down.\nWhen this happens, the user can receive a corresponding warning triggered by the <code>visibleItemsThreshold<\/code> property. The\nproperty needs to be activated and set to the required value by the consuming application to ensure that the warning message is\nshown when the threshold has been exceeded. In the following example the message will be shown if more than 100 visible columns are\nselected:\n\n<pre>\ncustomData&gt;\ncore:CustomData key=&quot;p13nDialogSettings&quot;\nvalue='\\{&quot;columns&quot;:\\{&quot;visible&quot;: true, &quot;payload&quot;: \\{&quot;visibleItemsThreshold&quot;: 3\\}\\}\\}' /&gt;\n/customData&gt;\n<\/pre>\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getResetPayload":{"!description":"Delivers a payload for columnsPanel that can be used at consumer side","!static":false,"!category":"function","!type":"fn() -> Object"},"getOkPayload":{"!description":"Delivers a payload for columnsPanel that can be used at consumer side","!static":false,"!category":"function","!type":"fn() -> Object"},"removeAllColumnsItems":{"!description":"Remove all ColumnsItems from columnsItems aggregation","!static":false,"!category":"function","!type":"fn() -> [sap.m.P13nColumnsItem]"},"onBeforeNavigationFrom":{"!description":"This method is executed before navigation, to provide validation result(s) for columnsPanel","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setVisibleItemsThreshold":{"!description":"Sets a new value for property <code>visibleItemsThreshold<\/code>.\n\nSpecifies a threshold of visible items. If the end user makes a lot of columns visible, this might cause performance to slow down.\nWhen this happens, the user can receive a corresponding warning triggered by the <code>visibleItemsThreshold<\/code> property. The\nproperty needs to be activated and set to the required value by the consuming application to ensure that the warning message is\nshown when the threshold has been exceeded. In the following example the message will be shown if more than 100 visible columns are\nselected:\n\n<pre>\ncustomData&gt;\ncore:CustomData key=&quot;p13nDialogSettings&quot;\nvalue='\\{&quot;columns&quot;:\\{&quot;visible&quot;: true, &quot;payload&quot;: \\{&quot;visibleItemsThreshold&quot;: 3\\}\\}\\}' /&gt;\n/customData&gt;\n<\/pre>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn(iVisibleItemsThreshold: Number) -> sap.m.P13nColumnsPanel","parameters":{"iVisibleItemsThreshold":"type: int, description: New value for property <code>visibleItemsThreshold<\/code>"}},"attachChangeColumnsItems":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>changeColumnsItems<\/code> event of this <code>sap.m.P13nColumnsPanel<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.P13nColumnsPanel<\/code> itself.\n\nEvent raised if <code>columnsItems<\/code> is changed or new one needs to be created in the model.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.P13nColumnsPanel","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.P13nColumnsPanel<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeColumnsItem":{"!description":"Remove ColumnsItem from columnsItems aggregation","!static":false,"!category":"function","!type":"fn(oColumnsItem: sap.m.P13nColumnsItem) -> sap.m.P13nColumnsItem","parameters":{"oColumnsItem":"type: sap.m.P13nColumnsItem, description: is the ColumnsItem that shall be removed"}},"!description":"The P13nColumnsPanel control is used to define column-specific settings for table personalization.","fireChangeColumnsItems":{"!description":"Fires event <code>changeColumnsItems<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>newItems<\/code> of type <code>sap.m.P13nColumnsItem[]<\/code>Contains <code>columnsItems<\/code> that needs to be created in the model.<\/li>\n<li><code>existingItems<\/code> of type <code>sap.m.P13nColumnsItem[]<\/code>Contains <code>columnsItems<\/code> that needs to be changed in the model.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.P13nColumnsPanel","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"fireAddColumnsItem":{"!description":"Fires event <code>addColumnsItem<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>newItem<\/code> of type <code>sap.m.P13nColumnsItem<\/code><code>columnsItem<\/code> that needs to be added in the model.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.P13nColumnsPanel","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.P13nColumnsPanel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"addColumnsItem":{"!description":"Add ColumnsItem to columnsItems aggregation","!static":false,"!category":"function","!type":"fn(oColumnsItem: sap.m.P13nColumnsItem) -> sap.m.P13nColumnsPanel","parameters":{"oColumnsItem":"type: sap.m.P13nColumnsItem, description: is the new ColumnsItem that shall be added"}},"detachAddColumnsItem":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>addColumnsItem<\/code> event of this <code>sap.m.P13nColumnsPanel<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.P13nColumnsPanel","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"insertColumnsItem":{"!description":"Insert ColumnsItem to columnsItems aggregation","!static":false,"!category":"function","!type":"fn(iIndex: Number, oColumnsItem: sap.m.P13nColumnsItem) -> sap.m.P13nColumnsPanel","parameters":{"oColumnsItem":"type: sap.m.P13nColumnsItem, description: is the new columnsItem that shall be inserted","iIndex":"type: int, description: is the index where the columnsItem item shall be inserted"}},"attachSetData":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>setData<\/code> event of this <code>sap.m.P13nColumnsPanel<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.P13nColumnsPanel<\/code> itself.\n\nEvent raised if <code>setData<\/code> is called in model. The event serves the purpose of minimizing such calls since they can\ntake up a lot of performance.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.P13nColumnsPanel","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.P13nColumnsPanel<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeAllItems":{"!description":"Remove all item from items aggregation","!static":false,"!category":"function","!type":"fn() -> [sap.m.P13nItem]"},"extend":{"!description":"Creates a new subclass of class sap.m.P13nColumnsPanel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.P13nPanel.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"reInitialize":{"!description":"This method does a re-initialization of the panel","!static":false,"!category":"function","!type":"fn()"},"exit":{"!description":"Cleans up before destruction.","!static":false,"!category":"function","!type":"fn()"},"unbindColumnsItems":{"!description":"Unbinds aggregation <code>columnsItems<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.P13nColumnsPanel"},"!module":"sap/m/P13nColumnsPanel","!helpDescription":"The P13nColumnsPanel control is used to define column-specific settings for table personalization.","detachSetData":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>setData<\/code> event of this <code>sap.m.P13nColumnsPanel<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.P13nColumnsPanel","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"destroyColumnsItems":{"!description":"Destroy all instances from columnsItems aggregation","!static":false,"!category":"function","!type":"fn() -> sap.m.P13nColumnsPanel"},"indexOfColumnsItem":{"!description":"Checks for the provided <code>sap.m.P13nColumnsItem<\/code> in the aggregation <code>columnsItems<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oColumnsItem: sap.m.P13nColumnsItem) -> Number","parameters":{"oColumnsItem":"type: sap.m.P13nColumnsItem, description: The columnsItem whose index is looked for"}},"insertItem":{"!description":"Add item to items aggregation","!static":false,"!category":"function","!type":"fn(iIndex: Number, oItem: sap.m.P13nItem) -> sap.m.P13nColumnsPanel","parameters":{"iIndex":"type: int, description: is the index where the new item shall be inserted","oItem":"type: sap.m.P13nItem, description: is the new item that shall be added"}}},"sap.m.BusyDialog_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.BusyDialog with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.BusyDialog"},"sap.m.DraftIndicator_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.DraftIndicator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String)","prototype":"sap.m.DraftIndicator"},"sap.m.VerticalPlacementType":{"!description":"Types for the placement of message popover control.","Vertical":{"!description":"Popover will be placed at the top or bottom of the reference control.","!category":"enum","!type":"String"},"!module":"sap/m/library","Top":{"!description":"Popover will be placed at the top of the reference control.","!category":"enum","!type":"String"},"Bottom":{"!description":"Popover will be placed at the bottom of the reference control.","!category":"enum","!type":"String"},"!category":"static class"},"sap.m.HeaderLevel":{"!description":"Different levels for headers","!module":"sap/m/library","H1":{"!description":"Header level 1","!category":"enum","!type":"String"},"!category":"static class","H2":{"!description":"Header level 2","!category":"enum","!type":"String"},"H3":{"!description":"Header level 3","!category":"enum","!type":"String"},"H4":{"!description":"Header level 4","!category":"enum","!type":"String"},"H5":{"!description":"Header level 5","!category":"enum","!type":"String"},"H6":{"!description":"Header level 6","!category":"enum","!type":"String"}},"sap.m.Toolbar_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.Toolbar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.Toolbar"},"sap.m.semantic.DeleteAction":{"!description":"A DeleteAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","extend":{"!description":"Creates a new subclass of class sap.m.semantic.DeleteAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.DeleteAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new DeleteAction.","!module":"sap/m/semantic/DeleteAction","!helpDescription":"A DeleteAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","!proto":"sap.m.semantic.SemanticButton","!category":"class"},"sap.m.MessageBox.Action":{"!description":"Enumeration of supported actions in a MessageBox.\n\nEach action is represented as a button in the message box. The values of this enumeration are used for both,\nspecifying the set of allowed actions as well as reporting back the user choice.","NO":{"!description":"Adds a \"No\" button to the message box.","!category":"enum","!type":"String"},"ABORT":{"!description":"Adds an \"Abort\" button to the message box.","!category":"enum","!type":"String"},"YES":{"!description":"Adds a \"Yes\" button to the message box.","!category":"enum","!type":"String"},"!category":"namespace","CLOSE":{"!description":"Adds a \"Close\" button to the message box.","!category":"enum","!type":"String"},"IGNORE":{"!description":"Adds an \"Ignore\" button to the message box.","!category":"enum","!type":"String"},"RETRY":{"!description":"Adds a \"Retry\" button to the message box.","!category":"enum","!type":"String"},"DELETE":{"!description":"Adds a \"Delete\" button to the message box.","!category":"enum","!type":"String"},"!module":"sap/m/MessageBox","!helpDescription":"Enumeration of supported actions in a MessageBox.\n\nEach action is represented as a button in the message box. The values of this enumeration are used for both,\nspecifying the set of allowed actions as well as reporting back the user choice.","CANCEL":{"!description":"Adds a \"Cancel\" button to the message box.","!category":"enum","!type":"String"},"OK":{"!description":"Adds an \"OK\" button to the message box.","!category":"enum","!type":"String"}},"sap.m.P13nPanel":{"getTitleLarge":{"!description":"Gets current value of property <code>titleLarge<\/code>.\n\nLarge title text appears e.g. in dialog header in case that only one panel is shown.","!static":false,"!category":"function","!type":"fn() -> String"},"removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.m.P13nItem) -> sap.m.P13nItem","parameters":{"vItem":"type: int|string|sap.m.P13nItem, description: The itemto remove or its index or id"}},"beforeNavigationTo":{"!static":false,"!category":"function","!type":"fn()"},"getVerticalScrolling":{"!description":"Gets current value of property <code>verticalScrolling<\/code>.\n\nEnables the vertical Scrolling on the P13nDialog when the panel is shown.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.P13nPanel"},"attachBeforeNavigationTo":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beforeNavigationTo<\/code> event of this <code>sap.m.P13nPanel<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.P13nPanel<\/code> itself.\n\nDue to performance the data of the panel can be requested in lazy mode e.g. when the panel is displayed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.P13nPanel","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.P13nPanel<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!category":"class","setValidationExecutor":{"!description":"Sets a new value for property <code>validationExecutor<\/code>.\n\nCallback method which is called in order to validate end user entry.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oValidationExecutor: Object) -> sap.m.P13nPanel","parameters":{"oValidationExecutor":"type: object, description: New value for property <code>validationExecutor<\/code>"}},"addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.P13nItem) -> sap.m.P13nPanel","parameters":{"oItem":"type: sap.m.P13nItem, description: the item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nAggregation of items","!static":false,"!category":"function","!type":"fn() -> [sap.m.P13nItem]"},"!constructorDescription":"Constructor for a new P13nPanel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getTitleLarge titleLarge} : string<\/li>\n<li>{@link #getType type} : string<\/li>\n<li>{@link #getVerticalScrolling verticalScrolling} : boolean (default: true)<\/li>\n<li>{@link #getValidationExecutor validationExecutor} : object<\/li>\n<li>{@link #getValidationListener validationListener} : object<\/li>\n<li>{@link #getChangeNotifier changeNotifier} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.P13nItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:beforeNavigationTo beforeNavigationTo} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nTitle text appears in the panel.","!static":false,"!category":"function","!type":"fn() -> String"},"indexOfItem":{"!description":"Checks for the provided <code>sap.m.P13nItem<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.P13nItem) -> Number","parameters":{"oItem":"type: sap.m.P13nItem, description: The item whose index is looked for"}},"detachBeforeNavigationTo":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beforeNavigationTo<\/code> event of this <code>sap.m.P13nPanel<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.P13nPanel","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getResetPayload":{"!description":"This method can be overwritten by subclass in order to return a payload for Reset action","!static":false,"!category":"function","!type":"fn()"},"getValidationExecutor":{"!description":"Gets current value of property <code>validationExecutor<\/code>.\n\nCallback method which is called in order to validate end user entry.","!static":false,"!category":"function","!type":"fn() -> Object"},"onAfterNavigationFrom":{"!description":"This method can be overwritten by subclass in order to cleanup after navigation, e.g. to remove invalid content on the panel.","!static":false,"!category":"function","!type":"fn()"},"getOkPayload":{"!description":"This method can be overwritten by subclass in order to return a payload for Ok action","!static":false,"!category":"function","!type":"fn()"},"setTitleLarge":{"!description":"Sets a new value for property <code>titleLarge<\/code>.\n\nLarge title text appears e.g. in dialog header in case that only one panel is shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitleLarge: String) -> sap.m.P13nPanel","parameters":{"sTitleLarge":"type: string, description: New value for property <code>titleLarge<\/code>"}},"setVerticalScrolling":{"!description":"Sets a new value for property <code>verticalScrolling<\/code>.\n\nEnables the vertical Scrolling on the P13nDialog when the panel is shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVerticalScrolling: Boolean) -> sap.m.P13nPanel","parameters":{"bVerticalScrolling":"type: boolean, description: New value for property <code>verticalScrolling<\/code>"}},"bindItems":{"!description":"Binds aggregation <code>items<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.P13nPanel","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"setValidationListener":{"!description":"Sets a new value for property <code>validationListener<\/code>.\n\nCallback method which is called in order to register for validation result.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oValidationListener: Object) -> sap.m.P13nPanel","parameters":{"oValidationListener":"type: object, description: New value for property <code>validationListener<\/code>"}},"onBeforeNavigationFrom":{"!description":"This method can be overwritten by subclass in order to prevent navigation to another panel. This could be the case if some content on the panel\nis considered 'invalid'.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"Base type for <code>panels<\/code> aggregation in P13nDialog control.","getMetadata":{"!description":"Returns a metadata object for class sap.m.P13nPanel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"unbindItems":{"!description":"Unbinds aggregation <code>items<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.P13nPanel"},"getValidationListener":{"!description":"Gets current value of property <code>validationListener<\/code>.\n\nCallback method which is called in order to register for validation result.","!static":false,"!category":"function","!type":"fn() -> Object"},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nTitle text appears in the panel.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.P13nPanel","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.P13nItem]"},"setType":{"!description":"Sets a new value for property <code>type<\/code>.\n\nPanel type for generic use. Due to extensibility reason the type of <code>type<\/code> property should be <code>string<\/code>.\nSo it is feasible to add a custom panel without expanding the type.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sType: String) -> sap.m.P13nPanel","parameters":{"sType":"type: string, description: New value for property <code>type<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.P13nPanel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/m/P13nPanel","!helpDescription":"Base type for <code>panels<\/code> aggregation in P13nDialog control.","getType":{"!description":"Gets current value of property <code>type<\/code>.\n\nPanel type for generic use. Due to extensibility reason the type of <code>type<\/code> property should be <code>string<\/code>.\nSo it is feasible to add a custom panel without expanding the type.","!static":false,"!category":"function","!type":"fn() -> String"},"fireBeforeNavigationTo":{"!description":"Fires event <code>beforeNavigationTo<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.P13nPanel","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getChangeNotifier":{"!description":"Gets current value of property <code>changeNotifier<\/code>.\n\nCallback which notifies a change on this panel.","!static":false,"!category":"function","!type":"fn() -> Object"},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.P13nItem, iIndex: Number) -> sap.m.P13nPanel","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position","oItem":"type: sap.m.P13nItem, description: the item to insert; if empty, nothing is inserted"}},"setChangeNotifier":{"!description":"Sets a new value for property <code>changeNotifier<\/code>.\n\nCallback which notifies a change on this panel.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oChangeNotifier: Object) -> sap.m.P13nPanel","parameters":{"oChangeNotifier":"type: object, description: New value for property <code>changeNotifier<\/code>"}}},"sap.m.BackgroundDesign":{"!description":"Available Background Design.","!module":"sap/m/library","Transparent":{"!description":"Transparent background.","!category":"enum","!type":"String"},"!category":"static class","Translucent":{"!description":"A translucent background depending on the opacity value of the theme.","!category":"enum","!type":"String"},"Solid":{"!description":"A solid background color dependent on the theme.","!category":"enum","!type":"String"}},"sap.m.routing.Targets_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.routing.Targets with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.routing.Targets.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oOptions: Object)","prototype":"sap.m.routing.Targets"},"sap.m.LoadState":{"!description":"Enumeration of possible load statuses.","!module":"sap/m/library","Loading":{"!description":"The control is loading.","!category":"enum","!type":"String"},"Failed":{"!description":"The control failed to load.","!category":"enum","!type":"String"},"!category":"static class","Disabled":{"!description":"The control is disabled.","!category":"enum","!type":"String"},"Loaded":{"!description":"The control has loaded.","!category":"enum","!type":"String"}},"sap.m.TabContainerItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.TabContainerItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.TabContainerItem"},"sap.m.ValueCSSColor":{"!description":"A string type that represents CSS color values and sap.m.ValueColor.\n\nAllowed values are {@link sap.ui.core.CSSColor} and {@link sap.m.ValueColor}\n\nThe empty string is also allowed and has the same effect as setting no color.","!module":"sap/m/library","!helpDescription":"A string type that represents CSS color values and sap.m.ValueColor.\n\nAllowed values are {@link sap.ui.core.CSSColor} and {@link sap.m.ValueColor}\n\nThe empty string is also allowed and has the same effect as setting no color.","!category":"namespace"},"sap.m.InputBase":{"getSelectedText":{"!description":"Retrieves the selected text.\nOnly supported for input control's type of Text, Url, Tel and Password.","!static":false,"!category":"function","!type":"fn() -> String"},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setRequired":{"!description":"Sets a new value for property <code>required<\/code>.\n\nIndicates that user input is required. This property is only needed for accessibility purposes when a single relationship between\nthe field and a label (see aggregation <code>labelFor<\/code> of <code>sap.m.Label<\/code>) cannot be established\n(e.g. one label should label multiple fields).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRequired: Boolean) -> sap.m.InputBase","parameters":{"bRequired":"type: boolean, description: New value for property <code>required<\/code>"}},"getName":{"!description":"Gets current value of property <code>name<\/code>.\n\nDefines the name of the control for the purposes of form submission.","!static":false,"!category":"function","!type":"fn() -> String"},"selectText":{"!description":"Selects the text within the input field between the specified start and end positions.\nOnly supported for input control's type of Text, Url, Tel and Password.","!static":false,"!category":"function","!type":"fn(iSelectionStart: Number, iSelectionEnd: Number) -> sap.m.InputBase","parameters":{"iSelectionStart":"type: int, description: The index into the text at which the first selected character is located.","iSelectionEnd":"type: int, description: The index into the text at which the last selected character is located."}},"fireChangeEvent":{"!description":"Fires the change event for the listeners","!static":false,"!category":"function","!type":"fn(sValue: String, oParams?: Object)","parameters":{"oParams":"type: Object, description: extra event parameters.","sValue":"type: String, description: value of the input."}},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nDefines whether the control can be modified by the user or not.\n<b>Note:<\/b> A user can tab to non-editable control, highlight it, and copy the text from it.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getFocusInfo":{"!description":"Returns an object representing the serialized focus information.\nTo be overwritten by subclasses.","!static":false,"!category":"function","!type":"fn() -> Object"},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.m.InputBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.InputBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setValueStateText":{"!description":"Setter for property <code>valueStateText<\/code>.\n\nDefault value is empty/<code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sValueStateText: String) -> sap.m.InputBase","parameters":{"sValueStateText":"type: string, description: new value for property <code>valueStateText<\/code>"}},"openValueStateMessage":{"!description":"Open value state message popup.","!static":false,"!category":"function","!type":"fn()"},"applyFocusInfo":{"!description":"Applies the focus info.\nTo be overwritten by subclasses.","!static":false,"!category":"function","!type":"fn(oFocusInfo: Object)","parameters":{"oFocusInfo":"type: object, description: undefined"}},"!description":"The <code>sap.m.InputBase<\/code> control provides a base functionality of the Input controls, e.g. <code>sap.m.Input<\/code>, <code>sap.m.DatePicker<\/code>, <code>sap.m.TextArea<\/code>, <code>sap.m.ComboBox<\/code>.","getMetadata":{"!description":"Returns a metadata object for class sap.m.InputBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"onChange":{"!description":"Handles the change event.","!static":false,"!category":"function","!type":"fn(oEvent: Object) -> true | undefined","parameters":{"oEvent":"type: object, description: undefined"}},"setValueState":{"!description":"Setter for property <code>valueState<\/code>.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.m.InputBase","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>."}},"unbindValue":{"!description":"Unbinds property <code>value<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.InputBase"},"setTextAlign":{"!description":"Sets a new value for property <code>textAlign<\/code>.\n\nDefines the horizontal alignment of the text that is shown inside the input field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Initial<\/code>.","!static":false,"!category":"function","!type":"fn(sTextAlign: sap.ui.core.TextAlign) -> sap.m.InputBase","parameters":{"sTextAlign":"type: sap.ui.core.TextAlign, description: New value for property <code>textAlign<\/code>"}},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nDefines the text directionality of the input field, e.g. <code>RTL<\/code>, <code>LTR<\/code>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.m.InputBase","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"updateDomValue":{"!description":"Sets the DOM value of the input field and handles placeholder visibility.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.m.InputBase","parameters":{"sValue":"type: string, description: value of the input field."}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.m.InputBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.InputBase<\/code> itself.\n\nIs fired when the text in the input field has changed and the focus leaves the input field or the enter key is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.InputBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.InputBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"closeValueStateMessage":{"!description":"Close value state message.","!static":false,"!category":"function","!type":"fn()"},"fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value<\/code> of type <code>string<\/code>The new <code>value<\/code> of the <code>control<\/code>.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.InputBase","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"extend":{"!description":"Creates a new subclass of class sap.m.InputBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nIndicates whether the user can interact with the control or not.\n<b>Note:<\/b> Disabled controls cannot be focused and they are out of the tab-chain.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.m.InputBase","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/m/InputBase","!helpDescription":"The <code>sap.m.InputBase<\/code> control provides a base functionality of the Input controls, e.g. <code>sap.m.Input<\/code>, <code>sap.m.DatePicker<\/code>, <code>sap.m.TextArea<\/code>, <code>sap.m.ComboBox<\/code>.","bindValue":{"!description":"Binds property <code>value<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.InputBase","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"setName":{"!description":"Sets a new value for property <code>name<\/code>.\n\nDefines the name of the control for the purposes of form submission.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.m.InputBase","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"getPlaceholder":{"!description":"Gets current value of property <code>placeholder<\/code>.\n\nDefines a short hint intended to aid the user with data entry when the control has no value.","!static":false,"!category":"function","!type":"fn() -> String"},"getShowValueStateMessage":{"!description":"Gets current value of property <code>showValueStateMessage<\/code>.\n\nIndicates whether the value state message should be shown or not.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","getTextAlign":{"!description":"Gets current value of property <code>textAlign<\/code>.\n\nDefines the horizontal alignment of the text that is shown inside the input field.\n\nDefault value is <code>Initial<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextAlign"},"!category":"class","onValueRevertedByEscape":{"!description":"Hook method that gets called when the input value is reverted with hitting escape.\nIt may require to re-implement this method from sub classes for control specific behaviour.","!static":false,"!category":"function","!type":"fn(sValue: String)","parameters":{"sValue":"type: String, description: Reverted value of the input."}},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDefines the width of the control.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new InputBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getPlaceholder placeholder} : string<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getValueStateText valueStateText} : string<\/li>\n<li>{@link #getShowValueStateMessage showValueStateMessage} : boolean (default: true)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Initial)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.m.InputBase","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"setPlaceholder":{"!description":"Sets a new value for property <code>placeholder<\/code>.\n\nDefines a short hint intended to aid the user with data entry when the control has no value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sPlaceholder: String) -> sap.m.InputBase","parameters":{"sPlaceholder":"type: string, description: New value for property <code>placeholder<\/code>"}},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nIndicates whether the user can interact with the control or not.\n<b>Note:<\/b> Disabled controls cannot be focused and they are out of the tab-chain.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getDomRefForValueStateMessage":{"!description":"Get the reference element which the message popup should dock to.","!static":false,"!category":"function","!type":"fn() -> Object"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getValueStateText":{"!description":"Gets current value of property <code>valueStateText<\/code>.\n\nDefines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle.","!static":false,"!category":"function","!type":"fn() -> String"},"bindToInputEvent":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22 Instead, use event delegation(oninput) to listen input event.<br>Registers an event listener to the browser input event.","!static":false,"!category":"function","!type":"fn(fnCallback: fn()) -> sap.m.InputBase","parameters":{"fnCallback":"type: function, description: Function to be called when the value of the input element is changed."}},"setShowValueStateMessage":{"!description":"Sets a new value for property <code>showValueStateMessage<\/code>.\n\nIndicates whether the value state message should be shown or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowValueStateMessage: Boolean) -> sap.m.InputBase","parameters":{"bShowValueStateMessage":"type: boolean, description: New value for property <code>showValueStateMessage<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDefines the width of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.InputBase","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nDefines the value of the control.","!static":false,"!category":"function","!type":"fn() -> String"},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nDefines whether the control can be modified by the user or not.\n<b>Note:<\/b> A user can tab to non-editable control, highlight it, and copy the text from it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEditable: Boolean) -> sap.m.InputBase","parameters":{"bEditable":"type: boolean, description: New value for property <code>editable<\/code>"}},"getValueState":{"!description":"Gets current value of property <code>valueState<\/code>.\n\nVisualizes the validation state of the control, e.g. <code>Error<\/code>, <code>Warning<\/code>, <code>Success<\/code>.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"setValue":{"!description":"Setter for property <code>value<\/code>.\n\nDefault value is empty/<code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.m.InputBase","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>."}},"getRequired":{"!description":"Gets current value of property <code>required<\/code>.\n\nIndicates that user input is required. This property is only needed for accessibility purposes when a single relationship between\nthe field and a label (see aggregation <code>labelFor<\/code> of <code>sap.m.Label<\/code>) cannot be established\n(e.g. one label should label multiple fields).\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nDefines the text directionality of the input field, e.g. <code>RTL<\/code>, <code>LTR<\/code>\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"}},"sap.m.ActionSheet":{"setCancelButtonText":{"!description":"Sets a new value for property <code>cancelButtonText<\/code>.\n\nThis is the text displayed in the cancelButton. Default value is \"Cancel\", and it's translated according to the current locale setting. This property will be ignored when running either in iPad or showCancelButton is set to false.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sCancelButtonText: String) -> sap.m.ActionSheet","parameters":{"sCancelButtonText":"type: string, description: New value for property <code>cancelButtonText<\/code>"}},"openBy":{"!description":"Calling this method will make the ActionSheet visible on the screen.","!static":false,"!category":"function","!type":"fn(oControl: Object)","parameters":{"oControl":"type: object, description: The ActionSheet behaves as a sap.m.Popover in iPad and the control parameter is the object to which the popover will be placed. It can be not only a UI5 control, but also an existing dom reference. The side of the placement depends on the placement property set in the popover. In other platforms, ActionSheet behaves as a standard dialog and this parameter is ignored because dialog is aligned to the screen."}},"attachAfterClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterClose<\/code> event of this <code>sap.m.ActionSheet<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ActionSheet<\/code> itself.\n\nThis event will be fired after the ActionSheet is closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ActionSheet","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ActionSheet<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.core.Control","detachCancelButtonPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>cancelButtonPress<\/code> event of this <code>sap.m.ActionSheet<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ActionSheet","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachAfterOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterOpen<\/code> event of this <code>sap.m.ActionSheet<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ActionSheet<\/code> itself.\n\nThis event will be fired after the ActionSheet is opened.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ActionSheet","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ActionSheet<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!category":"class","destroyButtons":{"!description":"Destroys all the buttons in the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ActionSheet"},"fireBeforeClose":{"!description":"Fires event <code>beforeClose<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ActionSheet","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"detachAfterClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterClose<\/code> event of this <code>sap.m.ActionSheet<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ActionSheet","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getCancelButtonText":{"!description":"Gets current value of property <code>cancelButtonText<\/code>.\n\nThis is the text displayed in the cancelButton. Default value is \"Cancel\", and it's translated according to the current locale setting. This property will be ignored when running either in iPad or showCancelButton is set to false.","!static":false,"!category":"function","!type":"fn() -> String"},"setShowCancelButton":{"!description":"Sets a new value for property <code>showCancelButton<\/code>.\n\nIf this is set to true, there will be a cancel button shown below the action buttons. There won't be any cancel button shown in iPad regardless of this property. The default value is set to true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowCancelButton: Boolean) -> sap.m.ActionSheet","parameters":{"bShowCancelButton":"type: boolean, description: New value for property <code>showCancelButton<\/code>"}},"!constructorDescription":"Constructor for a new ActionSheet.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPlacement placement} : sap.m.PlacementType (default: Bottom)<\/li>\n<li>{@link #getShowCancelButton showCancelButton} : boolean (default: true)<\/li>\n<li>{@link #getCancelButtonText cancelButtonText} : string<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getButtons buttons} : sap.m.Button[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:cancelButtonTap cancelButtonTap} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeOpen beforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterOpen afterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeClose beforeClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterClose afterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancelButtonPress cancelButtonPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nTitle will be shown in the header area in iPhone and every Android devices. This property will be ignored in tablets and desktop browser.","!static":false,"!category":"function","!type":"fn() -> String"},"fireBeforeOpen":{"!description":"Fires event <code>beforeOpen<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ActionSheet","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"fireCancelButtonTap":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20.0 This event is deprecated, use the cancelButtonPress event instead.<br>Fires event <code>cancelButtonTap<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ActionSheet","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"close":{"!description":"Calling this method will make the ActionSheet disappear from the screen.","!static":false,"!category":"function","!type":"fn()"},"attachCancelButtonPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>cancelButtonPress<\/code> event of this <code>sap.m.ActionSheet<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ActionSheet<\/code> itself.\n\nThis event is fired when the cancelButton is clicked. For iPad, this event is also fired when showCancelButton is set to true, and Popover is closed by clicking outside.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ActionSheet","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ActionSheet<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachBeforeOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beforeOpen<\/code> event of this <code>sap.m.ActionSheet<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ActionSheet","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!description":"ActionSheet is a special kind of control which contains one or more sap.m.Button(s) and the ActionSheet will be closed when one of the buttons is tapped. It looks similar as a sap.m.Dialog in iPhone and Android while as a sap.m.Popover in iPad.","fireCancelButtonPress":{"!description":"Fires event <code>cancelButtonPress<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ActionSheet","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getShowCancelButton":{"!description":"Gets current value of property <code>showCancelButton<\/code>.\n\nIf this is set to true, there will be a cancel button shown below the action buttons. There won't be any cancel button shown in iPad regardless of this property. The default value is set to true.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.ActionSheet.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"fireAfterOpen":{"!description":"Fires event <code>afterOpen<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ActionSheet","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getButtons":{"!description":"Gets content of aggregation <code>buttons<\/code>.\n\nThese buttons are added to the content area in ActionSheet control. When button is tapped, the ActionSheet is closed before the tap event listener is called.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"getPlacement":{"!description":"Gets current value of property <code>placement<\/code>.\n\nThe ActionSheet behaves as a sap.m.Popover in iPad and this property is the information about on which side will the popover be placed at. Possible values are sap.m.PlacementType.Left, sap.m.PlacementType.Right, sap.m.PlacementType.Top, sap.m.PlacementType.Bottom, sap.m.PlacementType.Horizontal, sap.m.PlacementType.HorizontalPreferedLeft, sap.m.PlacementType.HorizontalPreferedRight, sap.m.PlacementType.Vertical, sap.m.PlacementType.VerticalPreferedTop, sap.m.PlacementType.VerticalPreferedBottom. The default value is sap.m.PlacementType.Bottom.\n\nDefault value is <code>Bottom<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.PlacementType"},"attachBeforeOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beforeOpen<\/code> event of this <code>sap.m.ActionSheet<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ActionSheet<\/code> itself.\n\nThis event will be fired before the ActionSheet is opened.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ActionSheet","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ActionSheet<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nTitle will be shown in the header area in iPhone and every Android devices. This property will be ignored in tablets and desktop browser.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.ActionSheet","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"addButton":{"!description":"Adds some button to the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn(oButton: sap.m.Button) -> sap.m.ActionSheet","parameters":{"oButton":"type: sap.m.Button, description: the button to add; if empty, nothing is inserted"}},"detachBeforeClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beforeClose<\/code> event of this <code>sap.m.ActionSheet<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ActionSheet","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"indexOfButton":{"!description":"Checks for the provided <code>sap.m.Button<\/code> in the aggregation <code>buttons<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oButton: sap.m.Button) -> Number","parameters":{"oButton":"type: sap.m.Button, description: The button whose index is looked for"}},"attachBeforeClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beforeClose<\/code> event of this <code>sap.m.ActionSheet<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ActionSheet<\/code> itself.\n\nThis event will be fired before the ActionSheet is closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ActionSheet","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ActionSheet<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachAfterOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterOpen<\/code> event of this <code>sap.m.ActionSheet<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ActionSheet","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.m.ActionSheet with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachCancelButtonTap":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20.0 This event is deprecated, use the cancelButtonPress event instead.<br>Detaches event handler <code>fnFunction<\/code> from the <code>cancelButtonTap<\/code> event of this <code>sap.m.ActionSheet<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ActionSheet","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"isOpen":{"!description":"The method checks if the ActionSheet is open. It returns true when the ActionSheet is currently open (this includes opening and closing animations), otherwise it returns false.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/m/ActionSheet","attachCancelButtonTap":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20.0 This event is deprecated, use the cancelButtonPress event instead.<br>Attaches event handler <code>fnFunction<\/code> to the <code>cancelButtonTap<\/code> event of this <code>sap.m.ActionSheet<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ActionSheet<\/code> itself.\n\nThis event is fired when the cancelButton is tapped. For iPad, this event is also fired when showCancelButton is set to true, and Popover is closed by tapping outside.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ActionSheet","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ActionSheet<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"insertButton":{"!description":"Inserts a button into the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn(oButton: sap.m.Button, iIndex: Number) -> sap.m.ActionSheet","parameters":{"oButton":"type: sap.m.Button, description: the button to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the button should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the button is inserted at position 0; for a value\n             greater than the current size of the aggregation, the button is inserted at\n             the last position"}},"!helpDescription":"ActionSheet is a special kind of control which contains one or more sap.m.Button(s) and the ActionSheet will be closed when one of the buttons is tapped. It looks similar as a sap.m.Dialog in iPhone and Android while as a sap.m.Popover in iPad.","fireAfterClose":{"!description":"Fires event <code>afterClose<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ActionSheet","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"removeButton":{"!description":"Removes a button from the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn(vButton: Number | String | sap.m.Button) -> sap.m.Button","parameters":{"vButton":"type: int|string|sap.m.Button, description: The buttonto remove or its index or id"}},"removeAllButtons":{"!description":"Removes all the controls from the aggregation <code>buttons<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"setPlacement":{"!description":"Sets a new value for property <code>placement<\/code>.\n\nThe ActionSheet behaves as a sap.m.Popover in iPad and this property is the information about on which side will the popover be placed at. Possible values are sap.m.PlacementType.Left, sap.m.PlacementType.Right, sap.m.PlacementType.Top, sap.m.PlacementType.Bottom, sap.m.PlacementType.Horizontal, sap.m.PlacementType.HorizontalPreferedLeft, sap.m.PlacementType.HorizontalPreferedRight, sap.m.PlacementType.Vertical, sap.m.PlacementType.VerticalPreferedTop, sap.m.PlacementType.VerticalPreferedBottom. The default value is sap.m.PlacementType.Bottom.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Bottom<\/code>.","!static":false,"!category":"function","!type":"fn(sPlacement: sap.m.PlacementType) -> sap.m.ActionSheet","parameters":{"sPlacement":"type: sap.m.PlacementType, description: New value for property <code>placement<\/code>"}}},"sap.m.ObjectStatus":{"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","!category":"class","getIconDensityAware":{"!description":"Gets current value of property <code>iconDensityAware<\/code>.\n\nBy default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server.\n\nIf bandwidth is key for the application, set this value to false.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new ObjectStatus.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getState state} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nDefines the ObjectStatus title.","!static":false,"!category":"function","!type":"fn() -> String"},"setIconDensityAware":{"!description":"Sets a new value for property <code>iconDensityAware<\/code>.\n\nBy default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server.\n\nIf bandwidth is key for the application, set this value to false.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bIconDensityAware: Boolean) -> sap.m.ObjectStatus","parameters":{"bIconDensityAware":"type: boolean, description: New value for property <code>iconDensityAware<\/code>"}},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!description":"Status information that can be either text with a value state, or an icon.","getMetadata":{"!description":"Returns a metadata object for class sap.m.ObjectStatus.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nDefines the ObjectStatus text.","!static":false,"!category":"function","!type":"fn() -> String"},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nDetermines the direction of the text, not including the title.\nAvailable options for the text direction are LTR (left-to-right) and RTL (right-to-left). By default the control inherits the text direction from its parent control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.m.ObjectStatus","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"setTitle":{"!description":"Sets the title.\nThe default value is empty/undefined.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.ObjectStatus","parameters":{"sTitle":"type: string, description: New value for property title"}},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nIcon URI. This may be either an icon font or image path.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.m.ObjectStatus","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.m.ObjectStatus with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nIcon URI. This may be either an icon font or image path.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.m.ObjectStatus","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"getState":{"!description":"Gets current value of property <code>state<\/code>.\n\nDefines the text value state.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"!module":"sap/m/ObjectStatus","!helpDescription":"Status information that can be either text with a value state, or an icon.","removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"setState":{"!description":"Sets a new value for property <code>state<\/code>.\n\nDefines the text value state.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sState: sap.ui.core.ValueState) -> sap.m.ObjectStatus","parameters":{"sState":"type: sap.ui.core.ValueState, description: New value for property <code>state<\/code>"}},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nDetermines the direction of the text, not including the title.\nAvailable options for the text direction are LTR (left-to-right) and RTL (right-to-left). By default the control inherits the text direction from its parent control.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"setText":{"!description":"Sets the text.\nThe default value is empty/undefined.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.m.ObjectStatus","parameters":{"sText":"type: string, description: New value for property text"}}},"sap.m.VBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.VBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.FlexBox.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.VBox"},"sap.m.RadioButtonGroup_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.RadioButtonGroup with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.RadioButtonGroup"},"sap.m.FlexItemData_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.FlexItemData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.LayoutData.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.FlexItemData"},"sap.m.GenericTile_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.GenericTile with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.GenericTile"},"sap.m.TablePersoController_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.TablePersoController with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.TablePersoController"},"sap.m.semantic.ShareMenuPage_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.ShareMenuPage with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticPage.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.ShareMenuPage"},"sap.m.PopupHelper":{"!description":"Helper for Popups.","!module":"sap/m/library","!helpDescription":"Helper for Popups.","calcPercentageSize":{"!description":"This methods converts the percentage value to an absolute number based on the given base number.","!static":"true","!category":"function","!type":"fn(sPercentage: String, fBaseSize: Number)"},"!category":"namespace"},"sap.m.GenericTile":{"destroyIcon":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.36.0 This aggregation is deprecated, use sap.m.TileContent control to display an icon instead.<br>Destroys the icon in the aggregation <code>icon<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.GenericTile"},"!proto":"sap.ui.core.Control","setBackgroundImage":{"!description":"Sets a new value for property <code>backgroundImage<\/code>.\n\nThe URI of the background image.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sBackgroundImage: sap.ui.core.URI) -> sap.m.GenericTile","parameters":{"sBackgroundImage":"type: sap.ui.core.URI, description: New value for property <code>backgroundImage<\/code>"}},"getTileContent":{"!description":"Gets content of aggregation <code>tileContent<\/code>.\n\nThe switchable view that depends on the tile type.","!static":false,"!category":"function","!type":"fn() -> [sap.m.TileContent]"},"!category":"class","setSubheader":{"!description":"Sets a new value for property <code>subheader<\/code>.\n\nThe subheader of the tile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSubheader: String) -> sap.m.GenericTile","parameters":{"sSubheader":"type: string, description: New value for property <code>subheader<\/code>"}},"setHeader":{"!description":"Sets a new value for property <code>header<\/code>.\n\nThe header of the tile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeader: String) -> sap.m.GenericTile","parameters":{"sHeader":"type: string, description: New value for property <code>header<\/code>"}},"getHeader":{"!description":"Gets current value of property <code>header<\/code>.\n\nThe header of the tile.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new sap.m.GenericTile control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMode mode} : sap.m.GenericTileMode (default: ContentMode)<\/li>\n<li>{@link #getHeader header} : string<\/li>\n<li>{@link #getSubheader subheader} : string<\/li>\n<li>{@link #getFailedText failedText} : string<\/li>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getFrameType frameType} : sap.m.FrameType (default: OneByOne)<\/li>\n<li>{@link #getBackgroundImage backgroundImage} : sap.ui.core.URI<\/li>\n<li>{@link #getHeaderImage headerImage} : sap.ui.core.URI<\/li>\n<li>{@link #getState state} : sap.m.LoadState (default: Loaded)<\/li>\n<li>{@link #getImageDescription imageDescription} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTileContent tileContent} : sap.m.TileContent[]<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setSize":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38.0 The GenericTile control has now a fixed size, depending on the used media (desktop, tablet or phone).<br>Sets a new value for property <code>size<\/code>.\n\nThe size of the tile. If not set, then the default size is applied based on the device.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sSize: sap.m.Size) -> sap.m.GenericTile","parameters":{"sSize":"type: sap.m.Size, description: New value for property <code>size<\/code>"}},"removeTileContent":{"!description":"Removes a tileContent from the aggregation <code>tileContent<\/code>.","!static":false,"!category":"function","!type":"fn(vTileContent: Number | String | sap.m.TileContent) -> sap.m.TileContent","parameters":{"vTileContent":"type: int|string|sap.m.TileContent, description: The tileContentto remove or its index or id"}},"getImageDescription":{"!description":"Gets current value of property <code>imageDescription<\/code>.\n\nDescription of a header image that is used in the tooltip.","!static":false,"!category":"function","!type":"fn() -> String"},"setFailedText":{"!description":"Sets a new value for property <code>failedText<\/code>.\n\nThe message that appears when the control is in the Failed state.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFailedText: String) -> sap.m.GenericTile","parameters":{"sFailedText":"type: string, description: New value for property <code>failedText<\/code>"}},"bindTileContent":{"!description":"Binds aggregation <code>tileContent<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.GenericTile","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getMode":{"!description":"Gets current value of property <code>mode<\/code>.\n\nThe mode of the GenericTile.\n\nDefault value is <code>ContentMode<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.GenericTileMode"},"setHeaderImage":{"!description":"Sets a new value for property <code>headerImage<\/code>.\n\nThe image to be displayed as a graphical element within the header. This can be an image or an icon from the icon font.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeaderImage: sap.ui.core.URI) -> sap.m.GenericTile","parameters":{"sHeaderImage":"type: sap.ui.core.URI, description: New value for property <code>headerImage<\/code>"}},"destroyTileContent":{"!description":"Destroys all the tileContent in the aggregation <code>tileContent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.GenericTile"},"removeAllTileContent":{"!description":"Removes all the controls from the aggregation <code>tileContent<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.TileContent]"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.m.GenericTile<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.GenericTile<\/code> itself.\n\nThe event is fired when the user chooses the tile.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.GenericTile","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.GenericTile<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"Displays the title, description, and a customizable main area.","addTileContent":{"!description":"Adds some tileContent to the aggregation <code>tileContent<\/code>.","!static":false,"!category":"function","!type":"fn(oTileContent: sap.m.TileContent) -> sap.m.GenericTile","parameters":{"oTileContent":"type: sap.m.TileContent, description: the tileContent to add; if empty, nothing is inserted"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.GenericTile.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"insertTileContent":{"!description":"Inserts a tileContent into the aggregation <code>tileContent<\/code>.","!static":false,"!category":"function","!type":"fn(oTileContent: sap.m.TileContent, iIndex: Number) -> sap.m.GenericTile","parameters":{"oTileContent":"type: sap.m.TileContent, description: the tileContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the tileContent should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the tileContent is inserted at position 0; for a value\n             greater than the current size of the aggregation, the tileContent is inserted at\n             the last position"}},"setImageDescription":{"!description":"Sets a new value for property <code>imageDescription<\/code>.\n\nDescription of a header image that is used in the tooltip.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sImageDescription: String) -> sap.m.GenericTile","parameters":{"sImageDescription":"type: string, description: New value for property <code>imageDescription<\/code>"}},"setMode":{"!description":"Sets a new value for property <code>mode<\/code>.\n\nThe mode of the GenericTile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>ContentMode<\/code>.","!static":false,"!category":"function","!type":"fn(sMode: sap.m.GenericTileMode) -> sap.m.GenericTile","parameters":{"sMode":"type: sap.m.GenericTileMode, description: New value for property <code>mode<\/code>"}},"getHeaderImage":{"!description":"Gets current value of property <code>headerImage<\/code>.\n\nThe image to be displayed as a graphical element within the header. This can be an image or an icon from the icon font.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getIcon":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.36.0 This aggregation is deprecated, use sap.m.TileContent control to display an icon instead.<br>Gets content of aggregation <code>icon<\/code>.\n\nAn icon or image to be displayed in the control.\nThis aggregation is deprecated since version 1.36.0, to display an icon or image use sap.m.TileContent control instead.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"extend":{"!description":"Creates a new subclass of class sap.m.GenericTile with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getFailedText":{"!description":"Gets current value of property <code>failedText<\/code>.\n\nThe message that appears when the control is in the Failed state.","!static":false,"!category":"function","!type":"fn() -> String"},"setIcon":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.36.0 This aggregation is deprecated, use sap.m.TileContent control to display an icon instead.<br>Sets the aggregated <code>icon<\/code>.","!static":false,"!category":"function","!type":"fn(oIcon: sap.ui.core.Control) -> sap.m.GenericTile","parameters":{"oIcon":"type: sap.ui.core.Control, description: The icon to set"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.m.GenericTile<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.GenericTile","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.GenericTile","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getSize":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38.0 The GenericTile control has now a fixed size, depending on the used media (desktop, tablet or phone).<br>Gets current value of property <code>size<\/code>.\n\nThe size of the tile. If not set, then the default size is applied based on the device.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Size"},"getState":{"!description":"Gets current value of property <code>state<\/code>.\n\nThe load status.\n\nDefault value is <code>Loaded<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.LoadState"},"unbindTileContent":{"!description":"Unbinds aggregation <code>tileContent<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.GenericTile"},"!module":"sap/m/GenericTile","!helpDescription":"Displays the title, description, and a customizable main area.","indexOfTileContent":{"!description":"Checks for the provided <code>sap.m.TileContent<\/code> in the aggregation <code>tileContent<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oTileContent: sap.m.TileContent) -> Number","parameters":{"oTileContent":"type: sap.m.TileContent, description: The tileContent whose index is looked for"}},"setState":{"!description":"Sets a new value for property <code>state<\/code>.\n\nThe load status.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Loaded<\/code>.","!static":false,"!category":"function","!type":"fn(sState: sap.m.LoadState) -> sap.m.GenericTile","parameters":{"sState":"type: sap.m.LoadState, description: New value for property <code>state<\/code>"}},"getBackgroundImage":{"!description":"Gets current value of property <code>backgroundImage<\/code>.\n\nThe URI of the background image.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getFrameType":{"!description":"Gets current value of property <code>frameType<\/code>.\n\nThe frame type: 1x1 or 2x1.\n\nDefault value is <code>OneByOne<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.FrameType"},"setFrameType":{"!description":"Sets a new value for property <code>frameType<\/code>.\n\nThe frame type: 1x1 or 2x1.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>OneByOne<\/code>.","!static":false,"!category":"function","!type":"fn(sFrameType: sap.m.FrameType) -> sap.m.GenericTile","parameters":{"sFrameType":"type: sap.m.FrameType, description: New value for property <code>frameType<\/code>"}},"getSubheader":{"!description":"Gets current value of property <code>subheader<\/code>.\n\nThe subheader of the tile.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.m.IconTabHeader":{"!description":"This control displays a number of IconTabFilters and IconTabSeparators. If the available horizontal\nspace is exceeded, a horizontal scrolling appears.","setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nSpecifies whether the control is rendered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.m.IconTabHeader","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.m.IconTab) -> sap.m.IconTab","parameters":{"vItem":"type: int|string|sap.m.IconTab, description: The itemto remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.IconTabHeader.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setSelectedKey":{"!description":"Sets the selected item based on key.","!static":false,"!category":"function","!type":"fn(sKey: String) -> sap.m.IconTabHeader","parameters":{"sKey":"type: string, description: The key of the item to be selected"}},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nSpecifies whether the control is rendered.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>item<\/code> of type <code>sap.m.IconTabFilter<\/code>The selected item<\/li>\n<li><code>key<\/code> of type <code>string<\/code>The key of the selected item<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.IconTabHeader","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.m.IconTabHeader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.IconTabHeader<\/code> itself.\n\nFires when an item is selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.IconTabHeader","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.IconTabHeader<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getShowSelection":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.0 Regarding to changes of this control this property is not needed anymore.<br>Gets current value of property <code>showSelection<\/code>.\n\nDefines whether the current selection is visualized.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.IconTabHeader"},"!category":"class","removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.IconTab]"},"extend":{"!description":"Creates a new subclass of class sap.m.IconTabHeader with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.IconTab) -> sap.m.IconTabHeader","parameters":{"oItem":"type: sap.m.IconTab, description: the item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nThe items displayed in the IconTabHeader.","!static":false,"!category":"function","!type":"fn() -> [sap.m.IconTab]"},"!constructorDescription":"Constructor for a new IconTabHeader.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowSelection showSelection} : boolean (default: true)<\/li>\n<li>{@link #getSelectedKey selectedKey} : string<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.IconTab[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/m/IconTabHeader","getSelectedKey":{"!description":"Gets current value of property <code>selectedKey<\/code>.\n\nKey of the selected item.\n\nIf the key has no corresponding aggregated item, no changes will apply.\nIf duplicate keys exists the first item matching, the key is used.","!static":false,"!category":"function","!type":"fn() -> String"},"indexOfItem":{"!description":"Checks for the provided <code>sap.m.IconTab<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.IconTab) -> Number","parameters":{"oItem":"type: sap.m.IconTab, description: The item whose index is looked for"}},"!helpDescription":"This control displays a number of IconTabFilters and IconTabSeparators. If the available horizontal\nspace is exceeded, a horizontal scrolling appears.","setShowSelection":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.0 Regarding to changes of this control this property is not needed anymore.<br>Sets a new value for property <code>showSelection<\/code>.\n\nDefines whether the current selection is visualized.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSelection: Boolean) -> sap.m.IconTabHeader","parameters":{"bShowSelection":"type: boolean, description: New value for property <code>showSelection<\/code>"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.m.IconTabHeader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.IconTabHeader","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.IconTab, iIndex: Number) -> sap.m.IconTabHeader","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position","oItem":"type: sap.m.IconTab, description: the item to insert; if empty, nothing is inserted"}}},"sap.m.FeedInput":{"getPlaceholder":{"!description":"Gets current value of property <code>placeholder<\/code>.\n\nThe placeholder text shown in the input area as long as the user has not entered any text value.\n\nDefault value is <code>Post something here<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setShowIcon":{"!description":"Sets a new value for property <code>showIcon<\/code>.\n\nIf set to \"true\" (default), icons will be displayed. In case no icon is provided the standard placeholder will be displayed. if set to \"false\" icons are hidden\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowIcon: Boolean) -> sap.m.FeedInput","parameters":{"bShowIcon":"type: boolean, description: New value for property <code>showIcon<\/code>"}},"setButtonTooltip":{"!description":"Sets a new value for property <code>buttonTooltip<\/code>.\n\nSets a new tooltip for Submit button. The tooltip can either be a simple string (which in most cases will be rendered as the title attribute of this element)\nor an instance of sap.ui.core.TooltipBase.\nIf a new tooltip is set, any previously set tooltip is deactivated.\nThe default value is set language dependent.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Submit<\/code>.","!static":false,"!category":"function","!type":"fn(sButtonTooltip: sap.ui.core.TooltipBase) -> sap.m.FeedInput","parameters":{"sButtonTooltip":"type: sap.ui.core.TooltipBase, description: New value for property <code>buttonTooltip<\/code>"}},"!proto":"sap.ui.core.Control","!category":"class","getIconDensityAware":{"!description":"Gets current value of property <code>iconDensityAware<\/code>.\n\nSome mobile devices support higher resolution images while others do not. Therefore, you should provide image resources for all relevant densities.\nIf the property is set to \"true\", one or more requests are sent to the server to try and get the perfect density version of an image. If an image of a certain density is not available, the image control falls back to the default image, which should be provided.\n\nIf you do not have higher resolution images, you should set the property to \"false\" to avoid unnecessary round-trips.\n\nPlease be aware that this property is relevant only for images and not for icons.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new FeedInput.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getMaxLength maxLength} : int (default: 0)<\/li>\n<li>{@link #getPlaceholder placeholder} : string (default: Post something here)<\/li>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getShowIcon showIcon} : boolean (default: true)<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getButtonTooltip buttonTooltip} : sap.ui.core.TooltipBase (default: Submit)<\/li>\n<li>{@link #getAriaLabelForPicture ariaLabelForPicture} : string<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:post post} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setIconDensityAware":{"!description":"Sets a new value for property <code>iconDensityAware<\/code>.\n\nSome mobile devices support higher resolution images while others do not. Therefore, you should provide image resources for all relevant densities.\nIf the property is set to \"true\", one or more requests are sent to the server to try and get the perfect density version of an image. If an image of a certain density is not available, the image control falls back to the default image, which should be provided.\n\nIf you do not have higher resolution images, you should set the property to \"false\" to avoid unnecessary round-trips.\n\nPlease be aware that this property is relevant only for images and not for icons.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bIconDensityAware: Boolean) -> sap.m.FeedInput","parameters":{"bIconDensityAware":"type: boolean, description: New value for property <code>iconDensityAware<\/code>"}},"firePost":{"!description":"Fires event <code>post<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value<\/code> of type <code>string<\/code>The value of the feed input before reseting it.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.FeedInput","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setPlaceholder":{"!description":"Sets a new value for property <code>placeholder<\/code>.\n\nThe placeholder text shown in the input area as long as the user has not entered any text value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Post something here<\/code>.","!static":false,"!category":"function","!type":"fn(sPlaceholder: String) -> sap.m.FeedInput","parameters":{"sPlaceholder":"type: string, description: New value for property <code>placeholder<\/code>"}},"detachPost":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>post<\/code> event of this <code>sap.m.FeedInput<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.FeedInput","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getAriaLabelForPicture":{"!description":"Gets current value of property <code>ariaLabelForPicture<\/code>.\n\nText for Picture which will be read by screenreader.\nIf a new ariaLabelForPicture is set, any previously set ariaLabelForPicture is deactivated.","!static":false,"!category":"function","!type":"fn() -> String"},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nSet this flag to \"false\" to disable both text input and post button.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setAriaLabelForPicture":{"!description":"Sets a new value for property <code>ariaLabelForPicture<\/code>.\n\nText for Picture which will be read by screenreader.\nIf a new ariaLabelForPicture is set, any previously set ariaLabelForPicture is deactivated.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAriaLabelForPicture: String) -> sap.m.FeedInput","parameters":{"sAriaLabelForPicture":"type: string, description: New value for property <code>ariaLabelForPicture<\/code>"}},"!description":"The Feed Input allows the user to enter text for a new feed entry and then post it.","getMetadata":{"!description":"Returns a metadata object for class sap.m.FeedInput.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getButtonTooltip":{"!description":"Gets current value of property <code>buttonTooltip<\/code>.\n\nSets a new tooltip for Submit button. The tooltip can either be a simple string (which in most cases will be rendered as the title attribute of this element)\nor an instance of sap.ui.core.TooltipBase.\nIf a new tooltip is set, any previously set tooltip is deactivated.\nThe default value is set language dependent.\n\nDefault value is <code>Submit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TooltipBase"},"attachPost":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>post<\/code> event of this <code>sap.m.FeedInput<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.FeedInput<\/code> itself.\n\nThe Post event is triggered when the user has entered a value and pressed the post button. After firing this event, the value is reset.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.FeedInput","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.FeedInput<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nIcon to be displayed as a graphical element within the feed input. This can be an image or an icon from the icon font.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getShowIcon":{"!description":"Gets current value of property <code>showIcon<\/code>.\n\nIf set to \"true\" (default), icons will be displayed. In case no icon is provided the standard placeholder will be displayed. if set to \"false\" icons are hidden\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.m.FeedInput with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nIcon to be displayed as a graphical element within the feed input. This can be an image or an icon from the icon font.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.m.FeedInput","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nThe text value of the feed input. As long as the user has not entered any text the post button is disabled","!static":false,"!category":"function","!type":"fn() -> String"},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nSet this flag to \"false\" to disable both text input and post button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.m.FeedInput","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/m/FeedInput","!helpDescription":"The Feed Input allows the user to enter text for a new feed entry and then post it.","getMaxLength":{"!description":"Gets current value of property <code>maxLength<\/code>.\n\nThe maximum length (the maximum number of characters) for the feed input's value. By default this is not limited.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setValue":{"!description":"Sets a new value for property <code>value<\/code>.\n\nThe text value of the feed input. As long as the user has not entered any text the post button is disabled\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.m.FeedInput","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"setMaxLength":{"!description":"Sets a new value for property <code>maxLength<\/code>.\n\nThe maximum length (the maximum number of characters) for the feed input's value. By default this is not limited.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iMaxLength: Number) -> sap.m.FeedInput","parameters":{"iMaxLength":"type: int, description: New value for property <code>maxLength<\/code>"}}},"sap.m.semantic.SendEmailAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.SendEmailAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.SendEmailAction"},"sap.m.GroupHeaderListItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.GroupHeaderListItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.GroupHeaderListItem"},"sap.m.FacetFilterItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.FacetFilterItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.FacetFilterItem"},"sap.m.FormattedText":{"!description":"The FormattedText control allows the usage of a limited set of tags for inline display of formatted text in HTML format.","getMetadata":{"!description":"Returns a metadata object for class sap.m.FormattedText.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setHtmlText":{"!description":"Defines the HTML text to be displayed.","!static":false,"!category":"function","!type":"fn(sText: String)","parameters":{"sText":"type: string, description: HTML text as a string"}},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nOptional width of the control in CSS units.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nOptional height of the control in CSS units.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.m.FormattedText","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nOptional width of the control in CSS units.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.FormattedText","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getHtmlText":{"!description":"Gets current value of property <code>htmlText<\/code>.\n\nText in HTML format.\nThe following tags are supported:\n<ul>\n\t<li><code>a<\/code><\/li>\n\t<li><code>abbr<\/code><\/li>\n\t<li><code>blockquote<\/code><\/li>\n\t<li><code>br<\/code><\/li>\n\t<li><code>cite<\/code><\/li>\n\t<li><code>code<\/code><\/li>\n\t<li><code>em<\/code><\/li>\n\t<li><code>h1<\/code><\/li>\n\t<li><code>h2<\/code><\/li>\n\t<li><code>h3<\/code><\/li>\n\t<li><code>h4<\/code><\/li>\n\t<li><code>h5<\/code><\/li>\n\t<li><code>h6<\/code><\/li>\n\t<li><code>p<\/code><\/li>\n\t<li><code>pre<\/code><\/li>\n\t<li><code>strong<\/code><\/li>\n\t<li><code>span<\/code><\/li>\n\t<li><code>u<\/code><\/li>\n\t<li><code>dl<\/code><\/li>\n\t<li><code>dt<\/code><\/li>\n\t<li><code>dl<\/code><\/li>\n\t<li><code>ul<\/code><\/li>\n\t<li><code>ol<\/code><\/li>\n\t<li><code>li<\/code><\/li>\n<\/ul>\n<p><code>class, style,<\/code> and <code>target<\/code> attributes are allowed.\nIf <code>target<\/code> is not set, links open in a new window by default.\n<p>Only safe <code>href<\/code> attributes can be used. See {@link jQuery.sap.validateUrl}.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.m.FormattedText with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nOptional height of the control in CSS units.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new FormattedText.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHtmlText htmlText} : string (default: )<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/m/FormattedText","!helpDescription":"The FormattedText control allows the usage of a limited set of tags for inline display of formatted text in HTML format."},"sap.m.ObjectMarkerVisibility":{"!description":"Predefined visibility for ObjectMarker.","!module":"sap/m/library","IconAndText":{"!description":"Shows icon and text","!category":"enum","!type":"String"},"IconOnly":{"!description":"Shows only icon","!category":"enum","!type":"String"},"!category":"static class","TextOnly":{"!description":"Shows only text","!category":"enum","!type":"String"}},"sap.m.ActionSheet_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ActionSheet with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ActionSheet"},"sap.m.UploadCollection_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.UploadCollection with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.UploadCollection"},"sap.m.StandardTileType":{"!description":"Types for StandardTile","Monitor":{"!description":"Monitor tile","!category":"enum","!type":"String"},"!module":"sap/m/library","Create":{"!description":"Tile representing that something needs to be created","!category":"enum","!type":"String"},"!category":"static class","None":{"!description":"Default type","!category":"enum","!type":"String"}},"sap.m.ComboBoxBase":{"removeItem":{"!description":"Removes an item from the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.core.Item) -> sap.ui.core.Item","parameters":{"vItem":"type: int|string|sap.ui.core.Item, description: The item to remove or its index or ID."}},"setPickerType":{"!description":"Sets the property <code>_sPickerType<\/code>.","!static":false,"!category":"function","!type":"fn(sPickerType: String)","parameters":{"sPickerType":"type: string, description: undefined"}},"!proto":"sap.m.ComboBoxTextField","destroyItems":{"!description":"Destroys all the items in the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ComboBox"},"getItemByKey":{"!description":"Gets the item with the given key from the aggregation named <code>items<\/code>.\n\n<b>Note:<\/b> If duplicate keys exist, the first item matching the key is returned.","!static":false,"!category":"function","!type":"fn(sKey: String) -> sap.ui.core.Item","parameters":{"sKey":"type: string, description: An item key that specifies the item to retrieve."}},"!category":"class","getItemAt":{"!description":"Gets the item from the aggregation named <code>items<\/code> at the given 0-based index.","!static":false,"!category":"function","!type":"fn(iIndex: Number) -> sap.ui.core.Item","parameters":{"iIndex":"type: int, description: Index of the item to return."}},"addItem":{"!description":"Adds an item to the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item) -> sap.m.ComboBoxBase","parameters":{"oItem":"type: sap.ui.core.Item, description: The item to be added; if empty, nothing is added."}},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nDefines the items contained within this control.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"attachLoadItems":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>loadItems<\/code> event of this <code>sap.m.ComboBoxBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ComboBoxBase<\/code> itself.\n\nThis event is fired when the end user moves the cursor to the text field, performs\nan action that requires items to be loaded, and items are not already loaded. For example,\npressing F4 to open the dropdown list or typing something in the text field fires the event.\n\n<b>Note:<\/b> We strongly recommend to only use this feature in performance critical scenarios.\nLoading the items lazily (on demand) to defer initialization has several implications for the end user\nexperience. For example, the busy indicator has to be shown while the items are being loaded and\nassistive technology software also has to announce the state changes (which may be confusing\nfor some screen reader users).\n\n<b>Note<\/b>: Currently the <code>sap.m.MultiComboBox<\/code> does not support this event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ComboBoxBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ComboBoxBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!constructorDescription":"Constructor for a new <code>sap.m.ComboBoxBase<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Item[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:loadItems loadItems} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ComboBoxTextField#constructor sap.m.ComboBoxTextField}\ncan be used as well.","getPickerType":{"!description":"Gets the property <code>_sPickerType<\/code>","!static":false,"!category":"function","!type":"fn() -> String"},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item) -> Number","parameters":{"oItem":"type: sap.ui.core.Item, description: The item whose index is looked for"}},"fireLoadItems":{"!description":"Fires event <code>loadItems<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ComboBoxBase","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getList":{"!description":"Gets the <code>list<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.SelectList"},"clearSelection":{"!description":"Clears the selection.\nTo be overwritten by subclasses.","!static":false,"!category":"function","!type":"fn()"},"bindItems":{"!description":"Binds aggregation <code>items<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.ComboBoxBase","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"detachLoadItems":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>loadItems<\/code> event of this <code>sap.m.ComboBoxBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ComboBoxBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"close":{"!description":"Closes the control's picker popup.","!static":false,"!category":"function","!type":"fn() -> sap.m.ComboBoxBase"},"!description":"An abstract class for combo boxes.","getMetadata":{"!description":"Returns a metadata object for class sap.m.ComboBoxBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"createPicker":{"!description":"Creates a picker popup container where the selection should take place.\nTo be overwritten by subclasses.","!static":false,"!category":"function","!type":"fn(sPickerType: String) -> sap.m.Popover | sap.m.Dialog","parameters":{"sPickerType":"type: string, description: undefined"}},"unbindItems":{"!description":"Unbinds aggregation <code>items<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.ComboBoxBase"},"getLastItem":{"!description":"Gets the last item from the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Item"},"getPicker":{"!description":"Gets the control's picker popup.","!static":false,"!category":"function","!type":"fn() -> sap.m.Dialog | sap.m.Popover | null"},"removeAllItems":{"!description":"Removes all the controls in the aggregation named <code>items<\/code>.\nAdditionally unregisters them from the hosting UIArea and clears the selection.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"extend":{"!description":"Creates a new subclass of class sap.m.ComboBoxBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ComboBoxTextField.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getEnabledItems":{"!description":"Gets the enabled items from the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(aItems?: [sap.ui.core.Item]) -> [sap.ui.core.Item]","parameters":{"aItems":"type: sap.ui.core.Item[], description: Items to filter."}},"isOpen":{"!description":"Indicates whether the control's picker popup is open.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/m/ComboBoxBase","!helpDescription":"An abstract class for combo boxes.","getFirstItem":{"!description":"Gets the first item from the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Item"},"insertItem":{"!description":"Inserts an item into the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item, iIndex: Number) -> sap.m.ComboBoxBase","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for\n            a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n            greater than the current size of the aggregation, the item is inserted at the last position.","oItem":"type: sap.ui.core.Item, description: The item to be inserted; if empty, nothing is inserted."}},"open":{"!description":"Opens the control's picker popup.","!static":false,"!category":"function","!type":"fn() -> sap.m.ComboBoxBase"}},"sap.m.MessagePopover_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.MessagePopover with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.MessagePopover"},"sap.m.semantic.MessagesIndicator_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.MessagesIndicator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.MessagesIndicator"},"sap.m.Column_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.Column with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.Column"},"sap.m.Dialog_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.Dialog with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.Dialog"},"sap.m.semantic.MultiSelectAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.MultiSelectAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticToggleButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.MultiSelectAction"},"sap.m.CustomTile":{"!description":"Use the CustomTile control to display application specific content in the Tile control.\nThe tile width is 8.5em and height is 10em.","extend":{"!description":"Creates a new subclass of class sap.m.CustomTile with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Tile.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.CustomTile.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setContent":{"!description":"Sets the aggregated <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.m.CustomTile","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"}},"!constructorDescription":"Constructor for a new CustomTile.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Tile#constructor sap.m.Tile}\ncan be used as well.","!module":"sap/m/CustomTile","!helpDescription":"Use the CustomTile control to display application specific content in the Tile control.\nThe tile width is 8.5em and height is 10em.","getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nDefines the content of the CustomTile.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!proto":"sap.m.Tile","!category":"class","destroyContent":{"!description":"Destroys the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.CustomTile"}},"sap.m.StandardListItem":{"setInfoState":{"!description":"Sets a new value for property <code>infoState<\/code>.\n\nDefines the state of the information text, e.g. <code>Error<\/code>, <code>Warning<\/code>, <code>Success<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sInfoState: sap.ui.core.ValueState) -> sap.m.StandardListItem","parameters":{"sInfoState":"type: sap.ui.core.ValueState, description: New value for property <code>infoState<\/code>"}},"setTitleTextDirection":{"!description":"Sets a new value for property <code>titleTextDirection<\/code>.\n\nDefines the <code>title<\/code> text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTitleTextDirection: sap.ui.core.TextDirection) -> sap.m.StandardListItem","parameters":{"sTitleTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>titleTextDirection<\/code>"}},"!proto":"sap.m.ListItemBase","getInfoTextDirection":{"!description":"Gets current value of property <code>infoTextDirection<\/code>.\n\nDefines the <code>info<\/code> directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"!category":"class","setIconInset":{"!description":"Sets a new value for property <code>iconInset<\/code>.\n\nDefines the indentation of the icon. If set to <code>false<\/code>, the icon will not be shown as embedded. Instead it will take the full height of the list item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bIconInset: Boolean) -> sap.m.StandardListItem","parameters":{"bIconInset":"type: boolean, description: New value for property <code>iconInset<\/code>"}},"setDescription":{"!description":"Sets a new value for property <code>description<\/code>.\n\nDefines the additional information for the title.\n<b>Note:<\/b> This is only visible when the <code>title<\/code> property is not empty.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDescription: String) -> sap.m.StandardListItem","parameters":{"sDescription":"type: string, description: New value for property <code>description<\/code>"}},"getDescription":{"!description":"Gets current value of property <code>description<\/code>.\n\nDefines the additional information for the title.\n<b>Note:<\/b> This is only visible when the <code>title<\/code> property is not empty.","!static":false,"!category":"function","!type":"fn() -> String"},"getIconDensityAware":{"!description":"Gets current value of property <code>iconDensityAware<\/code>.\n\nBy default, one or more requests are sent to get the density perfect version of the icon if the given version of the icon doesn't exist on the server.\n<b>Note:<b> If bandwidth is a key factor for the application, set this value to <code>false<\/code>.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new StandardListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getDescription description} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconInset iconInset} : boolean (default: true)<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getActiveIcon activeIcon} : sap.ui.core.URI<\/li>\n<li>{@link #getInfo info} : string<\/li>\n<li>{@link #getInfoState infoState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getAdaptTitleSize adaptTitleSize} : boolean (default: true)<\/li>\n<li>{@link #getTitleTextDirection titleTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getInfoTextDirection infoTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well.","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nDefines the title of the list item.","!static":false,"!category":"function","!type":"fn() -> String"},"setIconDensityAware":{"!description":"Sets a new value for property <code>iconDensityAware<\/code>.\n\nBy default, one or more requests are sent to get the density perfect version of the icon if the given version of the icon doesn't exist on the server.\n<b>Note:<b> If bandwidth is a key factor for the application, set this value to <code>false<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bIconDensityAware: Boolean) -> sap.m.StandardListItem","parameters":{"bIconDensityAware":"type: boolean, description: New value for property <code>iconDensityAware<\/code>"}},"setActiveIcon":{"!description":"Sets a new value for property <code>activeIcon<\/code>.\n\nDefines the icon that is shown while the list item is pressed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sActiveIcon: sap.ui.core.URI) -> sap.m.StandardListItem","parameters":{"sActiveIcon":"type: sap.ui.core.URI, description: New value for property <code>activeIcon<\/code>"}},"getActiveIcon":{"!description":"Gets current value of property <code>activeIcon<\/code>.\n\nDefines the icon that is shown while the list item is pressed.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"setInfoTextDirection":{"!description":"Sets a new value for property <code>infoTextDirection<\/code>.\n\nDefines the <code>info<\/code> directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sInfoTextDirection: sap.ui.core.TextDirection) -> sap.m.StandardListItem","parameters":{"sInfoTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>infoTextDirection<\/code>"}},"!description":"<code>sap.m.StandardListItem<\/code> is a list item providing the most common use cases, e.g. image, title and description.","getInfoState":{"!description":"Gets current value of property <code>infoState<\/code>.\n\nDefines the state of the information text, e.g. <code>Error<\/code>, <code>Warning<\/code>, <code>Success<\/code>.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.StandardListItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getInfo":{"!description":"Gets current value of property <code>info<\/code>.\n\nDefines an additional information text.","!static":false,"!category":"function","!type":"fn() -> String"},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nDefines the title of the list item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.StandardListItem","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nDefines the list item icon.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"extend":{"!description":"Creates a new subclass of class sap.m.StandardListItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nDefines the list item icon.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.m.StandardListItem","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"!module":"sap/m/StandardListItem","getAdaptTitleSize":{"!description":"Gets current value of property <code>adaptTitleSize<\/code>.\n\nBy default, the title size adapts to the available space and gets bigger if the description is empty. If you have list items with and without descriptions, this results in titles with different sizes. In this case, it can be better to switch the size adaption off by setting this property to <code>false<\/code>.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!helpDescription":"<code>sap.m.StandardListItem<\/code> is a list item providing the most common use cases, e.g. image, title and description.","setAdaptTitleSize":{"!description":"Sets a new value for property <code>adaptTitleSize<\/code>.\n\nBy default, the title size adapts to the available space and gets bigger if the description is empty. If you have list items with and without descriptions, this results in titles with different sizes. In this case, it can be better to switch the size adaption off by setting this property to <code>false<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bAdaptTitleSize: Boolean) -> sap.m.StandardListItem","parameters":{"bAdaptTitleSize":"type: boolean, description: New value for property <code>adaptTitleSize<\/code>"}},"getIconInset":{"!description":"Gets current value of property <code>iconInset<\/code>.\n\nDefines the indentation of the icon. If set to <code>false<\/code>, the icon will not be shown as embedded. Instead it will take the full height of the list item.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setInfo":{"!description":"Sets a new value for property <code>info<\/code>.\n\nDefines an additional information text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sInfo: String) -> sap.m.StandardListItem","parameters":{"sInfo":"type: string, description: New value for property <code>info<\/code>"}},"getTitleTextDirection":{"!description":"Gets current value of property <code>titleTextDirection<\/code>.\n\nDefines the <code>title<\/code> text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"}},"sap.m.Token_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.Token with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.Token"},"sap.m.QuickViewBase":{"!description":"QuickViewBase class provides base functionality for QuickView and QuickViewCard.\nDo not use it directly.","detachAfterNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterNavigate<\/code> event of this <code>sap.m.QuickViewBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.QuickViewBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"destroyPages":{"!description":"Destroys all the pages in the aggregation <code>pages<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.QuickViewBase"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.QuickViewBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"navigateBack":{"!description":"Navigates to the previous page if there is such.","!static":false,"!category":"function","!type":"fn()"},"unbindPages":{"!description":"Unbinds aggregation <code>pages<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.QuickViewBase"},"!proto":"sap.ui.core.Control","!category":"class","removePage":{"!description":"Removes a page from the aggregation <code>pages<\/code>.","!static":false,"!category":"function","!type":"fn(vPage: Number | String | sap.m.QuickViewPage) -> sap.m.QuickViewPage","parameters":{"vPage":"type: int|string|sap.m.QuickViewPage, description: The pageto remove or its index or id"}},"removeAllPages":{"!description":"Removes all the controls from the aggregation <code>pages<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.QuickViewPage]"},"attachAfterNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterNavigate<\/code> event of this <code>sap.m.QuickViewBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.QuickViewBase<\/code> itself.\n\nThe event is fired when navigation between two pages has completed.\nIn case of animated transitions this event is fired with some delay\nafter the \"navigate\" event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.QuickViewBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.QuickViewBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"extend":{"!description":"Creates a new subclass of class sap.m.QuickViewBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"fireNavigate":{"!description":"Fires event <code>navigate<\/code> to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.\n\nExpects the following event parameters:\n<ul>\n<li><code>from<\/code> of type <code>sap.ui.core.Control<\/code>The page which was displayed before the current navigation.<\/li>\n<li><code>fromId<\/code> of type <code>string<\/code>The ID of the page which was displayed before the current navigation.<\/li>\n<li><code>to<\/code> of type <code>sap.ui.core.Control<\/code>The page which will be displayed after the current navigation.<\/li>\n<li><code>toId<\/code> of type <code>string<\/code>The ID of the page which will be displayed after the current navigation.<\/li>\n<li><code>firstTime<\/code> of type <code>boolean<\/code>Determines whether the \"to\" page (a control with the ID of the page\nwhich is currently navigated to) has not been displayed/navigated to before.<\/li>\n<li><code>isTo<\/code> of type <code>boolean<\/code>Determines whether this is a forward navigation.<\/li>\n<li><code>isBack<\/code> of type <code>boolean<\/code>Determines whether this is a back navigation.<\/li>\n<li><code>isBackToTop<\/code> of type <code>boolean<\/code>Determines  whether this is a navigation to the root page.<\/li>\n<li><code>isBackToPage<\/code> of type <code>boolean<\/code>Determines whether this was a navigation to a specific page.<\/li>\n<li><code>direction<\/code> of type <code>string<\/code>Determines how the navigation was triggered, possible values are\n\"to\", \"back\", \"backToPage\", and \"backToTop\".<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> Boolean","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!constructorDescription":"Constructor for a new QuickViewBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getPages pages} : sap.m.QuickViewPage[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:navigate navigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterNavigate afterNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","bindPages":{"!description":"Binds aggregation <code>pages<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.QuickViewBase","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"fireAfterNavigate":{"!description":"Fires event <code>afterNavigate<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>from<\/code> of type <code>sap.ui.core.Control<\/code>Determines the page, which has been displayed before navigation.<\/li>\n<li><code>fromId<\/code> of type <code>string<\/code>Determines the ID of the page, which has been displayed before navigation.<\/li>\n<li><code>to<\/code> of type <code>sap.ui.core.Control<\/code>Determines the page, which is now displayed after navigation.<\/li>\n<li><code>toId<\/code> of type <code>string<\/code>Determines the ID of the page, which is now displayed after navigation.<\/li>\n<li><code>firstTime<\/code> of type <code>boolean<\/code>Determines whether the \"to\" page (a control with the ID of the page, which has been navigated to) has not been displayed/navigated to before.<\/li>\n<li><code>isTo<\/code> of type <code>boolean<\/code>Determines whether this was a forward navigation.<\/li>\n<li><code>isBack<\/code> of type <code>boolean<\/code>Determines whether this was a back navigation.<\/li>\n<li><code>isBackToTop<\/code> of type <code>boolean<\/code>Determines whether this was a navigation to the root page.<\/li>\n<li><code>isBackToPage<\/code> of type <code>boolean<\/code>Determines whether this was a navigation to a specific page.<\/li>\n<li><code>direction<\/code> of type <code>string<\/code>Determines  how the navigation was triggered, possible values are\n\"to\", \"back\", \"backToPage\", and \"backToTop\".<\/li>\n<li><code>isTopPage<\/code> of type <code>boolean<\/code>Determines whether this is a navigation to the top page.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.QuickViewBase","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"indexOfPage":{"!description":"Checks for the provided <code>sap.m.QuickViewPage<\/code> in the aggregation <code>pages<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oPage: sap.m.QuickViewPage) -> Number","parameters":{"oPage":"type: sap.m.QuickViewPage, description: The page whose index is looked for"}},"!module":"sap/m/QuickViewBase","!helpDescription":"QuickViewBase class provides base functionality for QuickView and QuickViewCard.\nDo not use it directly.","addPage":{"!description":"Adds some page to the aggregation <code>pages<\/code>.","!static":false,"!category":"function","!type":"fn(oPage: sap.m.QuickViewPage) -> sap.m.QuickViewBase","parameters":{"oPage":"type: sap.m.QuickViewPage, description: the page to add; if empty, nothing is inserted"}},"attachNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>navigate<\/code> event of this <code>sap.m.QuickViewBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.QuickViewBase<\/code> itself.\n\nThe event is fired when navigation between two pages has been triggered.\nThe transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(),\nwhich means that there will be no navigation.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.QuickViewBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.QuickViewBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getPages":{"!description":"Gets content of aggregation <code>pages<\/code>.\n\nDisplays a page header, object icon or image, object name with short description,\nand object information divided in groups","!static":false,"!category":"function","!type":"fn() -> [sap.m.QuickViewPage]"},"insertPage":{"!description":"Inserts a page into the aggregation <code>pages<\/code>.","!static":false,"!category":"function","!type":"fn(oPage: sap.m.QuickViewPage, iIndex: Number) -> sap.m.QuickViewBase","parameters":{"oPage":"type: sap.m.QuickViewPage, description: the page to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the page should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the page is inserted at position 0; for a value\n             greater than the current size of the aggregation, the page is inserted at\n             the last position"}},"detachNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>navigate<\/code> event of this <code>sap.m.QuickViewBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.QuickViewBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}}},"sap.m.semantic.FilterAction":{"!description":"A FilterAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","extend":{"!description":"Creates a new subclass of class sap.m.semantic.FilterAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.FilterAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new FilterAction.","!module":"sap/m/semantic/FilterAction","!helpDescription":"A FilterAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","!proto":"sap.m.semantic.SemanticButton","!category":"class"},"sap.m.semantic.SaveAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.SaveAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.SaveAction"},"sap.m.FeedContent_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.FeedContent with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.FeedContent"},"sap.m.PlanningCalendar_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.PlanningCalendar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sID?: String, mSettings: Object)","prototype":"sap.m.PlanningCalendar"},"sap.m.SplitApp_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.SplitApp with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.SplitContainer.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.SplitApp"},"sap.m.routing.TargetHandler":{"extend":{"!description":"Creates a new subclass of class sap.m.routing.TargetHandler with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setCloseDialogs":{"!description":"Sets if a navigation should close dialogs","!static":false,"!category":"function","!type":"fn(bCloseDialogs: Boolean) -> sap.m.routing.TargetHandler","parameters":{"bCloseDialogs":"type: boolean, description: close dialogs if true"}},"getCloseDialogs":{"!description":"Gets if a navigation should close dialogs","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.routing.TargetHandler.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Instantiates a TargetHandler, a class used for closing dialogs and showing transitions in NavContainers when targets are displayed.<br/>\n<b>You should not create an own instance of this class.<\/b> It will be created when using {@link sap.m.routing.Router} or {@link sap.m.routing.Targets}.\nYou may use the {@link #setCloseDialogs} function to specify if dialogs should be closed on displaying other views.","!module":"sap/m/routing/TargetHandler","!proto":"sap.ui.base.Object","!category":"class"},"sap.m.CustomListItem":{"!description":"This control with a content aggregation can be used to customize standard list items that we don't provide. List mode and ListItem type are applied to CustomListItems as well.\n<b>Note:<\/b> Even though the content aggregation allows any control, complex responsive layout controls (e.g. <code>Table, Form<\/code>) should not be aggregated as content.","getMetadata":{"!description":"Returns a metadata object for class sap.m.CustomListItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"bindContent":{"!description":"Binds aggregation <code>content<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.CustomListItem","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nThe content of this list item","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.m.ListItemBase","removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!category":"class","addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.m.CustomListItem","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"unbindContent":{"!description":"Unbinds aggregation <code>content<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.CustomListItem"},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.m.CustomListItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new CustomListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well.","!module":"sap/m/CustomListItem","!helpDescription":"This control with a content aggregation can be used to customize standard list items that we don't provide. List mode and ListItem type are applied to CustomListItems as well.\n<b>Note:<\/b> Even though the content aggregation allows any control, complex responsive layout controls (e.g. <code>Table, Form<\/code>) should not be aggregated as content.","insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.m.CustomListItem","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.CustomListItem"}},"sap.m.routing.RouteMatchedHandler":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28 use {@link sap.m.routing.Router} or {@link sap.m.routing.Targets} instead. The functionality of the routematched handler is built in into these two classes, there is no need to create this anymore.<br>This class will attach to the Events of a provided router and add the views created by it to a  {@link sap.m.SplitContainer} or a {@link sap.m.NavContainer} Control, if this is the target control of the route.<\/br>\nIf the targetControl is no {@link sap.m.SplitContainer} or a {@link sap.m.NavContainer}, It will only close the dialogs, according to the property value.<\/br>\n<\/br>\nWhen a navigation is triggered, this class will try to determine the transition of the pages based on the history.<\/br>\nEg: if a user presses browser back, it will show a backwards animation.<\/br>\n<\/br>\nThe navigation on the container takes place in the RoutePatternMatched event of the Router. If you register on the RouteMatched event of the Router, the visual navigation did not take place yet.<\/br>\n<\/br>\nSince it is hard to detect if a user has pressed browser back, this transitions will not be reliable, for example if someone bookmarked a detail page, and wants to navigate to a masterPage.<\/br>\nIf you want this case to always show a backwards transition, you should specify a \"viewLevel\" property on your Route.<\/br>\nThe viewLevel has to be an integer. The Master should have a lower number than the detail.<\/br>\nThese levels should represent the user process of your application and they do not have to match the container structure of your Routes.<\/br>\nIf the user navigates between views with the same viewLevel, the history is asked for the direction.<\/br>\n<\/br>\nYou can specify a property \"transition\" in a route to define which transition will be applied when navigating. If it is not defined, the nav container will take its default transition.\n<\/br>\nYou can also specify \"transitionParameters\" on a Route, to give the transition parameters.<\/br>\n<\/br>\npreservePageInSplitContainer is deprecated since 1.28 since Targets make this parameter obsolete.\nIf you want to preserve the current view when navigating, but you want to navigate to it when nothing is displayed in the navContainer, you can set preservePageInSplitContainer = true<\/br>\nWhen the route that has this flag directly matches the pattern, the view will still be switched by the splitContainer.\n<\/br>","extend":{"!description":"Creates a new subclass of class sap.m.routing.RouteMatchedHandler with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setCloseDialogs":{"!description":"Sets if a navigation should close dialogs","!static":false,"!category":"function","!type":"fn(bCloseDialogs: Boolean) -> sap.m.routing.RouteMatchedHandler","parameters":{"bCloseDialogs":"type: boolean, description: close dialogs if true"}},"getCloseDialogs":{"!description":"Gets if a navigation should close dialogs","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.routing.RouteMatchedHandler.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Instantiates a RouteMatchedHandler.","!module":"sap/m/routing/RouteMatchedHandler","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28 use {@link sap.m.routing.Router} or {@link sap.m.routing.Targets} instead. The functionality of the routematched handler is built in into these two classes, there is no need to create this anymore.<br>This class will attach to the Events of a provided router and add the views created by it to a  {@link sap.m.SplitContainer} or a {@link sap.m.NavContainer} Control, if this is the target control of the route.<\/br>\nIf the targetControl is no {@link sap.m.SplitContainer} or a {@link sap.m.NavContainer}, It will only close the dialogs, according to the property value.<\/br>\n<\/br>\nWhen a navigation is triggered, this class will try to determine the transition of the pages based on the history.<\/br>\nEg: if a user presses browser back, it will show a backwards animation.<\/br>\n<\/br>\nThe navigation on the container takes place in the RoutePatternMatched event of the Router. If you register on the RouteMatched event of the Router, the visual navigation did not take place yet.<\/br>\n<\/br>\nSince it is hard to detect if a user has pressed browser back, this transitions will not be reliable, for example if someone bookmarked a detail page, and wants to navigate to a masterPage.<\/br>\nIf you want this case to always show a backwards transition, you should specify a \"viewLevel\" property on your Route.<\/br>\nThe viewLevel has to be an integer. The Master should have a lower number than the detail.<\/br>\nThese levels should represent the user process of your application and they do not have to match the container structure of your Routes.<\/br>\nIf the user navigates between views with the same viewLevel, the history is asked for the direction.<\/br>\n<\/br>\nYou can specify a property \"transition\" in a route to define which transition will be applied when navigating. If it is not defined, the nav container will take its default transition.\n<\/br>\nYou can also specify \"transitionParameters\" on a Route, to give the transition parameters.<\/br>\n<\/br>\npreservePageInSplitContainer is deprecated since 1.28 since Targets make this parameter obsolete.\nIf you want to preserve the current view when navigating, but you want to navigate to it when nothing is displayed in the navContainer, you can set preservePageInSplitContainer = true<\/br>\nWhen the route that has this flag directly matches the pattern, the view will still be switched by the splitContainer.\n<\/br>","!proto":"sap.ui.base.Object","destroy":{"!description":"Removes the routeMatchedHandler from the Router","!static":false,"!category":"function","!type":"fn() -> sap.m.routing.RouteMatchedHandler"},"!category":"class"},"sap.m.CustomListItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.CustomListItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.CustomListItem"},"sap.m.QuickViewGroup":{"!description":"QuickViewGroup consists of a title (optional) and an entity of group elements.","setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nDetermines whether the group is visible on the screen.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.m.QuickViewGroup","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.QuickViewGroup.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nDetermines whether the group is visible on the screen.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyElements":{"!description":"Destroys all the elements in the aggregation <code>elements<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.QuickViewGroup"},"insertElement":{"!description":"Inserts a element into the aggregation <code>elements<\/code>.","!static":false,"!category":"function","!type":"fn(oElement: sap.m.QuickViewGroupElement, iIndex: Number) -> sap.m.QuickViewGroup","parameters":{"oElement":"type: sap.m.QuickViewGroupElement, description: the element to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the element should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the element is inserted at position 0; for a value\n             greater than the current size of the aggregation, the element is inserted at\n             the last position"}},"setHeading":{"!description":"Sets a new value for property <code>heading<\/code>.\n\nThe title of the group\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sHeading: String) -> sap.m.QuickViewGroup","parameters":{"sHeading":"type: string, description: New value for property <code>heading<\/code>"}},"bindElements":{"!description":"Binds aggregation <code>elements<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.QuickViewGroup","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"!proto":"sap.ui.core.Element","!category":"class","extend":{"!description":"Creates a new subclass of class sap.m.QuickViewGroup with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"unbindElements":{"!description":"Unbinds aggregation <code>elements<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.QuickViewGroup"},"indexOfElement":{"!description":"Checks for the provided <code>sap.m.QuickViewGroupElement<\/code> in the aggregation <code>elements<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oElement: sap.m.QuickViewGroupElement) -> Number","parameters":{"oElement":"type: sap.m.QuickViewGroupElement, description: The element whose index is looked for"}},"!constructorDescription":"Constructor for a new QuickViewGroup.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getHeading heading} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getElements elements} : sap.m.QuickViewGroupElement[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/m/QuickViewGroup","!helpDescription":"QuickViewGroup consists of a title (optional) and an entity of group elements.","getElements":{"!description":"Gets content of aggregation <code>elements<\/code>.\n\nA combination of one label and another control (Link or Text) associated to this label.","!static":false,"!category":"function","!type":"fn() -> [sap.m.QuickViewGroupElement]"},"getHeading":{"!description":"Gets current value of property <code>heading<\/code>.\n\nThe title of the group\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"addElement":{"!description":"Adds some element to the aggregation <code>elements<\/code>.","!static":false,"!category":"function","!type":"fn(oElement: sap.m.QuickViewGroupElement) -> sap.m.QuickViewGroup","parameters":{"oElement":"type: sap.m.QuickViewGroupElement, description: the element to add; if empty, nothing is inserted"}},"removeElement":{"!description":"Removes a element from the aggregation <code>elements<\/code>.","!static":false,"!category":"function","!type":"fn(vElement: Number | String | sap.m.QuickViewGroupElement) -> sap.m.QuickViewGroupElement","parameters":{"vElement":"type: int|string|sap.m.QuickViewGroupElement, description: The elementto remove or its index or id"}},"removeAllElements":{"!description":"Removes all the controls from the aggregation <code>elements<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.QuickViewGroupElement]"}},"sap.m.ViewSettingsItem":{"!description":"ViewSettingsItem is used for modelling filter behaviour in the ViewSettingsDialog.\nIt is derived from a core Item, but does not support the base class properties \"textDirection\" and \"enabled\", setting these properties will not have any effects.","getMetadata":{"!description":"Returns a metadata object for class sap.m.ViewSettingsItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setSelected":{"!description":"Sets a new value for property <code>selected<\/code>.\n\nSelected state of the item. If set to \"true\", the item will be displayed as selected in the view settings dialog.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSelected: Boolean) -> sap.m.ViewSettingsItem","parameters":{"bSelected":"type: boolean, description: New value for property <code>selected<\/code>"}},"!proto":"sap.ui.core.Item","!category":"class","detachItemPropertyChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>itemPropertyChanged<\/code> event of this <code>sap.m.ViewSettingsItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ViewSettingsItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.m.ViewSettingsItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getSelected":{"!description":"Gets current value of property <code>selected<\/code>.\n\nSelected state of the item. If set to \"true\", the item will be displayed as selected in the view settings dialog.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireItemPropertyChanged":{"!description":"Fires event <code>itemPropertyChanged<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>changedItem<\/code> of type <code>sap.m.ViewSettingsItem<\/code>Instance of the item that changed.<\/li>\n<li><code>propertyKey<\/code> of type <code>string<\/code>Key of the changed property.<\/li>\n<li><code>propertyValue<\/code> of type <code>mixed<\/code>Value of the changed property.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ViewSettingsItem","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!constructorDescription":"Constructor for a new ViewSettingsItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemPropertyChanged itemPropertyChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","!module":"sap/m/ViewSettingsItem","!helpDescription":"ViewSettingsItem is used for modelling filter behaviour in the ViewSettingsDialog.\nIt is derived from a core Item, but does not support the base class properties \"textDirection\" and \"enabled\", setting these properties will not have any effects.","attachItemPropertyChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>itemPropertyChanged<\/code> event of this <code>sap.m.ViewSettingsItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ViewSettingsItem<\/code> itself.\n\nLet the outside world know that some of its properties has changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ViewSettingsItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ViewSettingsItem<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.m.Popover":{"getLeftButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.1 \nThis property has been deprecated since 1.15.1. Please use the beginButton instead.<br>ID of the element which is the current target of the association <code>leftButton<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Button"},"openBy":{"!description":"Opens the Popover and set the Popover position according to the {@link #getPlacement() placement} property around the <code>oControl<\/code> parameter.","!static":false,"!category":"function","!type":"fn(oControl: Object, bSkipInstanceManager: Boolean) -> sap.m.Popover","parameters":{"bSkipInstanceManager":"type: boolean, description: undefined","oControl":"type: object, description: This is the control to which the Popover will be placed. It can be not only a UI5 control, but also an existing DOM reference. The side of the placement depends on the placement property set in the Popover."}},"attachAfterClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterClose<\/code> event of this <code>sap.m.Popover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Popover<\/code> itself.\n\nThis event will be fired after the popover is closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Popover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Popover<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getContentHeight":{"!description":"Gets current value of property <code>contentHeight<\/code>.\n\nSet the height of the content area inside Popover. When controls which adapt their size to the parent control are added directly into Popover, for example sap.m.Page control, a size needs to be specified to the content area of the Popover. Otherwise, Popover control isn't able to display the content in the right way. This values isn't necessary for controls added to Popover directly which can decide their size by themselves, for exmaple sap.m.List, sap.m.Image etc., only needed for controls that adapt their size to the parent control.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getShowArrow":{"!description":"Gets current value of property <code>showArrow<\/code>.\n\nWhether Popover arrow should be visible\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setHorizontalScrolling":{"!description":"Sets a new value for property <code>horizontalScrolling<\/code>.\n\nThis property indicates if user can scroll horizontally inside popover when the content is bigger than the content area. However, when scrollable control (sap.m.ScrollContainer, sap.m.Page) is in the popover, this property needs to be set to false to disable the scrolling in popover in order to make the scrolling in the child control work properly.\nPopover detects if there's sap.m.NavContainer, sap.m.Page, or sap.m.ScrollContainer as direct child added to Popover. If there is, Popover will turn off scrolling by setting this property to false automatically ignoring the existing value of this property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHorizontalScrolling: Boolean) -> sap.m.Popover","parameters":{"bHorizontalScrolling":"type: boolean, description: New value for property <code>horizontalScrolling<\/code>"}},"setInitialFocus":{"!description":"Sets the associated <code>initialFocus<\/code>.","!static":false,"!category":"function","!type":"fn(oInitialFocus: sap.ui.core.Control) -> sap.m.Popover","parameters":{"oInitialFocus":"type: sap.ui.core.Control, description: Id of an element which becomes the new target of this initialFocus association; alternatively, an element instance may be given"}},"outerWidth":{"!description":"Calculate outerWidth of the element; used as hook for SVG elements","!static":true,"!category":"function","!type":"fn(oElement: HTMLElement, bIncludeMargin: Boolean)","parameters":{"oElement":"type: HTMLElement, description: An Element for which outerWidth will be calculated.","bIncludeMargin":"type: boolean, description: Determines if the margins should be included in the calculated outerWidth. Default value is false."}},"setSubHeader":{"!description":"Sets the aggregated <code>subHeader<\/code>.","!static":false,"!category":"function","!type":"fn(oSubHeader: sap.ui.core.Control) -> sap.m.Popover","parameters":{"oSubHeader":"type: sap.ui.core.Control, description: The subHeader to set"}},"detachAfterClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterClose<\/code> event of this <code>sap.m.Popover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Popover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setOffsetX":{"!description":"Sets a new value for property <code>offsetX<\/code>.\n\nThe offset for the popover placement in the x axis. It's with unit pixel.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iOffsetX: Number) -> sap.m.Popover","parameters":{"iOffsetX":"type: int, description: New value for property <code>offsetX<\/code>"}},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nTitle text appears in the header. This property will be ignored when showHeader is set to false.","!static":false,"!category":"function","!type":"fn() -> String"},"setEndButton":{"!description":"Sets the aggregated <code>endButton<\/code>.","!static":false,"!category":"function","!type":"fn(oEndButton: sap.ui.core.Control) -> sap.m.Popover","parameters":{"oEndButton":"type: sap.ui.core.Control, description: The endButton to set"}},"fireBeforeOpen":{"!description":"Fires event <code>beforeOpen<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>openBy<\/code> of type <code>sap.ui.core.Control<\/code>This refers to the control which opens the popover.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Popover","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setContentWidth":{"!description":"Sets a new value for property <code>contentWidth<\/code>.\n\nSet the width of the content area inside Popover. When controls which adapt their size to the parent control are added directly into Popover, for example sap.m.Page control, a size needs to be specified to the content area of the Popover. Otherwise, Popover control isn't able to display the content in the right way. This values isn't necessary for controls added to Popover directly which can decide their size by themselves, for exmaple sap.m.List, sap.m.Image etc., only needed for controls that adapt their size to the parent control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sContentWidth: sap.ui.core.CSSSize) -> sap.m.Popover","parameters":{"sContentWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>contentWidth<\/code>"}},"setOffsetY":{"!description":"Sets a new value for property <code>offsetY<\/code>.\n\nThe offset for the popover placement in the y axis. It's with unit pixel.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iOffsetY: Number) -> sap.m.Popover","parameters":{"iOffsetY":"type: int, description: New value for property <code>offsetY<\/code>"}},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setVerticalScrolling":{"!description":"Sets a new value for property <code>verticalScrolling<\/code>.\n\nThis property indicates if user can scroll vertically inside popover when the content is bigger than the content area. However, when scrollable control (sap.m.ScrollContainer, sap.m.Page) is in the popover, this property needs to be set to false to disable the scrolling in popover in order to make the scrolling in the child control work properly.\nPopover detects if there's sap.m.NavContainer, sap.m.Page, or sap.m.ScrollContainer as direct child added to Popover. If there is, Popover will turn off scrolling by setting this property to false automatically ignoring the existing value of this property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVerticalScrolling: Boolean) -> sap.m.Popover","parameters":{"bVerticalScrolling":"type: boolean, description: New value for property <code>verticalScrolling<\/code>"}},"setContentHeight":{"!description":"Sets a new value for property <code>contentHeight<\/code>.\n\nSet the height of the content area inside Popover. When controls which adapt their size to the parent control are added directly into Popover, for example sap.m.Page control, a size needs to be specified to the content area of the Popover. Otherwise, Popover control isn't able to display the content in the right way. This values isn't necessary for controls added to Popover directly which can decide their size by themselves, for exmaple sap.m.List, sap.m.Image etc., only needed for controls that adapt their size to the parent control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sContentHeight: sap.ui.core.CSSSize) -> sap.m.Popover","parameters":{"sContentHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>contentHeight<\/code>"}},"_afterAdjustPositionAndArrowHook":{"!description":"Hook called after adjusment of the Popover position.","!static":false,"!category":"function","!type":"fn()"},"setShowHeader":{"!description":"Sets a new value for property <code>showHeader<\/code>.\n\nIf a header should be shown at the top of the popover.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowHeader: Boolean) -> sap.m.Popover","parameters":{"bShowHeader":"type: boolean, description: New value for property <code>showHeader<\/code>"}},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Popover"},"!description":"Popover is used to present information temporarily but in a way that does not take over the entire screen. The popover content is layered on top of your existing content and it remains visible until the user taps outside of the popover (when modal is set to false) or you explicitly dismiss it (when modal is set to true). The switching between modal and non-modal can also be done when the popover is already opened.","getContentMinWidth":{"!description":"Gets current value of property <code>contentMinWidth<\/code>.\n\nSets the minimum width of the content area inside popover.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.Popover.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"fireAfterOpen":{"!description":"Fires event <code>afterOpen<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>openBy<\/code> of type <code>sap.ui.core.Control<\/code>This refers to the control which opens the popover.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Popover","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setBeginButton":{"!description":"Sets the aggregated <code>beginButton<\/code>.","!static":false,"!category":"function","!type":"fn(oBeginButton: sap.ui.core.Control) -> sap.m.Popover","parameters":{"oBeginButton":"type: sap.ui.core.Control, description: The beginButton to set"}},"getModal":{"!description":"Gets current value of property <code>modal<\/code>.\n\nIf the popover will not be closed when tapping outside the popover. It also blocks any interaction with the background. The default value is false.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachBeforeOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beforeOpen<\/code> event of this <code>sap.m.Popover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Popover<\/code> itself.\n\nThis event will be fired before the popover is opened.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Popover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Popover<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setLeftButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.1 \nThis property has been deprecated since 1.15.1. Please use the beginButton instead.<br>Sets the associated <code>leftButton<\/code>.","!static":false,"!category":"function","!type":"fn(oLeftButton: sap.m.Button) -> sap.m.Popover","parameters":{"oLeftButton":"type: sap.m.Button, description: Id of an element which becomes the new target of this leftButton association; alternatively, an element instance may be given"}},"setTitle":{"!description":"The setter of the title property.\n\nIf you want to show a header in the popover, don't forget to set the\n{@link #setShowHeader showHeader} property to true.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.Popover","parameters":{"sTitle":"type: string, description: The title to be set"}},"getShowHeader":{"!description":"Gets current value of property <code>showHeader<\/code>.\n\nIf a header should be shown at the top of the popover.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"detachAfterOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterOpen<\/code> event of this <code>sap.m.Popover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Popover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.m.Popover with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"isOpen":{"!description":"The method checks if the Popover is open. It returns true when the Popover is currently open (this includes opening and closing animations), otherwise it returns false.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/m/Popover","setModal":{"!description":"Setter for property <code>modal<\/code>.\nThis overwrites the default setter of the property <code>modal<\/code> to avoid rerendering the whole popover control.\n\nDefault value is <code>false<\/code>","!static":false,"!category":"function","!type":"fn(bModal: Boolean, sModalCSSClass?: String) -> sap.m.Popover","parameters":{"bModal":"type: boolean, description: New value for property <code>modal<\/code>.","sModalCSSClass":"type: string, description: A CSS class (or space-separated list of classes) that should be added to the block layer."}},"!helpDescription":"Popover is used to present information temporarily but in a way that does not take over the entire screen. The popover content is layered on top of your existing content and it remains visible until the user taps outside of the popover (when modal is set to false) or you explicitly dismiss it (when modal is set to true). The switching between modal and non-modal can also be done when the popover is already opened.","outerHeight":{"!description":"Calculate outerHeight of the element; used as hook for SVG elements","!static":true,"!category":"function","!type":"fn(oElement: HTMLElement, bIncludeMargin: Boolean)","parameters":{"oElement":"type: HTMLElement, description: An Element for which outerHeight will be calculated.","bIncludeMargin":"type: boolean, description: Determines if the margins should be included in the calculated outerHeight. Default value is false."}},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"setFooter":{"!description":"Sets the aggregated <code>footer<\/code>.","!static":false,"!category":"function","!type":"fn(oFooter: sap.ui.core.Control) -> sap.m.Popover","parameters":{"oFooter":"type: sap.ui.core.Control, description: The footer to set"}},"getCustomHeader":{"!description":"Gets content of aggregation <code>customHeader<\/code>.\n\nAny control that needed to be displayed in the header area. When this is set, the showHeader property is ignored, and only this customHeader is shown on the top of popover.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.m.Popover","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}},"setPlacement":{"!description":"Set the placement of the Popover.","!static":false,"!category":"function","!type":"fn(sPlacement: sap.m.PlacementType) -> sap.m.Popover","parameters":{"sPlacement":"type: sap.m.PlacementType, description: The position of the Popover"}},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getVerticalScrolling":{"!description":"Gets current value of property <code>verticalScrolling<\/code>.\n\nThis property indicates if user can scroll vertically inside popover when the content is bigger than the content area. However, when scrollable control (sap.m.ScrollContainer, sap.m.Page) is in the popover, this property needs to be set to false to disable the scrolling in popover in order to make the scrolling in the child control work properly.\nPopover detects if there's sap.m.NavContainer, sap.m.Page, or sap.m.ScrollContainer as direct child added to Popover. If there is, Popover will turn off scrolling by setting this property to false automatically ignoring the existing value of this property.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setContentMinWidth":{"!description":"Sets a new value for property <code>contentMinWidth<\/code>.\n\nSets the minimum width of the content area inside popover.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sContentMinWidth: sap.ui.core.CSSSize) -> sap.m.Popover","parameters":{"sContentMinWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>contentMinWidth<\/code>"}},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nThe content inside the popover.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","getEnableScrolling":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.0 This property is deprecated. Please use properties verticalScrolling and horizontalScrolling instead. If you still use this property it will be mapped on the new properties verticalScrolling and horizontalScrolling.<br>Gets current value of property <code>enableScrolling<\/code>.\n\nThis property is deprecated. Please use properties verticalScrolling and horizontalScrolling instead. If you still use this property it will be mapped on the new properties verticalScrolling and horizontalScrolling.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachAfterOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterOpen<\/code> event of this <code>sap.m.Popover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Popover<\/code> itself.\n\nThis event will be fired after the popover is opened.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Popover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Popover<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!category":"class","destroyFooter":{"!description":"Destroys the footer in the aggregation <code>footer<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Popover"},"getInitialFocus":{"!description":"ID of the element which is the current target of the association <code>initialFocus<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"destroySubHeader":{"!description":"Destroys the subHeader in the aggregation <code>subHeader<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Popover"},"getResizable":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireBeforeClose":{"!description":"Fires event <code>beforeClose<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>openBy<\/code> of type <code>sap.ui.core.Control<\/code>This refers to the control which opens the popover.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Popover","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setBounce":{"!description":"Setter for property <code>bounce<\/code>.\n\nDefault value is empty","!static":false,"!category":"function","!type":"fn(bBounce: Boolean) -> sap.m.Popover","parameters":{"bBounce":"type: boolean, description: New value for property <code>bounce<\/code>"}},"getContentWidth":{"!description":"Gets current value of property <code>contentWidth<\/code>.\n\nSet the width of the content area inside Popover. When controls which adapt their size to the parent control are added directly into Popover, for example sap.m.Page control, a size needs to be specified to the content area of the Popover. Otherwise, Popover control isn't able to display the content in the right way. This values isn't necessary for controls added to Popover directly which can decide their size by themselves, for exmaple sap.m.List, sap.m.Image etc., only needed for controls that adapt their size to the parent control.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getRightButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.1 \nThis property has been deprecated since 1.15.1. Please use the endButton instead.<br>ID of the element which is the current target of the association <code>rightButton<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Button"},"!constructorDescription":"Constructor for a new Popover.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPlacement placement} : sap.m.PlacementType (default: Right)<\/li>\n<li>{@link #getShowHeader showHeader} : boolean (default: true)<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getModal modal} : boolean (default: false)<\/li>\n<li>{@link #getOffsetX offsetX} : int (default: 0)<\/li>\n<li>{@link #getOffsetY offsetY} : int (default: 0)<\/li>\n<li>{@link #getShowArrow showArrow} : boolean (default: true)<\/li>\n<li>{@link #getContentWidth contentWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getContentMinWidth contentMinWidth} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getContentHeight contentHeight} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEnableScrolling enableScrolling} : boolean (default: true)<\/li>\n<li>{@link #getVerticalScrolling verticalScrolling} : boolean (default: true)<\/li>\n<li>{@link #getHorizontalScrolling horizontalScrolling} : boolean (default: true)<\/li>\n<li>{@link #getBounce bounce} : boolean<\/li>\n<li>{@link #getResizable resizable} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getCustomHeader customHeader} : sap.ui.core.Control<\/li>\n<li>{@link #getSubHeader subHeader} : sap.ui.core.Control<\/li>\n<li>{@link #getFooter footer} : sap.ui.core.Control<\/li>\n<li>{@link #getBeginButton beginButton} : sap.ui.core.Control<\/li>\n<li>{@link #getEndButton endButton} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterOpen afterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterClose afterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeOpen beforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeClose beforeClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getEndButton":{"!description":"Gets content of aggregation <code>endButton<\/code>.\n\nEndButton is always shown at the right side (left side in RTL mode) inside the header. When showHeader is set to false, the property is ignored.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"setCustomHeader":{"!description":"Sets the aggregated <code>customHeader<\/code>.","!static":false,"!category":"function","!type":"fn(oCustomHeader: sap.ui.core.Control) -> sap.m.Popover","parameters":{"oCustomHeader":"type: sap.ui.core.Control, description: The customHeader to set"}},"close":{"!description":"Closes the popover when it's already opened.","!static":false,"!category":"function","!type":"fn() -> sap.m.Popover"},"detachBeforeOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beforeOpen<\/code> event of this <code>sap.m.Popover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Popover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getHorizontalScrolling":{"!description":"Gets current value of property <code>horizontalScrolling<\/code>.\n\nThis property indicates if user can scroll horizontally inside popover when the content is bigger than the content area. However, when scrollable control (sap.m.ScrollContainer, sap.m.Page) is in the popover, this property needs to be set to false to disable the scrolling in popover in order to make the scrolling in the child control work properly.\nPopover detects if there's sap.m.NavContainer, sap.m.Page, or sap.m.ScrollContainer as direct child added to Popover. If there is, Popover will turn off scrolling by setting this property to false automatically ignoring the existing value of this property.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyCustomHeader":{"!description":"Destroys the customHeader in the aggregation <code>customHeader<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Popover"},"destroyEndButton":{"!description":"Destroys the endButton in the aggregation <code>endButton<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Popover"},"setRightButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.1 \nThis property has been deprecated since 1.15.1. Please use the endButton instead.<br>Sets the associated <code>rightButton<\/code>.","!static":false,"!category":"function","!type":"fn(oRightButton: sap.m.Button) -> sap.m.Popover","parameters":{"oRightButton":"type: sap.m.Button, description: Id of an element which becomes the new target of this rightButton association; alternatively, an element instance may be given"}},"getFooter":{"!description":"Gets content of aggregation <code>footer<\/code>.\n\nThis is optional footer which is shown on the bottom of the popover.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getPlacement":{"!description":"Gets current value of property <code>placement<\/code>.\n\nThis is the information about on which side will the popover be placed at. Possible values are sap.m.PlacementType.Left, sap.m.PlacementType.Right, sap.m.PlacementType.Top, sap.m.PlacementType.Bottom, sap.m.PlacementType.Horizontal, sap.m.PlacementType.HorizontalPreferredLeft, sap.m.PlacementType.HorizontalPreferredRight, sap.m.PlacementType.Vertical, sap.m.PlacementType.VerticalPreferredTop, sap.m.PlacementType.VerticalPreferredBottom, sap.m.PlacementType.Auto. The default value is sap.m.PlacementType.Right. Setting this property while popover is open won't cause any rerendering of the popover, but it will take effect when it's opened again.\n\nDefault value is <code>Right<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.PlacementType"},"setFollowOf":{"!description":"The followOf feature closes the Popover when the position of the control that opened the Popover changes by at least  32 pixels (on desktop browsers). This may lead to unwanted closing of the Popover.\n\nThis function is for enabling/disabling the followOf feature.","!static":false,"!category":"function","!type":"fn(bValue: Boolean) -> sap.m.Popover","parameters":{"bValue":"type: boolean, description: Enables the followOf feature"}},"getSubHeader":{"!description":"Gets content of aggregation <code>subHeader<\/code>.\n\nWhen subHeader is assigned to Popover, it's rendered directly after the main header if there is, or at the beginning of Popover when there's no main header. SubHeader is out of the content area and won't be scrolled when content's size is bigger than the content area's size.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"setResizable":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!static":false,"!category":"function","!type":"fn(bResizable: Boolean) -> sap.m.Popover","parameters":{"bResizable":"type: boolean, description: New value for property <code>resizable<\/code>"}},"destroyBeginButton":{"!description":"Destroys the beginButton in the aggregation <code>beginButton<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Popover"},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"_getAnyHeader":{"!description":"If customHeader is set, this will return the customHeaer. Otherwise it creates a header and put the\ntitle and buttons if needed inside, and finally return this newly create header.","!static":false,"!category":"function","!type":"fn()"},"detachBeforeClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beforeClose<\/code> event of this <code>sap.m.Popover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Popover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.m.Popover","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"getOffsetX":{"!description":"Gets current value of property <code>offsetX<\/code>.\n\nThe offset for the popover placement in the x axis. It's with unit pixel.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setShowArrow":{"!description":"Sets a new value for property <code>showArrow<\/code>.\n\nWhether Popover arrow should be visible\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowArrow: Boolean) -> sap.m.Popover","parameters":{"bShowArrow":"type: boolean, description: New value for property <code>showArrow<\/code>"}},"attachBeforeClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beforeClose<\/code> event of this <code>sap.m.Popover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Popover<\/code> itself.\n\nThis event will be fired before the popover is closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Popover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Popover<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.m.Popover","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"getBeginButton":{"!description":"Gets content of aggregation <code>beginButton<\/code>.\n\nBeginButton is shown at the left side (right side in RTL mode) inside the header. When showHeader is set to false, the property is ignored.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getOffsetY":{"!description":"Gets current value of property <code>offsetY<\/code>.\n\nThe offset for the popover placement in the y axis. It's with unit pixel.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"fireAfterClose":{"!description":"Fires event <code>afterClose<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>openBy<\/code> of type <code>sap.ui.core.Control<\/code>This refers to the control which opens the popover.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Popover","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setEnableScrolling":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.0 This property is deprecated. Please use properties verticalScrolling and horizontalScrolling instead. If you still use this property it will be mapped on the new properties verticalScrolling and horizontalScrolling.<br>Sets a new value for property <code>enableScrolling<\/code>.\n\nThis property is deprecated. Please use properties verticalScrolling and horizontalScrolling instead. If you still use this property it will be mapped on the new properties verticalScrolling and horizontalScrolling.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableScrolling: Boolean) -> sap.m.Popover","parameters":{"bEnableScrolling":"type: boolean, description: New value for property <code>enableScrolling<\/code>"}}},"sap.m.MessagePopoverItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.MessagePopoverItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.MessagePopoverItem"},"sap.m.PullToRefresh_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.PullToRefresh with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.PullToRefresh"},"sap.m.NotificationListBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.NotificationListBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.NotificationListBase"},"sap.m.ListBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ListBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ListBase"},"sap.m.PlanningCalendarView_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.PlanningCalendarView with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.PlanningCalendarView"},"sap.m.QuickViewBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.QuickViewBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.QuickViewBase"},"sap.m.GroupHeaderListItem":{"!description":"<code>sap.m.GroupHeaderListItem<\/code> is used to display the title of a group and act as separator between groups in <code>sap.m.List<\/code> and <code>sap.m.Table<\/code>.\n<b>Note:<\/b> The inherited properties <code>unread<\/code>, <code>selected<\/code>, <code>counter<\/code> and <code>press<\/code> event from <code>sap.m.ListItemBase<\/code> are not supported.","getMetadata":{"!description":"Returns a metadata object for class sap.m.GroupHeaderListItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setTitleTextDirection":{"!description":"Sets a new value for property <code>titleTextDirection<\/code>.\n\nDefines the title text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTitleTextDirection: sap.ui.core.TextDirection) -> sap.m.GroupHeaderListItem","parameters":{"sTitleTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>titleTextDirection<\/code>"}},"!proto":"sap.m.ListItemBase","setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nDefines the title of the group header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.GroupHeaderListItem","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"!category":"class","getUpperCase":{"!description":"Gets current value of property <code>upperCase<\/code>.\n\nBy default, the title is capitalized automatically. To disable this automation, set this property to <b>false<\/b>.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.m.GroupHeaderListItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new GroupHeaderListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getCount count} : string<\/li>\n<li>{@link #getUpperCase upperCase} : boolean (default: true)<\/li>\n<li>{@link #getTitleTextDirection titleTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well.","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nDefines the title of the group header.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/m/GroupHeaderListItem","!helpDescription":"<code>sap.m.GroupHeaderListItem<\/code> is used to display the title of a group and act as separator between groups in <code>sap.m.List<\/code> and <code>sap.m.Table<\/code>.\n<b>Note:<\/b> The inherited properties <code>unread<\/code>, <code>selected<\/code>, <code>counter<\/code> and <code>press<\/code> event from <code>sap.m.ListItemBase<\/code> are not supported.","setUpperCase":{"!description":"Sets a new value for property <code>upperCase<\/code>.\n\nBy default, the title is capitalized automatically. To disable this automation, set this property to <b>false<\/b>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bUpperCase: Boolean) -> sap.m.GroupHeaderListItem","parameters":{"bUpperCase":"type: boolean, description: New value for property <code>upperCase<\/code>"}},"getCount":{"!description":"Gets current value of property <code>count<\/code>.\n\nDefines the count of items in the group, but it could also be an amount which represents the sum of all amounts in the group.\n<b>Note:<\/b> Will not be displayed if not set.","!static":false,"!category":"function","!type":"fn() -> String"},"getTitleTextDirection":{"!description":"Gets current value of property <code>titleTextDirection<\/code>.\n\nDefines the title text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"setCount":{"!description":"Sets a new value for property <code>count<\/code>.\n\nDefines the count of items in the group, but it could also be an amount which represents the sum of all amounts in the group.\n<b>Note:<\/b> Will not be displayed if not set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sCount: String) -> sap.m.GroupHeaderListItem","parameters":{"sCount":"type: string, description: New value for property <code>count<\/code>"}}},"sap.m.QuickViewGroupElement_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.QuickViewGroupElement with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.QuickViewGroupElement"},"sap.m.CheckBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.CheckBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.CheckBox"},"sap.m.ToolbarLayoutData_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ToolbarLayoutData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.LayoutData.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ToolbarLayoutData"},"sap.m.semantic.PrintAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.PrintAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.PrintAction"},"sap.m.ObjectMarker_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ObjectMarker with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ObjectMarker"},"sap.m.SuggestionItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.SuggestionItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.SuggestionItem"},"sap.m.QuickViewCard":{"!description":"The QuickViewCard control displays information of an object in a business-card format.\nIt also allows this object to be linked to another object using one of the links.\nClicking that link updates the information with the data of the linked object.\nUnlimited number of objects can be linked.","extend":{"!description":"Creates a new subclass of class sap.m.QuickViewCard with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.QuickViewBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.QuickViewCard.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new QuickViewCard.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowVerticalScrollBar showVerticalScrollBar} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.QuickViewBase#constructor sap.m.QuickViewBase}\ncan be used as well.","setShowVerticalScrollBar":{"!description":"Sets a new value for property <code>showVerticalScrollBar<\/code>.\n\nDetermines whether the browser displays the vertical scroll bar or simply cuts the content of the QuickViewCard.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowVerticalScrollBar: Boolean) -> sap.m.QuickViewCard","parameters":{"bShowVerticalScrollBar":"type: boolean, description: New value for property <code>showVerticalScrollBar<\/code>"}},"!module":"sap/m/QuickViewCard","!helpDescription":"The QuickViewCard control displays information of an object in a business-card format.\nIt also allows this object to be linked to another object using one of the links.\nClicking that link updates the information with the data of the linked object.\nUnlimited number of objects can be linked.","!proto":"sap.m.QuickViewBase","!category":"class","getShowVerticalScrollBar":{"!description":"Gets current value of property <code>showVerticalScrollBar<\/code>.\n\nDetermines whether the browser displays the vertical scroll bar or simply cuts the content of the QuickViewCard.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.m.OverflowToolbarLayoutData":{"!description":"Holds layout data for the OverflowToolbar items.","getMoveToOverflow":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 undefined<br>Gets current value of property <code>moveToOverflow<\/code>.\n\nThe OverflowToolbar item can or cannot move to the overflow area\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.OverflowToolbarLayoutData.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.m.ToolbarLayoutData","!category":"class","setMoveToOverflow":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 undefined<br>Sets a new value for property <code>moveToOverflow<\/code>.\n\nThe OverflowToolbar item can or cannot move to the overflow area\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bMoveToOverflow: Boolean) -> sap.m.OverflowToolbarLayoutData","parameters":{"bMoveToOverflow":"type: boolean, description: New value for property <code>moveToOverflow<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.OverflowToolbarLayoutData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ToolbarLayoutData.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setGroup":{"!description":"Sets a new value for property <code>group<\/code>.\n\nDefines OverflowToolbar items group number.\nDefault value is 0, which means that the control does not belong to any group.\nElements that belong to a group overflow together. The overall priority of the group is defined by the element with highest priority.\nElements that belong to a group are not allowed to have AlwaysOverflow or NeverOverflow priority.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iGroup: Number) -> sap.m.OverflowToolbarLayoutData","parameters":{"iGroup":"type: int, description: New value for property <code>group<\/code>"}},"!constructorDescription":"Constructor for a new OverflowToolbarLayoutData.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMoveToOverflow moveToOverflow} : boolean (default: true)<\/li>\n<li>{@link #getStayInOverflow stayInOverflow} : boolean (default: false)<\/li>\n<li>{@link #getPriority priority} : sap.m.OverflowToolbarPriority (default: High)<\/li>\n<li>{@link #getGroup group} : int (default: 0)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ToolbarLayoutData#constructor sap.m.ToolbarLayoutData}\ncan be used as well.","getStayInOverflow":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 undefined<br>Gets current value of property <code>stayInOverflow<\/code>.\n\nThe OverflowToolbar item can or cannot stay in the overflow area\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/m/OverflowToolbarLayoutData","!helpDescription":"Holds layout data for the OverflowToolbar items.","getGroup":{"!description":"Gets current value of property <code>group<\/code>.\n\nDefines OverflowToolbar items group number.\nDefault value is 0, which means that the control does not belong to any group.\nElements that belong to a group overflow together. The overall priority of the group is defined by the element with highest priority.\nElements that belong to a group are not allowed to have AlwaysOverflow or NeverOverflow priority.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getPriority":{"!description":"Gets current value of property <code>priority<\/code>.\n\nDefines OverflowToolbar items priority, Available priorities ate NeverOverflow, High, Low, Disappear and AlwaysOverflow\n\nDefault value is <code>High<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.OverflowToolbarPriority"},"setStayInOverflow":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 undefined<br>Sets a new value for property <code>stayInOverflow<\/code>.\n\nThe OverflowToolbar item can or cannot stay in the overflow area\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bStayInOverflow: Boolean) -> sap.m.OverflowToolbarLayoutData","parameters":{"bStayInOverflow":"type: boolean, description: New value for property <code>stayInOverflow<\/code>"}},"setPriority":{"!description":"Sets a new value for property <code>priority<\/code>.\n\nDefines OverflowToolbar items priority, Available priorities ate NeverOverflow, High, Low, Disappear and AlwaysOverflow\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>High<\/code>.","!static":false,"!category":"function","!type":"fn(sPriority: sap.m.OverflowToolbarPriority) -> sap.m.OverflowToolbarLayoutData","parameters":{"sPriority":"type: sap.m.OverflowToolbarPriority, description: New value for property <code>priority<\/code>"}}},"sap.m.semantic.MessagesIndicator":{"!description":"A MessagesIndicator button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","extend":{"!description":"Creates a new subclass of class sap.m.semantic.MessagesIndicator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.MessagesIndicator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new MessagesIndicator.","!module":"sap/m/semantic/MessagesIndicator","!helpDescription":"A MessagesIndicator button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","!proto":"sap.m.semantic.SemanticButton","!category":"class"},"sap.m.TimePicker_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.TimePicker with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.MaskInput.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.TimePicker"},"sap.m.PlanningCalendarRow":{"setSelected":{"!description":"Sets a new value for property <code>selected<\/code>.\n\nDefines the selected state of the <code>PlanningCalendarRow<\/code>.\n<b>Note:<\/b> Binding the <code>selected<\/code> property in single selection modes may cause unwanted results if you have more than one selected row in your binding.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSelected: Boolean) -> sap.m.PlanningCalendarRow","parameters":{"bSelected":"type: boolean, description: New value for property <code>selected<\/code>"}},"!proto":"sap.ui.core.Element","!category":"class","setNonWorkingDays":{"!description":"Sets a new value for property <code>nonWorkingDays<\/code>.\n\nIf set, the provided weekdays are displayed as non-working days.\nValid values inside the array are 0 to 6. (other values will just be ignored.)\n\nIf not set, the weekend defined in the locale settings is displayed as non-working days.\n\n<b>Note:<\/b> The non-working days are only visualized if <code>intervalType<\/code> is set to day.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNonWorkingDays: [Number]) -> sap.m.PlanningCalendarRow","parameters":{"sNonWorkingDays":"type: int[], description: New value for property <code>nonWorkingDays<\/code>"}},"setNonWorkingHours":{"!description":"Sets a new value for property <code>nonWorkingHours<\/code>.\n\nIf set, the provided hours are displayed as non-working hours.\nValid values inside the array are 0 to 23. (other values will just be ignored.)\n\n<b>Note:<\/b> The non-working hours are only visualized if <code>intervalType<\/code> is set to hour.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNonWorkingHours: [Number]) -> sap.m.PlanningCalendarRow","parameters":{"sNonWorkingHours":"type: int[], description: New value for property <code>nonWorkingHours<\/code>"}},"!constructorDescription":"Constructor for a new <code>PlanningCalendarRow<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getNonWorkingDays nonWorkingDays} : int[]<\/li>\n<li>{@link #getNonWorkingHours nonWorkingHours} : int[]<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getKey key} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAppointments appointments} : sap.ui.unified.CalendarAppointment[]<\/li>\n<li>{@link #getIntervalHeaders intervalHeaders} : sap.ui.unified.CalendarAppointment[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nTitle of the header (e.g. name of the person)","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllAppointments":{"!description":"Removes all the controls from the aggregation <code>appointments<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.CalendarAppointment]"},"indexOfAppointment":{"!description":"Checks for the provided <code>sap.ui.unified.CalendarAppointment<\/code> in the aggregation <code>appointments<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAppointment: sap.ui.unified.CalendarAppointment) -> Number","parameters":{"oAppointment":"type: sap.ui.unified.CalendarAppointment, description: The appointment whose index is looked for"}},"insertIntervalHeader":{"!description":"Inserts a intervalHeader into the aggregation <code>intervalHeaders<\/code>.","!static":false,"!category":"function","!type":"fn(oIntervalHeader: sap.ui.unified.CalendarAppointment, iIndex: Number) -> sap.m.PlanningCalendarRow","parameters":{"oIntervalHeader":"type: sap.ui.unified.CalendarAppointment, description: the intervalHeader to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the intervalHeader should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the intervalHeader is inserted at position 0; for a value\n             greater than the current size of the aggregation, the intervalHeader is inserted at\n             the last position"}},"indexOfIntervalHeader":{"!description":"Checks for the provided <code>sap.ui.unified.CalendarAppointment<\/code> in the aggregation <code>intervalHeaders<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oIntervalHeader: sap.ui.unified.CalendarAppointment) -> Number","parameters":{"oIntervalHeader":"type: sap.ui.unified.CalendarAppointment, description: The intervalHeader whose index is looked for"}},"setKey":{"!description":"Sets a new value for property <code>key<\/code>.\n\nCan be used as an identifier of the row\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sKey: String) -> sap.m.PlanningCalendarRow","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"}},"!description":"Row in the <code>PlanningCalendar<\/code>.\n\nThis element holds the data of one row in the <code>PlanningCalendar<\/code>. Once the header information (e.g. person information)\nis assigned, the appointments are assigned.","getKey":{"!description":"Gets current value of property <code>key<\/code>.\n\nCan be used as an identifier of the row","!static":false,"!category":"function","!type":"fn() -> String"},"getAppointments":{"!description":"Gets content of aggregation <code>appointments<\/code>.\n\nAppointments to be displayed in the row. Appointments outside the visible time frame are not rendered.\n\n<b>Note:<\/b> For performance reasons only appointments in the visible time range or nearby should be assigned.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.CalendarAppointment]"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.PlanningCalendarRow.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"removeAllIntervalHeaders":{"!description":"Removes all the controls from the aggregation <code>intervalHeaders<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.CalendarAppointment]"},"addAppointment":{"!description":"Adds some appointment to the aggregation <code>appointments<\/code>.","!static":false,"!category":"function","!type":"fn(oAppointment: sap.ui.unified.CalendarAppointment) -> sap.m.PlanningCalendarRow","parameters":{"oAppointment":"type: sap.ui.unified.CalendarAppointment, description: the appointment to add; if empty, nothing is inserted"}},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nText of the header (e.g. department of the person)","!static":false,"!category":"function","!type":"fn() -> String"},"insertAppointment":{"!description":"Inserts a appointment into the aggregation <code>appointments<\/code>.","!static":false,"!category":"function","!type":"fn(oAppointment: sap.ui.unified.CalendarAppointment, iIndex: Number) -> sap.m.PlanningCalendarRow","parameters":{"oAppointment":"type: sap.ui.unified.CalendarAppointment, description: the appointment to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the appointment should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the appointment is inserted at position 0; for a value\n             greater than the current size of the aggregation, the appointment is inserted at\n             the last position"}},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nTitle of the header (e.g. name of the person)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.PlanningCalendarRow","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"getIntervalHeaders":{"!description":"Gets content of aggregation <code>intervalHeaders<\/code>.\n\nAppointments to be displayed in the top of the intervals. The <code>intervalHeaders<\/code> are used to visualize\npublic holidays and similar things.\n\nAppointments outside the visible time frame are not rendered.\n\nThe <code>intervalHeaders<\/code> always fill whole intervals. If they are shorter than one interval they are not displayed.\n\n<b>Note:<\/b> For performance reasons only appointments in the visible time range or nearby should be assigned.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.CalendarAppointment]"},"addIntervalHeader":{"!description":"Adds some intervalHeader to the aggregation <code>intervalHeaders<\/code>.","!static":false,"!category":"function","!type":"fn(oIntervalHeader: sap.ui.unified.CalendarAppointment) -> sap.m.PlanningCalendarRow","parameters":{"oIntervalHeader":"type: sap.ui.unified.CalendarAppointment, description: the intervalHeader to add; if empty, nothing is inserted"}},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nIcon of the header (e.g. picture of the person)\n\nURI of an image or an icon registered in sap.ui.core.IconPool.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"extend":{"!description":"Creates a new subclass of class sap.m.PlanningCalendarRow with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nIcon of the header (e.g. picture of the person)\n\nURI of an image or an icon registered in sap.ui.core.IconPool.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.m.PlanningCalendarRow","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"getNonWorkingDays":{"!description":"Gets current value of property <code>nonWorkingDays<\/code>.\n\nIf set, the provided weekdays are displayed as non-working days.\nValid values inside the array are 0 to 6. (other values will just be ignored.)\n\nIf not set, the weekend defined in the locale settings is displayed as non-working days.\n\n<b>Note:<\/b> The non-working days are only visualized if <code>intervalType<\/code> is set to day.","!static":false,"!category":"function","!type":"fn() -> [Number]"},"getSelected":{"!description":"Gets current value of property <code>selected<\/code>.\n\nDefines the selected state of the <code>PlanningCalendarRow<\/code>.\n<b>Note:<\/b> Binding the <code>selected<\/code> property in single selection modes may cause unwanted results if you have more than one selected row in your binding.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/m/PlanningCalendarRow","!helpDescription":"Row in the <code>PlanningCalendar<\/code>.\n\nThis element holds the data of one row in the <code>PlanningCalendar<\/code>. Once the header information (e.g. person information)\nis assigned, the appointments are assigned.","destroyIntervalHeaders":{"!description":"Destroys all the intervalHeaders in the aggregation <code>intervalHeaders<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.PlanningCalendarRow"},"removeAppointment":{"!description":"Removes a appointment from the aggregation <code>appointments<\/code>.","!static":false,"!category":"function","!type":"fn(vAppointment: Number | String | sap.ui.unified.CalendarAppointment) -> sap.ui.unified.CalendarAppointment","parameters":{"vAppointment":"type: int|string|sap.ui.unified.CalendarAppointment, description: The appointmentto remove or its index or id"}},"getNonWorkingHours":{"!description":"Gets current value of property <code>nonWorkingHours<\/code>.\n\nIf set, the provided hours are displayed as non-working hours.\nValid values inside the array are 0 to 23. (other values will just be ignored.)\n\n<b>Note:<\/b> The non-working hours are only visualized if <code>intervalType<\/code> is set to hour.","!static":false,"!category":"function","!type":"fn() -> [Number]"},"removeIntervalHeader":{"!description":"Removes a intervalHeader from the aggregation <code>intervalHeaders<\/code>.","!static":false,"!category":"function","!type":"fn(vIntervalHeader: Number | String | sap.ui.unified.CalendarAppointment) -> sap.ui.unified.CalendarAppointment","parameters":{"vIntervalHeader":"type: int|string|sap.ui.unified.CalendarAppointment, description: The intervalHeaderto remove or its index or id"}},"destroyAppointments":{"!description":"Destroys all the appointments in the aggregation <code>appointments<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.PlanningCalendarRow"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nText of the header (e.g. department of the person)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.m.PlanningCalendarRow","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.m.DatePicker":{"getSecondaryCalendarType":{"!description":"Gets current value of property <code>secondaryCalendarType<\/code>.\n\nIf set, the days in the calendar popup are also displayed in this calendar type\nIf not set, the dates are only displayed in the primary calendar type","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CalendarType"},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"getMinDate":{"!description":"Gets current value of property <code>minDate<\/code>.\n\nMinimum date that can be shown and selected in the <code>DatePicker<\/code>. This must be a JavaScript date object.\n\n<b>Note:<\/b> If the <code>minDate<\/code> is set to be after the <code>maxDate<\/code>,\nthe <code>maxDate<\/code> and the <code>minDate<\/code> are switched before rendering.","!static":false,"!category":"function","!type":"fn() -> Object"},"setDateValue":{"!description":"Sets a new value for property <code>dateValue<\/code>.\n\nThe date as JavaScript Date object. This is independent from any formatter.\n\n<b>Note:<\/b> If this property is used, the <code>value<\/code> property should not be changed from the caller.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oDateValue: Object) -> sap.m.DatePicker","parameters":{"oDateValue":"type: object, description: New value for property <code>dateValue<\/code>"}},"removeSpecialDate":{"!description":"Removes a <code>specialDate<\/code> from the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSpecialDate: sap.ui.unified.DateTypeRange) -> sap.ui.unified.DateTypeRange","parameters":{"oSpecialDate":"type: sap.ui.unified.DateTypeRange, description: The <code>specialDate<\/code> to remove or its index or id"}},"!proto":"sap.m.InputBase","!category":"class","getSpecialDates":{"!description":"Gets content of aggregation <code>specialDates<\/code>.\n\nDate Range with type to visualize special days in the Calendar.\nIf one day is assigned to more than one Type, only the first one will be used.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Element]"},"indexOfSpecialDate":{"!description":"Checks for the provided <code>sap.ui.core.Element<\/code> in the aggregation <code>specialDates<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSpecialDate: sap.ui.core.Element) -> Number","parameters":{"oSpecialDate":"type: sap.ui.core.Element, description: The specialDate whose index is looked for"}},"setDisplayFormatType":{"!description":"Sets a new value for property <code>displayFormatType<\/code>.\n\nDisplays date in this given type in input field. Default value is taken from locale settings.\nAccepted are values of <code>sap.ui.core.CalendarType<\/code> or an empty string. If no type is set, the default type of the\nconfiguration is used.\n<b>Note:<\/b> If data binding on <code>value<\/code> property with type <code>sap.ui.model.type.Date<\/code> is used, this property will be ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sDisplayFormatType: String) -> sap.m.DatePicker","parameters":{"sDisplayFormatType":"type: string, description: New value for property <code>displayFormatType<\/code>"}},"!constructorDescription":"Constructor for a new DatePicker.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDisplayFormat displayFormat} : string<\/li>\n<li>{@link #getValueFormat valueFormat} : string<\/li>\n<li>{@link #getDateValue dateValue} : object<\/li>\n<li>{@link #getDisplayFormatType displayFormatType} : string (default: )<\/li>\n<li>{@link #getSecondaryCalendarType secondaryCalendarType} : sap.ui.core.CalendarType<\/li>\n<li>{@link #getMinDate minDate} : object<\/li>\n<li>{@link #getMaxDate maxDate} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSpecialDates specialDates} : sap.ui.core.Element[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.InputBase#constructor sap.m.InputBase}\ncan be used as well.","addSpecialDate":{"!description":"Adds some <code>specialDate<\/code> to the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSpecialDate: sap.ui.unified.DateTypeRange) -> sap.m.DatePicker","parameters":{"oSpecialDate":"type: sap.ui.unified.DateTypeRange, description: the specialDate to add; if empty, nothing is added"}},"setLegend":{"!description":"Sets the associated legend.","!static":false,"!category":"function","!type":"fn(oLegend: sap.ui.core.ID | sap.ui.unified.CalendarLegend) -> sap.m.DatePicker","parameters":{"oLegend":"type: sap.ui.core.ID|sap.ui.unified.CalendarLegend, description: ID of an element which becomes the new target of this <code>legend<\/code> association;\n                                                        alternatively, an element instance may be given"}},"setValueFormat":{"!description":"Sets a new value for property <code>valueFormat<\/code>.\n\nThe date string expected and returned in the <code>value<\/code> property uses this format. By default the short format of the used locale is used.\n\n\nSupported format options are pattern-based on Unicode LDML Date Format notation. {@link http://unicode.org/reports/tr35/#Date_Field_Symbol_Table}\n\nFor example, if the date string represents an ABAP DATS type, the format should be \"yyyyMMdd\".\n\n<b>Note:<\/b> If data binding on <code>value<\/code> property with type <code>sap.ui.model.type.Date<\/code> is used, this property will be ignored.\nThe format defined in the binding will be used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sValueFormat: String) -> sap.m.DatePicker","parameters":{"sValueFormat":"type: string, description: New value for property <code>valueFormat<\/code>"}},"destroySpecialDates":{"!description":"Destroys all the specialDates in the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.DatePicker"},"!description":"This is a date input control with a calendar as date picker.\n\nA date can be entered using a calendar that opens in a popup. Alternatively a value can be entered directly in the input field by typing it in.\n(This is only possible on desktop devices, on mobile devices keyboard input is not possible.)\nIf a date is entered by typing it into the input field, it must fit to the used date format and locale. (See <code>sap.ui.core.format.DateFormat<\/code>)\n\nThere are two options to provide a date for the <code>DatePicker<\/code>.\nYou can put a date as a string to the property <code>value<\/code> or you can put a JavaScript Date object to the property <code>dateValue<\/code>.\nOnly one of the properties should be used at one time, but they are synchronized internally.\nWhat property you should use depends on the use case of the application:\n<ul>\n<li>Use the <code>value<\/code> property if you want to bind the <code>DatePicker<\/code> to a model using the <code>sap.ui.model.type.Date<\/code>.<\/li>\n<li>Use the <code>value<\/code> property if the date is provided as a string from the backend or inside the application (e.g. as ABAP type DATS field).<\/li>\n<li>Use the <code>dateValue<\/code> property if the date is already provided as a JavaScript Date object or you want to work with a JavaScript Date object.<\/li>\n<\/ul>\n\nAll formatting and parsing of dates from and to strings is done using the {@link sap.ui.core.format.DateFormat}, so read the corresponding documentation if you need some information about this.\n\nSupported format options are pattern-based on Unicode LDML Date Format notation. {@link http://unicode.org/reports/tr35/#Date_Field_Symbol_Table}\n\nFor example, if the <code>valueFormat<\/code> is \"yyyy-MM-dd\", <code>displayFormat<\/code> is \"MMM d, y\" and the used locale is English,\na valid <code>value<\/code> string is \"2015-07-30\", which leads to an output of \"Jul 30, 2015\".\n\nIf no <code>placeholder<\/code> is set to the <code>DatePicker<\/code> the used <code>displayFormat<\/code> is shown as placeholder.\nIf another placeholder is needed, it must be set.\n\nInternally the <code>sap.ui.unified.Calendar<\/code> is used, but it is only needed if the <code>DatePicker<\/code> is opened. This means that it is not needed for the initial rendering.\nIf the <code>sap.ui.unified<\/code> library is not loaded before the <code>DatePicker<\/code> is opened, it will be loaded upon opening.\nThis could lead to a waiting time before a <code>DatePicker<\/code> is opened the first time. To prevent this, applications using the <code>DatePicker<\/code> should also load\nthe <code>sap.ui.unified<\/code> library.","getLegend":{"!description":"ID of the element which is the current target of the association <code>legend<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.DatePicker.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getValueFormat":{"!description":"Gets current value of property <code>valueFormat<\/code>.\n\nThe date string expected and returned in the <code>value<\/code> property uses this format. By default the short format of the used locale is used.\n\n\nSupported format options are pattern-based on Unicode LDML Date Format notation. {@link http://unicode.org/reports/tr35/#Date_Field_Symbol_Table}\n\nFor example, if the date string represents an ABAP DATS type, the format should be \"yyyyMMdd\".\n\n<b>Note:<\/b> If data binding on <code>value<\/code> property with type <code>sap.ui.model.type.Date<\/code> is used, this property will be ignored.\nThe format defined in the binding will be used.","!static":false,"!category":"function","!type":"fn() -> String"},"getMaxDate":{"!description":"Gets current value of property <code>maxDate<\/code>.\n\nMaximum date that can be shown and selected in the <code>DatePicker<\/code>. This must be a JavaScript date object.\n\n<b>Note:<\/b> If the <code>maxDate<\/code> is set to be before the <code>minDate<\/code>,\nthe <code>maxDate<\/code> and the <code>minDate<\/code> are switched before rendering.","!static":false,"!category":"function","!type":"fn() -> Object"},"insertSpecialDate":{"!description":"Inserts a <code>specialDate<\/code> to the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSpecialDate: sap.ui.unified.DateTypeRange, iIndex: Number) -> sap.m.DatePicker","parameters":{"oSpecialDate":"type: sap.ui.unified.DateTypeRange, description: the specialDate to insert; if empty, nothing is inserted","iIndex":"type: int, description: the 0-based index the <code>specialDate<\/code> should be inserted at;\n             for a negative value of <code>iIndex<\/code>, the <code>specialDate<\/code> is inserted at position 0;\n             for a value greater than the current size of the aggregation, the <code>specialDate<\/code> is inserted at the last position"}},"setSecondaryCalendarType":{"!description":"Sets a new value for property <code>secondaryCalendarType<\/code>.\n\nIf set, the days in the calendar popup are also displayed in this calendar type\nIf not set, the dates are only displayed in the primary calendar type\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSecondaryCalendarType: sap.ui.core.CalendarType) -> sap.m.DatePicker","parameters":{"sSecondaryCalendarType":"type: sap.ui.core.CalendarType, description: New value for property <code>secondaryCalendarType<\/code>"}},"fireChange":{"!description":"Fire event change to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>'value' of type <code>string<\/code> The new value of the <code>sap.m.DatePicker<\/code>.<\/li>\n<li>'valid' of type <code>boolean<\/code> Indicator for a valid date.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.DatePicker","parameters":{"mArguments":"type: Map, description: the arguments to pass along with the event."}},"setWidth":{"!description":"Defines the width of the DatePicker. Default value is 100%","!static":false,"!category":"function","!type":"fn(sWidth: String) -> sap.m.DatePicker","parameters":{"sWidth":"type: string, description: new value for <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.DatePicker with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.InputBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setDisplayFormat":{"!description":"Sets a new value for property <code>displayFormat<\/code>.\n\nThe date is displayed in the input field using this format. By default, the medium format of the used locale is used.\n\nSupported format options are pattern-based on Unicode LDML Date Format notation. {@link http://unicode.org/reports/tr35/#Date_Field_Symbol_Table}\n<b>Note:<\/b> If you use data binding on the <code>value<\/code> property with type <code>sap.ui.model.type.Date<\/code> this property will be ignored.\nThe format defined in the binding will be used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDisplayFormat: String) -> sap.m.DatePicker","parameters":{"sDisplayFormat":"type: string, description: New value for property <code>displayFormat<\/code>"}},"getDisplayFormat":{"!description":"Gets current value of property <code>displayFormat<\/code>.\n\nThe date is displayed in the input field using this format. By default, the medium format of the used locale is used.\n\nSupported format options are pattern-based on Unicode LDML Date Format notation. {@link http://unicode.org/reports/tr35/#Date_Field_Symbol_Table}\n<b>Note:<\/b> If you use data binding on the <code>value<\/code> property with type <code>sap.ui.model.type.Date<\/code> this property will be ignored.\nThe format defined in the binding will be used.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/m/DatePicker","!helpDescription":"This is a date input control with a calendar as date picker.\n\nA date can be entered using a calendar that opens in a popup. Alternatively a value can be entered directly in the input field by typing it in.\n(This is only possible on desktop devices, on mobile devices keyboard input is not possible.)\nIf a date is entered by typing it into the input field, it must fit to the used date format and locale. (See <code>sap.ui.core.format.DateFormat<\/code>)\n\nThere are two options to provide a date for the <code>DatePicker<\/code>.\nYou can put a date as a string to the property <code>value<\/code> or you can put a JavaScript Date object to the property <code>dateValue<\/code>.\nOnly one of the properties should be used at one time, but they are synchronized internally.\nWhat property you should use depends on the use case of the application:\n<ul>\n<li>Use the <code>value<\/code> property if you want to bind the <code>DatePicker<\/code> to a model using the <code>sap.ui.model.type.Date<\/code>.<\/li>\n<li>Use the <code>value<\/code> property if the date is provided as a string from the backend or inside the application (e.g. as ABAP type DATS field).<\/li>\n<li>Use the <code>dateValue<\/code> property if the date is already provided as a JavaScript Date object or you want to work with a JavaScript Date object.<\/li>\n<\/ul>\n\nAll formatting and parsing of dates from and to strings is done using the {@link sap.ui.core.format.DateFormat}, so read the corresponding documentation if you need some information about this.\n\nSupported format options are pattern-based on Unicode LDML Date Format notation. {@link http://unicode.org/reports/tr35/#Date_Field_Symbol_Table}\n\nFor example, if the <code>valueFormat<\/code> is \"yyyy-MM-dd\", <code>displayFormat<\/code> is \"MMM d, y\" and the used locale is English,\na valid <code>value<\/code> string is \"2015-07-30\", which leads to an output of \"Jul 30, 2015\".\n\nIf no <code>placeholder<\/code> is set to the <code>DatePicker<\/code> the used <code>displayFormat<\/code> is shown as placeholder.\nIf another placeholder is needed, it must be set.\n\nInternally the <code>sap.ui.unified.Calendar<\/code> is used, but it is only needed if the <code>DatePicker<\/code> is opened. This means that it is not needed for the initial rendering.\nIf the <code>sap.ui.unified<\/code> library is not loaded before the <code>DatePicker<\/code> is opened, it will be loaded upon opening.\nThis could lead to a waiting time before a <code>DatePicker<\/code> is opened the first time. To prevent this, applications using the <code>DatePicker<\/code> should also load\nthe <code>sap.ui.unified<\/code> library.","getDisplayFormatType":{"!description":"Gets current value of property <code>displayFormatType<\/code>.\n\nDisplays date in this given type in input field. Default value is taken from locale settings.\nAccepted are values of <code>sap.ui.core.CalendarType<\/code> or an empty string. If no type is set, the default type of the\nconfiguration is used.\n<b>Note:<\/b> If data binding on <code>value<\/code> property with type <code>sap.ui.model.type.Date<\/code> is used, this property will be ignored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setMaxDate":{"!description":"Sets a new value for property <code>maxDate<\/code>.\n\nMaximum date that can be shown and selected in the <code>DatePicker<\/code>. This must be a JavaScript date object.\n\n<b>Note:<\/b> If the <code>maxDate<\/code> is set to be before the <code>minDate<\/code>,\nthe <code>maxDate<\/code> and the <code>minDate<\/code> are switched before rendering.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oMaxDate: Object) -> sap.m.DatePicker","parameters":{"oMaxDate":"type: object, description: New value for property <code>maxDate<\/code>"}},"removeAllSpecialDates":{"!description":"Removes all the controls from the aggregation <code>specialDates<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Element]"},"getDateValue":{"!description":"Gets current value of property <code>dateValue<\/code>.\n\nThe date as JavaScript Date object. This is independent from any formatter.\n\n<b>Note:<\/b> If this property is used, the <code>value<\/code> property should not be changed from the caller.","!static":false,"!category":"function","!type":"fn() -> Object"},"setMinDate":{"!description":"Sets a new value for property <code>minDate<\/code>.\n\nMinimum date that can be shown and selected in the <code>DatePicker<\/code>. This must be a JavaScript date object.\n\n<b>Note:<\/b> If the <code>minDate<\/code> is set to be after the <code>maxDate<\/code>,\nthe <code>maxDate<\/code> and the <code>minDate<\/code> are switched before rendering.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oMinDate: Object) -> sap.m.DatePicker","parameters":{"oMinDate":"type: object, description: New value for property <code>minDate<\/code>"}}},"sap.m.MenuButton":{"bindMenu":{"!description":"Binds aggregation <code>menu<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.MenuButton","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDefines the width of the <code>MenuButton<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setTooltip":{"!description":"Sets the tooltip for the <code>MenuButton<\/code>.\nCan either be an instance of a TooltipBase subclass or a simple string.","!static":false,"!category":"function","!type":"fn(vTooltip: sap.ui.core.TooltipBase) -> *","parameters":{"vTooltip":"type: sap.ui.core.TooltipBase, description: The tooltip that should be shown."}},"attachDefaultAction":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>defaultAction<\/code> event of this <code>sap.m.MenuButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.MenuButton<\/code> itself.\n\nFired when the <code>buttonMode<\/code> is set to <code>Split<\/code> and the user presses the main button\nunless <code>useDefaultActionOnly<\/code> is set to <code>false<\/code> and another action\nfrom the menu has been selected previously.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.MenuButton","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.MenuButton<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getIconDensityAware":{"!description":"Gets current value of property <code>iconDensityAware<\/code>.\n\nWhen set to <code>true<\/code> (default), one or more requests are sent trying to get the\ndensity perfect version of image if this version of image doesn't exist on the server.\nIf only one version of image is provided, set this value to <code>false<\/code> to\navoid the attempt of fetching density perfect image.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new MenuButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getType type} : sap.m.ButtonType (default: Default)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getActiveIcon activeIcon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getButtonMode buttonMode} : sap.m.MenuButtonMode (default: Regular)<\/li>\n<li>{@link #getUseDefaultActionOnly useDefaultActionOnly} : Boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getMenu menu} : sap.m.Menu<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:defaultAction defaultAction} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setIconDensityAware":{"!description":"Sets a new value for property <code>iconDensityAware<\/code>.\n\nWhen set to <code>true<\/code> (default), one or more requests are sent trying to get the\ndensity perfect version of image if this version of image doesn't exist on the server.\nIf only one version of image is provided, set this value to <code>false<\/code> to\navoid the attempt of fetching density perfect image.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bIconDensityAware: Boolean) -> sap.m.MenuButton","parameters":{"bIconDensityAware":"type: boolean, description: New value for property <code>iconDensityAware<\/code>"}},"setActiveIcon":{"!description":"Sets a new value for property <code>activeIcon<\/code>.\n\nThe source property of an alternative icon for the active (pressed) state of the button.\nBoth active and default icon properties should be defined and of the same type - image or icon font.\nIf the <code>icon<\/code> property is not set or has a different type, the active icon is not displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sActiveIcon: sap.ui.core.URI) -> sap.m.MenuButton","parameters":{"sActiveIcon":"type: sap.ui.core.URI, description: New value for property <code>activeIcon<\/code>"}},"detachDefaultAction":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>defaultAction<\/code> event of this <code>sap.m.MenuButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.MenuButton","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nBoolean property to enable the control (default is <code>true<\/code>).\n<br/><b>Note:<\/b> Depending on custom settings, the buttons that are disabled have other colors than the enabled ones.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMenu":{"!description":"Gets content of aggregation <code>menu<\/code>.\n\nDefines the menu that opens for this button.","!static":false,"!category":"function","!type":"fn() -> sap.m.Menu"},"getActiveIcon":{"!description":"Gets current value of property <code>activeIcon<\/code>.\n\nThe source property of an alternative icon for the active (pressed) state of the button.\nBoth active and default icon properties should be defined and of the same type - image or icon font.\nIf the <code>icon<\/code> property is not set or has a different type, the active icon is not displayed.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"!description":"The <code>sap.m.MenuButton<\/code> control enables the user to show a hierarchical menu.","init":{"!description":"Initializes the control.","!static":false,"!category":"function","!type":"fn()"},"unbindMenu":{"!description":"Unbinds aggregation <code>menu<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.MenuButton"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.MenuButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nDefines the text of the <code>MenuButton<\/code>.\n<br/><b>Note:<\/b> In <code>Split<\/code> <code>buttonMode<\/code> with <code>useDefaultActionOnly<\/code>\nset to <code>false<\/code>, the text is changed to display the last selected item's text,\nwhile in <code>Regular<\/code> <code>buttonMode<code> the text stays unchanged.","!static":false,"!category":"function","!type":"fn() -> String"},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nSpecifies the element's text directionality with enumerated options.\nBy default, the control inherits text direction from the DOM.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.m.MenuButton","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"destroyMenu":{"!description":"Destroys the menu in the aggregation <code>menu<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.MenuButton"},"setUseDefaultActionOnly":{"!description":"Sets a new value for property <code>useDefaultActionOnly<\/code>.\n\nControls whether the default action handler is invoked always or it is invoked only until a menu item is selected.\nUsable only if <code>buttonMode<\/code> is set to <code>Split<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(sUseDefaultActionOnly: Boolean) -> sap.m.MenuButton","parameters":{"sUseDefaultActionOnly":"type: Boolean, description: New value for property <code>useDefaultActionOnly<\/code>"}},"setMenu":{"!description":"Sets the aggregated <code>menu<\/code>.","!static":false,"!category":"function","!type":"fn(oMenu: sap.m.Menu) -> sap.m.MenuButton","parameters":{"oMenu":"type: sap.m.Menu, description: The menu to set"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDefines the width of the <code>MenuButton<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.MenuButton","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nDefines the icon to be displayed as a graphical element within the button.\nIt can be an image or an icon from the icon font.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"extend":{"!description":"Creates a new subclass of class sap.m.MenuButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nBoolean property to enable the control (default is <code>true<\/code>).\n<br/><b>Note:<\/b> Depending on custom settings, the buttons that are disabled have other colors than the enabled ones.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.m.MenuButton","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"getUseDefaultActionOnly":{"!description":"Gets current value of property <code>useDefaultActionOnly<\/code>.\n\nControls whether the default action handler is invoked always or it is invoked only until a menu item is selected.\nUsable only if <code>buttonMode<\/code> is set to <code>Split<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/m/MenuButton","!helpDescription":"The <code>sap.m.MenuButton<\/code> control enables the user to show a hierarchical menu.","getType":{"!description":"Gets current value of property <code>type<\/code>.\n\nDefines the type of the <code>MenuButton<\/code> (for example, Default, Accept, Reject, Back, etc.)\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ButtonType"},"getButtonMode":{"!description":"Gets current value of property <code>buttonMode<\/code>.\n\nDefines whether the <code>MenuButton<\/code> is set to <code>Regular<\/code> or <code>Split<\/code> mode.\n\nDefault value is <code>Regular<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.MenuButtonMode"},"setButtonMode":{"!description":"Sets the <code>buttonМode<\/code> of the control.","!static":false,"!category":"function","!type":"fn(sMode: sap.m.MenuButtonMode) -> MenuButton","parameters":{"sMode":"type: sap.m.MenuButtonMode, description: The new button mode"}},"fireDefaultAction":{"!description":"Fires event <code>defaultAction<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.MenuButton","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nSpecifies the element's text directionality with enumerated options.\nBy default, the control inherits text direction from the DOM.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"}},"sap.m.ButtonType":{"!description":"Different types for a button (predefined types)","Reject":{"!description":"reject style (red button)","!category":"enum","!type":"String"},"!module":"sap/m/library","Accept":{"!description":"accept type (blue button)","!category":"enum","!type":"String"},"Emphasized":{"!description":"emphasized type","!category":"enum","!type":"String"},"Transparent":{"!description":"transparent type","!category":"enum","!type":"String"},"Unstyled":{"!description":"Unstyled type (no styling)","!category":"enum","!type":"String"},"Back":{"!description":"back type (back navigation button for header)","!category":"enum","!type":"String"},"!category":"static class","Up":{"!description":"up type (up navigation button for header)","!category":"enum","!type":"String"},"Default":{"!description":"default type (no special styling)","!category":"enum","!type":"String"}},"sap.m.GenericTileMode":{"!description":"Defines the mode of GenericTile.","!module":"sap/m/library","ContentMode":{"!description":"Default mode (Two lines for the header and one line for the subtitle).","!category":"enum","!type":"String"},"!category":"static class","HeaderMode":{"!description":"Header mode (Four lines for the header and one line for the subtitle).","!category":"enum","!type":"String"}},"sap.m.ListSeparators":{"!description":"Defines which separator style will be applied for the items.","All":{"!description":"Separators between the items including the last and the first one.","!category":"enum","!type":"String"},"!module":"sap/m/library","!category":"static class","None":{"!description":"No item separators.","!category":"enum","!type":"String"},"Inner":{"!description":"Separators between the items.\n<b>Note:<\/b> This enumeration depends on the theme.","!category":"enum","!type":"String"}},"sap.m.GrowingList_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.GrowingList with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.List.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.GrowingList"},"sap.m.semantic.SortSelect_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.SortSelect with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticSelect.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.SortSelect"},"sap.m.TabContainerItem":{"setName":{"!description":"Sets a new value for property <code>name<\/code>.\n\nDetermines the text to be displayed for the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.m.TabContainerItem","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"getName":{"!description":"Gets current value of property <code>name<\/code>.\n\nDetermines the text to be displayed for the item.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nThe content displayed for this item.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Element","!category":"class","fireItemPropertyChanged":{"!description":"Fires event <code>itemPropertyChanged<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>itemChanged<\/code> of type <code>sap.m.TabContainerItem<\/code>The item changed.<\/li>\n<li><code>propertyKey<\/code> of type <code>string<\/code>The key of the property.<\/li>\n<li><code>propertyValue<\/code> of type <code>mixed<\/code>The value of the property.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.TabContainerItem","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!constructorDescription":"Constructor for a new <code>TabContainerItem<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string (default: )<\/li>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getModified modified} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemPropertyChanged itemPropertyChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getModified":{"!description":"Gets current value of property <code>modified<\/code>.\n\nShows if a control is edited (default is false). Items that are marked as modified have a * symbol to indicate that they haven't been saved.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachItemPropertyChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>itemPropertyChanged<\/code> event of this <code>sap.m.TabContainerItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.TabContainerItem<\/code> itself.\n\nSends information that some of the properties have changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.TabContainerItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.TabContainerItem<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.TabContainerItem"},"setKey":{"!description":"Sets a new value for property <code>key<\/code>.\n\nDetermines the name of the item. Can be used as input for subsequent actions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sKey: String) -> sap.m.TabContainerItem","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"}},"!description":"An item to be used in a TabContainer.","getKey":{"!description":"Gets current value of property <code>key<\/code>.\n\nDetermines the name of the item. Can be used as input for subsequent actions.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.TabContainerItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setModified":{"!description":"Sets a new value for property <code>modified<\/code>.\n\nShows if a control is edited (default is false). Items that are marked as modified have a * symbol to indicate that they haven't been saved.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bModified: Boolean) -> sap.m.TabContainerItem","parameters":{"bModified":"type: boolean, description: New value for property <code>modified<\/code>"}},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.m.TabContainerItem","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"detachItemPropertyChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>itemPropertyChanged<\/code> event of this <code>sap.m.TabContainerItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.TabContainerItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.m.TabContainerItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/m/TabContainerItem","!helpDescription":"An item to be used in a TabContainer.","setProperty":{"!description":"Overwrites the method in order to suppress invalidation for some properties.","!static":false,"!category":"function","!type":"fn(sName: String, vValue: Boolean | String | Object, bSuppressInvalidation: Boolean) -> sap.m.TabContainerItem","parameters":{"bSuppressInvalidation":"type: boolean, description: Whether invalidation to be suppressed","sName":"type: string, description: Property name to be set","vValue":"type: boolean|string|object, description: Property value to be set"}},"insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.m.TabContainerItem","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}}},"sap.m.VBox":{"!description":"The VBox control builds the container for a vertical flexible box layout. VBox is a convenience control as it is just a specialized FlexBox control.\n\nBrowser support:\nThis control is not supported in Internet Explorer 9!","extend":{"!description":"Creates a new subclass of class sap.m.VBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.FlexBox.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.VBox.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new VBox.","!module":"sap/m/VBox","!helpDescription":"The VBox control builds the container for a vertical flexible box layout. VBox is a convenience control as it is just a specialized FlexBox control.\n\nBrowser support:\nThis control is not supported in Internet Explorer 9!","!proto":"sap.m.FlexBox","!category":"class"},"sap.m.RatingIndicator_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.RatingIndicator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.RatingIndicator"},"sap.m.TabStripSelectList":{"!description":"The <code>sap.m.TabStripSelectList<\/code> displays a list of items that allows the user to select an item.","extend":{"!description":"Creates a new subclass of class sap.m.TabStripSelectList with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.SelectList.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"init":{"!description":"Initializes the control.","!static":false,"!category":"function","!type":"fn()"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.TabStripSelectList.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>TabStripSelectList<\/code>.","!module":"sap/m/TabStripSelectList","!helpDescription":"The <code>sap.m.TabStripSelectList<\/code> displays a list of items that allows the user to select an item.","!proto":"sap.m.SelectList","!category":"class"},"sap.m.TablePersoDialog":{"getPersoDialogFor":{"!description":"ID of the element which is the current target of the association <code>persoDialogFor<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Table"},"setPersoService":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.30.1 This aggregate is no longer used. It collided with the TablePersoController's\npersoService reference<br>Sets the aggregated <code>persoService<\/code>.","!static":false,"!category":"function","!type":"fn(oPersoService: Object) -> sap.m.TablePersoDialog","parameters":{"oPersoService":"type: Object, description: The persoService to set"}},"getPersoService":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.30.1 This aggregate is no longer used. It collided with the TablePersoController's\npersoService reference<br>Gets content of aggregation <code>persoService<\/code>.\n\nRefers to the service for reading and writing the personalization.","!static":false,"!category":"function","!type":"fn() -> Object"},"setHasGrouping":{"!description":"Setter to turn on/ switch off TablePersoDialog's grouping mode.","!static":false,"!category":"function","!type":"fn(bHasGrouping: Boolean) -> TablePersoDialog","parameters":{"bHasGrouping":"type: boolean, description: groping mode on or off."}},"getContentHeight":{"!description":"Gets current value of property <code>contentHeight<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!proto":"sap.ui.base.ManagedObject","attachConfirm":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>confirm<\/code> event of this <code>sap.m.TablePersoDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.TablePersoDialog<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.TablePersoDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.TablePersoDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!category":"class","getShowSelectAll":{"!description":"Gets current value of property <code>showSelectAll<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getInitialColumnState":{"!description":"Gets current value of property <code>initialColumnState<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"setInitialColumnState":{"!description":"Sets a new value for property <code>initialColumnState<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oInitialColumnState: Object) -> sap.m.TablePersoDialog","parameters":{"oInitialColumnState":"type: object, description: New value for property <code>initialColumnState<\/code>"}},"fireConfirm":{"!description":"Fires event <code>confirm<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.TablePersoDialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getColumnInfoCallback":{"!description":"Gets current value of property <code>columnInfoCallback<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"getContentWidth":{"!description":"Gets current value of property <code>contentWidth<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setColumnInfoCallback":{"!description":"Sets a new value for property <code>columnInfoCallback<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oColumnInfoCallback: Object) -> sap.m.TablePersoDialog","parameters":{"oColumnInfoCallback":"type: object, description: New value for property <code>columnInfoCallback<\/code>"}},"!constructorDescription":"The TablePersoDialog can be used to display and allow modification of personalization settings relating to a Table. It displays the columns of the table that it refers to by using\n<ul><li>The result of calling sap.m.TablePersoProvider's 'getCaption' callback if it is implemented and delivers a non-null value for a column<\/li>\n<li>the column header control's 'text' property if no caption property is available<\/li>\n<li>the column header control's 'title' property if neither 'text' nor 'caption' property are available<\/li>\n<li>the column id is displayed as last fallback, if none of the above is at hand. In that case, a warning is logged. <\/li><\/ul>\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContentWidth contentWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getContentHeight contentHeight} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getPersoMap persoMap} : object<\/li>\n<li>{@link #getColumnInfoCallback columnInfoCallback} : object<\/li>\n<li>{@link #getInitialColumnState initialColumnState} : object<\/li>\n<li>{@link #getHasGrouping hasGrouping} : boolean<\/li>\n<li>{@link #getShowSelectAll showSelectAll} : boolean<\/li>\n<li>{@link #getShowResetAll showResetAll} : boolean<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPersoService persoService} : Object<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:confirm confirm} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","setContentWidth":{"!description":"Sets a new value for property <code>contentWidth<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sContentWidth: sap.ui.core.CSSSize) -> sap.m.TablePersoDialog","parameters":{"sContentWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>contentWidth<\/code>"}},"setPersoMap":{"!description":"Sets a new value for property <code>persoMap<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oPersoMap: Object) -> sap.m.TablePersoDialog","parameters":{"oPersoMap":"type: object, description: New value for property <code>persoMap<\/code>"}},"getPersoMap":{"!description":"Gets current value of property <code>persoMap<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"setContentHeight":{"!description":"Sets a new value for property <code>contentHeight<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sContentHeight: sap.ui.core.CSSSize) -> sap.m.TablePersoDialog","parameters":{"sContentHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>contentHeight<\/code>"}},"getHasGrouping":{"!description":"Gets current value of property <code>hasGrouping<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireCancel":{"!description":"Fires event <code>cancel<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.TablePersoDialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!description":"Table Personalization Dialog","setShowResetAll":{"!description":"Setter to show/hide TablePersoDialog's 'Undo Personalization' button.","!static":false,"!category":"function","!type":"fn(bShowResetAll: Boolean) -> TablePersoDialog","parameters":{"bShowResetAll":"type: boolean, description: 'undo Personalization' button visible or not."}},"init":{"!description":"Initializes the TablePersoDialog instance after creation.","!static":false,"!category":"function","!type":"fn()"},"detachCancel":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>cancel<\/code> event of this <code>sap.m.TablePersoDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.TablePersoDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.TablePersoDialog.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"retrievePersonalizations":{"!description":"Returns the personalizations made. Currently supports\na 'columns' property which holds an array of settings,\none element per column in the associated table. The element\ncontains column-specific information as follows: id: column id;\norder: new order; text: the column's header text that was displayed\nin the dialog; visible: visibility (true or false).","!static":false,"!category":"function","!type":"fn() -> Object"},"getShowResetAll":{"!description":"Gets current value of property <code>showResetAll<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.m.TablePersoDialog with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setShowSelectAll":{"!description":"Setter to show/hide TablePersoDialog's 'selectAll' checkbox.","!static":false,"!category":"function","!type":"fn(bShowSelectAll: Boolean) -> TablePersoDialog","parameters":{"bShowSelectAll":"type: boolean, description: selectAll checkbox visible or not."}},"!module":"sap/m/TablePersoDialog","!helpDescription":"Table Personalization Dialog","destroyPersoService":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.30.1 This aggregate is no longer used. It collided with the TablePersoController's\npersoService reference<br>Destroys the persoService in the aggregation <code>persoService<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.TablePersoDialog"},"detachConfirm":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>confirm<\/code> event of this <code>sap.m.TablePersoDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.TablePersoDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachCancel":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>cancel<\/code> event of this <code>sap.m.TablePersoDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.TablePersoDialog<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.TablePersoDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.TablePersoDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"open":{"!description":"Sets the content of the dialog, being list items representing\nthe associated table's column settings, and opens the dialog","!static":false,"!category":"function","!type":"fn()"},"setPersoDialogFor":{"!description":"Sets the associated <code>persoDialogFor<\/code>.","!static":false,"!category":"function","!type":"fn(oPersoDialogFor: sap.m.Table) -> sap.m.TablePersoDialog","parameters":{"oPersoDialogFor":"type: sap.m.Table, description: Id of an element which becomes the new target of this persoDialogFor association; alternatively, an element instance may be given"}}},"sap.m.semantic.SemanticButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.SemanticButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticControl.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.SemanticButton"},"sap.m.FrameType":{"!description":"Enum for possible frame size types for sap.m.DynamicContent and sap.m.GenricTile control.","Auto":{"!description":"The Auto frame type that adjusts the size of the control to the content.","!category":"enum","!type":"String"},"!module":"sap/m/library","OneByOne":{"!description":"The 1x1 frame type.","!category":"enum","!type":"String"},"!category":"static class","TwoThirds":{"!description":"The 2/3 frame type.","!category":"enum","!type":"String"},"TwoByOne":{"!description":"The 2x1 frame type.","!category":"enum","!type":"String"}},"sap.m.ScrollContainer":{"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nThe content of the ScrollContainer.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe width of the ScrollContainer.\nIf not set, it consumes the complete available width, behaving like normal HTML block elements. If only vertical scrolling is enabled, make sure the content always fits or wraps.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nThe height of the ScrollContainer.\nBy default the height equals the content height. If only horizontal scrolling is used, do not set the height or make sure the height is always larger than the height of the content.\n\nNote that when a percentage is given, for the height to work as expected, the height of the surrounding container must be defined.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new ScrollContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getHorizontal horizontal} : boolean (default: true)<\/li>\n<li>{@link #getVertical vertical} : boolean (default: false)<\/li>\n<li>{@link #getFocusable focusable} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ScrollContainer"},"!description":"The ScrollContainer is a control that can display arbitrary content within a limited screen area and provides touch scrolling to make all content accessible.\n\nNote that it is not recommended to have nested scrolling areas that scroll into the same direction (e.g. a ScrollContainer that scrolls vertically inside a Page control with scrolling enabled). This is currently not considered a valid use-case of a good UI and the behavior will feel wrong.","getMetadata":{"!description":"Returns a metadata object for class sap.m.ScrollContainer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setFocusable":{"!description":"Sets a new value for property <code>focusable<\/code>.\n\nWhether the scroll container can be focused.\n\nNote that it should be set to \"true\" when there are no focusable elements inside or when keyboard interaction requires an additional tab stop on the container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFocusable: Boolean) -> sap.m.ScrollContainer","parameters":{"bFocusable":"type: boolean, description: New value for property <code>focusable<\/code>"}},"scrollToElement":{"!description":"Scrolls to an element(DOM or sap.ui.core.Element) within the page if the element is rendered.","!static":false,"!category":"function","!type":"fn(element: HTMLElement | sap.ui.core.Element, time?: Number) -> sap.m.ScrollContainer","parameters":{"time":"type: int, description: The duration of animated scrolling. To scroll immediately without animation, give 0 as value or leave it default.","element":"type: HTMLElement|sap.ui.core.Element, description: The element to which should be scrolled."}},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.m.ScrollContainer","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"getHorizontal":{"!description":"Gets current value of property <code>horizontal<\/code>.\n\nWhether horizontal scrolling should be possible.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nThe height of the ScrollContainer.\nBy default the height equals the content height. If only horizontal scrolling is used, do not set the height or make sure the height is always larger than the height of the content.\n\nNote that when a percentage is given, for the height to work as expected, the height of the surrounding container must be defined.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.m.ScrollContainer","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe width of the ScrollContainer.\nIf not set, it consumes the complete available width, behaving like normal HTML block elements. If only vertical scrolling is enabled, make sure the content always fits or wraps.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.ScrollContainer","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"scrollTo":{"!description":"Scrolls to the given position.\nWhen called while the control is not rendered (yet), the scrolling position is still applied, but there is no animation.","!static":false,"!category":"function","!type":"fn(x: Number, y: Number, time: Number) -> sap.m.ScrollContainer","parameters":{"x":"type: int, description: The horizontal pixel position to scroll to.\n        Scrolling to the right happens with positive values. In right-to-left mode scrolling starts at the right side and higher values scroll to the left.\n        If only vertical scrolling is enabled, give 0 as value.","y":"type: int, description: The vertical pixel position to scroll to.\n        Scrolling down happens with positive values.\n        If only horizontal scrolling is enabled, give 0 as value.","time":"type: int, description: The duration of animated scrolling.\n        To scroll immediately without animation, give 0 as value. 0 is also the default value, when this optional parameter is omitted."}},"extend":{"!description":"Creates a new subclass of class sap.m.ScrollContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/m/ScrollContainer","!helpDescription":"The ScrollContainer is a control that can display arbitrary content within a limited screen area and provides touch scrolling to make all content accessible.\n\nNote that it is not recommended to have nested scrolling areas that scroll into the same direction (e.g. a ScrollContainer that scrolls vertically inside a Page control with scrolling enabled). This is currently not considered a valid use-case of a good UI and the behavior will feel wrong.","setVertical":{"!description":"Sets a new value for property <code>vertical<\/code>.\n\nWhether vertical scrolling should be possible.\n\nNote that this is off by default because typically a Page is used as fullscreen element which can handle vertical scrolling. If this is not the case and vertical scrolling is required, this flag needs to be set to \"true\".\nImportant: it is not supported to have nested controls that both enable scrolling into the same dimension.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bVertical: Boolean) -> sap.m.ScrollContainer","parameters":{"bVertical":"type: boolean, description: New value for property <code>vertical<\/code>"}},"getFocusable":{"!description":"Gets current value of property <code>focusable<\/code>.\n\nWhether the scroll container can be focused.\n\nNote that it should be set to \"true\" when there are no focusable elements inside or when keyboard interaction requires an additional tab stop on the container.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getVertical":{"!description":"Gets current value of property <code>vertical<\/code>.\n\nWhether vertical scrolling should be possible.\n\nNote that this is off by default because typically a Page is used as fullscreen element which can handle vertical scrolling. If this is not the case and vertical scrolling is required, this flag needs to be set to \"true\".\nImportant: it is not supported to have nested controls that both enable scrolling into the same dimension.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.m.ScrollContainer","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}},"setHorizontal":{"!description":"Sets a new value for property <code>horizontal<\/code>.\n\nWhether horizontal scrolling should be possible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHorizontal: Boolean) -> sap.m.ScrollContainer","parameters":{"bHorizontal":"type: boolean, description: New value for property <code>horizontal<\/code>"}}},"sap.m.RangeSlider":{"!description":"A range slider is a user interface control that enables the user\nto select a value range in a predifined numerical interval.","extend":{"!description":"Creates a new subclass of class sap.m.RangeSlider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Slider.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.RangeSlider.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new <code>sap.m.RangeSlider<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getRange range} : float[] (default: ???)<\/li>\n<li>{@link #getInputsAsTooltips inputsAsTooltips} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Slider#constructor sap.m.Slider}\ncan be used as well.","!module":"sap/m/RangeSlider","getInputsAsTooltips":{"!description":"Gets current value of property <code>inputsAsTooltips<\/code>.\n\nIndicates whether an Input fields should be used as tooltips for the handles.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setRange":{"!description":"Sets a new value for property <code>range<\/code>.\n\nDetermines the range in which the user can select values.\n\nIf the value is lower/higher than the allowed minimum/maximum,\na warning message will be output to the console.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>???<\/code>.","!static":false,"!category":"function","!type":"fn(sRange: [Number]) -> sap.m.RangeSlider","parameters":{"sRange":"type: float[], description: New value for property <code>range<\/code>"}},"!helpDescription":"A range slider is a user interface control that enables the user\nto select a value range in a predifined numerical interval.","getRange":{"!description":"Gets current value of property <code>range<\/code>.\n\nDetermines the range in which the user can select values.\n\nIf the value is lower/higher than the allowed minimum/maximum,\na warning message will be output to the console.\n\nDefault value is <code>???<\/code>.","!static":false,"!category":"function","!type":"fn() -> [Number]"},"!proto":"sap.m.Slider","!category":"class","setInputsAsTooltips":{"!description":"Sets a new value for property <code>inputsAsTooltips<\/code>.\n\nIndicates whether an Input fields should be used as tooltips for the handles.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bInputsAsTooltips: Boolean) -> sap.m.RangeSlider","parameters":{"bInputsAsTooltips":"type: boolean, description: New value for property <code>inputsAsTooltips<\/code>"}}},"sap.m.ObjectListItem":{"getNumberUnit":{"!description":"Gets current value of property <code>numberUnit<\/code>.\n\nDefines the number units qualifier of the ObjectListItem.","!static":false,"!category":"function","!type":"fn() -> String"},"setNumberState":{"!description":"Sets a new value for property <code>numberState<\/code>.\n\nDefines the ObjectListItem number and numberUnit value state.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sNumberState: sap.ui.core.ValueState) -> sap.m.ObjectListItem","parameters":{"sNumberState":"type: sap.ui.core.ValueState, description: New value for property <code>numberState<\/code>"}},"getSecondStatus":{"!description":"Gets content of aggregation <code>secondStatus<\/code>.\n\nSecond status text field displayed on the right side of the attributes.","!static":false,"!category":"function","!type":"fn() -> sap.m.ObjectStatus"},"setIntro":{"!description":"Sets a new value for property <code>intro<\/code>.\n\nDefines the introductory text for the ObjectListItem.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIntro: String) -> sap.m.ObjectListItem","parameters":{"sIntro":"type: string, description: New value for property <code>intro<\/code>"}},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nDefines the ObjectListItem title.","!static":false,"!category":"function","!type":"fn() -> String"},"setActiveIcon":{"!description":"Sets a new value for property <code>activeIcon<\/code>.\n\nIcon displayed when the ObjectListItem is active.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sActiveIcon: sap.ui.core.URI) -> sap.m.ObjectListItem","parameters":{"sActiveIcon":"type: sap.ui.core.URI, description: New value for property <code>activeIcon<\/code>"}},"indexOfAttribute":{"!description":"Checks for the provided <code>sap.m.ObjectAttribute<\/code> in the aggregation <code>attributes<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAttribute: sap.m.ObjectAttribute) -> Number","parameters":{"oAttribute":"type: sap.m.ObjectAttribute, description: The attribute whose index is looked for"}},"getActiveIcon":{"!description":"Gets current value of property <code>activeIcon<\/code>.\n\nIcon displayed when the ObjectListItem is active.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"setShowMarkers":{"!description":"Sets a new value for property <code>showMarkers<\/code>.\n\nIf set to true, the ObjectListItem can be marked with icons such as favorite and flag.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bShowMarkers: Boolean) -> sap.m.ObjectListItem","parameters":{"bShowMarkers":"type: boolean, description: New value for property <code>showMarkers<\/code>"}},"destroyAttributes":{"!description":"Destroys all the attributes in the aggregation <code>attributes<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ObjectListItem"},"!description":"ObjectListItem is a display control that provides summary information about an object as a list item. The ObjectListItem title is the key identifier of the object. Additional text and icons can be used to further distinguish it from other objects. Attributes and statuses can be used to provide additional meaning about the object to the user.","setFirstStatus":{"!description":"Sets the aggregated <code>firstStatus<\/code>.","!static":false,"!category":"function","!type":"fn(oFirstStatus: sap.m.ObjectStatus) -> sap.m.ObjectListItem","parameters":{"oFirstStatus":"type: sap.m.ObjectStatus, description: The firstStatus to set"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.ObjectListItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAttributes":{"!description":"Gets content of aggregation <code>attributes<\/code>.\n\nList of attributes displayed below the title to the left of the status fields.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ObjectAttribute]"},"destroyFirstStatus":{"!description":"Destroys the firstStatus in the aggregation <code>firstStatus<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ObjectListItem"},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nDefines the ObjectListItem title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.ObjectListItem","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"setMarkLocked":{"!description":"Sets a new value for property <code>markLocked<\/code>.\n\nSets the locked state of the ObjectListItem.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bMarkLocked: Boolean) -> sap.m.ObjectListItem","parameters":{"bMarkLocked":"type: boolean, description: New value for property <code>markLocked<\/code>"}},"getIntro":{"!description":"Gets current value of property <code>intro<\/code>.\n\nDefines the introductory text for the ObjectListItem.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.m.ObjectListItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nObjectListItem icon displayed to the left of the title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.m.ObjectListItem","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"setNumberTextDirection":{"!description":"Sets a new value for property <code>numberTextDirection<\/code>.\n\nDetermines the text direction of the item number.\nAvailable options for the number direction are LTR (left-to-right) and RTL (right-to-left).\nBy default the item number inherits the text direction from its parent.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sNumberTextDirection: sap.ui.core.TextDirection) -> sap.m.ObjectListItem","parameters":{"sNumberTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>numberTextDirection<\/code>"}},"setSecondStatus":{"!description":"Sets the aggregated <code>secondStatus<\/code>.","!static":false,"!category":"function","!type":"fn(oSecondStatus: sap.m.ObjectStatus) -> sap.m.ObjectListItem","parameters":{"oSecondStatus":"type: sap.m.ObjectStatus, description: The secondStatus to set"}},"!module":"sap/m/ObjectListItem","!helpDescription":"ObjectListItem is a display control that provides summary information about an object as a list item. The ObjectListItem title is the key identifier of the object. Additional text and icons can be used to further distinguish it from other objects. Attributes and statuses can be used to provide additional meaning about the object to the user.","getNumberState":{"!description":"Gets current value of property <code>numberState<\/code>.\n\nDefines the ObjectListItem number and numberUnit value state.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"getFirstStatus":{"!description":"Gets content of aggregation <code>firstStatus<\/code>.\n\nFirst status text field displayed on the right side of the attributes.","!static":false,"!category":"function","!type":"fn() -> sap.m.ObjectStatus"},"destroySecondStatus":{"!description":"Destroys the secondStatus in the aggregation <code>secondStatus<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ObjectListItem"},"setIntroTextDirection":{"!description":"Sets a new value for property <code>introTextDirection<\/code>.\n\nDetermines the text direction of the item intro.\nAvailable options for the intro direction are LTR (left-to-right) and RTL (right-to-left).\nBy default the item intro inherits the text direction from its parent.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sIntroTextDirection: sap.ui.core.TextDirection) -> sap.m.ObjectListItem","parameters":{"sIntroTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>introTextDirection<\/code>"}},"getTitleTextDirection":{"!description":"Gets current value of property <code>titleTextDirection<\/code>.\n\nDetermines the text direction of the item title.\nAvailable options for the title direction are LTR (left-to-right) and RTL (right-to-left).\nBy default the item title inherits the text direction from its parent.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"getMarkLocked":{"!description":"Gets current value of property <code>markLocked<\/code>.\n\nSets the locked state of the ObjectListItem.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setTitleTextDirection":{"!description":"Sets a new value for property <code>titleTextDirection<\/code>.\n\nDetermines the text direction of the item title.\nAvailable options for the title direction are LTR (left-to-right) and RTL (right-to-left).\nBy default the item title inherits the text direction from its parent.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTitleTextDirection: sap.ui.core.TextDirection) -> sap.m.ObjectListItem","parameters":{"sTitleTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>titleTextDirection<\/code>"}},"setMarkFlagged":{"!description":"Sets a new value for property <code>markFlagged<\/code>.\n\nSets the flagged state for the ObjectListItem.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bMarkFlagged: Boolean) -> sap.m.ObjectListItem","parameters":{"bMarkFlagged":"type: boolean, description: New value for property <code>markFlagged<\/code>"}},"!proto":"sap.m.ListItemBase","!category":"class","getIconDensityAware":{"!description":"Gets current value of property <code>iconDensityAware<\/code>.\n\nBy default, this is set to true but then one or more requests are sent trying to get the density perfect version of image (in case this version of image dоesn't exist on the server).\n\nIf bandwidth is key for the application, set this value to false.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getNumber":{"!description":"Gets current value of property <code>number<\/code>.\n\nDefines the ObjectListItem number.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new ObjectListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getNumber number} : string<\/li>\n<li>{@link #getNumberUnit numberUnit} : string<\/li>\n<li>{@link #getIntro intro} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getActiveIcon activeIcon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getMarkFavorite markFavorite} : boolean<\/li>\n<li>{@link #getMarkFlagged markFlagged} : boolean<\/li>\n<li>{@link #getShowMarkers showMarkers} : boolean<\/li>\n<li>{@link #getNumberState numberState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getTitleTextDirection titleTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getIntroTextDirection introTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getNumberTextDirection numberTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getMarkLocked markLocked} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAttributes attributes} : sap.m.ObjectAttribute[] (default)<\/li>\n<li>{@link #getFirstStatus firstStatus} : sap.m.ObjectStatus<\/li>\n<li>{@link #getSecondStatus secondStatus} : sap.m.ObjectStatus<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well.","setIconDensityAware":{"!description":"Sets a new value for property <code>iconDensityAware<\/code>.\n\nBy default, this is set to true but then one or more requests are sent trying to get the density perfect version of image (in case this version of image dоesn't exist on the server).\n\nIf bandwidth is key for the application, set this value to false.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bIconDensityAware: Boolean) -> sap.m.ObjectListItem","parameters":{"bIconDensityAware":"type: boolean, description: New value for property <code>iconDensityAware<\/code>"}},"setMarkFavorite":{"!description":"Sets a new value for property <code>markFavorite<\/code>.\n\nSets the favorite state for the ObjectListItem.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bMarkFavorite: Boolean) -> sap.m.ObjectListItem","parameters":{"bMarkFavorite":"type: boolean, description: New value for property <code>markFavorite<\/code>"}},"removeAttribute":{"!description":"Removes a attribute from the aggregation <code>attributes<\/code>.","!static":false,"!category":"function","!type":"fn(vAttribute: Number | String | sap.m.ObjectAttribute) -> sap.m.ObjectAttribute","parameters":{"vAttribute":"type: int|string|sap.m.ObjectAttribute, description: The attributeto remove or its index or id"}},"getNumberTextDirection":{"!description":"Gets current value of property <code>numberTextDirection<\/code>.\n\nDetermines the text direction of the item number.\nAvailable options for the number direction are LTR (left-to-right) and RTL (right-to-left).\nBy default the item number inherits the text direction from its parent.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"removeAllAttributes":{"!description":"Removes all the controls from the aggregation <code>attributes<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ObjectAttribute]"},"setNumberUnit":{"!description":"Sets a new value for property <code>numberUnit<\/code>.\n\nDefines the number units qualifier of the ObjectListItem.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNumberUnit: String) -> sap.m.ObjectListItem","parameters":{"sNumberUnit":"type: string, description: New value for property <code>numberUnit<\/code>"}},"setNumber":{"!description":"Sets a new value for property <code>number<\/code>.\n\nDefines the ObjectListItem number.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNumber: String) -> sap.m.ObjectListItem","parameters":{"sNumber":"type: string, description: New value for property <code>number<\/code>"}},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nObjectListItem icon displayed to the left of the title.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"addAttribute":{"!description":"Adds some attribute to the aggregation <code>attributes<\/code>.","!static":false,"!category":"function","!type":"fn(oAttribute: sap.m.ObjectAttribute) -> sap.m.ObjectListItem","parameters":{"oAttribute":"type: sap.m.ObjectAttribute, description: the attribute to add; if empty, nothing is inserted"}},"getIntroTextDirection":{"!description":"Gets current value of property <code>introTextDirection<\/code>.\n\nDetermines the text direction of the item intro.\nAvailable options for the intro direction are LTR (left-to-right) and RTL (right-to-left).\nBy default the item intro inherits the text direction from its parent.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"insertAttribute":{"!description":"Inserts a attribute into the aggregation <code>attributes<\/code>.","!static":false,"!category":"function","!type":"fn(oAttribute: sap.m.ObjectAttribute, iIndex: Number) -> sap.m.ObjectListItem","parameters":{"oAttribute":"type: sap.m.ObjectAttribute, description: the attribute to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the attribute should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the attribute is inserted at position 0; for a value\n             greater than the current size of the aggregation, the attribute is inserted at\n             the last position"}},"getMarkFavorite":{"!description":"Gets current value of property <code>markFavorite<\/code>.\n\nSets the favorite state for the ObjectListItem.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowMarkers":{"!description":"Gets current value of property <code>showMarkers<\/code>.\n\nIf set to true, the ObjectListItem can be marked with icons such as favorite and flag.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMarkFlagged":{"!description":"Gets current value of property <code>markFlagged<\/code>.\n\nSets the flagged state for the ObjectListItem.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.m.ResponsivePopover":{"openBy":{"!description":"Opens the ResponsivePopover. The ResponsivePopover is positioned relatively to the control parameter on tablet or desktop and is full screen on phone. Therefore the control parameter is only used on tablet or desktop and is ignored on phone.","!static":false,"!category":"function","!type":"fn(oControl: Object) -> sap.ui.core.Control","parameters":{"oControl":"type: object, description: \n        When this control is displayed on tablet or desktop, the ResponsivePopover is positioned relatively to this control."}},"attachAfterClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterClose<\/code> event of this <code>sap.m.ResponsivePopover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ResponsivePopover<\/code> itself.\n\nEvent is fired after popover or dialog is closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ResponsivePopover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ResponsivePopover<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getContentHeight":{"!description":"Gets current value of property <code>contentHeight<\/code>.\n\nThis property is supported by both variants. Please see the documentation on sap.m.Popover#contentHeight and sap.m.Dialog#contentHeight","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setHorizontalScrolling":{"!description":"Sets a new value for property <code>horizontalScrolling<\/code>.\n\nThis property is supported by both variants. Please see the documentation on sap.m.Popover#horizontalScrolling and sap.m.Dialog#horizontalScrolling\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bHorizontalScrolling: Boolean) -> sap.m.ResponsivePopover","parameters":{"bHorizontalScrolling":"type: boolean, description: New value for property <code>horizontalScrolling<\/code>"}},"setInitialFocus":{"!description":"Sets the associated <code>initialFocus<\/code>.","!static":false,"!category":"function","!type":"fn(oInitialFocus: sap.ui.core.Control) -> sap.m.ResponsivePopover","parameters":{"oInitialFocus":"type: sap.ui.core.Control, description: Id of an element which becomes the new target of this initialFocus association; alternatively, an element instance may be given"}},"setSubHeader":{"!description":"Sets the aggregated <code>subHeader<\/code>.","!static":false,"!category":"function","!type":"fn(oSubHeader: sap.m.IBar) -> sap.m.ResponsivePopover","parameters":{"oSubHeader":"type: sap.m.IBar, description: The subHeader to set"}},"detachAfterClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterClose<\/code> event of this <code>sap.m.ResponsivePopover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ResponsivePopover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setOffsetX":{"!description":"Sets a new value for property <code>offsetX<\/code>.\n\nThis property only takes effect on desktop or tablet. Please see the documentation sap.m.Popover#offsetX.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iOffsetX: Number) -> sap.m.ResponsivePopover","parameters":{"iOffsetX":"type: int, description: New value for property <code>offsetX<\/code>"}},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nThis property is supported by both variants. Please see the documentation on sap.m.Popover#title and sap.m.Dialog#title","!static":false,"!category":"function","!type":"fn() -> String"},"setEndButton":{"!description":"Setter for endButton aggregation","!static":false,"!category":"function","!type":"fn(oButton: sap.m.Button) -> sap.m.ResponsivePopover","parameters":{"oButton":"type: sap.m.Button, description: The button that will be set as an aggregation"}},"fireBeforeOpen":{"!description":"Fires event <code>beforeOpen<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>openBy<\/code> of type <code>sap.ui.core.Control<\/code>This parameter contains the control which is passed as the parameter when calling openBy method. When runs on the phone, this parameter is undefined.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ResponsivePopover","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setContentWidth":{"!description":"Sets a new value for property <code>contentWidth<\/code>.\n\nThis property is supported by both variants. Please see the documentation on sap.m.Popover#contentWidth and sap.m.Dialog#contentWidth\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sContentWidth: sap.ui.core.CSSSize) -> sap.m.ResponsivePopover","parameters":{"sContentWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>contentWidth<\/code>"}},"setOffsetY":{"!description":"Sets a new value for property <code>offsetY<\/code>.\n\nThis property only takes effect on desktop or tablet. Please see the documentation sap.m.Popover#offsetY.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iOffsetY: Number) -> sap.m.ResponsivePopover","parameters":{"iOffsetY":"type: int, description: New value for property <code>offsetY<\/code>"}},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setVerticalScrolling":{"!description":"Sets a new value for property <code>verticalScrolling<\/code>.\n\nThis property is supported by both variants. Please see the documentation on sap.m.Popover#verticalScrolling and sap.m.Dialog#verticalScrolling\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVerticalScrolling: Boolean) -> sap.m.ResponsivePopover","parameters":{"bVerticalScrolling":"type: boolean, description: New value for property <code>verticalScrolling<\/code>"}},"setContentHeight":{"!description":"Sets a new value for property <code>contentHeight<\/code>.\n\nThis property is supported by both variants. Please see the documentation on sap.m.Popover#contentHeight and sap.m.Dialog#contentHeight\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sContentHeight: sap.ui.core.CSSSize) -> sap.m.ResponsivePopover","parameters":{"sContentHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>contentHeight<\/code>"}},"setShowHeader":{"!description":"Sets a new value for property <code>showHeader<\/code>.\n\nThis property is supported by both variants. Please see the documentation on sap.m.Popover#showHeader and sap.m.Dialog#showHeader\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowHeader: Boolean) -> sap.m.ResponsivePopover","parameters":{"bShowHeader":"type: boolean, description: New value for property <code>showHeader<\/code>"}},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ResponsivePopover"},"!description":"This control acts responsively to the type of device. It acts as a sap.m.Popover on desktop and tablet, while on phone it acts as a sap.m.Dialog with stretch set to true.","getMetadata":{"!description":"Returns a metadata object for class sap.m.ResponsivePopover.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"fireAfterOpen":{"!description":"Fires event <code>afterOpen<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>openBy<\/code> of type <code>sap.ui.core.Control<\/code>This parameter contains the control which is passed as the parameter when calling openBy method. When runs on the phone, this parameter is undefined.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ResponsivePopover","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setBeginButton":{"!description":"Setter for beginButton aggregation","!static":false,"!category":"function","!type":"fn(oButton: sap.m.Button) -> sap.m.ResponsivePopover","parameters":{"oButton":"type: sap.m.Button, description: The button that will be set as an aggregation"}},"getModal":{"!description":"Gets current value of property <code>modal<\/code>.\n\nThis property only takes effect on desktop or tablet. Please see the documentation sap.m.Popover#modal.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachBeforeOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beforeOpen<\/code> event of this <code>sap.m.ResponsivePopover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ResponsivePopover<\/code> itself.\n\nEvent is fired before popover or dialog is open.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ResponsivePopover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ResponsivePopover<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nThis property is supported by both variants. Please see the documentation on sap.m.Popover#title and sap.m.Dialog#title\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.ResponsivePopover","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"getShowHeader":{"!description":"Gets current value of property <code>showHeader<\/code>.\n\nThis property is supported by both variants. Please see the documentation on sap.m.Popover#showHeader and sap.m.Dialog#showHeader\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"detachAfterOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterOpen<\/code> event of this <code>sap.m.ResponsivePopover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ResponsivePopover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.m.ResponsivePopover with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nThis property only takes effect  on phone. Please see the documentation sap.m.Dialog#icon.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.m.ResponsivePopover","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"isOpen":{"!description":"Checks whether the ResponsivePopover is currently open.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!module":"sap/m/ResponsivePopover","setModal":{"!description":"Sets a new value for property <code>modal<\/code>.\n\nThis property only takes effect on desktop or tablet. Please see the documentation sap.m.Popover#modal.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bModal: Boolean) -> sap.m.ResponsivePopover","parameters":{"bModal":"type: boolean, description: New value for property <code>modal<\/code>"}},"!helpDescription":"This control acts responsively to the type of device. It acts as a sap.m.Popover on desktop and tablet, while on phone it acts as a sap.m.Dialog with stretch set to true.","removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"getCustomHeader":{"!description":"Gets content of aggregation <code>customHeader<\/code>.\n\nCustomHeader is supported by both variants. Please see the documentation on sap.m.Popover#customHeader and sap.m.Dialog#customHeader","!static":false,"!category":"function","!type":"fn() -> sap.m.IBar"},"insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.m.ResponsivePopover","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}},"setPlacement":{"!description":"Sets a new value for property <code>placement<\/code>.\n\nThis property only takes effect on desktop or tablet. Please see the documentation sap.m.Popover#placement.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Right<\/code>.","!static":false,"!category":"function","!type":"fn(sPlacement: sap.m.PlacementType) -> sap.m.ResponsivePopover","parameters":{"sPlacement":"type: sap.m.PlacementType, description: New value for property <code>placement<\/code>"}},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getVerticalScrolling":{"!description":"Gets current value of property <code>verticalScrolling<\/code>.\n\nThis property is supported by both variants. Please see the documentation on sap.m.Popover#verticalScrolling and sap.m.Dialog#verticalScrolling\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nContent is supported by both variants. Please see the documentation on sap.m.Popover#content and sap.m.Dialog#content","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setShowCloseButton":{"!description":"Determines if the close button to the ResponsivePopover is shown or not. Works only when ResponsivePopover is used as a dialog","!static":false,"!category":"function","!type":"fn(bShowCloseButton: Boolean) -> sap.m.ResponsivePopover","parameters":{"bShowCloseButton":"type: boolean, description: Defines whether the close button is shown"}},"!proto":"sap.ui.core.Control","attachAfterOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterOpen<\/code> event of this <code>sap.m.ResponsivePopover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ResponsivePopover<\/code> itself.\n\nEvent is fired after popover or dialog is open.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ResponsivePopover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ResponsivePopover<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!category":"class","getInitialFocus":{"!description":"ID of the element which is the current target of the association <code>initialFocus<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"destroySubHeader":{"!description":"Destroys the subHeader in the aggregation <code>subHeader<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ResponsivePopover"},"getResizable":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireBeforeClose":{"!description":"Fires event <code>beforeClose<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>openBy<\/code> of type <code>sap.ui.core.Control<\/code>This parameter contains the control which is passed as the parameter when calling openBy method. When runs on the phone, this parameter is undefined.<\/li>\n<li><code>origin<\/code> of type <code>sap.m.Button<\/code>This parameter contains the control which triggers the close of the ResponsivePopover. This parameter is undefined when runs on desktop or tablet.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ResponsivePopover","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getContentWidth":{"!description":"Gets current value of property <code>contentWidth<\/code>.\n\nThis property is supported by both variants. Please see the documentation on sap.m.Popover#contentWidth and sap.m.Dialog#contentWidth","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new ResponsivePopover.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPlacement placement} : sap.m.PlacementType (default: Right)<\/li>\n<li>{@link #getShowHeader showHeader} : boolean (default: true)<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getModal modal} : boolean<\/li>\n<li>{@link #getOffsetX offsetX} : int<\/li>\n<li>{@link #getOffsetY offsetY} : int<\/li>\n<li>{@link #getContentWidth contentWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getContentHeight contentHeight} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHorizontalScrolling horizontalScrolling} : boolean (default: true)<\/li>\n<li>{@link #getVerticalScrolling verticalScrolling} : boolean (default: true)<\/li>\n<li>{@link #getShowCloseButton showCloseButton} : boolean (default: true)<\/li>\n<li>{@link #getResizable resizable} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<li>{@link #getCustomHeader customHeader} : sap.m.IBar<\/li>\n<li>{@link #getSubHeader subHeader} : sap.m.IBar<\/li>\n<li>{@link #getBeginButton beginButton} : sap.m.Button<\/li>\n<li>{@link #getEndButton endButton} : sap.m.Button<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:beforeOpen beforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterOpen afterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeClose beforeClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterClose afterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getEndButton":{"!description":"Getter for endButton aggregation","!static":false,"!category":"function","!type":"fn() -> sap.m.Button"},"setCustomHeader":{"!description":"Sets the aggregated <code>customHeader<\/code>.","!static":false,"!category":"function","!type":"fn(oCustomHeader: sap.m.IBar) -> sap.m.ResponsivePopover","parameters":{"oCustomHeader":"type: sap.m.IBar, description: The customHeader to set"}},"close":{"!description":"Closes the ResponsivePopover.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"detachBeforeOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beforeOpen<\/code> event of this <code>sap.m.ResponsivePopover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ResponsivePopover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getHorizontalScrolling":{"!description":"Gets current value of property <code>horizontalScrolling<\/code>.\n\nThis property is supported by both variants. Please see the documentation on sap.m.Popover#horizontalScrolling and sap.m.Dialog#horizontalScrolling\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyCustomHeader":{"!description":"Destroys the customHeader in the aggregation <code>customHeader<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ResponsivePopover"},"getShowCloseButton":{"!description":"Gets current value of property <code>showCloseButton<\/code>.\n\nDetermines if a close button should be inserted into the dialog's header dynamically to close the dialog. This property only takes effect on phone.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyEndButton":{"!description":"Destroys the endButton in the aggregation <code>endButton<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ResponsivePopover"},"getPlacement":{"!description":"Gets current value of property <code>placement<\/code>.\n\nThis property only takes effect on desktop or tablet. Please see the documentation sap.m.Popover#placement.\n\nDefault value is <code>Right<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.PlacementType"},"getSubHeader":{"!description":"Gets content of aggregation <code>subHeader<\/code>.\n\nSubHeader is supported by both variants. Please see the documentation on sap.m.Popover#subHeader and sap.m.Dialog#subHeader","!static":false,"!category":"function","!type":"fn() -> sap.m.IBar"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"setResizable":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!static":false,"!category":"function","!type":"fn(bResizable: Boolean) -> sap.m.ResponsivePopover","parameters":{"bResizable":"type: boolean, description: New value for property <code>resizable<\/code>"}},"destroyBeginButton":{"!description":"Destroys the beginButton in the aggregation <code>beginButton<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ResponsivePopover"},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"detachBeforeClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beforeClose<\/code> event of this <code>sap.m.ResponsivePopover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ResponsivePopover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"addContent":{"!description":"Adds content to the ResponsivePopover","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control)","parameters":{"oControl":"type: sap.ui.core.Control, description: The control to be added to the content"}},"getOffsetX":{"!description":"Gets current value of property <code>offsetX<\/code>.\n\nThis property only takes effect on desktop or tablet. Please see the documentation sap.m.Popover#offsetX.","!static":false,"!category":"function","!type":"fn() -> Number"},"attachBeforeClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beforeClose<\/code> event of this <code>sap.m.ResponsivePopover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ResponsivePopover<\/code> itself.\n\nEvent is fired before popover or dialog is closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ResponsivePopover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ResponsivePopover<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nThis property only takes effect  on phone. Please see the documentation sap.m.Dialog#icon.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.m.ResponsivePopover","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"getBeginButton":{"!description":"Getter for beginButton aggregation","!static":false,"!category":"function","!type":"fn() -> sap.m.Button"},"getOffsetY":{"!description":"Gets current value of property <code>offsetY<\/code>.\n\nThis property only takes effect on desktop or tablet. Please see the documentation sap.m.Popover#offsetY.","!static":false,"!category":"function","!type":"fn() -> Number"},"fireAfterClose":{"!description":"Fires event <code>afterClose<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>openBy<\/code> of type <code>sap.ui.core.Control<\/code>This parameter contains the control which is passed as the parameter when calling openBy method. When runs on the phone, this parameter is undefined.<\/li>\n<li><code>origin<\/code> of type <code>sap.m.Button<\/code>This parameter contains the control which triggers the close of the ResponsivePopover. This parameter is undefined when runs on desktop or tablet.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ResponsivePopover","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"clone":{"!description":"Creates a new instance of ResponsivePopover with the same settings as the ResponsivePopover on which the method is called","!static":false,"!category":"function","!type":"fn() -> sap.m.ResponsivePopover"}},"sap.m.TileContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.TileContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.TileContainer"},"sap.m.RadioButton":{"setActiveState":{"!description":"Method to set a RadioButton's state to active or inactive.","!static":false,"!category":"function","!type":"fn(bActive: Boolean)","parameters":{"bActive":"type: boolean, description: Sets the active state to true or false"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setSelected":{"!description":"Sets the state of the RadioButton to selected.","!static":false,"!category":"function","!type":"fn(bSelected: Boolean) -> sap.m.RadioButton","parameters":{"bSelected":"type: boolean, description: defines if the radio button is selected"}},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selected<\/code> of type <code>boolean<\/code>Checks whether the RadioButton is active or not.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.RadioButton","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.m.RadioButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.RadioButton<\/code> itself.\n\nEvent is triggered when the user makes a change on the radio button (selecting or unselecting it).","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.RadioButton","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.RadioButton<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nSpecifies whether the user can select the radio button.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","getTextAlign":{"!description":"Gets current value of property <code>textAlign<\/code>.\n\nSpecifies the alignment of the radio button. Available alignment settings are \"Begin\", \"Center\", \"End\", \"Left\", and \"Right\".\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextAlign"},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWidth of the Label\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new RadioButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getGroupName groupName} : string (default: sapMRbDefaultGroup)<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getActiveHandling activeHandling} : boolean (default: true)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.m.RadioButton","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nSpecifies if the radio button is disabled.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"onsapselect":{"!description":"Pseudo event for pseudo 'select' event... space, enter, ... without modifiers (Ctrl, Alt or Shift)","!static":false,"!category":"function","!type":"fn(oEvent: Object)","parameters":{"oEvent":"type: object, description: provides information for the event"}},"!description":"RadioButton is a control similar to CheckBox, but it allows the user to choose only one of the predefined set of options.\n\nUsually, RadioButton is used in a group with other RadioButtons (with the groupName property or by using sap.m.RadioButtonGroup), thus providing a limited choice for the user.\nAn event is triggered when the user makes a change of the selection.","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.RadioButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setValueState":{"!description":"Sets a new value for property <code>valueState<\/code>.\n\nEnumeration sap.ui.core.ValueState provides state values Error, Success, Warning, None\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.m.RadioButton","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nSpecifies the text displayed next to the RadioButton","!static":false,"!category":"function","!type":"fn() -> String"},"setTextAlign":{"!description":"Sets a new value for property <code>textAlign<\/code>.\n\nSpecifies the alignment of the radio button. Available alignment settings are \"Begin\", \"Center\", \"End\", \"Left\", and \"Right\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn(sTextAlign: sap.ui.core.TextAlign) -> sap.m.RadioButton","parameters":{"sTextAlign":"type: sap.ui.core.TextAlign, description: New value for property <code>textAlign<\/code>"}},"setTextDirection":{"!description":"Sets the text direction for the RadioButton's label.","!static":false,"!category":"function","!type":"fn(sDirection: String) -> sap.m.RadioButton","parameters":{"sDirection":"type: string, description: Text direction to be set to RadioButton's label"}},"getActiveHandling":{"!description":"Gets current value of property <code>activeHandling<\/code>.\n\nThis is a flag to switch on activeHandling. When it is switched off,\nthere will not be visual changes on active state. Default value is 'true'\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setWidth":{"!description":"Sets the width for the RadioButton's label.","!static":false,"!category":"function","!type":"fn(sWidth: String) -> sap.m.RadioButton","parameters":{"sWidth":"type: string, description: CSS size to be set as width of the label"}},"setActiveHandling":{"!description":"Sets a new value for property <code>activeHandling<\/code>.\n\nThis is a flag to switch on activeHandling. When it is switched off,\nthere will not be visual changes on active state. Default value is 'true'\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bActiveHandling: Boolean) -> sap.m.RadioButton","parameters":{"bActiveHandling":"type: boolean, description: New value for property <code>activeHandling<\/code>"}},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.m.RadioButton","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.m.RadioButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"exit":{"!description":"Destroys all related objects to the RadioButton","!static":false,"!category":"function","!type":"fn()"},"getGroupName":{"!description":"Gets current value of property <code>groupName<\/code>.\n\nName of the radio button group the current radio button belongs to. You can define a new name for the group.\nIf no new name is specified, this radio button belongs to the sapMRbDefaultGroup per default. Default behavior of a radio button in a group is that when one of the radio buttons in a group is selected, all others are unselected.\n\nDefault value is <code>sapMRbDefaultGroup<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getSelected":{"!description":"Gets current value of property <code>selected<\/code>.\n\nSpecifies the select state of the radio button\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nSpecifies if the radio button is disabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.m.RadioButton","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"setGroupName":{"!description":"Sets RadioButton's groupName. Only one radioButton from the same group can be selected","!static":false,"!category":"function","!type":"fn(sGroupName: String) -> sap.m.RadioButton","parameters":{"sGroupName":"type: string, description: Name of the group to which the RadioButton will belong."}},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nSpecifies whether the user can select the radio button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEditable: Boolean) -> sap.m.RadioButton","parameters":{"bEditable":"type: boolean, description: New value for property <code>editable<\/code>"}},"!module":"sap/m/RadioButton","getValueState":{"!description":"Gets current value of property <code>valueState<\/code>.\n\nEnumeration sap.ui.core.ValueState provides state values Error, Success, Warning, None\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"!helpDescription":"RadioButton is a control similar to CheckBox, but it allows the user to choose only one of the predefined set of options.\n\nUsually, RadioButton is used in a group with other RadioButtons (with the groupName property or by using sap.m.RadioButtonGroup), thus providing a limited choice for the user.\nAn event is triggered when the user makes a change of the selection.","removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.m.RadioButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.RadioButton","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nOptions for the text direction are RTL and LTR. Alternatively, the control can inherit the text direction from its parent container.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"setText":{"!description":"Sets the text for the RadioButton's label.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.m.RadioButton","parameters":{"sText":"type: string, description: The text to be set"}}},"sap.m.FlexWrap":{"!description":"Available options for the wrapping behavior of a flex container.","Wrap":{"!description":"The flex container is multi-line.","!category":"enum","!type":"String"},"!module":"sap/m/library","NoWrap":{"!description":"The flex container is single-line.","!category":"enum","!type":"String"},"!category":"static class","WrapReverse":{"!description":"The flex container is multi-line with the cross-axis start and end being swapped.","!category":"enum","!type":"String"}},"sap.m.SplitContainer":{"backToPage":{"!description":"Navigates back to the nearest previous page in the SplitContainer history with the given ID (if there is no such page among the previous pages, nothing happens).\nThe transition effect, which had been used to get to the current page is inverted and used for this navigation.\n\nCalling this navigation method, first triggers the (cancelable) navigate event on the SplitContainer,\nthen the beforeHide pseudo event on the source page, beforeFirstShow (if applicable),\nand beforeShow on the target page. Later, after the transition has completed,\nthe afterShow pseudo event is triggered on the target page and afterHide - on the page, which has been left.\nThe given backData object is available in the beforeFirstShow, beforeShow, and afterShow event objects as data\nproperty. The original \"data\" object from the \"to\" navigation is also available in these event objects.","!static":false,"!category":"function","!type":"fn(sPageId: String, oBackData: Object, oTransitionParameters: Object) -> sap.m.SplitContainer","parameters":{"oTransitionParameters":"type: object, description: This optional object can give additional information to the transition function, like the DOM element, which triggered the transition or the desired transition duration.\n        The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\n        In order to use the transitionParameters property, the data property must be used (at least \"null\" must be given) for a proper parameter order.\n\n        NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.","sPageId":"type: string, description: The screen to which is being navigated to. The ID or the control itself can be given.","oBackData":"type: object, description: This optional object can carry any payload data which should be made available to the target page of the back navigation.\n        The event on the target page will contain this data object as backData property. (the original data from the to() navigation will still be available as data property).\n\n        In scenarios, where the entity triggering the navigation can't or shouldn't directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n        For back navigation this can be used, for example, when returning from a detail page to transfer any settings done there.\n\n        When the transitionParameters object is used, this data object must also be given (either as object or as null) in order to have a proper parameter order."}},"setBackgroundOpacity":{"!description":"Sets a new value for property <code>backgroundOpacity<\/code>.\n\nDefines the opacity of the background image - between 0 (fully transparent) and 1 (fully opaque).\nThis can be used to improve the content visibility by making the background image partly transparent.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn(fBackgroundOpacity: Number) -> sap.m.SplitContainer","parameters":{"fBackgroundOpacity":"type: float, description: New value for property <code>backgroundOpacity<\/code>"}},"detachBeforeMasterOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beforeMasterOpen<\/code> event of this <code>sap.m.SplitContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.SplitContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireDetailNavigate":{"!description":"Fires event <code>detailNavigate<\/code> to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.\n\nExpects the following event parameters:\n<ul>\n<li><code>from<\/code> of type <code>sap.ui.core.Control<\/code>The page, which was displayed before the current navigation.<\/li>\n<li><code>fromId<\/code> of type <code>string<\/code>The ID of the page, which was displayed before the current navigation.<\/li>\n<li><code>to<\/code> of type <code>sap.ui.core.Control<\/code>The page, which will be displayed after the current navigation.<\/li>\n<li><code>toId<\/code> of type <code>string<\/code>The ID of the page, which will be displayed after the current navigation.<\/li>\n<li><code>firstTime<\/code> of type <code>boolean<\/code>Determines whether the \"to\" page (more precisely: a control with the ID of the page,\nwhich is currently navigated to) has not been displayed/navigated to before.<\/li>\n<li><code>isTo<\/code> of type <code>boolean<\/code>Determines whether this is a forward navigation, triggered by to().<\/li>\n<li><code>isBack<\/code> of type <code>boolean<\/code>Determines whether this is a back navigation, triggered by back().<\/li>\n<li><code>isBackToTop<\/code> of type <code>boolean<\/code>Determines whether this is a navigation to the root page, triggered by backToTop().<\/li>\n<li><code>isBackToPage<\/code> of type <code>boolean<\/code>Determines whether this was a navigation to a specific page, triggered by backToPage().<\/li>\n<li><code>direction<\/code> of type <code>string<\/code>Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\".<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> Boolean","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getBackgroundColor":{"!description":"Gets current value of property <code>backgroundColor<\/code>.\n\nDetermines the background color of the SplitContainer. If set, this color overrides the default one,\nwhich is defined by the theme (should only be used when really required).\nAny configured background image will be placed above this colored background,\nbut any theme adaptation in the Theme Designer will override this setting.\nUse the backgroundRepeat property to define whether this image should be stretched\nto cover the complete SplitContainer or whether it should be tiled.","!static":false,"!category":"function","!type":"fn() -> String"},"getPage":{"!description":"Returns the page with the given ID from either master area, or detail area depending on the master parameter (if there's no page that has the given ID, null is returned).","!static":false,"!category":"function","!type":"fn(sId: String, bMaster: Boolean) -> sap.ui.core.Control","parameters":{"bMaster":"type: boolean, description: If the page with given ID should be fetched from the master area. If it's set to false, the page will be fetched from detail area.","sId":"type: string, description: The ID of the page that needs to be fetched"}},"toDetail":{"!description":"Navigates to a given detail page.","!static":false,"!category":"function","!type":"fn(sPageId: String, sTransitionName: String, oData: Object, oTransitionParameter: Object) -> sap.m.SplitContainer","parameters":{"sTransitionName":"type: string, description: The type of the transition/animation to apply. This parameter can be omitted; then the default is \"slide\" (horizontal movement from the right).\n        Other options are: \"fade\", \"flip\", and \"show\" and the names of any registered custom transitions.\n\n        None of the standard transitions is currently making use of any given transition parameters.","oData":"type: object, description: This optional object can carry any payload data which should be made available to the target page. The beforeShow event on the target page will contain this data object as data property.\n\n        Use case: in scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n\n        When the transitionParameters object is used, this data object must also be given (either as object or as null) in order to have a proper parameter order.","oTransitionParameter":"type: object, description: This optional object can contain additional information for the transition function, like the DOM element, which triggered the transition or the desired transition duration.\n\n        For a proper parameter order, the data parameter must be given when the transitionParameters parameter is used (it can be given as \"null\").\n\n        NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.\n        The \"show\", \"slide\" and \"fade\" transitions do not use any parameter.","sPageId":"type: string, description: undefined"}},"detachBeforeMasterClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beforeMasterClose<\/code> event of this <code>sap.m.SplitContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.SplitContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"detachDetailNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>detailNavigate<\/code> event of this <code>sap.m.SplitContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.SplitContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"indexOfMasterPage":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>masterPages<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oMasterPage: sap.ui.core.Control) -> Number","parameters":{"oMasterPage":"type: sap.ui.core.Control, description: The masterPage whose index is looked for"}},"getDetailPage":{"!description":"Returns the page with the given ID in detail area. If there's no page that has the given ID, null is returned.","!static":false,"!category":"function","!type":"fn(sId: String) -> sap.ui.core.Control","parameters":{"sId":"type: string, description: The ID of the page that needs to be fetched."}},"getMasterPages":{"!description":"Gets content of aggregation <code>masterPages<\/code>.\n\nDetermines the content entities, between which the SplitContainer navigates in master area.\nThese can be of type sap.m.Page, sap.ui.core.View, sap.m.Carousel or any other control with fullscreen/page semantics.\nThese aggregated controls receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow},\nthey are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"detachMasterButton":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>masterButton<\/code> event of this <code>sap.m.SplitContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.SplitContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"removeMasterPage":{"!description":"Removes a masterPage from the aggregation <code>masterPages<\/code>.","!static":false,"!category":"function","!type":"fn(vMasterPage: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vMasterPage":"type: int|string|sap.ui.core.Control, description: The masterPageto remove or its index or id"}},"backToTopDetail":{"!description":"Navigates back to the initial/top level of Detail (this is the element aggregated as initialPage, or the first added element).\nNOTE: If already on the initial page, nothing happens.\nThe transition effect which had been used to get to the current page is inverted and used for this navigation.","!static":false,"!category":"function","!type":"fn(oBackData: Object, oTransitionParameter: Object) -> sap.ui.core.Control","parameters":{"oTransitionParameter":"type: object, description: This optional object can give additional information to the transition function, like the DOM element, which triggered the transition or the desired transition duration.\n        The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\n        In order to use the transitionParameters property, the data property must be used (at least \"null\" must be given) for a proper parameter order.\n\n        NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.","oBackData":"type: object, description: This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as backData property (the original data from the to() navigation will still be available as data property).\n\n        In scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n        For back navigation this can be used, for example, when returning from a detail page to transfer any settings done there.\n\n        When the transitionParameters object is used, this data object must also be given (either as object or as null) in order to have a proper parameter order."}},"detachAfterMasterOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterMasterOpen<\/code> event of this <code>sap.m.SplitContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.SplitContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getCurrentDetailPage":{"!description":"Returns the current displayed detail page.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getMode":{"!description":"Gets current value of property <code>mode<\/code>.\n\nDefines whether the master page will always be displayed (in portrait and landscape mode - StretchCompressMode),\nor if it should be hidden when in portrait mode (ShowHideMode). Default is ShowHideMode.\nOther possible values are Hide (Master is always hidden) and Popover (master is displayed in popover).\n\nDefault value is <code>ShowHideMode<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.SplitAppMode"},"attachAfterMasterOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterMasterOpen<\/code> event of this <code>sap.m.SplitContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.SplitContainer<\/code> itself.\n\nFires when the master area is fully opened after animation if any.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.SplitContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.SplitContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"SplitContainer maintains two NavContainers if running on tablet or desktop and one NavContainer - on phone.\nThe display of the master NavContainer depends on the portrait/landscape mode of the device and the mode of SplitContainer.\n\nNOTE: This control must be rendered as a full screen control in order to make the show/hide master area work properly.","detachAfterMasterClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterMasterClose<\/code> event of this <code>sap.m.SplitContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.SplitContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.SplitContainer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getInitialDetail":{"!description":"ID of the element which is the current target of the association <code>initialDetail<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"attachMasterButton":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>masterButton<\/code> event of this <code>sap.m.SplitContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.SplitContainer<\/code> itself.\n\nFires when a Master Button needs to be shown or hidden. This is necessary for custom headers when the SplitContainer control does not handle the placement of the master button automatically.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.SplitContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.SplitContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachAfterMasterClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterMasterClose<\/code> event of this <code>sap.m.SplitContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.SplitContainer<\/code> itself.\n\nFires when the master area is fully closed after the animation (if any).","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.SplitContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.SplitContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireAfterMasterClose":{"!description":"Fires event <code>afterMasterClose<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.SplitContainer","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"insertDetailPage":{"!description":"Inserts a detailPage into the aggregation <code>detailPages<\/code>.","!static":false,"!category":"function","!type":"fn(oDetailPage: sap.ui.core.Control, iIndex: Number) -> sap.m.SplitContainer","parameters":{"oDetailPage":"type: sap.ui.core.Control, description: the detailPage to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the detailPage should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the detailPage is inserted at position 0; for a value\n             greater than the current size of the aggregation, the detailPage is inserted at\n             the last position"}},"extend":{"!description":"Creates a new subclass of class sap.m.SplitContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"backDetail":{"!description":"Navigates back to the previous detail page found in the history.","!static":false,"!category":"function","!type":"fn(oBackData: Object, oTransitionParameter: Object) -> sap.m.SplitContainer","parameters":{"oTransitionParameter":"type: object, description: This optional object can give additional information to the transition function, like the DOM element, which triggered the transition or the desired transition duration.\n        The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\n        In order to use the transitionParameters property, the data property must be used (at least \"null\" must be given) for a proper parameter order.\n\n        NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.","oBackData":"type: object, description: This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as backData property. (The original data from the to() navigation will still be available as data property.)\n\n        In scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n        For back navigation this can be used, for example, when returning from a detail page to transfer any settings done there.\n\n        When the transitionParameters object is used, this data object must also be given (either as object or as null) in order to have a proper parameter order."}},"setDefaultTransitionNameMaster":{"!description":"Sets a new value for property <code>defaultTransitionNameMaster<\/code>.\n\nDetermines the type of the transition/animation to apply when to() is called, without defining the\ntransition to use. The default is \"slide\", other options are \"fade\", \"show\", and the names of any registered custom transitions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>slide<\/code>.","!static":false,"!category":"function","!type":"fn(sDefaultTransitionNameMaster: String) -> sap.m.SplitContainer","parameters":{"sDefaultTransitionNameMaster":"type: string, description: New value for property <code>defaultTransitionNameMaster<\/code>"}},"setMasterButtonText":{"!description":"Sets a new value for property <code>masterButtonText<\/code>.\n\nDetermines the text displayed in master button, which has a default value \"Navigation\".\nThis text is only displayed in iOS platform and the icon from the current page in detail area is\ndisplayed in the master button for the other platforms.\nThe master button is shown/hidden depending on the orientation of the device and whether\nthe master area is opened or not. SplitContainer manages the show/hide of the master button by itself\nonly when the pages added to the detail area are sap.m.Page with built-in header or sap.m.Page\nwith built-in header, which is wrapped by one or several sap.ui.core.mvc.View.\nOtherwise, the show/hide of master button needs to be managed by the application.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sMasterButtonText: String) -> sap.m.SplitContainer","parameters":{"sMasterButtonText":"type: string, description: New value for property <code>masterButtonText<\/code>"}},"!module":"sap/m/SplitContainer","getMasterPage":{"!description":"Returns the page with the given ID in master area (if there's no page that has the given ID, null is returned).","!static":false,"!category":"function","!type":"fn(sId: String) -> sap.ui.core.Control","parameters":{"sId":"type: string, description: The ID of the page that needs to be fetched"}},"!helpDescription":"SplitContainer maintains two NavContainers if running on tablet or desktop and one NavContainer - on phone.\nThe display of the master NavContainer depends on the portrait/landscape mode of the device and the mode of SplitContainer.\n\nNOTE: This control must be rendered as a full screen control in order to make the show/hide master area work properly.","addMasterPage":{"!description":"Adds some masterPage to the aggregation <code>masterPages<\/code>.","!static":false,"!category":"function","!type":"fn(oMasterPage: sap.ui.core.Control) -> sap.m.SplitContainer","parameters":{"oMasterPage":"type: sap.ui.core.Control, description: the masterPage to add; if empty, nothing is inserted"}},"detachMasterNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>masterNavigate<\/code> event of this <code>sap.m.SplitContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.SplitContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireAfterMasterOpen":{"!description":"Fires event <code>afterMasterOpen<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.SplitContainer","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"fireAfterMasterNavigate":{"!description":"Fires event <code>afterMasterNavigate<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>from<\/code> of type <code>sap.ui.core.Control<\/code>The page, which had been displayed before navigation.<\/li>\n<li><code>fromId<\/code> of type <code>string<\/code>The ID of the page, which had been displayed before navigation.<\/li>\n<li><code>to<\/code> of type <code>sap.ui.core.Control<\/code>The page, which is now displayed after navigation.<\/li>\n<li><code>toId<\/code> of type <code>string<\/code>The ID of the page, which is now displayed after navigation.<\/li>\n<li><code>firstTime<\/code> of type <code>boolean<\/code>Whether the \"to\" page (more precisely: a control with the ID of the page, which has been navigated to)\nhas not been displayed/navigated to before.<\/li>\n<li><code>isTo<\/code> of type <code>boolean<\/code>Determines whether was a forward navigation, triggered by to().<\/li>\n<li><code>isBack<\/code> of type <code>boolean<\/code>Determines whether this was a back navigation, triggered by back().<\/li>\n<li><code>isBackToTop<\/code> of type <code>boolean<\/code>Determines whether this was a navigation to the root page, triggered by backToTop().<\/li>\n<li><code>isBackToPage<\/code> of type <code>boolean<\/code>Determines whether this was a navigation to a specific page, triggered by backToPage().<\/li>\n<li><code>direction<\/code> of type <code>string<\/code>Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\".<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.SplitContainer","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getCurrentMasterPage":{"!description":"Returns the current displayed master page.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getMasterButtonText":{"!description":"Gets current value of property <code>masterButtonText<\/code>.\n\nDetermines the text displayed in master button, which has a default value \"Navigation\".\nThis text is only displayed in iOS platform and the icon from the current page in detail area is\ndisplayed in the master button for the other platforms.\nThe master button is shown/hidden depending on the orientation of the device and whether\nthe master area is opened or not. SplitContainer manages the show/hide of the master button by itself\nonly when the pages added to the detail area are sap.m.Page with built-in header or sap.m.Page\nwith built-in header, which is wrapped by one or several sap.ui.core.mvc.View.\nOtherwise, the show/hide of master button needs to be managed by the application.","!static":false,"!category":"function","!type":"fn() -> String"},"insertPreviousPage":{"!description":"Inserts the page/control with the specified ID into the navigation history stack of the NavContainer.\n\nThis can be used for deep-linking when the user directly reached a drilldown detail page using a bookmark and then wants to navigate up in the drilldown hierarchy.\nNormally, such a back navigation would not be possible as there is no previous page in the SplitContainer's history stack.","!static":false,"!category":"function","!type":"fn(sPageId: String, sTransitionName: String, oData: Object) -> sap.m.SplitContainer","parameters":{"sTransitionName":"type: string, description: The type of the transition/animation, which would have been used to navigate from the (inserted) previous page to the current page. When navigating back, the inverse animation will be applied.\n        This parameter can be omitted; then the default value is \"slide\" (horizontal movement from the right).","oData":"type: object, description: This optional object can carry any payload data which would have been given to the inserted previous page if the user would have done a normal forward navigation to it.","sPageId":"type: string, description: The ID of the control/page/screen, which is inserted into the history stack. The respective control must be aggregated by the SplitContainer, otherwise this will cause an error."}},"setBackgroundRepeat":{"!description":"Sets a new value for property <code>backgroundRepeat<\/code>.\n\nDefines whether the background image (if configured) is proportionally stretched\nto cover the whole SplitContainer (false) or whether it should be tiled (true).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bBackgroundRepeat: Boolean) -> sap.m.SplitContainer","parameters":{"bBackgroundRepeat":"type: boolean, description: New value for property <code>backgroundRepeat<\/code>"}},"destroyDetailPages":{"!description":"Destroys all the detailPages in the aggregation <code>detailPages<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.SplitContainer"},"setInitialDetail":{"!description":"Sets the associated <code>initialDetail<\/code>.","!static":false,"!category":"function","!type":"fn(oInitialDetail: sap.ui.core.Control) -> sap.m.SplitContainer","parameters":{"oInitialDetail":"type: sap.ui.core.Control, description: Id of an element which becomes the new target of this initialDetail association; alternatively, an element instance may be given"}},"detachAfterDetailNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterDetailNavigate<\/code> event of this <code>sap.m.SplitContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.SplitContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireMasterButton":{"!description":"Fires event <code>masterButton<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.SplitContainer","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!proto":"sap.ui.core.Control","removeDetailPage":{"!description":"Removes a detailPage from the aggregation <code>detailPages<\/code>.","!static":false,"!category":"function","!type":"fn(vDetailPage: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vDetailPage":"type: int|string|sap.ui.core.Control, description: The detailPageto remove or its index or id"}},"setBackgroundImage":{"!description":"Sets a new value for property <code>backgroundImage<\/code>.\n\nSets the background image of the SplitContainer. When set, this image overrides\nthe default background defined by the theme (should only be used when really required).\nThis background image will be placed above any color set for the background,\nbut any theme adaptation in the Theme Designer will override this image setting.\nUse the backgroundRepeat property to define whether this image should be stretched\nto cover the complete SplitContainer or whether it should be tiled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sBackgroundImage: sap.ui.core.URI) -> sap.m.SplitContainer","parameters":{"sBackgroundImage":"type: sap.ui.core.URI, description: New value for property <code>backgroundImage<\/code>"}},"getDefaultTransitionNameDetail":{"!description":"Gets current value of property <code>defaultTransitionNameDetail<\/code>.\n\nDetermines the type of the transition/animation to apply when to() is called without defining the\ntransition to use. The default is \"slide\", other options are \"fade\", \"show\", and the names of any registered custom transitions.\n\nDefault value is <code>slide<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","isMasterShown":{"!description":"\nReturns whether master area is currently displayed on the screen.\nIn desktop browser or tablet, this method returns true when master area is displayed on the screen, regardless if in portrait or landscape mode.\nOn mobile phone devices, this method returns true when the currently displayed page is from the pages, which are added to the master area, otherwise, it returns false.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getPreviousPage":{"!description":"Returns the previous page (the page, from which the user drilled down to the current page with to()).\nNote: this is not the page, which the user has seen before, but the page which is the target of the next back() navigation.\nIf there is no previous page, \"undefined\" is returned.","!static":false,"!category":"function","!type":"fn(bMaster: Boolean) -> sap.ui.core.Control","parameters":{"bMaster":"type: boolean, description: States if this function returns the previous page in master area. If it's set to false, the previous page in detail area will be returned."}},"fireBeforeMasterOpen":{"!description":"Fires event <code>beforeMasterOpen<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.SplitContainer","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachAfterDetailNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterDetailNavigate<\/code> event of this <code>sap.m.SplitContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.SplitContainer<\/code> itself.\n\nFires when navigation between two pages in detail area has completed.\nNOTE: In case of animated transitions this event is fired with some delay after the \"navigate\" event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.SplitContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.SplitContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachBeforeMasterOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beforeMasterOpen<\/code> event of this <code>sap.m.SplitContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.SplitContainer<\/code> itself.\n\nFires before the master area is opened.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.SplitContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.SplitContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachAfterMasterNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterMasterNavigate<\/code> event of this <code>sap.m.SplitContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.SplitContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setInitialMaster":{"!description":"Sets the associated <code>initialMaster<\/code>.","!static":false,"!category":"function","!type":"fn(oInitialMaster: sap.ui.core.Control) -> sap.m.SplitContainer","parameters":{"oInitialMaster":"type: sap.ui.core.Control, description: Id of an element which becomes the new target of this initialMaster association; alternatively, an element instance may be given"}},"!constructorDescription":"Constructor for a new SplitContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDefaultTransitionNameDetail defaultTransitionNameDetail} : string (default: slide)<\/li>\n<li>{@link #getDefaultTransitionNameMaster defaultTransitionNameMaster} : string (default: slide)<\/li>\n<li>{@link #getMode mode} : sap.m.SplitAppMode (default: ShowHideMode)<\/li>\n<li>{@link #getMasterButtonText masterButtonText} : string<\/li>\n<li>{@link #getBackgroundColor backgroundColor} : string<\/li>\n<li>{@link #getBackgroundImage backgroundImage} : sap.ui.core.URI<\/li>\n<li>{@link #getBackgroundRepeat backgroundRepeat} : boolean (default: false)<\/li>\n<li>{@link #getBackgroundOpacity backgroundOpacity} : float (default: 1)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getMasterPages masterPages} : sap.ui.core.Control[]<\/li>\n<li>{@link #getDetailPages detailPages} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:masterNavigate masterNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterMasterNavigate afterMasterNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:masterButton masterButton} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeMasterOpen beforeMasterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterMasterOpen afterMasterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeMasterClose beforeMasterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterMasterClose afterMasterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:detailNavigate detailNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterDetailNavigate afterDetailNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","fireAfterDetailNavigate":{"!description":"Fires event <code>afterDetailNavigate<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>from<\/code> of type <code>sap.ui.core.Control<\/code>The page, which had been displayed before navigation.<\/li>\n<li><code>fromId<\/code> of type <code>string<\/code>The ID of the page, which had been displayed before navigation.<\/li>\n<li><code>to<\/code> of type <code>sap.ui.core.Control<\/code>The page, which is now displayed after navigation.<\/li>\n<li><code>toId<\/code> of type <code>string<\/code>The ID of the page, which is now displayed after navigation.<\/li>\n<li><code>firstTime<\/code> of type <code>boolean<\/code>Determines whether the \"to\" page (more precisely: a control with the ID of the page,\nwhich has been navigated to) has not been displayed/navigated to before.<\/li>\n<li><code>isTo<\/code> of type <code>boolean<\/code>Determines whether was a forward navigation, triggered by to().<\/li>\n<li><code>isBack<\/code> of type <code>boolean<\/code>Determines whether this was a back navigation, triggered by back().<\/li>\n<li><code>isBackToTop<\/code> of type <code>boolean<\/code>Determines whether this was a navigation to the root page, triggered by backToTop().<\/li>\n<li><code>isBackToPage<\/code> of type <code>boolean<\/code>Determines whether this was a navigation to a specific page, triggered by backToPage().<\/li>\n<li><code>direction<\/code> of type <code>string<\/code>Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\".<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.SplitContainer","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getDefaultTransitionNameMaster":{"!description":"Gets current value of property <code>defaultTransitionNameMaster<\/code>.\n\nDetermines the type of the transition/animation to apply when to() is called, without defining the\ntransition to use. The default is \"slide\", other options are \"fade\", \"show\", and the names of any registered custom transitions.\n\nDefault value is <code>slide<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"addPage":{"!description":"Adds a content entity either to master area or detail area depending on the master parameter.\n\nThe method is provided mainly for providing API consistency between sap.m.SplitContainer and sap.m.App. So that the same code line can be reused.","!static":false,"!category":"function","!type":"fn(oPage: sap.ui.core.Control, bMaster: Boolean) -> sap.m.SplitContainer","parameters":{"bMaster":"type: boolean, description: States if the page should be added to the master area. If it's set to false, the page is added to detail area.","oPage":"type: sap.ui.core.Control, description: The content entities between which this SplitContainer navigates in either master area or detail area depending on the master parameter. These can be of type sap.m.Page, sap.ui.core.View, sap.m.Carousel or any other control with fullscreen/page semantics."}},"getCurrentPage":{"!description":"Returns the currently displayed page either in master area or in detail area.\nWhen the parameter is set to true, the current page in master area is returned, otherwise, the current page in detail area is returned.\n\nThis method is provided mainly for API consistency between sap.m.SplitContainer and sap.m.App, so that the same code line can be reused.","!static":false,"!category":"function","!type":"fn(bMaster: Boolean) -> sap.ui.core.Control","parameters":{"bMaster":"type: boolean, description: States if this function returns the current page in master area. If it's set to false, the current page in detail area will be returned."}},"insertMasterPage":{"!description":"Inserts a masterPage into the aggregation <code>masterPages<\/code>.","!static":false,"!category":"function","!type":"fn(oMasterPage: sap.ui.core.Control, iIndex: Number) -> sap.m.SplitContainer","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the masterPage should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the masterPage is inserted at position 0; for a value\n             greater than the current size of the aggregation, the masterPage is inserted at\n             the last position","oMasterPage":"type: sap.ui.core.Control, description: the masterPage to insert; if empty, nothing is inserted"}},"showMaster":{"!description":"Used to make the master page visible when in ShowHideMode and the device is in portrait mode.","!static":false,"!category":"function","!type":"fn() -> sap.m.SplitContainer"},"attachBeforeMasterClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beforeMasterClose<\/code> event of this <code>sap.m.SplitContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.SplitContainer<\/code> itself.\n\nFires before the master area is closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.SplitContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.SplitContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"indexOfDetailPage":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>detailPages<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oDetailPage: sap.ui.core.Control) -> Number","parameters":{"oDetailPage":"type: sap.ui.core.Control, description: The detailPage whose index is looked for"}},"hideMaster":{"!description":"Used to hide the master page when in ShowHideMode and the device is in portrait mode.","!static":false,"!category":"function","!type":"fn() -> sap.m.SplitContainer"},"fireBeforeMasterClose":{"!description":"Fires event <code>beforeMasterClose<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.SplitContainer","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setBackgroundColor":{"!description":"Sets a new value for property <code>backgroundColor<\/code>.\n\nDetermines the background color of the SplitContainer. If set, this color overrides the default one,\nwhich is defined by the theme (should only be used when really required).\nAny configured background image will be placed above this colored background,\nbut any theme adaptation in the Theme Designer will override this setting.\nUse the backgroundRepeat property to define whether this image should be stretched\nto cover the complete SplitContainer or whether it should be tiled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sBackgroundColor: String) -> sap.m.SplitContainer","parameters":{"sBackgroundColor":"type: string, description: New value for property <code>backgroundColor<\/code>"}},"backMaster":{"!description":"Navigates back to the previous master page which is found in the history.","!static":false,"!category":"function","!type":"fn(oBackData: Object, oTransitionParameter: Object) -> sap.m.SplitContainer","parameters":{"oTransitionParameter":"type: object, description: This optional object can give additional information to the transition function, like the DOM element, which triggered the transition or the desired transition duration.\n        The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\n        In order to use the transitionParameters property, the data property must be used (at least \"null\" must be given) for a proper parameter order.\n\n        NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.","oBackData":"type: object, description: This optional object can carry any payload data which should be made available to the target page of the back navigation.\n        The event on the target page will contain this data object as backData property (the original data from the to() navigation will still be available as data property).\n\n        In scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n        For back navigation this can be used, for example, when returning from a detail page to transfer any settings done there.\n\n        When the transitionParameters object is used, this data object must also be given (either as object or as null) in order to have a proper parameter order."}},"setMode":{"!description":"Sets a new value for property <code>mode<\/code>.\n\nDefines whether the master page will always be displayed (in portrait and landscape mode - StretchCompressMode),\nor if it should be hidden when in portrait mode (ShowHideMode). Default is ShowHideMode.\nOther possible values are Hide (Master is always hidden) and Popover (master is displayed in popover).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>ShowHideMode<\/code>.","!static":false,"!category":"function","!type":"fn(sMode: sap.m.SplitAppMode) -> sap.m.SplitContainer","parameters":{"sMode":"type: sap.m.SplitAppMode, description: New value for property <code>mode<\/code>"}},"addDetailPage":{"!description":"Adds some detailPage to the aggregation <code>detailPages<\/code>.","!static":false,"!category":"function","!type":"fn(oDetailPage: sap.ui.core.Control) -> sap.m.SplitContainer","parameters":{"oDetailPage":"type: sap.ui.core.Control, description: the detailPage to add; if empty, nothing is inserted"}},"attachMasterNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>masterNavigate<\/code> event of this <code>sap.m.SplitContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.SplitContainer<\/code> itself.\n\nFires when navigation between two pages in master area has been triggered. The transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(), which means that there will be no navigation.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.SplitContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.SplitContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"backToTopMaster":{"!description":"Navigates back to the initial/top level of Master (this is the element aggregated as \"initialPage\", or the first added element).\nNOTE: If already on the initial page, nothing happens.\nThe transition effect which had been used to get to the current page is inverted and used for this navigation.","!static":false,"!category":"function","!type":"fn(oBackData: Object, oTransitionParameter: Object) -> sap.ui.core.Control","parameters":{"oTransitionParameter":"type: object, description: This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration.\n        The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\n        In order to use the transitionParameters property, the data property must be used (at least \"null\" must be given) for a proper parameter order.\n\n        NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.","oBackData":"type: object, description: This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as \"backData\" property. (The original data from the \"to()\" navigation will still be available as \"data\" property.)\n\n        In scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n        For back navigation this can be used e.g. when returning from a detail page to transfer any settings done there.\n\n        When the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order."}},"getInitialMaster":{"!description":"ID of the element which is the current target of the association <code>initialMaster<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getBackgroundOpacity":{"!description":"Gets current value of property <code>backgroundOpacity<\/code>.\n\nDefines the opacity of the background image - between 0 (fully transparent) and 1 (fully opaque).\nThis can be used to improve the content visibility by making the background image partly transparent.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"attachDetailNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>detailNavigate<\/code> event of this <code>sap.m.SplitContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.SplitContainer<\/code> itself.\n\nFires when navigation between two pages in detail area has been triggered.\nThe transition (if any) to the new page has not started yet.\nNOTE: This event can be aborted by the application with preventDefault(), which means that there will be no navigation.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.SplitContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.SplitContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireMasterNavigate":{"!description":"Fires event <code>masterNavigate<\/code> to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.\n\nExpects the following event parameters:\n<ul>\n<li><code>from<\/code> of type <code>sap.ui.core.Control<\/code>The page, which was displayed before the current navigation.<\/li>\n<li><code>fromId<\/code> of type <code>string<\/code>The ID of the page, which was displayed before the current navigation.<\/li>\n<li><code>to<\/code> of type <code>sap.ui.core.Control<\/code>The page, which will be displayed after the current navigation.<\/li>\n<li><code>toId<\/code> of type <code>string<\/code>The ID of the page, which will be displayed after the current navigation.<\/li>\n<li><code>firstTime<\/code> of type <code>boolean<\/code>Determines whether the \"to\" page (more precisely: a control with the ID of the page,\nwhich is currently being navigated to) has not been displayed/navigated to before.<\/li>\n<li><code>isTo<\/code> of type <code>boolean<\/code>Determines whether this is a forward navigation, triggered by to().<\/li>\n<li><code>isBack<\/code> of type <code>boolean<\/code>Determines whether this is a back navigation, triggered by back().<\/li>\n<li><code>isBackToTop<\/code> of type <code>boolean<\/code>Determines whether this is a navigation to the root page, triggered by backToTop().<\/li>\n<li><code>isBackToPage<\/code> of type <code>boolean<\/code>Determines whether this was a navigation to a specific page, triggered by backToPage().<\/li>\n<li><code>direction<\/code> of type <code>string<\/code>Determines how the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\".<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> Boolean","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getBackgroundRepeat":{"!description":"Gets current value of property <code>backgroundRepeat<\/code>.\n\nDefines whether the background image (if configured) is proportionally stretched\nto cover the whole SplitContainer (false) or whether it should be tiled (true).\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"toMaster":{"!description":"Navigates to a given master page.","!static":false,"!category":"function","!type":"fn(sPageId: String, sTransitionName: String, oData: Object, oTransitionParameters: Object) -> sap.m.SplitContainer","parameters":{"sTransitionName":"type: string, description: The type of the transition/animation to apply. This parameter can be omitted; then the default value is \"slide\" (horizontal movement from the right).\n        Other options are: \"fade\", \"flip\", and \"show\" and the names of any registered custom transitions.\n\n        None of the standard transitions is currently making use of any given transition parameters.","oData":"type: object, description: Since version 1.7.1. This optional object can carry any payload data which should be made available to the target page. The beforeShow event on the target page will contain this data object as data property.\n\n        Use case: in scenarios where the entity triggering the navigation can't or shouldn't directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n\n        When the transitionParameters object is used, this data object must also be given (either as object or as null) in order to have a proper parameter order.","oTransitionParameters":"type: object, description: Since version 1.7.1. This optional object can contain additional information for the transition function, like the DOM element, which triggered the transition or the desired transition duration.\n\n        For a proper parameter order, the data parameter must be given when the transitionParameters parameter is used (it can be given as \"null\").\n\n        NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.\n        The \"show\", \"slide\" and \"fade\" transitions do not use any parameter.","sPageId":"type: string, description: The screen to which drilldown should happen. The ID or the control itself can be given."}},"getDetailPages":{"!description":"Gets content of aggregation <code>detailPages<\/code>.\n\nDetermines the content entities, between which the SplitContainer navigates in detail area.\nThese can be of type sap.m.Page, sap.ui.core.View, sap.m.Carousel or any other control with fullscreen/page semantics.\nThese aggregated controls receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow},\nthey are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllDetailPages":{"!description":"Removes all the controls from the aggregation <code>detailPages<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"attachAfterMasterNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterMasterNavigate<\/code> event of this <code>sap.m.SplitContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.SplitContainer<\/code> itself.\n\nFires when navigation between two pages in master area has completed.\nNOTE: In case of animated transitions this event is fired with some delay after the navigate event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.SplitContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.SplitContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getBackgroundImage":{"!description":"Gets current value of property <code>backgroundImage<\/code>.\n\nSets the background image of the SplitContainer. When set, this image overrides\nthe default background defined by the theme (should only be used when really required).\nThis background image will be placed above any color set for the background,\nbut any theme adaptation in the Theme Designer will override this image setting.\nUse the backgroundRepeat property to define whether this image should be stretched\nto cover the complete SplitContainer or whether it should be tiled.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"to":{"!description":"Navigates to the given page inside the SplitContainer.\nThe navigation is done inside the master area if the page has been added,\notherwise, it tries to do the page navigation in the detail area.","!static":false,"!category":"function","!type":"fn(sPageId: String, sTransitionName: String, oData: Object, oTransitionParameters: Object) -> sap.m.SplitContainer","parameters":{"sTransitionName":"type: string, description: The type of the transition/animation to apply. This parameter can be omitted; then the default value is \"slide\" (horizontal movement from the right).\n        Other options are: \"fade\", \"flip\", and \"show\" and the names of any registered custom transitions.\n\n        None of the standard transitions is currently making use of any given transition parameters.","oData":"type: object, description: This optional object can carry any payload data which should be made available to the target page. The beforeShow event on the target page will contain this data object as data property.\n\n        Use case: in scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n\n        When the transitionParameters object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order.","oTransitionParameters":"type: object, description: This optional object can contain additional information for the transition function, like the DOM element which triggered the transition or the desired transition duration.\n\n        For a proper parameter order, the \"data\" parameter must be given when the transitionParameters parameter is used (it can be given as \"null\").\n\n        NOTE: It depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.\n        The \"show\", \"slide\" and \"fade\" transitions do not use any parameter.","sPageId":"type: string, description: The screen to which we are navigating to. The ID or the control itself can be given."}},"destroyMasterPages":{"!description":"Destroys all the masterPages in the aggregation <code>masterPages<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.SplitContainer"},"setDefaultTransitionNameDetail":{"!description":"Sets a new value for property <code>defaultTransitionNameDetail<\/code>.\n\nDetermines the type of the transition/animation to apply when to() is called without defining the\ntransition to use. The default is \"slide\", other options are \"fade\", \"show\", and the names of any registered custom transitions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>slide<\/code>.","!static":false,"!category":"function","!type":"fn(sDefaultTransitionNameDetail: String) -> sap.m.SplitContainer","parameters":{"sDefaultTransitionNameDetail":"type: string, description: New value for property <code>defaultTransitionNameDetail<\/code>"}},"removeAllMasterPages":{"!description":"Removes all the controls from the aggregation <code>masterPages<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"}},"sap.m.QuickViewGroup_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.QuickViewGroup with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.QuickViewGroup"},"sap.m.ObjectAttribute_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ObjectAttribute with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ObjectAttribute"},"sap.m.MenuButtonMode":{"!description":"Different mode for a MenuButton (predefined types)","!module":"sap/m/library","Regular":{"!description":"Default regular type (Menu button appears as a regular button, pressing opens a menu)","!category":"enum","!type":"String"},"!category":"static class","Split":{"!description":"Split type (Menu button appears as a split button, pressing fires the default action a menu,\npressing the arrow part opens a menu)","!category":"enum","!type":"String"}},"sap.m.semantic.SendMessageAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.SendMessageAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.SendMessageAction"},"sap.m.semantic.ShareMenuPage":{"!description":"A ShareMenuPage is a {@link sap.m.semantic.SemanticPage} with support for \"share\" menu in the footer.","getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.ShareMenuPage.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"destroyCustomShareMenuContent":{"!description":"Destroys all the customShareMenuContent in the aggregation <code>customShareMenuContent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.ShareMenuPage"},"!proto":"sap.m.semantic.SemanticPage","!category":"class","extend":{"!description":"Creates a new subclass of class sap.m.semantic.ShareMenuPage with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticPage.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new ShareMenuPage\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getCustomShareMenuContent customShareMenuContent} : sap.m.Button[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.SemanticPage#constructor sap.m.semantic.SemanticPage}\ncan be used as well.","removeCustomShareMenuContent":{"!description":"Removes a customShareMenuContent from the aggregation <code>customShareMenuContent<\/code>.","!static":false,"!category":"function","!type":"fn(vCustomShareMenuContent: Number | String | sap.m.Button) -> sap.m.Button","parameters":{"vCustomShareMenuContent":"type: int|string|sap.m.Button, description: The customShareMenuContentto remove or its index or id"}},"!module":"sap/m/semantic/ShareMenuPage","!helpDescription":"A ShareMenuPage is a {@link sap.m.semantic.SemanticPage} with support for \"share\" menu in the footer.","addCustomShareMenuContent":{"!description":"Adds some customShareMenuContent to the aggregation <code>customShareMenuContent<\/code>.","!static":false,"!category":"function","!type":"fn(oCustomShareMenuContent: sap.m.Button) -> sap.m.semantic.ShareMenuPage","parameters":{"oCustomShareMenuContent":"type: sap.m.Button, description: the customShareMenuContent to add; if empty, nothing is inserted"}},"getCustomShareMenuContent":{"!description":"Gets content of aggregation <code>customShareMenuContent<\/code>.\n\nCustom share menu buttons","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"indexOfCustomShareMenuContent":{"!description":"Checks for the provided <code>sap.m.Button<\/code> in the aggregation <code>customShareMenuContent<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oCustomShareMenuContent: sap.m.Button) -> Number","parameters":{"oCustomShareMenuContent":"type: sap.m.Button, description: The customShareMenuContent whose index is looked for"}},"removeAllCustomShareMenuContent":{"!description":"Removes all the controls from the aggregation <code>customShareMenuContent<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"insertCustomShareMenuContent":{"!description":"Inserts a customShareMenuContent into the aggregation <code>customShareMenuContent<\/code>.","!static":false,"!category":"function","!type":"fn(oCustomShareMenuContent: sap.m.Button, iIndex: Number) -> sap.m.semantic.ShareMenuPage","parameters":{"oCustomShareMenuContent":"type: sap.m.Button, description: the customShareMenuContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the customShareMenuContent should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the customShareMenuContent is inserted at position 0; for a value\n             greater than the current size of the aggregation, the customShareMenuContent is inserted at\n             the last position"}}},"sap.m.MaskInputRule":{"!description":"The <code>sap.m.MaskInputRule<\/code> control holds the mapping of a single <code>maskFormatSymbol<\/code>\nto the regular expression <code>regex<\/code> that defines the allowed characters for the rule.","extend":{"!description":"Creates a new subclass of class sap.m.MaskInputRule with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.MaskInputRule.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getRegex":{"!description":"Gets current value of property <code>regex<\/code>.\n\nDefines the allowed characters as a regular expression.\n\nDefault value is <code>[a-zA-Z0-9]<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new MaskInputRule.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMaskFormatSymbol maskFormatSymbol} : string (default: *)<\/li>\n<li>{@link #getRegex regex} : string (default: [a-zA-Z0-9])<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/m/MaskInputRule","!helpDescription":"The <code>sap.m.MaskInputRule<\/code> control holds the mapping of a single <code>maskFormatSymbol<\/code>\nto the regular expression <code>regex<\/code> that defines the allowed characters for the rule.","getMaskFormatSymbol":{"!description":"Gets current value of property <code>maskFormatSymbol<\/code>.\n\nDefines the symbol used in the mask format which will accept a certain range of characters.\n\nDefault value is <code>*<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Element","!category":"class"},"sap.m.Tokenizer_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.Tokenizer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.Tokenizer"},"sap.m.semantic.MasterPage_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.MasterPage with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticPage.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.MasterPage"},"sap.m.IBarInPageEnabler_obj":{"!type":"fn()","prototype":"sap.m.IBarInPageEnabler"},"sap.m.DisplayListItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.DisplayListItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.DisplayListItem"},"sap.m.CheckBox":{"setName":{"!description":"Sets a new value for property <code>name<\/code>.\n\nThe 'name' property to be used in the HTML code, for example for HTML forms that send data to the server via submit.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.m.CheckBox","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"getName":{"!description":"Gets current value of property <code>name<\/code>.\n\nThe 'name' property to be used in the HTML code, for example for HTML forms that send data to the server via submit.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selected<\/code> of type <code>boolean<\/code>Checks whether the CheckBox is marked or not .<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.CheckBox","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.m.CheckBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.CheckBox<\/code> itself.\n\nEvent is triggered when the control status is changed by the user by selecting or deselecting the checkbox.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.CheckBox","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.CheckBox<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nSpecifies whether the user shall be allowed to edit the state of the checkbox\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","getTextAlign":{"!description":"Gets current value of property <code>textAlign<\/code>.\n\nAligns the text of the checkbox. Available alignment settings are \"Begin\", \"Center\", \"End\", \"Left\", and \"Right\".\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextAlign"},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWidth of the checkbox`s label\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new CheckBox.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getActiveHandling activeHandling} : boolean (default: true)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.m.CheckBox","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nDisables the Checkbox. Disabled controls are not interactive and are rendered differently according to the theme.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!description":"The CheckBox control allows the user to select one or multiple items from a list. To select each item the user has to select the square box in front of it.","getTabIndex":{"!description":"Returns the CheckBox`s tab index.","!static":false,"!category":"function","!type":"fn() -> Number"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.CheckBox.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setValueState":{"!description":"Sets a new value for property <code>valueState<\/code>.\n\nAccepts the core enumeration ValueState.type that supports 'None', 'Error', 'Warning' and 'Success'.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sValueState: sap.ui.core.ValueState) -> sap.m.CheckBox","parameters":{"sValueState":"type: sap.ui.core.ValueState, description: New value for property <code>valueState<\/code>"}},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nDefines the text displayed next to the checkbox","!static":false,"!category":"function","!type":"fn() -> String"},"setTextAlign":{"!description":"Sets a new value for property <code>textAlign<\/code>.\n\nAligns the text of the checkbox. Available alignment settings are \"Begin\", \"Center\", \"End\", \"Left\", and \"Right\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn(sTextAlign: sap.ui.core.TextAlign) -> sap.m.CheckBox","parameters":{"sTextAlign":"type: sap.ui.core.TextAlign, description: New value for property <code>textAlign<\/code>"}},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nOptions for the text direction are RTL and LTR. Alternatively, the control can inherit the text direction from its parent container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.m.CheckBox","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"getActiveHandling":{"!description":"Gets current value of property <code>activeHandling<\/code>.\n\nFlag to switch on activeHandling, when it is switched off, there will be no visual changes on active state. Default value is 'true'\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWidth of the checkbox`s label\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.CheckBox","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"setActiveHandling":{"!description":"Sets a new value for property <code>activeHandling<\/code>.\n\nFlag to switch on activeHandling, when it is switched off, there will be no visual changes on active state. Default value is 'true'\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bActiveHandling: Boolean) -> sap.m.CheckBox","parameters":{"bActiveHandling":"type: boolean, description: New value for property <code>activeHandling<\/code>"}},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.m.CheckBox","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.m.CheckBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getSelected":{"!description":"Gets current value of property <code>selected<\/code>.\n\nStores the state of the checkbox whether it is selected or not.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nDisables the Checkbox. Disabled controls are not interactive and are rendered differently according to the theme.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.m.CheckBox","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nSpecifies whether the user shall be allowed to edit the state of the checkbox\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEditable: Boolean) -> sap.m.CheckBox","parameters":{"bEditable":"type: boolean, description: New value for property <code>editable<\/code>"}},"!module":"sap/m/CheckBox","getValueState":{"!description":"Gets current value of property <code>valueState<\/code>.\n\nAccepts the core enumeration ValueState.type that supports 'None', 'Error', 'Warning' and 'Success'.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"!helpDescription":"The CheckBox control allows the user to select one or multiple items from a list. To select each item the user has to select the square box in front of it.","removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"setTabIndex":{"!description":"Sets the tab index of the control","!static":false,"!category":"function","!type":"fn(iTabIndex: Number) -> sap.m.CheckBox","parameters":{"iTabIndex":"type: int, description: The tab index should be greater than or equal -1"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.m.CheckBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.CheckBox","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nOptions for the text direction are RTL and LTR. Alternatively, the control can inherit the text direction from its parent container.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nDefines the text displayed next to the checkbox\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.m.CheckBox","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.m.semantic.SemanticSelect_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.SemanticSelect with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticControl.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.SemanticSelect"},"sap.m.ActionSelect_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ActionSelect with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Select.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ActionSelect"},"sap.m.ResponsivePopover_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ResponsivePopover with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ResponsivePopover"},"sap.m.semantic.OpenInAction":{"!description":"An OpenInAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","extend":{"!description":"Creates a new subclass of class sap.m.semantic.OpenInAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.OpenInAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new OpenInAction.","!module":"sap/m/semantic/OpenInAction","!helpDescription":"An OpenInAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","!proto":"sap.m.semantic.SemanticButton","!category":"class"},"sap.m.Bar":{"setTranslucent":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.6 This property has no effect since release 1.18.6 and should not be used. Translucent bar may overlay an input and make it difficult to edit.<br>Sets a new value for property <code>translucent<\/code>.\n\nIndicates whether the Bar is partially translucent.\nIt is only applied for touch devices.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bTranslucent: Boolean) -> sap.m.Bar","parameters":{"bTranslucent":"type: boolean, description: New value for property <code>translucent<\/code>"}},"!proto":"sap.ui.core.Control","destroyContentRight":{"!description":"Destroys all the contentRight in the aggregation <code>contentRight<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Bar"},"!category":"class","getContentLeft":{"!description":"Gets content of aggregation <code>contentLeft<\/code>.\n\nRepresents the left content area, usually containing a button or an app icon. If it is overlapped by the right content, its content will disappear and the text will show an ellipsis.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeContentLeft":{"!description":"Removes a contentLeft from the aggregation <code>contentLeft<\/code>.","!static":false,"!category":"function","!type":"fn(vContentLeft: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContentLeft":"type: int|string|sap.ui.core.Control, description: The contentLeftto remove or its index or id"}},"insertContentRight":{"!description":"Inserts a contentRight into the aggregation <code>contentRight<\/code>.","!static":false,"!category":"function","!type":"fn(oContentRight: sap.ui.core.Control, iIndex: Number) -> sap.m.Bar","parameters":{"oContentRight":"type: sap.ui.core.Control, description: the contentRight to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the contentRight should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the contentRight is inserted at position 0; for a value\n             greater than the current size of the aggregation, the contentRight is inserted at\n             the last position"}},"removeContentRight":{"!description":"Removes a contentRight from the aggregation <code>contentRight<\/code>.","!static":false,"!category":"function","!type":"fn(vContentRight: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContentRight":"type: int|string|sap.ui.core.Control, description: The contentRightto remove or its index or id"}},"removeAllContentRight":{"!description":"Removes all the controls from the aggregation <code>contentRight<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getTranslucent":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.6 This property has no effect since release 1.18.6 and should not be used. Translucent bar may overlay an input and make it difficult to edit.<br>Gets current value of property <code>translucent<\/code>.\n\nIndicates whether the Bar is partially translucent.\nIt is only applied for touch devices.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertContentLeft":{"!description":"Inserts a contentLeft into the aggregation <code>contentLeft<\/code>.","!static":false,"!category":"function","!type":"fn(oContentLeft: sap.ui.core.Control, iIndex: Number) -> sap.m.Bar","parameters":{"oContentLeft":"type: sap.ui.core.Control, description: the contentLeft to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the contentLeft should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the contentLeft is inserted at position 0; for a value\n             greater than the current size of the aggregation, the contentLeft is inserted at\n             the last position"}},"getContentRight":{"!description":"Gets content of aggregation <code>contentRight<\/code>.\n\nRepresents the right content area. Controls such as action buttons or search field can be placed here.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!constructorDescription":"Constructor for a new Bar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnableFlexBox enableFlexBox} : boolean (default: false)<\/li>\n<li>{@link #getTranslucent translucent} : boolean (default: false)<\/li>\n<li>{@link #getDesign design} : sap.m.BarDesign (default: Auto)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContentLeft contentLeft} : sap.ui.core.Control[]<\/li>\n<li>{@link #getContentMiddle contentMiddle} : sap.ui.core.Control[]<\/li>\n<li>{@link #getContentRight contentRight} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","indexOfContentLeft":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>contentLeft<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContentLeft: sap.ui.core.Control) -> Number","parameters":{"oContentLeft":"type: sap.ui.core.Control, description: The contentLeft whose index is looked for"}},"indexOfContentRight":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>contentRight<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContentRight: sap.ui.core.Control) -> Number","parameters":{"oContentRight":"type: sap.ui.core.Control, description: The contentRight whose index is looked for"}},"removeAllContentMiddle":{"!description":"Removes all the controls from the aggregation <code>contentMiddle<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"insertContentMiddle":{"!description":"Inserts a contentMiddle into the aggregation <code>contentMiddle<\/code>.","!static":false,"!category":"function","!type":"fn(oContentMiddle: sap.ui.core.Control, iIndex: Number) -> sap.m.Bar","parameters":{"oContentMiddle":"type: sap.ui.core.Control, description: the contentMiddle to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the contentMiddle should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the contentMiddle is inserted at position 0; for a value\n             greater than the current size of the aggregation, the contentMiddle is inserted at\n             the last position"}},"!description":"The Bar control can be used as a header, sub-header and a footer in a page.\nIt has the capability to center a content like a title, while having other controls on the left and right side.","getMetadata":{"!description":"Returns a metadata object for class sap.m.Bar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"addContentMiddle":{"!description":"Adds some contentMiddle to the aggregation <code>contentMiddle<\/code>.","!static":false,"!category":"function","!type":"fn(oContentMiddle: sap.ui.core.Control) -> sap.m.Bar","parameters":{"oContentMiddle":"type: sap.ui.core.Control, description: the contentMiddle to add; if empty, nothing is inserted"}},"addContentLeft":{"!description":"Adds some contentLeft to the aggregation <code>contentLeft<\/code>.","!static":false,"!category":"function","!type":"fn(oContentLeft: sap.ui.core.Control) -> sap.m.Bar","parameters":{"oContentLeft":"type: sap.ui.core.Control, description: the contentLeft to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.m.Bar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setEnableFlexBox":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16 This property is no longer supported, instead, contentMiddle will always occupy 100% width when no contentLeft and contentRight are being set.<br>Sets a new value for property <code>enableFlexBox<\/code>.\n\nIf this flag is set to true, contentMiddle will be rendered as a HBox and layoutData can be used to allocate available space.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableFlexBox: Boolean) -> sap.m.Bar","parameters":{"bEnableFlexBox":"type: boolean, description: New value for property <code>enableFlexBox<\/code>"}},"!module":"sap/m/Bar","destroyContentLeft":{"!description":"Destroys all the contentLeft in the aggregation <code>contentLeft<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Bar"},"getDesign":{"!description":"Gets current value of property <code>design<\/code>.\n\nDetermines the design of the bar. If set to auto, it becomes dependent on the place where the bar is placed.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.BarDesign"},"!helpDescription":"The Bar control can be used as a header, sub-header and a footer in a page.\nIt has the capability to center a content like a title, while having other controls on the left and right side.","getContentMiddle":{"!description":"Gets content of aggregation <code>contentMiddle<\/code>.\n\nRepresents the middle content area. Controls such as label, segmented buttons or select can be placed here. The content is centrally positioned if there is enough space. If the right or left content overlaps the middle content, the middle content will be centered in the space between the left and the right content.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setDesign":{"!description":"Sets a new value for property <code>design<\/code>.\n\nDetermines the design of the bar. If set to auto, it becomes dependent on the place where the bar is placed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sDesign: sap.m.BarDesign) -> sap.m.Bar","parameters":{"sDesign":"type: sap.m.BarDesign, description: New value for property <code>design<\/code>"}},"removeAllContentLeft":{"!description":"Removes all the controls from the aggregation <code>contentLeft<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeContentMiddle":{"!description":"Removes a contentMiddle from the aggregation <code>contentMiddle<\/code>.","!static":false,"!category":"function","!type":"fn(vContentMiddle: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContentMiddle":"type: int|string|sap.ui.core.Control, description: The contentMiddleto remove or its index or id"}},"addContentRight":{"!description":"Adds some contentRight to the aggregation <code>contentRight<\/code>.","!static":false,"!category":"function","!type":"fn(oContentRight: sap.ui.core.Control) -> sap.m.Bar","parameters":{"oContentRight":"type: sap.ui.core.Control, description: the contentRight to add; if empty, nothing is inserted"}},"indexOfContentMiddle":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>contentMiddle<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContentMiddle: sap.ui.core.Control) -> Number","parameters":{"oContentMiddle":"type: sap.ui.core.Control, description: The contentMiddle whose index is looked for"}},"destroyContentMiddle":{"!description":"Destroys all the contentMiddle in the aggregation <code>contentMiddle<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Bar"},"getEnableFlexBox":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16 This property is no longer supported, instead, contentMiddle will always occupy 100% width when no contentLeft and contentRight are being set.<br>Gets current value of property <code>enableFlexBox<\/code>.\n\nIf this flag is set to true, contentMiddle will be rendered as a HBox and layoutData can be used to allocate available space.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.m.ToolbarLayoutData":{"!description":"Defines layout data for the toolbar items.","getMetadata":{"!description":"Returns a metadata object for class sap.m.ToolbarLayoutData.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setMinWidth":{"!description":"Sets a new value for property <code>minWidth<\/code>.\n\nSets the minimum width of the toolbar item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sMinWidth: sap.ui.core.CSSSize) -> sap.m.ToolbarLayoutData","parameters":{"sMinWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>minWidth<\/code>"}},"!proto":"sap.ui.core.LayoutData","!category":"class","setMaxWidth":{"!description":"Sets a new value for property <code>maxWidth<\/code>.\n\nSets the maximum width of the toolbar item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sMaxWidth: sap.ui.core.CSSSize) -> sap.m.ToolbarLayoutData","parameters":{"sMaxWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>maxWidth<\/code>"}},"getMaxWidth":{"!description":"Gets current value of property <code>maxWidth<\/code>.\n\nSets the maximum width of the toolbar item.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setShrinkable":{"!description":"Sets a new value for property <code>shrinkable<\/code>.\n\nDetermines whether the control, when in a toolbar, is shrinkable or not. For controls with fixed width (100px, 5rem, etc...) this property is ignored.\n\nNote: Nested layout controls should not be shrinkable.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShrinkable: Boolean) -> sap.m.ToolbarLayoutData","parameters":{"bShrinkable":"type: boolean, description: New value for property <code>shrinkable<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.ToolbarLayoutData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.LayoutData.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMinWidth":{"!description":"Gets current value of property <code>minWidth<\/code>.\n\nSets the minimum width of the toolbar item.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new ToolbarLayoutData.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShrinkable shrinkable} : boolean (default: false)<\/li>\n<li>{@link #getMinWidth minWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMaxWidth maxWidth} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.LayoutData#constructor sap.ui.core.LayoutData}\ncan be used as well.","!module":"sap/m/ToolbarLayoutData","!helpDescription":"Defines layout data for the toolbar items.","getShrinkable":{"!description":"Gets current value of property <code>shrinkable<\/code>.\n\nDetermines whether the control, when in a toolbar, is shrinkable or not. For controls with fixed width (100px, 5rem, etc...) this property is ignored.\n\nNote: Nested layout controls should not be shrinkable.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.m.Popover_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.Popover with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.Popover"},"sap.m.Table_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.Table with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.Table"},"sap.m.FacetFilterType":{"!description":"Used by the FacetFilter control to adapt its design according to type.","!module":"sap/m/library","Light":{"!description":"Forces FacetFilter to display in light mode.","!category":"enum","!type":"String"},"!category":"static class","Simple":{"!description":"Forces FacetFilter to display facet lists as a row of buttons, one button per facet. The FacetFilter will automatically adapt to the Light type when it detects smart phone sized displays.","!category":"enum","!type":"String"}},"sap.m.DateTimePicker_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.DateTimePicker with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.DatePicker.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.DateTimePicker"},"sap.m.semantic.SortSelect":{"!description":"A SortSelect button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","extend":{"!description":"Creates a new subclass of class sap.m.semantic.SortSelect with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticSelect.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.SortSelect.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new SortSelect.","!module":"sap/m/semantic/SortSelect","!helpDescription":"A SortSelect button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","!proto":"sap.m.semantic.SemanticSelect","!category":"class"},"sap.m.Slider":{"setName":{"!description":"Sets a new value for property <code>name<\/code>.\n\nThe name property to be used in the HTML code for the slider (e.g. for HTML forms that send data to the server via submit).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.m.Slider","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getName":{"!description":"Gets current value of property <code>name<\/code>.\n\nThe name property to be used in the HTML code for the slider (e.g. for HTML forms that send data to the server via submit).\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getStep":{"!description":"Gets current value of property <code>step<\/code>.\n\nDefine the amount of units to change the slider when adjusting by drag and drop.\n\nDefines the size of the slider's selection intervals. (e.g. min = 0, max = 10, step = 5 would result in possible selection of the values 0, 5, 10).\n\nThe step must be positive, if a negative number is provided, the default value will be used instead.\nIf the width of the slider converted to pixels is less than the range (max \u2013 min), the value will be rounded to multiples of the step size.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!proto":"sap.ui.core.Control","setProgress":{"!description":"Sets a new value for property <code>progress<\/code>.\n\nIndicate whether a progress bar indicator is shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bProgress: Boolean) -> sap.m.Slider","parameters":{"bProgress":"type: boolean, description: New value for property <code>progress<\/code>"}},"stepUp":{"!description":"Increments the value by multiplying the <code>step<\/code> with the given parameter.","!static":false,"!category":"function","!type":"fn(iStep?: Number) -> sap.m.Slider","parameters":{"iStep":"type: int, description: The number of steps the slider goes up."}},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDefines the width of the control.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"attachLiveChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>liveChange<\/code> event of this <code>sap.m.Slider<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Slider<\/code> itself.\n\nThis event is triggered during the dragging period, each time the slider value changes.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Slider","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Slider<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getProgress":{"!description":"Gets current value of property <code>progress<\/code>.\n\nIndicate whether a progress bar indicator is shown.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.m.Slider<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Slider","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"stepDown":{"!description":"Decrements the value by multiplying the step the <code>step<\/code> with the given parameter.","!static":false,"!category":"function","!type":"fn(iStep?: Number) -> sap.m.Slider","parameters":{"iStep":"type: int, description: The number of steps the slider goes down."}},"getShowHandleTooltip":{"!description":"Gets current value of property <code>showHandleTooltip<\/code>.\n\nIndicate whether the handle tooltip is shown.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setMin":{"!description":"Sets a new value for property <code>min<\/code>.\n\nThe minimum value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(fMin: Number) -> sap.m.Slider","parameters":{"fMin":"type: float, description: New value for property <code>min<\/code>"}},"!constructorDescription":"Constructor for a new <code>sap.m.Slider<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getName name} : string (default: )<\/li>\n<li>{@link #getMin min} : float (default: 0)<\/li>\n<li>{@link #getMax max} : float (default: 100)<\/li>\n<li>{@link #getStep step} : float (default: 1)<\/li>\n<li>{@link #getProgress progress} : boolean (default: true)<\/li>\n<li>{@link #getValue value} : float (default: 0)<\/li>\n<li>{@link #getShowHandleTooltip showHandleTooltip} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.m.Slider","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"setShowHandleTooltip":{"!description":"Sets a new value for property <code>showHandleTooltip<\/code>.\n\nIndicate whether the handle tooltip is shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowHandleTooltip: Boolean) -> sap.m.Slider","parameters":{"bShowHandleTooltip":"type: boolean, description: New value for property <code>showHandleTooltip<\/code>"}},"getMin":{"!description":"Gets current value of property <code>min<\/code>.\n\nThe minimum value.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nIndicates whether the user can change the value.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setStep":{"!description":"Sets a new value for property <code>step<\/code>.\n\nDefine the amount of units to change the slider when adjusting by drag and drop.\n\nDefines the size of the slider's selection intervals. (e.g. min = 0, max = 10, step = 5 would result in possible selection of the values 0, 5, 10).\n\nThe step must be positive, if a negative number is provided, the default value will be used instead.\nIf the width of the slider converted to pixels is less than the range (max \u2013 min), the value will be rounded to multiples of the step size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn(fStep: Number) -> sap.m.Slider","parameters":{"fStep":"type: float, description: New value for property <code>step<\/code>"}},"!description":"A slider is a user interface control that enables the user to adjust values in a specified numerical range.","setMax":{"!description":"Sets a new value for property <code>max<\/code>.\n\nThe maximum value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100<\/code>.","!static":false,"!category":"function","!type":"fn(fMax: Number) -> sap.m.Slider","parameters":{"fMax":"type: float, description: New value for property <code>max<\/code>"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.Slider.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getMax":{"!description":"Gets current value of property <code>max<\/code>.\n\nThe maximum value.\n\nDefault value is <code>100<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"detachLiveChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>liveChange<\/code> event of this <code>sap.m.Slider<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Slider","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.m.Slider<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Slider<\/code> itself.\n\nThis event is triggered after the end user finishes interacting, if there is any change.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Slider","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Slider<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value<\/code> of type <code>float<\/code>The current value of the slider after a change.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Slider","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDefines the width of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.Slider","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.Slider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nDefine the value.\n\nIf the value is lower/higher than the allowed minimum/maximum, the value of the properties <code>min<code>/<code>max<\/code> are used instead.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nIndicates whether the user can change the value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.m.Slider","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/m/Slider","!helpDescription":"A slider is a user interface control that enables the user to adjust values in a specified numerical range.","setValue":{"!description":"Sets the property <code>value<\/code>.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(fNewValue: Number) -> sap.m.Slider","parameters":{"fNewValue":"type: float, description: new value for property <code>value<\/code>."}},"fireLiveChange":{"!description":"Fires event <code>liveChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value<\/code> of type <code>float<\/code>The current value of the slider after a live change.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Slider","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}}},"sap.m.TableSelectDialog":{"getContentHeight":{"!description":"Retrieves content height of the select dialog {@link sap.m.Dialog}","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.TableSelectDialog"},"setRememberSelections":{"!description":"Sets a new value for property <code>rememberSelections<\/code>.\n\nControls whether the dialog clears the selection or not. When the dialog is opened multiple times in the same context to allow for corrections of previous user inputs, set this flag to \"true\". When the dialog should reset the selection to allow for a new selection each time set it to \"false\"\nNote: This property must be set before the Dialog is opened to have an effect.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRememberSelections: Boolean) -> sap.m.TableSelectDialog","parameters":{"bRememberSelections":"type: boolean, description: New value for property <code>rememberSelections<\/code>"}},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nThe items of the table.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ColumnListItem]"},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nSpecifies the title text in the dialog header.","!static":false,"!category":"function","!type":"fn() -> String"},"indexOfItem":{"!description":"Checks for the provided <code>sap.m.ColumnListItem<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.ColumnListItem) -> Number","parameters":{"oItem":"type: sap.m.ColumnListItem, description: The item whose index is looked for"}},"removeStyleClass":{"!description":"Transfers method to the inner dialog: removeStyleClass","!static":false,"!category":"function","!type":"fn() -> sap.m.TableSelectDialog"},"setContentWidth":{"!description":"Sets content width of the select dialog {@link sap.m.Dialog}","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.TableSelectDialog","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: the new content width value for the dialog"}},"removeAllColumns":{"!description":"Removes all the controls from the aggregation <code>columns<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Column]"},"setContentHeight":{"!description":"Sets content height of the select dialog {@link sap.m.Dialog}","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.m.TableSelectDialog","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: the new content height value for the dialog"}},"fireCancel":{"!description":"Fires event <code>cancel<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.TableSelectDialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!description":"TableSelectDialog provides you with an easier way to create a dialog that contains a list with grouping and search functionalities.\nThe Table used in a SelectDialog is a Table with Columns. After selecting an item, the dialog is closed and a callback function returns the item being selected.","addColumn":{"!description":"Adds some column to the aggregation <code>columns<\/code>.","!static":false,"!category":"function","!type":"fn(oColumn: sap.m.Column) -> sap.m.TableSelectDialog","parameters":{"oColumn":"type: sap.m.Column, description: the column to add; if empty, nothing is inserted"}},"detachCancel":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>cancel<\/code> event of this <code>sap.m.TableSelectDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.TableSelectDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.TableSelectDialog.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"detachLiveChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>liveChange<\/code> event of this <code>sap.m.TableSelectDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.TableSelectDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setTitle":{"!description":"Sets the title of the internal dialog","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.TableSelectDialog","parameters":{"sTitle":"type: string, description: the title text for the dialog"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ColumnListItem]"},"setBusyIndicatorDelay":{"!description":"Sets the busyIndicatorDelay value to the internal table","!static":false,"!category":"function","!type":"fn(iValue: Number) -> sap.m.TableSelectDialog","parameters":{"iValue":"type: int, description: Value for the busyIndicatorDelay."}},"indexOfColumn":{"!description":"Checks for the provided <code>sap.m.Column<\/code> in the aggregation <code>columns<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oColumn: sap.m.Column) -> Number","parameters":{"oColumn":"type: sap.m.Column, description: The column whose index is looked for"}},"extend":{"!description":"Creates a new subclass of class sap.m.TableSelectDialog with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"fireSearch":{"!description":"Fires event <code>search<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value<\/code> of type <code>string<\/code>Specifies the value entered in the search field.<\/li>\n<li><code>itemsBinding<\/code> of type <code>any<\/code>Determines the Items binding of the Table Select Dialog. Only available if the items aggregation is bound to a model.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.TableSelectDialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"unbindColumns":{"!description":"Unbinds aggregation <code>columns<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.TableSelectDialog"},"!module":"sap/m/TableSelectDialog","insertColumn":{"!description":"Inserts a column into the aggregation <code>columns<\/code>.","!static":false,"!category":"function","!type":"fn(oColumn: sap.m.Column, iIndex: Number) -> sap.m.TableSelectDialog","parameters":{"oColumn":"type: sap.m.Column, description: the column to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the column should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the column is inserted at position 0; for a value\n             greater than the current size of the aggregation, the column is inserted at\n             the last position"}},"!helpDescription":"TableSelectDialog provides you with an easier way to create a dialog that contains a list with grouping and search functionalities.\nThe Table used in a SelectDialog is a Table with Columns. After selecting an item, the dialog is closed and a callback function returns the item being selected.","addStyleClass":{"!description":"Transfers method to the inner dialog: addStyleClass","!static":false,"!category":"function","!type":"fn() -> sap.m.TableSelectDialog"},"setMultiSelect":{"!description":"Enables/Disables multi selection mode.","!static":false,"!category":"function","!type":"fn(bMulti: Boolean) -> sap.m.TableSelectDialog","parameters":{"bMulti":"type: boolean, description: flag for multi selection mode"}},"getNoDataText":{"!description":"Retrieves the internal List's no data text property","!static":false,"!category":"function","!type":"fn() -> String"},"detachConfirm":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>confirm<\/code> event of this <code>sap.m.TableSelectDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.TableSelectDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"bindColumns":{"!description":"Binds aggregation <code>columns<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.TableSelectDialog","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"attachCancel":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>cancel<\/code> event of this <code>sap.m.TableSelectDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.TableSelectDialog<\/code> itself.\n\nFires when the Cancel button is clicked.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.TableSelectDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.TableSelectDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireLiveChange":{"!description":"Fires event <code>liveChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value<\/code> of type <code>string<\/code>Specifies the value entered in the search field.<\/li>\n<li><code>itemsBinding<\/code> of type <code>any<\/code>The Items binding of the Table Select Dialog.\nOnly available if the items aggregation is bound to a model.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.TableSelectDialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.m.ColumnListItem) -> sap.m.ColumnListItem","parameters":{"vItem":"type: int|string|sap.m.ColumnListItem, description: The itemto remove or its index or id"}},"toggleStyleClass":{"!description":"Transfers method to the inner dialog: toggleStyleClass","!static":false,"!category":"function","!type":"fn() -> sap.m.TableSelectDialog"},"setNoDataText":{"!description":"Sets the no data text of the internal table","!static":false,"!category":"function","!type":"fn(sNoDataText: String)","parameters":{"sNoDataText":"type: string, description: the no data text for the table"}},"!proto":"sap.ui.core.Control","attachConfirm":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>confirm<\/code> event of this <code>sap.m.TableSelectDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.TableSelectDialog<\/code> itself.\n\nFires when the dialog is confirmed by selecting an item in single-selection mode or by pressing the confirmation button in multi-selection mode. The items being selected are returned as event parameters.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.TableSelectDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.TableSelectDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!category":"class","detachSearch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>search<\/code> event of this <code>sap.m.TableSelectDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.TableSelectDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachLiveChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>liveChange<\/code> event of this <code>sap.m.TableSelectDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.TableSelectDialog<\/code> itself.\n\nFires when the value of the search field is changed by a user (for example at each key press).","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.TableSelectDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.TableSelectDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getColumns":{"!description":"Gets content of aggregation <code>columns<\/code>.\n\nThe columns bindings.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Column]"},"addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.ColumnListItem) -> sap.m.TableSelectDialog","parameters":{"oItem":"type: sap.m.ColumnListItem, description: the item to add; if empty, nothing is inserted"}},"fireConfirm":{"!description":"Fires event <code>confirm<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selectedItem<\/code> of type <code>sap.m.StandardListItem<\/code>Returns the selected list item. When no item is selected, \"null\" is returned. When multi-selection is enabled and multiple items are selected, only the first selected item is returned.<\/li>\n<li><code>selectedItems<\/code> of type <code>sap.m.StandardListItem[]<\/code>Returns an array containing the visible selected list items. If no items are selected, an empty array is returned.<\/li>\n<li><code>selectedContexts<\/code> of type <code>string<\/code>Returns the binding contexts of the selected items including the non-visible items.\nNote: In contrast to the parameter \"selectedItems\", this parameter includes the selected but NOT visible items (due to list filtering). An empty array is set for this parameter if no Databinding is used.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.TableSelectDialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getContentWidth":{"!description":"Retrieves content width of the select dialog {@link sap.m.Dialog}","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new TableSelectDialog.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getNoDataText noDataText} : string<\/li>\n<li>{@link #getMultiSelect multiSelect} : boolean (default: false)<\/li>\n<li>{@link #getGrowingThreshold growingThreshold} : int<\/li>\n<li>{@link #getContentWidth contentWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getRememberSelections rememberSelections} : boolean (default: false)<\/li>\n<li>{@link #getContentHeight contentHeight} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.ColumnListItem[] (default)<\/li>\n<li>{@link #getColumns columns} : sap.m.Column[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:confirm confirm} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:search search} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","bindItems":{"!description":"Binds aggregation <code>items<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.TableSelectDialog","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"onAfterRendering":{"!description":"Shows the busy state and is called after the renderer is finished.","!static":false,"!category":"function","!type":"fn() -> sap.m.TableSelectDialog"},"bindAggregation":{"!description":"Forwards aggregations with the name of items or columns to the internal table.","!static":false,"!category":"function","!type":"fn(sAggregationName: String, oBindingInfo: Object) -> sap.m.TableSelectDialog","parameters":{"sAggregationName":"type: string, description: The name for the binding","oBindingInfo":"type: object, description: The configuration parameters for the binding"}},"getMultiSelect":{"!description":"Gets current value of property <code>multiSelect<\/code>.\n\nEnables the user to select several options from the table.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getGrowingThreshold":{"!description":"Gets current value of property <code>growingThreshold<\/code>.\n\nDetermines the number of items initially displayed in the table.","!static":false,"!category":"function","!type":"fn() -> Number"},"hasStyleClass":{"!description":"Transfers method to the inner dialog: hasStyleClass","!static":false,"!category":"function","!type":"fn() -> Boolean"},"unbindItems":{"!description":"Unbinds aggregation <code>items<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.TableSelectDialog"},"destroyColumns":{"!description":"Destroys all the columns in the aggregation <code>columns<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.TableSelectDialog"},"invalidate":{"!description":"Invalidates the dialog instead of this control, as there is no renderer.","!static":false,"!category":"function","!type":"fn() -> sap.m.TableSelectDialog"},"attachSearch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>search<\/code> event of this <code>sap.m.TableSelectDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.TableSelectDialog<\/code> itself.\n\nFires when the search button has been clicked on dialog.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.TableSelectDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.TableSelectDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getDomRef":{"!description":"Transfers method to the inner dialog: getDomRef","!static":false,"!category":"function","!type":"fn() -> Element"},"removeColumn":{"!description":"Removes a column from the aggregation <code>columns<\/code>.","!static":false,"!category":"function","!type":"fn(vColumn: Number | String | sap.m.Column) -> sap.m.Column","parameters":{"vColumn":"type: int|string|sap.m.Column, description: The columnto remove or its index or id"}},"setGrowingThreshold":{"!description":"Sets the growing threshold to the internal table","!static":false,"!category":"function","!type":"fn(iValue: Number) -> sap.m.TableSelectDialog","parameters":{"iValue":"type: int, description: Value for the table's growing threshold."}},"getRememberSelections":{"!description":"Gets current value of property <code>rememberSelections<\/code>.\n\nControls whether the dialog clears the selection or not. When the dialog is opened multiple times in the same context to allow for corrections of previous user inputs, set this flag to \"true\". When the dialog should reset the selection to allow for a new selection each time set it to \"false\"\nNote: This property must be set before the Dialog is opened to have an effect.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.ColumnListItem, iIndex: Number) -> sap.m.TableSelectDialog","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position","oItem":"type: sap.m.ColumnListItem, description: the item to insert; if empty, nothing is inserted"}},"open":{"!description":"Opens the internal dialog with a searchfield and a table.","!static":false,"!category":"function","!type":"fn(sSearchValue: String) -> sap.m.TableSelectDialog","parameters":{"sSearchValue":"type: string, description: Value for the search. The table will be automatically trigger the search event if this parameter is set."}}},"sap.m.PageBackgroundDesign":{"!description":"Available Page Background Design.","!module":"sap/m/library","Transparent":{"!description":"Transparent background for the page.","!category":"enum","!type":"String"},"!category":"static class","List":{"!description":"Page background color when a List is set as the Page content.","!category":"enum","!type":"String"},"Standard":{"!description":"Standard Page background color.","!category":"enum","!type":"String"},"Solid":{"!description":"A solid background color dependent on the theme.","!category":"enum","!type":"String"}},"sap.m.Select":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getName":{"!description":"Gets current value of property <code>name<\/code>.\n\nThe name to be used in the HTML code (for example, for HTML forms that send data to the server via submit).\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"destroyItems":{"!description":"Destroys all the items in the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Select"},"setForceSelection":{"!description":"Sets a new value for property <code>forceSelection<\/code>.\n\nIndicates whether the selection is restricted to one of the items in the list.\n<b>Note:<\/b> We strongly recommend that you always set this property to <code>false<\/code> and bind\nthe <code>selectedKey<\/code> property to the desired value for better interoperability with data binding.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bForceSelection: Boolean) -> sap.m.Select","parameters":{"bForceSelection":"type: boolean, description: New value for property <code>forceSelection<\/code>"}},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.m.Select<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Select","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMaxWidth":{"!description":"Gets current value of property <code>maxWidth<\/code>.\n\nSets the maximum width of the control.\n\n<b>Note:<\/b> This property is ignored if the <code>autoAdjustWidth<\/code> property is set to <code>true<\/code>.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getItems":{"!description":"Gets aggregation <code>items<\/code>.\n\n<b>Note<\/b>: This is the default aggregation.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item) -> Number","parameters":{"oItem":"type: sap.ui.core.Item, description: The item whose index is looked for"}},"getSelectedItemId":{"!description":"Gets current value of property <code>selectedItemId<\/code>.\n\nID of the selected item.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getSelectedItem":{"!description":"Gets the selected item object from the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Item | null"},"!description":"The <code>sap.m.Select<\/code> control provides a list of items that allows users to select an item.","getForceSelection":{"!description":"Gets current value of property <code>forceSelection<\/code>.\n\nIndicates whether the selection is restricted to one of the items in the list.\n<b>Note:<\/b> We strongly recommend that you always set this property to <code>false<\/code> and bind\nthe <code>selectedKey<\/code> property to the desired value for better interoperability with data binding.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.Select.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setTextAlign":{"!description":"Sets a new value for property <code>textAlign<\/code>.\n\nSets the horizontal alignment of the text within the input field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Initial<\/code>.","!static":false,"!category":"function","!type":"fn(sTextAlign: sap.ui.core.TextAlign) -> sap.m.Select","parameters":{"sTextAlign":"type: sap.ui.core.TextAlign, description: New value for property <code>textAlign<\/code>"}},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nSpecifies the direction of the text within the input field with enumerated options.\nBy default, the control inherits text direction from the DOM.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.m.Select","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.m.Select<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Select<\/code> itself.\n\nThis event is fired when the value in the selection field is changed in combination with one of\nthe following actions:\n<ul>\n\t<li>The focus leaves the selection field<\/li>\n\t<li>The <i>Enter<\/i> key is pressed<\/li>\n\t<li>The item is pressed<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Select","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Select<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setMaxWidth":{"!description":"Sets a new value for property <code>maxWidth<\/code>.\n\nSets the maximum width of the control.\n\n<b>Note:<\/b> This property is ignored if the <code>autoAdjustWidth<\/code> property is set to <code>true<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sMaxWidth: sap.ui.core.CSSSize) -> sap.m.Select","parameters":{"sMaxWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>maxWidth<\/code>"}},"removeAllItems":{"!description":"Removes all the items in the aggregation named <code>items<\/code>.\nAdditionally unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selectedItem<\/code> of type <code>sap.ui.core.Item<\/code>The selected item.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Select","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"extend":{"!description":"Creates a new subclass of class sap.m.Select with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getAutoAdjustWidth":{"!description":"Gets current value of property <code>autoAdjustWidth<\/code>.\n\nIndicates whether the width of the input field is determined by the selected item's content.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nThe URI to the icon that will be displayed only when using the <code>IconOnly<\/code> type.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.m.Select","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nIndicates whether the user can change the selection.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.m.Select","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"isOpen":{"!description":"Indicates whether the control's picker popup is opened.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/m/Select","!helpDescription":"The <code>sap.m.Select<\/code> control provides a list of items that allows users to select an item.","getType":{"!description":"Gets current value of property <code>type<\/code>.\n\nType of a select. Possible values <code>Default<\/code>, <code>IconOnly<\/code>.\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.SelectType"},"setName":{"!description":"Sets a new value for property <code>name<\/code>.\n\nThe name to be used in the HTML code (for example, for HTML forms that send data to the server via submit).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.m.Select","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"removeItem":{"!description":"Removes an item from the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.core.Item) -> sap.ui.core.Item","parameters":{"vItem":"type: int|string|sap.ui.core.Item, description: The item to be removed or its index or ID."}},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"!proto":"sap.ui.core.Control","getItemByKey":{"!description":"Gets the item with the given key from the aggregation named <code>items<\/code>.\n\n<b>Note: <\/b> If duplicate keys exist, the first item matching the key is returned.","!static":false,"!category":"function","!type":"fn(sKey: String) -> sap.ui.core.Item | null","parameters":{"sKey":"type: string, description: An item key that specifies the item to be retrieved."}},"getTextAlign":{"!description":"Gets current value of property <code>textAlign<\/code>.\n\nSets the horizontal alignment of the text within the input field.\n\nDefault value is <code>Initial<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextAlign"},"!category":"class","getItemAt":{"!description":"Gets the item from the aggregation named <code>items<\/code> at the given 0-based index.","!static":false,"!category":"function","!type":"fn(iIndex: Number) -> sap.ui.core.Item | null","parameters":{"iIndex":"type: int, description: Index of the item to return."}},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nSets the width of the control. The default width is derived from the widest item.\nIf the width defined is smaller than the widest item in the selection list, only the width of\nthe selection field will be changed: the list will keep the width of its widest item.\nIf the list is wider than the viewport, it is truncated and an ellipsis is displayed for each item.\nFor phones, the width of the list is always the same as the viewport.\n\n<b>Note:<\/b> This property is ignored if the <code>autoAdjustWidth<\/code> property is set to <code>true<\/code>.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"addItem":{"!description":"Adds an item to the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item) -> sap.m.Select","parameters":{"oItem":"type: sap.ui.core.Item, description: The item to be added; if empty, nothing is added."}},"!constructorDescription":"Constructor for a new <code>sap.m.Select<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string (default: )<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getMaxWidth maxWidth} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getSelectedKey selectedKey} : string (default: )<\/li>\n<li>{@link #getSelectedItemId selectedItemId} : string (default: )<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getType type} : sap.m.SelectType (default: Default)<\/li>\n<li>{@link #getAutoAdjustWidth autoAdjustWidth} : boolean (default: false)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Initial)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getForceSelection forceSelection} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Item[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.m.Select","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nIndicates whether the user can change the selection.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"bindItems":{"!description":"Binds aggregation <code>items<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.Select","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"close":{"!description":"Closes the control's picker popup.","!static":false,"!category":"function","!type":"fn() -> sap.m.Select"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"setSelectedKey":{"!description":"Sets property <code>selectedKey<\/code>.\n\nDefault value is an empty string <code>\"\"<\/code> or <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sKey: String) -> sap.m.Select","parameters":{"sKey":"type: string, description: New value for property <code>selectedKey<\/code>.\nIf the <code>forceSelection<\/code> property is set to <code>true<\/code> and the provided <code>sKey<\/code> is\nan empty string <code>\"\"<\/code> or <code>undefined<\/code>, the value of <code>sKey<\/code> is changed to match\nthe <code>key<\/code> of the first enabled item and the first enabled item is selected (if any items exist).\n\nIn the case that an item has the default key value, it is selected instead.\nIf duplicate keys exist, the first item matching the key is selected."}},"createPicker":{"!description":"Creates a picker popup container where the selection should take place.","!static":false,"!category":"function","!type":"fn(sPickerType: String) -> sap.m.Popover | sap.m.Dialog","parameters":{"sPickerType":"type: string, description: undefined"}},"unbindItems":{"!description":"Unbinds aggregation <code>items<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.Select"},"getLastItem":{"!description":"Gets the last item from the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Item | null"},"setSelectedItemId":{"!description":"Sets the <code>selectedItemId<\/code> property.\n\nDefault value is an empty string <code>\"\"<\/code> or <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: String | undefined) -> sap.m.Select","parameters":{"vItem":"type: string|undefined, description: New value for property <code>selectedItemId<\/code>.\nIf the provided <code>vItem<\/code> has a default value, the first enabled item will be selected (if any items exist)."}},"setType":{"!description":"Sets a new value for property <code>type<\/code>.\n\nType of a select. Possible values <code>Default<\/code>, <code>IconOnly<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn(sType: sap.m.SelectType) -> sap.m.Select","parameters":{"sType":"type: sap.m.SelectType, description: New value for property <code>type<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nSets the width of the control. The default width is derived from the widest item.\nIf the width defined is smaller than the widest item in the selection list, only the width of\nthe selection field will be changed: the list will keep the width of its widest item.\nIf the list is wider than the viewport, it is truncated and an ellipsis is displayed for each item.\nFor phones, the width of the list is always the same as the viewport.\n\n<b>Note:<\/b> This property is ignored if the <code>autoAdjustWidth<\/code> property is set to <code>true<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.Select","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nThe URI to the icon that will be displayed only when using the <code>IconOnly<\/code> type.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getEnabledItems":{"!description":"Gets the enabled items from the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(aItems?: [sap.ui.core.Item]) -> [sap.ui.core.Item]","parameters":{"aItems":"type: sap.ui.core.Item[], description: Items to filter."}},"setSelectedItem":{"!description":"Sets the <code>selectedItem<\/code> association.\n\nDefault value is <code>null<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: String | sap.ui.core.Item | null) -> sap.m.Select","parameters":{"vItem":"type: string|sap.ui.core.Item|null, description: New value for the <code>selectedItem<\/code> association.\nIf an ID of a <code>sap.ui.core.Item<\/code> is given, the item with this ID becomes the <code>selectedItem<\/code> association.\nAlternatively, a <code>sap.ui.core.Item<\/code> instance may be given or <code>null<\/code>.\nIf the value of <code>null<\/code> is provided, the first enabled item will be selected (if any items exist)."}},"getSelectedKey":{"!description":"Gets current value of property <code>selectedKey<\/code>.\n\nKey of the selected item.\n\n<b>Note:<\/b> If duplicate keys exist, the first item matching the key is used.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getFirstItem":{"!description":"Gets the first item from the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Item | null"},"insertItem":{"!description":"Inserts an item into the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item, iIndex: Number) -> sap.m.Select","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for\n            a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n            greater than the current size of the aggregation, the item is inserted at the last position.","oItem":"type: sap.ui.core.Item, description: The item to be inserted; if empty, nothing is inserted."}},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nSpecifies the direction of the text within the input field with enumerated options.\nBy default, the control inherits text direction from the DOM.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"open":{"!description":"Open the control's picker popup.","!static":false,"!category":"function","!type":"fn() -> sap.m.Select"},"setAutoAdjustWidth":{"!description":"Sets a new value for property <code>autoAdjustWidth<\/code>.\n\nIndicates whether the width of the input field is determined by the selected item's content.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bAutoAdjustWidth: Boolean) -> sap.m.Select","parameters":{"bAutoAdjustWidth":"type: boolean, description: New value for property <code>autoAdjustWidth<\/code>"}}},"sap.m.FlexJustifyContent":{"!description":"Available options for the layout of elements along the main axis of the flexbox layout.","Center":{"!description":"Flex items are packed toward the center of the line.","!category":"enum","!type":"String"},"!module":"sap/m/library","SpaceBetween":{"!description":"Flex items are evenly distributed in the line.","!category":"enum","!type":"String"},"Start":{"!description":"Flex items are packed toward the start of the line.","!category":"enum","!type":"String"},"SpaceAround":{"!description":"Flex items are evenly distributed in the line, with half-size spaces on either end.\n<b>Note:<\/b> This value behaves like SpaceBetween in Internet Explorer 10.","!category":"enum","!type":"String"},"!category":"static class","End":{"!description":"Flex items are packed toward the end of the line.","!category":"enum","!type":"String"},"Inherit":{"!description":"Inherits the value from its parent.","!category":"enum","!type":"String"}},"sap.m.P13nSortItem":{"!description":"Type for <code>sortItems<\/code> aggregation in P13nSortPanel control.","extend":{"!description":"Creates a new subclass of class sap.m.P13nSortItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getColumnKey":{"!description":"Gets current value of property <code>columnKey<\/code>.\n\nkey of the column","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.P13nSortItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setColumnKey":{"!description":"Sets a new value for property <code>columnKey<\/code>.\n\nkey of the column\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sColumnKey: String) -> sap.m.P13nSortItem","parameters":{"sColumnKey":"type: string, description: New value for property <code>columnKey<\/code>"}},"!constructorDescription":"Constructor for a new P13nSortItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getOperation operation} : string<\/li>\n<li>{@link #getColumnKey columnKey} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","!module":"sap/m/P13nSortItem","!helpDescription":"Type for <code>sortItems<\/code> aggregation in P13nSortPanel control.","!proto":"sap.ui.core.Item","getOperation":{"!description":"Gets current value of property <code>operation<\/code>.\n\nsap.m.P13nConditionOperation","!static":false,"!category":"function","!type":"fn() -> String"},"setOperation":{"!description":"Sets a new value for property <code>operation<\/code>.\n\nsap.m.P13nConditionOperation\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sOperation: String) -> sap.m.P13nSortItem","parameters":{"sOperation":"type: string, description: New value for property <code>operation<\/code>"}},"!category":"class"},"sap.m.TextArea":{"getWrapping":{"!description":"Gets current value of property <code>wrapping<\/code>.\n\nIndicates how the control wraps the text, e.g. <code>Soft<\/code>, <code>Hard<\/code>, <code>Off<\/code>.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Wrapping"},"getGrowingMaxLines":{"!description":"Gets current value of property <code>growingMaxLines<\/code>.\n\nDefines the maximum number of lines that the control can grow.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!proto":"sap.m.InputBase","!category":"class","getRows":{"!description":"Gets current value of property <code>rows<\/code>.\n\nDefines the number of visible text lines for the control.\n<b>Note:<\/b> The <code>height<\/code> property wins over the <code>rows<\/code> property, if both are set.\n\nDefault value is <code>2<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"attachLiveChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>liveChange<\/code> event of this <code>sap.m.TextArea<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.TextArea<\/code> itself.\n\nIs fired whenever the user has modified the text shown on the text area.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.TextArea","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.TextArea<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setGrowing":{"!description":"Sets a new value for property <code>growing<\/code>.\n\nIndicates the ability of the control to automatically grow and shrink dynamically with its content.\n<b>Note:<\/b> The <code>height<\/code> property is ignored, if this property set to <code>true<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bGrowing: Boolean) -> sap.m.TextArea","parameters":{"bGrowing":"type: boolean, description: New value for property <code>growing<\/code>"}},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nDefines the height of the control.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new TextArea.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getRows rows} : int (default: 2)<\/li>\n<li>{@link #getCols cols} : int (default: 20)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMaxLength maxLength} : int (default: 0)<\/li>\n<li>{@link #getWrapping wrapping} : sap.ui.core.Wrapping (default: None)<\/li>\n<li>{@link #getValueLiveUpdate valueLiveUpdate} : boolean (default: false)<\/li>\n<li>{@link #getGrowing growing} : boolean (default: false)<\/li>\n<li>{@link #getGrowingMaxLines growingMaxLines} : int (default: 0)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.InputBase#constructor sap.m.InputBase}\ncan be used as well.","getValueLiveUpdate":{"!description":"Gets current value of property <code>valueLiveUpdate<\/code>.\n\nIndicates when the <code>value<\/code> property gets updated with the user changes. Setting it to <code>true<\/code> updates the <code>value<\/code> property whenever the user has modified the text shown on the text area.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setRows":{"!description":"Sets a new value for property <code>rows<\/code>.\n\nDefines the number of visible text lines for the control.\n<b>Note:<\/b> The <code>height<\/code> property wins over the <code>rows<\/code> property, if both are set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>2<\/code>.","!static":false,"!category":"function","!type":"fn(iRows: Number) -> sap.m.TextArea","parameters":{"iRows":"type: int, description: New value for property <code>rows<\/code>"}},"getCols":{"!description":"Gets current value of property <code>cols<\/code>.\n\nDefines the visible width of the control, in average character widths.\n<b>Note:<\/b> The <code>width<\/code> property wins over the <code>cols<\/code> property, if both are set.\n\nDefault value is <code>20<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setWrapping":{"!description":"Sets a new value for property <code>wrapping<\/code>.\n\nIndicates how the control wraps the text, e.g. <code>Soft<\/code>, <code>Hard<\/code>, <code>Off<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sWrapping: sap.ui.core.Wrapping) -> sap.m.TextArea","parameters":{"sWrapping":"type: sap.ui.core.Wrapping, description: New value for property <code>wrapping<\/code>"}},"setValueLiveUpdate":{"!description":"Sets a new value for property <code>valueLiveUpdate<\/code>.\n\nIndicates when the <code>value<\/code> property gets updated with the user changes. Setting it to <code>true<\/code> updates the <code>value<\/code> property whenever the user has modified the text shown on the text area.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bValueLiveUpdate: Boolean) -> sap.m.TextArea","parameters":{"bValueLiveUpdate":"type: boolean, description: New value for property <code>valueLiveUpdate<\/code>"}},"!description":"The <code>sap.m.TextArea<\/code> enables multi-line text input.","setGrowingMaxLines":{"!description":"Sets a new value for property <code>growingMaxLines<\/code>.\n\nDefines the maximum number of lines that the control can grow.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iGrowingMaxLines: Number) -> sap.m.TextArea","parameters":{"iGrowingMaxLines":"type: int, description: New value for property <code>growingMaxLines<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.TextArea.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"detachLiveChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>liveChange<\/code> event of this <code>sap.m.TextArea<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.TextArea","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nDefines the height of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.m.TextArea","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.TextArea with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.InputBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getValue":{"!description":"Getter for property <code>value<\/code>.\nDefines the value of the control's input field.\n\nDefault value is <code>undefined<\/code>","!static":false,"!category":"function","!type":"fn() -> String"},"getGrowing":{"!description":"Gets current value of property <code>growing<\/code>.\n\nIndicates the ability of the control to automatically grow and shrink dynamically with its content.\n<b>Note:<\/b> The <code>height<\/code> property is ignored, if this property set to <code>true<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/m/TextArea","!helpDescription":"The <code>sap.m.TextArea<\/code> enables multi-line text input.","getMaxLength":{"!description":"Gets current value of property <code>maxLength<\/code>.\n\nDefines the maximum number of characters that the <code>value<\/code> can be.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setCols":{"!description":"Sets a new value for property <code>cols<\/code>.\n\nDefines the visible width of the control, in average character widths.\n<b>Note:<\/b> The <code>width<\/code> property wins over the <code>cols<\/code> property, if both are set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>20<\/code>.","!static":false,"!category":"function","!type":"fn(iCols: Number) -> sap.m.TextArea","parameters":{"iCols":"type: int, description: New value for property <code>cols<\/code>"}},"setMaxLength":{"!description":"Sets a new value for property <code>maxLength<\/code>.\n\nDefines the maximum number of characters that the <code>value<\/code> can be.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iMaxLength: Number) -> sap.m.TextArea","parameters":{"iMaxLength":"type: int, description: New value for property <code>maxLength<\/code>"}},"fireLiveChange":{"!description":"Fires event <code>liveChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value<\/code> of type <code>string<\/code>The new <code>value<\/code> of the control.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.TextArea","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}}},"sap.m.MultiInput":{"onfocusin":{"!description":"Focus is on MultiInput","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: undefined"}},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"detachTokenChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>tokenChange<\/code> event of this <code>sap.m.MultiInput<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.MultiInput","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getTokens":{"!description":"Gets content of aggregation <code>tokens<\/code>.\n\nThe currently displayed tokens","!static":false,"!category":"function","!type":"fn() -> [sap.m.Token]"},"!proto":"sap.m.Input","!category":"class","setEnableMultiLineMode":{"!description":"Setter for property <code>enableMultiLineMode<\/code>.","!static":false,"!category":"function","!type":"fn()"},"addValidator":{"!description":"Function adds an validation callback called before any new token gets added to the tokens aggregation","!static":false,"!category":"function","!type":"fn(fValidator: fn())","parameters":{"fValidator":"type: function, description: undefined"}},"setTokens":{"!description":"Function sets an array of tokens, existing tokens will get overridden","!static":false,"!category":"function","!type":"fn(aTokens: [sap.m.Token]) -> sap.m.MultiInput","parameters":{"aTokens":"type: sap.m.Token[], description: the new token set"}},"!constructorDescription":"Constructor for a new MultiInput.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnableMultiLineMode enableMultiLineMode} : boolean (default: false)<\/li>\n<li>{@link #getMaxTokens maxTokens} : int<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTokens tokens} : sap.m.Token[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:tokenChange tokenChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Input#constructor sap.m.Input}\ncan be used as well.","getPopupAnchorDomRef":{"!description":"Function returns domref which acts as reference point for the opening suggestion menu","!static":false,"!category":"function","!type":"fn() -> domRef"},"removeValidator":{"!description":"Function removes an validation callback","!static":false,"!category":"function","!type":"fn(fValidator: fn())","parameters":{"fValidator":"type: function, description: undefined"}},"getDomRefForValueStateMessage":{"!description":"Get the reference element which the message popup should dock to","!static":false,"!category":"function","!type":"fn() -> DOMRef"},"getMaxTokens":{"!description":"Gets current value of property <code>maxTokens<\/code>.\n\nThe max number of tokens that is allowed in MultiInput.","!static":false,"!category":"function","!type":"fn() -> Number"},"setMaxTokens":{"!description":"Sets a new value for property <code>maxTokens<\/code>.\n\nThe max number of tokens that is allowed in MultiInput.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iMaxTokens: Number) -> sap.m.MultiInput","parameters":{"iMaxTokens":"type: int, description: New value for property <code>maxTokens<\/code>"}},"!description":"MultiInput provides functionality to add / remove / enter tokens","addToken":{"!description":"Adds some token to the aggregation <code>tokens<\/code>.","!static":false,"!category":"function","!type":"fn(oToken: sap.m.Token) -> sap.m.MultiInput","parameters":{"oToken":"type: sap.m.Token, description: the token to add; if empty, nothing is inserted"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.MultiInput.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"fireTokenChange":{"!description":"Fires event <code>tokenChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>type<\/code> of type <code>string<\/code>Type of tokenChange event.\nThere are four TokenChange types: \"added\", \"removed\", \"removedAll\", \"tokensChanged\".\nUse Tokenizer.TokenChangeType.Added for \"added\",    Tokenizer.TokenChangeType.Removed for \"removed\", Tokenizer.TokenChangeType.RemovedAll for \"removedAll\" and Tokenizer.TokenChangeType.TokensChanged for \"tokensChanged\".<\/li>\n<li><code>token<\/code> of type <code>sap.m.Token<\/code>The added token or removed token.\nThis parameter is used when tokenChange type is \"added\" or \"removed\".<\/li>\n<li><code>tokens<\/code> of type <code>sap.m.Token[]<\/code>The array of removed tokens.\nThis parameter is used when tokenChange type is \"removedAll\".<\/li>\n<li><code>addedTokens<\/code> of type <code>sap.m.Token[]<\/code>The array of tokens that are added.\nThis parameter is used when tokenChange type is \"tokenChanged\".<\/li>\n<li><code>removedTokens<\/code> of type <code>sap.m.Token[]<\/code>The array of tokens that are removed.\nThis parameter is used when tokenChange type is \"tokenChanged\".<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.MultiInput","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"ontap":{"!description":"When tap on text field, deselect all tokens","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: undefined"}},"getEnableMultiLineMode":{"!description":"Gets current value of property <code>enableMultiLineMode<\/code>.\n\nIf set to true, the MultiInput will be displayed in multi-line display mode.\nIn multi-line display mode, all tokens can be fully viewed and easily edited in the MultiInput.\nThe default value is false.\n<b>Note:<\/b> This property does not take effect on smartphones.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"openMultiLine":{"!description":"Expand multi-line MultiInput in multi-line mode","!static":false,"!category":"function","!type":"fn()"},"destroyTokens":{"!description":"Destroys all the tokens in the aggregation <code>tokens<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.MultiInput"},"extend":{"!description":"Creates a new subclass of class sap.m.MultiInput with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Input.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"removeAllValidators":{"!description":"Function removes all validation callbacks","!static":false,"!category":"function","!type":"fn()"},"closeMultiLine":{"!description":"Close multi-line MultiInput in multi-line mode","!static":false,"!category":"function","!type":"fn()"},"!module":"sap/m/MultiInput","!helpDescription":"MultiInput provides functionality to add / remove / enter tokens","removeToken":{"!description":"Removes a token from the aggregation <code>tokens<\/code>.","!static":false,"!category":"function","!type":"fn(vToken: Number | String | sap.m.Token) -> sap.m.Token","parameters":{"vToken":"type: int|string|sap.m.Token, description: The tokento remove or its index or id"}},"clone":{"!description":"Function overwrites clone function to add tokens to MultiInput","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Element"},"removeAllTokens":{"!description":"Removes all the controls from the aggregation <code>tokens<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Token]"},"onsapescape":{"!description":"When press ESC, deselect all tokens and all texts","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: undefined"}},"attachTokenChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>tokenChange<\/code> event of this <code>sap.m.MultiInput<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.MultiInput<\/code> itself.\n\nFired when the tokens aggregation changed (add / remove token)","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.MultiInput","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.MultiInput<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"insertToken":{"!description":"Inserts a token into the aggregation <code>tokens<\/code>.","!static":false,"!category":"function","!type":"fn(oToken: sap.m.Token, iIndex: Number) -> sap.m.MultiInput","parameters":{"oToken":"type: sap.m.Token, description: the token to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the token should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the token is inserted at position 0; for a value\n             greater than the current size of the aggregation, the token is inserted at\n             the last position"}},"indexOfToken":{"!description":"Checks for the provided <code>sap.m.Token<\/code> in the aggregation <code>tokens<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oToken: sap.m.Token) -> Number","parameters":{"oToken":"type: sap.m.Token, description: The token whose index is looked for"}}},"sap.m.OverflowToolbarLayoutData_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.OverflowToolbarLayoutData with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ToolbarLayoutData.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.OverflowToolbarLayoutData"},"sap.m.semantic.FullscreenPage_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.FullscreenPage with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.ShareMenuPage.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.FullscreenPage"},"sap.m.Breadcrumbs_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.Breadcrumbs with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.Breadcrumbs"},"sap.m.Breadcrumbs":{"!description":"Enables users to navigate between items by providing a list of links to previous steps in the user's\nnavigation path. The last three steps can be accessed as links directly The remaining links prior to them\nare available in a drop-down menu.","insertLink":{"!description":"Inserts a link into the aggregation <code>links<\/code>.","!static":false,"!category":"function","!type":"fn(oLink: sap.m.Link, iIndex: Number) -> sap.m.Breadcrumbs","parameters":{"oLink":"type: sap.m.Link, description: the link to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the link should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the link is inserted at position 0; for a value\n             greater than the current size of the aggregation, the link is inserted at\n             the last position"}},"getCurrentLocationText":{"!description":"Gets current value of property <code>currentLocationText<\/code>.\n\nDetermines the text of current/last element in the Breadcrumbs path.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.Breadcrumbs.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLinks":{"!description":"Gets content of aggregation <code>links<\/code>.\n\nA list of all the active link elements in the Breadcrumbs control.\n<b>Note:<\/b> Enabling the property <code>wrapping<\/code> of the link will not work\nsince it's incompatible with the concept of the control.\nThe other properties will work, but their effect may be undesirable.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Link]"},"!proto":"sap.ui.core.Control","indexOfLink":{"!description":"Checks for the provided <code>sap.m.Link<\/code> in the aggregation <code>links<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oLink: sap.m.Link) -> Number","parameters":{"oLink":"type: sap.m.Link, description: The link whose index is looked for"}},"removeAllLinks":{"!description":"Removes all the controls from the aggregation <code>links<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Link]"},"removeLink":{"!description":"Removes a link from the aggregation <code>links<\/code>.","!static":false,"!category":"function","!type":"fn(vLink: Number | String | sap.m.Link) -> sap.m.Link","parameters":{"vLink":"type: int|string|sap.m.Link, description: The linkto remove or its index or id"}},"!category":"class","destroyLinks":{"!description":"Destroys all the links in the aggregation <code>links<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Breadcrumbs"},"extend":{"!description":"Creates a new subclass of class sap.m.Breadcrumbs with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new Breadcrumbs\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getCurrentLocationText currentLocationText} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getLinks links} : sap.m.Link[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/m/Breadcrumbs","!helpDescription":"Enables users to navigate between items by providing a list of links to previous steps in the user's\nnavigation path. The last three steps can be accessed as links directly The remaining links prior to them\nare available in a drop-down menu.","setCurrentLocationText":{"!description":"Sets a new value for property <code>currentLocationText<\/code>.\n\nDetermines the text of current/last element in the Breadcrumbs path.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sCurrentLocationText: String) -> sap.m.Breadcrumbs","parameters":{"sCurrentLocationText":"type: string, description: New value for property <code>currentLocationText<\/code>"}},"addLink":{"!description":"Adds some link to the aggregation <code>links<\/code>.","!static":false,"!category":"function","!type":"fn(oLink: sap.m.Link) -> sap.m.Breadcrumbs","parameters":{"oLink":"type: sap.m.Link, description: the link to add; if empty, nothing is inserted"}}},"sap.m.TabContainer":{"removeItem":{"!description":"Removes an item from the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.m.TabContainerItem) -> sap.m.TabContainerItem","parameters":{"vItem":"type: int|string|sap.m.TabContainerItem, description: The item to remove or its index or ID"}},"!proto":"sap.ui.core.Control","!category":"class","getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nThe items displayed in the <code>TabContainer<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.m.TabContainerItem]"},"!constructorDescription":"Constructor for a new TabContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowAddNewButton showAddNewButton} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.TabContainerItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemClose itemClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:itemSelect itemSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:addNewButtonPress addNewButtonPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","detachAddNewButtonPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>addNewButtonPress<\/code> event of this <code>sap.m.TabContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.TabContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"indexOfItem":{"!description":"Checks for the provided <code>sap.m.TabContainerItem<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.TabContainerItem) -> Number","parameters":{"oItem":"type: sap.m.TabContainerItem, description: The item whose index is looked for"}},"getShowAddNewButton":{"!description":"Gets current value of property <code>showAddNewButton<\/code>.\n\nDefines whether an <code>Add New Tab<\/code> button is displayed in the TabStrip.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"bindItems":{"!description":"Binds aggregation <code>items<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.TabContainer","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getSelectedItem":{"!description":"ID of the element which is the current target of the association <code>selectedItem<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.TabContainerItem"},"!description":"The TabContainer control represents a collection of tabs with associated content.","detachItemClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>itemClose<\/code> event of this <code>sap.m.TabContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.TabContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireItemSelect":{"!description":"Fires event <code>itemSelect<\/code> to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.\n\nExpects the following event parameters:\n<ul>\n<li><code>item<\/code> of type <code>sap.m.TabContainerItem<\/code>The selected item.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> Boolean","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.TabContainer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachAddNewButtonPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>addNewButtonPress<\/code> event of this <code>sap.m.TabContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.TabContainer<\/code> itself.\n\nFired when <code>Add New Tab<\/code> button is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.TabContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.TabContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachItemSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>itemSelect<\/code> event of this <code>sap.m.TabContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.TabContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"unbindItems":{"!description":"Unbinds aggregation <code>items<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.TabContainer"},"fireItemClose":{"!description":"Fires event <code>itemClose<\/code> to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.\n\nExpects the following event parameters:\n<ul>\n<li><code>item<\/code> of type <code>sap.m.TabContainerItem<\/code>The item to be closed.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> Boolean","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"extend":{"!description":"Creates a new subclass of class sap.m.TabContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"_toTabStripItem":{"!description":"Finds the <code>sap.m.TabStripItem<\/code> corresponding to a given <code>sap.m.TabContainerItem<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: sap.m.TabContainerItem | String) -> sap.m.TabStripItem | null","parameters":{"vItem":"type: sap.m.TabContainerItem|string, description: object or ID of the <code>TabContainerItem<\/code>"}},"attachItemSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>itemSelect<\/code> event of this <code>sap.m.TabContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.TabContainer<\/code> itself.\n\nFired when an item is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.TabContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.TabContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!module":"sap/m/TabContainer","!helpDescription":"The TabContainer control represents a collection of tabs with associated content.","attachItemClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>itemClose<\/code> event of this <code>sap.m.TabContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.TabContainer<\/code> itself.\n\nFired when an item is closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.TabContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.TabContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireAddNewButtonPress":{"!description":"Fires event <code>addNewButtonPress<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.TabContainer","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}}},"sap.m.IconTabHeader_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.IconTabHeader with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.IconTabHeader"},"sap.m.Image":{"setBackgroundRepeat":{"!description":"Sets a new value for property <code>backgroundRepeat<\/code>.\n\nDefines whether the source image is repeated when the output DOM element is bigger than the source. This property is set on the output DOM element using CSS style 'background-repeat'. This property takes effect only when the 'mode' property is set to sap.m.ImageMode.Background.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>no-repeat<\/code>.","!static":false,"!category":"function","!type":"fn(sBackgroundRepeat: String) -> sap.m.Image","parameters":{"sBackgroundRepeat":"type: string, description: New value for property <code>backgroundRepeat<\/code>"}},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"setDensityAware":{"!description":"Sets a new value for property <code>densityAware<\/code>.\n\nIf this is set to false, the src image will be loaded directly without attempting to fetch the density perfect image for high density device.\n\nBy default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server.\n\nIf bandwidth is the key for the application, set this value to false.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bDensityAware: Boolean) -> sap.m.Image","parameters":{"bDensityAware":"type: boolean, description: New value for property <code>densityAware<\/code>"}},"attachError":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>error<\/code> event of this <code>sap.m.Image<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Image<\/code> itself.\n\nEvent is fired when the image resource can't be loaded. If densityAware is set to true, the event is fired when none of the fallback resources can be loaded.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Image","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Image<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.core.Control","!category":"class","getUseMap":{"!description":"Gets current value of property <code>useMap<\/code>.\n\nThe name of the image map that defines the clickable areas","!static":false,"!category":"function","!type":"fn() -> String"},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWhen the empty value is kept, the original size is not changed. It is also possible to make settings for width or height only, the original ratio between width/height is maintained. When 'mode' property is set to sap.m.ImageMode.Background, this property always needs to be set. Otherwise the output DOM element has a 0 size.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setActiveSrc":{"!description":"This overrides the default setter of the activeSrc property in order to avoid the rerendering.","!static":false,"!category":"function","!type":"fn(sActiveSrc: sap.ui.core.URI)","parameters":{"sActiveSrc":"type: sap.ui.core.URI, description: undefined"}},"setBackgroundPosition":{"!description":"Sets a new value for property <code>backgroundPosition<\/code>.\n\nDefines the position of the image in sap.m.ImageMode.Background mode. This property is set on the output DOM element using CSS style 'background-position'. This property takes effect only when the 'mode' property is set to sap.m.ImageMode.Background.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>initial<\/code>.","!static":false,"!category":"function","!type":"fn(sBackgroundPosition: String) -> sap.m.Image","parameters":{"sBackgroundPosition":"type: string, description: New value for property <code>backgroundPosition<\/code>"}},"setDecorative":{"!description":"Sets a new value for property <code>decorative<\/code>.\n\nA decorative image is included for design reasons. Accessibility tools will ignore decorative images.\n\nNote: If the Image has an image map (useMap is set), this property will be overridden (the image will not be rendered as decorative).\nA decorative image has no ALT attribute, so the Alt property is ignored if the image is decorative.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bDecorative: Boolean) -> sap.m.Image","parameters":{"bDecorative":"type: boolean, description: New value for property <code>decorative<\/code>"}},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nWhen the empty value is kept, the original size is not changed. It is also possible to make settings for width or height only, the original ratio between width/height is maintained. When 'mode' property is set to sap.m.ImageMode.Background, this property always needs to be set. Otherwise the output DOM element has a 0 size.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new Image.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSrc src} : sap.ui.core.URI<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getDecorative decorative} : boolean (default: true)<\/li>\n<li>{@link #getAlt alt} : string<\/li>\n<li>{@link #getUseMap useMap} : string<\/li>\n<li>{@link #getDensityAware densityAware} : boolean (default: true)<\/li>\n<li>{@link #getActiveSrc activeSrc} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getMode mode} : sap.m.ImageMode (default: Image)<\/li>\n<li>{@link #getBackgroundSize backgroundSize} : string (default: cover)<\/li>\n<li>{@link #getBackgroundPosition backgroundPosition} : string (default: initial)<\/li>\n<li>{@link #getBackgroundRepeat backgroundRepeat} : string (default: no-repeat)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:tap tap} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:load load} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:error error} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","detachError":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>error<\/code> event of this <code>sap.m.Image<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Image","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireTap":{"!description":"Fires event <code>tap<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Image","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getActiveSrc":{"!description":"Gets current value of property <code>activeSrc<\/code>.\n\nThe source property which is used when the image is pressed.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getDecorative":{"!description":"Gets current value of property <code>decorative<\/code>.\n\nA decorative image is included for design reasons. Accessibility tools will ignore decorative images.\n\nNote: If the Image has an image map (useMap is set), this property will be overridden (the image will not be rendered as decorative).\nA decorative image has no ALT attribute, so the Alt property is ignored if the image is decorative.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachLoad":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>load<\/code> event of this <code>sap.m.Image<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Image","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMode":{"!description":"Gets current value of property <code>mode<\/code>.\n\nDefines how the src and the activeSrc is output to the Dom Element. When set to sap.m.ImageMode.Image which is the default value, the src (activeSrc) is set to the 'src' attribute of the 'img' tag. When set to sap.m.ImageMode.Background, the src (activeSrc) is set to the CSS style 'background-image' and the root DOM element is rendered as a 'span' tag instead of an 'img' tag.\n\nDefault value is <code>Image<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ImageMode"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.m.Image<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Image<\/code> itself.\n\nEvent is fired when the user clicks on the control.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Image","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Image<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachTap":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>tap<\/code> event of this <code>sap.m.Image<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Image","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireLoad":{"!description":"Fires event <code>load<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Image","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getDensityAware":{"!description":"Gets current value of property <code>densityAware<\/code>.\n\nIf this is set to false, the src image will be loaded directly without attempting to fetch the density perfect image for high density device.\n\nBy default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server.\n\nIf bandwidth is the key for the application, set this value to false.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"A wrapper around the IMG tag. The image can be loaded from a remote or local server.\n\nDensity related image will be loaded if image with density awareness name in format [imageName]@[densityValue].[extension] is provided. The valid desity values are 1, 1.5, 2. If the original devicePixelRatio isn't one of the three valid numbers, it's rounded up to the nearest one.\n\nThere are various size setting options available, and the images can be combined with actions.\n\nFrom version 1.30, new image mode sap.m.ImageMode.Background is added. When this mode is set, the src property is set using the css style 'background-image'. The properties 'backgroundSize', 'backgroundPosition', 'backgroundRepeat' have effect only when image is in sap.m.ImageMode.Background mode. In order to make the high density image correctly displayed, the 'backgroundSize' should be set to the dimension of the normal density version.","setSrc":{"!description":"This overrides the default setter of the src property and update the dom node.","!static":false,"!category":"function","!type":"fn(sSrc: sap.ui.core.URI)","parameters":{"sSrc":"type: sap.ui.core.URI, description: undefined"}},"setUseMap":{"!description":"Sets a new value for property <code>useMap<\/code>.\n\nThe name of the image map that defines the clickable areas\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sUseMap: String) -> sap.m.Image","parameters":{"sUseMap":"type: string, description: New value for property <code>useMap<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.Image.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachLoad":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>load<\/code> event of this <code>sap.m.Image<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Image<\/code> itself.\n\nEvent is fired when the image resource is loaded.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Image","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Image<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getBackgroundPosition":{"!description":"Gets current value of property <code>backgroundPosition<\/code>.\n\nDefines the position of the image in sap.m.ImageMode.Background mode. This property is set on the output DOM element using CSS style 'background-position'. This property takes effect only when the 'mode' property is set to sap.m.ImageMode.Background.\n\nDefault value is <code>initial<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setAlt":{"!description":"Sets a new value for property <code>alt<\/code>.\n\nThe alternative text that is displayed in case the Image is not available, or cannot be displayed.\nIf the image is set to decorative this property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAlt: String) -> sap.m.Image","parameters":{"sAlt":"type: string, description: New value for property <code>alt<\/code>"}},"getSrc":{"!description":"Gets current value of property <code>src<\/code>.\n\nRelative or absolute path to URL where the image file is stored. The path will be adapted to the density aware format according to the density of the device following the convention that [imageName]@[densityValue].[extension]","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getBackgroundSize":{"!description":"Gets current value of property <code>backgroundSize<\/code>.\n\nDefines the size of the image in sap.m.ImageMode.Background mode. This property is set on the output DOM element using CSS style 'background-size'. This property takes effect only when the 'mode' property is set to sap.m.ImageMode.Background.\n\nDefault value is <code>cover<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setMode":{"!description":"Sets a new value for property <code>mode<\/code>.\n\nDefines how the src and the activeSrc is output to the Dom Element. When set to sap.m.ImageMode.Image which is the default value, the src (activeSrc) is set to the 'src' attribute of the 'img' tag. When set to sap.m.ImageMode.Background, the src (activeSrc) is set to the CSS style 'background-image' and the root DOM element is rendered as a 'span' tag instead of an 'img' tag.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Image<\/code>.","!static":false,"!category":"function","!type":"fn(sMode: sap.m.ImageMode) -> sap.m.Image","parameters":{"sMode":"type: sap.m.ImageMode, description: New value for property <code>mode<\/code>"}},"attachTap":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>tap<\/code> event of this <code>sap.m.Image<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Image<\/code> itself.\n\nEvent is fired when the user clicks on the control. (This event is deprecated, use the press event instead)","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Image","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Image<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nWhen the empty value is kept, the original size is not changed. It is also possible to make settings for width or height only, the original ratio between width/height is maintained. When 'mode' property is set to sap.m.ImageMode.Background, this property always needs to be set. Otherwise the output DOM element has a 0 size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.m.Image","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWhen the empty value is kept, the original size is not changed. It is also possible to make settings for width or height only, the original ratio between width/height is maintained. When 'mode' property is set to sap.m.ImageMode.Background, this property always needs to be set. Otherwise the output DOM element has a 0 size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.Image","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.Image with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.m.Image<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Image","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Image","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setBackgroundSize":{"!description":"Sets a new value for property <code>backgroundSize<\/code>.\n\nDefines the size of the image in sap.m.ImageMode.Background mode. This property is set on the output DOM element using CSS style 'background-size'. This property takes effect only when the 'mode' property is set to sap.m.ImageMode.Background.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>cover<\/code>.","!static":false,"!category":"function","!type":"fn(sBackgroundSize: String) -> sap.m.Image","parameters":{"sBackgroundSize":"type: string, description: New value for property <code>backgroundSize<\/code>"}},"fireError":{"!description":"Fires event <code>error<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Image","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getBackgroundRepeat":{"!description":"Gets current value of property <code>backgroundRepeat<\/code>.\n\nDefines whether the source image is repeated when the output DOM element is bigger than the source. This property is set on the output DOM element using CSS style 'background-repeat'. This property takes effect only when the 'mode' property is set to sap.m.ImageMode.Background.\n\nDefault value is <code>no-repeat<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/m/Image","!helpDescription":"A wrapper around the IMG tag. The image can be loaded from a remote or local server.\n\nDensity related image will be loaded if image with density awareness name in format [imageName]@[densityValue].[extension] is provided. The valid desity values are 1, 1.5, 2. If the original devicePixelRatio isn't one of the three valid numbers, it's rounded up to the nearest one.\n\nThere are various size setting options available, and the images can be combined with actions.\n\nFrom version 1.30, new image mode sap.m.ImageMode.Background is added. When this mode is set, the src property is set using the css style 'background-image'. The properties 'backgroundSize', 'backgroundPosition', 'backgroundRepeat' have effect only when image is in sap.m.ImageMode.Background mode. In order to make the high density image correctly displayed, the 'backgroundSize' should be set to the dimension of the normal density version.","getAlt":{"!description":"Gets current value of property <code>alt<\/code>.\n\nThe alternative text that is displayed in case the Image is not available, or cannot be displayed.\nIf the image is set to decorative this property is ignored.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.m.TimePicker":{"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"onAfterClose":{"!description":"Called after the picker closes.","!static":false,"!category":"function","!type":"fn()"},"setDateValue":{"!description":"Sets the <code>dateValue<\/code> JavaScript date object.\n\nRecommended usage is when <code>value<\/code> is not set, as they are mutually exclusive.","!static":false,"!category":"function","!type":"fn(oDate: Date) -> sap.m.TimePicker | Error","parameters":{"oDate":"type: date, description: New date object"}},"fireChangeEvent":{"!description":"Fires the change event for the listeners","!static":false,"!category":"function","!type":"fn(sValue: String, oParams?: Object)","parameters":{"oParams":"type: Object, description: extra event parameters.","sValue":"type: String, description: value of the input."}},"!proto":"sap.m.MaskInput","setLocaleId":{"!description":"Sets the locale of the control.\n\nUsed for parsing and formatting the time values in languages different than English.\nNecessary for translation and auto-complete of the day periods, such as AM and PM.","!static":false,"!category":"function","!type":"fn(sLocaleId: String) -> sap.m.TimePicker","parameters":{"sLocaleId":"type: string, description: A locale identifier like 'en_US'"}},"!category":"class","setTooltip":{"!description":"Sets tooltip of the control.","!static":false,"!category":"function","!type":"fn(vTooltip: String | sap.ui.core.TooltipBase) -> sap.m.TimePicker","parameters":{"vTooltip":"type: string|sap.ui.core.TooltipBase, description: undefined"}},"onAfterOpen":{"!description":"Called after the picker appears.","!static":false,"!category":"function","!type":"fn()"},"!constructorDescription":"Constructor for a new TimePicker.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDisplayFormat displayFormat} : string<\/li>\n<li>{@link #getValueFormat valueFormat} : string<\/li>\n<li>{@link #getLocaleId localeId} : string<\/li>\n<li>{@link #getDateValue dateValue} : object<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.MaskInput#constructor sap.m.MaskInput}\ncan be used as well.","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nDisplays the text of the general picker label and is read by screen readers.\nIt is visible only on phone.","!static":false,"!category":"function","!type":"fn() -> String"},"setValueFormat":{"!description":"Sets the <code>valueFormat<\/code> property.","!static":false,"!category":"function","!type":"fn(sValueFormat: String) -> sap.m.TimePicker","parameters":{"sValueFormat":"type: string, description: The format of strings that are set as value to the control"}},"!description":"The TimePicker is an extension of the Input control and allows time selection in any\ndevice or browser supported by UI5.\nIt enables users to fill time related input fields. For the TimePicker UI,\nyou can define text, icon or both. A time format must be specified,\notherwise the default \"HH:mm:ss a\" will be used. The functionality is aligned with the\n{@link sap.m.DatePicker} control for consistent behavior.","init":{"!description":"Initializes the control.","!static":false,"!category":"function","!type":"fn()"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.TimePicker.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getValueFormat":{"!description":"Gets current value of property <code>valueFormat<\/code>.\n\nDetermines the format of the value property.\n\nThe default value is the browser's medium time format locale setting\n{@link sap.ui.core.LocaleData#getTimePattern}.\nIf data binding with type {@link sap.ui.model.type.Time} is used for the\n<code>value<\/code> property, the <code>valueFormat<\/code> property\nis ignored as the information is provided from the binding itself.","!static":false,"!category":"function","!type":"fn() -> String"},"onBeforeOpen":{"!description":"Called before the picker appears.","!static":false,"!category":"function","!type":"fn()"},"fireChange":{"!description":"Fires change event to attached listeners.\n\nExpects following event parameters:\n<ul>\n<li>value parameter of type <code>string<\/code> - the new value of the input<\/li>\n<li>valid parameter of type <code>boolean<\/code> - indicator for a valid time<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.TimePicker","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getLocaleId":{"!description":"Gets current value of property <code>localeId<\/code>.\n\nDefines the locale used to parse string values representing time.\n\nDetermines the locale, used to interpret the string, supplied by the\n<code>value<\/code> property.\nExample: AM in the string \"09:04 AM\" is locale (language) dependent.\nThe format comes from the browser language settings if not set explicitly.\nUsed in combination with 12 hour <code>valueFormat<\/code> containing 'a', which\nstands for day period string.\nDefault value is taken from browser's locale setting.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.m.TimePicker with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.MaskInput.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setDisplayFormat":{"!description":"Sets the <code>displayFormat<\/code>.","!static":false,"!category":"function","!type":"fn(sDisplayFormat: String) -> sap.m.TimePicker","parameters":{"sDisplayFormat":"type: string, description: The format of the string inside the input"}},"getDisplayFormat":{"!description":"Gets current value of property <code>displayFormat<\/code>.\n\nDetermines the format, displayed in the input field and the picker sliders.\n\nThe default value is the browser's medium time format locale setting\n{@link sap.ui.core.LocaleData#getTimePattern}.\nIf data binding with type {@link sap.ui.model.type.Time} is used for the\n<code>value<\/code> property, the <code>displayFormat<\/code> property\nis ignored as the information is provided from the binding itself.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/m/TimePicker","!helpDescription":"The TimePicker is an extension of the Input control and allows time selection in any\ndevice or browser supported by UI5.\nIt enables users to fill time related input fields. For the TimePicker UI,\nyou can define text, icon or both. A time format must be specified,\notherwise the default \"HH:mm:ss a\" will be used. The functionality is aligned with the\n{@link sap.m.DatePicker} control for consistent behavior.","getDateValue":{"!description":"Gets current value of property <code>dateValue<\/code>.\n\nHolds a reference to a JavaScript Date Object. The <code>value<\/code> (string)\nproperty will be set according to it. Alternatively, if the <code>value<\/code>\nand <code>valueFormat<\/code> pair properties are supplied instead,\nthe <code>dateValue<\/code> will be instantiated аccording to the parsed\n<code>value<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"}},"sap.m.WizardStep_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.WizardStep with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.WizardStep"},"sap.m.ListMode":{"!description":"Defines the mode of the list.","Delete":{"!description":"Delete mode (only one list item can be deleted via provided delete button)","!category":"enum","!type":"String"},"MultiSelect":{"!description":"Multi selection mode (more than one list item can be selected).","!category":"enum","!type":"String"},"SingleSelect":{"!description":"Right-positioned single selection mode (only one list item can be selected).","!category":"enum","!type":"String"},"!module":"sap/m/library","!category":"static class","None":{"!description":"Default mode (no selection).","!category":"enum","!type":"String"},"SingleSelectMaster":{"!description":"Selected item is highlighted but no selection control is visible (only one list item can be selected).","!category":"enum","!type":"String"},"SingleSelectLeft":{"!description":"Left-positioned single selection mode (only one list item can be selected).","!category":"enum","!type":"String"}},"sap.m.App_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.App with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.NavContainer.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.App"},"sap.m.ObjectHeader":{"removeAllAdditionalNumbers":{"!description":"Removes all the controls from the aggregation <code>additionalNumbers<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ObjectNumber]"},"attachIntroPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>introPress<\/code> event of this <code>sap.m.ObjectHeader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ObjectHeader<\/code> itself.\n\nEvent is fired when the intro is active and the user taps/clicks on it","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ObjectHeader","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ObjectHeader<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getSecondStatus":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 Use the statuses aggregation instead.<br>Gets content of aggregation <code>secondStatus<\/code>.\n\nSecond status shown on the right side of the attributes below the first status.\nIf it is not set the second attribute will expand to take the entire row.","!static":false,"!category":"function","!type":"fn() -> sap.m.ObjectStatus"},"setIntro":{"!description":"Sets a new value for property <code>intro<\/code>.\n\nDetermines the introductory text for the <code>ObjectHeader<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIntro: String) -> sap.m.ObjectHeader","parameters":{"sIntro":"type: string, description: New value for property <code>intro<\/code>"}},"setTitleHref":{"!description":"Sets a new value for property <code>titleHref<\/code>.\n\nDefines the title link target URI. Supports standard hyperlink behavior.\n\n<b>Note:<\/b> If an action should be triggered, this property should not be set, but instead\nan event handler for the <code>titlePress<\/code> event should be registered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitleHref: sap.ui.core.URI) -> sap.m.ObjectHeader","parameters":{"sTitleHref":"type: sap.ui.core.URI, description: New value for property <code>titleHref<\/code>"}},"detachIntroPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>introPress<\/code> event of this <code>sap.m.ObjectHeader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ObjectHeader","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireIconPress":{"!description":"Fires event <code>iconPress<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>domRef<\/code> of type <code>object<\/code>Dom reference of the object header' icon to be used for positioning.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ObjectHeader","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"fireTitlePress":{"!description":"Fires event <code>titlePress<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>domRef<\/code> of type <code>object<\/code>Dom reference of the object header' title to be used for positioning.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ObjectHeader","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"detachIconPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>iconPress<\/code> event of this <code>sap.m.ObjectHeader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ObjectHeader","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"removeAllStatuses":{"!description":"Removes all the controls from the aggregation <code>statuses<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setResponsive":{"!description":"Sets a new value for property <code>responsive<\/code>.\n\nDetermines whether the <code>ObjectHeader<code> is rendered with a different design that\nreacts responsively to the screen sizes.\n\n<b>Note:<\/b> Be aware that the design and behavior of the responsive <code>ObjectHeader<\/code>\ncould change without further notification.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bResponsive: Boolean) -> sap.m.ObjectHeader","parameters":{"bResponsive":"type: boolean, description: New value for property <code>responsive<\/code>"}},"!description":"<code>ObjectHeader<\/code> is a display control that enables the user to easily identify\na specific object. The object header title is the key identifier of the object and\nadditional text and icons can be used to further distinguish it from other objects.","getAttributes":{"!description":"Gets content of aggregation <code>attributes<\/code>.\n\nThe list of Object Attributes","!static":false,"!category":"function","!type":"fn() -> [sap.m.ObjectAttribute]"},"destroyFirstStatus":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 Use the statuses aggregation instead.<br>Destroys the firstStatus in the aggregation <code>firstStatus<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ObjectHeader"},"detachTitlePress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>titlePress<\/code> event of this <code>sap.m.ObjectHeader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ObjectHeader","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getResponsive":{"!description":"Gets current value of property <code>responsive<\/code>.\n\nDetermines whether the <code>ObjectHeader<code> is rendered with a different design that\nreacts responsively to the screen sizes.\n\n<b>Note:<\/b> Be aware that the design and behavior of the responsive <code>ObjectHeader<\/code>\ncould change without further notification.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getIconActive":{"!description":"Gets current value of property <code>iconActive<\/code>.\n\nDetermines whether the <code>ObjectHeader<\/code> icon is clickable.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getIntro":{"!description":"Gets current value of property <code>intro<\/code>.\n\nDetermines the introductory text for the <code>ObjectHeader<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.m.ObjectHeader with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getFullScreenOptimized":{"!description":"Gets current value of property <code>fullScreenOptimized<\/code>.\n\nOptimizes the display of the elements of the <code>ObjectHeader<\/code>.\n\nSet this property to <code>true<\/code> if your app uses a fullscreen layout (as opposed\nto a master-detail or other split-screen layout).\n\n<b>Note<\/b>: Only applied if the <code>responsive<\/code> property is also set to <code>true<\/code>.\n\nIf set to <code>true<\/code>, the following situations apply:\n<ul>\n<li>On desktop, 1-3 attributes/statuses - positioned as a third block on the right side of the Title/Number group<\/li>\n<li>On desktop, 4+ attributes/statuses - 4 columns below the Title/Number<\/li>\n<li>On tablet (portrait mode), always in 2 columns below the Title/Number<\/li>\n<li>On tablet (landscape mode), 1-2 attributes/statuses - 2 columns below the Title/Number<\/li>\n<li>On tablet (landscape mode), 3+ attributes/statuses - 3 columns below the Title/Number<\/li>\n<\/ul>\nOn phone, the attributes and statuses are always positioned in 1 column below the Title/Number of the <code>ObjectHeader<\/code>.\n\nIf set to <code>false<\/code>, the attributes and statuses are being positioned below the\nTitle/Number of the <code>ObjectHeader<\/code> in 2 or 3 columns depending on their number:\n<ul>\n<li>On desktop, 1-4 attributes/statuses - 2 columns<\/li>\n<li>On desktop, 5+ attributes/statuses - 3 columns<\/li>\n<li>On tablet, always in 2 columns<\/li>\n<\/ul>\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setNumberTextDirection":{"!description":"Sets a new value for property <code>numberTextDirection<\/code>.\n\nSpecifies the number and unit text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sNumberTextDirection: sap.ui.core.TextDirection) -> sap.m.ObjectHeader","parameters":{"sNumberTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>numberTextDirection<\/code>"}},"setSecondStatus":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 Use the statuses aggregation instead.<br>Sets the aggregated <code>secondStatus<\/code>.","!static":false,"!category":"function","!type":"fn(oSecondStatus: sap.m.ObjectStatus) -> sap.m.ObjectHeader","parameters":{"oSecondStatus":"type: sap.m.ObjectStatus, description: The secondStatus to set"}},"!module":"sap/m/ObjectHeader","destroyHeaderContainer":{"!description":"Destroys the headerContainer in the aggregation <code>headerContainer<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ObjectHeader"},"destroyStatuses":{"!description":"Destroys all the statuses in the aggregation <code>statuses<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ObjectHeader"},"removeAdditionalNumber":{"!description":"Removes a additionalNumber from the aggregation <code>additionalNumbers<\/code>.","!static":false,"!category":"function","!type":"fn(vAdditionalNumber: Number | String | sap.m.ObjectNumber) -> sap.m.ObjectNumber","parameters":{"vAdditionalNumber":"type: int|string|sap.m.ObjectNumber, description: The additionalNumberto remove or its index or id"}},"setIntroTextDirection":{"!description":"Sets a new value for property <code>introTextDirection<\/code>.\n\nSpecifies the intro text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sIntroTextDirection: sap.ui.core.TextDirection) -> sap.m.ObjectHeader","parameters":{"sIntroTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>introTextDirection<\/code>"}},"getIconAlt":{"!description":"Gets current value of property <code>iconAlt<\/code>.\n\nDetermines the alternative text of the <code>ObjectHeader<\/code> icon. The text is\ndisplayed if the image for the icon is not available, or cannot be displayed.","!static":false,"!category":"function","!type":"fn() -> String"},"setIconAlt":{"!description":"Sets a new value for property <code>iconAlt<\/code>.\n\nDetermines the alternative text of the <code>ObjectHeader<\/code> icon. The text is\ndisplayed if the image for the icon is not available, or cannot be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIconAlt: String) -> sap.m.ObjectHeader","parameters":{"sIconAlt":"type: string, description: New value for property <code>iconAlt<\/code>"}},"setTitleTextDirection":{"!description":"Sets a new value for property <code>titleTextDirection<\/code>.\n\nSpecifies the title text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTitleTextDirection: sap.ui.core.TextDirection) -> sap.m.ObjectHeader","parameters":{"sTitleTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>titleTextDirection<\/code>"}},"getBackgroundDesign":{"!description":"Gets current value of property <code>backgroundDesign<\/code>.\n\nDetermines the background color of the <code>ObjectHeader<\/code>.\n\n<b>Note:<\/b> The different types of <code>ObjectHeader<\/code> come with different default background:\n<ul>\n<li>non responsive - Transparent<\/li>\n<li>responsive - Translucent<\/li>\n<li>condensed - Solid<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn() -> sap.m.BackgroundDesign"},"setBackgroundDesign":{"!description":"Sets a new value for property <code>backgroundDesign<\/code>.\n\nDetermines the background color of the <code>ObjectHeader<\/code>.\n\n<b>Note:<\/b> The different types of <code>ObjectHeader<\/code> come with different default background:\n<ul>\n<li>non responsive - Transparent<\/li>\n<li>responsive - Translucent<\/li>\n<li>condensed - Solid<\/li>\n<\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sBackgroundDesign: sap.m.BackgroundDesign) -> sap.m.ObjectHeader","parameters":{"sBackgroundDesign":"type: sap.m.BackgroundDesign, description: New value for property <code>backgroundDesign<\/code>"}},"getTitleActive":{"!description":"Gets current value of property <code>titleActive<\/code>.\n\nDetermines whether the title of the <code>ObjectHeader<\/code> is clickable\nand is set only if a title is provided.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachTitlePress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>titlePress<\/code> event of this <code>sap.m.ObjectHeader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ObjectHeader<\/code> itself.\n\nEvent is fired when the title is active and the user taps/clicks on it","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ObjectHeader","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ObjectHeader<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getIconDensityAware":{"!description":"Gets current value of property <code>iconDensityAware<\/code>.\n\nBy default, this is set to <code>true<\/code> but then one or more requests are sent trying to get\nthe density perfect version of image if this version of image doesn't exist on the server.\n\nIf bandwidth is the key for the application, set this value to <code>false<\/code>.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getNumber":{"!description":"Gets current value of property <code>number<\/code>.\n\nDetermines the displayed number of the <code>ObjectHeader<\/code> number field.","!static":false,"!category":"function","!type":"fn() -> String"},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.m.ObjectHeader","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"destroyAdditionalNumbers":{"!description":"Destroys all the additionalNumbers in the aggregation <code>additionalNumbers<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ObjectHeader"},"setIconDensityAware":{"!description":"Sets a new value for property <code>iconDensityAware<\/code>.\n\nBy default, this is set to <code>true<\/code> but then one or more requests are sent trying to get\nthe density perfect version of image if this version of image doesn't exist on the server.\n\nIf bandwidth is the key for the application, set this value to <code>false<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bIconDensityAware: Boolean) -> sap.m.ObjectHeader","parameters":{"bIconDensityAware":"type: boolean, description: New value for property <code>iconDensityAware<\/code>"}},"setMarkFavorite":{"!description":"Sets a new value for property <code>markFavorite<\/code>.\n\nSets the favorite state to true or false. The showMarkers property must be true for this property to take effect.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bMarkFavorite: Boolean) -> sap.m.ObjectHeader","parameters":{"bMarkFavorite":"type: boolean, description: New value for property <code>markFavorite<\/code>"}},"getIntroHref":{"!description":"Gets current value of property <code>introHref<\/code>.\n\nDetermines the intro link target URI. Supports standard hyperlink behavior. If an action should be triggered,\nthis should not be set, but instead an event handler for the <code>introPress<\/code> event should be registered.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getTitleSelectorTooltip":{"!description":"Gets current value of property <code>titleSelectorTooltip<\/code>.\n\nDetermines a custom text for the tooltip of the select title arrow. If not set, a default text of the tooltip will be displayed.\n\nDefault value is <code>Options<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setFullScreenOptimized":{"!description":"Sets a new value for property <code>fullScreenOptimized<\/code>.\n\nOptimizes the display of the elements of the <code>ObjectHeader<\/code>.\n\nSet this property to <code>true<\/code> if your app uses a fullscreen layout (as opposed\nto a master-detail or other split-screen layout).\n\n<b>Note<\/b>: Only applied if the <code>responsive<\/code> property is also set to <code>true<\/code>.\n\nIf set to <code>true<\/code>, the following situations apply:\n<ul>\n<li>On desktop, 1-3 attributes/statuses - positioned as a third block on the right side of the Title/Number group<\/li>\n<li>On desktop, 4+ attributes/statuses - 4 columns below the Title/Number<\/li>\n<li>On tablet (portrait mode), always in 2 columns below the Title/Number<\/li>\n<li>On tablet (landscape mode), 1-2 attributes/statuses - 2 columns below the Title/Number<\/li>\n<li>On tablet (landscape mode), 3+ attributes/statuses - 3 columns below the Title/Number<\/li>\n<\/ul>\nOn phone, the attributes and statuses are always positioned in 1 column below the Title/Number of the <code>ObjectHeader<\/code>.\n\nIf set to <code>false<\/code>, the attributes and statuses are being positioned below the\nTitle/Number of the <code>ObjectHeader<\/code> in 2 or 3 columns depending on their number:\n<ul>\n<li>On desktop, 1-4 attributes/statuses - 2 columns<\/li>\n<li>On desktop, 5+ attributes/statuses - 3 columns<\/li>\n<li>On tablet, always in 2 columns<\/li>\n<\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFullScreenOptimized: Boolean) -> sap.m.ObjectHeader","parameters":{"bFullScreenOptimized":"type: boolean, description: New value for property <code>fullScreenOptimized<\/code>"}},"insertAdditionalNumber":{"!description":"Inserts a additionalNumber into the aggregation <code>additionalNumbers<\/code>.","!static":false,"!category":"function","!type":"fn(oAdditionalNumber: sap.m.ObjectNumber, iIndex: Number) -> sap.m.ObjectHeader","parameters":{"oAdditionalNumber":"type: sap.m.ObjectNumber, description: the additionalNumber to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the additionalNumber should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the additionalNumber is inserted at position 0; for a value\n             greater than the current size of the aggregation, the additionalNumber is inserted at\n             the last position"}},"setNumberUnit":{"!description":"Set the number unit to the internal aggregation","!static":false,"!category":"function","!type":"fn(sUnit: String) -> sap.m.ObjectHeader","parameters":{"sUnit":"type: string, description: the new value"}},"fireIntroPress":{"!description":"Fires event <code>introPress<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>domRef<\/code> of type <code>object<\/code>Dom reference of the object header' intro to be used for positioning.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ObjectHeader","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"indexOfAdditionalNumber":{"!description":"Checks for the provided <code>sap.m.ObjectNumber<\/code> in the aggregation <code>additionalNumbers<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAdditionalNumber: sap.m.ObjectNumber) -> Number","parameters":{"oAdditionalNumber":"type: sap.m.ObjectNumber, description: The additionalNumber whose index is looked for"}},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nDefines the icon of the <code>ObjectHeader<\/code>.\n\n<b>Note:<\/b> Recursive resolution of binding expressions is not supported by the framework.\nIt works only in ObjectHeader, since it is a composite control and creates an Image control internally.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.m.ObjectHeader","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"addAttribute":{"!description":"Adds some attribute to the aggregation <code>attributes<\/code>.","!static":false,"!category":"function","!type":"fn(oAttribute: sap.m.ObjectAttribute) -> sap.m.ObjectHeader","parameters":{"oAttribute":"type: sap.m.ObjectAttribute, description: the attribute to add; if empty, nothing is inserted"}},"getIntroTextDirection":{"!description":"Gets current value of property <code>introTextDirection<\/code>.\n\nSpecifies the intro text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"insertAttribute":{"!description":"Inserts a attribute into the aggregation <code>attributes<\/code>.","!static":false,"!category":"function","!type":"fn(oAttribute: sap.m.ObjectAttribute, iIndex: Number) -> sap.m.ObjectHeader","parameters":{"oAttribute":"type: sap.m.ObjectAttribute, description: the attribute to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the attribute should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the attribute is inserted at position 0; for a value\n             greater than the current size of the aggregation, the attribute is inserted at\n             the last position"}},"getAdditionalNumbers":{"!description":"Gets content of aggregation <code>additionalNumbers<\/code>.\n\nNOTE: Only applied if you set \"responsive=false\".\nAdditional object numbers and units are managed in this aggregation.\nThe numbers are hidden on tablet and phone size screens.\nWhen only one number is provided, it is rendered with additional separator from the main ObjectHeader number.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ObjectNumber]"},"getTitleLevel":{"!description":"Gets current value of property <code>titleLevel<\/code>.\n\nDefines the semantic level of the title.\n\nThis information is used by assistive technologies, such as screen readers to create a hierarchical site map for faster navigation.\nDepending on this setting an HTML h1-h6 element is used.\n\nDefault value is <code>H1<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TitleLevel"},"getShowMarkers":{"!description":"Gets current value of property <code>showMarkers<\/code>.\n\nIndicates if object header supports showing markers such as flagged and favorite.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfStatus":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>statuses<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oStatus: sap.ui.core.Control) -> Number","parameters":{"oStatus":"type: sap.ui.core.Control, description: The status whose index is looked for"}},"setHeaderContainer":{"!description":"Sets the aggregated <code>headerContainer<\/code>.","!static":false,"!category":"function","!type":"fn(oHeaderContainer: sap.m.ObjectHeaderContainer) -> sap.m.ObjectHeader","parameters":{"oHeaderContainer":"type: sap.m.ObjectHeaderContainer, description: The headerContainer to set"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getNumberUnit":{"!description":"Gets current value of property <code>numberUnit<\/code>.\n\nDetermines the units qualifier of the <code>ObjectHeader<\/code> number.\n\n<b>Note:<\/b> The value of the <code>numberUnit<\/code> is not displayed if the\nnumber property is set to <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"fireTitleSelectorPress":{"!description":"Fires event <code>titleSelectorPress<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>domRef<\/code> of type <code>object<\/code>Dom reference of the object header' titleArrow to be used for positioning.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ObjectHeader","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getTitleTarget":{"!description":"Gets current value of property <code>titleTarget<\/code>.\n\nDetermines the <code>target<\/code> attribute for the title link. Options are <code>_self<\/code>,\n<code>_top<\/code>, <code>_blank<\/code>, <code>_parent<\/code>, <code>_search<\/code>. Alternatively,\na frame name can be entered.","!static":false,"!category":"function","!type":"fn() -> String"},"setNumberState":{"!description":"Set the number state to the internal aggregation","!static":false,"!category":"function","!type":"fn(sState: sap.ui.core.ValueState) -> sap.m.ObjectHeader","parameters":{"sState":"type: sap.ui.core.ValueState, description: the new value"}},"removeStatus":{"!description":"Removes a status from the aggregation <code>statuses<\/code>.","!static":false,"!category":"function","!type":"fn(vStatus: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vStatus":"type: int|string|sap.ui.core.Control, description: The statusto remove or its index or id"}},"setTitleLevel":{"!description":"Sets a new value for property <code>titleLevel<\/code>.\n\nDefines the semantic level of the title.\n\nThis information is used by assistive technologies, such as screen readers to create a hierarchical site map for faster navigation.\nDepending on this setting an HTML h1-h6 element is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>H1<\/code>.","!static":false,"!category":"function","!type":"fn(sTitleLevel: sap.ui.core.TitleLevel) -> sap.m.ObjectHeader","parameters":{"sTitleLevel":"type: sap.ui.core.TitleLevel, description: New value for property <code>titleLevel<\/code>"}},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nDetermines the title of the <code>ObjectHeader<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"indexOfAttribute":{"!description":"Checks for the provided <code>sap.m.ObjectAttribute<\/code> in the aggregation <code>attributes<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAttribute: sap.m.ObjectAttribute) -> Number","parameters":{"oAttribute":"type: sap.m.ObjectAttribute, description: The attribute whose index is looked for"}},"setIntroActive":{"!description":"Sets a new value for property <code>introActive<\/code>.\n\nDetermines whether the introductory text of the <code>ObjectHeader<\/code> is clickable.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bIntroActive: Boolean) -> sap.m.ObjectHeader","parameters":{"bIntroActive":"type: boolean, description: New value for property <code>introActive<\/code>"}},"setShowMarkers":{"!description":"Sets a new value for property <code>showMarkers<\/code>.\n\nIndicates if object header supports showing markers such as flagged and favorite.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowMarkers: Boolean) -> sap.m.ObjectHeader","parameters":{"bShowMarkers":"type: boolean, description: New value for property <code>showMarkers<\/code>"}},"destroyAttributes":{"!description":"Destroys all the attributes in the aggregation <code>attributes<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ObjectHeader"},"setFirstStatus":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 Use the statuses aggregation instead.<br>Sets the aggregated <code>firstStatus<\/code>.","!static":false,"!category":"function","!type":"fn(oFirstStatus: sap.m.ObjectStatus) -> sap.m.ObjectHeader","parameters":{"oFirstStatus":"type: sap.m.ObjectStatus, description: The firstStatus to set"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.ObjectHeader.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"detachTitleSelectorPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>titleSelectorPress<\/code> event of this <code>sap.m.ObjectHeader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ObjectHeader","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nDetermines the title of the <code>ObjectHeader<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.ObjectHeader","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"getCondensed":{"!description":"Gets current value of property <code>condensed<\/code>.\n\n<code>ObjectHeader<\/code> with title, one attribute, number, and number unit.\n\n<b>Note:<\/b> Only applied if the <code>responsive<\/code> property is set to <code>false<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nDefines the icon of the <code>ObjectHeader<\/code>.\n\n<b>Note:<\/b> Recursive resolution of binding expressions is not supported by the framework.\nIt works only in ObjectHeader, since it is a composite control and creates an Image control internally.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.m.ObjectHeader","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"!helpDescription":"<code>ObjectHeader<\/code> is a display control that enables the user to easily identify\na specific object. The object header title is the key identifier of the object and\nadditional text and icons can be used to further distinguish it from other objects.","getNumberState":{"!description":"Gets current value of property <code>numberState<\/code>.\n\nDetermines the value state of the <code>number<code> and <code>numberUnit<code> properties.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"getFirstStatus":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 Use the statuses aggregation instead.<br>Gets content of aggregation <code>firstStatus<\/code>.\n\nFirst status shown on the right side of the attributes above the second status.\nIf it is not set the first attribute will expand to take the entire row.","!static":false,"!category":"function","!type":"fn() -> sap.m.ObjectStatus"},"setTitleSelectorTooltip":{"!description":"Sets the new text for the tooltip of the select title arrow to the internal aggregation","!static":false,"!category":"function","!type":"fn(sTooltip: undefined) -> sap.m.ObjectHeader","parameters":{"sTooltip":"type: undefined, description: the new value"}},"destroySecondStatus":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 Use the statuses aggregation instead.<br>Destroys the secondStatus in the aggregation <code>secondStatus<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ObjectHeader"},"getIntroActive":{"!description":"Gets current value of property <code>introActive<\/code>.\n\nDetermines whether the introductory text of the <code>ObjectHeader<\/code> is clickable.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTitleTextDirection":{"!description":"Gets current value of property <code>titleTextDirection<\/code>.\n\nSpecifies the title text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setMarkFlagged":{"!description":"Sets a new value for property <code>markFlagged<\/code>.\n\nSets the flagged state to true or false. The showMarkers property must be true for this property to take effect.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bMarkFlagged: Boolean) -> sap.m.ObjectHeader","parameters":{"bMarkFlagged":"type: boolean, description: New value for property <code>markFlagged<\/code>"}},"!proto":"sap.ui.core.Control","!category":"class","setCondensed":{"!description":"Set the condensed flag","!static":false,"!category":"function","!type":"fn(bCondensed: Boolean) -> sap.m.ObjectHeader","parameters":{"bCondensed":"type: boolean, description: the new value"}},"setIntroTarget":{"!description":"Sets a new value for property <code>introTarget<\/code>.\n\nDetermines the <code>target<\/code> attribute for the intro link. Options are <code>_self<\/code>,\n<code>_top<\/code>, <code>_blank<\/code>, <code>_parent<\/code>, <code>_search<\/code>. Alternatively,\na frame name can be entered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIntroTarget: String) -> sap.m.ObjectHeader","parameters":{"sIntroTarget":"type: string, description: New value for property <code>introTarget<\/code>"}},"attachTitleSelectorPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>titleSelectorPress<\/code> event of this <code>sap.m.ObjectHeader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ObjectHeader<\/code> itself.\n\nEvent is fired when the object header title selector (down-arrow) is pressed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ObjectHeader","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ObjectHeader<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getHeaderContainer":{"!description":"Gets content of aggregation <code>headerContainer<\/code>.\n\nThis aggregation takes only effect when you set \"responsive\" to true.\nIt can either be filled with an sap.m.IconTabBar or a sap.suite.ui.commons.HeaderContainer control. Overflow handling must be taken care of by the inner control. If used with an IconTabBar control, only the header will be displayed inside the object header, the content will be displayed below the ObjectHeader.","!static":false,"!category":"function","!type":"fn() -> sap.m.ObjectHeaderContainer"},"attachIconPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>iconPress<\/code> event of this <code>sap.m.ObjectHeader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ObjectHeader<\/code> itself.\n\nEvent is fired when the title icon is active and the user taps/clicks on it","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ObjectHeader","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ObjectHeader<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!constructorDescription":"Constructor for a new <\/code>ObjectHeader<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getNumber number} : string<\/li>\n<li>{@link #getNumberUnit numberUnit} : string<\/li>\n<li>{@link #getIntro intro} : string<\/li>\n<li>{@link #getIntroActive introActive} : boolean<\/li>\n<li>{@link #getTitleActive titleActive} : boolean<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconActive iconActive} : boolean<\/li>\n<li>{@link #getIconAlt iconAlt} : string<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getMarkFavorite markFavorite} : boolean (default: false)<\/li>\n<li>{@link #getMarkFlagged markFlagged} : boolean (default: false)<\/li>\n<li>{@link #getShowMarkers showMarkers} : boolean (default: false)<\/li>\n<li>{@link #getShowTitleSelector showTitleSelector} : boolean (default: false)<\/li>\n<li>{@link #getNumberState numberState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getCondensed condensed} : boolean (default: false)<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign<\/li>\n<li>{@link #getResponsive responsive} : boolean (default: false)<\/li>\n<li>{@link #getFullScreenOptimized fullScreenOptimized} : boolean (default: false)<\/li>\n<li>{@link #getTitleHref titleHref} : sap.ui.core.URI<\/li>\n<li>{@link #getTitleTarget titleTarget} : string<\/li>\n<li>{@link #getIntroHref introHref} : sap.ui.core.URI<\/li>\n<li>{@link #getIntroTarget introTarget} : string<\/li>\n<li>{@link #getTitleTextDirection titleTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getIntroTextDirection introTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getNumberTextDirection numberTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getTitleSelectorTooltip titleSelectorTooltip} : string (default: Options)<\/li>\n<li>{@link #getTitleLevel titleLevel} : sap.ui.core.TitleLevel (default: H1)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAttributes attributes} : sap.m.ObjectAttribute[] (default)<\/li>\n<li>{@link #getFirstStatus firstStatus} : sap.m.ObjectStatus<\/li>\n<li>{@link #getSecondStatus secondStatus} : sap.m.ObjectStatus<\/li>\n<li>{@link #getStatuses statuses} : sap.ui.core.Control[]<\/li>\n<li>{@link #getAdditionalNumbers additionalNumbers} : sap.m.ObjectNumber[]<\/li>\n<li>{@link #getHeaderContainer headerContainer} : sap.m.ObjectHeaderContainer<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:titlePress titlePress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:introPress introPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:iconPress iconPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:titleSelectorPress titleSelectorPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAdditionalNumber":{"!description":"Adds some additionalNumber to the aggregation <code>additionalNumbers<\/code>.","!static":false,"!category":"function","!type":"fn(oAdditionalNumber: sap.m.ObjectNumber) -> sap.m.ObjectHeader","parameters":{"oAdditionalNumber":"type: sap.m.ObjectNumber, description: the additionalNumber to add; if empty, nothing is inserted"}},"getIntroTarget":{"!description":"Gets current value of property <code>introTarget<\/code>.\n\nDetermines the <code>target<\/code> attribute for the intro link. Options are <code>_self<\/code>,\n<code>_top<\/code>, <code>_blank<\/code>, <code>_parent<\/code>, <code>_search<\/code>. Alternatively,\na frame name can be entered.","!static":false,"!category":"function","!type":"fn() -> String"},"setIntroHref":{"!description":"Sets a new value for property <code>introHref<\/code>.\n\nDetermines the intro link target URI. Supports standard hyperlink behavior. If an action should be triggered,\nthis should not be set, but instead an event handler for the <code>introPress<\/code> event should be registered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIntroHref: sap.ui.core.URI) -> sap.m.ObjectHeader","parameters":{"sIntroHref":"type: sap.ui.core.URI, description: New value for property <code>introHref<\/code>"}},"setTitleActive":{"!description":"Sets a new value for property <code>titleActive<\/code>.\n\nDetermines whether the title of the <code>ObjectHeader<\/code> is clickable\nand is set only if a title is provided.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bTitleActive: Boolean) -> sap.m.ObjectHeader","parameters":{"bTitleActive":"type: boolean, description: New value for property <code>titleActive<\/code>"}},"removeAttribute":{"!description":"Removes a attribute from the aggregation <code>attributes<\/code>.","!static":false,"!category":"function","!type":"fn(vAttribute: Number | String | sap.m.ObjectAttribute) -> sap.m.ObjectAttribute","parameters":{"vAttribute":"type: int|string|sap.m.ObjectAttribute, description: The attributeto remove or its index or id"}},"getNumberTextDirection":{"!description":"Gets current value of property <code>numberTextDirection<\/code>.\n\nSpecifies the number and unit text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"insertStatus":{"!description":"Inserts a status into the aggregation <code>statuses<\/code>.","!static":false,"!category":"function","!type":"fn(oStatus: sap.ui.core.Control, iIndex: Number) -> sap.m.ObjectHeader","parameters":{"oStatus":"type: sap.ui.core.Control, description: the status to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the status should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the status is inserted at position 0; for a value\n             greater than the current size of the aggregation, the status is inserted at\n             the last position"}},"removeAllAttributes":{"!description":"Removes all the controls from the aggregation <code>attributes<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ObjectAttribute]"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getStatuses":{"!description":"Gets content of aggregation <code>statuses<\/code>.\n\nThe list of Object sap.ui.core.Control. It will only allow sap.m.ObjectStatus and sap.m.ProgressIndicator controls.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setNumber":{"!description":"Set the number value to the internal aggregation","!static":false,"!category":"function","!type":"fn(sNumber: String) -> sap.m.ObjectHeader","parameters":{"sNumber":"type: string, description: the new value"}},"setTitleTarget":{"!description":"Sets a new value for property <code>titleTarget<\/code>.\n\nDetermines the <code>target<\/code> attribute for the title link. Options are <code>_self<\/code>,\n<code>_top<\/code>, <code>_blank<\/code>, <code>_parent<\/code>, <code>_search<\/code>. Alternatively,\na frame name can be entered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitleTarget: String) -> sap.m.ObjectHeader","parameters":{"sTitleTarget":"type: string, description: New value for property <code>titleTarget<\/code>"}},"addStatus":{"!description":"Adds some status to the aggregation <code>statuses<\/code>.","!static":false,"!category":"function","!type":"fn(oStatus: sap.ui.core.Control) -> sap.m.ObjectHeader","parameters":{"oStatus":"type: sap.ui.core.Control, description: the status to add; if empty, nothing is inserted"}},"getTitleHref":{"!description":"Gets current value of property <code>titleHref<\/code>.\n\nDefines the title link target URI. Supports standard hyperlink behavior.\n\n<b>Note:<\/b> If an action should be triggered, this property should not be set, but instead\nan event handler for the <code>titlePress<\/code> event should be registered.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getMarkFavorite":{"!description":"Gets current value of property <code>markFavorite<\/code>.\n\nSets the favorite state to true or false. The showMarkers property must be true for this property to take effect.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowTitleSelector":{"!description":"Sets a new value for property <code>showTitleSelector<\/code>.\n\nDetermines whether the selector arrow icon/image is displayed and can be pressed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowTitleSelector: Boolean) -> sap.m.ObjectHeader","parameters":{"bShowTitleSelector":"type: boolean, description: New value for property <code>showTitleSelector<\/code>"}},"getShowTitleSelector":{"!description":"Gets current value of property <code>showTitleSelector<\/code>.\n\nDetermines whether the selector arrow icon/image is displayed and can be pressed.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setIconActive":{"!description":"Sets a new value for property <code>iconActive<\/code>.\n\nDetermines whether the <code>ObjectHeader<\/code> icon is clickable.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bIconActive: Boolean) -> sap.m.ObjectHeader","parameters":{"bIconActive":"type: boolean, description: New value for property <code>iconActive<\/code>"}},"getMarkFlagged":{"!description":"Gets current value of property <code>markFlagged<\/code>.\n\nSets the flagged state to true or false. The showMarkers property must be true for this property to take effect.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.m.UploadCollectionItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.UploadCollectionItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.UploadCollectionItem"},"sap.m.FacetFilterItem":{"!description":"Represents a value for the FacetFilterList control.","getKey":{"!description":"Gets current value of property <code>key<\/code>.\n\nCan be used as input for subsequent actions.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.FacetFilterItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nDetermines the text to be displayed for the item.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.m.ListItemBase","!category":"class","extend":{"!description":"Creates a new subclass of class sap.m.FacetFilterItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new FacetFilterItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getCount count} : int<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well.","!module":"sap/m/FacetFilterItem","!helpDescription":"Represents a value for the FacetFilterList control.","getCount":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.11 Use setCounter instead.<br>Gets current value of property <code>count<\/code>.\n\nDefines the number of objects that match this item in the target data set.","!static":false,"!category":"function","!type":"fn() -> Number"},"setKey":{"!description":"Sets a new value for property <code>key<\/code>.\n\nCan be used as input for subsequent actions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sKey: String) -> sap.m.FacetFilterItem","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"}},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nDetermines the text to be displayed for the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.m.FacetFilterItem","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.m.OverflowToolbarPriority":{"!description":"Defines the priorities of the controls within sap.m.OverflowToolbar","High":{"!description":"High priority OverflowToolbar items overflow after the items with lower priority","!category":"enum","!type":"String"},"AlwaysOverflow":{"!description":"AlwaysOverflow priority forces OverflowToolbar items to remain always in the overflow area","!category":"enum","!type":"String"},"!module":"sap/m/library","Low":{"!description":"Low priority  OverflowToolbar items overflow before the items with higher priority such as High priority items","!category":"enum","!type":"String"},"NeverOverflow":{"!description":"NeverOverflow priority forces OverflowToolbar items to remain always in the toolbar","!category":"enum","!type":"String"},"Disappear":{"!description":"Disappear priority  OverflowToolbar items overflow before the items with higher priority such as Low and High priority items and remain hidden in the overflow area","!category":"enum","!type":"String"},"!category":"static class"},"sap.m.DatePicker_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.DatePicker with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.InputBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.DatePicker"},"sap.m.BarDesign":{"!description":"Types of the Bar design","Auto":{"!description":"The Bar can be inserted into other controls and if the design is \"Auto\" then it inherits the design from parent control.","!category":"enum","!type":"String"},"!module":"sap/m/library","Header":{"!description":"The bar will be styled like a header of the page.","!category":"enum","!type":"String"},"Footer":{"!description":"The bar will be styled like a footer of the page.","!category":"enum","!type":"String"},"SubHeader":{"!description":"The bar will be styled like a subheader of the page.","!category":"enum","!type":"String"},"!category":"static class"},"sap.m.RatingIndicator":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setIconUnselected":{"!description":"Sets the unselected icon without rerendering the control.","!static":false,"!category":"function","!type":"fn(sURI: sap.ui.core.URI) -> sap.m.RatingIndicator","parameters":{"sURI":"type: sap.ui.core.URI, description: undefined"}},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getMaxValue":{"!description":"Gets current value of property <code>maxValue<\/code>.\n\nThe number of displayed rating symbols\n\nDefault value is <code>5<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!proto":"sap.ui.core.Control","setVisualMode":{"!description":"Sets a new value for property <code>visualMode<\/code>.\n\nDefines how float values are visualized: Full, Half (see enumeration RatingIndicatorVisualMode)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Half<\/code>.","!static":false,"!category":"function","!type":"fn(sVisualMode: sap.m.RatingIndicatorVisualMode) -> sap.m.RatingIndicator","parameters":{"sVisualMode":"type: sap.m.RatingIndicatorVisualMode, description: New value for property <code>visualMode<\/code>"}},"!category":"class","getIconSelected":{"!description":"Gets current value of property <code>iconSelected<\/code>.\n\nThe URI to the icon font icon or image that will be displayed for selected rating symbols. A star icon will be used if the property is not set","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"setIconSize":{"!description":"Sets the icon size value. The method is automatically updating the UI components if the control has been rendered before.","!static":false,"!category":"function","!type":"fn(sIconSize: sap.ui.core.CSSSize) -> sap.m.RatingIndicator","parameters":{"sIconSize":"type: sap.ui.core.CSSSize, description: undefined"}},"attachLiveChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>liveChange<\/code> event of this <code>sap.m.RatingIndicator<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.RatingIndicator<\/code> itself.\n\nThis event is triggered during the dragging period, each time the rating value changes.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.RatingIndicator","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.RatingIndicator<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getIconSize":{"!description":"Gets current value of property <code>iconSize<\/code>.\n\nThe Size of the image or icon to be displayed. The default value depends on the theme. Please be sure that the size is corresponding to a full pixel value as some browsers don't support subpixel calculations. Recommended size is 1.375rem (22px) for normal, 1rem (16px) for small, and 2rem (32px) for large icons correspondingly.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.m.RatingIndicator<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.RatingIndicator","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getVisualMode":{"!description":"Gets current value of property <code>visualMode<\/code>.\n\nDefines how float values are visualized: Full, Half (see enumeration RatingIndicatorVisualMode)\n\nDefault value is <code>Half<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.RatingIndicatorVisualMode"},"!constructorDescription":"Constructor for a new RatingIndicator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getMaxValue maxValue} : int (default: 5)<\/li>\n<li>{@link #getValue value} : float (default: 0)<\/li>\n<li>{@link #getIconSize iconSize} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getIconSelected iconSelected} : sap.ui.core.URI<\/li>\n<li>{@link #getIconUnselected iconUnselected} : sap.ui.core.URI<\/li>\n<li>{@link #getIconHovered iconHovered} : sap.ui.core.URI<\/li>\n<li>{@link #getVisualMode visualMode} : sap.m.RatingIndicatorVisualMode (default: Half)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.m.RatingIndicator","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getIconUnselected":{"!description":"Gets current value of property <code>iconUnselected<\/code>.\n\nThe URI to the icon font icon or image that will be displayed for all unselected rating symbols. A star icon will be used if the property is not set","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"setIconHovered":{"!description":"Sets the hovered icon without rerendering the control.","!static":false,"!category":"function","!type":"fn(sURI: sap.ui.core.URI) -> sap.m.RatingIndicator","parameters":{"sURI":"type: sap.ui.core.URI, description: undefined"}},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nValue \"true\" is required to let the user rate with this control. It is recommended to set this parameter to \"false\" for the \"Small\" size which is meant for indicating a value only\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setIconSelected":{"!description":"Sets the selected icon without rerendering the control.","!static":false,"!category":"function","!type":"fn(sURI: sap.ui.core.URI) -> sap.m.RatingIndicator","parameters":{"sURI":"type: sap.ui.core.URI, description: undefined"}},"!description":"Is used to rate content. The amount of rating symbols can be specified, as well as the URIs to the\nimage icons which shall be used as rating symbols. When the user performs a rating, an event is fired.","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.RatingIndicator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"unbindValue":{"!description":"Unbinds property <code>value<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.RatingIndicator"},"detachLiveChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>liveChange<\/code> event of this <code>sap.m.RatingIndicator<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.RatingIndicator","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.m.RatingIndicator<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.RatingIndicator<\/code> itself.\n\nThe event is fired when the user has done a rating.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.RatingIndicator","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.RatingIndicator<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value<\/code> of type <code>int<\/code>The rated value<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.RatingIndicator","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.m.RatingIndicator","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.m.RatingIndicator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nThe indicated value of the rating\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nValue \"true\" is required to let the user rate with this control. It is recommended to set this parameter to \"false\" for the \"Small\" size which is meant for indicating a value only\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.m.RatingIndicator","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"setMaxValue":{"!description":"Sets a new value for property <code>maxValue<\/code>.\n\nThe number of displayed rating symbols\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>5<\/code>.","!static":false,"!category":"function","!type":"fn(iMaxValue: Number) -> sap.m.RatingIndicator","parameters":{"iMaxValue":"type: int, description: New value for property <code>maxValue<\/code>"}},"!module":"sap/m/RatingIndicator","!helpDescription":"Is used to rate content. The amount of rating symbols can be specified, as well as the URIs to the\nimage icons which shall be used as rating symbols. When the user performs a rating, an event is fired.","removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"setValue":{"!description":"Sets the rating value. The method is automatically checking whether the value is in the valid range of 0-{@link #getMaxValue maxValue} and if it is a valid number. Calling the setter with null or undefined will reset the value to it's default.","!static":false,"!category":"function","!type":"fn(fValue: Number) -> sap.m.RatingIndicator","parameters":{"fValue":"type: float, description: The rating value to be set."}},"getIconHovered":{"!description":"Gets current value of property <code>iconHovered<\/code>.\n\nThe URI to the icon font icon or image that will be displayed for hovered rating symbols. A star icon will be used if the property is not set","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"bindValue":{"!description":"Binds property <code>value<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.RatingIndicator","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"fireLiveChange":{"!description":"Fires event <code>liveChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value<\/code> of type <code>float<\/code>The current value of the rating after a live change event.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.RatingIndicator","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}}},"sap.m.UploadCollectionToolbarPlaceholder":{"!description":"This control needs to be used when you would like to create a customizable toolbar for the UploadCollection. Always a FileUploader instance is\nrequired in the toolbar, the FileUploader will be placed in the position defined by the application.","extend":{"!description":"Creates a new subclass of class sap.m.UploadCollectionToolbarPlaceholder with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.UploadCollectionToolbarPlaceholder.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new UploadCollectionToolbarPlaceholder.","!module":"sap/m/UploadCollectionToolbarPlaceholder","!helpDescription":"This control needs to be used when you would like to create a customizable toolbar for the UploadCollection. Always a FileUploader instance is\nrequired in the toolbar, the FileUploader will be placed in the position defined by the application.","!proto":"sap.ui.core.Control","!category":"class"},"sap.m.routing.Router":{"extend":{"!description":"Creates a new subclass of class sap.m.routing.Router with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.routing.Router.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.routing.Router.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Instantiates a SAPUI5 mobile Router see {@link sap.ui.core.routing.Router} for the constructor arguments\nThe difference to the {@link sap.ui.core.routing.Router} are the properties viewLevel, transition and transitionParameters you can specify in every Route or Target created by this router.","!module":"sap/m/routing/Router","!proto":"sap.ui.core.routing.Router","!category":"class","getTargetHandler":{"!description":"Returns the TargetHandler instance.","!static":false,"!category":"function","!type":"fn() -> sap.m.routing.TargetHandler"}},"sap.m.ScrollContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ScrollContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ScrollContainer"},"sap.m.PagingButton":{"!description":"Enables users to navigate between items/entities.","getNextButtonTooltip":{"!description":"Gets current value of property <code>nextButtonTooltip<\/code>.\n\nDetermines the tooltip of the next button.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.PagingButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getPreviousButtonTooltip":{"!description":"Gets current value of property <code>previousButtonTooltip<\/code>.\n\nDetermines the tooltip of the previous button.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Control","!category":"class","extend":{"!description":"Creates a new subclass of class sap.m.PagingButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new PagingButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getCount count} : int (default: 1)<\/li>\n<li>{@link #getPosition position} : int (default: 1)<\/li>\n<li>{@link #getNextButtonTooltip nextButtonTooltip} : string (default: )<\/li>\n<li>{@link #getPreviousButtonTooltip previousButtonTooltip} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:positionChange positionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getPosition":{"!description":"Gets current value of property <code>position<\/code>.\n\nDetermines the current position in the items/entities that the control navigates through.\nStarting (minimum) number is 1.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!module":"sap/m/PagingButton","!helpDescription":"Enables users to navigate between items/entities.","attachPositionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>positionChange<\/code> event of this <code>sap.m.PagingButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.PagingButton<\/code> itself.\n\nFired when the current position is changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.PagingButton","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.PagingButton<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachPositionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>positionChange<\/code> event of this <code>sap.m.PagingButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.PagingButton","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getCount":{"!description":"Gets current value of property <code>count<\/code>.\n\nDetermines the total count of items/entities that the control navigates through.\nThe minimum number of items/entities is 1.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"firePositionChange":{"!description":"Fires event <code>positionChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>newPosition<\/code> of type <code>int<\/code>The number of the new position.<\/li>\n<li><code>oldPosition<\/code> of type <code>int<\/code>The number of the old position.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.PagingButton","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}}},"sap.m.NotificationListGroup_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.NotificationListGroup with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.NotificationListBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.NotificationListGroup"},"sap.m.ObjectNumber":{"getNumberUnit":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.1 \nReplaced by unit property due to the number before unit is redundant.<br>Gets current value of property <code>numberUnit<\/code>.\n\nDefines the number units qualifier.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","getTextAlign":{"!description":"Gets current value of property <code>textAlign<\/code>.\n\nSets the horizontal alignment of the number and unit.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextAlign"},"!category":"class","getNumber":{"!description":"Gets current value of property <code>number<\/code>.\n\nDefines the number field.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new ObjectNumber.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getNumber number} : string<\/li>\n<li>{@link #getNumberUnit numberUnit} : string<\/li>\n<li>{@link #getEmphasized emphasized} : boolean (default: true)<\/li>\n<li>{@link #getState state} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getUnit unit} : string<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setUnit":{"!description":"Sets a new value for property <code>unit<\/code>.\n\nDefines the number units qualifier. If numberUnit and unit are both set, the unit value is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sUnit: String) -> sap.m.ObjectNumber","parameters":{"sUnit":"type: string, description: New value for property <code>unit<\/code>"}},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!description":"The ObjectNumber control displays number and number unit properties for an object. The number can be displayed using semantic\ncolors to provide additional meaning about the object to the user.","getMetadata":{"!description":"Returns a metadata object for class sap.m.ObjectNumber.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setTextAlign":{"!description":"Sets the text alignment of the control without re-rendering the whole ObjectNumber.","!static":false,"!category":"function","!type":"fn(sAlign: sap.ui.core.TextAlign)","parameters":{"sAlign":"type: sap.ui.core.TextAlign, description: The new value"}},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nAvailable options for the number and unit text direction are LTR(left-to-right) and RTL(right-to-left). By default, the control inherits the text direction from its parent control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.m.ObjectNumber","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"setNumberUnit":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.1 \nReplaced by unit property due to the number before unit is redundant.<br>Sets a new value for property <code>numberUnit<\/code>.\n\nDefines the number units qualifier.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNumberUnit: String) -> sap.m.ObjectNumber","parameters":{"sNumberUnit":"type: string, description: New value for property <code>numberUnit<\/code>"}},"getEmphasized":{"!description":"Gets current value of property <code>emphasized<\/code>.\n\nIndicates if the object number should appear emphasized.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setNumber":{"!description":"Sets a new value for property <code>number<\/code>.\n\nDefines the number field.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNumber: String) -> sap.m.ObjectNumber","parameters":{"sNumber":"type: string, description: New value for property <code>number<\/code>"}},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.m.ObjectNumber","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.m.ObjectNumber with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getState":{"!description":"Gets current value of property <code>state<\/code>.\n\nDetermines the object number's value state. Setting this state will cause the number to be rendered in state-specific colors (only blue-crystal theme).\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"!module":"sap/m/ObjectNumber","!helpDescription":"The ObjectNumber control displays number and number unit properties for an object. The number can be displayed using semantic\ncolors to provide additional meaning about the object to the user.","removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"setState":{"!description":"Sets the ObjectNumber's value state.","!static":false,"!category":"function","!type":"fn(sState: sap.ui.core.ValueState) -> ObjectNumber","parameters":{"sState":"type: sap.ui.core.ValueState, description: The state to be set to"}},"getUnit":{"!description":"Gets current value of property <code>unit<\/code>.\n\nDefines the number units qualifier. If numberUnit and unit are both set, the unit value is used.","!static":false,"!category":"function","!type":"fn() -> String"},"setEmphasized":{"!description":"Sets a new value for property <code>emphasized<\/code>.\n\nIndicates if the object number should appear emphasized.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEmphasized: Boolean) -> sap.m.ObjectNumber","parameters":{"bEmphasized":"type: boolean, description: New value for property <code>emphasized<\/code>"}},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nAvailable options for the number and unit text direction are LTR(left-to-right) and RTL(right-to-left). By default, the control inherits the text direction from its parent control.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"}},"sap.m.semantic.DetailPage":{"getNegativeAction":{"!description":"Gets content of aggregation <code>negativeAction<\/code>.\n\nNegative action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.NegativeAction"},"setSendMessageAction":{"!description":"Sets the aggregated <code>sendMessageAction<\/code>.","!static":false,"!category":"function","!type":"fn(oSendMessageAction: sap.m.semantic.SendMessageAction) -> sap.m.semantic.DetailPage","parameters":{"oSendMessageAction":"type: sap.m.semantic.SendMessageAction, description: The sendMessageAction to set"}},"setDeleteAction":{"!description":"Sets the aggregated <code>deleteAction<\/code>.","!static":false,"!category":"function","!type":"fn(oDeleteAction: sap.m.semantic.DeleteAction) -> sap.m.semantic.DetailPage","parameters":{"oDeleteAction":"type: sap.m.semantic.DeleteAction, description: The deleteAction to set"}},"destroyPrintAction":{"!description":"Destroys the printAction in the aggregation <code>printAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.DetailPage"},"setSaveAction":{"!description":"Sets the aggregated <code>saveAction<\/code>.","!static":false,"!category":"function","!type":"fn(oSaveAction: sap.m.semantic.SaveAction) -> sap.m.semantic.DetailPage","parameters":{"oSaveAction":"type: sap.m.semantic.SaveAction, description: The saveAction to set"}},"getPositiveAction":{"!description":"Gets content of aggregation <code>positiveAction<\/code>.\n\nPositive action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.PositiveAction"},"getMainAction":{"!description":"Gets content of aggregation <code>mainAction<\/code>.\n\nMain action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.MainAction"},"getCancelAction":{"!description":"Gets content of aggregation <code>cancelAction<\/code>.\n\nCancel action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.CancelAction"},"getSendEmailAction":{"!description":"Gets content of aggregation <code>sendEmailAction<\/code>.\n\nSendEmail action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.SendEmailAction"},"setShareInJamAction":{"!description":"Sets the aggregated <code>shareInJamAction<\/code>.","!static":false,"!category":"function","!type":"fn(oShareInJamAction: sap.m.semantic.ShareInJamAction) -> sap.m.semantic.DetailPage","parameters":{"oShareInJamAction":"type: sap.m.semantic.ShareInJamAction, description: The shareInJamAction to set"}},"destroyDiscussInJamAction":{"!description":"Destroys the discussInJamAction in the aggregation <code>discussInJamAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.DetailPage"},"getSendMessageAction":{"!description":"Gets content of aggregation <code>sendMessageAction<\/code>.\n\nSendMessage action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.SendMessageAction"},"setPositiveAction":{"!description":"Sets the aggregated <code>positiveAction<\/code>.","!static":false,"!category":"function","!type":"fn(oPositiveAction: sap.m.semantic.PositiveAction) -> sap.m.semantic.DetailPage","parameters":{"oPositiveAction":"type: sap.m.semantic.PositiveAction, description: The positiveAction to set"}},"!description":"A DetailPage is a {@link sap.m.semantic.ShareMenuPage} that supports semantic content of the following types:\n\n<ul>\n\t<li>{@link sap.m.semantic.AddAction}<\/li>\n\t<li>{@link sap.m.semantic.MainAction}<\/li>\n\t<li>{@link sap.m.semantic.PositiveAction}<\/li>\n\t<li>{@link sap.m.semantic.NegativeAction}<\/li>\n\t<li>{@link sap.m.semantic.ForwardAction}<\/li>\n\t<li>{@link sap.m.semantic.EditAction}<\/li>\n\t<li>{@link sap.m.semantic.SaveAction}<\/li>\n\t<li>{@link sap.m.semantic.DeleteAction}<\/li>\n\t<li>{@link sap.m.semantic.CancelAction}<\/li>\n\t<li>{@link sap.m.semantic.FlagAction}<\/li>\n\t<li>{@link sap.m.semantic.FavoriteAction}<\/li>\n\t<li>{@link sap.m.semantic.OpenInAction}<\/li>\n\t<li>{@link sap.m.semantic.DiscussInJamAction}<\/li>\n\t<li>{@link sap.m.semantic.ShareInJamAction}<\/li>\n\t<li>{@link sap.m.semantic.SendEmailAction}<\/li>\n\t<li>{@link sap.m.semantic.SendMessageAction}<\/li>\n\t<li>{@link sap.m.semantic.PrintAction}<\/li>\n\t<li>{@link sap.m.semantic.MessagesIndicator}<\/li>\n\t<li>{@link sap.m.DraftIndicator}<\/li>\n<\/ul>","setFavoriteAction":{"!description":"Sets the aggregated <code>favoriteAction<\/code>.","!static":false,"!category":"function","!type":"fn(oFavoriteAction: sap.m.semantic.FavoriteAction) -> sap.m.semantic.DetailPage","parameters":{"oFavoriteAction":"type: sap.m.semantic.FavoriteAction, description: The favoriteAction to set"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.DetailPage.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setSaveAsTileAction":{"!description":"Sets the aggregated <code>saveAsTileAction<\/code>.","!static":false,"!category":"function","!type":"fn(oSaveAsTileAction: sap.m.Button) -> sap.m.semantic.DetailPage","parameters":{"oSaveAsTileAction":"type: sap.m.Button, description: The saveAsTileAction to set"}},"setMainAction":{"!description":"Sets the aggregated <code>mainAction<\/code>.","!static":false,"!category":"function","!type":"fn(oMainAction: sap.m.semantic.MainAction) -> sap.m.semantic.DetailPage","parameters":{"oMainAction":"type: sap.m.semantic.MainAction, description: The mainAction to set"}},"getShareInJamAction":{"!description":"Gets content of aggregation <code>shareInJamAction<\/code>.\n\nShareInJam action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.ShareInJamAction"},"destroyNegativeAction":{"!description":"Destroys the negativeAction in the aggregation <code>negativeAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.DetailPage"},"getDraftIndicator":{"!description":"Gets content of aggregation <code>draftIndicator<\/code>.\n\nDraftIndicator","!static":false,"!category":"function","!type":"fn() -> sap.m.DraftIndicator"},"extend":{"!description":"Creates a new subclass of class sap.m.semantic.DetailPage with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.ShareMenuPage.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getPagingAction":{"!description":"Gets content of aggregation <code>pagingAction<\/code>.\n\nPaging action","!static":false,"!category":"function","!type":"fn() -> sap.m.PagingButton"},"getSaveAsTileAction":{"!description":"Gets content of aggregation <code>saveAsTileAction<\/code>.\n\nSaveAsTile button","!static":false,"!category":"function","!type":"fn() -> sap.m.Button"},"setDraftIndicator":{"!description":"Sets the aggregated <code>draftIndicator<\/code>.","!static":false,"!category":"function","!type":"fn(oDraftIndicator: sap.m.DraftIndicator) -> sap.m.semantic.DetailPage","parameters":{"oDraftIndicator":"type: sap.m.DraftIndicator, description: The draftIndicator to set"}},"destroySendMessageAction":{"!description":"Destroys the sendMessageAction in the aggregation <code>sendMessageAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.DetailPage"},"!module":"sap/m/semantic/DetailPage","destroyPositiveAction":{"!description":"Destroys the positiveAction in the aggregation <code>positiveAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.DetailPage"},"!helpDescription":"A DetailPage is a {@link sap.m.semantic.ShareMenuPage} that supports semantic content of the following types:\n\n<ul>\n\t<li>{@link sap.m.semantic.AddAction}<\/li>\n\t<li>{@link sap.m.semantic.MainAction}<\/li>\n\t<li>{@link sap.m.semantic.PositiveAction}<\/li>\n\t<li>{@link sap.m.semantic.NegativeAction}<\/li>\n\t<li>{@link sap.m.semantic.ForwardAction}<\/li>\n\t<li>{@link sap.m.semantic.EditAction}<\/li>\n\t<li>{@link sap.m.semantic.SaveAction}<\/li>\n\t<li>{@link sap.m.semantic.DeleteAction}<\/li>\n\t<li>{@link sap.m.semantic.CancelAction}<\/li>\n\t<li>{@link sap.m.semantic.FlagAction}<\/li>\n\t<li>{@link sap.m.semantic.FavoriteAction}<\/li>\n\t<li>{@link sap.m.semantic.OpenInAction}<\/li>\n\t<li>{@link sap.m.semantic.DiscussInJamAction}<\/li>\n\t<li>{@link sap.m.semantic.ShareInJamAction}<\/li>\n\t<li>{@link sap.m.semantic.SendEmailAction}<\/li>\n\t<li>{@link sap.m.semantic.SendMessageAction}<\/li>\n\t<li>{@link sap.m.semantic.PrintAction}<\/li>\n\t<li>{@link sap.m.semantic.MessagesIndicator}<\/li>\n\t<li>{@link sap.m.DraftIndicator}<\/li>\n<\/ul>","destroyFlagAction":{"!description":"Destroys the flagAction in the aggregation <code>flagAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.DetailPage"},"getFavoriteAction":{"!description":"Gets content of aggregation <code>favoriteAction<\/code>.\n\nFavorite action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.FavoriteAction"},"destroyMainAction":{"!description":"Destroys the mainAction in the aggregation <code>mainAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.DetailPage"},"setPrintAction":{"!description":"Sets the aggregated <code>printAction<\/code>.","!static":false,"!category":"function","!type":"fn(oPrintAction: sap.m.semantic.PrintAction) -> sap.m.semantic.DetailPage","parameters":{"oPrintAction":"type: sap.m.semantic.PrintAction, description: The printAction to set"}},"destroySendEmailAction":{"!description":"Destroys the sendEmailAction in the aggregation <code>sendEmailAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.DetailPage"},"getOpenInAction":{"!description":"Gets content of aggregation <code>openInAction<\/code>.\n\nOpenIn action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.OpenInAction"},"destroyAddAction":{"!description":"Destroys the addAction in the aggregation <code>addAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.DetailPage"},"setForwardAction":{"!description":"Sets the aggregated <code>forwardAction<\/code>.","!static":false,"!category":"function","!type":"fn(oForwardAction: sap.m.semantic.ForwardAction) -> sap.m.semantic.DetailPage","parameters":{"oForwardAction":"type: sap.m.semantic.ForwardAction, description: The forwardAction to set"}},"setEditAction":{"!description":"Sets the aggregated <code>editAction<\/code>.","!static":false,"!category":"function","!type":"fn(oEditAction: sap.m.semantic.EditAction) -> sap.m.semantic.DetailPage","parameters":{"oEditAction":"type: sap.m.semantic.EditAction, description: The editAction to set"}},"destroyEditAction":{"!description":"Destroys the editAction in the aggregation <code>editAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.DetailPage"},"!proto":"sap.m.semantic.ShareMenuPage","getDeleteAction":{"!description":"Gets content of aggregation <code>deleteAction<\/code>.\n\nDelete action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.DeleteAction"},"!category":"class","setFlagAction":{"!description":"Sets the aggregated <code>flagAction<\/code>.","!static":false,"!category":"function","!type":"fn(oFlagAction: sap.m.semantic.FlagAction) -> sap.m.semantic.DetailPage","parameters":{"oFlagAction":"type: sap.m.semantic.FlagAction, description: The flagAction to set"}},"destroySaveAction":{"!description":"Destroys the saveAction in the aggregation <code>saveAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.DetailPage"},"getMessagesIndicator":{"!description":"Gets content of aggregation <code>messagesIndicator<\/code>.\n\nMessagesIndicator","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.MessagesIndicator"},"setOpenInAction":{"!description":"Sets the aggregated <code>openInAction<\/code>.","!static":false,"!category":"function","!type":"fn(oOpenInAction: sap.m.semantic.OpenInAction) -> sap.m.semantic.DetailPage","parameters":{"oOpenInAction":"type: sap.m.semantic.OpenInAction, description: The openInAction to set"}},"destroySaveAsTileAction":{"!description":"Destroys the saveAsTileAction in the aggregation <code>saveAsTileAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.DetailPage"},"getFlagAction":{"!description":"Gets content of aggregation <code>flagAction<\/code>.\n\nFlag action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.FlagAction"},"!constructorDescription":"Constructor for a new DetailPage\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getAddAction addAction} : sap.m.semantic.AddAction<\/li>\n<li>{@link #getMainAction mainAction} : sap.m.semantic.MainAction<\/li>\n<li>{@link #getPositiveAction positiveAction} : sap.m.semantic.PositiveAction<\/li>\n<li>{@link #getNegativeAction negativeAction} : sap.m.semantic.NegativeAction<\/li>\n<li>{@link #getForwardAction forwardAction} : sap.m.semantic.ForwardAction<\/li>\n<li>{@link #getEditAction editAction} : sap.m.semantic.EditAction<\/li>\n<li>{@link #getSaveAction saveAction} : sap.m.semantic.SaveAction<\/li>\n<li>{@link #getDeleteAction deleteAction} : sap.m.semantic.DeleteAction<\/li>\n<li>{@link #getCancelAction cancelAction} : sap.m.semantic.CancelAction<\/li>\n<li>{@link #getFlagAction flagAction} : sap.m.semantic.FlagAction<\/li>\n<li>{@link #getFavoriteAction favoriteAction} : sap.m.semantic.FavoriteAction<\/li>\n<li>{@link #getOpenInAction openInAction} : sap.m.semantic.OpenInAction<\/li>\n<li>{@link #getDiscussInJamAction discussInJamAction} : sap.m.semantic.DiscussInJamAction<\/li>\n<li>{@link #getShareInJamAction shareInJamAction} : sap.m.semantic.ShareInJamAction<\/li>\n<li>{@link #getSendEmailAction sendEmailAction} : sap.m.semantic.SendEmailAction<\/li>\n<li>{@link #getSendMessageAction sendMessageAction} : sap.m.semantic.SendMessageAction<\/li>\n<li>{@link #getPrintAction printAction} : sap.m.semantic.PrintAction<\/li>\n<li>{@link #getMessagesIndicator messagesIndicator} : sap.m.semantic.MessagesIndicator<\/li>\n<li>{@link #getSaveAsTileAction saveAsTileAction} : sap.m.Button<\/li>\n<li>{@link #getPagingAction pagingAction} : sap.m.PagingButton<\/li>\n<li>{@link #getDraftIndicator draftIndicator} : sap.m.DraftIndicator<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.ShareMenuPage#constructor sap.m.semantic.ShareMenuPage}\ncan be used as well.","getAddAction":{"!description":"Gets content of aggregation <code>addAction<\/code>.\n\nAdd action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.AddAction"},"setPagingAction":{"!description":"Sets the aggregated <code>pagingAction<\/code>.","!static":false,"!category":"function","!type":"fn(oPagingAction: sap.m.PagingButton) -> sap.m.semantic.DetailPage","parameters":{"oPagingAction":"type: sap.m.PagingButton, description: The pagingAction to set"}},"setMessagesIndicator":{"!description":"Sets the aggregated <code>messagesIndicator<\/code>.","!static":false,"!category":"function","!type":"fn(oMessagesIndicator: sap.m.semantic.MessagesIndicator) -> sap.m.semantic.DetailPage","parameters":{"oMessagesIndicator":"type: sap.m.semantic.MessagesIndicator, description: The messagesIndicator to set"}},"destroyDraftIndicator":{"!description":"Destroys the draftIndicator in the aggregation <code>draftIndicator<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.DetailPage"},"getDiscussInJamAction":{"!description":"Gets content of aggregation <code>discussInJamAction<\/code>.\n\nDiscussInJam action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.DiscussInJamAction"},"setDiscussInJamAction":{"!description":"Sets the aggregated <code>discussInJamAction<\/code>.","!static":false,"!category":"function","!type":"fn(oDiscussInJamAction: sap.m.semantic.DiscussInJamAction) -> sap.m.semantic.DetailPage","parameters":{"oDiscussInJamAction":"type: sap.m.semantic.DiscussInJamAction, description: The discussInJamAction to set"}},"setAddAction":{"!description":"Sets the aggregated <code>addAction<\/code>.","!static":false,"!category":"function","!type":"fn(oAddAction: sap.m.semantic.AddAction) -> sap.m.semantic.DetailPage","parameters":{"oAddAction":"type: sap.m.semantic.AddAction, description: The addAction to set"}},"getPrintAction":{"!description":"Gets content of aggregation <code>printAction<\/code>.\n\nPrint action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.PrintAction"},"destroyCancelAction":{"!description":"Destroys the cancelAction in the aggregation <code>cancelAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.DetailPage"},"getForwardAction":{"!description":"Gets content of aggregation <code>forwardAction<\/code>.\n\nNegative action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.ForwardAction"},"getSaveAction":{"!description":"Gets content of aggregation <code>saveAction<\/code>.\n\nSave action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.SaveAction"},"destroyFavoriteAction":{"!description":"Destroys the favoriteAction in the aggregation <code>favoriteAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.DetailPage"},"destroyForwardAction":{"!description":"Destroys the forwardAction in the aggregation <code>forwardAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.DetailPage"},"setSendEmailAction":{"!description":"Sets the aggregated <code>sendEmailAction<\/code>.","!static":false,"!category":"function","!type":"fn(oSendEmailAction: sap.m.semantic.SendEmailAction) -> sap.m.semantic.DetailPage","parameters":{"oSendEmailAction":"type: sap.m.semantic.SendEmailAction, description: The sendEmailAction to set"}},"destroyMessagesIndicator":{"!description":"Destroys the messagesIndicator in the aggregation <code>messagesIndicator<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.DetailPage"},"destroyPagingAction":{"!description":"Destroys the pagingAction in the aggregation <code>pagingAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.DetailPage"},"getEditAction":{"!description":"Gets content of aggregation <code>editAction<\/code>.\n\nEdit action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.EditAction"},"destroyDeleteAction":{"!description":"Destroys the deleteAction in the aggregation <code>deleteAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.DetailPage"},"destroyOpenInAction":{"!description":"Destroys the openInAction in the aggregation <code>openInAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.DetailPage"},"setCancelAction":{"!description":"Sets the aggregated <code>cancelAction<\/code>.","!static":false,"!category":"function","!type":"fn(oCancelAction: sap.m.semantic.CancelAction) -> sap.m.semantic.DetailPage","parameters":{"oCancelAction":"type: sap.m.semantic.CancelAction, description: The cancelAction to set"}},"setNegativeAction":{"!description":"Sets the aggregated <code>negativeAction<\/code>.","!static":false,"!category":"function","!type":"fn(oNegativeAction: sap.m.semantic.NegativeAction) -> sap.m.semantic.DetailPage","parameters":{"oNegativeAction":"type: sap.m.semantic.NegativeAction, description: The negativeAction to set"}},"destroyShareInJamAction":{"!description":"Destroys the shareInJamAction in the aggregation <code>shareInJamAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.DetailPage"}},"sap.m.StandardListItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.StandardListItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.StandardListItem"},"sap.m.semantic.FavoriteAction":{"!description":"A FavoriteAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","extend":{"!description":"Creates a new subclass of class sap.m.semantic.FavoriteAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticToggleButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.FavoriteAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new FavoriteAction.","!module":"sap/m/semantic/FavoriteAction","!helpDescription":"A FavoriteAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","!proto":"sap.m.semantic.SemanticToggleButton","!category":"class"},"sap.m.DateRangeSelection_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.DateRangeSelection with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.DatePicker.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.DateRangeSelection"},"sap.m.semantic.FilterAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.FilterAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.FilterAction"},"sap.m.ViewSettingsCustomItem":{"!description":"The ViewSettingsCustomItem control is used for modelling custom filters in the ViewSettingsDialog.","getMetadata":{"!description":"Returns a metadata object for class sap.m.ViewSettingsCustomItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.m.ViewSettingsItem","!category":"class","destroyCustomControl":{"!description":"Destroys the customControl in the aggregation <code>customControl<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ViewSettingsCustomItem"},"getCustomControl":{"!description":"Internally the control is handled as a managed object instead of an aggregation\nbecause this control is sometimes aggregated in other controls like a popover or a dialog.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"extend":{"!description":"Creates a new subclass of class sap.m.ViewSettingsCustomItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ViewSettingsItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new ViewSettingsCustomItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFilterCount filterCount} : int (default: 0)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCustomControl customControl} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ViewSettingsItem#constructor sap.m.ViewSettingsItem}\ncan be used as well.","!module":"sap/m/ViewSettingsCustomItem","!helpDescription":"The ViewSettingsCustomItem control is used for modelling custom filters in the ViewSettingsDialog.","setFilterCount":{"!description":"Sets the filterCount without invalidating the control as it is never rendered directly.","!static":false,"!category":"function","!type":"fn(iValue: Number) -> sap.m.ViewSettingsItem","parameters":{"iValue":"type: int, description: The new value for property filterCount"}},"clone":{"!description":"Creates a clone of the ViewSettingsCustomItem instance.","!static":false,"!category":"function","!type":"fn(sIdSuffix?: String, aLocalIds?: [String], oOptions?: Object) -> sap.ui.base.ManagedObject","parameters":{"sIdSuffix":"type: string, description: a suffix to be appended to the cloned object id","aLocalIds":"type: string[], description: an array of local IDs within the cloned hierarchy (internally used)","oOptions":"type: Object, description: configuration object"}},"setCustomControl":{"!description":"Internally the control is handled as a managed object instead of an aggregation\nas this control is sometimes aggregated in other controls like a popover or a dialog.","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control) -> sap.m.ViewSettingsCustomItem","parameters":{"oControl":"type: sap.ui.core.Control, description: A control used for filtering purposes"}},"getFilterCount":{"!description":"Gets current value of property <code>filterCount<\/code>.\n\nThe number of currently active filters for this custom filter item. It will be displayed in the filter list of the ViewSettingsDialog to represent the filter state of the custom control.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"}},"sap.m.DraftIndicatorState":{"!description":"Enum for the state of sap.m.DraftIndicator control.","!module":"sap/m/library","Saved":{"!description":"Indicates that the draft is already saved","!category":"enum","!type":"String"},"!category":"static class","Saving":{"!description":"Indicates that the draft currently is being saved","!category":"enum","!type":"String"},"Clear":{"!description":"This is the default value for DraftIndicatorState type. This state has no visual information displayed.","!category":"enum","!type":"String"}},"sap.m.CustomTile_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.CustomTile with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Tile.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.CustomTile"},"sap.m.PullToRefresh":{"!description":"PullToRefresh control. Put it as the first control in contents of a scroll container or a scrollable page. Do not place it into a page with disabled scrolling.\nOn touch devices it gets hidden by default and when the user pulls down the page far enough, it gets visible and triggers the \"refresh\" event.\nIn non-touch browsers where scrollbars are used for scrolling, it is always visible and triggers the \"refresh\" event when clicked.","getMetadata":{"!description":"Returns a metadata object for class sap.m.PullToRefresh.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachRefresh":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>refresh<\/code> event of this <code>sap.m.PullToRefresh<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.PullToRefresh<\/code> itself.\n\nEvent indicates that the user has requested new data","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.PullToRefresh","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.PullToRefresh<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setShowIcon":{"!description":"Sets a new value for property <code>showIcon<\/code>.\n\nSet to true to display an icon/logo. Icon must be set either in the customIcon property or in the CSS theme for the PullToRefresh control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowIcon: Boolean) -> sap.m.PullToRefresh","parameters":{"bShowIcon":"type: boolean, description: New value for property <code>showIcon<\/code>"}},"!proto":"sap.ui.core.Control","!category":"class","setDescription":{"!description":"Sets a new value for property <code>description<\/code>.\n\nOptional description. May be used to inform a user, for example, when the list has been updated last time.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDescription: String) -> sap.m.PullToRefresh","parameters":{"sDescription":"type: string, description: New value for property <code>description<\/code>"}},"getDescription":{"!description":"Gets current value of property <code>description<\/code>.\n\nOptional description. May be used to inform a user, for example, when the list has been updated last time.","!static":false,"!category":"function","!type":"fn() -> String"},"getIconDensityAware":{"!description":"Gets current value of property <code>iconDensityAware<\/code>.\n\nBy default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server.\n\nIf bandwidth is the key for the application, set this value to false.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowIcon":{"!description":"Gets current value of property <code>showIcon<\/code>.\n\nSet to true to display an icon/logo. Icon must be set either in the customIcon property or in the CSS theme for the PullToRefresh control.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.m.PullToRefresh with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"hide":{"!description":"Hides the control and resets it to the normal state. In non-touch environments the control is not hidden.","!static":false,"!category":"function","!type":"fn()"},"!constructorDescription":"Constructor for a new PullToRefresh.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDescription description} : string<\/li>\n<li>{@link #getShowIcon showIcon} : boolean (default: false)<\/li>\n<li>{@link #getCustomIcon customIcon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:refresh refresh} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/m/PullToRefresh","getCustomIcon":{"!description":"Gets current value of property <code>customIcon<\/code>.\n\nProvide a URI to a custom icon image to replace the SAP logo. Large images are scaled down to max 50px height.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"setIconDensityAware":{"!description":"Sets a new value for property <code>iconDensityAware<\/code>.\n\nBy default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server.\n\nIf bandwidth is the key for the application, set this value to false.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bIconDensityAware: Boolean) -> sap.m.PullToRefresh","parameters":{"bIconDensityAware":"type: boolean, description: New value for property <code>iconDensityAware<\/code>"}},"!helpDescription":"PullToRefresh control. Put it as the first control in contents of a scroll container or a scrollable page. Do not place it into a page with disabled scrolling.\nOn touch devices it gets hidden by default and when the user pulls down the page far enough, it gets visible and triggers the \"refresh\" event.\nIn non-touch browsers where scrollbars are used for scrolling, it is always visible and triggers the \"refresh\" event when clicked.","setCustomIcon":{"!description":"Sets a new value for property <code>customIcon<\/code>.\n\nProvide a URI to a custom icon image to replace the SAP logo. Large images are scaled down to max 50px height.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sCustomIcon: sap.ui.core.URI) -> sap.m.PullToRefresh","parameters":{"sCustomIcon":"type: sap.ui.core.URI, description: New value for property <code>customIcon<\/code>"}},"fireRefresh":{"!description":"Fires event <code>refresh<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.PullToRefresh","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"detachRefresh":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>refresh<\/code> event of this <code>sap.m.PullToRefresh<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.PullToRefresh","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}}},"sap.m.semantic.EditAction":{"!description":"An EditAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","extend":{"!description":"Creates a new subclass of class sap.m.semantic.EditAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.EditAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new EditAction.","!module":"sap/m/semantic/EditAction","!helpDescription":"An EditAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","!proto":"sap.m.semantic.SemanticButton","!category":"class"},"sap.m.SegmentedButton":{"removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.m.SegmentedButtonItem) -> sap.m.SegmentedButtonItem","parameters":{"vItem":"type: int|string|sap.m.SegmentedButtonItem, description: The itemto remove or its index or id"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>button<\/code> of type <code>sap.m.Button<\/code>Reference to the button, that has been selected.<\/li>\n<li><code>id<\/code> of type <code>string<\/code>ID of the button, which has been selected.<\/li>\n<li><code>key<\/code> of type <code>string<\/code>Key of the button, which has been selected. This property is only filled when the control is initiated with the items aggregation.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.SegmentedButton","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.m.SegmentedButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.SegmentedButton<\/code> itself.\n\nFires when the user selects a button, which returns the ID and button object.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.SegmentedButton","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.SegmentedButton<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.core.Control","destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.SegmentedButton"},"!category":"class","destroyButtons":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28.0 Instead use the \"items\" aggregation.<br>Destroys all the buttons in the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.SegmentedButton"},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDefines the width of the SegmentedButton control. If not set, it uses the minimum required width to make all buttons inside of the same size (based on the biggest button).","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"unbindSelectedKey":{"!description":"Unbinds property <code>selectedKey<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.SegmentedButton"},"addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.SegmentedButtonItem) -> sap.m.SegmentedButton","parameters":{"oItem":"type: sap.m.SegmentedButtonItem, description: the item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nAggregation of items to be displayed. The items set in this aggregation are used as an interface for the buttons displayed by the control.\nThe \"items\" and \"buttons\" aggregations should NOT be used simultaneously as it causes the control to work incorrectly.","!static":false,"!category":"function","!type":"fn() -> [sap.m.SegmentedButtonItem]"},"!constructorDescription":"Constructor for a new SegmentedButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getSelectedKey selectedKey} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getButtons buttons} : sap.m.Button[] (default)<\/li>\n<li>{@link #getItems items} : sap.m.SegmentedButtonItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.m.SegmentedButton","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"indexOfItem":{"!description":"Checks for the provided <code>sap.m.SegmentedButtonItem<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.SegmentedButtonItem) -> Number","parameters":{"oItem":"type: sap.m.SegmentedButtonItem, description: The item whose index is looked for"}},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nDisables all the buttons in the SegmentedButton control. When disabled all the buttons look grey and you cannot focus or click on them.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"bindItems":{"!description":"Binds aggregation <code>items<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.SegmentedButton","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"createButton":{"!description":"Adds a Button with a text as title, an URI for an icon, enabled and textDirection.\nOnly one is allowed.","!static":false,"!category":"function","!type":"fn(sText: String, sURI: sap.ui.core.URI, bEnabled: Boolean, sTextDirection?: sap.ui.core.TextDirection) -> sap.m.Button","parameters":{"bEnabled":"type: boolean, description: Enables the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings.","sText":"type: string, description: Defines the title text of the newly created Button","sURI":"type: sap.ui.core.URI, description: Icon to be displayed as graphical element within the Button.\n        Density related image will be loaded if image with density awareness name in format [imageName]@[densityValue].[extension] is provided.","sTextDirection":"type: sap.ui.core.TextDirection, description: Element's text directionality with enumerated options"}},"!description":"SegmentedButton is a horizontal control made of multiple buttons, which can display a title or an image. It automatically resizes the buttons to fit proportionally within the control. When no width is set, the control uses the available width.","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.SegmentedButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getButtons":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28.0 Instead use the \"items\" aggregation.<br>Gets content of aggregation <code>buttons<\/code>.\n\nThe buttons of the SegmentedButton control. The items set in this aggregation are used as an interface for the buttons displayed by the control. Only the properties ID, icon, text, enabled and textDirections of the Button control are evaluated. Setting other properties of the button will have no effect. Alternatively, you can use the createButton method to add buttons.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"unbindItems":{"!description":"Unbinds aggregation <code>items<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.SegmentedButton"},"addButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28.0 Instead use the \"items\" aggregation.<br>Adds some button to the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn(oButton: sap.m.Button) -> sap.m.SegmentedButton","parameters":{"oButton":"type: sap.m.Button, description: the button to add; if empty, nothing is inserted"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.SegmentedButtonItem]"},"setSelectedButton":{"!description":"Setter for association <code>selectedButton<\/code>.","!static":false,"!category":"function","!type":"fn(vButton: String | sap.m.Button | null | undefined) -> sap.m.SegmentedButton","parameters":{"vButton":"type: string|sap.m.Button|null|undefined, description: New value for association <code>setSelectedButton<\/code>\n   A sap.m.Button instance which becomes the new target of this <code>selectedButton<\/code> association.\n   Alternatively, the ID of a sap.m.Button instance may be given as a string.\n   If the value of null, undefined, or an empty string is provided the first item will be selected."}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDefines the width of the SegmentedButton control. If not set, it uses the minimum required width to make all buttons inside of the same size (based on the biggest button).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.SegmentedButton","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getSelectedButton":{"!description":"ID of the element which is the current target of the association <code>selectedButton<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Button"},"indexOfButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28.0 Instead use the \"items\" aggregation.<br>Checks for the provided <code>sap.m.Button<\/code> in the aggregation <code>buttons<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oButton: sap.m.Button) -> Number","parameters":{"oButton":"type: sap.m.Button, description: The button whose index is looked for"}},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.m.SegmentedButton","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.m.SegmentedButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nDisables all the buttons in the SegmentedButton control. When disabled all the buttons look grey and you cannot focus or click on them.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.m.SegmentedButton","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"bindSelectedKey":{"!description":"Binds property <code>selectedKey<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.SegmentedButton","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"!module":"sap/m/SegmentedButton","insertButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28.0 Instead use the \"items\" aggregation.<br>Inserts a button into the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn(oButton: sap.m.Button, iIndex: Number) -> sap.m.SegmentedButton","parameters":{"oButton":"type: sap.m.Button, description: the button to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the button should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the button is inserted at position 0; for a value\n             greater than the current size of the aggregation, the button is inserted at\n             the last position"}},"!helpDescription":"SegmentedButton is a horizontal control made of multiple buttons, which can display a title or an image. It automatically resizes the buttons to fit proportionally within the control. When no width is set, the control uses the available width.","removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"removeButton":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28.0 Instead use the \"items\" aggregation.<br>Removes a button from the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn(vButton: Number | String | sap.m.Button) -> sap.m.Button","parameters":{"vButton":"type: int|string|sap.m.Button, description: The buttonto remove or its index or id"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.m.SegmentedButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.SegmentedButton","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"removeAllButtons":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28.0 Instead use the \"items\" aggregation.<br>Removes all the controls from the aggregation <code>buttons<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.SegmentedButtonItem, iIndex: Number) -> sap.m.SegmentedButton","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position","oItem":"type: sap.m.SegmentedButtonItem, description: the item to insert; if empty, nothing is inserted"}}},"sap.m.semantic.SemanticSelect":{"removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.core.Item) -> sap.ui.core.Item","parameters":{"vItem":"type: int|string|sap.ui.core.Item, description: The itemto remove or its index or id"}},"!proto":"sap.m.semantic.SemanticControl","destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.SemanticSelect"},"!category":"class","detachChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>change<\/code> event of this <code>sap.m.semantic.SemanticSelect<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.semantic.SemanticSelect","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item) -> sap.m.semantic.SemanticSelect","parameters":{"oItem":"type: sap.ui.core.Item, description: the item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nSee {@link sap.m.Select#items}","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"!constructorDescription":"Constructor for a new SemanticSelect.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getSelectedKey selectedKey} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Item[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.SemanticControl#constructor sap.m.semantic.SemanticControl}\ncan be used as well.","indexOfItem":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item) -> Number","parameters":{"oItem":"type: sap.ui.core.Item, description: The item whose index is looked for"}},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nSee {@link sap.m.Select#enabled}\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"bindItems":{"!description":"Binds aggregation <code>items<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.semantic.SemanticSelect","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getSelectedItem":{"!description":"ID of the element which is the current target of the association <code>selectedItem<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Item"},"!description":"A semantic select is a {@link sap.m.Select} eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.SemanticSelect.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setSelectedKey":{"!description":"Sets a new value for property <code>selectedKey<\/code>.\n\nSee {@link sap.m.Select#selectedKey}\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sSelectedKey: String) -> sap.m.semantic.SemanticSelect","parameters":{"sSelectedKey":"type: string, description: New value for property <code>selectedKey<\/code>"}},"unbindItems":{"!description":"Unbinds aggregation <code>items<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.SemanticSelect"},"attachChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>change<\/code> event of this <code>sap.m.semantic.SemanticSelect<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.semantic.SemanticSelect<\/code> itself.\n\nSee {@link sap.m.Select#change}","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.semantic.SemanticSelect","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.semantic.SemanticSelect<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"fireChange":{"!description":"Fires event <code>change<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selectedItem<\/code> of type <code>sap.ui.core.Item<\/code>The selected item.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.semantic.SemanticSelect","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"extend":{"!description":"Creates a new subclass of class sap.m.semantic.SemanticSelect with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticControl.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nSee {@link sap.m.Select#enabled}\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.m.semantic.SemanticSelect","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"setSelectedItem":{"!description":"Sets the associated <code>selectedItem<\/code>.","!static":false,"!category":"function","!type":"fn(oSelectedItem: sap.ui.core.Item) -> sap.m.semantic.SemanticSelect","parameters":{"oSelectedItem":"type: sap.ui.core.Item, description: Id of an element which becomes the new target of this selectedItem association; alternatively, an element instance may be given"}},"!module":"sap/m/semantic/SemanticSelect","getSelectedKey":{"!description":"Gets current value of property <code>selectedKey<\/code>.\n\nSee {@link sap.m.Select#selectedKey}\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"A semantic select is a {@link sap.m.Select} eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item, iIndex: Number) -> sap.m.semantic.SemanticSelect","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position","oItem":"type: sap.ui.core.Item, description: the item to insert; if empty, nothing is inserted"}}},"sap.m.semantic.SemanticToggleButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.SemanticToggleButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.SemanticToggleButton"},"sap.m.NavContainerChild":{"!description":"sap.m.NavContainerChild is an artificial interface with the only purpose to bear the documentation of\npseudo events triggered by sap.m.NavContainer on its child controls when navigation occurs and child controls are displayed/hidden.\n\nInterested parties outside the child control can listen to one or more of these events by registering a Delegate:\n<pre>\npage1.addEventDelegate({\n   onBeforeShow: function(evt) {\n      // page1 is about to be shown; act accordingly - if required you can read event information from the evt object\n   },\n   onAfterHide: function(evt) {\n      // ...\n   }\n});\n<\/pre>","!module":"sap/m/NavContainer","!category":"static class"},"sap.m.IconTabBar":{"removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.m.IconTab) -> sap.m.IconTab","parameters":{"vItem":"type: int|string|sap.m.IconTab, description: The itemto remove or its index or id"}},"setExpanded":{"!description":"Sets the tab content as expanded.","!static":false,"!category":"function","!type":"fn(bExpanded: Boolean) -> sap.m.IconTabBar","parameters":{"bExpanded":"type: boolean, description: new parameter value"}},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>item<\/code> of type <code>sap.m.IconTabFilter<\/code>The selected item<\/li>\n<li><code>key<\/code> of type <code>string<\/code>The key of the selected item<\/li>\n<li><code>selectedItem<\/code> of type <code>sap.m.IconTabFilter<\/code>The selected item<\/li>\n<li><code>selectedKey<\/code> of type <code>string<\/code>The key of the selected item<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.IconTabBar","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.m.IconTabBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.IconTabBar<\/code> itself.\n\nFires when an item is selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.IconTabBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.IconTabBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nRepresents the contents displayed below the IconTabBar.\nIf there are multiple contents, they are rendered after each other.\nThe developer has to manage to display the right one or use the content aggregation\ninside the IconTabFilter (which will be displayed instead if it is set).","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getShowSelection":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.0 Regarding to changes of this control this property is not needed anymore.<br>Gets current value of property <code>showSelection<\/code>.\n\nDefines whether the current selection should be visualized.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.IconTabBar"},"getBackgroundDesign":{"!description":"Gets current value of property <code>backgroundDesign<\/code>.\n\nSpecifies the background color of the IconTabBar.\n\nDepending on the theme, you can change the state of\nthe background color to \"Solid\", \"Translucent\", or \"Transparent\".\n\nDefault value is <code>Solid<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.BackgroundDesign"},"setBackgroundDesign":{"!description":"Sets a new value for property <code>backgroundDesign<\/code>.\n\nSpecifies the background color of the IconTabBar.\n\nDepending on the theme, you can change the state of\nthe background color to \"Solid\", \"Translucent\", or \"Transparent\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Solid<\/code>.","!static":false,"!category":"function","!type":"fn(sBackgroundDesign: sap.m.BackgroundDesign) -> sap.m.IconTabBar","parameters":{"sBackgroundDesign":"type: sap.m.BackgroundDesign, description: New value for property <code>backgroundDesign<\/code>"}},"!category":"class","fireExpand":{"!description":"Fires event <code>expand<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>expand<\/code> of type <code>boolean<\/code>If the tab will expand, this is true.<\/li>\n<li><code>collapse<\/code> of type <code>boolean<\/code>If the tab will collapse, this is true.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.IconTabBar","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getUpperCase":{"!description":"Gets current value of property <code>upperCase<\/code>.\n\nDetermines whether the text of the icon tab filter (not the count) is displayed in uppercase.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.IconTab) -> sap.m.IconTabBar","parameters":{"oItem":"type: sap.m.IconTab, description: the item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nThe items displayed in the IconTabBar.","!static":false,"!category":"function","!type":"fn() -> [sap.m.IconTab]"},"!constructorDescription":"Constructor for a new IconTabBar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowSelection showSelection} : boolean (default: true)<\/li>\n<li>{@link #getExpandable expandable} : boolean (default: true)<\/li>\n<li>{@link #getExpanded expanded} : boolean (default: true)<\/li>\n<li>{@link #getSelectedKey selectedKey} : string<\/li>\n<li>{@link #getUpperCase upperCase} : boolean (default: false)<\/li>\n<li>{@link #getStretchContentHeight stretchContentHeight} : boolean (default: false)<\/li>\n<li>{@link #getApplyContentPadding applyContentPadding} : boolean (default: true)<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign (default: Solid)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.IconTab[]<\/li>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:expand expand} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","indexOfItem":{"!description":"Checks for the provided <code>sap.m.IconTab<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.IconTab) -> Number","parameters":{"oItem":"type: sap.m.IconTab, description: The item whose index is looked for"}},"getExpandable":{"!description":"Gets current value of property <code>expandable<\/code>.\n\nDefines if the tabs are collapsible and expandable.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.IconTabBar"},"bindAggregation":{"!description":"Forwards aggregations with the name of items to the internal list.","!static":false,"!category":"function","!type":"fn(sAggregationName: String, oBindingInfo: Object) -> sap.m.IconTabBar","parameters":{"sAggregationName":"type: string, description: The name for the binding","oBindingInfo":"type: object, description: The configuration parameters for the binding"}},"!description":"The IconTabBar control represents a collection of tabs with associated content.\n\nIconTabBar covers the following use cases:\n- Filter \u2013 There is only one main content for all tabs. The main content can be filtered, based on the selected tab.\n- Normal tab bar - The contents of each tab are independent from each other.\n- Combination of the above - There can be both filtered and independent contents.","setExpandable":{"!description":"Sets the tabs as collapsible and expandable without re-rendering the control.","!static":false,"!category":"function","!type":"fn(bExpandable: Boolean) -> sap.m.IconTabBar","parameters":{"bExpandable":"type: boolean, description: new parameter value"}},"setStretchContentHeight":{"!description":"Sets a new value for property <code>stretchContentHeight<\/code>.\n\nDetermines whether the IconTabBar height is stretched to the maximum possible height\nof its parent container. As a prerequisite, the height of the parent container must be\ndefined as a fixed value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bStretchContentHeight: Boolean) -> sap.m.IconTabBar","parameters":{"bStretchContentHeight":"type: boolean, description: New value for property <code>stretchContentHeight<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.IconTabBar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setSelectedKey":{"!description":"Reflector for the internal header's selectedKey property.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.m.IconTabBar","parameters":{"sValue":"type: string, description: the new value"}},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getExpanded":{"!description":"Gets current value of property <code>expanded<\/code>.\n\nIndicates if the actual tab content is expanded or not.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.m.IconTabBar","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.IconTab]"},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"setApplyContentPadding":{"!description":"Sets a new value for property <code>applyContentPadding<\/code>.\n\nDetermines whether the IconTabBar content fits to the full area.\nThe paddings are removed if it's set to false.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bApplyContentPadding: Boolean) -> sap.m.IconTabBar","parameters":{"bApplyContentPadding":"type: boolean, description: New value for property <code>applyContentPadding<\/code>"}},"attachExpand":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>expand<\/code> event of this <code>sap.m.IconTabBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.IconTabBar<\/code> itself.\n\nIndicates that the tab will expand or collapse.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.IconTabBar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.IconTabBar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"extend":{"!description":"Creates a new subclass of class sap.m.IconTabBar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachExpand":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>expand<\/code> event of this <code>sap.m.IconTabBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.IconTabBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!module":"sap/m/IconTabBar","getSelectedKey":{"!description":"Reflector for the internal header's selectedKey property.","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"The IconTabBar control represents a collection of tabs with associated content.\n\nIconTabBar covers the following use cases:\n- Filter \u2013 There is only one main content for all tabs. The main content can be filtered, based on the selected tab.\n- Normal tab bar - The contents of each tab are independent from each other.\n- Combination of the above - There can be both filtered and independent contents.","getApplyContentPadding":{"!description":"Gets current value of property <code>applyContentPadding<\/code>.\n\nDetermines whether the IconTabBar content fits to the full area.\nThe paddings are removed if it's set to false.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setUpperCase":{"!description":"Sets a new value for property <code>upperCase<\/code>.\n\nDetermines whether the text of the icon tab filter (not the count) is displayed in uppercase.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bUpperCase: Boolean) -> sap.m.IconTabBar","parameters":{"bUpperCase":"type: boolean, description: New value for property <code>upperCase<\/code>"}},"setShowSelection":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.0 Regarding to changes of this control this property is not needed anymore.<br>Sets a new value for property <code>showSelection<\/code>.\n\nDefines whether the current selection should be visualized.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSelection: Boolean) -> sap.m.IconTabBar","parameters":{"bShowSelection":"type: boolean, description: New value for property <code>showSelection<\/code>"}},"insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.m.IconTabBar","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.m.IconTabBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.IconTabBar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getStretchContentHeight":{"!description":"Gets current value of property <code>stretchContentHeight<\/code>.\n\nDetermines whether the IconTabBar height is stretched to the maximum possible height\nof its parent container. As a prerequisite, the height of the parent container must be\ndefined as a fixed value.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.IconTab, iIndex: Number) -> sap.m.IconTabBar","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position","oItem":"type: sap.m.IconTab, description: the item to insert; if empty, nothing is inserted"}}},"sap.m.StandardTile_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.StandardTile with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Tile.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.StandardTile"},"sap.m.ToolbarSeparator":{"!description":"Creates a visual separator (theme dependent: padding, margin, line) between the preceding and succeeding toolbar item.","extend":{"!description":"Creates a new subclass of class sap.m.ToolbarSeparator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.ToolbarSeparator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new ToolbarSeparator.","!module":"sap/m/ToolbarSeparator","!helpDescription":"Creates a visual separator (theme dependent: padding, margin, line) between the preceding and succeeding toolbar item.","!proto":"sap.ui.core.Control","!category":"class"},"sap.m.SlideTile_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.SlideTile with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.SlideTile"},"sap.m.ColumnListItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ColumnListItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ColumnListItem"},"sap.m.semantic.NegativeAction":{"!description":"A NegativeAction button has default semantic-specific properties and\nis eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","extend":{"!description":"Creates a new subclass of class sap.m.semantic.NegativeAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.NegativeAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new NegativeAction.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.SemanticButton#constructor sap.m.semantic.SemanticButton}\ncan be used as well.","!module":"sap/m/semantic/NegativeAction","!helpDescription":"A NegativeAction button has default semantic-specific properties and\nis eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nButton text","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.m.semantic.SemanticButton","!category":"class","setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nButton text\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.m.semantic.NegativeAction","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.m.ListBase":{"setKeyboardMode":{"!description":"Sets a new value for property <code>keyboardMode<\/code>.\n\nDefines keyboard handling behavior of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Navigation<\/code>.","!static":false,"!category":"function","!type":"fn(sKeyboardMode: sap.m.ListKeyboardMode) -> sap.m.ListBase","parameters":{"sKeyboardMode":"type: sap.m.ListKeyboardMode, description: New value for property <code>keyboardMode<\/code>"}},"getShowUnread":{"!description":"Gets current value of property <code>showUnread<\/code>.\n\nActivates the unread indicator for all items, if set to <code>true<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeSelections":{"!description":"Removes visible selections of the current selection mode.","!static":false,"!category":"function","!type":"fn(bAll: Boolean) -> sap.m.ListBase","parameters":{"bAll":"type: boolean, description: Since version 1.16.3. This control keeps old selections after filter or sorting. Set this parameter \"true\" to remove all selections."}},"fireSelect":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16 Use the <code>selectionChange<\/code> event instead.<br>Fires event <code>select<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>listItem<\/code> of type <code>sap.m.ListItemBase<\/code>The item which fired the select event.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ListBase","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"swipeOut":{"!description":"After swipeContent is shown, user can interact with this control(e.g Tap). After interaction is done, you can/should use this method to hide swipeContent from screen.\nNote: If users try to tap inside of the list but outside of the swipeContent then control hides automatically.","!static":false,"!category":"function","!type":"fn(oCallback: Object) -> sap.m.ListBase","parameters":{"oCallback":"type: any, description: This callback function is called with two parameters(swipedListItem and swipedContent) after swipe-out animation is finished."}},"attachUpdateStarted":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>updateStarted<\/code> event of this <code>sap.m.ListBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ListBase<\/code> itself.\n\nFires before <code>items<\/code> binding is updated (e.g. sorting, filtering)\n\n<b>Note:<\/b> Event handler should not invalidate the control.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ListBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ListBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setRememberSelections":{"!description":"Sets a new value for property <code>rememberSelections<\/code>.\n\nIf set to true, this control remembers and retains the selection of the items after a binding update has been performed (e.g. sorting, filtering).\n<b>Note:<\/b> This feature works only if two-way binding for the <code>selected<\/code> property of the item is not used and needs to be turned off if the binding context of the item does not always point to the same entry in the model, for example, if the order of the data in the <code>JSONModel<\/code> is changed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bRememberSelections: Boolean) -> sap.m.ListBase","parameters":{"bRememberSelections":"type: boolean, description: New value for property <code>rememberSelections<\/code>"}},"detachUpdateStarted":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>updateStarted<\/code> event of this <code>sap.m.ListBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ListBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setIncludeItemInSelection":{"!description":"Sets a new value for property <code>includeItemInSelection<\/code>.\n\nDefines whether the items are selectable by clicking on the item itself (<code>true<\/code>) rather than having to set the selection control first.\n<b>Note:<\/b> The <code>SingleSelectMaster<\/code> mode also provides this functionality by default.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIncludeItemInSelection: Boolean) -> sap.m.ListBase","parameters":{"bIncludeItemInSelection":"type: boolean, description: New value for property <code>includeItemInSelection<\/code>"}},"getGrowingTriggerText":{"!description":"Gets current value of property <code>growingTriggerText<\/code>.\n\nDefines the text displayed on the growing button. The default is a translated text (\"More\") coming from the message bundle.\nThis property can only be used if the <code>growing<\/code> property is set to <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getLastMode":{"!description":"Returns the last list mode, the mode that is rendered\nThis can be used to detect mode changes during rendering","!static":false,"!category":"function","!type":"fn()"},"attachSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>selectionChange<\/code> event of this <code>sap.m.ListBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ListBase<\/code> itself.\n\nFires when selection is changed via user interaction inside the control.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ListBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ListBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setHeaderText":{"!description":"Sets a new value for property <code>headerText<\/code>.\n\nDefines the header text that appears in the control.\n<b>Note:<\/b> If <code>headerToolbar<\/code> aggregation is set, then this property is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeaderText: String) -> sap.m.ListBase","parameters":{"sHeaderText":"type: string, description: New value for property <code>headerText<\/code>"}},"!description":"The <code>sap.m.ListBase<\/code> control provides a base functionality of the <code>sap.m.List<\/code> and <code>sap.m.Table<\/code> controls. Selection, deletion, unread states and inset style are also maintained in <code>sap.m.ListBase<\/code>.\n\n<b>Note:<\/b> The ListBase including all contained items may be completely re-rendered when the data of a bound model is changed. Due to the limited hardware resources of mobile devices this can lead to longer delays for lists that contain many items. As such the usage of a list is not recommended for these use cases.","detachDelete":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>delete<\/code> event of this <code>sap.m.ListBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ListBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setShowUnread":{"!description":"Sets a new value for property <code>showUnread<\/code>.\n\nActivates the unread indicator for all items, if set to <code>true<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowUnread: Boolean) -> sap.m.ListBase","parameters":{"bShowUnread":"type: boolean, description: New value for property <code>showUnread<\/code>"}},"attachGrowingFinished":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.3 Instead, use \"updateFinished\" event.<br>Attaches event handler <code>fnFunction<\/code> to the <code>growingFinished<\/code> event of this <code>sap.m.ListBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ListBase<\/code> itself.\n\nFires after the new growing chunk has been fetched from the model and processed by the control.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ListBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ListBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"extend":{"!description":"Creates a new subclass of class sap.m.ListBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getHeaderDesign":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16 No longer has any functionality.<br>Gets current value of property <code>headerDesign<\/code>.\n\nDefines the header style of the control. Possible values are <code>Standard<\/code> and <code>Plain<\/code>.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ListHeaderDesign"},"!module":"sap/m/ListBase","setGrowingTriggerText":{"!description":"Sets a new value for property <code>growingTriggerText<\/code>.\n\nDefines the text displayed on the growing button. The default is a translated text (\"More\") coming from the message bundle.\nThis property can only be used if the <code>growing<\/code> property is set to <code>true<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sGrowingTriggerText: String) -> sap.m.ListBase","parameters":{"sGrowingTriggerText":"type: string, description: New value for property <code>growingTriggerText<\/code>"}},"getNoDataText":{"!description":"Gets current value of property <code>noDataText<\/code>.\n\nThis text is displayed when the control contains no items.","!static":false,"!category":"function","!type":"fn() -> String"},"getItemNavigation":{"!description":"Returns ItemNavigation for controls uses List","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.delegate.ItemNavigation | undefined"},"getSwipeDirection":{"!description":"Gets current value of property <code>swipeDirection<\/code>.\n\nDefines the direction of the swipe movement (e.g LeftToRight, RightToLeft, Both) to display the control defined in the <code>swipeContent<\/code> aggregation.\n\nDefault value is <code>Both<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.SwipeDirection"},"setShowNoData":{"!description":"Sets a new value for property <code>showNoData<\/code>.\n\nDefines whether or not the text specified in the <code>noDataText<\/code> property is displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowNoData: Boolean) -> sap.m.ListBase","parameters":{"bShowNoData":"type: boolean, description: New value for property <code>showNoData<\/code>"}},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nSets the width of the control.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getHeaderText":{"!description":"Gets current value of property <code>headerText<\/code>.\n\nDefines the header text that appears in the control.\n<b>Note:<\/b> If <code>headerToolbar<\/code> aggregation is set, then this property is ignored.","!static":false,"!category":"function","!type":"fn() -> String"},"setSwipeContent":{"!description":"Sets the aggregated <code>swipeContent<\/code>.","!static":false,"!category":"function","!type":"fn(oSwipeContent: sap.ui.core.Control) -> sap.m.ListBase","parameters":{"oSwipeContent":"type: sap.ui.core.Control, description: The swipeContent to set"}},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.m.ListBase","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getModeAnimationOn":{"!description":"Gets current value of property <code>modeAnimationOn<\/code>.\n\nDefines if animations will be shown while switching between modes.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getShowNoData":{"!description":"Gets current value of property <code>showNoData<\/code>.\n\nDefines whether or not the text specified in the <code>noDataText<\/code> property is displayed.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"unbindItems":{"!description":"Unbinds aggregation <code>items<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.ListBase"},"setMode":{"!description":"Sets a new value for property <code>mode<\/code>.\n\nDefines the mode of the control (e.g. <code>None<\/code>, <code>SingleSelect<\/code>, <code>MultiSelect<\/code>, <code>Delete<\/code>).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sMode: sap.m.ListMode) -> sap.m.ListBase","parameters":{"sMode":"type: sap.m.ListMode, description: New value for property <code>mode<\/code>"}},"setShowSeparators":{"!description":"Sets a new value for property <code>showSeparators<\/code>.\n\nDefines which item separator style will be used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>All<\/code>.","!static":false,"!category":"function","!type":"fn(sShowSeparators: sap.m.ListSeparators) -> sap.m.ListBase","parameters":{"sShowSeparators":"type: sap.m.ListSeparators, description: New value for property <code>showSeparators<\/code>"}},"setGrowingScrollToLoad":{"!description":"Sets a new value for property <code>growingScrollToLoad<\/code>.\n\nIf set to true, the user can scroll down to load more items. Otherwise a growing button is displayed at the bottom of the control.\n<b>Note:<\/b> This property can only be used if the <code>growing<\/code> property is set to <code>true<\/code> and only if there is one instance of <code>sap.m.List<\/code> or <code>sap.m.Table<\/code> inside the scrollable scroll container (e.g <code>sap.m.Page<\/code>).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bGrowingScrollToLoad: Boolean) -> sap.m.ListBase","parameters":{"bGrowingScrollToLoad":"type: boolean, description: New value for property <code>growingScrollToLoad<\/code>"}},"setSwipeDirection":{"!description":"Sets a new value for property <code>swipeDirection<\/code>.\n\nDefines the direction of the swipe movement (e.g LeftToRight, RightToLeft, Both) to display the control defined in the <code>swipeContent<\/code> aggregation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Both<\/code>.","!static":false,"!category":"function","!type":"fn(sSwipeDirection: sap.m.SwipeDirection) -> sap.m.ListBase","parameters":{"sSwipeDirection":"type: sap.m.SwipeDirection, description: New value for property <code>swipeDirection<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nSets the width of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.ListBase","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getShowSeparators":{"!description":"Gets current value of property <code>showSeparators<\/code>.\n\nDefines which item separator style will be used.\n\nDefault value is <code>All<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ListSeparators"},"setHeaderDesign":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16 No longer has any functionality.<br>Sets a new value for property <code>headerDesign<\/code>.\n\nDefines the header style of the control. Possible values are <code>Standard<\/code> and <code>Plain<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn(sHeaderDesign: sap.m.ListHeaderDesign) -> sap.m.ListBase","parameters":{"sHeaderDesign":"type: sap.m.ListHeaderDesign, description: New value for property <code>headerDesign<\/code>"}},"setSelectedItem":{"!description":"Selects or deselects the given list item.","!static":false,"!category":"function","!type":"fn(oListItem: sap.m.ListItemBase, bSelect: Boolean) -> sap.m.ListBase","parameters":{"oListItem":"type: sap.m.ListItemBase, description: The list item whose selection to be changed. This parameter is mandatory.","bSelect":"type: boolean, description: Sets selected status of the list item. Default value is true."}},"attachSwipe":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>swipe<\/code> event of this <code>sap.m.ListBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ListBase<\/code> itself.\n\nFires after user's swipe action and before the <code>swipeContent<\/code> is shown. On the <code>swipe<\/code> event handler, <code>swipeContent<\/code> can be changed according to the swiped item.\nCalling the <code>preventDefault<\/code> method of the event cancels the swipe action.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ListBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ListBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getRememberSelections":{"!description":"Gets current value of property <code>rememberSelections<\/code>.\n\nIf set to true, this control remembers and retains the selection of the items after a binding update has been performed (e.g. sorting, filtering).\n<b>Note:<\/b> This feature works only if two-way binding for the <code>selected<\/code> property of the item is not used and needs to be turned off if the binding context of the item does not always point to the same entry in the model, for example, if the order of the data in the <code>JSONModel<\/code> is changed.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setFooterText":{"!description":"Sets a new value for property <code>footerText<\/code>.\n\nDefines the footer text that appears in the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFooterText: String) -> sap.m.ListBase","parameters":{"sFooterText":"type: string, description: New value for property <code>footerText<\/code>"}},"fireUpdateFinished":{"!description":"Fires event <code>updateFinished<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>reason<\/code> of type <code>string<\/code>The reason of the update, e.g. Binding, Filter, Sort, Growing, Change, Refresh, Context.<\/li>\n<li><code>actual<\/code> of type <code>int<\/code>Actual number of items.<\/li>\n<li><code>total<\/code> of type <code>int<\/code>The total count of bound items. This can be used if the <code>growing<\/code> property is set to <code>true<\/code>.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ListBase","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setHeaderToolbar":{"!description":"Sets the aggregated <code>headerToolbar<\/code>.","!static":false,"!category":"function","!type":"fn(oHeaderToolbar: sap.m.Toolbar) -> sap.m.ListBase","parameters":{"oHeaderToolbar":"type: sap.m.Toolbar, description: The headerToolbar to set"}},"attachSelect":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16 Use the <code>selectionChange<\/code> event instead.<br>Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.m.ListBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ListBase<\/code> itself.\n\nFires when selection is changed via user interaction. In <code>MultiSelect<\/code> mode, this event is also fired on deselection.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ListBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ListBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachUpdateFinished":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>updateFinished<\/code> event of this <code>sap.m.ListBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ListBase<\/code> itself.\n\nFires after <code>items<\/code> binding is updated and processed by the control.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ListBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ListBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ListBase"},"detachSwipe":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>swipe<\/code> event of this <code>sap.m.ListBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ListBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getSelectedContexts":{"!description":"Returns the binding contexts of the selected items.\nNote: This method returns an empty array if no databinding is used.","!static":false,"!category":"function","!type":"fn(bAll: Boolean) -> [Object]","parameters":{"bAll":"type: boolean, description: Set true to include even invisible selected items(e.g. the selections from the previous filters).\n        Note: In single selection modes, only the last selected item's binding context is returned in array."}},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nDefines the items contained within this control.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ListItemBase]"},"setGrowing":{"!description":"Sets a new value for property <code>growing<\/code>.\n\nIf set to <code>true<\/code>, enables the growing feature of the control to load more items by requesting from the model.\n<b>Note:<\/b>: This feature only works when an <code>items<\/code> aggregation is bound. Growing must not be used together with two-way binding.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bGrowing: Boolean) -> sap.m.ListBase","parameters":{"bGrowing":"type: boolean, description: New value for property <code>growing<\/code>"}},"indexOfItem":{"!description":"Checks for the provided <code>sap.m.ListItemBase<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.ListItemBase) -> Number","parameters":{"oItem":"type: sap.m.ListItemBase, description: The item whose index is looked for"}},"getMode":{"!description":"Gets current value of property <code>mode<\/code>.\n\nDefines the mode of the control (e.g. <code>None<\/code>, <code>SingleSelect<\/code>, <code>MultiSelect<\/code>, <code>Delete<\/code>).\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ListMode"},"getSelectedItem":{"!description":"Returns selected list item. When no item is selected, \"null\" is returned. When \"multi-selection\" is enabled and multiple items are selected, only the up-most selected item is returned.","!static":false,"!category":"function","!type":"fn() -> sap.m.ListItemBase"},"setEnableBusyIndicator":{"!description":"Sets a new value for property <code>enableBusyIndicator<\/code>.\n\nWhen this property is set to <code>true<\/code>, the control will automatically display a busy indicator when it detects that data is being loaded. This busy indicator blocks the interaction with the items until data loading is finished.\nBy default, the busy indicator will be shown after one second. This behavior can be customized by setting the <code>busyIndicatorDelay<\/code> property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableBusyIndicator: Boolean) -> sap.m.ListBase","parameters":{"bEnableBusyIndicator":"type: boolean, description: New value for property <code>enableBusyIndicator<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.ListBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ListItemBase]"},"fireGrowingStarted":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.3 Instead, use <code>updateStarted<\/code> event with listening <code>changeReason<\/code>.<br>Fires event <code>growingStarted<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>actual<\/code> of type <code>int<\/code>Actual number of items.<\/li>\n<li><code>total<\/code> of type <code>int<\/code>Total number of items.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ListBase","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getSwipeContent":{"!description":"Gets content of aggregation <code>swipeContent<\/code>.\n\nUser can swipe to bring in this control on the right hand side of an item.\n<b>Note:<\/b> For non-touch devices, this functionality is ignored.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getFooterText":{"!description":"Gets current value of property <code>footerText<\/code>.\n\nDefines the footer text that appears in the control.","!static":false,"!category":"function","!type":"fn() -> String"},"getSwipedItem":{"!description":"Returns swiped list item. When no item is swiped, \"null\" is returned.","!static":false,"!category":"function","!type":"fn() -> sap.m.ListItemBase"},"selectAll":{"!description":"Select all items in \"MultiSelection\" mode.","!static":false,"!category":"function","!type":"fn() -> sap.m.ListBase"},"!helpDescription":"The <code>sap.m.ListBase<\/code> control provides a base functionality of the <code>sap.m.List<\/code> and <code>sap.m.Table<\/code> controls. Selection, deletion, unread states and inset style are also maintained in <code>sap.m.ListBase<\/code>.\n\n<b>Note:<\/b> The ListBase including all contained items may be completely re-rendered when the data of a bound model is changed. Due to the limited hardware resources of mobile devices this can lead to longer delays for lists that contain many items. As such the usage of a list is not recommended for these use cases.","detachItemPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>itemPress<\/code> event of this <code>sap.m.ListBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ListBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireDelete":{"!description":"Fires event <code>delete<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>listItem<\/code> of type <code>sap.m.ListItemBase<\/code>The item which fired the delete event.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ListBase","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"fireItemPress":{"!description":"Fires event <code>itemPress<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>listItem<\/code> of type <code>sap.m.ListItemBase<\/code>The item which fired the pressed event.<\/li>\n<li><code>srcControl<\/code> of type <code>sap.ui.core.Control<\/code>The control which caused the press event within the container.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ListBase","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"detachSelect":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16 Use the <code>selectionChange<\/code> event instead.<br>Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.m.ListBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ListBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachItemPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>itemPress<\/code> event of this <code>sap.m.ListBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ListBase<\/code> itself.\n\nFires when an item is pressed unless the item's <code>type<\/code> property is <code>Inactive<\/code>.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ListBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ListBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachUpdateFinished":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>updateFinished<\/code> event of this <code>sap.m.ListBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ListBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getIncludeItemInSelection":{"!description":"Gets current value of property <code>includeItemInSelection<\/code>.\n\nDefines whether the items are selectable by clicking on the item itself (<code>true<\/code>) rather than having to set the selection control first.\n<b>Note:<\/b> The <code>SingleSelectMaster<\/code> mode also provides this functionality by default.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.m.ListItemBase) -> sap.m.ListItemBase","parameters":{"vItem":"type: int|string|sap.m.ListItemBase, description: The itemto remove or its index or id"}},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getKeyboardMode":{"!description":"Gets current value of property <code>keyboardMode<\/code>.\n\nDefines keyboard handling behavior of the control.\n\nDefault value is <code>Navigation<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ListKeyboardMode"},"fireSelectionChange":{"!description":"Fires event <code>selectionChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>listItem<\/code> of type <code>sap.m.ListItemBase<\/code>The item whose selection has changed. In <code>MultiSelect<\/code> mode, only the up-most selected item is returned. This parameter can be used for single-selection modes.<\/li>\n<li><code>listItems<\/code> of type <code>sap.m.ListItemBase[]<\/code>Array of items whose selection has changed. This parameter can be used for <code>MultiSelect<\/code> mode.<\/li>\n<li><code>selected<\/code> of type <code>boolean<\/code>Indicates whether the <code>listItem<\/code> parameter is selected or not.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ListBase","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setNoDataText":{"!description":"Sets a new value for property <code>noDataText<\/code>.\n\nThis text is displayed when the control contains no items.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNoDataText: String) -> sap.m.ListBase","parameters":{"sNoDataText":"type: string, description: New value for property <code>noDataText<\/code>"}},"!proto":"sap.ui.core.Control","attachGrowingStarted":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.3 Instead, use <code>updateStarted<\/code> event with listening <code>changeReason<\/code>.<br>Attaches event handler <code>fnFunction<\/code> to the <code>growingStarted<\/code> event of this <code>sap.m.ListBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ListBase<\/code> itself.\n\nFires before the new growing chunk is requested from the model.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ListBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ListBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!category":"class","getGrowingScrollToLoad":{"!description":"Gets current value of property <code>growingScrollToLoad<\/code>.\n\nIf set to true, the user can scroll down to load more items. Otherwise a growing button is displayed at the bottom of the control.\n<b>Note:<\/b> This property can only be used if the <code>growing<\/code> property is set to <code>true<\/code> and only if there is one instance of <code>sap.m.List<\/code> or <code>sap.m.Table<\/code> inside the scrollable scroll container (e.g <code>sap.m.Page<\/code>).\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachGrowingFinished":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.3 Instead, use \"updateFinished\" event.<br>Detaches event handler <code>fnFunction<\/code> from the <code>growingFinished<\/code> event of this <code>sap.m.ListBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ListBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.ListItemBase) -> sap.m.ListBase","parameters":{"oItem":"type: sap.m.ListItemBase, description: the item to add; if empty, nothing is inserted"}},"setModeAnimationOn":{"!description":"Sets a new value for property <code>modeAnimationOn<\/code>.\n\nDefines if animations will be shown while switching between modes.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bModeAnimationOn: Boolean) -> sap.m.ListBase","parameters":{"bModeAnimationOn":"type: boolean, description: New value for property <code>modeAnimationOn<\/code>"}},"!constructorDescription":"Constructor for a new ListBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getInset inset} : boolean (default: false)<\/li>\n<li>{@link #getHeaderText headerText} : string<\/li>\n<li>{@link #getHeaderDesign headerDesign} : sap.m.ListHeaderDesign (default: Standard)<\/li>\n<li>{@link #getFooterText footerText} : string<\/li>\n<li>{@link #getMode mode} : sap.m.ListMode (default: None)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getIncludeItemInSelection includeItemInSelection} : boolean (default: false)<\/li>\n<li>{@link #getShowUnread showUnread} : boolean (default: false)<\/li>\n<li>{@link #getNoDataText noDataText} : string<\/li>\n<li>{@link #getShowNoData showNoData} : boolean (default: true)<\/li>\n<li>{@link #getEnableBusyIndicator enableBusyIndicator} : boolean (default: true)<\/li>\n<li>{@link #getModeAnimationOn modeAnimationOn} : boolean (default: true)<\/li>\n<li>{@link #getShowSeparators showSeparators} : sap.m.ListSeparators (default: All)<\/li>\n<li>{@link #getSwipeDirection swipeDirection} : sap.m.SwipeDirection (default: Both)<\/li>\n<li>{@link #getGrowing growing} : boolean (default: false)<\/li>\n<li>{@link #getGrowingThreshold growingThreshold} : int (default: 20)<\/li>\n<li>{@link #getGrowingTriggerText growingTriggerText} : string<\/li>\n<li>{@link #getGrowingScrollToLoad growingScrollToLoad} : boolean (default: false)<\/li>\n<li>{@link #getRememberSelections rememberSelections} : boolean (default: true)<\/li>\n<li>{@link #getKeyboardMode keyboardMode} : sap.m.ListKeyboardMode (default: Navigation)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.ListItemBase[] (default)<\/li>\n<li>{@link #getSwipeContent swipeContent} : sap.ui.core.Control<\/li>\n<li>{@link #getHeaderToolbar headerToolbar} : sap.m.Toolbar<\/li>\n<li>{@link #getInfoToolbar infoToolbar} : sap.m.Toolbar<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:delete delete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:swipe swipe} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:growingStarted growingStarted} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:growingFinished growingFinished} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:updateStarted updateStarted} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:updateFinished updateFinished} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:itemPress itemPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getEnableBusyIndicator":{"!description":"Gets current value of property <code>enableBusyIndicator<\/code>.\n\nWhen this property is set to <code>true<\/code>, the control will automatically display a busy indicator when it detects that data is being loaded. This busy indicator blocks the interaction with the items until data loading is finished.\nBy default, the busy indicator will be shown after one second. This behavior can be customized by setting the <code>busyIndicatorDelay<\/code> property.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getSelectedItems":{"!description":"Returns an array containing the selected list items. If no items are selected, an empty array is returned.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ListItemBase]"},"detachSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>selectionChange<\/code> event of this <code>sap.m.ListBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ListBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"bindItems":{"!description":"Binds aggregation <code>items<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.ListBase","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"attachDelete":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>delete<\/code> event of this <code>sap.m.ListBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ListBase<\/code> itself.\n\nFires when delete icon is pressed by user.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ListBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ListBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getGrowingInfo":{"!description":"Returns growing information as object with \"actual\" and \"total\" keys.\nNote: This function returns \"null\" if \"growing\" feature is disabled.","!static":false,"!category":"function","!type":"fn() -> Object"},"getGrowingThreshold":{"!description":"Gets current value of property <code>growingThreshold<\/code>.\n\nDefines the number of items to be requested from the model for each grow.\nThis property can only be used if the <code>growing<\/code> property is set to <code>true<\/code>.\n\nDefault value is <code>20<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"fireGrowingFinished":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.3 Instead, use \"updateFinished\" event.<br>Fires event <code>growingFinished<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>actual<\/code> of type <code>int<\/code>Actual number of items.<\/li>\n<li><code>total<\/code> of type <code>int<\/code>Total number of items.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ListBase","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setInfoToolbar":{"!description":"Sets the aggregated <code>infoToolbar<\/code>.","!static":false,"!category":"function","!type":"fn(oInfoToolbar: sap.m.Toolbar) -> sap.m.ListBase","parameters":{"oInfoToolbar":"type: sap.m.Toolbar, description: The infoToolbar to set"}},"getHeaderToolbar":{"!description":"Gets content of aggregation <code>headerToolbar<\/code>.\n\nThe header area can be used as a toolbar to add extra controls for user interactions.\n<b>Note:<\/b> When set, this overwrites the <code>headerText<\/code> property.","!static":false,"!category":"function","!type":"fn() -> sap.m.Toolbar"},"getInfoToolbar":{"!description":"Gets content of aggregation <code>infoToolbar<\/code>.\n\nA toolbar that is placed below the header to show extra information to the user.","!static":false,"!category":"function","!type":"fn() -> sap.m.Toolbar"},"detachGrowingStarted":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.3 Instead, use <code>updateStarted<\/code> event with listening <code>changeReason<\/code>.<br>Detaches event handler <code>fnFunction<\/code> from the <code>growingStarted<\/code> event of this <code>sap.m.ListBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ListBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireSwipe":{"!description":"Fires event <code>swipe<\/code> to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.\n\nExpects the following event parameters:\n<ul>\n<li><code>listItem<\/code> of type <code>sap.m.ListItemBase<\/code>The item which fired the swipe.<\/li>\n<li><code>swipeContent<\/code> of type <code>sap.ui.core.Control<\/code>Aggregated <code>swipeContent<\/code> control that is shown on the right hand side of the item.<\/li>\n<li><code>srcControl<\/code> of type <code>sap.ui.core.Control<\/code>Holds which control caused the swipe event within the item.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> Boolean","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setGrowingThreshold":{"!description":"Sets a new value for property <code>growingThreshold<\/code>.\n\nDefines the number of items to be requested from the model for each grow.\nThis property can only be used if the <code>growing<\/code> property is set to <code>true<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>20<\/code>.","!static":false,"!category":"function","!type":"fn(iGrowingThreshold: Number) -> sap.m.ListBase","parameters":{"iGrowingThreshold":"type: int, description: New value for property <code>growingThreshold<\/code>"}},"getGrowing":{"!description":"Gets current value of property <code>growing<\/code>.\n\nIf set to <code>true<\/code>, enables the growing feature of the control to load more items by requesting from the model.\n<b>Note:<\/b>: This feature only works when an <code>items<\/code> aggregation is bound. Growing must not be used together with two-way binding.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroySwipeContent":{"!description":"Destroys the swipeContent in the aggregation <code>swipeContent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ListBase"},"setSelectedItemById":{"!description":"Sets a list item to be selected by id. In single mode the method removes the previous selection.","!static":false,"!category":"function","!type":"fn(sId: String, bSelect: Boolean) -> sap.m.ListBase","parameters":{"bSelect":"type: boolean, description: Sets selected status of the list item. Default value is true.","sId":"type: string, description: The id of the list item whose selection to be changed."}},"fireUpdateStarted":{"!description":"Fires event <code>updateStarted<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>reason<\/code> of type <code>string<\/code>The reason of the update, e.g. Binding, Filter, Sort, Growing, Change, Refresh, Context.<\/li>\n<li><code>actual<\/code> of type <code>int<\/code>Actual number of items.<\/li>\n<li><code>total<\/code> of type <code>int<\/code>The total count of bound items. This can be used if the <code>growing<\/code> property is set to <code>true<\/code>.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ListBase","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"destroyHeaderToolbar":{"!description":"Destroys the headerToolbar in the aggregation <code>headerToolbar<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ListBase"},"setInset":{"!description":"Sets a new value for property <code>inset<\/code>.\n\nDefines the indentation of the container. Setting it to <code>true<\/code> indents the list.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bInset: Boolean) -> sap.m.ListBase","parameters":{"bInset":"type: boolean, description: New value for property <code>inset<\/code>"}},"destroyInfoToolbar":{"!description":"Destroys the infoToolbar in the aggregation <code>infoToolbar<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ListBase"},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.ListItemBase, iIndex: Number) -> sap.m.ListBase","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position","oItem":"type: sap.m.ListItemBase, description: the item to insert; if empty, nothing is inserted"}},"getInset":{"!description":"Gets current value of property <code>inset<\/code>.\n\nDefines the indentation of the container. Setting it to <code>true<\/code> indents the list.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.m.semantic.GroupSelect_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.GroupSelect with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticSelect.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.GroupSelect"},"sap.m.FormattedText_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.FormattedText with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.FormattedText"},"sap.m.semantic.FlagAction":{"!description":"A FlagAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","extend":{"!description":"Creates a new subclass of class sap.m.semantic.FlagAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticToggleButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.FlagAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new FlagAction.","!module":"sap/m/semantic/FlagAction","!helpDescription":"A FlagAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","!proto":"sap.m.semantic.SemanticToggleButton","!category":"class"},"sap.m.NewsContent":{"!description":"This control displays the news content text and subheader in a tile.","getMetadata":{"!description":"Returns a metadata object for class sap.m.NewsContent.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.core.Control","!category":"class","setSubheader":{"!description":"Sets a new value for property <code>subheader<\/code>.\n\nThe subheader.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSubheader: String) -> sap.m.NewsContent","parameters":{"sSubheader":"type: string, description: New value for property <code>subheader<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.NewsContent with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.m.NewsContent<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.NewsContent","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.NewsContent","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getSize":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38.0 The NewsContent control has now a fixed size, depending on the used media (desktop, tablet or phone).<br>Gets current value of property <code>size<\/code>.\n\nUpdates the size of the chart. If not set then the default size is applied based on the device tile.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Size"},"!constructorDescription":"Constructor for a new sap.m.NewsContent control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getContentText contentText} : string<\/li>\n<li>{@link #getSubheader subheader} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setSize":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38.0 The NewsContent control has now a fixed size, depending on the used media (desktop, tablet or phone).<br>Sets a new value for property <code>size<\/code>.\n\nUpdates the size of the chart. If not set then the default size is applied based on the device tile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sSize: sap.m.Size) -> sap.m.NewsContent","parameters":{"sSize":"type: sap.m.Size, description: New value for property <code>size<\/code>"}},"!module":"sap/m/NewsContent","getContentText":{"!description":"Gets current value of property <code>contentText<\/code>.\n\nThe content text.","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"This control displays the news content text and subheader in a tile.","getSubheader":{"!description":"Gets current value of property <code>subheader<\/code>.\n\nThe subheader.","!static":false,"!category":"function","!type":"fn() -> String"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.m.NewsContent<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.NewsContent<\/code> itself.\n\nThe event is fired when the user chooses the news content.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.NewsContent","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.NewsContent<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.m.ObjectAttribute":{"!description":"The ObjectAttribute control displays a text field that can be normal or active. The ObjectAttribute fires a press event when the user selects active text.","getMetadata":{"!description":"Returns a metadata object for class sap.m.ObjectAttribute.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nDefines the ObjectAttribute text.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Control","setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nDetermines the direction of the text, not including the title.\nAvailable options for the text direction are LTR (left-to-right) and RTL (right-to-left). By default the control inherits the text direction from its parent control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.m.ObjectAttribute","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"getCustomContent":{"!description":"Gets content of aggregation <code>customContent<\/code>.\n\nWhen the aggregation is set, it replaces the text, active and textDirection properties. This also ignores the press event. The provided control is displayed as an active link.\n<b>Note:<\/b> It will only allow sap.m.Text and sap.m.Link controls.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nDefines the ObjectAttribute title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.ObjectAttribute","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.m.ObjectAttribute with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.m.ObjectAttribute<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ObjectAttribute","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>domRef<\/code> of type <code>string<\/code>DOM reference of the ObjectAttribute's text to be used for positioning.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ObjectAttribute","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!constructorDescription":"Constructor for a new ObjectAttribute.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getActive active} : boolean<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCustomContent customContent} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nDefines the ObjectAttribute title.","!static":false,"!category":"function","!type":"fn() -> String"},"setActive":{"!description":"Sets a new value for property <code>active<\/code>.\n\nIndicates if the ObjectAttribute text is selectable for the user.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bActive: Boolean) -> sap.m.ObjectAttribute","parameters":{"bActive":"type: boolean, description: New value for property <code>active<\/code>"}},"!module":"sap/m/ObjectAttribute","getPopupAnchorDomRef":{"!description":"Defines to which DOM reference the Popup should be docked.","!static":false,"!category":"function","!type":"fn() -> DomNode"},"!helpDescription":"The ObjectAttribute control displays a text field that can be normal or active. The ObjectAttribute fires a press event when the user selects active text.","destroyCustomContent":{"!description":"Destroys the customContent in the aggregation <code>customContent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ObjectAttribute"},"setCustomContent":{"!description":"Sets the aggregated <code>customContent<\/code>.","!static":false,"!category":"function","!type":"fn(oCustomContent: sap.ui.core.Control) -> sap.m.ObjectAttribute","parameters":{"oCustomContent":"type: sap.ui.core.Control, description: The customContent to set"}},"getActive":{"!description":"Gets current value of property <code>active<\/code>.\n\nIndicates if the ObjectAttribute text is selectable for the user.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.m.ObjectAttribute<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ObjectAttribute<\/code> itself.\n\nFires when the user clicks on active text.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ObjectAttribute","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ObjectAttribute<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nDetermines the direction of the text, not including the title.\nAvailable options for the text direction are LTR (left-to-right) and RTL (right-to-left). By default the control inherits the text direction from its parent control.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nDefines the ObjectAttribute text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.m.ObjectAttribute","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.m.semantic.DiscussInJamAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.DiscussInJamAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.DiscussInJamAction"},"sap.m.TablePersoController":{"setPersoService":{"!description":"Sets the aggregated <code>persoService<\/code>.","!static":false,"!category":"function","!type":"fn(oPersoService: Object) -> sap.m.TablePersoController","parameters":{"oPersoService":"type: Object, description: The persoService to set"}},"getPersoService":{"!description":"Gets content of aggregation <code>persoService<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"removeAllTables":{"!description":"Removes all the controls in the association named <code>tables<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Table]"},"setHasGrouping":{"!description":"Reflector for the controller's 'hasGrouping' property.","!static":false,"!category":"function","!type":"fn(bHasGrouping: Boolean) -> TablePersoController","parameters":{"bHasGrouping":"type: boolean, description: is the tablePersoDialog displayed in grouping mode or not."}},"getContentHeight":{"!description":"Gets current value of property <code>contentHeight<\/code>.\n\nDefault value is <code>20rem<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!proto":"sap.ui.base.ManagedObject","applyPersonalizations":{"!description":"Applies the personalizations by getting the existing personalizations\nand adjusting to the table.","!static":false,"!category":"function","!type":"fn(oTable: sap.m.Table)","parameters":{"oTable":"type: sap.m.Table, description: the table to be personalized."}},"firePersonalizationsDone":{"!description":"Fires event <code>personalizationsDone<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.TablePersoController","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!category":"class","getShowSelectAll":{"!description":"Gets current value of property <code>showSelectAll<\/code>.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setComponentName":{"!description":"Using this method, the first part of tablePerso persistence ids can be\nprovided, in case the table's app does not provide that part itself.\n\nIf a component name is set using this method, it will be used, regardless of\nwhether the table's app has a different component name or not.","!static":false,"!category":"function","!type":"fn(sCompName: String) -> TablePersoController","parameters":{"sCompName":"type: string, description: the new component name."}},"attachPersonalizationsDone":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>personalizationsDone<\/code> event of this <code>sap.m.TablePersoController<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.TablePersoController<\/code> itself.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.TablePersoController","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.TablePersoController<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getContentWidth":{"!description":"Gets current value of property <code>contentWidth<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"The TablePersoController can be used to connect a table that you want to provide\na personalization dialog for, with a persistence service such as one provided by\nthe unified shell.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContentWidth contentWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getContentHeight contentHeight} : sap.ui.core.CSSSize (default: 20rem)<\/li>\n<li>{@link #getComponentName componentName} : string<\/li>\n<li>{@link #getHasGrouping hasGrouping} : boolean (default: false)<\/li>\n<li>{@link #getShowSelectAll showSelectAll} : boolean (default: true)<\/li>\n<li>{@link #getShowResetAll showResetAll} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPersoService persoService} : Object<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:personalizationsDone personalizationsDone} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","getTablePersoDialog":{"!description":"Returns a  _tablePersoDialog instance if available. It can be NULL if\nthe controller has not been activated yet.\n\nThis function makes a private aggregate publicly accessable. This is\nnecessary for downward compatibility reasons: in the first versions\nof the tablePersoProvider developers still worked with the TablePersoDialog\ndirectly, which is now not necessary any longer.","!static":false,"!category":"function","!type":"fn() -> TablePersoDialog"},"getTables":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>tables<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Table]"},"setContentWidth":{"!description":"Reflector for the controller's 'contentWidth' property.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> TablePersoController","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: the new width of the tablePersoDialog"}},"detachPersonalizationsDone":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>personalizationsDone<\/code> event of this <code>sap.m.TablePersoController<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.TablePersoController","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"savePersonalizations":{"!description":"Persist the personalizations","!static":false,"!category":"function","!type":"fn()"},"setContentHeight":{"!description":"Reflector for the controller's 'contentHeight' property.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> TablePersoController","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: the new height of the TablePersoDialog."}},"addTable":{"!description":"Adds some table into the association <code>tables<\/code>.","!static":false,"!category":"function","!type":"fn(vTable: String | sap.m.Table) -> sap.m.TablePersoController","parameters":{"vTable":"type: string|sap.m.Table, description: the tables to add; if empty, nothing is inserted"}},"getHasGrouping":{"!description":"Gets current value of property <code>hasGrouping<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"Table Personalization Controller","setShowResetAll":{"!description":"Reflector for the controller's 'showResetAll' property.","!static":false,"!category":"function","!type":"fn(bShowResetAll: Boolean) -> TablePersoController","parameters":{"bShowResetAll":"type: boolean, description: is the tablePersoDialog's 'UndoPersonalization' button displayed or not."}},"getComponentName":{"!description":"Gets current value of property <code>componentName<\/code>.\n\nAvailable options for the text direction are LTR and RTL. By default the control inherits the text direction from its parent control.","!static":false,"!category":"function","!type":"fn() -> String"},"init":{"!description":"Initializes the TablePersoController instance after creation.","!static":false,"!category":"function","!type":"fn()"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.TablePersoController.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"refresh":{"!description":"Refresh the personalizations: reloads the personalization information from the table perso\nprovider, applies it to the controller's table and updates the controller's table perso dialog.\n\nUse case for a 'refresh' call would be that the table which si personalized changed its columns\nduring runtime, after personalization has been activated.","!static":false,"!category":"function","!type":"fn()"},"getShowResetAll":{"!description":"Gets current value of property <code>showResetAll<\/code>.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.m.TablePersoController with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"exit":{"!description":"Do some clean up: remove event delegates, etc","!static":false,"!category":"function","!type":"fn()"},"setShowSelectAll":{"!description":"Reflector for the controller's 'showSelectAll' property.","!static":false,"!category":"function","!type":"fn(bShowSelectAll: Boolean) -> TablePersoController","parameters":{"bShowSelectAll":"type: boolean, description: is the tablePersoDialog's 'Display All' checkbox displayed or not."}},"!module":"sap/m/TablePersoController","!helpDescription":"Table Personalization Controller","getTable":{"!description":"ID of the element which is the current target of the association <code>table<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Table"},"destroyPersoService":{"!description":"Destroys the persoService in the aggregation <code>persoService<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.TablePersoController"},"removeTable":{"!description":"Removes an table from the association named <code>tables<\/code>.","!static":false,"!category":"function","!type":"fn(vTable: Number | String | sap.m.Table) -> sap.m.Table","parameters":{"vTable":"type: int|string|sap.m.Table, description: The tableto be removed or its index or ID"}},"setTable":{"!description":"Sets the associated <code>table<\/code>.","!static":false,"!category":"function","!type":"fn(oTable: sap.m.Table) -> sap.m.TablePersoController","parameters":{"oTable":"type: sap.m.Table, description: Id of an element which becomes the new target of this table association; alternatively, an element instance may be given"}},"activate":{"!description":"Activates the controller, i.e. tries to retrieve existing persisted\npersonalizations, creates a TablePersoDialog for the associated\ntable and attaches a close handler to apply the personalizations to\nthe table and persist them.\n\nThis method should be called when the table to be personalized knows\nits columns. Usually, this is when that table's view has set its model,\nwhich is typically done in the corresponding controller's init method.\nFor example\n<pre><code>\n onInit: function () {\n\n\t\t// set explored app's demo model on this sample\n\t\tvar oModel = new JSONModel(jQuery.sap.getModulePath(\"sap.ui.demo.mock\", \"/products.json\"));\n\t\tvar oGroupingModel = new JSONModel({ hasGrouping: false});\n\t\tthis.getView().setModel(oModel);\n\t\tthis.getView().setModel(oGroupingModel, 'Grouping');\n\n\t\t// init and activate controller\n\t\tthis._oTPC = new TablePersoController({\n\t\t\ttable: this.getView().byId(\"productsTable\"),\n\t\t\t//specify the first part of persistence ids e.g. 'demoApp-productsTable-dimensionsCol'\n\t\t\tcomponentName: \"demoApp\",\n\t\t\tpersoService: DemoPersoService,\n\t\t}).activate();\n\t}\n<\/code><\/pre>","!static":false,"!category":"function","!type":"fn() -> TablePersoController"},"openDialog":{"!description":"Opens the TablePersoDialog, stores the personalized settings on close,\nmodifies the table columns, and sends them to the persistence service","!static":false,"!category":"function","!type":"fn()"}},"sap.m.List":{"!description":"The List control provides a container for all types of list items.\nFor mobile devices, the recommended limit of list items is 100 to assure proper performance. To improve initial rendering of large lists, use the \"growing\" feature. Please refer to the SAPUI5 Developer Guide for more information..","addColumn":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16 Instead, use the <code>sap.m.Table<\/code> control.<br>Adds some column to the aggregation <code>columns<\/code>.","!static":false,"!category":"function","!type":"fn(oColumn: sap.m.Column) -> sap.m.List","parameters":{"oColumn":"type: sap.m.Column, description: the column to add; if empty, nothing is inserted"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.List.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"destroyColumns":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16 Instead, use the <code>sap.m.Table<\/code> control.<br>Destroys all the columns in the aggregation <code>columns<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.List"},"!proto":"sap.m.ListBase","getBackgroundDesign":{"!description":"Gets current value of property <code>backgroundDesign<\/code>.\n\nSets the background style of the list. Depending on the theme, you can change the state of the background from <code>Solid<\/code> to <code>Translucent<\/code> or to <code>Transparent<\/code>.\n\nDefault value is <code>Solid<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.BackgroundDesign"},"setBackgroundDesign":{"!description":"Sets a new value for property <code>backgroundDesign<\/code>.\n\nSets the background style of the list. Depending on the theme, you can change the state of the background from <code>Solid<\/code> to <code>Translucent<\/code> or to <code>Transparent<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Solid<\/code>.","!static":false,"!category":"function","!type":"fn(sBackgroundDesign: sap.m.BackgroundDesign) -> sap.m.List","parameters":{"sBackgroundDesign":"type: sap.m.BackgroundDesign, description: New value for property <code>backgroundDesign<\/code>"}},"!category":"class","indexOfColumn":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16 Instead, use the <code>sap.m.Table<\/code> control.<br>Checks for the provided <code>sap.m.Column<\/code> in the aggregation <code>columns<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oColumn: sap.m.Column) -> Number","parameters":{"oColumn":"type: sap.m.Column, description: The column whose index is looked for"}},"getColumns":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16 Instead, use the <code>sap.m.Table<\/code> control.<br>Gets content of aggregation <code>columns<\/code>.\n\nDefines columns of the list.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Column]"},"extend":{"!description":"Creates a new subclass of class sap.m.List with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"removeColumn":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16 Instead, use the <code>sap.m.Table<\/code> control.<br>Removes a column from the aggregation <code>columns<\/code>.","!static":false,"!category":"function","!type":"fn(vColumn: Number | String | sap.m.Column) -> sap.m.Column","parameters":{"vColumn":"type: int|string|sap.m.Column, description: The columnto remove or its index or id"}},"!constructorDescription":"Constructor for a new List.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign (default: Solid)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getColumns columns} : sap.m.Column[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListBase#constructor sap.m.ListBase}\ncan be used as well.","!module":"sap/m/List","insertColumn":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16 Instead, use the <code>sap.m.Table<\/code> control.<br>Inserts a column into the aggregation <code>columns<\/code>.","!static":false,"!category":"function","!type":"fn(oColumn: sap.m.Column, iIndex: Number) -> sap.m.List","parameters":{"oColumn":"type: sap.m.Column, description: the column to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the column should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the column is inserted at position 0; for a value\n             greater than the current size of the aggregation, the column is inserted at\n             the last position"}},"!helpDescription":"The List control provides a container for all types of list items.\nFor mobile devices, the recommended limit of list items is 100 to assure proper performance. To improve initial rendering of large lists, use the \"growing\" feature. Please refer to the SAPUI5 Developer Guide for more information..","removeAllColumns":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16 Instead, use the <code>sap.m.Table<\/code> control.<br>Removes all the controls from the aggregation <code>columns<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Column]"}},"sap.m.DialogType":{"!description":"Enum for the type of sap.m.Dialog control.","!module":"sap/m/library","Message":{"!description":"Dialog with type Message looks the same as the Stardard Dialog in Android. And it puts the left, right buttons to the bottom of the Dialog in iOS.","!category":"enum","!type":"String"},"!category":"static class","Standard":{"!description":"This is the default value for Dialog type. Stardard dialog in iOS has a header on the top and the left, right buttons are put inside the header. In android, the left, right buttons are put to the bottom of the Dialog.","!category":"enum","!type":"String"}},"sap.m.PlacementType":{"!description":"Types for the placement of popover control.","Vertical":{"!description":"Popover will be placed at the top or bottom of the reference control.","!category":"enum","!type":"String"},"VerticalPreferedBottom":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.36 Instead, use <code>sap.m.PlacementType.VerticalPreferredBottom<\/code> type.<br>Deprecated - use <code>sap.m.PlacementType.VerticalPreferredBottom<\/code> type.","!category":"enum","!type":"String"},"HorizontalPreferredRight":{"!description":"Popover will be placed at the right or left side of the reference control but will try to position on the\nright side if the space is greater than the Popover's width.","!category":"enum","!type":"String"},"HorizontalPreferedRight":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.36 Instead, use <code>sap.m.PlacementType.HorizontalPreferredRight<\/code> type.<br>Deprecated - use <code>sap.m.PlacementType.HorizontalPreferredRight<\/code> type.","!category":"enum","!type":"String"},"Horizontal":{"!description":"Popover will be placed at the right or left side of the reference control.","!category":"enum","!type":"String"},"Left":{"!description":"Popover will be placed at the left side of the reference control.","!category":"enum","!type":"String"},"HorizontalPreferredLeft":{"!description":"Popover will be placed at the right or left side of the reference control but will try to position on the\nleft side if the space is greater than the Popover's width.","!category":"enum","!type":"String"},"PreferredBottomOrFlip":{"!description":"Popover will be placed to the bottom of the reference control. If the available space is less than the Popover's height,\nit will appear to the top of the same reference control bottom border.","!category":"enum","!type":"String"},"Right":{"!description":"Popover will be placed at the right side of the reference control.","!category":"enum","!type":"String"},"!category":"static class","VerticalPreferredTop":{"!description":"Popover will be placed at the top or bottom of the reference control but will try to position on the\ntop side if the space is greater than the Popover's height.","!category":"enum","!type":"String"},"Auto":{"!description":"Popover will be placed automatically at the reference control.","!category":"enum","!type":"String"},"VerticalPreferedTop":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.36 Instead, use <code>sap.m.PlacementType.VerticalPreferredTop<\/code> type.<br>Deprecated - use <code>sap.m.PlacementType.VerticalPreferredTop<\/code> type.","!category":"enum","!type":"String"},"PreferredRightOrFlip":{"!description":"Popover will be placed to the right of the reference control. If the available space is less than the Popover's width,\nit will appear to the left of the same reference control right border.","!category":"enum","!type":"String"},"!module":"sap/m/library","HorizontalPreferedLeft":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.36 Instead, use <code>sap.m.PlacementType.HorizontalPreferredLeft<\/code> type.<br>Deprecated - use <code>sap.m.PlacementType.HorizontalPreferredLeft<\/code> type.","!category":"enum","!type":"String"},"Top":{"!description":"Popover will be placed at the top of the reference control.","!category":"enum","!type":"String"},"VerticalPreferredBottom":{"!description":"Popover will be placed at the top or bottom of the reference control but will try to position on the\nbottom side if the space is greater than the Popover's height.","!category":"enum","!type":"String"},"PreferredLeftOrFlip":{"!description":"Popover will be placed to the left of the reference control. If the available space is less than the Popover's width,\nit will appear to the right of the same reference control left border.","!category":"enum","!type":"String"},"Bottom":{"!description":"Popover will be placed at the bottom of the reference control.","!category":"enum","!type":"String"},"PreferredTopOrFlip":{"!description":"Popover will be placed to the top of the reference control. If the available space is less than the Popover's height,\nit will appear to the bottom of the same reference control top border.","!category":"enum","!type":"String"}},"sap.m.ObjectHeader_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ObjectHeader with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ObjectHeader"},"sap.m.FacetFilterList":{"setSequence":{"!description":"Sets a new value for property <code>sequence<\/code>.\n\nSequence that determines the order in which FacetFilterList is shown on the FacetFilter. Lists are rendered by ascending order of sequence.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn(iSequence: Number) -> sap.m.FacetFilterList","parameters":{"iSequence":"type: int, description: New value for property <code>sequence<\/code>"}},"setAllCount":{"!description":"Sets a new value for property <code>allCount<\/code>.\n\nDetermines the number of objects that match this item in the target data set when all filter items are selected.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iAllCount: Number) -> sap.m.FacetFilterList","parameters":{"iAllCount":"type: int, description: New value for property <code>allCount<\/code>"}},"detachListOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>listOpen<\/code> event of this <code>sap.m.FacetFilterList<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.FacetFilterList","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getDataType":{"!description":"Gets current value of property <code>dataType<\/code>.\n\nFacetFilterList data type. Only String data type will provide search function.\n\nDefault value is <code>String<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.FacetFilterListDataType"},"!proto":"sap.m.List","fireListOpen":{"!description":"Fires event <code>listOpen<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.FacetFilterList","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"removeSelectedKeys":{"!description":"Removes all selected keys from the selected keys cache and deselects all items.","!static":false,"!category":"function","!type":"fn()"},"setShowRemoveFacetIcon":{"!description":"Sets a new value for property <code>showRemoveFacetIcon<\/code>.\n\nSpecifies whether remove icon for facet is visible or hidden.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowRemoveFacetIcon: Boolean) -> sap.m.FacetFilterList","parameters":{"bShowRemoveFacetIcon":"type: boolean, description: New value for property <code>showRemoveFacetIcon<\/code>"}},"!category":"class","!constructorDescription":"Constructor for a new FacetFilterList.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getWordWrap wordWrap} : boolean (default: false)<\/li>\n<li>{@link #getMultiSelect multiSelect} : boolean (default: true)<\/li>\n<li>{@link #getActive active} : boolean (default: true)<\/li>\n<li>{@link #getEnableCaseInsensitiveSearch enableCaseInsensitiveSearch} : boolean (default: false)<\/li>\n<li>{@link #getAllCount allCount} : int<\/li>\n<li>{@link #getSequence sequence} : int (default: -1)<\/li>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getShowRemoveFacetIcon showRemoveFacetIcon} : boolean (default: true)<\/li>\n<li>{@link #getRetainListSequence retainListSequence} : boolean (default: false)<\/li>\n<li>{@link #getDataType dataType} : sap.m.FacetFilterListDataType (default: String)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:listOpen listOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:listClose listClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.List#constructor sap.m.List}\ncan be used as well.","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nDefines the title of the facet. The facet title is displayed on the facet button when the FacetFilter type is set to <code>Simple<\/code>. It is also displayed as a list item in the facet page of the dialog.","!static":false,"!category":"function","!type":"fn() -> String"},"setSelectedKeys":{"!description":"Used to pre-select FacetFilterItems, such as when restoring FacetFilterList selections from a variant.\nKeys are cached separately from the actual FacetFilterItems so that they remain even when the physical items are removed by filtering or sorting.\nIf aKeys is <code>undefined<\/code>, <code>null<\/code>, or {} (empty object) then all keys are deleted.\nAfter this method completes, only those items with matching keys will be selected. All other items in the list will be deselected.","!static":false,"!category":"function","!type":"fn(oAKeys: Object)","parameters":{"oAKeys":"type: object, description: Associative array indicating which FacetFilterItems should be selected in the list. Each property must be set to the value of a FacetFilterItem.key property. Each property value should be set to the FacetFilterItem.text property value. The text value is used to display the FacetFilterItem text when the FacetFilterList button or FacetFilter summary bar is displayed. If no property value is set then the property key is used for the text."}},"getAllCount":{"!description":"Gets current value of property <code>allCount<\/code>.\n\nDetermines the number of objects that match this item in the target data set when all filter items are selected.","!static":false,"!category":"function","!type":"fn() -> Number"},"getShowRemoveFacetIcon":{"!description":"Gets current value of property <code>showRemoveFacetIcon<\/code>.\n\nSpecifies whether remove icon for facet is visible or hidden.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMultiSelect":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20.0 This property is no longer supported. Use the setMode method instead. FacetFilterList overrides the setMode method to restrict the possible modes to MultiSelect and SingleSelectMaster. All other modes are ignored and will not be set.<br>Gets current value of property <code>multiSelect<\/code>.\n\nSpecifies whether multiple or single selection is used.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setKey":{"!description":"Sets a new value for property <code>key<\/code>.\n\nUnique identifier for this filter list.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sKey: String) -> sap.m.FacetFilterList","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"}},"!description":"FacetFilterList represents a list of values for the FacetFilter control.","getKey":{"!description":"Gets current value of property <code>key<\/code>.\n\nUnique identifier for this filter list.","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.FacetFilterList.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getWordWrap":{"!description":"Gets current value of property <code>wordWrap<\/code>.\n\nIf set to <code>true<\/code>, the item text wraps when it is too long.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setMode":{"!description":"Overrides to allow only MultiSelect and SingleSelectMaster list modes.\nIf an invalid mode is given then the mode will not be changed.","!static":false,"!category":"function","!type":"fn(mode: sap.m.ListMode)","parameters":{"mode":"type: sap.m.ListMode, description: The list mode"}},"extend":{"!description":"Creates a new subclass of class sap.m.FacetFilterList with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.List.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"removeSelectedKey":{"!description":"Removes the specified key from the selected keys cache and deselects the item.","!static":false,"!category":"function","!type":"fn(sKey: String, sText: String)","parameters":{"sKey":"type: string, description: The key of the selected item to be removed from the cache. If <code>null<\/code> then the text parameter will be used as the key.","sText":"type: string, description: The text of the selected item to be removed from the cache. If the key parameter is <code>null<\/code> then text will be used as the key."}},"attachListClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>listClose<\/code> event of this <code>sap.m.FacetFilterList<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.FacetFilterList<\/code> itself.\n\nTriggered after the list of items is closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.FacetFilterList","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.FacetFilterList<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setActive":{"!description":"Sets a new value for property <code>active<\/code>.\n\nIndicates that the list is displayed as a button when the FacetFilter type is set to <code>Simple<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bActive: Boolean) -> sap.m.FacetFilterList","parameters":{"bActive":"type: boolean, description: New value for property <code>active<\/code>"}},"setDataType":{"!description":"Sets a new value for property <code>dataType<\/code>.\n\nFacetFilterList data type. Only String data type will provide search function.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>String<\/code>.","!static":false,"!category":"function","!type":"fn(sDataType: sap.m.FacetFilterListDataType) -> sap.m.FacetFilterList","parameters":{"sDataType":"type: sap.m.FacetFilterListDataType, description: New value for property <code>dataType<\/code>"}},"setWordWrap":{"!description":"Sets a new value for property <code>wordWrap<\/code>.\n\nIf set to <code>true<\/code>, the item text wraps when it is too long.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bWordWrap: Boolean) -> sap.m.FacetFilterList","parameters":{"bWordWrap":"type: boolean, description: New value for property <code>wordWrap<\/code>"}},"!module":"sap/m/FacetFilterList","fireListClose":{"!description":"Fires event <code>listClose<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selectedItems<\/code> of type <code>sap.m.FacetFilterItem[]<\/code>Array of selected items. Items returned are only copies and therefore can only be used to read properties, not set them.<\/li>\n<li><code>allSelected<\/code> of type <code>boolean<\/code><code>True<\/code> if the select All checkbox is selected. This will be <code>false<\/code> if all items are actually selected (every FacetFilterItem.selected == true). In that case selectedItems will contain all selected items.<\/li>\n<li><code>selectedKeys<\/code> of type <code>object<\/code>Associative array containing the keys of selected FacetFilterItems. Unlike the selectedItems parameter, this contains only the keys for all selected items, not the items themselves. Being an associative array, each object property is the FacetFilterItem key value and the value of the property is the FacetFilterItem text.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.FacetFilterList","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!helpDescription":"FacetFilterList represents a list of values for the FacetFilter control.","getEnableCaseInsensitiveSearch":{"!description":"Gets current value of property <code>enableCaseInsensitiveSearch<\/code>.\n\nIf set to <code>true<\/code>, enables case-insensitive search for OData.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getRetainListSequence":{"!description":"Gets current value of property <code>retainListSequence<\/code>.\n\nRetains the list sequence if it is inactive and made active again.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getActive":{"!description":"Gets current value of property <code>active<\/code>.\n\nIndicates that the list is displayed as a button when the FacetFilter type is set to <code>Simple<\/code>.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setEnableCaseInsensitiveSearch":{"!description":"Sets a new value for property <code>enableCaseInsensitiveSearch<\/code>.\n\nIf set to <code>true<\/code>, enables case-insensitive search for OData.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableCaseInsensitiveSearch: Boolean) -> sap.m.FacetFilterList","parameters":{"bEnableCaseInsensitiveSearch":"type: boolean, description: New value for property <code>enableCaseInsensitiveSearch<\/code>"}},"attachListOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>listOpen<\/code> event of this <code>sap.m.FacetFilterList<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.FacetFilterList<\/code> itself.\n\nFired before the filter list is opened.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.FacetFilterList","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.FacetFilterList<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getSequence":{"!description":"Gets current value of property <code>sequence<\/code>.\n\nSequence that determines the order in which FacetFilterList is shown on the FacetFilter. Lists are rendered by ascending order of sequence.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"detachListClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>listClose<\/code> event of this <code>sap.m.FacetFilterList<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.FacetFilterList","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getSelectedKeys":{"!description":"Returns the keys of the selected elements as an associative array.\nAn empty object is returned if no items are selected.","!static":false,"!category":"function","!type":"fn() -> Object"},"setRetainListSequence":{"!description":"Sets a new value for property <code>retainListSequence<\/code>.\n\nRetains the list sequence if it is inactive and made active again.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRetainListSequence: Boolean) -> sap.m.FacetFilterList","parameters":{"bRetainListSequence":"type: boolean, description: New value for property <code>retainListSequence<\/code>"}}},"sap.m.P13nPanel_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.P13nPanel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.P13nPanel"},"sap.m.DeviationIndicator":{"!description":"Enum of the available deviation markers for the NumericContent control.","Down":{"!description":"The actual value is less than the target value.","!category":"enum","!type":"String"},"!module":"sap/m/library","!category":"static class","Up":{"!description":"The actual value is more than the target value.","!category":"enum","!type":"String"},"None":{"!description":"No value.","!category":"enum","!type":"String"}},"sap.m.SearchField_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.SearchField with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.SearchField"},"sap.m.touch":{"!description":"Touch helper.","countContained":{"!description":"Given a list of touches, count the number of touches related with the given element.","!static":"true","!category":"function","!type":"fn(oTouchList: TouchList, vElement: jQuery | Element | String) -> Number"},"!module":"sap/m/library","!helpDescription":"Touch helper.","find":{"!description":"Given a list of touch objects, find the touch that matches the given one.","!static":"true","!category":"function","!type":"fn(oTouchList: TouchList, oTouch: Touch | Number) -> Object | undefined"},"!category":"namespace"},"sap.m.ImageContent":{"!description":"This control can be displayed as image content in a tile.","setSrc":{"!description":"Sets a new value for property <code>src<\/code>.\n\nThe image to be displayed as a graphical element within the imageContent. This can be an image or an icon from the icon font.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSrc: sap.ui.core.URI) -> sap.m.ImageContent","parameters":{"sSrc":"type: sap.ui.core.URI, description: New value for property <code>src<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.ImageContent.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getSrc":{"!description":"Gets current value of property <code>src<\/code>.\n\nThe image to be displayed as a graphical element within the imageContent. This can be an image or an icon from the icon font.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"!proto":"sap.ui.core.Control","!category":"class","setDescription":{"!description":"Sets a new value for property <code>description<\/code>.\n\nDescription of image. This text is used to provide ScreenReader information.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDescription: String) -> sap.m.ImageContent","parameters":{"sDescription":"type: string, description: New value for property <code>description<\/code>"}},"getDescription":{"!description":"Gets current value of property <code>description<\/code>.\n\nDescription of image. This text is used to provide ScreenReader information.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.m.ImageContent with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.m.ImageContent<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ImageContent","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ImageContent","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!constructorDescription":"Constructor for a new sap.m.ImageContent control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSrc src} : sap.ui.core.URI<\/li>\n<li>{@link #getDescription description} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/m/ImageContent","!helpDescription":"This control can be displayed as image content in a tile.","attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.m.ImageContent<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ImageContent<\/code> itself.\n\nThe event is fired when the user chooses the image content.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ImageContent","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ImageContent<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.m.IBarInPageEnabler":{"!description":"Helper Class for implementing the IBar interface. Should be created once per IBar instance.","addChildClassTo":{"!description":"Adds the sapMBarChildClass to a control.","!static":true,"!category":"function","!type":"fn(oControl: sap.ui.core.Control)","parameters":{"oControl":"type: sap.ui.core.Control, description: undefined"}},"renderTooltip":{"!description":"Renders the tooltip for the given control","!static":true,"!category":"function","!type":"fn(oRM: sap.ui.core.RenderManager, oControl: sap.ui.core.Control)","parameters":{"oRM":"type: sap.ui.core.RenderManager, description: the RenderManager that can be used for writing to the render output buffer.","oControl":"type: sap.ui.core.Control, description: an object representation of the control that should be rendered."}},"!module":"sap/m/BarInPageEnabler","!helpDescription":"Helper Class for implementing the IBar interface. Should be created once per IBar instance.","!proto":"sap.ui.base.Object","!category":"class"},"sap.m.TablePersoProvider_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.TablePersoProvider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn()","prototype":"sap.m.TablePersoProvider"},"sap.m.IBarHTMLTag":{"!description":"Allowed tags for the implementation of the IBar interface.","Div":{"!description":"Renders as a div element.","!category":"enum","!type":"String"},"!module":"sap/m/library","Header":{"!description":"Renders as a header element.","!category":"enum","!type":"String"},"Footer":{"!description":"Renders as a footer element.","!category":"enum","!type":"String"},"!category":"static class"},"sap.m.FacetFilter":{"!proto":"sap.ui.core.Control","!category":"class","fireReset":{"!description":"Fires event <code>reset<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.FacetFilter","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getShowPersonalization":{"!description":"Gets current value of property <code>showPersonalization<\/code>.\n\nIf set to <code>true<\/code> and the FacetFilter type is <code>Simple<\/code>, then the Add Facet icon will be displayed and each facet button will also have a Facet Remove icon displayed beside it, allowing the user to deactivate the facet.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllLists":{"!description":"Removes all the controls from the aggregation <code>lists<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.FacetFilterList]"},"openFilterDialog":{"!description":"Opens the FacetFilter dialog.","!static":false,"!category":"function","!type":"fn() -> sap.m.FacetFilter"},"!constructorDescription":"Constructor for a new FacetFilter.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowPersonalization showPersonalization} : boolean (default: false)<\/li>\n<li>{@link #getType type} : sap.m.FacetFilterType (default: Simple)<\/li>\n<li>{@link #getLiveSearch liveSearch} : boolean (default: true)<\/li>\n<li>{@link #getShowSummaryBar showSummaryBar} : boolean (default: false)<\/li>\n<li>{@link #getShowReset showReset} : boolean (default: true)<\/li>\n<li>{@link #getShowPopoverOKButton showPopoverOKButton} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getLists lists} : sap.m.FacetFilterList[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:reset reset} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addList":{"!description":"Adds some list to the aggregation <code>lists<\/code>.","!static":false,"!category":"function","!type":"fn(oList: sap.m.FacetFilterList) -> sap.m.FacetFilter","parameters":{"oList":"type: sap.m.FacetFilterList, description: the list to add; if empty, nothing is inserted"}},"setShowPersonalization":{"!description":"Sets a new value for property <code>showPersonalization<\/code>.\n\nIf set to <code>true<\/code> and the FacetFilter type is <code>Simple<\/code>, then the Add Facet icon will be displayed and each facet button will also have a Facet Remove icon displayed beside it, allowing the user to deactivate the facet.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowPersonalization: Boolean) -> sap.m.FacetFilter","parameters":{"bShowPersonalization":"type: boolean, description: New value for property <code>showPersonalization<\/code>"}},"!description":"<strong><i>Overview<\/i><\/strong>\n<br><br>\nThe {@link sap.m.FacetFilter} control is used to provide filtering functionality\nwith multiple parameters and supports the users in finding the information they\nneed from potentially very large data sets.\n<br>\nYour app can have dependencies between facets where selection of filter items in\none facet list limits the list of valid filters in another facet list.\n<br><br>\nThe {@link sap.m.FacetFilter FacetFilter} uses\n{@link sap.m.FacetFilterList FacetFilterList} and\n{@link sap.m.FacetFilterItem FacetFilterItem} to model facets and their associated\nfilters.\n<br><br>\n<b>Note: <\/b>{@link sap.m.FacetFilterList FacetFilterList} is a subclass of\n{@link sap.m.List} and supports growing enablement feature via the property\n<code>growing<\/code>. When you use this feature, be aware that it only works with\none-way data binding.\nHaving growing feature enabled when the <code>items<\/code> aggregation is bound to\na model with two-way data binding, may lead to unexpected and/or inconsistent\nbehavior across browsers, such as unexpected closing of the list.\n<br><br>\n<strong><i>Usage<\/i><\/strong>\n<br><br>\nUse the {@link sap.m.FacetFilter FacetFilter} if your app displays a large list of\nitems that can be grouped by multiple parameters, for example products by category\nand supplier. With the {@link sap.m.FacetFilter FacetFilter}, you allow the users\nto dynamically filter the list so it only displays products from the categories and\nsuppliers they want to see.\n<br><br>\n<strong><i>Responsive behavior<\/i><\/strong>\n<br><br>\nThe {@link sap.m.FacetFilter FacetFilter} supports the following two types, which\ncan be configured using the control's <code>type<\/code> property:\n<ul>\n<li>Simple type (default) - only available for desktop and tablet screen sizes.\nThe active facets are displayed as individually selectable buttons on the toolbar.<\/li>\n<li>Light type - automatically enabled on smart phone sized devices, but also\navailable for desktop and tablets. The active facets and selected filter items are\ndisplayed in the summary bar. When the user selects the summary bar, a navigable\ndialog list of all facets is displayed. When the user selects a facet, the dialog\nscrolls to show the list of filters that are available for the selected facet.<\/li>\n<\/ul>\n<strong><i>Additional Information<\/i><\/strong>\n<br><br>\nFor more information, go to <b>Developer Guide<\/b> section in the Demo Kit and navigate to\n<b>More&nbsp;About&nbsp;Controls<\/b>&nbsp;>&nbsp;<b>sap.m<\/b>&nbsp;>&nbsp;<b>Facet&nbsp;Filter<\/b>","getShowReset":{"!description":"Gets current value of property <code>showReset<\/code>.\n\nShows/hides the FacetFilter Reset button.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.FacetFilter.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"insertList":{"!description":"Inserts a list into the aggregation <code>lists<\/code>.","!static":false,"!category":"function","!type":"fn(oList: sap.m.FacetFilterList, iIndex: Number) -> sap.m.FacetFilter","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the list should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the list is inserted at position 0; for a value\n             greater than the current size of the aggregation, the list is inserted at\n             the last position","oList":"type: sap.m.FacetFilterList, description: the list to insert; if empty, nothing is inserted"}},"getLiveSearch":{"!description":"Gets current value of property <code>liveSearch<\/code>.\n\nEnables/disables live search on all search fields except for the FacetFilterList search.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyLists":{"!description":"Destroys all the lists in the aggregation <code>lists<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.FacetFilter"},"detachReset":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>reset<\/code> event of this <code>sap.m.FacetFilter<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.FacetFilter","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getShowSummaryBar":{"!description":"Gets current value of property <code>showSummaryBar<\/code>.\n\nShows the summary bar instead of the FacetFilter buttons bar when set to <code>true<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfList":{"!description":"Checks for the provided <code>sap.m.FacetFilterList<\/code> in the aggregation <code>lists<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oList: sap.m.FacetFilterList) -> Number","parameters":{"oList":"type: sap.m.FacetFilterList, description: The list whose index is looked for"}},"extend":{"!description":"Creates a new subclass of class sap.m.FacetFilter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/m/FacetFilter","!helpDescription":"<strong><i>Overview<\/i><\/strong>\n<br><br>\nThe {@link sap.m.FacetFilter} control is used to provide filtering functionality\nwith multiple parameters and supports the users in finding the information they\nneed from potentially very large data sets.\n<br>\nYour app can have dependencies between facets where selection of filter items in\none facet list limits the list of valid filters in another facet list.\n<br><br>\nThe {@link sap.m.FacetFilter FacetFilter} uses\n{@link sap.m.FacetFilterList FacetFilterList} and\n{@link sap.m.FacetFilterItem FacetFilterItem} to model facets and their associated\nfilters.\n<br><br>\n<b>Note: <\/b>{@link sap.m.FacetFilterList FacetFilterList} is a subclass of\n{@link sap.m.List} and supports growing enablement feature via the property\n<code>growing<\/code>. When you use this feature, be aware that it only works with\none-way data binding.\nHaving growing feature enabled when the <code>items<\/code> aggregation is bound to\na model with two-way data binding, may lead to unexpected and/or inconsistent\nbehavior across browsers, such as unexpected closing of the list.\n<br><br>\n<strong><i>Usage<\/i><\/strong>\n<br><br>\nUse the {@link sap.m.FacetFilter FacetFilter} if your app displays a large list of\nitems that can be grouped by multiple parameters, for example products by category\nand supplier. With the {@link sap.m.FacetFilter FacetFilter}, you allow the users\nto dynamically filter the list so it only displays products from the categories and\nsuppliers they want to see.\n<br><br>\n<strong><i>Responsive behavior<\/i><\/strong>\n<br><br>\nThe {@link sap.m.FacetFilter FacetFilter} supports the following two types, which\ncan be configured using the control's <code>type<\/code> property:\n<ul>\n<li>Simple type (default) - only available for desktop and tablet screen sizes.\nThe active facets are displayed as individually selectable buttons on the toolbar.<\/li>\n<li>Light type - automatically enabled on smart phone sized devices, but also\navailable for desktop and tablets. The active facets and selected filter items are\ndisplayed in the summary bar. When the user selects the summary bar, a navigable\ndialog list of all facets is displayed. When the user selects a facet, the dialog\nscrolls to show the list of filters that are available for the selected facet.<\/li>\n<\/ul>\n<strong><i>Additional Information<\/i><\/strong>\n<br><br>\nFor more information, go to <b>Developer Guide<\/b> section in the Demo Kit and navigate to\n<b>More&nbsp;About&nbsp;Controls<\/b>&nbsp;>&nbsp;<b>sap.m<\/b>&nbsp;>&nbsp;<b>Facet&nbsp;Filter<\/b>","getType":{"!description":"Gets current value of property <code>type<\/code>.\n\nDefines the default appearance of the FacetFilter on the device. Possible values are <code>Simple<\/code> (default) and <code>Light<\/code>.\n\nDefault value is <code>Simple<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.FacetFilterType"},"setShowPopoverOKButton":{"!description":"Sets a new value for property <code>showPopoverOKButton<\/code>.\n\nIf set to <code>true<\/code>, an OK button is displayed for every FacetFilterList popover. This button allows the user to close the popover from within the popover instead of having to click outside of it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowPopoverOKButton: Boolean) -> sap.m.FacetFilter","parameters":{"bShowPopoverOKButton":"type: boolean, description: New value for property <code>showPopoverOKButton<\/code>"}},"getShowPopoverOKButton":{"!description":"Gets current value of property <code>showPopoverOKButton<\/code>.\n\nIf set to <code>true<\/code>, an OK button is displayed for every FacetFilterList popover. This button allows the user to close the popover from within the popover instead of having to click outside of it.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachReset":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>reset<\/code> event of this <code>sap.m.FacetFilter<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.FacetFilter<\/code> itself.\n\nFired when the Reset button is pressed to inform that all FacetFilterLists need to be reset.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.FacetFilter","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.FacetFilter<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.m.FlexBox":{"getJustifyContent":{"!description":"Gets current value of property <code>justifyContent<\/code>.\n\nDetermines the layout behavior along the main axis.\n\nDefault value is <code>Start<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.FlexJustifyContent"},"removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vItem":"type: int|string|sap.ui.core.Control, description: The itemto remove or its index or id"}},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"getDirection":{"!description":"Gets current value of property <code>direction<\/code>.\n\nDetermines the direction of the layout of child elements.\n\nDefault value is <code>Row<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.FlexDirection"},"getWrap":{"!description":"Gets current value of property <code>wrap<\/code>.\n\nDetermines the wrapping behavior of the flex container. This property has no effect in older browsers, e.g. Android Native 4.3 and below.\n\nDefault value is <code>NoWrap<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.FlexWrap"},"!proto":"sap.ui.core.Control","destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.FlexBox"},"getBackgroundDesign":{"!description":"Gets current value of property <code>backgroundDesign<\/code>.\n\nDefines the background style of the <code>sap.m.FlexBox<\/code>.\n\nDefault value is <code>Transparent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.BackgroundDesign"},"setBackgroundDesign":{"!description":"Sets a new value for property <code>backgroundDesign<\/code>.\n\nDefines the background style of the <code>sap.m.FlexBox<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Transparent<\/code>.","!static":false,"!category":"function","!type":"fn(sBackgroundDesign: sap.m.BackgroundDesign) -> sap.m.FlexBox","parameters":{"sBackgroundDesign":"type: sap.m.BackgroundDesign, description: New value for property <code>backgroundDesign<\/code>"}},"!category":"class","getRenderType":{"!description":"Gets current value of property <code>renderType<\/code>.\n\nDetermines whether the layout is rendered as a series of divs or as an unordered list (ul)\n\nDefault value is <code>Div<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.FlexRendertype"},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe width of the <code>sap.m.FlexBox<\/code>. Note that when a percentage is given, for the width to work as expected, the width of the surrounding container must be defined.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setDisplayInline":{"!description":"Sets a new value for property <code>displayInline<\/code>.\n\nDetermines whether the <code>sap.m.FlexBox<\/code> is in block or inline mode.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bDisplayInline: Boolean) -> sap.m.FlexBox","parameters":{"bDisplayInline":"type: boolean, description: New value for property <code>displayInline<\/code>"}},"addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Control) -> sap.m.FlexBox","parameters":{"oItem":"type: sap.ui.core.Control, description: the item to add; if empty, nothing is inserted"}},"getAlignItems":{"!description":"Gets current value of property <code>alignItems<\/code>.\n\nDetermines the layout behavior of items along the cross-axis. \"Baseline\" is not supported in Internet Explorer 10.\n\nDefault value is <code>Stretch<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.FlexAlignItems"},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nFlex items within the flexible box layout","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nThe height of the <code>sap.m.FlexBox<\/code>. Note that when a percentage is given, for the height to work as expected, the height of the surrounding container must be defined.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new <code>sap.m.FlexBox<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getDisplayInline displayInline} : boolean (default: false)<\/li>\n<li>{@link #getDirection direction} : sap.m.FlexDirection (default: Row)<\/li>\n<li>{@link #getFitContainer fitContainer} : boolean (default: false)<\/li>\n<li>{@link #getRenderType renderType} : sap.m.FlexRendertype (default: Div)<\/li>\n<li>{@link #getJustifyContent justifyContent} : sap.m.FlexJustifyContent (default: Start)<\/li>\n<li>{@link #getAlignItems alignItems} : sap.m.FlexAlignItems (default: Stretch)<\/li>\n<li>{@link #getWrap wrap} : sap.m.FlexWrap (default: NoWrap)<\/li>\n<li>{@link #getAlignContent alignContent} : sap.m.FlexAlignContent (default: Stretch)<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign (default: Transparent)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","indexOfItem":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Control) -> Number","parameters":{"oItem":"type: sap.ui.core.Control, description: The item whose index is looked for"}},"getDisplayInline":{"!description":"Gets current value of property <code>displayInline<\/code>.\n\nDetermines whether the <code>sap.m.FlexBox<\/code> is in block or inline mode.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setDirection":{"!description":"Sets a new value for property <code>direction<\/code>.\n\nDetermines the direction of the layout of child elements.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Row<\/code>.","!static":false,"!category":"function","!type":"fn(sDirection: sap.m.FlexDirection) -> sap.m.FlexBox","parameters":{"sDirection":"type: sap.m.FlexDirection, description: New value for property <code>direction<\/code>"}},"setWrap":{"!description":"Sets a new value for property <code>wrap<\/code>.\n\nDetermines the wrapping behavior of the flex container. This property has no effect in older browsers, e.g. Android Native 4.3 and below.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>NoWrap<\/code>.","!static":false,"!category":"function","!type":"fn(sWrap: sap.m.FlexWrap) -> sap.m.FlexBox","parameters":{"sWrap":"type: sap.m.FlexWrap, description: New value for property <code>wrap<\/code>"}},"!description":"The <code>sap.m.FlexBox<\/code> control builds the container for a flexible box layout.\n\nBrowser support:\nThis control is not supported in Internet Explorer 9!","getMetadata":{"!description":"Returns a metadata object for class sap.m.FlexBox.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setRenderType":{"!description":"Sets a new value for property <code>renderType<\/code>.\n\nDetermines whether the layout is rendered as a series of divs or as an unordered list (ul)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Div<\/code>.","!static":false,"!category":"function","!type":"fn(sRenderType: sap.m.FlexRendertype) -> sap.m.FlexBox","parameters":{"sRenderType":"type: sap.m.FlexRendertype, description: New value for property <code>renderType<\/code>"}},"getFitContainer":{"!description":"Gets current value of property <code>fitContainer<\/code>.\n\nDetermines whether the <code>sap.m.FlexBox<\/code> will be sized to completely fill its container. If the <code>sap.m.FlexBox<\/code> is inserted into a Page, the property 'enableScrolling' of the Page needs to be set to 'false' for the FlexBox to fit the entire viewport.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setAlignContent":{"!description":"Sets a new value for property <code>alignContent<\/code>.\n\nDetermines the layout behavior of container lines when there's extra space along the cross-axis. This property has no effect in Internet Explorer 10.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Stretch<\/code>.","!static":false,"!category":"function","!type":"fn(sAlignContent: sap.m.FlexAlignContent) -> sap.m.FlexBox","parameters":{"sAlignContent":"type: sap.m.FlexAlignContent, description: New value for property <code>alignContent<\/code>"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nThe height of the <code>sap.m.FlexBox<\/code>. Note that when a percentage is given, for the height to work as expected, the height of the surrounding container must be defined.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.m.FlexBox","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe width of the <code>sap.m.FlexBox<\/code>. Note that when a percentage is given, for the width to work as expected, the width of the surrounding container must be defined.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.FlexBox","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.FlexBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/m/FlexBox","!helpDescription":"The <code>sap.m.FlexBox<\/code> control builds the container for a flexible box layout.\n\nBrowser support:\nThis control is not supported in Internet Explorer 9!","setAlignItems":{"!description":"Sets a new value for property <code>alignItems<\/code>.\n\nDetermines the layout behavior of items along the cross-axis. \"Baseline\" is not supported in Internet Explorer 10.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Stretch<\/code>.","!static":false,"!category":"function","!type":"fn(sAlignItems: sap.m.FlexAlignItems) -> sap.m.FlexBox","parameters":{"sAlignItems":"type: sap.m.FlexAlignItems, description: New value for property <code>alignItems<\/code>"}},"setFitContainer":{"!description":"Sets a new value for property <code>fitContainer<\/code>.\n\nDetermines whether the <code>sap.m.FlexBox<\/code> will be sized to completely fill its container. If the <code>sap.m.FlexBox<\/code> is inserted into a Page, the property 'enableScrolling' of the Page needs to be set to 'false' for the FlexBox to fit the entire viewport.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFitContainer: Boolean) -> sap.m.FlexBox","parameters":{"bFitContainer":"type: boolean, description: New value for property <code>fitContainer<\/code>"}},"getAlignContent":{"!description":"Gets current value of property <code>alignContent<\/code>.\n\nDetermines the layout behavior of container lines when there's extra space along the cross-axis. This property has no effect in Internet Explorer 10.\n\nDefault value is <code>Stretch<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.FlexAlignContent"},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Control, iIndex: Number) -> sap.m.FlexBox","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position","oItem":"type: sap.ui.core.Control, description: the item to insert; if empty, nothing is inserted"}},"setJustifyContent":{"!description":"Sets a new value for property <code>justifyContent<\/code>.\n\nDetermines the layout behavior along the main axis.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Start<\/code>.","!static":false,"!category":"function","!type":"fn(sJustifyContent: sap.m.FlexJustifyContent) -> sap.m.FlexBox","parameters":{"sJustifyContent":"type: sap.m.FlexJustifyContent, description: New value for property <code>justifyContent<\/code>"}}},"sap.m.StandardTile":{"setInfoState":{"!description":"Sets a new value for property <code>infoState<\/code>.\n\nDefines the color of the info text. Possible values are Error, Warning, Success and so on.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sInfoState: sap.ui.core.ValueState) -> sap.m.StandardTile","parameters":{"sInfoState":"type: sap.ui.core.ValueState, description: New value for property <code>infoState<\/code>"}},"getNumberUnit":{"!description":"Gets current value of property <code>numberUnit<\/code>.\n\nDefines the number units qualifier of the StandardTile.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.m.Tile","!category":"class","getIconDensityAware":{"!description":"Gets current value of property <code>iconDensityAware<\/code>.\n\nBy default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server.\n\nIf bandwidth is key for the application, set this value to false.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getNumber":{"!description":"Gets current value of property <code>number<\/code>.\n\nDefines the number field of the StandardTile.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new StandardTile.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getInfo info} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getActiveIcon activeIcon} : sap.ui.core.URI<\/li>\n<li>{@link #getNumber number} : string<\/li>\n<li>{@link #getNumberUnit numberUnit} : string<\/li>\n<li>{@link #getInfoState infoState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getType type} : sap.m.StandardTileType (default: None)<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Tile#constructor sap.m.Tile}\ncan be used as well.","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nDefines the title of the StandardTile.","!static":false,"!category":"function","!type":"fn() -> String"},"setIconDensityAware":{"!description":"Sets a new value for property <code>iconDensityAware<\/code>.\n\nBy default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server.\n\nIf bandwidth is key for the application, set this value to false.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bIconDensityAware: Boolean) -> sap.m.StandardTile","parameters":{"bIconDensityAware":"type: boolean, description: New value for property <code>iconDensityAware<\/code>"}},"setActiveIcon":{"!description":"Sets a new value for property <code>activeIcon<\/code>.\n\nDefines the active icon of the StandardTile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sActiveIcon: sap.ui.core.URI) -> sap.m.StandardTile","parameters":{"sActiveIcon":"type: sap.ui.core.URI, description: New value for property <code>activeIcon<\/code>"}},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getActiveIcon":{"!description":"Gets current value of property <code>activeIcon<\/code>.\n\nDefines the active icon of the StandardTile.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"!description":"The StandardTile control is displayed in the tile container.","getInfoState":{"!description":"Gets current value of property <code>infoState<\/code>.\n\nDefines the color of the info text. Possible values are Error, Warning, Success and so on.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.StandardTile.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getInfo":{"!description":"Gets current value of property <code>info<\/code>.\n\nDefines the description of the StandardTile.","!static":false,"!category":"function","!type":"fn() -> String"},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nDefines the title of the StandardTile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.StandardTile","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"setNumberUnit":{"!description":"Sets a new value for property <code>numberUnit<\/code>.\n\nDefines the number units qualifier of the StandardTile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNumberUnit: String) -> sap.m.StandardTile","parameters":{"sNumberUnit":"type: string, description: New value for property <code>numberUnit<\/code>"}},"setType":{"!description":"Sets a new value for property <code>type<\/code>.\n\nDefines the type of the StandardTile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sType: sap.m.StandardTileType) -> sap.m.StandardTile","parameters":{"sType":"type: sap.m.StandardTileType, description: New value for property <code>type<\/code>"}},"setNumber":{"!description":"Sets a new value for property <code>number<\/code>.\n\nDefines the number field of the StandardTile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNumber: String) -> sap.m.StandardTile","parameters":{"sNumber":"type: string, description: New value for property <code>number<\/code>"}},"getIcon":{"!description":"Gets the icon of the StandardTile control.","!static":false,"!category":"function","!type":"fn()"},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.m.StandardTile","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.m.StandardTile with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Tile.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nDefines the icon of the StandardTile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.m.StandardTile","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"!module":"sap/m/StandardTile","!helpDescription":"The StandardTile control is displayed in the tile container.","getType":{"!description":"Gets current value of property <code>type<\/code>.\n\nDefines the type of the StandardTile.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.StandardTileType"},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"setInfo":{"!description":"Sets a new value for property <code>info<\/code>.\n\nDefines the description of the StandardTile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sInfo: String) -> sap.m.StandardTile","parameters":{"sInfo":"type: string, description: New value for property <code>info<\/code>"}}},"sap.m.semantic.FullscreenPage":{"getNegativeAction":{"!description":"Gets content of aggregation <code>negativeAction<\/code>.\n\nNegative action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.NegativeAction"},"setSendMessageAction":{"!description":"Sets the aggregated <code>sendMessageAction<\/code>.","!static":false,"!category":"function","!type":"fn(oSendMessageAction: sap.m.semantic.SendMessageAction) -> sap.m.semantic.FullscreenPage","parameters":{"oSendMessageAction":"type: sap.m.semantic.SendMessageAction, description: The sendMessageAction to set"}},"setDeleteAction":{"!description":"Sets the aggregated <code>deleteAction<\/code>.","!static":false,"!category":"function","!type":"fn(oDeleteAction: sap.m.semantic.DeleteAction) -> sap.m.semantic.FullscreenPage","parameters":{"oDeleteAction":"type: sap.m.semantic.DeleteAction, description: The deleteAction to set"}},"destroyPrintAction":{"!description":"Destroys the printAction in the aggregation <code>printAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.FullscreenPage"},"setSaveAction":{"!description":"Sets the aggregated <code>saveAction<\/code>.","!static":false,"!category":"function","!type":"fn(oSaveAction: sap.m.semantic.SaveAction) -> sap.m.semantic.FullscreenPage","parameters":{"oSaveAction":"type: sap.m.semantic.SaveAction, description: The saveAction to set"}},"getPositiveAction":{"!description":"Gets content of aggregation <code>positiveAction<\/code>.\n\nPositive action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.PositiveAction"},"getMainAction":{"!description":"Gets content of aggregation <code>mainAction<\/code>.\n\nMain action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.MainAction"},"getCancelAction":{"!description":"Gets content of aggregation <code>cancelAction<\/code>.\n\nCancel action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.CancelAction"},"getSendEmailAction":{"!description":"Gets content of aggregation <code>sendEmailAction<\/code>.\n\nSendEmail action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.SendEmailAction"},"setShareInJamAction":{"!description":"Sets the aggregated <code>shareInJamAction<\/code>.","!static":false,"!category":"function","!type":"fn(oShareInJamAction: sap.m.semantic.ShareInJamAction) -> sap.m.semantic.FullscreenPage","parameters":{"oShareInJamAction":"type: sap.m.semantic.ShareInJamAction, description: The shareInJamAction to set"}},"destroyDiscussInJamAction":{"!description":"Destroys the discussInJamAction in the aggregation <code>discussInJamAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.FullscreenPage"},"getSendMessageAction":{"!description":"Gets content of aggregation <code>sendMessageAction<\/code>.\n\nSendMessage action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.SendMessageAction"},"setPositiveAction":{"!description":"Sets the aggregated <code>positiveAction<\/code>.","!static":false,"!category":"function","!type":"fn(oPositiveAction: sap.m.semantic.PositiveAction) -> sap.m.semantic.FullscreenPage","parameters":{"oPositiveAction":"type: sap.m.semantic.PositiveAction, description: The positiveAction to set"}},"!description":"A FullscreenPage is a {@link sap.m.semantic.ShareMenuPage} that supports semantic content of the following types:\n\n<ul>\n <li>{@link sap.m.semantic.AddAction}<\/li>\n\t<li>{@link sap.m.semantic.MainAction}<\/li>\n\t<li>{@link sap.m.semantic.PositiveAction}<\/li>\n\t<li>{@link sap.m.semantic.NegativeAction}<\/li>\n\t<li>{@link sap.m.semantic.ForwardAction}<\/li>\n\t<li>{@link sap.m.semantic.EditAction}<\/li>\n\t<li>{@link sap.m.semantic.SaveAction}<\/li>\n\t<li>{@link sap.m.semantic.DeleteAction}<\/li>\n\t<li>{@link sap.m.semantic.CancelAction}<\/li>\n\t<li>{@link sap.m.semantic.FlagAction}<\/li>\n\t<li>{@link sap.m.semantic.FavoriteAction}<\/li>\n\t<li>{@link sap.m.semantic.OpenInAction}<\/li>\n\t<li>{@link sap.m.semantic.DiscussInJamAction}<\/li>\n\t<li>{@link sap.m.semantic.ShareInJamAction}<\/li>\n\t<li>{@link sap.m.semantic.SendEmailAction}<\/li>\n\t<li>{@link sap.m.semantic.SendMessageAction}<\/li>\n\t<li>{@link sap.m.semantic.PrintAction}<\/li>\n\t<li>{@link sap.m.semantic.MessagesIndicator}<\/li>\n\t<li>{@link sap.m.DraftIndicator}<\/li>\n<\/ul>","setFavoriteAction":{"!description":"Sets the aggregated <code>favoriteAction<\/code>.","!static":false,"!category":"function","!type":"fn(oFavoriteAction: sap.m.semantic.FavoriteAction) -> sap.m.semantic.FullscreenPage","parameters":{"oFavoriteAction":"type: sap.m.semantic.FavoriteAction, description: The favoriteAction to set"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.FullscreenPage.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setSaveAsTileAction":{"!description":"Sets the aggregated <code>saveAsTileAction<\/code>.","!static":false,"!category":"function","!type":"fn(oSaveAsTileAction: sap.m.Button) -> sap.m.semantic.FullscreenPage","parameters":{"oSaveAsTileAction":"type: sap.m.Button, description: The saveAsTileAction to set"}},"setMainAction":{"!description":"Sets the aggregated <code>mainAction<\/code>.","!static":false,"!category":"function","!type":"fn(oMainAction: sap.m.semantic.MainAction) -> sap.m.semantic.FullscreenPage","parameters":{"oMainAction":"type: sap.m.semantic.MainAction, description: The mainAction to set"}},"getShareInJamAction":{"!description":"Gets content of aggregation <code>shareInJamAction<\/code>.\n\nShareInJam action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.ShareInJamAction"},"destroyNegativeAction":{"!description":"Destroys the negativeAction in the aggregation <code>negativeAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.FullscreenPage"},"getDraftIndicator":{"!description":"Gets content of aggregation <code>draftIndicator<\/code>.\n\nDraftIndicator","!static":false,"!category":"function","!type":"fn() -> sap.m.DraftIndicator"},"extend":{"!description":"Creates a new subclass of class sap.m.semantic.FullscreenPage with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.ShareMenuPage.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getPagingAction":{"!description":"Gets content of aggregation <code>pagingAction<\/code>.\n\nPaging action","!static":false,"!category":"function","!type":"fn() -> sap.m.PagingButton"},"getSaveAsTileAction":{"!description":"Gets content of aggregation <code>saveAsTileAction<\/code>.\n\nSaveAsTile button","!static":false,"!category":"function","!type":"fn() -> sap.m.Button"},"setDraftIndicator":{"!description":"Sets the aggregated <code>draftIndicator<\/code>.","!static":false,"!category":"function","!type":"fn(oDraftIndicator: sap.m.DraftIndicator) -> sap.m.semantic.FullscreenPage","parameters":{"oDraftIndicator":"type: sap.m.DraftIndicator, description: The draftIndicator to set"}},"destroySendMessageAction":{"!description":"Destroys the sendMessageAction in the aggregation <code>sendMessageAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.FullscreenPage"},"!module":"sap/m/semantic/FullscreenPage","destroyPositiveAction":{"!description":"Destroys the positiveAction in the aggregation <code>positiveAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.FullscreenPage"},"!helpDescription":"A FullscreenPage is a {@link sap.m.semantic.ShareMenuPage} that supports semantic content of the following types:\n\n<ul>\n <li>{@link sap.m.semantic.AddAction}<\/li>\n\t<li>{@link sap.m.semantic.MainAction}<\/li>\n\t<li>{@link sap.m.semantic.PositiveAction}<\/li>\n\t<li>{@link sap.m.semantic.NegativeAction}<\/li>\n\t<li>{@link sap.m.semantic.ForwardAction}<\/li>\n\t<li>{@link sap.m.semantic.EditAction}<\/li>\n\t<li>{@link sap.m.semantic.SaveAction}<\/li>\n\t<li>{@link sap.m.semantic.DeleteAction}<\/li>\n\t<li>{@link sap.m.semantic.CancelAction}<\/li>\n\t<li>{@link sap.m.semantic.FlagAction}<\/li>\n\t<li>{@link sap.m.semantic.FavoriteAction}<\/li>\n\t<li>{@link sap.m.semantic.OpenInAction}<\/li>\n\t<li>{@link sap.m.semantic.DiscussInJamAction}<\/li>\n\t<li>{@link sap.m.semantic.ShareInJamAction}<\/li>\n\t<li>{@link sap.m.semantic.SendEmailAction}<\/li>\n\t<li>{@link sap.m.semantic.SendMessageAction}<\/li>\n\t<li>{@link sap.m.semantic.PrintAction}<\/li>\n\t<li>{@link sap.m.semantic.MessagesIndicator}<\/li>\n\t<li>{@link sap.m.DraftIndicator}<\/li>\n<\/ul>","destroyFlagAction":{"!description":"Destroys the flagAction in the aggregation <code>flagAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.FullscreenPage"},"getFavoriteAction":{"!description":"Gets content of aggregation <code>favoriteAction<\/code>.\n\nFavorite action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.FavoriteAction"},"destroyMainAction":{"!description":"Destroys the mainAction in the aggregation <code>mainAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.FullscreenPage"},"setPrintAction":{"!description":"Sets the aggregated <code>printAction<\/code>.","!static":false,"!category":"function","!type":"fn(oPrintAction: sap.m.semantic.PrintAction) -> sap.m.semantic.FullscreenPage","parameters":{"oPrintAction":"type: sap.m.semantic.PrintAction, description: The printAction to set"}},"destroySendEmailAction":{"!description":"Destroys the sendEmailAction in the aggregation <code>sendEmailAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.FullscreenPage"},"getOpenInAction":{"!description":"Gets content of aggregation <code>openInAction<\/code>.\n\nOpenIn action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.OpenInAction"},"destroyAddAction":{"!description":"Destroys the addAction in the aggregation <code>addAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.FullscreenPage"},"setForwardAction":{"!description":"Sets the aggregated <code>forwardAction<\/code>.","!static":false,"!category":"function","!type":"fn(oForwardAction: sap.m.semantic.ForwardAction) -> sap.m.semantic.FullscreenPage","parameters":{"oForwardAction":"type: sap.m.semantic.ForwardAction, description: The forwardAction to set"}},"setEditAction":{"!description":"Sets the aggregated <code>editAction<\/code>.","!static":false,"!category":"function","!type":"fn(oEditAction: sap.m.semantic.EditAction) -> sap.m.semantic.FullscreenPage","parameters":{"oEditAction":"type: sap.m.semantic.EditAction, description: The editAction to set"}},"destroyEditAction":{"!description":"Destroys the editAction in the aggregation <code>editAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.FullscreenPage"},"!proto":"sap.m.semantic.ShareMenuPage","getDeleteAction":{"!description":"Gets content of aggregation <code>deleteAction<\/code>.\n\nDelete action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.DeleteAction"},"!category":"class","setFlagAction":{"!description":"Sets the aggregated <code>flagAction<\/code>.","!static":false,"!category":"function","!type":"fn(oFlagAction: sap.m.semantic.FlagAction) -> sap.m.semantic.FullscreenPage","parameters":{"oFlagAction":"type: sap.m.semantic.FlagAction, description: The flagAction to set"}},"destroySaveAction":{"!description":"Destroys the saveAction in the aggregation <code>saveAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.FullscreenPage"},"getMessagesIndicator":{"!description":"Gets content of aggregation <code>messagesIndicator<\/code>.\n\nMessagesIndicator","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.MessagesIndicator"},"setOpenInAction":{"!description":"Sets the aggregated <code>openInAction<\/code>.","!static":false,"!category":"function","!type":"fn(oOpenInAction: sap.m.semantic.OpenInAction) -> sap.m.semantic.FullscreenPage","parameters":{"oOpenInAction":"type: sap.m.semantic.OpenInAction, description: The openInAction to set"}},"destroySaveAsTileAction":{"!description":"Destroys the saveAsTileAction in the aggregation <code>saveAsTileAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.FullscreenPage"},"getFlagAction":{"!description":"Gets content of aggregation <code>flagAction<\/code>.\n\nFlag action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.FlagAction"},"!constructorDescription":"Constructor for a new FullscreenPage\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getAddAction addAction} : sap.m.semantic.AddAction<\/li>\n<li>{@link #getMainAction mainAction} : sap.m.semantic.MainAction<\/li>\n<li>{@link #getPositiveAction positiveAction} : sap.m.semantic.PositiveAction<\/li>\n<li>{@link #getNegativeAction negativeAction} : sap.m.semantic.NegativeAction<\/li>\n<li>{@link #getForwardAction forwardAction} : sap.m.semantic.ForwardAction<\/li>\n<li>{@link #getEditAction editAction} : sap.m.semantic.EditAction<\/li>\n<li>{@link #getSaveAction saveAction} : sap.m.semantic.SaveAction<\/li>\n<li>{@link #getDeleteAction deleteAction} : sap.m.semantic.DeleteAction<\/li>\n<li>{@link #getCancelAction cancelAction} : sap.m.semantic.CancelAction<\/li>\n<li>{@link #getFlagAction flagAction} : sap.m.semantic.FlagAction<\/li>\n<li>{@link #getFavoriteAction favoriteAction} : sap.m.semantic.FavoriteAction<\/li>\n<li>{@link #getOpenInAction openInAction} : sap.m.semantic.OpenInAction<\/li>\n<li>{@link #getDiscussInJamAction discussInJamAction} : sap.m.semantic.DiscussInJamAction<\/li>\n<li>{@link #getShareInJamAction shareInJamAction} : sap.m.semantic.ShareInJamAction<\/li>\n<li>{@link #getSendEmailAction sendEmailAction} : sap.m.semantic.SendEmailAction<\/li>\n<li>{@link #getSendMessageAction sendMessageAction} : sap.m.semantic.SendMessageAction<\/li>\n<li>{@link #getPrintAction printAction} : sap.m.semantic.PrintAction<\/li>\n<li>{@link #getMessagesIndicator messagesIndicator} : sap.m.semantic.MessagesIndicator<\/li>\n<li>{@link #getSaveAsTileAction saveAsTileAction} : sap.m.Button<\/li>\n<li>{@link #getPagingAction pagingAction} : sap.m.PagingButton<\/li>\n<li>{@link #getDraftIndicator draftIndicator} : sap.m.DraftIndicator<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.ShareMenuPage#constructor sap.m.semantic.ShareMenuPage}\ncan be used as well.","getAddAction":{"!description":"Gets content of aggregation <code>addAction<\/code>.\n\nAdd action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.AddAction"},"setPagingAction":{"!description":"Sets the aggregated <code>pagingAction<\/code>.","!static":false,"!category":"function","!type":"fn(oPagingAction: sap.m.PagingButton) -> sap.m.semantic.FullscreenPage","parameters":{"oPagingAction":"type: sap.m.PagingButton, description: The pagingAction to set"}},"setMessagesIndicator":{"!description":"Sets the aggregated <code>messagesIndicator<\/code>.","!static":false,"!category":"function","!type":"fn(oMessagesIndicator: sap.m.semantic.MessagesIndicator) -> sap.m.semantic.FullscreenPage","parameters":{"oMessagesIndicator":"type: sap.m.semantic.MessagesIndicator, description: The messagesIndicator to set"}},"destroyDraftIndicator":{"!description":"Destroys the draftIndicator in the aggregation <code>draftIndicator<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.FullscreenPage"},"getDiscussInJamAction":{"!description":"Gets content of aggregation <code>discussInJamAction<\/code>.\n\nDiscussInJam action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.DiscussInJamAction"},"setDiscussInJamAction":{"!description":"Sets the aggregated <code>discussInJamAction<\/code>.","!static":false,"!category":"function","!type":"fn(oDiscussInJamAction: sap.m.semantic.DiscussInJamAction) -> sap.m.semantic.FullscreenPage","parameters":{"oDiscussInJamAction":"type: sap.m.semantic.DiscussInJamAction, description: The discussInJamAction to set"}},"setAddAction":{"!description":"Sets the aggregated <code>addAction<\/code>.","!static":false,"!category":"function","!type":"fn(oAddAction: sap.m.semantic.AddAction) -> sap.m.semantic.FullscreenPage","parameters":{"oAddAction":"type: sap.m.semantic.AddAction, description: The addAction to set"}},"getPrintAction":{"!description":"Gets content of aggregation <code>printAction<\/code>.\n\nPrint action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.PrintAction"},"destroyCancelAction":{"!description":"Destroys the cancelAction in the aggregation <code>cancelAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.FullscreenPage"},"getForwardAction":{"!description":"Gets content of aggregation <code>forwardAction<\/code>.\n\nNegative action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.ForwardAction"},"getSaveAction":{"!description":"Gets content of aggregation <code>saveAction<\/code>.\n\nSave action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.SaveAction"},"destroyFavoriteAction":{"!description":"Destroys the favoriteAction in the aggregation <code>favoriteAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.FullscreenPage"},"destroyForwardAction":{"!description":"Destroys the forwardAction in the aggregation <code>forwardAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.FullscreenPage"},"setSendEmailAction":{"!description":"Sets the aggregated <code>sendEmailAction<\/code>.","!static":false,"!category":"function","!type":"fn(oSendEmailAction: sap.m.semantic.SendEmailAction) -> sap.m.semantic.FullscreenPage","parameters":{"oSendEmailAction":"type: sap.m.semantic.SendEmailAction, description: The sendEmailAction to set"}},"destroyMessagesIndicator":{"!description":"Destroys the messagesIndicator in the aggregation <code>messagesIndicator<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.FullscreenPage"},"destroyPagingAction":{"!description":"Destroys the pagingAction in the aggregation <code>pagingAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.FullscreenPage"},"getEditAction":{"!description":"Gets content of aggregation <code>editAction<\/code>.\n\nEdit action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.EditAction"},"destroyDeleteAction":{"!description":"Destroys the deleteAction in the aggregation <code>deleteAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.FullscreenPage"},"destroyOpenInAction":{"!description":"Destroys the openInAction in the aggregation <code>openInAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.FullscreenPage"},"setCancelAction":{"!description":"Sets the aggregated <code>cancelAction<\/code>.","!static":false,"!category":"function","!type":"fn(oCancelAction: sap.m.semantic.CancelAction) -> sap.m.semantic.FullscreenPage","parameters":{"oCancelAction":"type: sap.m.semantic.CancelAction, description: The cancelAction to set"}},"setNegativeAction":{"!description":"Sets the aggregated <code>negativeAction<\/code>.","!static":false,"!category":"function","!type":"fn(oNegativeAction: sap.m.semantic.NegativeAction) -> sap.m.semantic.FullscreenPage","parameters":{"oNegativeAction":"type: sap.m.semantic.NegativeAction, description: The negativeAction to set"}},"destroyShareInJamAction":{"!description":"Destroys the shareInJamAction in the aggregation <code>shareInJamAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.FullscreenPage"}},"sap.m.P13nDialog_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.P13nDialog with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Dialog.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.P13nDialog"},"sap.m.LabelDesign":{"!description":"Available label display modes.","!module":"sap/m/library","!category":"static class","Bold":{"!description":"Displays the label in bold.","!category":"enum","!type":"String"},"Standard":{"!description":"Displays the label in normal mode.","!category":"enum","!type":"String"}},"sap.m.SelectDialog_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.SelectDialog with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.SelectDialog"},"sap.m.MenuItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.MenuItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.MenuItem"},"sap.m.HBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.HBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.FlexBox.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.HBox"},"sap.m.semantic":{"MainAction":"sap.m.semantic.MainAction_obj","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"SendEmailAction":"sap.m.semantic.SendEmailAction_obj","NegativeAction":"sap.m.semantic.NegativeAction_obj","SemanticButton":"sap.m.semantic.SemanticButton_obj","IGroup":"sap.m.semantic.IGroup","FullscreenPage":"sap.m.semantic.FullscreenPage_obj","text":{"!description":"Button text","!category":"enum","!type":"String"},"FavoriteAction":"sap.m.semantic.FavoriteAction_obj","FlagAction":"sap.m.semantic.FlagAction_obj","SemanticToggleButton":"sap.m.semantic.SemanticToggleButton_obj","SortSelect":"sap.m.semantic.SortSelect_obj","visible":{"!description":"See {@link sap.ui.core.Control#visible}","!category":"enum","!type":"Boolean"},"pressed":{"!description":"The property is \u201ctrue\u201d when the control is toggled. The default state of this property is \"false\".","!category":"enum","!type":"Boolean"},"DiscussInJamAction":"sap.m.semantic.DiscussInJamAction_obj","DetailPage":"sap.m.semantic.DetailPage_obj","FilterSelect":"sap.m.semantic.FilterSelect_obj","ISort":"sap.m.semantic.ISort","MessagesIndicator":"sap.m.semantic.MessagesIndicator_obj","ShareMenuPage":"sap.m.semantic.ShareMenuPage_obj","IFilter":"sap.m.semantic.IFilter","ForwardAction":"sap.m.semantic.ForwardAction_obj","titleLevel":{"!description":"See {@link sap.m.Page#titleLevel}","!category":"enum","!type":"sap.ui.core.TitleLevel"},"DeleteAction":"sap.m.semantic.DeleteAction_obj","OpenInAction":"sap.m.semantic.OpenInAction_obj","SemanticSelect":"sap.m.semantic.SemanticSelect_obj","SortAction":"sap.m.semantic.SortAction_obj","FilterAction":"sap.m.semantic.FilterAction_obj","SaveAction":"sap.m.semantic.SaveAction_obj","PrintAction":"sap.m.semantic.PrintAction_obj","CancelAction":"sap.m.semantic.CancelAction_obj","SemanticControl":"sap.m.semantic.SemanticControl_obj","EditAction":"sap.m.semantic.EditAction_obj","!category":"namespace","title":{"!description":"See {@link sap.m.Page#title}","!category":"enum","!type":"String"},"AddAction":"sap.m.semantic.AddAction_obj","enabled":{"!description":"See {@link sap.m.Select#enabled}","!category":"enum","!type":"Boolean"},"showFooter":{"!description":"Hides or shows the page footer","!category":"enum","!type":"Boolean"},"MultiSelectAction":"sap.m.semantic.MultiSelectAction_obj","busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!category":"enum","!type":"[String]"},"showSubHeader":{"!description":"See {@link sap.m.Page#showSubHeader}","!category":"enum","!type":"Boolean"},"showNavButton":{"!description":"See {@link sap.m.Page#showNavButton}","!category":"enum","!type":"Boolean"},"enableScrolling":{"!description":"See {@link sap.m.Page#enableScrolling}","!category":"enum","!type":"Boolean"},"selectedKey":{"!description":"See {@link sap.m.Select#selectedKey}","!category":"enum","!type":"String"},"SendMessageAction":"sap.m.semantic.SendMessageAction_obj","PositiveAction":"sap.m.semantic.PositiveAction_obj","ShareInJamAction":"sap.m.semantic.ShareInJamAction_obj","GroupSelect":"sap.m.semantic.GroupSelect_obj","GroupAction":"sap.m.semantic.GroupAction_obj","MasterPage":"sap.m.semantic.MasterPage_obj","SemanticPage":"sap.m.semantic.SemanticPage_obj"},"sap.m.SplitContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.SplitContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.SplitContainer"},"sap.m.FlexDirection":{"!description":"Available directions for flex layouts.","!module":"sap/m/library","ColumnReverse":{"!description":"Flex items are laid out along the reverse direction of the block axis (usually bottom to top).","!category":"enum","!type":"String"},"Column":{"!description":"Flex items are laid out along the direction of the block axis (usually top to bottom).","!category":"enum","!type":"String"},"!category":"static class","Row":{"!description":"Flex items are laid out along the direction of the inline axis (text direction).","!category":"enum","!type":"String"},"RowReverse":{"!description":"Flex items are laid out along the reverse direction of the inline axis (against the text direction).","!category":"enum","!type":"String"},"Inherit":{"!description":"Inherits the value from its parent.","!category":"enum","!type":"String"}},"sap.m.P13nFilterItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.P13nFilterItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.P13nFilterItem"},"sap.m.Link_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.Link with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.Link"},"sap.m.ListItemBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ListItemBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ListItemBase"},"sap.m.ViewSettingsItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ViewSettingsItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ViewSettingsItem"},"sap.m.GrowingList":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16 Instead use \"List\" or \"Table\" control with setting \"growing\" property to \"true\"<br>sap.m.GrowingList control is the container for all list items and inherits from sap.m.List control. Everything like the selection, deletion, unread states and inset style are also maintained here. In addition the control provides a loading mechanism to request data from the model and append the list items to the list. The request is started manually by tapping on the trigger at the end of the list.","setScrollToLoad":{"!description":"Sets a new value for property <code>scrollToLoad<\/code>.\n\nIf you set this property to true then user needs to scroll end to trigger loading a new page. Default value is false which means user needs to scroll end and then click button to load new page.\nNOTE: This property can be set true, if growing property is set \"true\" and if you only have one instance of this control inside the scroll container(e.g Page).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bScrollToLoad: Boolean) -> sap.m.GrowingList","parameters":{"bScrollToLoad":"type: boolean, description: New value for property <code>scrollToLoad<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.GrowingList.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setTriggerText":{"!description":"Sets a new value for property <code>triggerText<\/code>.\n\nText which is displayed on the trigger at the end of the list. The default is a translated text (\"Load More Data\") coming from the messagebundle properties.\nThis property can be used only if growing property is set \"true\" and scrollToLoad property is set \"false\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTriggerText: String) -> sap.m.GrowingList","parameters":{"sTriggerText":"type: string, description: New value for property <code>triggerText<\/code>"}},"!proto":"sap.m.List","!category":"class","setThreshold":{"!description":"Sets a new value for property <code>threshold<\/code>.\n\nNumber of items requested from the server. To activate this you should set growing property to \"true\"\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>20<\/code>.","!static":false,"!category":"function","!type":"fn(iThreshold: Number) -> sap.m.GrowingList","parameters":{"iThreshold":"type: int, description: New value for property <code>threshold<\/code>"}},"getScrollToLoad":{"!description":"Gets current value of property <code>scrollToLoad<\/code>.\n\nIf you set this property to true then user needs to scroll end to trigger loading a new page. Default value is false which means user needs to scroll end and then click button to load new page.\nNOTE: This property can be set true, if growing property is set \"true\" and if you only have one instance of this control inside the scroll container(e.g Page).\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.m.GrowingList with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.List.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getTriggerText":{"!description":"Gets current value of property <code>triggerText<\/code>.\n\nText which is displayed on the trigger at the end of the list. The default is a translated text (\"Load More Data\") coming from the messagebundle properties.\nThis property can be used only if growing property is set \"true\" and scrollToLoad property is set \"false\".","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new GrowingList.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getThreshold threshold} : int (default: 20)<\/li>\n<li>{@link #getTriggerText triggerText} : string<\/li>\n<li>{@link #getScrollToLoad scrollToLoad} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.List#constructor sap.m.List}\ncan be used as well.","!module":"sap/m/GrowingList","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16 Instead use \"List\" or \"Table\" control with setting \"growing\" property to \"true\"<br>sap.m.GrowingList control is the container for all list items and inherits from sap.m.List control. Everything like the selection, deletion, unread states and inset style are also maintained here. In addition the control provides a loading mechanism to request data from the model and append the list items to the list. The request is started manually by tapping on the trigger at the end of the list.","getThreshold":{"!description":"Gets current value of property <code>threshold<\/code>.\n\nNumber of items requested from the server. To activate this you should set growing property to \"true\"\n\nDefault value is <code>20<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"}},"sap.m.P13nDimMeasurePanel":{"removeAvailableChartType":{"!description":"Removes a availableChartType from the aggregation <code>availableChartTypes<\/code>.","!static":false,"!category":"function","!type":"fn(vAvailableChartType: Number | String | sap.ui.core.Item) -> sap.ui.core.Item","parameters":{"vAvailableChartType":"type: int|string|sap.ui.core.Item, description: The availableChartTypeto remove or its index or id"}},"setChartTypeKey":{"!description":"Sets a new value for property <code>chartTypeKey<\/code>.\n\nSpecifies a chart type key.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sChartTypeKey: String) -> sap.m.P13nDimMeasurePanel","parameters":{"sChartTypeKey":"type: string, description: New value for property <code>chartTypeKey<\/code>"}},"addAvailableChartType":{"!description":"Adds some availableChartType to the aggregation <code>availableChartTypes<\/code>.","!static":false,"!category":"function","!type":"fn(oAvailableChartType: sap.ui.core.Item) -> sap.m.P13nDimMeasurePanel","parameters":{"oAvailableChartType":"type: sap.ui.core.Item, description: the availableChartType to add; if empty, nothing is inserted"}},"destroyDimMeasureItems":{"!description":"Destroys all the dimMeasureItems in the aggregation <code>dimMeasureItems<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.P13nDimMeasurePanel"},"indexOfAvailableChartType":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation <code>availableChartTypes<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAvailableChartType: sap.ui.core.Item) -> Number","parameters":{"oAvailableChartType":"type: sap.ui.core.Item, description: The availableChartType whose index is looked for"}},"removeAllAvailableChartTypes":{"!description":"Removes all the controls from the aggregation <code>availableChartTypes<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"!proto":"sap.m.P13nPanel","!category":"class","destroyAvailableChartTypes":{"!description":"Destroys all the availableChartTypes in the aggregation <code>availableChartTypes<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.P13nDimMeasurePanel"},"addDimMeasureItem":{"!description":"Adds some dimMeasureItem to the aggregation <code>dimMeasureItems<\/code>.","!static":false,"!category":"function","!type":"fn(oDimMeasureItem: sap.m.P13nDimMeasureItem) -> sap.m.P13nDimMeasurePanel","parameters":{"oDimMeasureItem":"type: sap.m.P13nDimMeasureItem, description: the dimMeasureItem to add; if empty, nothing is inserted"}},"!constructorDescription":"Constructor for a new P13nDimMeasurePanel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getChartTypeKey chartTypeKey} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getDimMeasureItems dimMeasureItems} : sap.m.P13nDimMeasureItem[]<\/li>\n<li>{@link #getAvailableChartTypes availableChartTypes} : sap.ui.core.Item[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.P13nPanel#constructor sap.m.P13nPanel}\ncan be used as well.","insertAvailableChartType":{"!description":"Inserts a availableChartType into the aggregation <code>availableChartTypes<\/code>.","!static":false,"!category":"function","!type":"fn(oAvailableChartType: sap.ui.core.Item, iIndex: Number) -> sap.m.P13nDimMeasurePanel","parameters":{"oAvailableChartType":"type: sap.ui.core.Item, description: the availableChartType to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the availableChartType should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the availableChartType is inserted at position 0; for a value\n             greater than the current size of the aggregation, the availableChartType is inserted at\n             the last position"}},"indexOfDimMeasureItem":{"!description":"Checks for the provided <code>sap.m.P13nDimMeasureItem<\/code> in the aggregation <code>dimMeasureItems<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oDimMeasureItem: sap.m.P13nDimMeasureItem) -> Number","parameters":{"oDimMeasureItem":"type: sap.m.P13nDimMeasureItem, description: The dimMeasureItem whose index is looked for"}},"insertDimMeasureItem":{"!description":"Inserts a dimMeasureItem into the aggregation <code>dimMeasureItems<\/code>.","!static":false,"!category":"function","!type":"fn(oDimMeasureItem: sap.m.P13nDimMeasureItem, iIndex: Number) -> sap.m.P13nDimMeasurePanel","parameters":{"oDimMeasureItem":"type: sap.m.P13nDimMeasureItem, description: the dimMeasureItem to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the dimMeasureItem should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the dimMeasureItem is inserted at position 0; for a value\n             greater than the current size of the aggregation, the dimMeasureItem is inserted at\n             the last position"}},"!description":"The P13nDimMeasurePanel control is used to define chart-specific settings like chart type, the visibility, the order and roles of\n       dimensions and measures for table personalization.","getMetadata":{"!description":"Returns a metadata object for class sap.m.P13nDimMeasurePanel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAvailableChartTypes":{"!description":"Gets content of aggregation <code>availableChartTypes<\/code>.\n\nSpecifies available chart types.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"getDimMeasureItems":{"!description":"Gets content of aggregation <code>dimMeasureItems<\/code>.\n\nList of columns that has been changed.","!static":false,"!category":"function","!type":"fn() -> [sap.m.P13nDimMeasureItem]"},"extend":{"!description":"Creates a new subclass of class sap.m.P13nDimMeasurePanel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.P13nPanel.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"removeAllDimMeasureItems":{"!description":"Removes all the controls from the aggregation <code>dimMeasureItems<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.P13nDimMeasureItem]"},"!module":"sap/m/P13nDimMeasurePanel","!helpDescription":"The P13nDimMeasurePanel control is used to define chart-specific settings like chart type, the visibility, the order and roles of\n       dimensions and measures for table personalization.","unbindDimMeasureItems":{"!description":"Unbinds aggregation <code>dimMeasureItems<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.P13nDimMeasurePanel"},"bindDimMeasureItems":{"!description":"Binds aggregation <code>dimMeasureItems<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.P13nDimMeasurePanel","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getChartTypeKey":{"!description":"Gets current value of property <code>chartTypeKey<\/code>.\n\nSpecifies a chart type key.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"removeDimMeasureItem":{"!description":"Removes a dimMeasureItem from the aggregation <code>dimMeasureItems<\/code>.","!static":false,"!category":"function","!type":"fn(vDimMeasureItem: Number | String | sap.m.P13nDimMeasureItem) -> sap.m.P13nDimMeasureItem","parameters":{"vDimMeasureItem":"type: int|string|sap.m.P13nDimMeasureItem, description: The dimMeasureItemto remove or its index or id"}}},"sap.m.semantic.FlagAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.FlagAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticToggleButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.FlagAction"},"sap.m.P13nGroupPanel_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.P13nGroupPanel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.P13nPanel.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.P13nGroupPanel"},"sap.m.semantic.ShareInJamAction":{"!description":"A ShareInJamAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","extend":{"!description":"Creates a new subclass of class sap.m.semantic.ShareInJamAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.ShareInJamAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new ShareInJamAction.","!module":"sap/m/semantic/ShareInJamAction","!helpDescription":"A ShareInJamAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","!proto":"sap.m.semantic.SemanticButton","!category":"class"},"sap.m.Page_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.Page with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.Page"},"sap.m.semantic.MainAction":{"!description":"A MainAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","extend":{"!description":"Creates a new subclass of class sap.m.semantic.MainAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.MainAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new MainAction.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.SemanticButton#constructor sap.m.semantic.SemanticButton}\ncan be used as well.","!module":"sap/m/semantic/MainAction","!helpDescription":"A MainAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nButton text","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.m.semantic.SemanticButton","!category":"class","setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nButton text\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.m.semantic.MainAction","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.m.Menu":{"removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.m.MenuItem) -> sap.m.MenuItem","parameters":{"vItem":"type: int|string|sap.m.MenuItem, description: The itemto remove or its index or id"}},"openBy":{"!description":"Opens the <code>Menu<\/code> next to the given control.","!static":false,"!category":"function","!type":"fn(oControl: undefined, bWithKeyboard: undefined)","parameters":{"bWithKeyboard":"type: undefined, description: Whether the menu is opened with a shortcut or not","oControl":"type: undefined, description: The control that defines the position for the menu"}},"detachItemSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>itemSelected<\/code> event of this <code>sap.m.Menu<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Menu","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!proto":"sap.ui.core.Control","destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Menu"},"!category":"class","addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.MenuItem) -> sap.m.Menu","parameters":{"oItem":"type: sap.m.MenuItem, description: the item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nDefines the items contained within this control.","!static":false,"!category":"function","!type":"fn() -> [sap.m.MenuItem]"},"!constructorDescription":"Constructor for a new Menu.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.MenuItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemSelected itemSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:closed closed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nDefines the <code>Menu<\/code> title.","!static":false,"!category":"function","!type":"fn() -> String"},"indexOfItem":{"!description":"Checks for the provided <code>sap.m.MenuItem<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.MenuItem) -> Number","parameters":{"oItem":"type: sap.m.MenuItem, description: The item whose index is looked for"}},"bindItems":{"!description":"Binds aggregation <code>items<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.Menu","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"close":{"!description":"Closes the <code>Menu<\/code>.","!static":false,"!category":"function","!type":"fn()"},"!description":"The <code>sap.m.Menu<\/code> control represents a hierarchical menu.\nWhen opened on mobile devices it occupies the whole screen.","init":{"!description":"Initializes the control.","!static":false,"!category":"function","!type":"fn()"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.Menu.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"unbindItems":{"!description":"Unbinds aggregation <code>items<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.Menu"},"fireClosed":{"!description":"Fires event <code>closed<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Menu","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setTitle":{"!description":"Sets the title of the <code>Menu<\/code>.","!static":false,"!category":"function","!type":"fn(sTitle: String)","parameters":{"sTitle":"type: String, description: The new title of the <code>Menu<\/code>"}},"attachClosed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>closed<\/code> event of this <code>sap.m.Menu<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Menu<\/code> itself.\n\nFired when the menu is closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Menu","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Menu<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.MenuItem]"},"extend":{"!description":"Creates a new subclass of class sap.m.Menu with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"attachItemSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>itemSelected<\/code> event of this <code>sap.m.Menu<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Menu<\/code> itself.\n\nFired when a <code>MenuItem<\/code> is selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Menu","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Menu<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!module":"sap/m/Menu","detachClosed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>closed<\/code> event of this <code>sap.m.Menu<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Menu","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!helpDescription":"The <code>sap.m.Menu<\/code> control represents a hierarchical menu.\nWhen opened on mobile devices it occupies the whole screen.","fireItemSelected":{"!description":"Fires event <code>itemSelected<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>item<\/code> of type <code>sap.m.MenuItem<\/code>The <code>MenuItem<\/code> which was selected.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Menu","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.MenuItem, iIndex: Number) -> sap.m.Menu","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position","oItem":"type: sap.m.MenuItem, description: the item to insert; if empty, nothing is inserted"}}},"sap.m.semantic.DiscussInJamAction":{"!description":"A DiscussInJamAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","extend":{"!description":"Creates a new subclass of class sap.m.semantic.DiscussInJamAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.DiscussInJamAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new DiscussInJamAction.","!module":"sap/m/semantic/DiscussInJamAction","!helpDescription":"A DiscussInJamAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","!proto":"sap.m.semantic.SemanticButton","!category":"class"},"sap.m.semantic.CancelAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.CancelAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.CancelAction"},"sap.m.semantic.PositiveAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.PositiveAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.PositiveAction"},"sap.m.OverflowToolbar":{"!description":"The OverflowToolbar control is a container based on sap.m.Toolbar, that provides overflow when its content does not fit in the visible area.\n\nNote: It is recommended that you use OverflowToolbar over {@link sap.m.Toolbar}, unless you want to avoid overflow in favor of shrinking.","extend":{"!description":"Creates a new subclass of class sap.m.OverflowToolbar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Toolbar.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.OverflowToolbar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new Overflow Toolbar\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Toolbar#constructor sap.ui.core.Toolbar}\ncan be used as well.","!module":"sap/m/OverflowToolbar","!helpDescription":"The OverflowToolbar control is a container based on sap.m.Toolbar, that provides overflow when its content does not fit in the visible area.\n\nNote: It is recommended that you use OverflowToolbar over {@link sap.m.Toolbar}, unless you want to avoid overflow in favor of shrinking.","!proto":"sap.ui.core.Toolbar","!category":"class"},"sap.m.PopinDisplay":{"!description":"Defines the display of table pop-ins","!module":"sap/m/library","WithoutHeader":{"!description":"Inside the table popin, only the cell content will be visible.","!category":"enum","!type":"String"},"Block":{"!description":"Inside the table popin, header is displayed at the first line and cell content is displayed at the next line.","!category":"enum","!type":"String"},"!category":"static class","Inline":{"!description":"Inside the table popin, cell content is displayed next to the header in the same line. Note: If there is not enough space for the cell content then it jumps to the next line.","!category":"enum","!type":"String"}},"sap.m.DraftIndicator":{"!description":"A draft indicator is {@link sap.m.Label}.","getMetadata":{"!description":"Returns a metadata object for class sap.m.DraftIndicator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getMinDisplayTime":{"!description":"Gets current value of property <code>minDisplayTime<\/code>.\n\nMinimum time in milliseconds for showing the draft indicator\n\nDefault value is <code>1500<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!proto":"sap.ui.core.Control","!category":"class","showDraftSaved":{"!description":"Sets the indicator in \"Saved\" state","!static":false,"!category":"function","!type":"fn()"},"extend":{"!description":"Creates a new subclass of class sap.m.DraftIndicator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new DraftIndicator.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getState state} : sap.m.DraftIndicatorState (default: Clear)<\/li>\n<li>{@link #getMinDisplayTime minDisplayTime} : int (default: 1500)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getState":{"!description":"Gets current value of property <code>state<\/code>.\n\nState of the indicator. Could be \"Saving\", \"Saved\" and \"Clear\".\n\nDefault value is <code>Clear<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.DraftIndicatorState"},"!module":"sap/m/DraftIndicator","!helpDescription":"A draft indicator is {@link sap.m.Label}.","showDraftSaving":{"!description":"Sets the indicator in \"Saving...\" state","!static":false,"!category":"function","!type":"fn()"},"setMinDisplayTime":{"!description":"Sets a new value for property <code>minDisplayTime<\/code>.\n\nMinimum time in milliseconds for showing the draft indicator\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1500<\/code>.","!static":false,"!category":"function","!type":"fn(iMinDisplayTime: Number) -> sap.m.DraftIndicator","parameters":{"iMinDisplayTime":"type: int, description: New value for property <code>minDisplayTime<\/code>"}},"clearDraftState":{"!description":"Clears the indicator state","!static":false,"!category":"function","!type":"fn()"}},"sap.m.ActionSelect":{"!description":"The ActionSelect control provides a list of predefined items that allows end users to choose options and additionally trigger some actions.","extend":{"!description":"Creates a new subclass of class sap.m.ActionSelect with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Select.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.ActionSelect.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new ActionSelect.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Select#constructor sap.m.Select}\ncan be used as well.","!module":"sap/m/ActionSelect","getButtons":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"!helpDescription":"The ActionSelect control provides a list of predefined items that allows end users to choose options and additionally trigger some actions.","!proto":"sap.m.Select","removeButton":{"!description":"Button to be removed from the ActionSelect content.","!static":false,"!category":"function","!type":"fn(vButton: Number | String | sap.m.Button) -> String","parameters":{"vButton":"type: int|string|sap.m.Button, description: The button to remove or its index or id."}},"!category":"class","addButton":{"!description":"Adds some button into the association <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn(vButton: String | sap.m.Button) -> sap.m.ActionSelect","parameters":{"vButton":"type: string|sap.m.Button, description: the buttons to add; if empty, nothing is inserted"}},"removeAllButtons":{"!description":"Remove all buttons from the ActionSelect.","!static":false,"!category":"function","!type":"fn() -> [String]"}},"sap.m.Shell_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.Shell with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.Shell"},"sap.m.ImageMode":{"!description":"Determines how the source image is used on the output DOM element.","!module":"sap/m/library","Background":{"!description":"The image is rendered with 'span' tag and the 'src' property is set to the 'background-image' CSS style on the output DOM element","!category":"enum","!type":"String"},"!category":"static class","Image":{"!description":"The image is rendered with 'img' tag and the 'src' property is set to the src attribute on the output DOM element.","!category":"enum","!type":"String"}},"sap.m.OverflowToolbar_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.OverflowToolbar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Toolbar.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.OverflowToolbar"},"sap.m.Title_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.Title with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.Title"},"sap.m.FeedListItem":{"getMaxCharacters":{"!description":"Gets current value of property <code>maxCharacters<\/code>.\n\nThe expand and collapse feature is set by default and uses 300 characters on mobile devices and 500 characters on desktops as limits. Based on these values, the text of the FeedListItem is collapsed once text reaches these limits. In this case, only the specified number of characters is displayed. By clicking on the text link More, the entire text can be displayed. The text link Less collapses the text. The application is able to set the value to its needs.","!static":false,"!category":"function","!type":"fn() -> Number"},"setShowIcon":{"!description":"Sets a new value for property <code>showIcon<\/code>.\n\nIf set to \"true\" (default), icons will be displayed, if set to false icons are hidden\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowIcon: Boolean) -> sap.m.FeedListItem","parameters":{"bShowIcon":"type: boolean, description: New value for property <code>showIcon<\/code>"}},"setUnread":{"!description":"Redefinition of sap.m.ListItemBase.setUnread: Unread is not supported for FeedListItem","!static":false,"!category":"function","!type":"fn(value: Boolean) -> sap.m.FeedListItem","parameters":{"value":"type: boolean, description: new value for property unread is ignored"}},"!proto":"sap.m.ListItemBase","!category":"class","getIconDensityAware":{"!description":"Gets current value of property <code>iconDensityAware<\/code>.\n\nBy default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server.\n\nIf bandwidth is the key for the application, set this value to false.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachIconPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>iconPress<\/code> event of this <code>sap.m.FeedListItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.FeedListItem<\/code> itself.\n\nEvent is fired when the icon is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.FeedListItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.FeedListItem<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachSenderPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>senderPress<\/code> event of this <code>sap.m.FeedListItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.FeedListItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new FeedListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getActiveIcon activeIcon} : sap.ui.core.URI<\/li>\n<li>{@link #getSender sender} : string<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getInfo info} : string<\/li>\n<li>{@link #getTimestamp timestamp} : string<\/li>\n<li>{@link #getSenderActive senderActive} : boolean (default: true)<\/li>\n<li>{@link #getIconActive iconActive} : boolean (default: true)<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getShowIcon showIcon} : boolean (default: true)<\/li>\n<li>{@link #getMaxCharacters maxCharacters} : int<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:senderPress senderPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:iconPress iconPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well.","fireIconPress":{"!description":"Fires event <code>iconPress<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>domRef<\/code> of type <code>string<\/code>Dom reference of the feed item's icon to be used for positioning.<\/li>\n<li><code>getDomRef<\/code> of type <code>function<\/code>Function to retrieve the DOM reference for the <code>iconPress<\/code> event.\nThe function returns the DOM element of the icon or null<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.FeedListItem","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setIconDensityAware":{"!description":"Sets a new value for property <code>iconDensityAware<\/code>.\n\nBy default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server.\n\nIf bandwidth is the key for the application, set this value to false.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bIconDensityAware: Boolean) -> sap.m.FeedListItem","parameters":{"bIconDensityAware":"type: boolean, description: New value for property <code>iconDensityAware<\/code>"}},"setActiveIcon":{"!description":"Sets a new value for property <code>activeIcon<\/code>.\n\nIcon displayed when the list item is active.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sActiveIcon: sap.ui.core.URI) -> sap.m.FeedListItem","parameters":{"sActiveIcon":"type: sap.ui.core.URI, description: New value for property <code>activeIcon<\/code>"}},"getTimestamp":{"!description":"Gets current value of property <code>timestamp<\/code>.\n\nThis chunks timestamp","!static":false,"!category":"function","!type":"fn() -> String"},"getActiveIcon":{"!description":"Gets current value of property <code>activeIcon<\/code>.\n\nIcon displayed when the list item is active.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"detachIconPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>iconPress<\/code> event of this <code>sap.m.FeedListItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.FeedListItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setTimestamp":{"!description":"Sets a new value for property <code>timestamp<\/code>.\n\nThis chunks timestamp\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTimestamp: String) -> sap.m.FeedListItem","parameters":{"sTimestamp":"type: string, description: New value for property <code>timestamp<\/code>"}},"!description":"The control provides a set of properties for text, sender information, time stamp.\nBeginning with release 1.23 the new feature expand / collapse was introduced, which uses the property maxCharacters.","getMetadata":{"!description":"Returns a metadata object for class sap.m.FeedListItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setSenderActive":{"!description":"Sets a new value for property <code>senderActive<\/code>.\n\nIf true, sender string is an link, which will fire 'senderPress' events. If false, sender is normal text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bSenderActive: Boolean) -> sap.m.FeedListItem","parameters":{"bSenderActive":"type: boolean, description: New value for property <code>senderActive<\/code>"}},"getInfo":{"!description":"Gets current value of property <code>info<\/code>.\n\nThe Info text.","!static":false,"!category":"function","!type":"fn() -> String"},"getSenderActive":{"!description":"Gets current value of property <code>senderActive<\/code>.\n\nIf true, sender string is an link, which will fire 'senderPress' events. If false, sender is normal text.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nThe FeedListItem text.","!static":false,"!category":"function","!type":"fn() -> String"},"setType":{"!description":"Redefinition of sap.m.ListItemBase.setType: type = \"sap.m.ListType.Navigation\" behaves like type = \"sap.m.ListType.Active\" for a FeedListItem","!static":false,"!category":"function","!type":"fn(type: sap.m.ListType) -> sap.m.FeedListItem","parameters":{"type":"type: sap.m.ListType, description: new value for property type"}},"getIconActive":{"!description":"Gets current value of property <code>iconActive<\/code>.\n\nIf true, icon is an link, which will fire 'iconPress' events. If false, icon is normal image\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nIcon to be displayed as graphical element within the FeedListItem. This can be an image or an icon from the icon font. If no icon is provided, a default person-placeholder icon is displayed.\nIcon is only shown if showIcon = true.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"getShowIcon":{"!description":"Gets current value of property <code>showIcon<\/code>.\n\nIf set to \"true\" (default), icons will be displayed, if set to false icons are hidden\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachSenderPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>senderPress<\/code> event of this <code>sap.m.FeedListItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.FeedListItem<\/code> itself.\n\nEvent is fired when name of the sender is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.FeedListItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.FeedListItem<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"extend":{"!description":"Creates a new subclass of class sap.m.FeedListItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nIcon to be displayed as graphical element within the FeedListItem. This can be an image or an icon from the icon font. If no icon is provided, a default person-placeholder icon is displayed.\nIcon is only shown if showIcon = true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.m.FeedListItem","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"fireSenderPress":{"!description":"Fires event <code>senderPress<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>domRef<\/code> of type <code>string<\/code>Dom reference of the feed item's sender string to be used for positioning.<\/li>\n<li><code>getDomRef<\/code> of type <code>function<\/code>Function to retrieve the DOM reference for the <code>senderPress<\/code> event.\nThe function returns the DOM element of the sender link or null<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.FeedListItem","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!module":"sap/m/FeedListItem","!helpDescription":"The control provides a set of properties for text, sender information, time stamp.\nBeginning with release 1.23 the new feature expand / collapse was introduced, which uses the property maxCharacters.","setInfo":{"!description":"Sets a new value for property <code>info<\/code>.\n\nThe Info text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sInfo: String) -> sap.m.FeedListItem","parameters":{"sInfo":"type: string, description: New value for property <code>info<\/code>"}},"setSender":{"!description":"Sets a new value for property <code>sender<\/code>.\n\nSender of the chunk\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSender: String) -> sap.m.FeedListItem","parameters":{"sSender":"type: string, description: New value for property <code>sender<\/code>"}},"getSender":{"!description":"Gets current value of property <code>sender<\/code>.\n\nSender of the chunk","!static":false,"!category":"function","!type":"fn() -> String"},"setMaxCharacters":{"!description":"Sets a new value for property <code>maxCharacters<\/code>.\n\nThe expand and collapse feature is set by default and uses 300 characters on mobile devices and 500 characters on desktops as limits. Based on these values, the text of the FeedListItem is collapsed once text reaches these limits. In this case, only the specified number of characters is displayed. By clicking on the text link More, the entire text can be displayed. The text link Less collapses the text. The application is able to set the value to its needs.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iMaxCharacters: Number) -> sap.m.FeedListItem","parameters":{"iMaxCharacters":"type: int, description: New value for property <code>maxCharacters<\/code>"}},"setIconActive":{"!description":"Sets a new value for property <code>iconActive<\/code>.\n\nIf true, icon is an link, which will fire 'iconPress' events. If false, icon is normal image\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bIconActive: Boolean) -> sap.m.FeedListItem","parameters":{"bIconActive":"type: boolean, description: New value for property <code>iconActive<\/code>"}},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nThe FeedListItem text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.m.FeedListItem","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.m.TextArea_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.TextArea with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.InputBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.TextArea"},"sap.m.semantic.IFilter":{"!description":"\n  Marker interface for controls which are suitable as items of the filter aggregation of sap.m.Semantic.MasterPage.","!module":"sap/m/library","!category":"static class"},"sap.m.ActionListItem":{"!description":"The <code>sap.m.ActionListItem<\/code> can be used like a <code>button<\/code> to fire actions when pressed.\n<b>Note:<\/b> The inherited <code>selected<\/code> property of the <code>sap.m.ListItemBase<\/code> is not supported.","extend":{"!description":"Creates a new subclass of class sap.m.ActionListItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.ActionListItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new ActionListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well.","!module":"sap/m/ActionListItem","!helpDescription":"The <code>sap.m.ActionListItem<\/code> can be used like a <code>button<\/code> to fire actions when pressed.\n<b>Note:<\/b> The inherited <code>selected<\/code> property of the <code>sap.m.ListItemBase<\/code> is not supported.","getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nDefines the text that appears in the control.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.m.ListItemBase","!category":"class","getMode":{"!description":"Determines item specific mode\n\nActionListItems are not selectable because they are command controls (like Button or Link) so triggering the associated command, rather than selection is\nappropriate to happen upon user action on these items. By overwriting isSelectable (inherited from ListItemBase) we exclude the item from processing\nspecific to selectable list-items.","!static":false,"!category":"function","!type":"fn()"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nDefines the text that appears in the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.m.ActionListItem","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.m.TableSelectDialog_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.TableSelectDialog with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.TableSelectDialog"},"sap.m.Text":{"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"getWrapping":{"!description":"Gets current value of property <code>wrapping<\/code>.\n\nEnables text wrapping.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","getTextAlign":{"!description":"Gets current value of property <code>textAlign<\/code>.\n\nSets the horizontal alignment of the text.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextAlign"},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nSets the width of the Text control. By default, the Text control uses the full width available. Set this property to restrict the width to a custom value.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"clampText":{"!description":"Clamps the wrapping text according to max lines and returns the found ellipsis position.\n\nParameters can be used for better performance.","!static":false,"!category":"function","!type":"fn(oDomRef?: HTMLElement, iStartPos?: Number, iEndPos?: Number) -> Number | undefined","parameters":{"iStartPos":"type: number, description: Start point of the ellipsis search.","iEndPos":"type: number, description: End point of the ellipsis search.","oDomRef":"type: HTMLElement, description: DOM reference of the text container."}},"clampHeight":{"!description":"Sets the max-height to support maxLines property.","!static":false,"!category":"function","!type":"fn(oDomRef?: HTMLElement) -> Number","parameters":{"oDomRef":"type: HTMLElement, description: DOM reference of the text container."}},"!constructorDescription":"Constructor for a new Text.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getWrapping wrapping} : boolean (default: true)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMaxLines maxLines} : int<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","unbindText":{"!description":"Unbinds property <code>text<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.Text"},"setWrapping":{"!description":"Sets a new value for property <code>wrapping<\/code>.\n\nEnables text wrapping.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bWrapping: Boolean) -> sap.m.Text","parameters":{"bWrapping":"type: boolean, description: New value for property <code>wrapping<\/code>"}},"!description":"The Text control can be used for embedding longer text paragraphs, that need text wrapping, into your application.","getMetadata":{"!description":"Returns a metadata object for class sap.m.Text.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"hasMaxLines":{"!description":"Determines whether max lines should be rendered or not.","!static":false,"!category":"function","!type":"fn() -> HTMLElement | null"},"getClampHeight":{"!description":"Returns the max height according to max lines and line height calculation.\n\nThis is not calculated max-height!","!static":false,"!category":"function","!type":"fn(oDomRef?: HTMLElement) -> Number","parameters":{"oDomRef":"type: HTMLElement, description: DOM reference of the text container."}},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nDetermines the text to be displayed.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setMaxLines":{"!description":"Sets a new value for property <code>maxLines<\/code>.\n\nLimits the number of lines for wrapping texts.\n\nNote: The multi-line overflow indicator depends on the browser line clamping support. For such browsers, this will be shown as ellipsis, for the other browsers the overflow will just be hidden.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iMaxLines: Number) -> sap.m.Text","parameters":{"iMaxLines":"type: int, description: New value for property <code>maxLines<\/code>"}},"setTextAlign":{"!description":"Sets a new value for property <code>textAlign<\/code>.\n\nSets the horizontal alignment of the text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn(sTextAlign: sap.ui.core.TextAlign) -> sap.m.Text","parameters":{"sTextAlign":"type: sap.ui.core.TextAlign, description: New value for property <code>textAlign<\/code>"}},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nAvailable options for the text direction are LTR and RTL. By default the control inherits the text direction from its parent control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.m.Text","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"getMaxLines":{"!description":"Gets current value of property <code>maxLines<\/code>.\n\nLimits the number of lines for wrapping texts.\n\nNote: The multi-line overflow indicator depends on the browser line clamping support. For such browsers, this will be shown as ellipsis, for the other browsers the overflow will just be hidden.","!static":false,"!category":"function","!type":"fn() -> Number"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nSets the width of the Text control. By default, the Text control uses the full width available. Set this property to restrict the width to a custom value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.Text","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.Text with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setNodeValue":{"!description":"To prevent from the layout thrashing of the textContent call, this method\nfirst tries to set the nodeValue of the first child if it exists.","!static":true,"!category":"function","!type":"fn(oDomRef: HTMLElement, sNodeValue?: String)","parameters":{"sNodeValue":"type: String, description: new Node value.","oDomRef":"type: HTMLElement, description: DOM reference of the text node container."}},"getLineHeight":{"!description":"Caches and returns the computed line height of the text.","!static":false,"!category":"function","!type":"fn(oDomRef?: HTMLElement) -> Number","parameters":{"oDomRef":"type: HTMLElement, description: DOM reference of the text container."}},"!module":"sap/m/Text","getTextDomRef":{"!description":"Returns the text node container's DOM reference.\n\nThis can be different from getDomRef when inner wrapper is needed.","!static":false,"!category":"function","!type":"fn() -> HTMLElement | null"},"!helpDescription":"The Text control can be used for embedding longer text paragraphs, that need text wrapping, into your application.","bindText":{"!description":"Binds property <code>text<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.Text","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nAvailable options for the text direction are LTR and RTL. By default the control inherits the text direction from its parent control.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nDetermines the text to be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.m.Text","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.m.QuickViewPage":{"insertGroup":{"!description":"Inserts a group into the aggregation <code>groups<\/code>.","!static":false,"!category":"function","!type":"fn(oGroup: sap.m.QuickViewGroup, iIndex: Number) -> sap.m.QuickViewPage","parameters":{"oGroup":"type: sap.m.QuickViewGroup, description: the group to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the group should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the group is inserted at position 0; for a value\n             greater than the current size of the aggregation, the group is inserted at\n             the last position"}},"!proto":"sap.ui.core.Control","setCrossAppNavCallback":{"!description":"Sets a new value for property <code>crossAppNavCallback<\/code>.\n\nSpecifies the application which provides target and param configuration  for cross-application navigation from the 'page header'.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oCrossAppNavCallback: Object) -> sap.m.QuickViewPage","parameters":{"oCrossAppNavCallback":"type: object, description: New value for property <code>crossAppNavCallback<\/code>"}},"getTitleUrl":{"!description":"Gets current value of property <code>titleUrl<\/code>.\n\nSpecifies the URL which opens when the title or the thumbnail is clicked.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","setDescription":{"!description":"Sets a new value for property <code>description<\/code>.\n\nSpecifies the text displayed under the header of the content section\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sDescription: String) -> sap.m.QuickViewPage","parameters":{"sDescription":"type: string, description: New value for property <code>description<\/code>"}},"getDescription":{"!description":"Gets current value of property <code>description<\/code>.\n\nSpecifies the text displayed under the header of the content section\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setHeader":{"!description":"Sets a new value for property <code>header<\/code>.\n\nSpecifies the text displayed in the header of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sHeader: String) -> sap.m.QuickViewPage","parameters":{"sHeader":"type: string, description: New value for property <code>header<\/code>"}},"getHeader":{"!description":"Gets current value of property <code>header<\/code>.\n\nSpecifies the text displayed in the header of the control.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new QuickViewPage.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPageId pageId} : string (default: )<\/li>\n<li>{@link #getHeader header} : string (default: )<\/li>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getTitleUrl titleUrl} : string (default: )<\/li>\n<li>{@link #getCrossAppNavCallback crossAppNavCallback} : object<\/li>\n<li>{@link #getDescription description} : string (default: )<\/li>\n<li>{@link #getIcon icon} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getGroups groups} : sap.m.QuickViewGroup[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nSpecifies the text displayed in the header of the content section of the control.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getCrossAppNavCallback":{"!description":"Gets current value of property <code>crossAppNavCallback<\/code>.\n\nSpecifies the application which provides target and param configuration  for cross-application navigation from the 'page header'.","!static":false,"!category":"function","!type":"fn() -> Object"},"addGroup":{"!description":"Adds some group to the aggregation <code>groups<\/code>.","!static":false,"!category":"function","!type":"fn(oGroup: sap.m.QuickViewGroup) -> sap.m.QuickViewPage","parameters":{"oGroup":"type: sap.m.QuickViewGroup, description: the group to add; if empty, nothing is inserted"}},"getGroups":{"!description":"Gets content of aggregation <code>groups<\/code>.\n\nQuickViewGroup consists of a title (optional) and an entity of group elements.","!static":false,"!category":"function","!type":"fn() -> [sap.m.QuickViewGroup]"},"!description":"QuickViewPage consists of  a page header, an object icon or image,\nan object name with short description, and an object information divided in groups.\nThe control uses the sap.m.SimpleForm control to display information.","indexOfGroup":{"!description":"Checks for the provided <code>sap.m.QuickViewGroup<\/code> in the aggregation <code>groups<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oGroup: sap.m.QuickViewGroup) -> Number","parameters":{"oGroup":"type: sap.m.QuickViewGroup, description: The group whose index is looked for"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.QuickViewPage.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setTitleUrl":{"!description":"Sets a new value for property <code>titleUrl<\/code>.\n\nSpecifies the URL which opens when the title or the thumbnail is clicked.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sTitleUrl: String) -> sap.m.QuickViewPage","parameters":{"sTitleUrl":"type: string, description: New value for property <code>titleUrl<\/code>"}},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nSpecifies the text displayed in the header of the content section of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.QuickViewPage","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nSpecifies the URL of the icon displayed under the header of the page\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.m.QuickViewPage with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nSpecifies the URL of the icon displayed under the header of the page\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sIcon: String) -> sap.m.QuickViewPage","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"}},"bindGroups":{"!description":"Binds aggregation <code>groups<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.QuickViewPage","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"!module":"sap/m/QuickViewPage","!helpDescription":"QuickViewPage consists of  a page header, an object icon or image,\nan object name with short description, and an object information divided in groups.\nThe control uses the sap.m.SimpleForm control to display information.","removeGroup":{"!description":"Removes a group from the aggregation <code>groups<\/code>.","!static":false,"!category":"function","!type":"fn(vGroup: Number | String | sap.m.QuickViewGroup) -> sap.m.QuickViewGroup","parameters":{"vGroup":"type: int|string|sap.m.QuickViewGroup, description: The groupto remove or its index or id"}},"destroyGroups":{"!description":"Destroys all the groups in the aggregation <code>groups<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.QuickViewPage"},"removeAllGroups":{"!description":"Removes all the controls from the aggregation <code>groups<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.QuickViewGroup]"},"getPageId":{"!description":"Gets current value of property <code>pageId<\/code>.\n\nPage id\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"unbindGroups":{"!description":"Unbinds aggregation <code>groups<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.QuickViewPage"},"setPageId":{"!description":"Sets a new value for property <code>pageId<\/code>.\n\nPage id\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sPageId: String) -> sap.m.QuickViewPage","parameters":{"sPageId":"type: string, description: New value for property <code>pageId<\/code>"}}},"sap.m.ThreeColumnLayoutType":{"!description":"Types of three-column layout for the sap.m.FlexibleColumnLayout control","MidColumnEmphasized":{"!description":"Emphasized middle column (midColumn) - column layout 25/50/25","!category":"enum","!type":"String"},"!module":"sap/m/library","!category":"static class","EndColumnEmphasized":{"!description":"Emphasized last column (endColumn) - column layout 25/25/50","!category":"enum","!type":"String"}},"sap.m.ObjectNumber_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ObjectNumber with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ObjectNumber"},"sap.m.ImageContent_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ImageContent with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ImageContent"},"sap.m.PlanningCalendar":{"getStartDate":{"!description":"Gets current value of property <code>startDate<\/code>.\n\nStart date of the row, as JavaScript date object. As a default the current date is used.","!static":false,"!category":"function","!type":"fn() -> Object"},"detachViewChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>viewChange<\/code> event of this <code>sap.m.PlanningCalendar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.PlanningCalendar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getShowIntervalHeaders":{"!description":"Gets current value of property <code>showIntervalHeaders<\/code>.\n\nIf set, interval headers are shown like specified in <code>showEmptyIntervalHeaders<\/code>.\n\nIf not set, no interval headers are shown even if <code>intervalHeaders<\/code> are assigned.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllToolbarContent":{"!description":"Removes all the controls from the aggregation <code>toolbarContent<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"attachAppointmentSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>appointmentSelect<\/code> event of this <code>sap.m.PlanningCalendar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.PlanningCalendar<\/code> itself.\n\nFired if an appointment was selected","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.PlanningCalendar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.PlanningCalendar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"indexOfSpecialDate":{"!description":"Checks for the provided <code>sap.ui.unified.DateTypeRange<\/code> in the aggregation <code>specialDates<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSpecialDate: sap.ui.unified.DateTypeRange) -> Number","parameters":{"oSpecialDate":"type: sap.ui.unified.DateTypeRange, description: The specialDate whose index is looked for"}},"fireStartDateChange":{"!description":"Fires event <code>startDateChange<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.PlanningCalendar","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"removeAllRows":{"!description":"Removes all the controls from the aggregation <code>rows<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.PlanningCalendarRow]"},"setShowRowHeaders":{"!description":"Sets a new value for property <code>showRowHeaders<\/code>.\n\nIf set, headers of the <code>PlanningCalendarRows<\/code> are shown. This means the column with the headers is shown.\n\nIf not set, the header column is not shown at all, even if header information is provided.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowRowHeaders: Boolean) -> sap.m.PlanningCalendar","parameters":{"bShowRowHeaders":"type: boolean, description: New value for property <code>showRowHeaders<\/code>"}},"removeToolbarContent":{"!description":"Removes a toolbarContent from the aggregation <code>toolbarContent<\/code>.","!static":false,"!category":"function","!type":"fn(vToolbarContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vToolbarContent":"type: int|string|sap.ui.core.Control, description: The toolbarContentto remove or its index or id"}},"addToolbarContent":{"!description":"Adds some toolbarContent to the aggregation <code>toolbarContent<\/code>.","!static":false,"!category":"function","!type":"fn(oToolbarContent: sap.ui.core.Control) -> sap.m.PlanningCalendar","parameters":{"oToolbarContent":"type: sap.ui.core.Control, description: the toolbarContent to add; if empty, nothing is inserted"}},"getViewKey":{"!description":"Gets current value of property <code>viewKey<\/code>.\n\nKey of the <code>PlanningCalendarView<\/code> used for the output. The default value uses a default view.\nIf you are using own views, the keys of these views must be used instead.\n\nDefault value is <code>sap.ui.unified.CalendarIntervalType.Hour<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"attachViewChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>viewChange<\/code> event of this <code>sap.m.PlanningCalendar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.PlanningCalendar<\/code> itself.\n\n<code>viewKey<\/code> was changed by user interaction","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.PlanningCalendar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.PlanningCalendar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"The <code>PlanningCalendar<\/code> can display rows with appointments for different persons.\nIt is possible to define different views and switch between the views.\nYou can add your own buttons or other controls to the toolbar.\n\n<b>Note:<\/b> The <code>PlanningCalendar<\/code> uses parts of the <code>sap.ui.unified<\/code> library.\nIf the <code>sap.ui.unified<\/code> library is not loaded before the <code>PlanningCalendar<\/code> is loaded,\nit will be loaded after the <code>PlanningCalendar<\/code> is loaded.\nThis could lead to a waiting time before a <code>PlanningCalendar<\/code> is used for the first time.\nTo prevent this, applications using the <code>PlanningCalendar<\/code> should also load the <code>sap.ui.unified<\/code> library.","setStartDate":{"!description":"Sets a new value for property <code>startDate<\/code>.\n\nStart date of the row, as JavaScript date object. As a default the current date is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oStartDate: Object) -> sap.m.PlanningCalendar","parameters":{"oStartDate":"type: object, description: New value for property <code>startDate<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.PlanningCalendar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"attachIntervalSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>intervalSelect<\/code> event of this <code>sap.m.PlanningCalendar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.PlanningCalendar<\/code> itself.\n\nFired if an interval was selected in the header calendar or in the row","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.PlanningCalendar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.PlanningCalendar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroyRows":{"!description":"Destroys all the rows in the aggregation <code>rows<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.PlanningCalendar"},"destroyToolbarContent":{"!description":"Destroys all the toolbarContent in the aggregation <code>toolbarContent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.PlanningCalendar"},"fireAppointmentSelect":{"!description":"Fires event <code>appointmentSelect<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>appointment<\/code> of type <code>sap.ui.unified.CalendarAppointment<\/code>Selected appointment<\/li>\n<li><code>appointments<\/code> of type <code>sap.ui.unified.CalendarAppointment[]<\/code>Selected appointments in case a group appointment is selected<\/li>\n<li><code>multiSelect<\/code> of type <code>boolean<\/code>If set, the appointment was selected using multiple selection (e.g. Shift + single mouse click),\nmeaning more than the current appointment could be selected.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.PlanningCalendar","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"insertSpecialDate":{"!description":"Inserts a specialDate into the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSpecialDate: sap.ui.unified.DateTypeRange, iIndex: Number) -> sap.m.PlanningCalendar","parameters":{"oSpecialDate":"type: sap.ui.unified.DateTypeRange, description: the specialDate to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the specialDate should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the specialDate is inserted at position 0; for a value\n             greater than the current size of the aggregation, the specialDate is inserted at\n             the last position"}},"getAppointmentsReducedHeight":{"!description":"Gets current value of property <code>appointmentsReducedHeight<\/code>.\n\nIf set the appointments without text (only title) are rendered with a smaller height.\n\n<b>Note:<\/b> On phone devices this property is ignored, appointments are always rendered in full height\nto allow touching.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nHeight of the <code>PlanningCalendar<\/code>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.m.PlanningCalendar","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.PlanningCalendar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"removeView":{"!description":"Removes a view from the aggregation <code>views<\/code>.","!static":false,"!category":"function","!type":"fn(vView: Number | String | sap.m.PlanningCalendarView) -> sap.m.PlanningCalendarView","parameters":{"vView":"type: int|string|sap.m.PlanningCalendarView, description: The viewto remove or its index or id"}},"!module":"sap/m/PlanningCalendar","destroyViews":{"!description":"Destroys all the views in the aggregation <code>views<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.PlanningCalendar"},"!helpDescription":"The <code>PlanningCalendar<\/code> can display rows with appointments for different persons.\nIt is possible to define different views and switch between the views.\nYou can add your own buttons or other controls to the toolbar.\n\n<b>Note:<\/b> The <code>PlanningCalendar<\/code> uses parts of the <code>sap.ui.unified<\/code> library.\nIf the <code>sap.ui.unified<\/code> library is not loaded before the <code>PlanningCalendar<\/code> is loaded,\nit will be loaded after the <code>PlanningCalendar<\/code> is loaded.\nThis could lead to a waiting time before a <code>PlanningCalendar<\/code> is used for the first time.\nTo prevent this, applications using the <code>PlanningCalendar<\/code> should also load the <code>sap.ui.unified<\/code> library.","getNoDataText":{"!description":"Gets current value of property <code>noDataText<\/code>.\n\nThis text is displayed when no rows are assigned.","!static":false,"!category":"function","!type":"fn() -> String"},"attachStartDateChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>startDateChange<\/code> event of this <code>sap.m.PlanningCalendar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.PlanningCalendar<\/code> itself.\n\n<code>startDate<\/code> was changed while navigating in <code>PlanningCalendar<\/code>","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.PlanningCalendar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.PlanningCalendar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getSingleSelection":{"!description":"Gets current value of property <code>singleSelection<\/code>.\n\nIf set, only a single row can be selected\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"selectAllRows":{"!description":"Selects or deselects all <code>PlanningCalendarRows<\/code>.\n\n<b>Note:<\/b> Selection only works if <code>singleSelection<\/code> is not set","!static":false,"!category":"function","!type":"fn(bSelect: Boolean) -> sap.m.PlanningCalendar","parameters":{"bSelect":"type: boolean, description: Indicator showing whether <code>PlanningCalendarRows<\/code> should be selected or deselected"}},"setSingleSelection":{"!description":"Sets a new value for property <code>singleSelection<\/code>.\n\nIf set, only a single row can be selected\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bSingleSelection: Boolean) -> sap.m.PlanningCalendar","parameters":{"bSingleSelection":"type: boolean, description: New value for property <code>singleSelection<\/code>"}},"getMinDate":{"!description":"Gets current value of property <code>minDate<\/code>.\n\nMinimum date that can be shown and selected in the <code>PlanningCalendar<\/code>. This must be a JavaScript date object.\n\n<b>Note:<\/b> If the <code>minDate<\/code> is set to be after the <code>maxDate<\/code>,\nthe <code>maxDate<\/code> is set to the end of the month of the <code>minDate<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"removeSpecialDate":{"!description":"Removes a specialDate from the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn(vSpecialDate: Number | String | sap.ui.unified.DateTypeRange) -> sap.ui.unified.DateTypeRange","parameters":{"vSpecialDate":"type: int|string|sap.ui.unified.DateTypeRange, description: The specialDateto remove or its index or id"}},"setNoDataText":{"!description":"Sets a new value for property <code>noDataText<\/code>.\n\nThis text is displayed when no rows are assigned.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sNoDataText: String) -> sap.m.PlanningCalendar","parameters":{"sNoDataText":"type: string, description: New value for property <code>noDataText<\/code>"}},"!proto":"sap.ui.core.Control","insertToolbarContent":{"!description":"Inserts a toolbarContent into the aggregation <code>toolbarContent<\/code>.","!static":false,"!category":"function","!type":"fn(oToolbarContent: sap.ui.core.Control, iIndex: Number) -> sap.m.PlanningCalendar","parameters":{"oToolbarContent":"type: sap.ui.core.Control, description: the toolbarContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the toolbarContent should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the toolbarContent is inserted at position 0; for a value\n             greater than the current size of the aggregation, the toolbarContent is inserted at\n             the last position"}},"!category":"class","getRows":{"!description":"Gets content of aggregation <code>rows<\/code>.\n\nrows of the <code>PlanningCalendar<\/code>","!static":false,"!category":"function","!type":"fn() -> [sap.m.PlanningCalendarRow]"},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWidth of the <code>PlanningCalendar<\/code>","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setShowIntervalHeaders":{"!description":"Sets a new value for property <code>showIntervalHeaders<\/code>.\n\nIf set, interval headers are shown like specified in <code>showEmptyIntervalHeaders<\/code>.\n\nIf not set, no interval headers are shown even if <code>intervalHeaders<\/code> are assigned.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowIntervalHeaders: Boolean) -> sap.m.PlanningCalendar","parameters":{"bShowIntervalHeaders":"type: boolean, description: New value for property <code>showIntervalHeaders<\/code>"}},"addRow":{"!description":"Adds some row to the aggregation <code>rows<\/code>.","!static":false,"!category":"function","!type":"fn(oRow: sap.m.PlanningCalendarRow) -> sap.m.PlanningCalendar","parameters":{"oRow":"type: sap.m.PlanningCalendarRow, description: the row to add; if empty, nothing is inserted"}},"fireViewChange":{"!description":"Fires event <code>viewChange<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.PlanningCalendar","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setAppointmentsReducedHeight":{"!description":"Sets a new value for property <code>appointmentsReducedHeight<\/code>.\n\nIf set the appointments without text (only title) are rendered with a smaller height.\n\n<b>Note:<\/b> On phone devices this property is ignored, appointments are always rendered in full height\nto allow touching.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bAppointmentsReducedHeight: Boolean) -> sap.m.PlanningCalendar","parameters":{"bAppointmentsReducedHeight":"type: boolean, description: New value for property <code>appointmentsReducedHeight<\/code>"}},"getSpecialDates":{"!description":"Gets content of aggregation <code>specialDates<\/code>.\n\nDate range along with a type to visualize special days in the header calendar.\nIf one day is assigned to more than one type, only the first one will be used.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateTypeRange]"},"setShowEmptyIntervalHeaders":{"!description":"Sets a new value for property <code>showEmptyIntervalHeaders<\/code>.\n\nIf set, interval headers are shown even if no <code>intervalHeaders<\/code> are assigned to the visible time frame.\n\nIf not set, no interval headers are shown if no <code>intervalHeaders<\/code> are assigned.\n\n<b>Note:<\/b> This property is only used if <code>showIntervalHeaders<\/code> is set to <code>true<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowEmptyIntervalHeaders: Boolean) -> sap.m.PlanningCalendar","parameters":{"bShowEmptyIntervalHeaders":"type: boolean, description: New value for property <code>showEmptyIntervalHeaders<\/code>"}},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nHeight of the <code>PlanningCalendar<\/code>","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new <code>PlanningCalendar<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getStartDate startDate} : object<\/li>\n<li>{@link #getViewKey viewKey} : string (default: sap.ui.unified.CalendarIntervalType.Hour)<\/li>\n<li>{@link #getSingleSelection singleSelection} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getShowIntervalHeaders showIntervalHeaders} : boolean (default: true)<\/li>\n<li>{@link #getShowEmptyIntervalHeaders showEmptyIntervalHeaders} : boolean (default: true)<\/li>\n<li>{@link #getShowRowHeaders showRowHeaders} : boolean (default: true)<\/li>\n<li>{@link #getNoDataText noDataText} : string<\/li>\n<li>{@link #getAppointmentsReducedHeight appointmentsReducedHeight} : boolean (default: false)<\/li>\n<li>{@link #getMinDate minDate} : object<\/li>\n<li>{@link #getMaxDate maxDate} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getRows rows} : sap.m.PlanningCalendarRow[]<\/li>\n<li>{@link #getViews views} : sap.m.PlanningCalendarView[]<\/li>\n<li>{@link #getSpecialDates specialDates} : sap.ui.unified.DateTypeRange[]<\/li>\n<li>{@link #getToolbarContent toolbarContent} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:appointmentSelect appointmentSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:intervalSelect intervalSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:rowSelectionChange rowSelectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:startDateChange startDateChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:viewChange viewChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","removeAllViews":{"!description":"Removes all the controls from the aggregation <code>views<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.PlanningCalendarView]"},"getSelectedRows":{"!description":"Returns an array containing the selected rows. If no row is selected, an empty array is returned.","!static":false,"!category":"function","!type":"fn() -> [sap.m.PlanningCalendarRow]"},"getShowRowHeaders":{"!description":"Gets current value of property <code>showRowHeaders<\/code>.\n\nIf set, headers of the <code>PlanningCalendarRows<\/code> are shown. This means the column with the headers is shown.\n\nIf not set, the header column is not shown at all, even if header information is provided.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addSpecialDate":{"!description":"Adds some specialDate to the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn(oSpecialDate: sap.ui.unified.DateTypeRange) -> sap.m.PlanningCalendar","parameters":{"oSpecialDate":"type: sap.ui.unified.DateTypeRange, description: the specialDate to add; if empty, nothing is inserted"}},"removeRow":{"!description":"Removes a row from the aggregation <code>rows<\/code>.","!static":false,"!category":"function","!type":"fn(vRow: Number | String | sap.m.PlanningCalendarRow) -> sap.m.PlanningCalendarRow","parameters":{"vRow":"type: int|string|sap.m.PlanningCalendarRow, description: The rowto remove or its index or id"}},"detachRowSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>rowSelectionChange<\/code> event of this <code>sap.m.PlanningCalendar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.PlanningCalendar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireIntervalSelect":{"!description":"Fires event <code>intervalSelect<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>startDate<\/code> of type <code>object<\/code>Start date of the selected interval, as JavaScript date object.<\/li>\n<li><code>endDate<\/code> of type <code>object<\/code>Interval end date as JavaScript date object<\/li>\n<li><code>subInterval<\/code> of type <code>boolean<\/code>If set, the selected interval is a subinterval<\/li>\n<li><code>row<\/code> of type <code>sap.m.PlanningCalendarRow<\/code>Row of the selected interval<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.PlanningCalendar","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"detachIntervalSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>intervalSelect<\/code> event of this <code>sap.m.PlanningCalendar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.PlanningCalendar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"destroySpecialDates":{"!description":"Destroys all the specialDates in the aggregation <code>specialDates<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.PlanningCalendar"},"getToolbarContent":{"!description":"Gets content of aggregation <code>toolbarContent<\/code>.\n\nThe content of the toolbar.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"detachAppointmentSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>appointmentSelect<\/code> event of this <code>sap.m.PlanningCalendar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.PlanningCalendar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"indexOfView":{"!description":"Checks for the provided <code>sap.m.PlanningCalendarView<\/code> in the aggregation <code>views<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oView: sap.m.PlanningCalendarView) -> Number","parameters":{"oView":"type: sap.m.PlanningCalendarView, description: The view whose index is looked for"}},"getMaxDate":{"!description":"Gets current value of property <code>maxDate<\/code>.\n\nMaximum date that can be shown and selected in the <code>PlanningCalendar<\/code>. This must be a JavaScript date object.\n\n<b>Note:<\/b> If the <code>maxDate<\/code> is set to be before the <code>minDate<\/code>,\nthe <code>minDate<\/code> is set to the begin of the month of the <code>maxDate<\/code>.","!static":false,"!category":"function","!type":"fn() -> Object"},"insertView":{"!description":"Inserts a view into the aggregation <code>views<\/code>.","!static":false,"!category":"function","!type":"fn(oView: sap.m.PlanningCalendarView, iIndex: Number) -> sap.m.PlanningCalendar","parameters":{"oView":"type: sap.m.PlanningCalendarView, description: the view to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the view should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the view is inserted at position 0; for a value\n             greater than the current size of the aggregation, the view is inserted at\n             the last position"}},"setViewKey":{"!description":"Sets a new value for property <code>viewKey<\/code>.\n\nKey of the <code>PlanningCalendarView<\/code> used for the output. The default value uses a default view.\nIf you are using own views, the keys of these views must be used instead.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>sap.ui.unified.CalendarIntervalType.Hour<\/code>.","!static":false,"!category":"function","!type":"fn(sViewKey: String) -> sap.m.PlanningCalendar","parameters":{"sViewKey":"type: string, description: New value for property <code>viewKey<\/code>"}},"indexOfToolbarContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>toolbarContent<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oToolbarContent: sap.ui.core.Control) -> Number","parameters":{"oToolbarContent":"type: sap.ui.core.Control, description: The toolbarContent whose index is looked for"}},"addView":{"!description":"Adds some view to the aggregation <code>views<\/code>.","!static":false,"!category":"function","!type":"fn(oView: sap.m.PlanningCalendarView) -> sap.m.PlanningCalendar","parameters":{"oView":"type: sap.m.PlanningCalendarView, description: the view to add; if empty, nothing is inserted"}},"fireRowSelectionChange":{"!description":"Fires event <code>rowSelectionChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>rows<\/code> of type <code>sap.m.PlanningCalendarRow[]<\/code>Array of rows whose selection has changed.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.PlanningCalendar","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWidth of the <code>PlanningCalendar<\/code>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.PlanningCalendar","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"indexOfRow":{"!description":"Checks for the provided <code>sap.m.PlanningCalendarRow<\/code> in the aggregation <code>rows<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oRow: sap.m.PlanningCalendarRow) -> Number","parameters":{"oRow":"type: sap.m.PlanningCalendarRow, description: The row whose index is looked for"}},"getShowEmptyIntervalHeaders":{"!description":"Gets current value of property <code>showEmptyIntervalHeaders<\/code>.\n\nIf set, interval headers are shown even if no <code>intervalHeaders<\/code> are assigned to the visible time frame.\n\nIf not set, no interval headers are shown if no <code>intervalHeaders<\/code> are assigned.\n\n<b>Note:<\/b> This property is only used if <code>showIntervalHeaders<\/code> is set to <code>true<\/code>.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertRow":{"!description":"Inserts a row into the aggregation <code>rows<\/code>.","!static":false,"!category":"function","!type":"fn(oRow: sap.m.PlanningCalendarRow, iIndex: Number) -> sap.m.PlanningCalendar","parameters":{"oRow":"type: sap.m.PlanningCalendarRow, description: the row to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the row should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the row is inserted at position 0; for a value\n             greater than the current size of the aggregation, the row is inserted at\n             the last position"}},"attachRowSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>rowSelectionChange<\/code> event of this <code>sap.m.PlanningCalendar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.PlanningCalendar<\/code> itself.\n\nFires when row selection is changed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.PlanningCalendar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.PlanningCalendar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getViews":{"!description":"Gets content of aggregation <code>views<\/code>.\n\nViews of the <code>PlanningCalendar<\/code>.\n\nIf not set, three default views are used to allow you to switch between hour, day and month granularity.\nThe default views have the keys defined in <\/code>sap.ui.unified.CalendarIntervalType<\/code>","!static":false,"!category":"function","!type":"fn() -> [sap.m.PlanningCalendarView]"},"setMaxDate":{"!description":"Sets a new value for property <code>maxDate<\/code>.\n\nMaximum date that can be shown and selected in the <code>PlanningCalendar<\/code>. This must be a JavaScript date object.\n\n<b>Note:<\/b> If the <code>maxDate<\/code> is set to be before the <code>minDate<\/code>,\nthe <code>minDate<\/code> is set to the begin of the month of the <code>maxDate<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oMaxDate: Object) -> sap.m.PlanningCalendar","parameters":{"oMaxDate":"type: object, description: New value for property <code>maxDate<\/code>"}},"removeAllSpecialDates":{"!description":"Removes all the controls from the aggregation <code>specialDates<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.unified.DateTypeRange]"},"detachStartDateChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>startDateChange<\/code> event of this <code>sap.m.PlanningCalendar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.PlanningCalendar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setMinDate":{"!description":"Sets a new value for property <code>minDate<\/code>.\n\nMinimum date that can be shown and selected in the <code>PlanningCalendar<\/code>. This must be a JavaScript date object.\n\n<b>Note:<\/b> If the <code>minDate<\/code> is set to be after the <code>maxDate<\/code>,\nthe <code>maxDate<\/code> is set to the end of the month of the <code>minDate<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oMinDate: Object) -> sap.m.PlanningCalendar","parameters":{"oMinDate":"type: object, description: New value for property <code>minDate<\/code>"}}},"sap.m.ComboBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ComboBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ComboBoxBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ComboBox"},"sap.m.P13nSortPanel":{"setContainerQuery":{"!description":"Sets a new value for property <code>containerQuery<\/code>.\n\ndefines if the mediaQuery or a ContainerResize will be used for layout update. When the ConditionPanel is used on a dialog the\nproperty should be set to true!\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bContainerQuery: Boolean) -> sap.m.P13nSortPanel","parameters":{"bContainerQuery":"type: boolean, description: New value for property <code>containerQuery<\/code>"}},"bindSortItems":{"!description":"Binds aggregation <code>sortItems<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.P13nSortPanel","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"!proto":"sap.m.P13nPanel","!category":"class","attachRemoveSortItem":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>removeSortItem<\/code> event of this <code>sap.m.P13nSortPanel<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.P13nSortPanel<\/code> itself.\n\nremove a sort item","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.P13nSortPanel","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.P13nSortPanel<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeSortItem":{"!description":"Removes a sortItem from the aggregation <code>sortItems<\/code>.","!static":false,"!category":"function","!type":"fn(vSortItem: Number | String | sap.m.P13nSortItem) -> sap.m.P13nSortItem","parameters":{"vSortItem":"type: int|string|sap.m.P13nSortItem, description: The sortItemto remove or its index or id"}},"setOperations":{"!description":"setter for the supported operations array","!static":false,"!category":"function","!type":"fn(array: Array)","parameters":{"array":"type: array, description: of operations [sap.m.P13nConditionOperation.BT, sap.m.P13nConditionOperation.EQ]"}},"detachUpdateSortItem":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>updateSortItem<\/code> event of this <code>sap.m.P13nSortPanel<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.P13nSortPanel","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"insertSortItem":{"!description":"Inserts a sortItem into the aggregation <code>sortItems<\/code>.","!static":false,"!category":"function","!type":"fn(oSortItem: sap.m.P13nSortItem, iIndex: Number) -> sap.m.P13nSortPanel","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the sortItem should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the sortItem is inserted at position 0; for a value\n             greater than the current size of the aggregation, the sortItem is inserted at\n             the last position","oSortItem":"type: sap.m.P13nSortItem, description: the sortItem to insert; if empty, nothing is inserted"}},"getSortItems":{"!description":"Gets content of aggregation <code>sortItems<\/code>.\n\ndefined Sort Items","!static":false,"!category":"function","!type":"fn() -> [sap.m.P13nSortItem]"},"fireAddSortItem":{"!description":"Fires event <code>addSortItem<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.P13nSortPanel","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setLayoutMode":{"!description":"Sets a new value for property <code>layoutMode<\/code>.\n\ncan be used to control the layout behavior. Default is \"\" which will automatically change the layout. With \"Desktop\", \"Table\"\nor\"Phone\" you can set a fixed layout.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLayoutMode: String) -> sap.m.P13nSortPanel","parameters":{"sLayoutMode":"type: string, description: New value for property <code>layoutMode<\/code>"}},"detachRemoveSortItem":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>removeSortItem<\/code> event of this <code>sap.m.P13nSortPanel<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.P13nSortPanel","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new P13nSortPanel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContainerQuery containerQuery} : boolean (default: false)<\/li>\n<li>{@link #getLayoutMode layoutMode} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSortItems sortItems} : sap.m.P13nSortItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:addSortItem addSortItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:removeSortItem removeSortItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:updateSortItem updateSortItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.P13nPanel#constructor sap.m.P13nPanel}\ncan be used as well.","fireRemoveSortItem":{"!description":"Fires event <code>removeSortItem<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.P13nSortPanel","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"validateConditions":{"!description":"check if the entered/modified conditions are correct, marks invalid fields yellow (Warning state) and opens a popup message dialog to give the\nuser the feedback that some values are wrong or missing.","!static":false,"!category":"function","!type":"fn()"},"unbindSortItems":{"!description":"Unbinds aggregation <code>sortItems<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.P13nSortPanel"},"!description":"The P13nSortPanel control is used to define settings for sorting in table personalization.","getMetadata":{"!description":"Returns a metadata object for class sap.m.P13nSortPanel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"addSortItem":{"!description":"Adds some sortItem to the aggregation <code>sortItems<\/code>.","!static":false,"!category":"function","!type":"fn(oSortItem: sap.m.P13nSortItem) -> sap.m.P13nSortPanel","parameters":{"oSortItem":"type: sap.m.P13nSortItem, description: the sortItem to add; if empty, nothing is inserted"}},"destroySortItems":{"!description":"Destroys all the sortItems in the aggregation <code>sortItems<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.P13nSortPanel"},"attachUpdateSortItem":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>updateSortItem<\/code> event of this <code>sap.m.P13nSortPanel<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.P13nSortPanel<\/code> itself.\n\nupdate a sort item","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.P13nSortPanel","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.P13nSortPanel<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachAddSortItem":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>addSortItem<\/code> event of this <code>sap.m.P13nSortPanel<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.P13nSortPanel","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getContainerQuery":{"!description":"Gets current value of property <code>containerQuery<\/code>.\n\ndefines if the mediaQuery or a ContainerResize will be used for layout update. When the ConditionPanel is used on a dialog the\nproperty should be set to true!\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachAddSortItem":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>addSortItem<\/code> event of this <code>sap.m.P13nSortPanel<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.P13nSortPanel<\/code> itself.\n\nevent raised when a SortItem was added","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.P13nSortPanel","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.P13nSortPanel<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireUpdateSortItem":{"!description":"Fires event <code>updateSortItem<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.P13nSortPanel","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"indexOfSortItem":{"!description":"Checks for the provided <code>sap.m.P13nSortItem<\/code> in the aggregation <code>sortItems<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSortItem: sap.m.P13nSortItem) -> Number","parameters":{"oSortItem":"type: sap.m.P13nSortItem, description: The sortItem whose index is looked for"}},"extend":{"!description":"Creates a new subclass of class sap.m.P13nSortPanel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.P13nPanel.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/m/P13nSortPanel","!helpDescription":"The P13nSortPanel control is used to define settings for sorting in table personalization.","getLayoutMode":{"!description":"Gets current value of property <code>layoutMode<\/code>.\n\ncan be used to control the layout behavior. Default is \"\" which will automatically change the layout. With \"Desktop\", \"Table\"\nor\"Phone\" you can set a fixed layout.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllSortItems":{"!description":"Removes all the controls from the aggregation <code>sortItems<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.P13nSortItem]"},"removeValidationErrors":{"!description":"removes all errors/warning states from of all sort conditions.","!static":false,"!category":"function","!type":"fn()"},"removeInvalidConditions":{"!description":"removes all invalid sort conditions.","!static":false,"!category":"function","!type":"fn()"}},"sap.m.Slider_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.Slider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.Slider"},"sap.m.semantic.OpenInAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.OpenInAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.OpenInAction"},"sap.m.FlexBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.FlexBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.FlexBox"},"sap.m.DisplayListItem":{"!description":"<code>sap.m.DisplayListItem<\/code> can be used to represent a label and a value.","getMetadata":{"!description":"Returns a metadata object for class sap.m.DisplayListItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLabel":{"!description":"Gets current value of property <code>label<\/code>.\n\nDefines the label of the list item.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.m.ListItemBase","!category":"class","extend":{"!description":"Creates a new subclass of class sap.m.DisplayListItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nDefines the value of the list item.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new DisplayListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getValueTextDirection valueTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well.","!module":"sap/m/DisplayListItem","!helpDescription":"<code>sap.m.DisplayListItem<\/code> can be used to represent a label and a value.","setValueTextDirection":{"!description":"Sets a new value for property <code>valueTextDirection<\/code>.\n\nDefines the <code>value<\/code> text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sValueTextDirection: sap.ui.core.TextDirection) -> sap.m.DisplayListItem","parameters":{"sValueTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>valueTextDirection<\/code>"}},"setValue":{"!description":"Sets a new value for property <code>value<\/code>.\n\nDefines the value of the list item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.m.DisplayListItem","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"setLabel":{"!description":"Sets a new value for property <code>label<\/code>.\n\nDefines the label of the list item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLabel: String) -> sap.m.DisplayListItem","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}},"getValueTextDirection":{"!description":"Gets current value of property <code>valueTextDirection<\/code>.\n\nDefines the <code>value<\/code> text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"}},"sap.m.FacetFilterList_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.FacetFilterList with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.List.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.FacetFilterList"},"sap.m.MessagePopover":{"openBy":{"!description":"Opens the MessagePopover","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control) -> sap.m.MessagePopover","parameters":{"oControl":"type: sap.ui.core.Control, description: Control which opens the MessagePopover"}},"attachAfterClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterClose<\/code> event of this <code>sap.m.MessagePopover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.MessagePopover<\/code> itself.\n\nThis event will be fired after the popover is closed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.MessagePopover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.MessagePopover<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.MessagePopover"},"destroyHeaderButton":{"!description":"Destroys the headerButton in the aggregation <code>headerButton<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.MessagePopover"},"detachAfterClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterClose<\/code> event of this <code>sap.m.MessagePopover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.MessagePopover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nA list with message items","!static":false,"!category":"function","!type":"fn() -> [sap.m.MessagePopoverItem]"},"detachLongtextLoaded":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>longtextLoaded<\/code> event of this <code>sap.m.MessagePopover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.MessagePopover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"indexOfItem":{"!description":"Checks for the provided <code>sap.m.MessagePopoverItem<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.MessagePopoverItem) -> Number","parameters":{"oItem":"type: sap.m.MessagePopoverItem, description: The item whose index is looked for"}},"fireBeforeOpen":{"!description":"Fires event <code>beforeOpen<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>openBy<\/code> of type <code>sap.ui.core.Control<\/code>Refers to the control which opens the popover<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.MessagePopover","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"fireLongtextLoaded":{"!description":"Fires event <code>longtextLoaded<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.MessagePopover","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachLongtextLoaded":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>longtextLoaded<\/code> event of this <code>sap.m.MessagePopover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.MessagePopover<\/code> itself.\n\nThis event will be fired when the long text description data from a remote URL is loaded","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.MessagePopover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.MessagePopover<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireUrlValidated":{"!description":"Fires event <code>urlValidated<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.MessagePopover","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getHeaderButton":{"!description":"Gets content of aggregation <code>headerButton<\/code>.\n\nA custom header button","!static":false,"!category":"function","!type":"fn() -> sap.m.Button"},"!description":"A MessagePopover is a Popover containing a summarized list with messages.","getMetadata":{"!description":"Returns a metadata object for class sap.m.MessagePopover.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"fireAfterOpen":{"!description":"Fires event <code>afterOpen<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>openBy<\/code> of type <code>sap.ui.core.Control<\/code>This refers to the control which opens the popover<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.MessagePopover","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"detachListSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>listSelect<\/code> event of this <code>sap.m.MessagePopover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.MessagePopover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachBeforeOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beforeOpen<\/code> event of this <code>sap.m.MessagePopover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.MessagePopover<\/code> itself.\n\nThis event will be fired before the popover is opened","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.MessagePopover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.MessagePopover<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.MessagePopoverItem]"},"setInitiallyExpanded":{"!description":"Sets a new value for property <code>initiallyExpanded<\/code>.\n\nSets the initial state of the control - expanded or collapsed. By default the control opens as expanded\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bInitiallyExpanded: Boolean) -> sap.m.MessagePopover","parameters":{"bInitiallyExpanded":"type: boolean, description: New value for property <code>initiallyExpanded<\/code>"}},"detachAfterOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterOpen<\/code> event of this <code>sap.m.MessagePopover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.MessagePopover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.m.MessagePopover with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"attachItemSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>itemSelect<\/code> event of this <code>sap.m.MessagePopover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.MessagePopover<\/code> itself.\n\nThis event will be fired when description is shown","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.MessagePopover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.MessagePopover<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"isOpen":{"!description":"The method checks if the MessagePopover is open. It returns true when the MessagePopover is currently open\n(this includes opening and closing animations), otherwise it returns false","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/m/MessagePopover","!helpDescription":"A MessagePopover is a Popover containing a summarized list with messages.","getAsyncDescriptionHandler":{"!description":"Gets current value of property <code>asyncDescriptionHandler<\/code>.\n\nCallback function for resolving a promise after description has been asynchronously loaded inside this function","!static":false,"!category":"function","!type":"fn() -> Object"},"fireListSelect":{"!description":"Fires event <code>listSelect<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>messageTypeFilter<\/code> of type <code>sap.ui.core.MessageType<\/code>This parameter refers to the type of messages being shown.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.MessagePopover","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.m.MessagePopoverItem) -> sap.m.MessagePopoverItem","parameters":{"vItem":"type: int|string|sap.m.MessagePopoverItem, description: The itemto remove or its index or id"}},"detachUrlValidated":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>urlValidated<\/code> event of this <code>sap.m.MessagePopover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.MessagePopover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getAsyncURLHandler":{"!description":"Gets current value of property <code>asyncURLHandler<\/code>.\n\nCallback function for resolving a promise after a link has been asynchronously validated inside this function","!static":false,"!category":"function","!type":"fn() -> Object"},"!proto":"sap.ui.core.Control","attachAfterOpen":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterOpen<\/code> event of this <code>sap.m.MessagePopover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.MessagePopover<\/code> itself.\n\nThis event will be fired after the popover is opened","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.MessagePopover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.MessagePopover<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!category":"class","fireBeforeClose":{"!description":"Fires event <code>beforeClose<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>openBy<\/code> of type <code>sap.ui.core.Control<\/code>Refers to the control which opens the popover\nSee sap.ui.core.MessageType enum values for types<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.MessagePopover","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.MessagePopoverItem) -> sap.m.MessagePopover","parameters":{"oItem":"type: sap.m.MessagePopoverItem, description: the item to add; if empty, nothing is inserted"}},"setAsyncDescriptionHandler":{"!description":"Sets a new value for property <code>asyncDescriptionHandler<\/code>.\n\nCallback function for resolving a promise after description has been asynchronously loaded inside this function\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oAsyncDescriptionHandler: Object) -> sap.m.MessagePopover","parameters":{"oAsyncDescriptionHandler":"type: any, description: New value for property <code>asyncDescriptionHandler<\/code>"}},"attachUrlValidated":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>urlValidated<\/code> event of this <code>sap.m.MessagePopover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.MessagePopover<\/code> itself.\n\nThis event will be fired when a validation of a URL from long text description is ready","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.MessagePopover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.MessagePopover<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!constructorDescription":"Constructor for a new MessagePopover\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAsyncDescriptionHandler asyncDescriptionHandler} : any<\/li>\n<li>{@link #getAsyncURLHandler asyncURLHandler} : any<\/li>\n<li>{@link #getPlacement placement} : sap.m.VerticalPlacementType (default: Vertical)<\/li>\n<li>{@link #getInitiallyExpanded initiallyExpanded} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.MessagePopoverItem[] (default)<\/li>\n<li>{@link #getHeaderButton headerButton} : sap.m.Button<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterOpen afterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterClose afterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeOpen beforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeClose beforeClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:itemSelect itemSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:listSelect listSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:longtextLoaded longtextLoaded} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:urlValidated urlValidated} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getInitiallyExpanded":{"!description":"Gets current value of property <code>initiallyExpanded<\/code>.\n\nSets the initial state of the control - expanded or collapsed. By default the control opens as expanded\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"close":{"!description":"Closes the MessagePopover","!static":false,"!category":"function","!type":"fn() -> sap.m.MessagePopover"},"detachBeforeOpen":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beforeOpen<\/code> event of this <code>sap.m.MessagePopover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.MessagePopover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireItemSelect":{"!description":"Fires event <code>itemSelect<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>item<\/code> of type <code>sap.m.MessagePopoverItem<\/code>Refers to the message popover item that is being presented<\/li>\n<li><code>messageTypeFilter<\/code> of type <code>sap.ui.core.MessageType<\/code>Refers to the type of messages being shown\nSee sap.ui.core.MessageType values for types<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.MessagePopover","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"detachItemSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>itemSelect<\/code> event of this <code>sap.m.MessagePopover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.MessagePopover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getPlacement":{"!description":"Gets current value of property <code>placement<\/code>.\n\nDetermines the position, where the control will appear on the screen. Possible values are: sap.m.VerticalPlacementType.Top, sap.m.VerticalPlacementType.Bottom and sap.m.VerticalPlacementType.Vertical.\nThe default value is sap.m.VerticalPlacementType.Vertical. Setting this property while the control is open, will not cause any re-rendering and changing of the position. Changes will only be applied with the next interaction.\n\nDefault value is <code>Vertical<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.VerticalPlacementType"},"setAsyncURLHandler":{"!description":"Sets a new value for property <code>asyncURLHandler<\/code>.\n\nCallback function for resolving a promise after a link has been asynchronously validated inside this function\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oAsyncURLHandler: Object) -> sap.m.MessagePopover","parameters":{"oAsyncURLHandler":"type: any, description: New value for property <code>asyncURLHandler<\/code>"}},"detachBeforeClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>beforeClose<\/code> event of this <code>sap.m.MessagePopover<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.MessagePopover","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"toggle":{"!description":"This method toggles between open and closed state of the MessagePopover instance.\noControl parameter is mandatory in the same way as in 'openBy' method","!static":false,"!category":"function","!type":"fn(oControl: sap.ui.core.Control) -> sap.m.MessagePopover","parameters":{"oControl":"type: sap.ui.core.Control, description: Control which opens the MessagePopover"}},"attachBeforeClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>beforeClose<\/code> event of this <code>sap.m.MessagePopover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.MessagePopover<\/code> itself.\n\nThis event will be fired before the popover is closed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.MessagePopover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.MessagePopover<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachListSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>listSelect<\/code> event of this <code>sap.m.MessagePopover<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.MessagePopover<\/code> itself.\n\nThis event will be fired when one of the lists is shown when (not) filtered  by type","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.MessagePopover","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.MessagePopover<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setHeaderButton":{"!description":"Sets the aggregated <code>headerButton<\/code>.","!static":false,"!category":"function","!type":"fn(oHeaderButton: sap.m.Button) -> sap.m.MessagePopover","parameters":{"oHeaderButton":"type: sap.m.Button, description: The headerButton to set"}},"fireAfterClose":{"!description":"Fires event <code>afterClose<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>openBy<\/code> of type <code>sap.ui.core.Control<\/code>Refers to the control which opens the popover<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.MessagePopover","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setDefaultHandlers":{"!description":"Setter for default description and URL validation callbacks across all instances of MessagePopover","!static":true,"!category":"function","!type":"fn(mDefaultHandlers: Object)","parameters":{"mDefaultHandlers":"type: object, description: An object setting default callbacks"}},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.MessagePopoverItem, iIndex: Number) -> sap.m.MessagePopover","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position","oItem":"type: sap.m.MessagePopoverItem, description: the item to insert; if empty, nothing is inserted"}}},"sap.m.P13nItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.P13nItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.P13nItem"},"sap.m.RadioButtonGroup":{"setColumns":{"!description":"Sets a new value for property <code>columns<\/code>.\n\nSpecifies the maximum number of radio buttons displayed in one line.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn(iColumns: Number) -> sap.m.RadioButtonGroup","parameters":{"iColumns":"type: int, description: New value for property <code>columns<\/code>"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selectedIndex<\/code> of type <code>int<\/code>Index of the selected RadioButton.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.RadioButtonGroup","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.m.RadioButtonGroup<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.RadioButtonGroup<\/code> itself.\n\nFires when selection is changed by user interaction.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.RadioButtonGroup","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.RadioButtonGroup<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nSpecifies whether the user can change the selected value of the RadioButtonGroup.\nWhen the property is set to false, the control obtains visual styles\ndifferent from its visual styles for the normal and the disabled state.\nAdditionally, the control is no longer interactive, but can receive focus.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","!category":"class","destroyButtons":{"!description":"Destroys all radio buttons.","!static":false,"!category":"function","!type":"fn() -> sap.m.RadioButtonGroup"},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nSpecifies the width of the RadioButtonGroup.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getColumns":{"!description":"Gets current value of property <code>columns<\/code>.\n\nSpecifies the maximum number of radio buttons displayed in one line.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"unbindButtons":{"!description":"Unbinds aggregation <code>buttons<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.RadioButtonGroup"},"!constructorDescription":"Constructor for a new RadioButtonGroup.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getColumns columns} : int (default: 1)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getSelectedIndex selectedIndex} : int (default: 0)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getButtons buttons} : sap.m.RadioButton[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.m.RadioButtonGroup","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nSwitches the enabled state of the control. All Radio Buttons inside a disabled group are disabled. Default value is \u201ctrue\u201d.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!description":"This control is used as a wrapper for a group of sap.m.RadioButton controls, which then can be used as a single UI element.\nYou can select only one of the grouped radio buttons at a time.\nThe RadioButtonGroup lets you do things like attach a single event handler on a group of buttons, rather than on each individual button.\nThe grouped radio buttons can be arranged within different number of columns.\nBased on the number of specified columns and the number of radio buttons used, different layout types can be achieved - as a 'matrix',\nhorizontally or vertically aligned radio buttons.","bindButtons":{"!description":"Binds aggregation <code>buttons<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.RadioButtonGroup","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.RadioButtonGroup.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getButtons":{"!description":"Gets content of aggregation <code>buttons<\/code>.\n\nReturns a list of the RadioButtons in a RadioButtonGroup","!static":false,"!category":"function","!type":"fn() -> [sap.m.RadioButton]"},"setValueState":{"!description":"Sets ValueState of all radio buttons in the group.","!static":false,"!category":"function","!type":"fn(sValueState: sap.ui.core.String) -> sap.m.RadioButtonGroup","parameters":{"sValueState":"type: sap.ui.core.String, description: The value state of the radio group - none, success, warning, error."}},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nThis property specifies the element's text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.m.RadioButtonGroup","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"addButton":{"!description":"Adds a new radio button to the group.","!static":false,"!category":"function","!type":"fn(oButton: sap.m.RadioButton) -> sap.m.RadioButtonGroup","parameters":{"oButton":"type: sap.m.RadioButton, description: The button which will be added to the group"}},"setSelectedButton":{"!description":"Sets the selected sap.m.RadioButton using sap.m.RadioButton.","!static":false,"!category":"function","!type":"fn(oSelectedButton: sap.m.RadioButton) -> sap.m.RadioButtonGroup","parameters":{"oSelectedButton":"type: sap.m.RadioButton, description: The item to be selected"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nSpecifies the width of the RadioButtonGroup.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.RadioButtonGroup","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getSelectedButton":{"!description":"Returns the selected radio button.","!static":false,"!category":"function","!type":"fn() -> sap.m.RadioButton"},"indexOfButton":{"!description":"Checks for the provided <code>sap.m.RadioButton<\/code> in the aggregation <code>buttons<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oButton: sap.m.RadioButton) -> Number","parameters":{"oButton":"type: sap.m.RadioButton, description: The button whose index is looked for"}},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.m.RadioButtonGroup","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.m.RadioButtonGroup with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets the enabled property of the RadioButtonGroup. Single buttons preserve internally the value of their enabled property.\nIf the group is set to enabled=false the buttons are also displayed as disabled and getEnabled returns false.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.m.RadioButtonGroup","parameters":{"bEnabled":"type: boolean, description: Defines whether the radio buttons should be interactive."}},"setEditable":{"!description":"Sets the editable property of the RadioButtonGroup. Single buttons preserve the value of their editable property.\nIf the group is set to editable=false the buttons are also displayed and function as read only.\nNon editable radio buttons can still obtain focus.","!static":false,"!category":"function","!type":"fn(bEditable: Boolean) -> sap.m.RadioButtonGroup","parameters":{"bEditable":"type: boolean, description: Defines whether the radio buttons should be interactive."}},"!module":"sap/m/RadioButtonGroup","getValueState":{"!description":"Gets current value of property <code>valueState<\/code>.\n\nТhe value state to be displayed for the radio button. Possible values are: sap.ui.core.ValueState.Error,\nsap.ui.core.ValueState.Warning, sap.ui.core.ValueState.Success and sap.ui.core.ValueState.None.\nNote: Setting this attribute to sap.ui.core.ValueState.Error when the accessibility feature is enabled,\nsets the value of the invalid propery for the whole RadioButtonGroup to \u201ctrue\u201d.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"insertButton":{"!description":"Adds a new radio button to the group at a specified index.","!static":false,"!category":"function","!type":"fn(oButton: sap.m.RadioButton, iIndex: sap.ui.core.Integer) -> sap.m.RadioButtonGroup","parameters":{"oButton":"type: sap.m.RadioButton, description: The radio button which will be added to the group","iIndex":"type: sap.ui.core.Integer, description: The index, at which the radio button will be added"}},"!helpDescription":"This control is used as a wrapper for a group of sap.m.RadioButton controls, which then can be used as a single UI element.\nYou can select only one of the grouped radio buttons at a time.\nThe RadioButtonGroup lets you do things like attach a single event handler on a group of buttons, rather than on each individual button.\nThe grouped radio buttons can be arranged within different number of columns.\nBased on the number of specified columns and the number of radio buttons used, different layout types can be achieved - as a 'matrix',\nhorizontally or vertically aligned radio buttons.","removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"clone":{"!description":"Creates a new instance of RadioButtonGroup, with the same settings as the RadioButtonGroup\non which the method is called.\nEvent handlers are not cloned.","!static":false,"!category":"function","!type":"fn() -> sap.m.RadioButtonGroup"},"removeButton":{"!description":"Removes a radio button from the group.","!static":false,"!category":"function","!type":"fn() -> sap.m.RadioButton"},"getSelectedIndex":{"!description":"Gets current value of property <code>selectedIndex<\/code>.\n\nDetermines the index of the selected/checked RadioButton. Default is 0.\nIf no radio button is selected, the selectedIndex property will return -1.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.m.RadioButtonGroup<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.RadioButtonGroup","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"removeAllButtons":{"!description":"Removes all radio buttons.","!static":false,"!category":"function","!type":"fn() -> Array"},"setSelectedIndex":{"!description":"Sets the selected sap.m.RadioButton using index.","!static":false,"!category":"function","!type":"fn(iSelectedIndex: sap.ui.core.Integer) -> sap.m.RadioButtonGroup","parameters":{"iSelectedIndex":"type: sap.ui.core.Integer, description: The index of the radio button which has to be selected"}},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nThis property specifies the element's text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"}},"sap.m.semantic.ISort":{"!description":"\n  Marker interface for controls which are suitable as items of the sort aggregation of sap.m.Semantic.MasterPage.","!module":"sap/m/library","!category":"static class"},"sap.m.ToggleButton":{"!description":"The ToggleButton Control is a Button that can be toggled between pressed and normal state","extend":{"!description":"Creates a new subclass of class sap.m.ToggleButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Button.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.ToggleButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new ToggleButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPressed pressed} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Button#constructor sap.m.Button}\ncan be used as well.","getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"!module":"sap/m/ToggleButton","!helpDescription":"The ToggleButton Control is a Button that can be toggled between pressed and normal state","setPressed":{"!description":"Sets a new value for property <code>pressed<\/code>.\n\nThe property is \u201ctrue\u201d when the control is toggled. The default state of this property is \"false\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPressed: Boolean) -> sap.m.ToggleButton","parameters":{"bPressed":"type: boolean, description: New value for property <code>pressed<\/code>"}},"!proto":"sap.m.Button","getPressed":{"!description":"Gets current value of property <code>pressed<\/code>.\n\nThe property is \u201ctrue\u201d when the control is toggled. The default state of this property is \"false\".\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class"},"sap.m.Tile_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.Tile with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.Tile"},"sap.m.Tokenizer":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"scrollToStart":{"!description":"Function scrolls the tokens to the start","!static":false,"!category":"function","!type":"fn()"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"detachTokenChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>tokenChange<\/code> event of this <code>sap.m.Tokenizer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Tokenizer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\ntrue if tokens shall be editable otherwise false\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTokens":{"!description":"Gets content of aggregation <code>tokens<\/code>.\n\nthe currently displayed tokens","!static":false,"!category":"function","!type":"fn() -> [sap.m.Token]"},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDefines the width of the Tokenizer.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"removeSelectedTokens":{"!description":"Function removes all selected tokens","!static":false,"!category":"function","!type":"fn() -> sap.m.Tokenizer"},"addValidator":{"!description":"Function adds an validation callback called before any new token gets added to the tokens aggregation","!static":false,"!category":"function","!type":"fn(fValidator: fn())","parameters":{"fValidator":"type: function, description: undefined"}},"!constructorDescription":"Constructor for a new Tokenizer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTokens tokens} : sap.m.Token[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:tokenChange tokenChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.m.Tokenizer","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeValidator":{"!description":"Function removes an validation callback","!static":false,"!category":"function","!type":"fn(fValidator: fn())","parameters":{"fValidator":"type: function, description: undefined"}},"getScrollDelegate":{"!description":"Function returns the internally used scroll delegate","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.delegate.ScrollEnablement"},"!description":"Tokenizer displays multiple tokens","getSelectedTokens":{"!description":"Function returns all currently selected tokens","!static":false,"!category":"function","!type":"fn() -> [sap.m.Token]"},"addToken":{"!description":"Adds some token to the aggregation <code>tokens<\/code>.","!static":false,"!category":"function","!type":"fn(oToken: sap.m.Token) -> sap.m.Tokenizer","parameters":{"oToken":"type: sap.m.Token, description: the token to add; if empty, nothing is inserted"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.Tokenizer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"fireTokenChange":{"!description":"Fires event <code>tokenChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>type<\/code> of type <code>string<\/code>type of tokenChange event.\nThere are four TokenChange types: \"added\", \"removed\", \"removedAll\", \"tokensChanged\".\nUse Tokenizer.TokenChangeType.Added for \"added\",\tTokenizer.TokenChangeType.Removed for \"removed\", Tokenizer.TokenChangeType.RemovedAll for \"removedAll\" and Tokenizer.TokenChangeType.TokensChanged for \"tokensChanged\".<\/li>\n<li><code>token<\/code> of type <code>sap.m.Token<\/code>the added token or removed token.\nThis parameter is used when tokenChange type is \"added\" or \"removed\".<\/li>\n<li><code>tokens<\/code> of type <code>sap.m.Token[]<\/code>the array of removed tokens.\nThis parameter is used when tokenChange type is \"removedAll\".<\/li>\n<li><code>addedTokens<\/code> of type <code>sap.m.Token[]<\/code>the array of tokens that are added.\nThis parameter is used when tokenChange type is \"tokenChanged\".<\/li>\n<li><code>removedTokens<\/code> of type <code>sap.m.Token[]<\/code>the array of tokens that are removed.\nThis parameter is used when tokenChange type is \"tokenChanged\".<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Tokenizer","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setPixelWidth":{"!description":"Function sets the tokenizer's width in pixels","!static":false,"!category":"function","!type":"fn(nWidth: Number)","parameters":{"nWidth":"type: number, description: the new width in pixels"}},"scrollToEnd":{"!description":"Function scrolls the tokens to the end","!static":false,"!category":"function","!type":"fn(bInitialize: Boolean)","parameters":{"bInitialize":"type: boolean, description: indicates if we should reset the 'scroll-to-end-pending' flag; if true we would reset this flag"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDefines the width of the Tokenizer.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.Tokenizer","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"destroyTokens":{"!description":"Destroys all the tokens in the aggregation <code>tokens<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Tokenizer"},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.m.Tokenizer","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.m.Tokenizer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"removeAllValidators":{"!description":"Function removes all validation callbacks","!static":false,"!category":"function","!type":"fn()"},"selectAllTokens":{"!description":"Function selects all tokens","!static":false,"!category":"function","!type":"fn(optional?: Boolean) -> sap.m.Tokenizer","parameters":{"optional":"type: boolean, description: bSelect - true for selecting, false for deselecting"}},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\ntrue if tokens shall be editable otherwise false\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEditable: Boolean) -> sap.m.Tokenizer","parameters":{"bEditable":"type: boolean, description: New value for property <code>editable<\/code>"}},"!module":"sap/m/Tokenizer","!helpDescription":"Tokenizer displays multiple tokens","removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"removeToken":{"!description":"Removes a token from the aggregation <code>tokens<\/code>.","!static":false,"!category":"function","!type":"fn(vToken: Number | String | sap.m.Token) -> sap.m.Token","parameters":{"vToken":"type: int|string|sap.m.Token, description: The tokento remove or its index or id"}},"removeAllTokens":{"!description":"Removes all the controls from the aggregation <code>tokens<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Token]"},"addValidateToken":{"!description":"Function validates the given text and adds a new token if validation was successful","!static":false,"!category":"function","!type":"fn(oParameters: Object)","parameters":{"oParameters":"type: object, description: parameter bag containing following fields: {sap.m.String} text - the source text {sap.m.Token}\n         [optional] token - a suggested token {object} [optional] suggestionObject - any object used to find the\n         suggested token {function} [optional] validationCallback - callback which gets called after validation has\n         finished"}},"attachTokenChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>tokenChange<\/code> event of this <code>sap.m.Tokenizer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Tokenizer<\/code> itself.\n\nfired when the tokens aggregation changed (add / remove token)","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Tokenizer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Tokenizer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"insertToken":{"!description":"Inserts a token into the aggregation <code>tokens<\/code>.","!static":false,"!category":"function","!type":"fn(oToken: sap.m.Token, iIndex: Number) -> sap.m.Tokenizer","parameters":{"oToken":"type: sap.m.Token, description: the token to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the token should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the token is inserted at position 0; for a value\n             greater than the current size of the aggregation, the token is inserted at\n             the last position"}},"indexOfToken":{"!description":"Checks for the provided <code>sap.m.Token<\/code> in the aggregation <code>tokens<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oToken: sap.m.Token) -> Number","parameters":{"oToken":"type: sap.m.Token, description: The token whose index is looked for"}},"getScrollWidth":{"!description":"Function returns the tokens' width","!static":false,"!category":"function","!type":"fn()"}},"sap.m.Panel":{"setHeaderToolbar":{"!description":"Sets the aggregated <code>headerToolbar<\/code>.","!static":false,"!category":"function","!type":"fn(oHeaderToolbar: sap.m.Toolbar) -> sap.m.Panel","parameters":{"oHeaderToolbar":"type: sap.m.Toolbar, description: The headerToolbar to set"}},"setExpanded":{"!description":"Sets the expanded property of the control.","!static":false,"!category":"function","!type":"fn(bExpanded: Boolean) -> sap.m.Panel","parameters":{"bExpanded":"type: boolean, description: Defines whether control is expanded or not."}},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nDetermines the content of the Panel.\nThe content will be visible only when the Panel is expanded.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","getBackgroundDesign":{"!description":"Gets current value of property <code>backgroundDesign<\/code>.\n\nThis property is used to set the background color of the Panel.\nDepending on the theme you can change the state of the background from \"Solid\" over \"Translucent\" to \"Transparent\".\n\nDefault value is <code>Translucent<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.BackgroundDesign"},"setBackgroundDesign":{"!description":"Sets a new value for property <code>backgroundDesign<\/code>.\n\nThis property is used to set the background color of the Panel.\nDepending on the theme you can change the state of the background from \"Solid\" over \"Translucent\" to \"Transparent\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Translucent<\/code>.","!static":false,"!category":"function","!type":"fn(sBackgroundDesign: sap.m.BackgroundDesign) -> sap.m.Panel","parameters":{"sBackgroundDesign":"type: sap.m.BackgroundDesign, description: New value for property <code>backgroundDesign<\/code>"}},"getExpandAnimation":{"!description":"Gets current value of property <code>expandAnimation<\/code>.\n\nIndicates whether the transition between the expanded and the collapsed state of the control is animated.\nBy default the animation is enabled.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDetermines the Panel width.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"fireExpand":{"!description":"Fires event <code>expand<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>expand<\/code> of type <code>boolean<\/code>If the panel will expand, this is true.\nIf the panel will collapse, this is false.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Panel","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getHeaderText":{"!description":"Gets current value of property <code>headerText<\/code>.\n\nThis property is used to set the header text of the Panel.\nThe \"headerText\" is visible in both expanded and collapsed state.\nNote: This property is overwritten by the \"headerToolbar\" aggregation.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nDetermines the Panel height.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new Panel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeaderText headerText} : string (default: )<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getExpandable expandable} : boolean (default: false)<\/li>\n<li>{@link #getExpanded expanded} : boolean (default: false)<\/li>\n<li>{@link #getExpandAnimation expandAnimation} : boolean (default: true)<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign (default: Translucent)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getHeaderToolbar headerToolbar} : sap.m.Toolbar<\/li>\n<li>{@link #getInfoToolbar infoToolbar} : sap.m.Toolbar<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:expand expand} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getExpandable":{"!description":"Gets current value of property <code>expandable<\/code>.\n\nSpecifies whether the control is expandable.\nThis allows for collapsing or expanding the infoToolbar (if available) and content of the Panel.\nNote: If expandable is set to false, the Panel will always be rendered expanded.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Panel"},"setHeaderText":{"!description":"Sets a new value for property <code>headerText<\/code>.\n\nThis property is used to set the header text of the Panel.\nThe \"headerText\" is visible in both expanded and collapsed state.\nNote: This property is overwritten by the \"headerToolbar\" aggregation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sHeaderText: String) -> sap.m.Panel","parameters":{"sHeaderText":"type: string, description: New value for property <code>headerText<\/code>"}},"!description":"The Panel control is a container for controls which has a header and content.\nThe header is always visible while the content can be collapsed if the Panel is expandable.","setExpandable":{"!description":"Sets the expandable property of the control.","!static":false,"!category":"function","!type":"fn(bExpandable: Boolean) -> sap.m.Panel","parameters":{"bExpandable":"type: boolean, description: Defines whether the control is expandable or not."}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.Panel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setInfoToolbar":{"!description":"Sets the aggregated <code>infoToolbar<\/code>.","!static":false,"!category":"function","!type":"fn(oInfoToolbar: sap.m.Toolbar) -> sap.m.Panel","parameters":{"oInfoToolbar":"type: sap.m.Toolbar, description: The infoToolbar to set"}},"getExpanded":{"!description":"Gets current value of property <code>expanded<\/code>.\n\nIndicates whether the Panel is expanded or not.\nIf expanded is set to true, then both the infoToolbar (if available) and the content are rendered.\nIf expanded is set to false, then only the headerText or headerToolbar is rendered.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getHeaderToolbar":{"!description":"Gets content of aggregation <code>headerToolbar<\/code>.\n\nThis aggregation allows the use of a custom Toolbar as header for the Panel.\nThe \"headerToolbar\" is visible in both expanded and collapsed state.\nUse it when you want to add extra controls for user interactions in the header.\nNote: This aggregation overwrites \"headerText\" property.","!static":false,"!category":"function","!type":"fn() -> sap.m.Toolbar"},"getInfoToolbar":{"!description":"Gets content of aggregation <code>infoToolbar<\/code>.\n\nThis aggregation allows the use of a custom Toolbar as information bar for the Panel.\nThe \"infoToolbar\" is placed below the header and is visible only in expanded state.\nUse it when you want to show extra information to the user.","!static":false,"!category":"function","!type":"fn() -> sap.m.Toolbar"},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.m.Panel","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"setHeight":{"!description":"Sets the height of the panel.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.m.Panel","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: The height of the panel as CSS size."}},"setWidth":{"!description":"Sets the width of the panel.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.Panel","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: The width of the Panel as CSS size."}},"attachExpand":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>expand<\/code> event of this <code>sap.m.Panel<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Panel<\/code> itself.\n\nIndicates that the panel will expand or collapse","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Panel","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Panel<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"extend":{"!description":"Creates a new subclass of class sap.m.Panel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachExpand":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>expand<\/code> event of this <code>sap.m.Panel<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Panel","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!module":"sap/m/Panel","!helpDescription":"The Panel control is a container for controls which has a header and content.\nThe header is always visible while the content can be collapsed if the Panel is expandable.","insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.m.Panel","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}},"destroyHeaderToolbar":{"!description":"Destroys the headerToolbar in the aggregation <code>headerToolbar<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Panel"},"setExpandAnimation":{"!description":"Sets a new value for property <code>expandAnimation<\/code>.\n\nIndicates whether the transition between the expanded and the collapsed state of the control is animated.\nBy default the animation is enabled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bExpandAnimation: Boolean) -> sap.m.Panel","parameters":{"bExpandAnimation":"type: boolean, description: New value for property <code>expandAnimation<\/code>"}},"destroyInfoToolbar":{"!description":"Destroys the infoToolbar in the aggregation <code>infoToolbar<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Panel"}},"sap.m.semantic.SemanticControl_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.SemanticControl with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.SemanticControl"},"sap.m.SearchField":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setShowSearchButton":{"!description":"Sets a new value for property <code>showSearchButton<\/code>.\n\nSet to true to show the search button with the magnifier icon.\nIf false, both the search and refresh buttons are not displayed even if the \"showRefreshButton\" property is true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSearchButton: Boolean) -> sap.m.SearchField","parameters":{"bShowSearchButton":"type: boolean, description: New value for property <code>showSearchButton<\/code>"}},"getPopupAnchorDomRef":{"!description":"Function returns DOM element which acts as reference point for the opening suggestion menu","!static":false,"!category":"function","!type":"fn() -> domRef"},"getShowSearchButton":{"!description":"Gets current value of property <code>showSearchButton<\/code>.\n\nSet to true to show the search button with the magnifier icon.\nIf false, both the search and refresh buttons are not displayed even if the \"showRefreshButton\" property is true.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!description":"Enables users to input a search string.","setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nInvisible inputs are not rendered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.m.SearchField","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.SearchField.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getShowMagnifier":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 This parameter is deprecated. Use \"showSearchButton\" instead.<br>Gets current value of property <code>showMagnifier<\/code>.\n\nSet to false to hide the magnifier icon.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachSuggest":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>suggest<\/code> event of this <code>sap.m.SearchField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.SearchField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nInvisible inputs are not rendered.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addSuggestionItem":{"!description":"Adds some suggestionItem to the aggregation <code>suggestionItems<\/code>.","!static":false,"!category":"function","!type":"fn(oSuggestionItem: sap.m.SuggestionItem) -> sap.m.SearchField","parameters":{"oSuggestionItem":"type: sap.m.SuggestionItem, description: the suggestionItem to add; if empty, nothing is inserted"}},"unbindValue":{"!description":"Unbinds property <code>value<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.SearchField"},"detachLiveChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>liveChange<\/code> event of this <code>sap.m.SearchField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.SearchField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setRefreshButtonTooltip":{"!description":"Sets a new value for property <code>refreshButtonTooltip<\/code>.\n\nTooltip text of the refresh button. If it is not set, the tooltip of the SearchField (if any) is displayed. Tooltips are not displayed on touch devices.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sRefreshButtonTooltip: String) -> sap.m.SearchField","parameters":{"sRefreshButtonTooltip":"type: string, description: New value for property <code>refreshButtonTooltip<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.SearchField with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"fireSearch":{"!description":"Fires event <code>search<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>query<\/code> of type <code>string<\/code>The search query string.<\/li>\n<li><code>suggestionItem<\/code> of type <code>sap.m.SuggestionItem<\/code>Suggestion list item in case if the user has selected an item from the suggestions list.<\/li>\n<li><code>refreshButtonPressed<\/code> of type <code>boolean<\/code>Indicates if the user pressed the refresh icon.<\/li>\n<li><code>clearButtonPressed<\/code> of type <code>boolean<\/code>Indicates if the user pressed the clear icon.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.SearchField","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nBoolean property to enable the control (default is true).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.m.SearchField","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/m/SearchField","!helpDescription":"Enables users to input a search string.","removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"removeSuggestionItem":{"!description":"Removes a suggestionItem from the aggregation <code>suggestionItems<\/code>.","!static":false,"!category":"function","!type":"fn(vSuggestionItem: Number | String | sap.m.SuggestionItem) -> sap.m.SuggestionItem","parameters":{"vSuggestionItem":"type: int|string|sap.m.SuggestionItem, description: The suggestionItemto remove or its index or id"}},"setSelectOnFocus":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 This parameter is deprecated and has no effect in run time. The cursor position of a focused search field is restored after re-rendering automatically.<br>Sets a new value for property <code>selectOnFocus<\/code>.\n\nNormally, search text is selected for copy when the SearchField is focused by keyboard navigation. If an application re-renders the SearchField during the liveChange event, set this property to false to disable text selection by focus.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bSelectOnFocus: Boolean) -> sap.m.SearchField","parameters":{"bSelectOnFocus":"type: boolean, description: New value for property <code>selectOnFocus<\/code>"}},"getSuggestionItems":{"!description":"Gets content of aggregation <code>suggestionItems<\/code>.\n\n<code>SuggestionItems<\/code> are the items which will be shown in the suggestions list.\nThe following properties can be used:\n<ul>\n<li><code>key<\/code> is not displayed and may be used as internal technical field<\/li>\n<li><code>text<\/code> is displayed as normal suggestion text<\/li>\n<li><code>icon<\/code><\/li>\n<li><code>description<\/code> - additional text may be used to visually display search item type or category<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn() -> [sap.m.SuggestionItem]"},"bindValue":{"!description":"Binds property <code>value<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.SearchField","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"setMaxLength":{"!description":"Sets a new value for property <code>maxLength<\/code>.\n\nMaximum number of characters. Value '0' means the feature is switched off.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iMaxLength: Number) -> sap.m.SearchField","parameters":{"iMaxLength":"type: int, description: New value for property <code>maxLength<\/code>"}},"fireLiveChange":{"!description":"Fires event <code>liveChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>newValue<\/code> of type <code>string<\/code>Current search string.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.SearchField","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setShowRefreshButton":{"!description":"Sets a new value for property <code>showRefreshButton<\/code>.\n\nSet to true to display a refresh button in place of the search icon. By pressing the refresh button or F5 key on keyboard, the user can reload the results list without changing the search string.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowRefreshButton: Boolean) -> sap.m.SearchField","parameters":{"bShowRefreshButton":"type: boolean, description: New value for property <code>showRefreshButton<\/code>"}},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getPlaceholder":{"!description":"Gets current value of property <code>placeholder<\/code>.\n\nText shown when no value available. Default placeholder text is the word \"Search\" in the current local language (if supported) or in English.","!static":false,"!category":"function","!type":"fn() -> String"},"insertSuggestionItem":{"!description":"Inserts a suggestionItem into the aggregation <code>suggestionItems<\/code>.","!static":false,"!category":"function","!type":"fn(oSuggestionItem: sap.m.SuggestionItem, iIndex: Number) -> sap.m.SearchField","parameters":{"oSuggestionItem":"type: sap.m.SuggestionItem, description: the suggestionItem to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the suggestionItem should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the suggestionItem is inserted at position 0; for a value\n             greater than the current size of the aggregation, the suggestionItem is inserted at\n             the last position"}},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","setEnableSuggestions":{"!description":"Sets a new value for property <code>enableSuggestions<\/code>.\n\nIf true, a <code>suggest<\/code> event is fired when user types in the input and when the input is focused.\nOn a phone device, a full screen dialog with suggestions is always shown even if the suggestions list is empty.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableSuggestions: Boolean) -> sap.m.SearchField","parameters":{"bEnableSuggestions":"type: boolean, description: New value for property <code>enableSuggestions<\/code>"}},"!category":"class","detachSearch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>search<\/code> event of this <code>sap.m.SearchField<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.SearchField","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDefines the CSS width of the input. If not set, width is 100%.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"attachLiveChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>liveChange<\/code> event of this <code>sap.m.SearchField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.SearchField<\/code> itself.\n\nThis event is fired when the value of the search field is changed by a user - e.g. at each key press. Do not invalidate or re-render a focused search field, especially during the liveChange event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.SearchField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.SearchField<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachSuggest":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>suggest<\/code> event of this <code>sap.m.SearchField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.SearchField<\/code> itself.\n\nThis event is fired when the search field is initially focused or its value is changed by the user.\nThis event means that suggestion data should be updated, in case if suggestions are used.\nUse the value parameter to create new suggestions for it.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.SearchField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.SearchField<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!constructorDescription":"Constructor for a new SearchField.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getMaxLength maxLength} : int (default: 0)<\/li>\n<li>{@link #getPlaceholder placeholder} : string<\/li>\n<li>{@link #getShowMagnifier showMagnifier} : boolean (default: true)<\/li>\n<li>{@link #getShowRefreshButton showRefreshButton} : boolean (default: false)<\/li>\n<li>{@link #getRefreshButtonTooltip refreshButtonTooltip} : string<\/li>\n<li>{@link #getShowSearchButton showSearchButton} : boolean (default: true)<\/li>\n<li>{@link #getEnableSuggestions enableSuggestions} : boolean (default: false)<\/li>\n<li>{@link #getSelectOnFocus selectOnFocus} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSuggestionItems suggestionItems} : sap.m.SuggestionItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:search search} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:suggest suggest} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.m.SearchField","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"setPlaceholder":{"!description":"Sets a new value for property <code>placeholder<\/code>.\n\nText shown when no value available. Default placeholder text is the word \"Search\" in the current local language (if supported) or in English.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sPlaceholder: String) -> sap.m.SearchField","parameters":{"sPlaceholder":"type: string, description: New value for property <code>placeholder<\/code>"}},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nBoolean property to enable the control (default is true).\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"fireSuggest":{"!description":"Fires event <code>suggest<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>suggestValue<\/code> of type <code>string<\/code>Current search string of the search field.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.SearchField","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"destroySuggestionItems":{"!description":"Destroys all the suggestionItems in the aggregation <code>suggestionItems<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.SearchField"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getShowRefreshButton":{"!description":"Gets current value of property <code>showRefreshButton<\/code>.\n\nSet to true to display a refresh button in place of the search icon. By pressing the refresh button or F5 key on keyboard, the user can reload the results list without changing the search string.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfSuggestionItem":{"!description":"Checks for the provided <code>sap.m.SuggestionItem<\/code> in the aggregation <code>suggestionItems<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSuggestionItem: sap.m.SuggestionItem) -> Number","parameters":{"oSuggestionItem":"type: sap.m.SuggestionItem, description: The suggestionItem whose index is looked for"}},"getRefreshButtonTooltip":{"!description":"Gets current value of property <code>refreshButtonTooltip<\/code>.\n\nTooltip text of the refresh button. If it is not set, the tooltip of the SearchField (if any) is displayed. Tooltips are not displayed on touch devices.","!static":false,"!category":"function","!type":"fn() -> String"},"suggest":{"!description":"Toggle visibility of the suggestion list.","!static":false,"!category":"function","!type":"fn(bShow: Boolean | undefined) -> sap.m.SearchField","parameters":{"bShow":"type: boolean|undefined, description: set to <code>true<\/code> to display suggestions and <code>false<\/code> to hide them. Default value is <code>true<\/code>.\nAn empty suggestion list is not shown on desktop and tablet devices.<br>\n\nThis method may be called only as a response to the <code>suggest<\/code> event to ensure that the suggestion list is shown\nat the moment when the user expects it."}},"attachSearch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>search<\/code> event of this <code>sap.m.SearchField<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.SearchField<\/code> itself.\n\nEvent which is fired when the user triggers a search.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.SearchField","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.SearchField<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDefines the CSS width of the input. If not set, width is 100%.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.SearchField","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.m.SearchField","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nInput Value.","!static":false,"!category":"function","!type":"fn() -> String"},"getSelectOnFocus":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 This parameter is deprecated and has no effect in run time. The cursor position of a focused search field is restored after re-rendering automatically.<br>Gets current value of property <code>selectOnFocus<\/code>.\n\nNormally, search text is selected for copy when the SearchField is focused by keyboard navigation. If an application re-renders the SearchField during the liveChange event, set this property to false to disable text selection by focus.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMaxLength":{"!description":"Gets current value of property <code>maxLength<\/code>.\n\nMaximum number of characters. Value '0' means the feature is switched off.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setValue":{"!description":"Sets a new value for property <code>value<\/code>.\n\nInput Value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.m.SearchField","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"getEnableSuggestions":{"!description":"Gets current value of property <code>enableSuggestions<\/code>.\n\nIf true, a <code>suggest<\/code> event is fired when user types in the input and when the input is focused.\nOn a phone device, a full screen dialog with suggestions is always shown even if the suggestions list is empty.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllSuggestionItems":{"!description":"Removes all the controls from the aggregation <code>suggestionItems<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.SuggestionItem]"},"setShowMagnifier":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 This parameter is deprecated. Use \"showSearchButton\" instead.<br>Sets a new value for property <code>showMagnifier<\/code>.\n\nSet to false to hide the magnifier icon.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowMagnifier: Boolean) -> sap.m.SearchField","parameters":{"bShowMagnifier":"type: boolean, description: New value for property <code>showMagnifier<\/code>"}}},"sap.m.P13nItem":{"setAggregationRole":{"!description":"Sets a new value for property <code>aggregationRole<\/code>.\n\nDefines aggregation role\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAggregationRole: String) -> sap.m.P13nItem","parameters":{"sAggregationRole":"type: string, description: New value for property <code>aggregationRole<\/code>"}},"setPrecision":{"!description":"Sets a new value for property <code>precision<\/code>.\n\nif type==numeric the precision will be used to format the entered value (maxIntegerDigits of the used Formatter)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sPrecision: String) -> sap.m.P13nItem","parameters":{"sPrecision":"type: string, description: New value for property <code>precision<\/code>"}},"!proto":"sap.ui.core.Item","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDefines column width","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new P13nItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColumnKey columnKey} : string<\/li>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getVisible visible} : boolean<\/li>\n<li>{@link #getType type} : string (default: text)<\/li>\n<li>{@link #getPrecision precision} : string<\/li>\n<li>{@link #getScale scale} : string<\/li>\n<li>{@link #getMaxLength maxLength} : string<\/li>\n<li>{@link #getWidth width} : string<\/li>\n<li>{@link #getIsDefault isDefault} : boolean (default: false)<\/li>\n<li>{@link #getValues values} : string[]<\/li>\n<li>{@link #getRole role} : string<\/li>\n<li>{@link #getAggregationRole aggregationRole} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","setValues":{"!description":"Sets a new value for property <code>values<\/code>.\n\nthe array of values for type bool. e.g. [\"\", \"Off\", \"On\"]. The first entry can be empty (used to blank the value field). Next value\nrepresent the false value, last entry the true value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sValues: [String]) -> sap.m.P13nItem","parameters":{"sValues":"type: string[], description: New value for property <code>values<\/code>"}},"getAggregationRole":{"!description":"Gets current value of property <code>aggregationRole<\/code>.\n\nDefines aggregation role","!static":false,"!category":"function","!type":"fn() -> String"},"!description":"Base type for <code>items<\/code> aggregation in P13nPanel control.","setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nDefines visibility of column\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.m.P13nItem","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.P13nItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nDefines visibility of column","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getValues":{"!description":"Gets current value of property <code>values<\/code>.\n\nthe array of values for type bool. e.g. [\"\", \"Off\", \"On\"]. The first entry can be empty (used to blank the value field). Next value\nrepresent the false value, last entry the true value.","!static":false,"!category":"function","!type":"fn() -> [String]"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nThe text to be displayed for the item.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setScale":{"!description":"Sets a new value for property <code>scale<\/code>.\n\nif type==numeric the scale will be used to format the entered value (maxFractionDigits of the used Formatter)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sScale: String) -> sap.m.P13nItem","parameters":{"sScale":"type: string, description: New value for property <code>scale<\/code>"}},"getRole":{"!description":"Gets current value of property <code>role<\/code>.\n\nDefines role. The role is reflected in the manner how the dimension will influence the chart layout.","!static":false,"!category":"function","!type":"fn() -> String"},"setType":{"!description":"Sets a new value for property <code>type<\/code>.\n\ndata type of the column (text, numeric or date is supported)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>text<\/code>.","!static":false,"!category":"function","!type":"fn(sType: String) -> sap.m.P13nItem","parameters":{"sType":"type: string, description: New value for property <code>type<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDefines column width\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: String) -> sap.m.P13nItem","parameters":{"sWidth":"type: string, description: New value for property <code>width<\/code>"}},"getPrecision":{"!description":"Gets current value of property <code>precision<\/code>.\n\nif type==numeric the precision will be used to format the entered value (maxIntegerDigits of the used Formatter)","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.m.P13nItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getColumnKey":{"!description":"Gets current value of property <code>columnKey<\/code>.\n\nCan be used as input for subsequent actions.","!static":false,"!category":"function","!type":"fn() -> String"},"setColumnKey":{"!description":"Sets a new value for property <code>columnKey<\/code>.\n\nCan be used as input for subsequent actions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sColumnKey: String) -> sap.m.P13nItem","parameters":{"sColumnKey":"type: string, description: New value for property <code>columnKey<\/code>"}},"getIsDefault":{"!description":"Gets current value of property <code>isDefault<\/code>.\n\nthe column with isDefault==true will be used as the selected column item on the conditionPanel\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setIsDefault":{"!description":"Sets a new value for property <code>isDefault<\/code>.\n\nthe column with isDefault==true will be used as the selected column item on the conditionPanel\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bIsDefault: Boolean) -> sap.m.P13nItem","parameters":{"bIsDefault":"type: boolean, description: New value for property <code>isDefault<\/code>"}},"!module":"sap/m/P13nItem","getScale":{"!description":"Gets current value of property <code>scale<\/code>.\n\nif type==numeric the scale will be used to format the entered value (maxFractionDigits of the used Formatter)","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"Base type for <code>items<\/code> aggregation in P13nPanel control.","getMaxLength":{"!description":"Gets current value of property <code>maxLength<\/code>.\n\nspecifies the number of characters which can be entered in the value fields of the condition panel","!static":false,"!category":"function","!type":"fn() -> String"},"getType":{"!description":"Gets current value of property <code>type<\/code>.\n\ndata type of the column (text, numeric or date is supported)\n\nDefault value is <code>text<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setRole":{"!description":"Sets a new value for property <code>role<\/code>.\n\nDefines role. The role is reflected in the manner how the dimension will influence the chart layout.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sRole: String) -> sap.m.P13nItem","parameters":{"sRole":"type: string, description: New value for property <code>role<\/code>"}},"setMaxLength":{"!description":"Sets a new value for property <code>maxLength<\/code>.\n\nspecifies the number of characters which can be entered in the value fields of the condition panel\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sMaxLength: String) -> sap.m.P13nItem","parameters":{"sMaxLength":"type: string, description: New value for property <code>maxLength<\/code>"}},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nThe text to be displayed for the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.m.P13nItem","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.m.NewsContent_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.NewsContent with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.NewsContent"},"sap.m.MultiComboBox_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.MultiComboBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ComboBoxBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.MultiComboBox"},"sap.m.TileContent_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.TileContent with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.TileContent"},"sap.m.Label_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.Label with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.Label"},"sap.m.Button":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDefines the width of the button.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getIconDensityAware":{"!description":"Gets current value of property <code>iconDensityAware<\/code>.\n\nBy default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server.\n\nIf only one version of image is provided, set this value to false to avoid the attempt of fetching density perfect image.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setIconFirst":{"!description":"Sets a new value for property <code>iconFirst<\/code>.\n\nIf set to true (default), the display sequence is 1. icon 2. control text\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bIconFirst: Boolean) -> sap.m.Button","parameters":{"bIconFirst":"type: boolean, description: New value for property <code>iconFirst<\/code>"}},"!constructorDescription":"Constructor for a new Button.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getType type} : sap.m.ButtonType (default: Default)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconFirst iconFirst} : boolean (default: true)<\/li>\n<li>{@link #getActiveIcon activeIcon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:tap tap} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.m.Button","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"fireTap":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20.0 This event is deprecated, use the press event instead.<br>Fires event <code>tap<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Button","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getPopupAnchorDomRef":{"!description":"Defines to which DOM reference the Popup should be docked","!static":false,"!category":"function","!type":"fn() -> DomNode"},"setIconDensityAware":{"!description":"Sets a new value for property <code>iconDensityAware<\/code>.\n\nBy default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server.\n\nIf only one version of image is provided, set this value to false to avoid the attempt of fetching density perfect image.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bIconDensityAware: Boolean) -> sap.m.Button","parameters":{"bIconDensityAware":"type: boolean, description: New value for property <code>iconDensityAware<\/code>"}},"setActiveIcon":{"!description":"Sets a new value for property <code>activeIcon<\/code>.\n\nThe source property of an alternative icon for the active (depressed) state of the button.\nBoth active and default icon properties should be defined and have the same type: image or icon font.\nIf the <code>icon<\/code> property is not set or has a different type, the active icon is not displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sActiveIcon: sap.ui.core.URI) -> sap.m.Button","parameters":{"sActiveIcon":"type: sap.ui.core.URI, description: New value for property <code>activeIcon<\/code>"}},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nBoolean property to enable the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getActiveIcon":{"!description":"Gets current value of property <code>activeIcon<\/code>.\n\nThe source property of an alternative icon for the active (depressed) state of the button.\nBoth active and default icon properties should be defined and have the same type: image or icon font.\nIf the <code>icon<\/code> property is not set or has a different type, the active icon is not displayed.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.m.Button<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Button<\/code> itself.\n\nEvent is fired when the user clicks on the control.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Button","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Button<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachTap":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20.0 This event is deprecated, use the press event instead.<br>Detaches event handler <code>fnFunction<\/code> from the <code>tap<\/code> event of this <code>sap.m.Button<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Button","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!description":"Enables users to trigger actions. For the button UI, you can define some text or an icon, or both.","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.Button.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getIconFirst":{"!description":"Gets current value of property <code>iconFirst<\/code>.\n\nIf set to true (default), the display sequence is 1. icon 2. control text\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nButton text","!static":false,"!category":"function","!type":"fn() -> String"},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nThis property specifies the element's text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.m.Button","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"attachTap":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20.0 This event is deprecated, use the press event instead.<br>Attaches event handler <code>fnFunction<\/code> to the <code>tap<\/code> event of this <code>sap.m.Button<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Button<\/code> itself.\n\nEvent is fired when the user taps the control.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Button","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Button<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setType":{"!description":"Sets a new value for property <code>type<\/code>.\n\nType of a button (e.g. Default, Accept, Reject, Back, etc.)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn(sType: sap.m.ButtonType) -> sap.m.Button","parameters":{"sType":"type: sap.m.ButtonType, description: New value for property <code>type<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDefines the width of the button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.Button","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nIcon to be displayed as graphical element within the button. This can be an image or an icon from the icon font.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.m.Button","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.m.Button with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Property setter for the icon","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.m.Button","parameters":{"sIcon":"type: sap.ui.core.URI, description: new value of the Icon property"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.m.Button<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Button","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Button","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nBoolean property to enable the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.m.Button","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/m/Button","!helpDescription":"Enables users to trigger actions. For the button UI, you can define some text or an icon, or both.","getType":{"!description":"Gets current value of property <code>type<\/code>.\n\nType of a button (e.g. Default, Accept, Reject, Back, etc.)\n\nDefault value is <code>Default<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ButtonType"},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nThis property specifies the element's text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"setText":{"!description":"Property setter for the text","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.m.Button","parameters":{"sText":"type: string, description: new value of the Text attribute"}}},"sap.m.semantic.NegativeAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.NegativeAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.NegativeAction"},"sap.m.SplitApp":{"!description":"SplitApp is another root element of a UI5 mobile application besides App control. It maintains two NavContainers if running on tablet and one - on phone.\nThe display of master NavContainer depends on the portrait/landscape mode of the device and the mode of SplitApp.","getMetadata":{"!description":"Returns a metadata object for class sap.m.SplitApp.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.m.SplitContainer","setHomeIcon":{"!description":"Sets a new value for property <code>homeIcon<\/code>.\n\nRepresents the icon to be displayed on the home screen of iOS devices after the user does \"add to home screen\".\nNote that only the first attempt to set the homeIcon is executed, subsequent settings are ignored.\nThe icon must be in PNG format. The property can either store the URL of one single icon or an object holding icon URLs for the different required sizes.\nNote that if single icon is used for all devices, when scaled, its quality can regress.\nA desktop icon (used for bookmarks and overriding the favicon) can also be configured. This requires an object to be given and the \"icon\" property of this object then defines the desktop bookmark icon.\nFor this icon, PNG is not supported by Internet Explorer. The ICO format is supported by all browsers. ICO is also preferred for this desktop icon setting as the file can contain different images for different resolutions.\n\nOne example is:\n\napp.setHomeIcon({\n'phone':'phone-icon.png',\n'phone@2':'phone-retina.png',\n'tablet':'tablet-icon.png',\n'tablet@2':'tablet-retina.png',\n'icon':'desktop.ico'\n});\n\nThe image size is 57/114 px for the phone and 72/144 px for the tablet.\nIf an object is given but one of the sizes is not given, the largest given icon will be used for this size.\n\nOn Android, these icons may or may not be used by the device. Chances can be improved by adding glare effect, rounded corners, setting the file name to end with \"-precomposed.png\", and setting the homeIconPrecomposed property to true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oHomeIcon: Object) -> sap.m.SplitApp","parameters":{"oHomeIcon":"type: any, description: New value for property <code>homeIcon<\/code>"}},"!category":"class","detachOrientationChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>orientationChange<\/code> event of this <code>sap.m.SplitApp<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.SplitApp","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.m.SplitApp with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.SplitContainer.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"fireOrientationChange":{"!description":"Fires event <code>orientationChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>landscape<\/code> of type <code>boolean<\/code>Returns true if the device is in landscape mode.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.SplitApp","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!constructorDescription":"Constructor for a new SplitApp.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHomeIcon homeIcon} : any<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:orientationChange orientationChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.SplitContainer#constructor sap.m.SplitContainer}\ncan be used as well.","!module":"sap/m/SplitApp","getHomeIcon":{"!description":"Gets current value of property <code>homeIcon<\/code>.\n\nRepresents the icon to be displayed on the home screen of iOS devices after the user does \"add to home screen\".\nNote that only the first attempt to set the homeIcon is executed, subsequent settings are ignored.\nThe icon must be in PNG format. The property can either store the URL of one single icon or an object holding icon URLs for the different required sizes.\nNote that if single icon is used for all devices, when scaled, its quality can regress.\nA desktop icon (used for bookmarks and overriding the favicon) can also be configured. This requires an object to be given and the \"icon\" property of this object then defines the desktop bookmark icon.\nFor this icon, PNG is not supported by Internet Explorer. The ICO format is supported by all browsers. ICO is also preferred for this desktop icon setting as the file can contain different images for different resolutions.\n\nOne example is:\n\napp.setHomeIcon({\n'phone':'phone-icon.png',\n'phone@2':'phone-retina.png',\n'tablet':'tablet-icon.png',\n'tablet@2':'tablet-retina.png',\n'icon':'desktop.ico'\n});\n\nThe image size is 57/114 px for the phone and 72/144 px for the tablet.\nIf an object is given but one of the sizes is not given, the largest given icon will be used for this size.\n\nOn Android, these icons may or may not be used by the device. Chances can be improved by adding glare effect, rounded corners, setting the file name to end with \"-precomposed.png\", and setting the homeIconPrecomposed property to true.","!static":false,"!category":"function","!type":"fn() -> Object"},"!helpDescription":"SplitApp is another root element of a UI5 mobile application besides App control. It maintains two NavContainers if running on tablet and one - on phone.\nThe display of master NavContainer depends on the portrait/landscape mode of the device and the mode of SplitApp.","_onOrientationChange":{"!description":"Fires the orientationChange event after SplitApp has reacted to the browser orientationChange event.","!static":false,"!category":"function","!type":"fn()"},"attachOrientationChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>orientationChange<\/code> event of this <code>sap.m.SplitApp<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.SplitApp<\/code> itself.\n\nFires when orientation (portrait/landscape) is changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.SplitApp","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.SplitApp<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.m.WizardStep":{"removeAllSubsequentSteps":{"!description":"Removes all the controls in the association named <code>subsequentSteps<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.m.WizardStep]"},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nThe content of the Wizard Step.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","!category":"class","!constructorDescription":"Constructor for a new WizardStep.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getValidated validated} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:complete complete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:activate activate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getSubsequentSteps":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>subsequentSteps<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.m.WizardStep]"},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nDetermines the title of the step.\nThe title is visualized in the Wizard control.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getNextStep":{"!description":"ID of the element which is the current target of the association <code>nextStep<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.WizardStep"},"removeSubsequentStep":{"!description":"Removes an subsequentStep from the association named <code>subsequentSteps<\/code>.","!static":false,"!category":"function","!type":"fn(vSubsequentStep: Number | String | sap.m.WizardStep) -> sap.m.WizardStep","parameters":{"vSubsequentStep":"type: int|string|sap.m.WizardStep, description: The subsequentStepto be removed or its index or ID"}},"setValidated":{"!description":"Sets a new value for property <code>validated<\/code>.\n\nIndicates whether or not the step is validated.\nWhen a step is validated a Next button is visualized in the Wizard control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bValidated: Boolean) -> sap.m.WizardStep","parameters":{"bValidated":"type: boolean, description: New value for property <code>validated<\/code>"}},"setNextStep":{"!description":"Sets the associated <code>nextStep<\/code>.","!static":false,"!category":"function","!type":"fn(oNextStep: sap.m.WizardStep) -> sap.m.WizardStep","parameters":{"oNextStep":"type: sap.m.WizardStep, description: Id of an element which becomes the new target of this nextStep association; alternatively, an element instance may be given"}},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.WizardStep"},"getValidated":{"!description":"Gets current value of property <code>validated<\/code>.\n\nIndicates whether or not the step is validated.\nWhen a step is validated a Next button is visualized in the Wizard control.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"The WizardStep is a container control which should be used mainly to aggregate user input controls.\nIt gives the developer the ability to validate, invalidate the step and define subsequent steps.\nNote: The WizardStep control control is supposed to be used only as an aggregation of the Wizard control,\nand should not be used as a standalone one.","detachComplete":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>complete<\/code> event of this <code>sap.m.WizardStep<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.WizardStep","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.WizardStep.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"addSubsequentStep":{"!description":"Adds some subsequentStep into the association <code>subsequentSteps<\/code>.","!static":false,"!category":"function","!type":"fn(vSubsequentStep: String | sap.m.WizardStep) -> sap.m.WizardStep","parameters":{"vSubsequentStep":"type: string|sap.m.WizardStep, description: the subsequentSteps to add; if empty, nothing is inserted"}},"fireActivate":{"!description":"Fires event <code>activate<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.WizardStep","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"fireComplete":{"!description":"Fires event <code>complete<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.WizardStep","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nDetermines the title of the step.\nThe title is visualized in the Wizard control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.WizardStep","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.m.WizardStep","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nDetermines the icon that is displayed for this step.\nThe icon is visualized in the progress navigation part of the Wizard control.\n<b>Note:<\/b> In order for the icon to be displayed, each step in the Wizard should have\nthis property defined, otherwise the default numbering will be displayed.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"extend":{"!description":"Creates a new subclass of class sap.m.WizardStep with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nDetermines the icon that is displayed for this step.\nThe icon is visualized in the progress navigation part of the Wizard control.\n<b>Note:<\/b> In order for the icon to be displayed, each step in the Wizard should have\nthis property defined, otherwise the default numbering will be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.m.WizardStep","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"attachActivate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>activate<\/code> event of this <code>sap.m.WizardStep<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.WizardStep<\/code> itself.\n\nThis event is fired on next step activation from the Wizard.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.WizardStep","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.WizardStep<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachActivate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>activate<\/code> event of this <code>sap.m.WizardStep<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.WizardStep","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!module":"sap/m/WizardStep","!helpDescription":"The WizardStep is a container control which should be used mainly to aggregate user input controls.\nIt gives the developer the ability to validate, invalidate the step and define subsequent steps.\nNote: The WizardStep control control is supposed to be used only as an aggregation of the Wizard control,\nand should not be used as a standalone one.","insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.m.WizardStep","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}},"attachComplete":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>complete<\/code> event of this <code>sap.m.WizardStep<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.WizardStep<\/code> itself.\n\nThis event is fired after the user presses the Next button in the Wizard,\nor on <code>nextStep<\/code> method call from the app developer.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.WizardStep","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.WizardStep<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.m.FacetFilter_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.FacetFilter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.FacetFilter"},"sap.m.Select_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.Select with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.Select"},"sap.m.ObjectIdentifier":{"setBadgeNotes":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.24.0 Will be replaced in the future by a more generic mechanism.<br>Sets a new value for property <code>badgeNotes<\/code>.\n\nIndicates whether or not the notes icon is displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bBadgeNotes: Boolean) -> sap.m.ObjectIdentifier","parameters":{"bBadgeNotes":"type: boolean, description: New value for property <code>badgeNotes<\/code>"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","getTitleActive":{"!description":"Gets current value of property <code>titleActive<\/code>.\n\nIndicates if the ObjectIdentifier's title is clickable.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","attachTitlePress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>titlePress<\/code> event of this <code>sap.m.ObjectIdentifier<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ObjectIdentifier<\/code> itself.\n\nFires when the title is active and the user taps/clicks on it.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ObjectIdentifier","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ObjectIdentifier<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setBadgeAttachments":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.24.0 Will be replaced in the future by a more generic mechanism.<br>Sets a new value for property <code>badgeAttachments<\/code>.\n\nIndicates whether or not the attachments icon is displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bBadgeAttachments: Boolean) -> sap.m.ObjectIdentifier","parameters":{"bBadgeAttachments":"type: boolean, description: New value for property <code>badgeAttachments<\/code>"}},"!constructorDescription":"Constructor for a new ObjectIdentifier.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getBadgeNotes badgeNotes} : boolean<\/li>\n<li>{@link #getBadgePeople badgePeople} : boolean<\/li>\n<li>{@link #getBadgeAttachments badgeAttachments} : boolean<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getTitleActive titleActive} : boolean (default: false)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:titlePress titlePress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.m.ObjectIdentifier","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nDefines the object title.","!static":false,"!category":"function","!type":"fn() -> String"},"setTitleActive":{"!description":"Sets property titleActive.\nDefault value is false.","!static":false,"!category":"function","!type":"fn(bValue: Boolean) -> sap.m.ObjectIdentifier","parameters":{"bValue":"type: boolean, description: new value for property titleActive"}},"setBadgePeople":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.24.0 Will be replaced in the future by a more generic mechanism.<br>Sets a new value for property <code>badgePeople<\/code>.\n\nIndicates whether or not the address book icon is displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bBadgePeople: Boolean) -> sap.m.ObjectIdentifier","parameters":{"bBadgePeople":"type: boolean, description: New value for property <code>badgePeople<\/code>"}},"fireTitlePress":{"!description":"Fires event <code>titlePress<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>domRef<\/code> of type <code>object<\/code>DOM reference of the object identifier's title.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ObjectIdentifier","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!description":"The ObjectIdentifier is a display control that enables the user to easily identify a specific object. The ObjectIdentifier title is the key identifier of the object and additional text and icons can be used to further distinguish it from other objects.","setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nIndicates if the ObjectIdentifier is visible. An invisible ObjectIdentifier is not being rendered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.m.ObjectIdentifier","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.ObjectIdentifier.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getBadgeAttachments":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.24.0 Will be replaced in the future by a more generic mechanism.<br>Gets current value of property <code>badgeAttachments<\/code>.\n\nIndicates whether or not the attachments icon is displayed.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nIndicates if the ObjectIdentifier is visible. An invisible ObjectIdentifier is not being rendered.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nDefines the object text.","!static":false,"!category":"function","!type":"fn() -> String"},"detachTitlePress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>titlePress<\/code> event of this <code>sap.m.ObjectIdentifier<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ObjectIdentifier","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getBadgeNotes":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.24.0 Will be replaced in the future by a more generic mechanism.<br>Gets current value of property <code>badgeNotes<\/code>.\n\nIndicates whether or not the notes icon is displayed.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nSpecifies the element's text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.m.ObjectIdentifier","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"setTitle":{"!description":"Sets the title.\nDefault value is empty/undefined.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.ObjectIdentifier","parameters":{"sTitle":"type: string, description: New value for property title"}},"extend":{"!description":"Creates a new subclass of class sap.m.ObjectIdentifier with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/m/ObjectIdentifier","!helpDescription":"The ObjectIdentifier is a display control that enables the user to easily identify a specific object. The ObjectIdentifier title is the key identifier of the object and additional text and icons can be used to further distinguish it from other objects.","getBadgePeople":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.24.0 Will be replaced in the future by a more generic mechanism.<br>Gets current value of property <code>badgePeople<\/code>.\n\nIndicates whether or not the address book icon is displayed.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nSpecifies the element's text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"setText":{"!description":"Sets text.\nDefault value is empty/undefined.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.m.ObjectIdentifier","parameters":{"sText":"type: string, description: New value for property text"}}},"sap.m.semantic.SendEmailAction":{"!description":"A SendEmailAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","extend":{"!description":"Creates a new subclass of class sap.m.semantic.SendEmailAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.SendEmailAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new SendEmailAction.","!module":"sap/m/semantic/SendEmailAction","!helpDescription":"A SendEmailAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","!proto":"sap.m.semantic.SemanticButton","!category":"class"},"sap.m.NavContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.NavContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.NavContainer"},"sap.m.NotificationListBase":{"fireClose":{"!description":"Fires event <code>close<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.NotificationListBase","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setDatetime":{"!description":"Sets a new value for property <code>datetime<\/code>.\n\nDetermines the due date of the NotificationListItem.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sDatetime: String) -> sap.m.NotificationListBase","parameters":{"sDatetime":"type: string, description: New value for property <code>datetime<\/code>"}},"_getHeaderTitle":{"!description":"Returns the sap.m.Text control used in the NotificationListBase's header title.","!static":false,"!category":"function","!type":"fn() -> sap.m.Text"},"setShowButtons":{"!description":"Sets a new value for property <code>showButtons<\/code>.\n\nDetermines the action buttons visibility.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowButtons: Boolean) -> sap.m.NotificationListBase","parameters":{"bShowButtons":"type: boolean, description: New value for property <code>showButtons<\/code>"}},"setShowCloseButton":{"!description":"Sets a new value for property <code>showCloseButton<\/code>.\n\nDetermines the visibility of the close button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowCloseButton: Boolean) -> sap.m.NotificationListBase","parameters":{"bShowCloseButton":"type: boolean, description: New value for property <code>showCloseButton<\/code>"}},"!proto":"sap.m.ListItemBase","!category":"class","destroyButtons":{"!description":"Destroys all the buttons in the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.NotificationListBase"},"setAuthorPicture":{"!description":"Sets a new value for property <code>authorPicture<\/code>.\n\nDetermines the URL of the notification group's author picture.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sAuthorPicture: sap.ui.core.URI) -> sap.m.NotificationListBase","parameters":{"sAuthorPicture":"type: sap.ui.core.URI, description: New value for property <code>authorPicture<\/code>"}},"!constructorDescription":"Constructor for a new NotificationListBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPriority priority} : sap.ui.core.Priority (default: None)<\/li>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getDatetime datetime} : string (default: )<\/li>\n<li>{@link #getShowButtons showButtons} : boolean (default: true)<\/li>\n<li>{@link #getShowCloseButton showCloseButton} : boolean (default: true)<\/li>\n<li>{@link #getAuthorName authorName} : string (default: )<\/li>\n<li>{@link #getAuthorPicture authorPicture} : sap.ui.core.URI<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getButtons buttons} : sap.m.Button[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:close close} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well.","_getToolbar":{"!description":"Returns the sap.m.OverflowToolbar control used in the NotificationListBase.","!static":false,"!category":"function","!type":"fn() -> sap.m.OverflowToolbar"},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nDetermines the title of the NotificationListBase item.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"attachClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>close<\/code> event of this <code>sap.m.NotificationListBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.NotificationListBase<\/code> itself.\n\nFired when the notification is closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.NotificationListBase","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.NotificationListBase<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getShowButtons":{"!description":"Gets current value of property <code>showButtons<\/code>.\n\nDetermines the action buttons visibility.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getAuthorPicture":{"!description":"Gets current value of property <code>authorPicture<\/code>.\n\nDetermines the URL of the notification group's author picture.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"setAuthorName":{"!description":"Sets a new value for property <code>authorName<\/code>.\n\nDetermines the notification group's author name.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sAuthorName: String) -> sap.m.NotificationListBase","parameters":{"sAuthorName":"type: string, description: New value for property <code>authorName<\/code>"}},"!description":"The NotificationListBase is the base class for NotificationListItem and NotificationListGroup.","getShowCloseButton":{"!description":"Gets current value of property <code>showCloseButton<\/code>.\n\nDetermines the visibility of the close button.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>close<\/code> event of this <code>sap.m.NotificationListBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.NotificationListBase","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.NotificationListBase.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"_getAuthorName":{"!description":"Returns the sap.m.Text control used in the NotificationListBase's author name.","!static":false,"!category":"function","!type":"fn() -> sap.m.Text"},"getButtons":{"!description":"Gets content of aggregation <code>buttons<\/code>.\n\nAction buttons.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nDetermines the title of the NotificationListBase item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.NotificationListBase","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"addButton":{"!description":"Adds some button to the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn(oButton: sap.m.Button) -> sap.m.NotificationListBase","parameters":{"oButton":"type: sap.m.Button, description: the button to add; if empty, nothing is inserted"}},"getAuthorName":{"!description":"Gets current value of property <code>authorName<\/code>.\n\nDetermines the notification group's author name.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"indexOfButton":{"!description":"Checks for the provided <code>sap.m.Button<\/code> in the aggregation <code>buttons<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oButton: sap.m.Button) -> Number","parameters":{"oButton":"type: sap.m.Button, description: The button whose index is looked for"}},"_getDateTimeText":{"!description":"Returns the sap.m.Text control used in the NotificationListBase's header title.","!static":false,"!category":"function","!type":"fn() -> sap.m.Text"},"extend":{"!description":"Creates a new subclass of class sap.m.NotificationListBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"_getAuthorImage":{"!description":"Returns the sap.m.Image or the sap.ui.core.Control used in the NotificationListBase's author picture.","!static":false,"!category":"function","!type":"fn() -> sap.m.Image | sap.ui.core.Control"},"getDatetime":{"!description":"Gets current value of property <code>datetime<\/code>.\n\nDetermines the due date of the NotificationListItem.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/m/NotificationListBase","insertButton":{"!description":"Inserts a button into the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn(oButton: sap.m.Button, iIndex: Number) -> sap.m.NotificationListBase","parameters":{"oButton":"type: sap.m.Button, description: the button to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the button should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the button is inserted at position 0; for a value\n             greater than the current size of the aggregation, the button is inserted at\n             the last position"}},"!helpDescription":"The NotificationListBase is the base class for NotificationListItem and NotificationListGroup.","getPriority":{"!description":"Gets current value of property <code>priority<\/code>.\n\nDetermines the priority of the Notification.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Priority"},"removeButton":{"!description":"Removes a button from the aggregation <code>buttons<\/code>.","!static":false,"!category":"function","!type":"fn(vButton: Number | String | sap.m.Button) -> sap.m.Button","parameters":{"vButton":"type: int|string|sap.m.Button, description: The buttonto remove or its index or id"}},"removeAllButtons":{"!description":"Removes all the controls from the aggregation <code>buttons<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Button]"},"setPriority":{"!description":"Sets a new value for property <code>priority<\/code>.\n\nDetermines the priority of the Notification.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sPriority: sap.ui.core.Priority) -> sap.m.NotificationListBase","parameters":{"sPriority":"type: sap.ui.core.Priority, description: New value for property <code>priority<\/code>"}}},"sap.m.Switch_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.Switch with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.Switch"},"sap.m.Title":{"!description":"The Title control represents a single line of text with explicit header / title semantics.","getMetadata":{"!description":"Returns a metadata object for class sap.m.Title.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nDefines the text which should be displayed as a title.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Control","setTextAlign":{"!description":"Sets a new value for property <code>textAlign<\/code>.\n\nDefines the alignment of the text within the title. <b>Note:<\/b> This property only has an effect if the overall width of the title control is\nlarger than the displayed text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Initial<\/code>.","!static":false,"!category":"function","!type":"fn(sTextAlign: sap.ui.core.TextAlign) -> sap.m.Title","parameters":{"sTextAlign":"type: sap.ui.core.TextAlign, description: New value for property <code>textAlign<\/code>"}},"getTextAlign":{"!description":"Gets current value of property <code>textAlign<\/code>.\n\nDefines the alignment of the text within the title. <b>Note:<\/b> This property only has an effect if the overall width of the title control is\nlarger than the displayed text.\n\nDefault value is <code>Initial<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextAlign"},"setTitle":{"!description":"Sets the associated <code>title<\/code>.","!static":false,"!category":"function","!type":"fn(oTitle: sap.ui.core.Title) -> sap.m.Title","parameters":{"oTitle":"type: sap.ui.core.Title, description: Id of an element which becomes the new target of this title association; alternatively, an element instance may be given"}},"!category":"class","getTitleStyle":{"!description":"Gets current value of property <code>titleStyle<\/code>.\n\nDefines the style of the title.\nWhen using the <code>Auto<\/code> styling, the appearance of the title depends on the current position of the title and the defined level.\nThis automatism can be overridden by setting a different style explicitly.\nThe actual appearance of the title and the different styles always depends on the theme being used.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TitleLevel"},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDefines the width of the title.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDefines the width of the title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.Title","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"setLevel":{"!description":"Sets a new value for property <code>level<\/code>.\n\nDefines the semantic level of the title.\nThis information is e.g. used by assistive technologies like screenreaders to create a hierarchical site map for faster navigation.\nDepending on this setting either a HTML h1-h6 element is used or when using level <code>Auto<\/code> no explicit level information is written (HTML5 header element).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sLevel: sap.ui.core.TitleLevel) -> sap.m.Title","parameters":{"sLevel":"type: sap.ui.core.TitleLevel, description: New value for property <code>level<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.Title with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getLevel":{"!description":"Gets current value of property <code>level<\/code>.\n\nDefines the semantic level of the title.\nThis information is e.g. used by assistive technologies like screenreaders to create a hierarchical site map for faster navigation.\nDepending on this setting either a HTML h1-h6 element is used or when using level <code>Auto<\/code> no explicit level information is written (HTML5 header element).\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TitleLevel"},"!constructorDescription":"Constructor for a new Title control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getLevel level} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getTitleStyle titleStyle} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Initial)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTitle":{"!description":"ID of the element which is the current target of the association <code>title<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Title"},"setTitleStyle":{"!description":"Sets a new value for property <code>titleStyle<\/code>.\n\nDefines the style of the title.\nWhen using the <code>Auto<\/code> styling, the appearance of the title depends on the current position of the title and the defined level.\nThis automatism can be overridden by setting a different style explicitly.\nThe actual appearance of the title and the different styles always depends on the theme being used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sTitleStyle: sap.ui.core.TitleLevel) -> sap.m.Title","parameters":{"sTitleStyle":"type: sap.ui.core.TitleLevel, description: New value for property <code>titleStyle<\/code>"}},"!module":"sap/m/Title","!helpDescription":"The Title control represents a single line of text with explicit header / title semantics.","setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nDefines the text which should be displayed as a title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.m.Title","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.m.FlexAlignItems":{"!description":"Available options for the layout of all elements along the cross axis of the flexbox layout.","Center":{"!description":"The flex item's margin boxes are centered in the cross axis within the line.","!category":"enum","!type":"String"},"!module":"sap/m/library","Start":{"!description":"The cross-start margin edges of the flex items are placed flush with the cross-start edge of the line.","!category":"enum","!type":"String"},"Stretch":{"!description":"Make the cross size of the item's margin boxes as close to the same size as the line as possible.","!category":"enum","!type":"String"},"!category":"static class","End":{"!description":"The cross-start margin edges of the flex items are placed flush with the cross-end edge of the line.","!category":"enum","!type":"String"},"Baseline":{"!description":"If the flex item's inline axes are the same as the cross axis, this value is identical to \"Start\". Otherwise, it participates in baseline alignment: all participating box items on the line are aligned such that their baselines align, and the item with the largest distance between its baseline and its cross-start margin edge is placed flush against the cross-start edge of the line.","!category":"enum","!type":"String"},"Inherit":{"!description":"Inherits the value from its parent.","!category":"enum","!type":"String"}},"sap.m.ISnappable":{"!description":"\n  Interface for controls which are suitable as a Header in sap.m.DynamicPage.\n  If the control wants to get have the pin/unpin functionality, it must fire the pinUnpinPress event","!module":"sap/m/library","!category":"static class"},"sap.m.MaskInputRule_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.MaskInputRule with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.MaskInputRule"},"sap.m.semantic.MasterPage":{"getNegativeAction":{"!description":"Gets content of aggregation <code>negativeAction<\/code>.\n\nNegative action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.NegativeAction"},"setMultiSelectAction":{"!description":"Sets the aggregated <code>multiSelectAction<\/code>.","!static":false,"!category":"function","!type":"fn(oMultiSelectAction: sap.m.semantic.MultiSelectAction) -> sap.m.semantic.MasterPage","parameters":{"oMultiSelectAction":"type: sap.m.semantic.MultiSelectAction, description: The multiSelectAction to set"}},"setDeleteAction":{"!description":"Sets the aggregated <code>deleteAction<\/code>.","!static":false,"!category":"function","!type":"fn(oDeleteAction: sap.m.semantic.DeleteAction) -> sap.m.semantic.MasterPage","parameters":{"oDeleteAction":"type: sap.m.semantic.DeleteAction, description: The deleteAction to set"}},"setSaveAction":{"!description":"Sets the aggregated <code>saveAction<\/code>.","!static":false,"!category":"function","!type":"fn(oSaveAction: sap.m.semantic.SaveAction) -> sap.m.semantic.MasterPage","parameters":{"oSaveAction":"type: sap.m.semantic.SaveAction, description: The saveAction to set"}},"getSort":{"!description":"Gets content of aggregation <code>sort<\/code>.\n\nSort action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.ISort"},"getPositiveAction":{"!description":"Gets content of aggregation <code>positiveAction<\/code>.\n\nPositive action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.PositiveAction"},"getMainAction":{"!description":"Gets content of aggregation <code>mainAction<\/code>.\n\nMain action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.MainAction"},"getCancelAction":{"!description":"Gets content of aggregation <code>cancelAction<\/code>.\n\nCancel action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.CancelAction"},"destroyMultiSelectAction":{"!description":"Destroys the multiSelectAction in the aggregation <code>multiSelectAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.MasterPage"},"setPositiveAction":{"!description":"Sets the aggregated <code>positiveAction<\/code>.","!static":false,"!category":"function","!type":"fn(oPositiveAction: sap.m.semantic.PositiveAction) -> sap.m.semantic.MasterPage","parameters":{"oPositiveAction":"type: sap.m.semantic.PositiveAction, description: The positiveAction to set"}},"!description":"A MasterPage is a {@link sap.m.semantic.SemanticPage} that supports semantic content of the following types:\n\n<ul>\n\t<li>{@link sap.m.semantic.AddAction}<\/li>\n\t<li>{@link sap.m.semantic.MainAction}<\/li>\n\t<li>{@link sap.m.semantic.PositiveAction}<\/li>\n\t<li>{@link sap.m.semantic.NegativeAction}<\/li>\n\t<li>{@link sap.m.semantic.ForwardAction}<\/li>\n\t<li>{@link sap.m.semantic.EditAction}<\/li>\n\t<li>{@link sap.m.semantic.SaveAction}<\/li>\n\t<li>{@link sap.m.semantic.DeleteAction}<\/li>\n\t<li>{@link sap.m.semantic.CancelAction}<\/li>\n\t<li>{@link sap.m.semantic.MultiSelectAction}<\/li>\n\t<li>{@link sap.m.semantic.FlagAction}<\/li>\n\t<li>{@link sap.m.semantic.FavoriteAction}<\/li>\n\t<li>{@link sap.m.semantic.SortAction}<\/li>\n\t<li>{@link sap.m.semantic.SortSelect}<\/li>\n\t<li>{@link sap.m.semantic.FilterAction}<\/li>\n\t<li>{@link sap.m.semantic.FilterSelect}<\/li>\n\t<li>{@link sap.m.semantic.GroupAction}<\/li>\n\t<li>{@link sap.m.semantic.GroupSelect}<\/li>\n\t<li>{@link sap.m.semantic.MessagesIndicator}<\/li>\n<\/ul>","getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.MasterPage.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setMainAction":{"!description":"Sets the aggregated <code>mainAction<\/code>.","!static":false,"!category":"function","!type":"fn(oMainAction: sap.m.semantic.MainAction) -> sap.m.semantic.MasterPage","parameters":{"oMainAction":"type: sap.m.semantic.MainAction, description: The mainAction to set"}},"destroyNegativeAction":{"!description":"Destroys the negativeAction in the aggregation <code>negativeAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.MasterPage"},"setFilter":{"!description":"Sets the aggregated <code>filter<\/code>.","!static":false,"!category":"function","!type":"fn(oFilter: sap.m.semantic.IFilter) -> sap.m.semantic.MasterPage","parameters":{"oFilter":"type: sap.m.semantic.IFilter, description: The filter to set"}},"extend":{"!description":"Creates a new subclass of class sap.m.semantic.MasterPage with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticPage.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"destroyFilter":{"!description":"Destroys the filter in the aggregation <code>filter<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.MasterPage"},"setGroup":{"!description":"Sets the aggregated <code>group<\/code>.","!static":false,"!category":"function","!type":"fn(oGroup: sap.m.semantic.IGroup) -> sap.m.semantic.MasterPage","parameters":{"oGroup":"type: sap.m.semantic.IGroup, description: The group to set"}},"!module":"sap/m/semantic/MasterPage","destroyPositiveAction":{"!description":"Destroys the positiveAction in the aggregation <code>positiveAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.MasterPage"},"!helpDescription":"A MasterPage is a {@link sap.m.semantic.SemanticPage} that supports semantic content of the following types:\n\n<ul>\n\t<li>{@link sap.m.semantic.AddAction}<\/li>\n\t<li>{@link sap.m.semantic.MainAction}<\/li>\n\t<li>{@link sap.m.semantic.PositiveAction}<\/li>\n\t<li>{@link sap.m.semantic.NegativeAction}<\/li>\n\t<li>{@link sap.m.semantic.ForwardAction}<\/li>\n\t<li>{@link sap.m.semantic.EditAction}<\/li>\n\t<li>{@link sap.m.semantic.SaveAction}<\/li>\n\t<li>{@link sap.m.semantic.DeleteAction}<\/li>\n\t<li>{@link sap.m.semantic.CancelAction}<\/li>\n\t<li>{@link sap.m.semantic.MultiSelectAction}<\/li>\n\t<li>{@link sap.m.semantic.FlagAction}<\/li>\n\t<li>{@link sap.m.semantic.FavoriteAction}<\/li>\n\t<li>{@link sap.m.semantic.SortAction}<\/li>\n\t<li>{@link sap.m.semantic.SortSelect}<\/li>\n\t<li>{@link sap.m.semantic.FilterAction}<\/li>\n\t<li>{@link sap.m.semantic.FilterSelect}<\/li>\n\t<li>{@link sap.m.semantic.GroupAction}<\/li>\n\t<li>{@link sap.m.semantic.GroupSelect}<\/li>\n\t<li>{@link sap.m.semantic.MessagesIndicator}<\/li>\n<\/ul>","getGroup":{"!description":"Gets content of aggregation <code>group<\/code>.\n\nGroup action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.IGroup"},"destroyMainAction":{"!description":"Destroys the mainAction in the aggregation <code>mainAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.MasterPage"},"destroyAddAction":{"!description":"Destroys the addAction in the aggregation <code>addAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.MasterPage"},"setForwardAction":{"!description":"Sets the aggregated <code>forwardAction<\/code>.","!static":false,"!category":"function","!type":"fn(oForwardAction: sap.m.semantic.ForwardAction) -> sap.m.semantic.MasterPage","parameters":{"oForwardAction":"type: sap.m.semantic.ForwardAction, description: The forwardAction to set"}},"setEditAction":{"!description":"Sets the aggregated <code>editAction<\/code>.","!static":false,"!category":"function","!type":"fn(oEditAction: sap.m.semantic.EditAction) -> sap.m.semantic.MasterPage","parameters":{"oEditAction":"type: sap.m.semantic.EditAction, description: The editAction to set"}},"getMultiSelectAction":{"!description":"Gets content of aggregation <code>multiSelectAction<\/code>.\n\nMultiSelect action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.MultiSelectAction"},"destroyEditAction":{"!description":"Destroys the editAction in the aggregation <code>editAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.MasterPage"},"!proto":"sap.m.semantic.SemanticPage","getDeleteAction":{"!description":"Gets content of aggregation <code>deleteAction<\/code>.\n\nDelete action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.DeleteAction"},"!category":"class","destroySaveAction":{"!description":"Destroys the saveAction in the aggregation <code>saveAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.MasterPage"},"getMessagesIndicator":{"!description":"Gets content of aggregation <code>messagesIndicator<\/code>.\n\nMessagesIndicator","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.MessagesIndicator"},"!constructorDescription":"Constructor for a new MasterPage\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getAddAction addAction} : sap.m.semantic.AddAction<\/li>\n<li>{@link #getMainAction mainAction} : sap.m.semantic.MainAction<\/li>\n<li>{@link #getPositiveAction positiveAction} : sap.m.semantic.PositiveAction<\/li>\n<li>{@link #getNegativeAction negativeAction} : sap.m.semantic.NegativeAction<\/li>\n<li>{@link #getMultiSelectAction multiSelectAction} : sap.m.semantic.MultiSelectAction<\/li>\n<li>{@link #getForwardAction forwardAction} : sap.m.semantic.ForwardAction<\/li>\n<li>{@link #getEditAction editAction} : sap.m.semantic.EditAction<\/li>\n<li>{@link #getSaveAction saveAction} : sap.m.semantic.SaveAction<\/li>\n<li>{@link #getDeleteAction deleteAction} : sap.m.semantic.DeleteAction<\/li>\n<li>{@link #getCancelAction cancelAction} : sap.m.semantic.CancelAction<\/li>\n<li>{@link #getSort sort} : sap.m.semantic.ISort<\/li>\n<li>{@link #getFilter filter} : sap.m.semantic.IFilter<\/li>\n<li>{@link #getGroup group} : sap.m.semantic.IGroup<\/li>\n<li>{@link #getMessagesIndicator messagesIndicator} : sap.m.semantic.MessagesIndicator<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.SemanticPage#constructor sap.m.semantic.SemanticPage}\ncan be used as well.","getAddAction":{"!description":"Gets content of aggregation <code>addAction<\/code>.\n\nAdd action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.AddAction"},"setMessagesIndicator":{"!description":"Sets the aggregated <code>messagesIndicator<\/code>.","!static":false,"!category":"function","!type":"fn(oMessagesIndicator: sap.m.semantic.MessagesIndicator) -> sap.m.semantic.MasterPage","parameters":{"oMessagesIndicator":"type: sap.m.semantic.MessagesIndicator, description: The messagesIndicator to set"}},"setAddAction":{"!description":"Sets the aggregated <code>addAction<\/code>.","!static":false,"!category":"function","!type":"fn(oAddAction: sap.m.semantic.AddAction) -> sap.m.semantic.MasterPage","parameters":{"oAddAction":"type: sap.m.semantic.AddAction, description: The addAction to set"}},"destroyCancelAction":{"!description":"Destroys the cancelAction in the aggregation <code>cancelAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.MasterPage"},"getForwardAction":{"!description":"Gets content of aggregation <code>forwardAction<\/code>.\n\nForward action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.ForwardAction"},"getSaveAction":{"!description":"Gets content of aggregation <code>saveAction<\/code>.\n\nSave action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.SaveAction"},"destroyForwardAction":{"!description":"Destroys the forwardAction in the aggregation <code>forwardAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.MasterPage"},"destroyMessagesIndicator":{"!description":"Destroys the messagesIndicator in the aggregation <code>messagesIndicator<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.MasterPage"},"destroySort":{"!description":"Destroys the sort in the aggregation <code>sort<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.MasterPage"},"getEditAction":{"!description":"Gets content of aggregation <code>editAction<\/code>.\n\nEdit action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.EditAction"},"setSort":{"!description":"Sets the aggregated <code>sort<\/code>.","!static":false,"!category":"function","!type":"fn(oSort: sap.m.semantic.ISort) -> sap.m.semantic.MasterPage","parameters":{"oSort":"type: sap.m.semantic.ISort, description: The sort to set"}},"getFilter":{"!description":"Gets content of aggregation <code>filter<\/code>.\n\nFilter action","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.IFilter"},"destroyDeleteAction":{"!description":"Destroys the deleteAction in the aggregation <code>deleteAction<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.MasterPage"},"destroyGroup":{"!description":"Destroys the group in the aggregation <code>group<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.semantic.MasterPage"},"setCancelAction":{"!description":"Sets the aggregated <code>cancelAction<\/code>.","!static":false,"!category":"function","!type":"fn(oCancelAction: sap.m.semantic.CancelAction) -> sap.m.semantic.MasterPage","parameters":{"oCancelAction":"type: sap.m.semantic.CancelAction, description: The cancelAction to set"}},"setNegativeAction":{"!description":"Sets the aggregated <code>negativeAction<\/code>.","!static":false,"!category":"function","!type":"fn(oNegativeAction: sap.m.semantic.NegativeAction) -> sap.m.semantic.MasterPage","parameters":{"oNegativeAction":"type: sap.m.semantic.NegativeAction, description: The negativeAction to set"}}},"sap.m.ViewSettingsFilterItem":{"!description":"A ViewSettingsFilterItem control is used for modelling filter behaviour in the ViewSettingsDialog.\nIt is derived from a core Item, but does not support the base class properties like textDirection and enabled.\nSetting these properties will not have any effects.","removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.m.ViewSettingsItem) -> sap.m.ViewSettingsItem","parameters":{"vItem":"type: int|string|sap.m.ViewSettingsItem, description: The itemto remove or its index or id"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.ViewSettingsFilterItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"unbindItems":{"!description":"Unbinds aggregation <code>items<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.ViewSettingsFilterItem"},"!proto":"sap.m.ViewSettingsItem","destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ViewSettingsFilterItem"},"!category":"class","removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ViewSettingsItem]"},"attachFilterDetailItemsAggregationChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>filterDetailItemsAggregationChange<\/code> event of this <code>sap.m.ViewSettingsFilterItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ViewSettingsFilterItem<\/code> itself.\n\nLet the outside world know that the filter detail aggregation was changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ViewSettingsFilterItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ViewSettingsFilterItem<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"extend":{"!description":"Creates a new subclass of class sap.m.ViewSettingsFilterItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ViewSettingsItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.ViewSettingsItem) -> sap.m.ViewSettingsFilterItem","parameters":{"oItem":"type: sap.m.ViewSettingsItem, description: the item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nItems that are logically grouped under this filter item. They are used to display filter details in the ViewSettingsDialog.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ViewSettingsItem]"},"!constructorDescription":"Constructor for a new ViewSettingsFilterItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMultiSelect multiSelect} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.ViewSettingsItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:filterDetailItemsAggregationChange filterDetailItemsAggregationChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ViewSettingsItem#constructor sap.m.ViewSettingsItem}\ncan be used as well.","!module":"sap/m/ViewSettingsFilterItem","indexOfItem":{"!description":"Checks for the provided <code>sap.m.ViewSettingsItem<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.ViewSettingsItem) -> Number","parameters":{"oItem":"type: sap.m.ViewSettingsItem, description: The item whose index is looked for"}},"!helpDescription":"A ViewSettingsFilterItem control is used for modelling filter behaviour in the ViewSettingsDialog.\nIt is derived from a core Item, but does not support the base class properties like textDirection and enabled.\nSetting these properties will not have any effects.","detachFilterDetailItemsAggregationChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>filterDetailItemsAggregationChange<\/code> event of this <code>sap.m.ViewSettingsFilterItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ViewSettingsFilterItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setMultiSelect":{"!description":"Sets a new value for property <code>multiSelect<\/code>.\n\nIf set to (true), multi selection will be allowed for the items aggregation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bMultiSelect: Boolean) -> sap.m.ViewSettingsFilterItem","parameters":{"bMultiSelect":"type: boolean, description: New value for property <code>multiSelect<\/code>"}},"bindItems":{"!description":"Binds aggregation <code>items<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.ViewSettingsFilterItem","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"fireFilterDetailItemsAggregationChange":{"!description":"Fires event <code>filterDetailItemsAggregationChange<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ViewSettingsFilterItem","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.ViewSettingsItem, iIndex: Number) -> sap.m.ViewSettingsFilterItem","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position","oItem":"type: sap.m.ViewSettingsItem, description: the item to insert; if empty, nothing is inserted"}},"getMultiSelect":{"!description":"Gets current value of property <code>multiSelect<\/code>.\n\nIf set to (true), multi selection will be allowed for the items aggregation.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.m.Input_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.Input with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.InputBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.Input"},"sap.m.InputListItem":{"!description":"List item should be used for a label and an input field.","getMetadata":{"!description":"Returns a metadata object for class sap.m.InputListItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLabel":{"!description":"Gets current value of property <code>label<\/code>.\n\nLabel of the list item","!static":false,"!category":"function","!type":"fn() -> String"},"bindContent":{"!description":"Binds aggregation <code>content<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.InputListItem","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>content<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> Number","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"}},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nContent controls can be added","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.m.ListItemBase","removeAllContent":{"!description":"Removes all the controls from the aggregation <code>content<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!category":"class","setLabelTextDirection":{"!description":"Sets a new value for property <code>labelTextDirection<\/code>.\n\nThis property specifies the label text directionality with enumerated options. By default, the label inherits text direction from the DOM.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sLabelTextDirection: sap.ui.core.TextDirection) -> sap.m.InputListItem","parameters":{"sLabelTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>labelTextDirection<\/code>"}},"getLabelTextDirection":{"!description":"Gets current value of property <code>labelTextDirection<\/code>.\n\nThis property specifies the label text directionality with enumerated options. By default, the label inherits text direction from the DOM.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"addContent":{"!description":"Adds some content to the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.m.InputListItem","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to add; if empty, nothing is inserted"}},"unbindContent":{"!description":"Unbinds aggregation <code>content<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.InputListItem"},"removeContent":{"!description":"Removes a content from the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The contentto remove or its index or id"}},"extend":{"!description":"Creates a new subclass of class sap.m.InputListItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new InputListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getLabelTextDirection labelTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well.","!module":"sap/m/InputListItem","!helpDescription":"List item should be used for a label and an input field.","setLabel":{"!description":"Sets a new value for property <code>label<\/code>.\n\nLabel of the list item\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLabel: String) -> sap.m.InputListItem","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}},"insertContent":{"!description":"Inserts a content into the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.m.InputListItem","parameters":{"oContent":"type: sap.ui.core.Control, description: the content to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the content should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value\n             greater than the current size of the aggregation, the content is inserted at\n             the last position"}},"destroyContent":{"!description":"Destroys all the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.InputListItem"}},"sap.m.semantic.FilterSelect_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.FilterSelect with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticSelect.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.FilterSelect"},"sap.m.semantic.FilterSelect":{"!description":"A FilterSelect button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","extend":{"!description":"Creates a new subclass of class sap.m.semantic.FilterSelect with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticSelect.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.FilterSelect.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new FilterSelect.","!module":"sap/m/semantic/FilterSelect","!helpDescription":"A FilterSelect button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","!proto":"sap.m.semantic.SemanticSelect","!category":"class"},"sap.m.DateTimeInputType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.8 Instead, use dedicated <code>sap.m.DatePicker<\/code> and/or <code>sap.m.TimePicker<\/code> controls.<br>A subset of DateTimeInput types that fit to a simple API returning one string.","!module":"sap/m/library","!category":"static class","Time":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.8 Instead, use dedicated <code>sap.m.TimePicker<\/code> control.<br>An input control for specifying a time value. The user can select the hour, minute, and optionally AM or PM.","!category":"enum","!type":"String"},"Date":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22.0 Instead, use dedicated <code>sap.m.DatePicker<\/code> control.<br>An input control for specifying a date value. The user can select a month, day of the month, and year.","!category":"enum","!type":"String"},"DateTime":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.8 Instead, use dedicated <code>sap.m.DatePicker<\/code> and <code>sap.m.TimePicker<\/code> controls.<br>An input control for specifying a date and time value. The user can select a month, day of the month, year, and time of day.","!category":"enum","!type":"String"}},"sap.m.ValueColor":{"!description":"Enumeration of possible value color settings.","Neutral":{"!description":"Neutral value color.","!category":"enum","!type":"String"},"!module":"sap/m/library","Error":{"!description":"Error value color.","!category":"enum","!type":"String"},"!category":"static class","Critical":{"!description":"Critical value color.","!category":"enum","!type":"String"},"Good":{"!description":"Good value color.","!category":"enum","!type":"String"}},"sap.m.ComboBoxBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ComboBoxBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ComboBoxTextField.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ComboBoxBase"},"sap.m.IconTabSeparator":{"!description":"Represents an Icon used to separate 2 tab filters.","extend":{"!description":"Creates a new subclass of class sap.m.IconTabSeparator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nThe icon to display for this separator. If no icon is given, a separator line is used instead.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.m.IconTabSeparator","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.IconTabSeparator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new IconTabSeparator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/m/IconTabSeparator","setIconDensityAware":{"!description":"Sets a new value for property <code>iconDensityAware<\/code>.\n\nIf set to true, it sends one or more requests,\ntrying to get the density perfect version of the image if this version of\nthe image doesn't exist on the server. Default value is set to true.\n\nIf bandwidth is key for the application, set this value to false.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bIconDensityAware: Boolean) -> sap.m.IconTabSeparator","parameters":{"bIconDensityAware":"type: boolean, description: New value for property <code>iconDensityAware<\/code>"}},"!helpDescription":"Represents an Icon used to separate 2 tab filters.","!proto":"sap.ui.core.Element","!category":"class","getIconDensityAware":{"!description":"Gets current value of property <code>iconDensityAware<\/code>.\n\nIf set to true, it sends one or more requests,\ntrying to get the density perfect version of the image if this version of\nthe image doesn't exist on the server. Default value is set to true.\n\nIf bandwidth is key for the application, set this value to false.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nThe icon to display for this separator. If no icon is given, a separator line is used instead.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"}},"sap.m.routing.Router_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.routing.Router with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.routing.Router.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oRoutes?: [Object | Object], oConfig?: Object, oOwner?: sap.ui.core.UIComponent, oTargetsConfig?: Object)","prototype":"sap.m.routing.Router"},"sap.m.TablePersoProvider":{"!description":"Table Personalization Provider","init":{"!description":"Initializes the TablePersoProvider instance after creation.","!static":false,"!category":"function","!type":"fn()"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.TablePersoProvider.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getPersData":{"!description":"Retrieves the personalization bundle.\nThis must return a jQuery promise (see http://api.jquery.com/promise/)","!static":false,"!category":"function","!type":"fn()"},"!proto":"sap.ui.base.ManagedObject","!category":"class","setPersData":{"!description":"Stores the personalization bundle, overwriting any\nprevious bundle completely\nThis must return a jQuery promise (see http://api.jquery.com/promise/)","!static":false,"!category":"function","!type":"fn(oBundle: Object)","parameters":{"oBundle":"type: object, description: undefined"}},"getCaption":{"!description":"Callback function which can be used to determine the title of a given column\nwithin the TablePersoDialog. As a default, the column header controls are\nasked for their 'text' or 'title' property. This works in most cases, for example\nif the header control is a sap.m.Label (has 'text' property) or a sap.m.ObjectListItem\n(has 'title' property).\n\nIf the header control used in a column has neither 'text' nor 'title' property, or if you would like to\ndisplay a modified column name for a certain column, this callback function can be used.\n\nIf the callback delivers null for a column (which is the default implementation), the default\ntexts described above are displayed for that column in the TablePersoDialog.\n\nIn case neither the callback delivers null and neither 'text' nor ' title' property are at hand,\nthe TablePersoDialog will display the column id and a warning message is logged.","!static":false,"!category":"function","!type":"fn(oColumn: sap.m.Column)","parameters":{"oColumn":"type: sap.m.Column, description: column whose caption shall be determined"}},"extend":{"!description":"Creates a new subclass of class sap.m.TablePersoProvider with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"This is an abstract TablePersoProvider, describing the interface for a real\nTablePersoProvider.","!module":"sap/m/TablePersoProvider","delPersData":{"!description":"Removes the personalization bundle\nThis must return a jQuery promise (see http://api.jquery.com/promise/)","!static":false,"!category":"function","!type":"fn()"},"!helpDescription":"Table Personalization Provider","getGroup":{"!description":"Callback function which can be used to determine the group of a given column\nwithin the TablePersoDialog. As a default, the columns are not assigned to a group.\n\nThis information is used to group the columns within the TablePersoDialog if the TablePersoController's\n'group' flag is set, otherwise, the groups are ignored.","!static":false,"!category":"function","!type":"fn(oColumn: sap.m.Column)","parameters":{"oColumn":"type: sap.m.Column, description: column whose group shall be determined"}},"resetPersData":{"!description":"Resets user\u2019s personalization for a given table so that \u2018getPersData\u2019 will\ndeliver its initial state. If no table is specified, all personalizations\nof the currently logged on user are reset.\n\nThis must return a jQuery promise (see http://api.jquery.com/promise/)","!static":false,"!category":"function","!type":"fn()"}},"sap.m.FeedContent":{"!description":"Displays a tile containing the text of the feed, a subheader, and a numeric value.","getMetadata":{"!description":"Returns a metadata object for class sap.m.FeedContent.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setTruncateValueTo":{"!description":"Sets a new value for property <code>truncateValueTo<\/code>.\n\nThe number of characters to display for the value property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>4<\/code>.","!static":false,"!category":"function","!type":"fn(iTruncateValueTo: Number) -> sap.m.FeedContent","parameters":{"iTruncateValueTo":"type: int, description: New value for property <code>truncateValueTo<\/code>"}},"!proto":"sap.ui.core.Control","!category":"class","setSubheader":{"!description":"Sets a new value for property <code>subheader<\/code>.\n\nThe subheader.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSubheader: String) -> sap.m.FeedContent","parameters":{"sSubheader":"type: string, description: New value for property <code>subheader<\/code>"}},"setContentText":{"!description":"Sets a new value for property <code>contentText<\/code>.\n\nThe content text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sContentText: String) -> sap.m.FeedContent","parameters":{"sContentText":"type: string, description: New value for property <code>contentText<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.FeedContent with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.m.FeedContent<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.FeedContent","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.FeedContent","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nThe actual value.","!static":false,"!category":"function","!type":"fn() -> String"},"getSize":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38.0 The FeedContent control has now a fixed size, depending on the used media (desktop, tablet or phone).<br>Gets current value of property <code>size<\/code>.\n\nUpdates the size of the chart. If not set then the default size is applied based on the device tile.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Size"},"!constructorDescription":"Constructor for a new sap.m.FeedContent control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getContentText contentText} : string<\/li>\n<li>{@link #getSubheader subheader} : string<\/li>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getValueColor valueColor} : sap.m.ValueColor<\/li>\n<li>{@link #getTruncateValueTo truncateValueTo} : int (default: 4)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setSize":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38.0 The FeedContent control has now a fixed size, depending on the used media (desktop, tablet or phone).<br>Sets a new value for property <code>size<\/code>.\n\nUpdates the size of the chart. If not set then the default size is applied based on the device tile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sSize: sap.m.Size) -> sap.m.FeedContent","parameters":{"sSize":"type: sap.m.Size, description: New value for property <code>size<\/code>"}},"!module":"sap/m/FeedContent","getContentText":{"!description":"Gets current value of property <code>contentText<\/code>.\n\nThe content text.","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"Displays a tile containing the text of the feed, a subheader, and a numeric value.","getValueColor":{"!description":"Gets current value of property <code>valueColor<\/code>.\n\nThe semantic color of the value.","!static":false,"!category":"function","!type":"fn() -> sap.m.ValueColor"},"setValueColor":{"!description":"Sets a new value for property <code>valueColor<\/code>.\n\nThe semantic color of the value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sValueColor: sap.m.ValueColor) -> sap.m.FeedContent","parameters":{"sValueColor":"type: sap.m.ValueColor, description: New value for property <code>valueColor<\/code>"}},"setValue":{"!description":"Sets a new value for property <code>value<\/code>.\n\nThe actual value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.m.FeedContent","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"getSubheader":{"!description":"Gets current value of property <code>subheader<\/code>.\n\nThe subheader.","!static":false,"!category":"function","!type":"fn() -> String"},"getTruncateValueTo":{"!description":"Gets current value of property <code>truncateValueTo<\/code>.\n\nThe number of characters to display for the value property.\n\nDefault value is <code>4<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.m.FeedContent<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.FeedContent<\/code> itself.\n\nThe event is fired when the user chooses the feed content.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.FeedContent","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.FeedContent<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.m.BusyDialog":{"fireClose":{"!description":"Fires event <code>close<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>cancelPressed<\/code> of type <code>boolean<\/code>Indicates if the close events are triggered by a user, pressing a cancel button or because the operation was terminated.\nThis parameter is set to true if the close event is fired by user interaction.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.BusyDialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setCancelButtonText":{"!description":"Sets a new value for property <code>cancelButtonText<\/code>.\n\nThe text of the cancel button. The default text is \"Cancel\" (translated to the respective language).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sCancelButtonText: String) -> sap.m.BusyDialog","parameters":{"sCancelButtonText":"type: string, description: New value for property <code>cancelButtonText<\/code>"}},"setCustomIconDensityAware":{"!description":"Sets a new value for property <code>customIconDensityAware<\/code>.\n\nIf this is set to <code>false<\/code>, the source image will be loaded directly without attempting to fetch the density perfect image for high density devices.\nBy default, this is set to <code>true<\/code> but then one or more requests are sent trying to get the density perfect version of the image.\n\nIf bandwidth is the key for the application, set this value to <code>false<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bCustomIconDensityAware: Boolean) -> sap.m.BusyDialog","parameters":{"bCustomIconDensityAware":"type: boolean, description: New value for property <code>customIconDensityAware<\/code>"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getCustomIconHeight":{"!description":"Gets current value of property <code>customIconHeight<\/code>.\n\nHeight of the provided icon with default value \"44px\".\n\nDefault value is <code>44px<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"!proto":"sap.ui.core.Control","getCustomIconDensityAware":{"!description":"Gets current value of property <code>customIconDensityAware<\/code>.\n\nIf this is set to <code>false<\/code>, the source image will be loaded directly without attempting to fetch the density perfect image for high density devices.\nBy default, this is set to <code>true<\/code> but then one or more requests are sent trying to get the density perfect version of the image.\n\nIf bandwidth is the key for the application, set this value to <code>false<\/code>.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","setCustomIconWidth":{"!description":"Sets a new value for property <code>customIconWidth<\/code>.\n\nWidth of the provided icon with default value \"44px\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>44px<\/code>.","!static":false,"!category":"function","!type":"fn(sCustomIconWidth: sap.ui.core.CSSSize) -> sap.m.BusyDialog","parameters":{"sCustomIconWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>customIconWidth<\/code>"}},"getCancelButtonText":{"!description":"Gets current value of property <code>cancelButtonText<\/code>.\n\nThe text of the cancel button. The default text is \"Cancel\" (translated to the respective language).\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setShowCancelButton":{"!description":"Sets a new value for property <code>showCancelButton<\/code>.\n\nIndicates if the cancel button will be rendered inside the busy dialog. The default value is set to <code>false<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowCancelButton: Boolean) -> sap.m.BusyDialog","parameters":{"bShowCancelButton":"type: boolean, description: New value for property <code>showCancelButton<\/code>"}},"setCustomIconHeight":{"!description":"Sets a new value for property <code>customIconHeight<\/code>.\n\nHeight of the provided icon with default value \"44px\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>44px<\/code>.","!static":false,"!category":"function","!type":"fn(sCustomIconHeight: sap.ui.core.CSSSize) -> sap.m.BusyDialog","parameters":{"sCustomIconHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>customIconHeight<\/code>"}},"!constructorDescription":"Constructor for a new BusyDialog.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getCustomIcon customIcon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getCustomIconRotationSpeed customIconRotationSpeed} : int (default: 1000)<\/li>\n<li>{@link #getCustomIconDensityAware customIconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getCustomIconWidth customIconWidth} : sap.ui.core.CSSSize (default: 44px)<\/li>\n<li>{@link #getCustomIconHeight customIconHeight} : sap.ui.core.CSSSize (default: 44px)<\/li>\n<li>{@link #getCancelButtonText cancelButtonText} : string (default: )<\/li>\n<li>{@link #getShowCancelButton showCancelButton} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:close close} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.m.BusyDialog","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nSets the title of the BusyDialog. The default value is an empty string.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setCustomIconRotationSpeed":{"!description":"Sets a new value for property <code>customIconRotationSpeed<\/code>.\n\nDefines the rotation speed of the given image. If GIF file is used, the speed has to be set to 0. The value is in milliseconds.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1000<\/code>.","!static":false,"!category":"function","!type":"fn(iCustomIconRotationSpeed: Number) -> sap.m.BusyDialog","parameters":{"iCustomIconRotationSpeed":"type: int, description: New value for property <code>customIconRotationSpeed<\/code>"}},"attachClose":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>close<\/code> event of this <code>sap.m.BusyDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.BusyDialog<\/code> itself.\n\nFires when the busy dialog is closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.BusyDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.BusyDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setCustomIcon":{"!description":"Sets a new value for property <code>customIcon<\/code>.\n\nIcon, used from the BusyIndicator. This icon is invisible in iOS platform and it is density aware. You can use the density convention (@2, @1.5, etc.) to provide higher resolution image for higher density screens.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sCustomIcon: sap.ui.core.URI) -> sap.m.BusyDialog","parameters":{"sCustomIcon":"type: sap.ui.core.URI, description: New value for property <code>customIcon<\/code>"}},"getCustomIconWidth":{"!description":"Gets current value of property <code>customIconWidth<\/code>.\n\nWidth of the provided icon with default value \"44px\".\n\nDefault value is <code>44px<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"close":{"!description":"Closes the BusyDialog.","!static":false,"!category":"function","!type":"fn() -> sap.m.BusyDialog"},"!description":"BusyDialog is used to indicate that the system is busy and the user has to wait.","getShowCancelButton":{"!description":"Gets current value of property <code>showCancelButton<\/code>.\n\nIndicates if the cancel button will be rendered inside the busy dialog. The default value is set to <code>false<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"detachClose":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>close<\/code> event of this <code>sap.m.BusyDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.BusyDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.BusyDialog.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nOptional text displayed inside the dialog.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nSets the title of the BusyDialog. The default value is an empty string.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.BusyDialog","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.BusyDialog with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/m/BusyDialog","getCustomIcon":{"!description":"Gets current value of property <code>customIcon<\/code>.\n\nIcon, used from the BusyIndicator. This icon is invisible in iOS platform and it is density aware. You can use the density convention (@2, @1.5, etc.) to provide higher resolution image for higher density screens.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"!helpDescription":"BusyDialog is used to indicate that the system is busy and the user has to wait.","getCustomIconRotationSpeed":{"!description":"Gets current value of property <code>customIconRotationSpeed<\/code>.\n\nDefines the rotation speed of the given image. If GIF file is used, the speed has to be set to 0. The value is in milliseconds.\n\nDefault value is <code>1000<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"open":{"!description":"Opens the BusyDialog.","!static":false,"!category":"function","!type":"fn() -> sap.m.BusyDialog"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nOptional text displayed inside the dialog.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.m.BusyDialog","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.m.semantic.SemanticControl":{"!description":"A semantic control is an abstraction for either a {@link sap.m.semantic.SemanticButton} or {@link sap.m.semantic.SemanticSelect} ,\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","extend":{"!description":"Creates a new subclass of class sap.m.semantic.SemanticControl with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nSee {@link sap.ui.core.Control#visible}\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.m.semantic.SemanticControl","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.SemanticControl.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new SemanticControl.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nSee {@link sap.ui.core.Control#visible}\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/m/semantic/SemanticControl","!helpDescription":"A semantic control is an abstraction for either a {@link sap.m.semantic.SemanticButton} or {@link sap.m.semantic.SemanticSelect} ,\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","!proto":"sap.ui.core.Element","!category":"class"},"sap.m.P13nFilterPanel":{"getMaxIncludes":{"!description":"Gets current value of property <code>maxIncludes<\/code>.\n\nDefines the maximum number of include filters.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setContainerQuery":{"!description":"Sets a new value for property <code>containerQuery<\/code>.\n\nDefines if the <code>mediaQuery<\/code> or a <code>ContainerResize<\/code> is used for layout update. If the\n<code>ConditionPanel<\/code> is used in a dialog, the property must be set to <code>true<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bContainerQuery: Boolean) -> sap.m.P13nFilterPanel","parameters":{"bContainerQuery":"type: boolean, description: New value for property <code>containerQuery<\/code>"}},"detachRemoveFilterItem":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>removeFilterItem<\/code> event of this <code>sap.m.P13nFilterPanel<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.P13nFilterPanel","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!proto":"sap.m.P13nPanel","setExcludeOperations":{"!description":"Setter for the supported exclude operations array.","!static":false,"!category":"function","!type":"fn(array: [sap.m.P13nConditionOperation], the: String)","parameters":{"the":"type: string, description: type for which the operations are defined","array":"type: sap.m.P13nConditionOperation[], description: of operations [<code>sap.m.P13nConditionOperation.BT<\/code>,\n       <code>sap.m.P13nConditionOperation.EQ<\/code>]"}},"!category":"class","attachUpdateFilterItem":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>updateFilterItem<\/code> event of this <code>sap.m.P13nFilterPanel<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.P13nFilterPanel<\/code> itself.\n\nUpdates a filter item.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.P13nFilterPanel","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.P13nFilterPanel<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setLayoutMode":{"!description":"Sets a new value for property <code>layoutMode<\/code>.\n\nCan be used to control the layout behavior. Default is \"\" which will automatically change the layout. With \"Desktop\", \"Table\"\nor\"Phone\" you can set a fixed layout.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLayoutMode: String) -> sap.m.P13nFilterPanel","parameters":{"sLayoutMode":"type: string, description: New value for property <code>layoutMode<\/code>"}},"detachAddFilterItem":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>addFilterItem<\/code> event of this <code>sap.m.P13nFilterPanel<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.P13nFilterPanel","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new P13nFilterPanel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMaxIncludes maxIncludes} : string (default: -1)<\/li>\n<li>{@link #getMaxExcludes maxExcludes} : string (default: -1)<\/li>\n<li>{@link #getContainerQuery containerQuery} : boolean (default: false)<\/li>\n<li>{@link #getLayoutMode layoutMode} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getFilterItems filterItems} : sap.m.P13nFilterItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:addFilterItem addFilterItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:removeFilterItem removeFilterItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:updateFilterItem updateFilterItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.P13nPanel#constructor sap.m.P13nPanel}\ncan be used as well.","removeFilterItem":{"!description":"Removes a filterItem from the aggregation <code>filterItems<\/code>.","!static":false,"!category":"function","!type":"fn(vFilterItem: Number | String | sap.m.P13nFilterItem) -> sap.m.P13nFilterItem","parameters":{"vFilterItem":"type: int|string|sap.m.P13nFilterItem, description: The filterItemto remove or its index or id"}},"setConditions":{"!description":"Sets the array of conditions.","!static":false,"!category":"function","!type":"fn(aConditions: [Object])","parameters":{"aConditions":"type: object[], description: the complete list of conditions"}},"setIncludeOperations":{"!description":"Setter for the supported Include operations array.","!static":false,"!category":"function","!type":"fn(array: [sap.m.P13nConditionOperation], the: String)","parameters":{"the":"type: string, description: type for which the operations are defined","array":"type: sap.m.P13nConditionOperation[], description: of operations [<code>sap.m.P13nConditionOperation.BT<\/code>,\n       <code>sap.m.P13nConditionOperation.EQ<\/code>]"}},"validateConditions":{"!description":"Checks if the entered and modified conditions are correct, marks invalid fields in yellow (warning).","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachUpdateFilterItem":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>updateFilterItem<\/code> event of this <code>sap.m.P13nFilterPanel<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.P13nFilterPanel","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachRemoveFilterItem":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>removeFilterItem<\/code> event of this <code>sap.m.P13nFilterPanel<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.P13nFilterPanel<\/code> itself.\n\nRemoves a filter item.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.P13nFilterPanel","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.P13nFilterPanel<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireRemoveFilterItem":{"!description":"Fires event <code>removeFilterItem<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.P13nFilterPanel","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!description":"The P13nFilterPanel control is used to define filter-specific settings for table personalization.","getMetadata":{"!description":"Returns a metadata object for class sap.m.P13nFilterPanel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"insertFilterItem":{"!description":"Inserts a filterItem into the aggregation <code>filterItems<\/code>.","!static":false,"!category":"function","!type":"fn(oFilterItem: sap.m.P13nFilterItem, iIndex: Number) -> sap.m.P13nFilterPanel","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the filterItem should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the filterItem is inserted at position 0; for a value\n             greater than the current size of the aggregation, the filterItem is inserted at\n             the last position","oFilterItem":"type: sap.m.P13nFilterItem, description: the filterItem to insert; if empty, nothing is inserted"}},"setMaxExcludes":{"!description":"Sets a new value for property <code>maxExcludes<\/code>.\n\nDefines the maximum number of exclude filters.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn(sMaxExcludes: String) -> sap.m.P13nFilterPanel","parameters":{"sMaxExcludes":"type: string, description: New value for property <code>maxExcludes<\/code>"}},"fireAddFilterItem":{"!description":"Fires event <code>addFilterItem<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.P13nFilterPanel","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getFilterItems":{"!description":"Gets content of aggregation <code>filterItems<\/code>.\n\nDefines filter items.","!static":false,"!category":"function","!type":"fn() -> [sap.m.P13nFilterItem]"},"getExcludeOperations":{"!description":"Getter for the exclude operations.","!static":false,"!category":"function","!type":"fn(the: String) -> [sap.m.P13nConditionOperation]","parameters":{"the":"type: string, description: type for which the operations are defined"}},"removeAllFilterItems":{"!description":"Removes all the controls from the aggregation <code>filterItems<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.P13nFilterItem]"},"destroyFilterItems":{"!description":"Destroys all the filterItems in the aggregation <code>filterItems<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.P13nFilterPanel"},"fireUpdateFilterItem":{"!description":"Fires event <code>updateFilterItem<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.P13nFilterPanel","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getConditions":{"!description":"Returns the array of conditions.","!static":false,"!category":"function","!type":"fn()"},"unbindFilterItems":{"!description":"Unbinds aggregation <code>filterItems<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.P13nFilterPanel"},"getContainerQuery":{"!description":"Gets current value of property <code>containerQuery<\/code>.\n\nDefines if the <code>mediaQuery<\/code> or a <code>ContainerResize<\/code> is used for layout update. If the\n<code>ConditionPanel<\/code> is used in a dialog, the property must be set to <code>true<\/code>.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.m.P13nFilterPanel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.P13nPanel.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"attachAddFilterItem":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>addFilterItem<\/code> event of this <code>sap.m.P13nFilterPanel<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.P13nFilterPanel<\/code> itself.\n\nEvent raised if a filter item has been added.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.P13nFilterPanel","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.P13nFilterPanel<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"indexOfFilterItem":{"!description":"Checks for the provided <code>sap.m.P13nFilterItem<\/code> in the aggregation <code>filterItems<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oFilterItem: sap.m.P13nFilterItem) -> Number","parameters":{"oFilterItem":"type: sap.m.P13nFilterItem, description: The filterItem whose index is looked for"}},"setMaxIncludes":{"!description":"Sets a new value for property <code>maxIncludes<\/code>.\n\nDefines the maximum number of include filters.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn(sMaxIncludes: String) -> sap.m.P13nFilterPanel","parameters":{"sMaxIncludes":"type: string, description: New value for property <code>maxIncludes<\/code>"}},"!module":"sap/m/P13nFilterPanel","getMaxExcludes":{"!description":"Gets current value of property <code>maxExcludes<\/code>.\n\nDefines the maximum number of exclude filters.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"The P13nFilterPanel control is used to define filter-specific settings for table personalization.","getIncludeOperations":{"!description":"Getter for the include operations.","!static":false,"!category":"function","!type":"fn(the: String) -> sap.m.P13nConditionOperation","parameters":{"the":"type: string, description: type for which the operations are defined"}},"addFilterItem":{"!description":"Adds some filterItem to the aggregation <code>filterItems<\/code>.","!static":false,"!category":"function","!type":"fn(oFilterItem: sap.m.P13nFilterItem) -> sap.m.P13nFilterPanel","parameters":{"oFilterItem":"type: sap.m.P13nFilterItem, description: the filterItem to add; if empty, nothing is inserted"}},"getLayoutMode":{"!description":"Gets current value of property <code>layoutMode<\/code>.\n\nCan be used to control the layout behavior. Default is \"\" which will automatically change the layout. With \"Desktop\", \"Table\"\nor\"Phone\" you can set a fixed layout.","!static":false,"!category":"function","!type":"fn() -> String"},"bindFilterItems":{"!description":"Binds aggregation <code>filterItems<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.P13nFilterPanel","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"removeValidationErrors":{"!description":"Removes all errors and warnings states from of all filter conditions.","!static":false,"!category":"function","!type":"fn()"},"removeInvalidConditions":{"!description":"Removes all invalid conditions.","!static":false,"!category":"function","!type":"fn()"}},"sap.m.semantic.SortAction":{"!description":"A SortAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","extend":{"!description":"Creates a new subclass of class sap.m.semantic.SortAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.SortAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new SortAction.","!module":"sap/m/semantic/SortAction","!helpDescription":"A SortAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","!proto":"sap.m.semantic.SemanticButton","!category":"class"},"sap.m.MessageToast":{"!description":"A message toast notification offers simple feedback about an operation in a pop-up.\nToasts automatically disappear after a timeout unless the user moves the mouse over\nthe toast or taps on it. In this case the toast will remain on the screen and can\nbe closed when the user moves the mouse out or taps out of the toast.\nToasts appears close the bottom of the screen, centered horizontally, but you can change\nthis position which is not dependent on the default values of the position settings.\nThe default position applies as long as the application does not do any position setting.\nPosition settings are \"my\", \"at\", \"of\" and \"offset\".\n\nBeware that only one message toast can be shown at a time in the same place.\nIf you want to have multiple message toasts visible at the same time, you need to position\nthe message toasts in different places.\nThis positioning needs to be handled in the application logic.\n\nMessage toast example:\n\n<pre>\nsap.m.MessageToast.show(\"This message should appear in the message toast\", {\n    duration: 3000,                  // default\n    width: \"15em\",                   // default\n    my: \"center bottom\",             // default\n    at: \"center bottom\",             // default\n    of: window,                      // default\n    offset: \"0 0\",                   // default\n    collision: \"fit fit\"             // default\n    onClose: null,                   // default\n    autoClose: true,                 // default\n    animationTimingFunction: \"ease\", // default\n    animationDuration: 1000,         // default\n    closeOnBrowserNavigation: true   // default\n});\n<\/pre>","!module":"sap/m/MessageToast","!helpDescription":"A message toast notification offers simple feedback about an operation in a pop-up.\nToasts automatically disappear after a timeout unless the user moves the mouse over\nthe toast or taps on it. In this case the toast will remain on the screen and can\nbe closed when the user moves the mouse out or taps out of the toast.\nToasts appears close the bottom of the screen, centered horizontally, but you can change\nthis position which is not dependent on the default values of the position settings.\nThe default position applies as long as the application does not do any position setting.\nPosition settings are \"my\", \"at\", \"of\" and \"offset\".\n\nBeware that only one message toast can be shown at a time in the same place.\nIf you want to have multiple message toasts visible at the same time, you need to position\nthe message toasts in different places.\nThis positioning needs to be handled in the application logic.\n\nMessage toast example:\n\n<pre>\nsap.m.MessageToast.show(\"This message should appear in the message toast\", {\n    duration: 3000,                  // default\n    width: \"15em\",                   // default\n    my: \"center bottom\",             // default\n    at: \"center bottom\",             // default\n    of: window,                      // default\n    offset: \"0 0\",                   // default\n    collision: \"fit fit\"             // default\n    onClose: null,                   // default\n    autoClose: true,                 // default\n    animationTimingFunction: \"ease\", // default\n    animationDuration: 1000,         // default\n    closeOnBrowserNavigation: true   // default\n});\n<\/pre>","show":{"!description":"Creates and displays a simple message toast notification message with the given text, and optionally other options.\n\nThe only mandatory parameter is <code>sMessage<\/code>.","!static":"true","!category":"function","!type":"fn(sMessage: String, mOptions?: Object)"},"!category":"namespace"},"sap.m.TileContent":{"setContent":{"!description":"Sets the aggregated <code>content<\/code>.","!static":false,"!category":"function","!type":"fn(oContent: sap.ui.core.Control) -> sap.m.TileContent","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to set"}},"bindContent":{"!description":"Binds aggregation <code>content<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.TileContent","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"setDisabled":{"!description":"Sets a new value for property <code>disabled<\/code>.\n\nDisables control if true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bDisabled: Boolean) -> sap.m.TileContent","parameters":{"bDisabled":"type: boolean, description: New value for property <code>disabled<\/code>"}},"getContent":{"!description":"Gets content of aggregation <code>content<\/code>.\n\nThe switchable view that depends on the tile type.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!proto":"sap.ui.core.Control","!category":"class","setRenderContent":{"!description":"Setter for protected property to enable or disable content rendering. This function does not invalidate the control.","!static":false,"!category":"function","!type":"fn(value: Boolean) -> sap.m.TileContent","parameters":{"value":"type: boolean, description: Determines whether the control's content is rendered or not"}},"!constructorDescription":"Constructor for a new sap.m.TileContent control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFooter footer} : string<\/li>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getUnit unit} : string<\/li>\n<li>{@link #getDisabled disabled} : boolean (default: false)<\/li>\n<li>{@link #getFrameType frameType} : sap.m.FrameType (default: Auto)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setSize":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38.0 The TileContent control has now a fixed size, depending on the used media (desktop, tablet or phone).<br>Sets a new value for property <code>size<\/code>.\n\nUpdates the size of the tile. If it is not set, then the default size is applied based on the device tile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sSize: sap.m.Size) -> sap.m.TileContent","parameters":{"sSize":"type: sap.m.Size, description: New value for property <code>size<\/code>"}},"setUnit":{"!description":"Sets a new value for property <code>unit<\/code>.\n\nThe percent sign, the currency symbol, or the unit of measure.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sUnit: String) -> sap.m.TileContent","parameters":{"sUnit":"type: string, description: New value for property <code>unit<\/code>"}},"destroyContent":{"!description":"Destroys the content in the aggregation <code>content<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.TileContent"},"!description":"This control is used within the GenericTile control.","getMetadata":{"!description":"Returns a metadata object for class sap.m.TileContent.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getFooter":{"!description":"Gets current value of property <code>footer<\/code>.\n\nThe footer text of the tile.","!static":false,"!category":"function","!type":"fn() -> String"},"unbindContent":{"!description":"Unbinds aggregation <code>content<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.TileContent"},"setRenderFooter":{"!description":"Setter for protected property to enable or disable footer rendering. This function does not invalidate the control.","!static":false,"!category":"function","!type":"fn(value: Boolean) -> sap.m.TileContent","parameters":{"value":"type: boolean, description: Determines whether the control's footer is rendered or not"}},"extend":{"!description":"Creates a new subclass of class sap.m.TileContent with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getDisabled":{"!description":"Gets current value of property <code>disabled<\/code>.\n\nDisables control if true.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getSize":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38.0 The TileContent control has now a fixed size, depending on the used media (desktop, tablet or phone).<br>Gets current value of property <code>size<\/code>.\n\nUpdates the size of the tile. If it is not set, then the default size is applied based on the device tile.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Size"},"!module":"sap/m/TileContent","!helpDescription":"This control is used within the GenericTile control.","setFooter":{"!description":"Sets a new value for property <code>footer<\/code>.\n\nThe footer text of the tile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFooter: String) -> sap.m.TileContent","parameters":{"sFooter":"type: string, description: New value for property <code>footer<\/code>"}},"getFrameType":{"!description":"Gets current value of property <code>frameType<\/code>.\n\nThe frame type: 1x1 or 2x1.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.FrameType"},"setFrameType":{"!description":"Sets a new value for property <code>frameType<\/code>.\n\nThe frame type: 1x1 or 2x1.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sFrameType: sap.m.FrameType) -> sap.m.TileContent","parameters":{"sFrameType":"type: sap.m.FrameType, description: New value for property <code>frameType<\/code>"}},"getUnit":{"!description":"Gets current value of property <code>unit<\/code>.\n\nThe percent sign, the currency symbol, or the unit of measure.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.m.P13nColumnsItem":{"!description":"Type for <code>columnsItems<\/code> aggregation in P13nColumnsPanel control.","setTotal":{"!description":"Sets a new value for property <code>total<\/code>.\n\nThis property contains the total flag of a table column.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bTotal: Boolean) -> sap.m.P13nColumnsItem","parameters":{"bTotal":"type: boolean, description: New value for property <code>total<\/code>"}},"setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nThis property decides whether a P13nColumnsItem is visible\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.m.P13nColumnsItem","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.P13nColumnsItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nThis property decides whether a P13nColumnsItem is visible","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getIndex":{"!description":"Gets current value of property <code>index<\/code>.\n\nThis property contains the index of a table column","!static":false,"!category":"function","!type":"fn() -> Number"},"!proto":"sap.ui.core.Item","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThis property contains the with of a table column.","!static":false,"!category":"function","!type":"fn() -> String"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThis property contains the with of a table column.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: String) -> sap.m.P13nColumnsItem","parameters":{"sWidth":"type: string, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.P13nColumnsItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getColumnKey":{"!description":"Gets current value of property <code>columnKey<\/code>.\n\nThis property contains the unique table column key","!static":false,"!category":"function","!type":"fn() -> String"},"setColumnKey":{"!description":"Sets a new value for property <code>columnKey<\/code>.\n\nThis property contains the unique table column key\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sColumnKey: String) -> sap.m.P13nColumnsItem","parameters":{"sColumnKey":"type: string, description: New value for property <code>columnKey<\/code>"}},"!constructorDescription":"Constructor for a new P13nColumnsItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColumnKey columnKey} : string<\/li>\n<li>{@link #getIndex index} : int<\/li>\n<li>{@link #getVisible visible} : boolean<\/li>\n<li>{@link #getWidth width} : string<\/li>\n<li>{@link #getTotal total} : boolean<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","!module":"sap/m/P13nColumnsItem","!helpDescription":"Type for <code>columnsItems<\/code> aggregation in P13nColumnsPanel control.","setIndex":{"!description":"Sets a new value for property <code>index<\/code>.\n\nThis property contains the index of a table column\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iIndex: Number) -> sap.m.P13nColumnsItem","parameters":{"iIndex":"type: int, description: New value for property <code>index<\/code>"}},"getTotal":{"!description":"Gets current value of property <code>total<\/code>.\n\nThis property contains the total flag of a table column.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.m.semantic.GroupSelect":{"!description":"A GroupSelect button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","extend":{"!description":"Creates a new subclass of class sap.m.semantic.GroupSelect with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticSelect.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.GroupSelect.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new GroupSelect.","!module":"sap/m/semantic/GroupSelect","!helpDescription":"A GroupSelect button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","!proto":"sap.m.semantic.SemanticSelect","!category":"class"},"sap.m.Carousel_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.Carousel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.Carousel"},"sap.m.MessageBox.Icon":{"!description":"Enumeration of the pre-defined icons that can be used in a MessageBox.","SUCCESS":{"!description":"Shows the success icon in the message box.","!category":"enum","!type":"String"},"!module":"sap/m/MessageBox","!helpDescription":"Enumeration of the pre-defined icons that can be used in a MessageBox.","INFORMATION":{"!description":"Shows the information icon in the message box.","!category":"enum","!type":"String"},"!category":"namespace","ERROR":{"!description":"Shows the error icon in the message box.","!category":"enum","!type":"String"},"NONE":{"!description":"Shows no icon in the message box.","!category":"enum","!type":"String"},"WARNING":{"!description":"Shows the warning icon in the message box.","!category":"enum","!type":"String"},"QUESTION":{"!description":"Shows the question icon in the message box.","!category":"enum","!type":"String"}},"sap.m.SwipeDirection":{"!description":"Directions for swipe event.","RightToLeft":{"!description":"Swipe from right to left.","!category":"enum","!type":"String"},"!module":"sap/m/library","!category":"static class","Both":{"!description":"Both directions (left to right or right to left)","!category":"enum","!type":"String"},"LeftToRight":{"!description":"Swipe from left to right","!category":"enum","!type":"String"}},"sap.m.semantic.SemanticToggleButton":{"!description":"A SemanticToggleButton is eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","extend":{"!description":"Creates a new subclass of class sap.m.semantic.SemanticToggleButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.SemanticToggleButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new SemanticToggleButton.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPressed pressed} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.SemanticButton#constructor sap.m.semantic.SemanticButton}\ncan be used as well.","!module":"sap/m/semantic/SemanticToggleButton","!helpDescription":"A SemanticToggleButton is eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","setPressed":{"!description":"Sets a new value for property <code>pressed<\/code>.\n\nThe property is \u201ctrue\u201d when the control is toggled. The default state of this property is \"false\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bPressed: Boolean) -> sap.m.semantic.SemanticToggleButton","parameters":{"bPressed":"type: boolean, description: New value for property <code>pressed<\/code>"}},"!proto":"sap.m.semantic.SemanticButton","getPressed":{"!description":"Gets current value of property <code>pressed<\/code>.\n\nThe property is \u201ctrue\u201d when the control is toggled. The default state of this property is \"false\".\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class"},"sap.m.P13nColumnsPanel_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.P13nColumnsPanel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.P13nPanel.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.P13nColumnsPanel"},"sap.m.routing.Targets":{"extend":{"!description":"Creates a new subclass of class sap.m.routing.Targets with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.routing.Targets.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.routing.Targets.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Provides a convenient way for placing views into the correct containers of your application.\nThe mobile extension of Targets also handles the triggering of page navigation when the target control is a {@link sap.m.SplitContainer}, a {@link sap.m.NavContainer} or a control which extends one of these.\nOther controls are also allowed, but the extra parameters viewLevel, transition and transitionParameters are ignored and it will behave like {@link sap.ui.core.routing.Targets}.\nWhen a target is displayed, dialogs will be closed. To change this use {@link #getTargetHandler} and {@link sap.m.routing.TargetHandler#setCloseDialogs}.","!module":"sap/m/routing/Targets","!proto":"sap.ui.core.routing.Targets","!category":"class","getTargetHandler":{"!description":"Returns the TargetHandler instance.","!static":false,"!category":"function","!type":"fn() -> sap.m.routing.TargetHandler"}},"sap.m.Token":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Token","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.m.Token<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Token<\/code> itself.\n\nThis event is fired when the token gets selected.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Token","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Token<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nIndicates the editable status of the token. If it is set to <code>true<\/code>, token displays a delete icon.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","!category":"class","!constructorDescription":"Constructor for a new Token.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getKey key} : string (default: )<\/li>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:delete delete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.m.Token","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"attachDelete":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>delete<\/code> event of this <code>sap.m.Token<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Token<\/code> itself.\n\nThis event is fired if the user clicks the token's delete icon.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Token","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Token<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.m.Token<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Token<\/code> itself.\n\nThis event is fired when the user clicks on the token.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Token","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Token<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setKey":{"!description":"Sets a new value for property <code>key<\/code>.\n\nKey of the token.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sKey: String) -> sap.m.Token","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"}},"!description":"The <code>sap.m.Token<\/code> is a container of a single text item with a delete icon if the token is in edit mode.","getKey":{"!description":"Gets current value of property <code>key<\/code>.\n\nKey of the token.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"detachDelete":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>delete<\/code> event of this <code>sap.m.Token<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Token","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.Token.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nDisplayed text of the token.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nThis property specifies the text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.m.Token","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.m.Token","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.m.Token with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.m.Token<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Token","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Token","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getSelected":{"!description":"Gets current value of property <code>selected<\/code>.\n\nIndicates the current selection status of the token.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setEditable":{"!description":"Sets a new value for property <code>editable<\/code>.\n\nIndicates the editable status of the token. If it is set to <code>true<\/code>, token displays a delete icon.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEditable: Boolean) -> sap.m.Token","parameters":{"bEditable":"type: boolean, description: New value for property <code>editable<\/code>"}},"!module":"sap/m/Token","!helpDescription":"The <code>sap.m.Token<\/code> is a container of a single text item with a delete icon if the token is in edit mode.","removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"fireDelete":{"!description":"Fires event <code>delete<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Token","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.m.Token<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Token","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nThis property specifies the text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nDisplayed text of the token.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.m.Token","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.m.InputODataSuggestProvider":{"!description":"Suggestion helper for sap.m.Input fields: Creates a multi column suggest list for a sap.m.Input field based on a ValueList\nannotation. The ValueList annotation will be resolved via the binding information of the Input field.\n\nIf the annotation describes multiple input parameter the suggest provider will resolve all of these relative to the\ncontext of the Input filed and use them for the suggestion query. The suggest provider will write all values that are\ndescribed as output parameters back to the model (relative to the context of the Input field). This can only be done if\nthe model runs in \"TwoWay\" binding mode. Both features can be switched of via the bResolveInput/bResolveOutput parameter\nof the suggest function:","!module":"sap/m/library","!helpDescription":"Suggestion helper for sap.m.Input fields: Creates a multi column suggest list for a sap.m.Input field based on a ValueList\nannotation. The ValueList annotation will be resolved via the binding information of the Input field.\n\nIf the annotation describes multiple input parameter the suggest provider will resolve all of these relative to the\ncontext of the Input filed and use them for the suggestion query. The suggest provider will write all values that are\ndescribed as output parameters back to the model (relative to the context of the Input field). This can only be done if\nthe model runs in \"TwoWay\" binding mode. Both features can be switched of via the bResolveInput/bResolveOutput parameter\nof the suggest function:","!category":"namespace"},"sap.m.List_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.List with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.List"},"sap.m.P13nFilterItem":{"!description":"Type for <code>filterItems<\/code> aggregation in P13nFilterPanel control.","getMetadata":{"!description":"Returns a metadata object for class sap.m.P13nFilterItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setExclude":{"!description":"Sets a new value for property <code>exclude<\/code>.\n\ndefines if the filter is an include or exclude filter item\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bExclude: Boolean) -> sap.m.P13nFilterItem","parameters":{"bExclude":"type: boolean, description: New value for property <code>exclude<\/code>"}},"!proto":"sap.ui.core.Item","!category":"class","getExclude":{"!description":"Gets current value of property <code>exclude<\/code>.\n\ndefines if the filter is an include or exclude filter item\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getValue1":{"!description":"Gets current value of property <code>value1<\/code>.\n\nvalue of the filter","!static":false,"!category":"function","!type":"fn() -> String"},"getValue2":{"!description":"Gets current value of property <code>value2<\/code>.\n\nto value of the between filter","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.m.P13nFilterItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getColumnKey":{"!description":"Gets current value of property <code>columnKey<\/code>.\n\nkey of the column","!static":false,"!category":"function","!type":"fn() -> String"},"setColumnKey":{"!description":"Sets a new value for property <code>columnKey<\/code>.\n\nkey of the column\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sColumnKey: String) -> sap.m.P13nFilterItem","parameters":{"sColumnKey":"type: string, description: New value for property <code>columnKey<\/code>"}},"setValue2":{"!description":"Sets a new value for property <code>value2<\/code>.\n\nto value of the between filter\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sValue2: String) -> sap.m.P13nFilterItem","parameters":{"sValue2":"type: string, description: New value for property <code>value2<\/code>"}},"!constructorDescription":"Constructor for a new P13nFilterItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getOperation operation} : string<\/li>\n<li>{@link #getValue1 value1} : string<\/li>\n<li>{@link #getValue2 value2} : string<\/li>\n<li>{@link #getColumnKey columnKey} : string<\/li>\n<li>{@link #getExclude exclude} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","setValue1":{"!description":"Sets a new value for property <code>value1<\/code>.\n\nvalue of the filter\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sValue1: String) -> sap.m.P13nFilterItem","parameters":{"sValue1":"type: string, description: New value for property <code>value1<\/code>"}},"!module":"sap/m/P13nFilterItem","!helpDescription":"Type for <code>filterItems<\/code> aggregation in P13nFilterPanel control.","getOperation":{"!description":"Gets current value of property <code>operation<\/code>.\n\nsap.m.P13nConditionOperation","!static":false,"!category":"function","!type":"fn() -> String"},"setOperation":{"!description":"Sets a new value for property <code>operation<\/code>.\n\nsap.m.P13nConditionOperation\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sOperation: String) -> sap.m.P13nFilterItem","parameters":{"sOperation":"type: string, description: New value for property <code>operation<\/code>"}}},"sap.m.P13nSortPanel_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.P13nSortPanel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.P13nPanel.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.P13nSortPanel"},"sap.m.semantic.SaveAction":{"!description":"A SaveAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","extend":{"!description":"Creates a new subclass of class sap.m.semantic.SaveAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.SaveAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new SaveAction.","!module":"sap/m/semantic/SaveAction","!helpDescription":"A SaveAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","!proto":"sap.m.semantic.SemanticButton","!category":"class"},"sap.m.TileContainer":{"detachTileAdd":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>tileAdd<\/code> event of this <code>sap.m.TileContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.TileContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getEditable":{"!description":"Gets current value of property <code>editable<\/code>.\n\nDetermines whether the TileContainer is editable so you can move, delete or add tiles.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","!category":"class","getPageFirstTileIndex":{"!description":"Returns the index of the first Tile visible in the current page.","!static":false,"!category":"function","!type":"fn() -> Number"},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDefines the width of the TileContainer in px.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"removeAllTiles":{"!description":"Removes all the controls from the aggregation <code>tiles<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Tile]"},"insertTile":{"!description":"Inserts a Tile to the given index.","!static":false,"!category":"function","!type":"fn(oTile: sap.m.Tile, iIndex: Number) -> sap.m.TileContainer","parameters":{"iIndex":"type: int, description: The new Tile position in the tiles aggregation","oTile":"type: sap.m.Tile, description: The Tile to insert"}},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nDefines the height of the TileContainer in px.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new TileContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getEditable editable} : boolean<\/li>\n<li>{@link #getAllowAdd allowAdd} : boolean<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTiles tiles} : sap.m.Tile[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:tileMove tileMove} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:tileDelete tileDelete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:tileAdd tileAdd} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","deleteTile":{"!description":"Deletes a Tile.","!static":false,"!category":"function","!type":"fn(oTile: sap.m.Tile) -> sap.m.TileContainer","parameters":{"oTile":"type: sap.m.Tile, description: The tile to move"}},"scrollIntoView":{"!description":"Scrolls to the page where the given Tile or tile index is included.\nOptionally this can be done animated or not. With IE9 the scroll is never animated.","!static":false,"!category":"function","!type":"fn(vTile: sap.m.Tile | Number, bAnimated: Boolean)","parameters":{"vTile":"type: sap.m.Tile|int, description: The Tile or tile index to be scrolled into view","bAnimated":"type: boolean, description: Whether the scroll should be animated"}},"attachTileMove":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>tileMove<\/code> event of this <code>sap.m.TileContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.TileContainer<\/code> itself.\n\nFires if a Tile is moved.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.TileContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.TileContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"moveTile":{"!description":"Moves a given Tile to the given index.","!static":false,"!category":"function","!type":"fn(vTile: sap.m.Tile, iNewIndex: Number) -> sap.m.TileContainer","parameters":{"iNewIndex":"type: int, description: The new Tile position in the tiles aggregation","vTile":"type: sap.m.Tile, description: The tile to move"}},"fireTileAdd":{"!description":"Fires event <code>tileAdd<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.TileContainer","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"scrollLeft":{"!description":"Scrolls one page to the left.","!static":false,"!category":"function","!type":"fn()"},"!description":"A container that arranges same-size tiles nicely on carousel pages.","attachTileDelete":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>tileDelete<\/code> event of this <code>sap.m.TileContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.TileContainer<\/code> itself.\n\nFires if a Tile is deleted in Edit mode.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.TileContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.TileContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.TileContainer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"addTile":{"!description":"Adds a Tile to the end of the tiles collection.","!static":false,"!category":"function","!type":"fn(oTile: sap.m.Tile) -> sap.m.TileContainer","parameters":{"oTile":"type: sap.m.Tile, description: The tile to add"}},"getAllowAdd":{"!description":"Gets current value of property <code>allowAdd<\/code>.\n\nDetermines whether the user is allowed to add Tiles in Edit mode (editable = true).","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeTile":{"!description":"Removes a tile from the aggregation <code>tiles<\/code>.","!static":false,"!category":"function","!type":"fn(vTile: Number | String | sap.m.Tile) -> sap.m.Tile","parameters":{"vTile":"type: int|string|sap.m.Tile, description: The tileto remove or its index or id"}},"fireTileMove":{"!description":"Fires event <code>tileMove<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>tile<\/code> of type <code>sap.m.Tile<\/code>The Tile that has been moved.<\/li>\n<li><code>newIndex<\/code> of type <code>int<\/code>The new index of the Tile in the tiles aggregation.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.TileContainer","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachTileAdd":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>tileAdd<\/code> event of this <code>sap.m.TileContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.TileContainer<\/code> itself.\n\nFires when a Tile is added.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.TileContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.TileContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachTileMove":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>tileMove<\/code> event of this <code>sap.m.TileContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.TileContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nDefines the height of the TileContainer in px.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.m.TileContainer","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDefines the width of the TileContainer in px.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.TileContainer","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"destroyTiles":{"!description":"Destroys all the tiles in the aggregation <code>tiles<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.TileContainer"},"scrollRight":{"!description":"Scrolls one page to the right.","!static":false,"!category":"function","!type":"fn()"},"extend":{"!description":"Creates a new subclass of class sap.m.TileContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"fireTileDelete":{"!description":"Fires event <code>tileDelete<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>tile<\/code> of type <code>sap.m.Tile<\/code>The deleted Tile.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.TileContainer","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setEditable":{"!description":"Sets the editable property to the TileContainer, allowing to move icons.\nThis is currently also set with a long tap.","!static":false,"!category":"function","!type":"fn(bValue: Boolean) -> sap.m.TileContainer","parameters":{"bValue":"type: boolean, description: Whether the container is in edit mode or not"}},"!module":"sap/m/TileContainer","!helpDescription":"A container that arranges same-size tiles nicely on carousel pages.","detachTileDelete":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>tileDelete<\/code> event of this <code>sap.m.TileContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.TileContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"indexOfTile":{"!description":"Checks for the provided <code>sap.m.Tile<\/code> in the aggregation <code>tiles<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oTile: sap.m.Tile) -> Number","parameters":{"oTile":"type: sap.m.Tile, description: The tile whose index is looked for"}},"getTiles":{"!description":"Gets content of aggregation <code>tiles<\/code>.\n\nThe Tiles to be displayed by the TileContainer.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Tile]"},"setAllowAdd":{"!description":"Sets a new value for property <code>allowAdd<\/code>.\n\nDetermines whether the user is allowed to add Tiles in Edit mode (editable = true).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bAllowAdd: Boolean) -> sap.m.TileContainer","parameters":{"bAllowAdd":"type: boolean, description: New value for property <code>allowAdd<\/code>"}}},"sap.m.Input":{"insertSuggestionColumn":{"!description":"Inserts a suggestionColumn into the aggregation <code>suggestionColumns<\/code>.","!static":false,"!category":"function","!type":"fn(oSuggestionColumn: sap.m.Column, iIndex: Number) -> sap.m.Input","parameters":{"oSuggestionColumn":"type: sap.m.Column, description: the suggestionColumn to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the suggestionColumn should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the suggestionColumn is inserted at position 0; for a value\n             greater than the current size of the aggregation, the suggestionColumn is inserted at\n             the last position"}},"attachSuggestionItemSelected":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>suggestionItemSelected<\/code> event of this <code>sap.m.Input<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Input<\/code> itself.\n\nThis event is fired when suggestionItem shown in suggestion popup are selected. This event is only fired when showSuggestion is set to true and there are suggestionItems shown in the suggestion popup.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Input","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Input<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireSuggestionItemSelected":{"!description":"Fires event <code>suggestionItemSelected<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selectedItem<\/code> of type <code>sap.ui.core.Item<\/code>This is the item selected in the suggestion popup for one and two-value suggestions. For tabular suggestions, this value will not be set.<\/li>\n<li><code>selectedRow<\/code> of type <code>sap.m.ColumnListItem<\/code>This is the row selected in the tabular suggestion popup represented as a ColumnListItem. For one and two-value suggestions, this value will not be set.\n\nNote: The row result function to select a result value for the string is already executed at this time. To pick different value for the input field or to do follow up steps after the item has been selected.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Input","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setFilterSuggests":{"!description":"Sets a new value for property <code>filterSuggests<\/code>.\n\nDefines whether to filter the provided suggestions before showing them to the user.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bFilterSuggests: Boolean) -> sap.m.Input","parameters":{"bFilterSuggests":"type: boolean, description: New value for property <code>filterSuggests<\/code>"}},"unbindSuggestionColumns":{"!description":"Unbinds aggregation <code>suggestionColumns<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.Input"},"fireValueHelpRequest":{"!description":"Fires event <code>valueHelpRequest<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>fromSuggestions<\/code> of type <code>boolean<\/code>The event parameter is set to true, when the button at the end of the suggestion table is clicked, otherwise false. It can be used to determine whether the \"value help\" trigger or the \"show all items\" trigger has been pressed.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Input","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getValueHelpOnly":{"!description":"Gets current value of property <code>valueHelpOnly<\/code>.\n\nIf set to true, direct text input is disabled and the control will trigger the event \"valueHelpRequest\" for all user interactions. The properties \"showValueHelp\", \"editable\", and \"enabled\" must be set to true, otherwise the property will have no effect\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setMaxSuggestionWidth":{"!description":"Sets a new value for property <code>maxSuggestionWidth<\/code>.\n\nIf set, the value of this parameter will control the horizontal size of the suggestion list to display more data. This allows suggestion lists to be wider than the input field if there is enough space available. By default, the suggestion list is always as wide as the input field.\nNote: The value will be ignored if the actual width of the input field is larger than the specified parameter value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sMaxSuggestionWidth: sap.ui.core.CSSSize) -> sap.m.Input","parameters":{"sMaxSuggestionWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>maxSuggestionWidth<\/code>"}},"setValueStateText":{"!description":"Setter for property <code>valueStateText<\/code>.\n\nDefault value is empty/<code>undefined<\/code>","!static":false,"!category":"function","!type":"fn(sValueStateText: String) -> sap.m.InputBase","parameters":{"sValueStateText":"type: string, description: new value for property <code>valueStateText<\/code>"}},"setShowTableSuggestionValueHelp":{"!description":"Sets a new value for property <code>showTableSuggestionValueHelp<\/code>.\n\nFor tabular suggestions, this flag will show/hide the button at the end of the suggestion table that triggers the event \"valueHelpRequest\" when pressed. The default value is true.\n\nNOTE: If suggestions are not tabular or no suggestions are used, the button will not be displayed and this flag is without effect.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowTableSuggestionValueHelp: Boolean) -> sap.m.Input","parameters":{"bShowTableSuggestionValueHelp":"type: boolean, description: New value for property <code>showTableSuggestionValueHelp<\/code>"}},"getMaxSuggestionWidth":{"!description":"Gets current value of property <code>maxSuggestionWidth<\/code>.\n\nIf set, the value of this parameter will control the horizontal size of the suggestion list to display more data. This allows suggestion lists to be wider than the input field if there is enough space available. By default, the suggestion list is always as wide as the input field.\nNote: The value will be ignored if the actual width of the input field is larger than the specified parameter value.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getSuggestionRows":{"!description":"Gets content of aggregation <code>suggestionRows<\/code>.\n\nThe suggestionColumns and suggestionRows are for tabular input suggestions. This aggregation allows for binding the table cells.\nThe items of this aggregation are to be bound directly or to set in the suggest event method.\nNote: If this aggregation is filled, the aggregation suggestionItems will be ignored.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ColumnListItem]"},"setShowSuggestion":{"!description":"Sets a new value for property <code>showSuggestion<\/code>.\n\nIf this is set to true, suggest event is fired when user types in the input. Changing the suggestItems aggregation in suggest event listener will show suggestions within a popup. When runs on phone, input will first open a dialog where the input and suggestions are shown. When runs on a tablet, the suggestions are shown in a popup next to the input.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSuggestion: Boolean) -> sap.m.Input","parameters":{"bShowSuggestion":"type: boolean, description: New value for property <code>showSuggestion<\/code>"}},"setValueLiveUpdate":{"!description":"Sets a new value for property <code>valueLiveUpdate<\/code>.\n\nIndicates when the value gets updated with the user changes: At each keystroke (true) or first when the user presses enter or tabs out (false).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bValueLiveUpdate: Boolean) -> sap.m.Input","parameters":{"bValueLiveUpdate":"type: boolean, description: New value for property <code>valueLiveUpdate<\/code>"}},"bindSuggestionColumns":{"!description":"Binds aggregation <code>suggestionColumns<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.Input","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"!description":"Enables users to input data.","getMetadata":{"!description":"Returns a metadata object for class sap.m.Input.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"detachSuggest":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>suggest<\/code> event of this <code>sap.m.Input<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Input","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setStartSuggestion":{"!description":"Sets a new value for property <code>startSuggestion<\/code>.\n\nMinimum length of the entered text in input before suggest event is fired. The default value is 1 which means the suggest event is fired after user types in input. When it's set to 0, suggest event is fired when input with no text gets focus.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn(iStartSuggestion: Number) -> sap.m.Input","parameters":{"iStartSuggestion":"type: int, description: New value for property <code>startSuggestion<\/code>"}},"addSuggestionItem":{"!description":"Adds some suggestionItem to the aggregation <code>suggestionItems<\/code>.","!static":false,"!category":"function","!type":"fn(oSuggestionItem: sap.ui.core.Item) -> sap.m.Input","parameters":{"oSuggestionItem":"type: sap.ui.core.Item, description: the suggestionItem to add; if empty, nothing is inserted"}},"detachLiveChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>liveChange<\/code> event of this <code>sap.m.Input<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Input","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getShowSuggestion":{"!description":"Gets current value of property <code>showSuggestion<\/code>.\n\nIf this is set to true, suggest event is fired when user types in the input. Changing the suggestItems aggregation in suggest event listener will show suggestions within a popup. When runs on phone, input will first open a dialog where the input and suggestions are shown. When runs on a tablet, the suggestions are shown in a popup next to the input.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setRowResultFunction":{"!description":"Sets a custom result filter function for tabular suggestions to select the text that is passed to the input field. Default is to check whether the first cell with a \"text\" property begins with the typed value. For one value and two-value suggestions this callback function is not called.","!static":false,"!category":"function","!type":"fn(fnFilter: fn()) -> sap.m.Input","parameters":{"fnFilter":"type: function, description: The result function is called with one parameter: the sap.m.ColumnListItem that is selected. The function must return a result string that will be displayed as the input field's value."}},"ontap":{"!description":"Fire valueHelpRequest event on tap","!static":false,"!category":"function","!type":"fn(oEvent: jQuery.Event)","parameters":{"oEvent":"type: jQuery.Event, description: undefined"}},"setFilterFunction":{"!description":"Sets a custom filter function for suggestions. The default is to check whether the first item text begins with the typed value. For one and two-value suggestions this callback function will operate on sap.ui.core.Item types, for tabular suggestions the function will operate on sap.m.ColumnListItem types.","!static":false,"!category":"function","!type":"fn(fnFilter: fn()) -> sap.m.Input","parameters":{"fnFilter":"type: function, description: The filter function is called when displaying suggestion items and has two input parameters: the first one is the string that is currently typed in the input field and the second one is the item that is being filtered. Returning true will add this item to the popup, returning false will not display it."}},"detachSuggestionItemSelected":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>suggestionItemSelected<\/code> event of this <code>sap.m.Input<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Input","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"insertSuggestionRow":{"!description":"Inserts a suggestionRow into the aggregation <code>suggestionRows<\/code>.","!static":false,"!category":"function","!type":"fn(oSuggestionRow: sap.m.ColumnListItem, iIndex: Number) -> sap.m.Input","parameters":{"oSuggestionRow":"type: sap.m.ColumnListItem, description: the suggestionRow to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the suggestionRow should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the suggestionRow is inserted at position 0; for a value\n             greater than the current size of the aggregation, the suggestionRow is inserted at\n             the last position"}},"extend":{"!description":"Creates a new subclass of class sap.m.Input with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.InputBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getSuggestionColumns":{"!description":"Gets content of aggregation <code>suggestionColumns<\/code>.\n\nThe suggestionColumns and suggestionRows are for tabular input suggestions. This aggregation allows for binding the table columns; for more details see the aggregation \"suggestionRows\".","!static":false,"!category":"function","!type":"fn() -> [sap.m.Column]"},"getShowTableSuggestionValueHelp":{"!description":"Gets current value of property <code>showTableSuggestionValueHelp<\/code>.\n\nFor tabular suggestions, this flag will show/hide the button at the end of the suggestion table that triggers the event \"valueHelpRequest\" when pressed. The default value is true.\n\nNOTE: If suggestions are not tabular or no suggestions are used, the button will not be displayed and this flag is without effect.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/m/Input","!helpDescription":"Enables users to input data.","getType":{"!description":"Gets current value of property <code>type<\/code>.\n\nHTML type of the internal <code>input<\/code> tag (e.g. Text, Number, Email, Phone).\nThe particular effect of this property differs depending on the browser and the current language settings,\nespecially for the type Number.<br>\nThis parameter is intended to be used with touch devices that use different soft keyboard layouts depending on the given input type.<br>\nOnly the default value <code>sap.m.InputType.Text<\/code> may be used in combination with data model formats.\n<code>sap.ui.model<\/code> defines extended formats that are mostly incompatible with normal HTML\nrepresentations for numbers and dates.\n\nDefault value is <code>Text<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.InputType"},"removeSuggestionItem":{"!description":"Removes a suggestionItem from the aggregation <code>suggestionItems<\/code>.","!static":false,"!category":"function","!type":"fn(vSuggestionItem: Number | String | sap.ui.core.Item) -> sap.ui.core.Item","parameters":{"vSuggestionItem":"type: int|string|sap.ui.core.Item, description: The suggestionItemto remove or its index or id"}},"detachSubmit":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>submit<\/code> event of this <code>sap.m.Input<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Input","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getDateFormat":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.9.1 <code>sap.m.DatePicker<\/code>, <code>sap.m.TimePicher<\/code> or <code>sap.m.DateTimePicker<\/code> should be used for date/time inputs and formating.<br>Gets current value of property <code>dateFormat<\/code>.\n\nOnly used if type=date and no datepicker is available.\nThe data is displayed and the user input is parsed according to this format.\nNOTE: The value property is always of the form RFC 3339 (YYYY-MM-dd).\n\nDefault value is <code>YYYY-MM-dd<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getSuggestionItems":{"!description":"Gets content of aggregation <code>suggestionItems<\/code>.\n\nSuggestItems are the items which will be shown in the suggestion popup. Changing this aggregation (by calling addSuggestionItem, insertSuggestionItem, removeSuggestionItem, removeAllSuggestionItems, destroySuggestionItems) after input is rendered will open/close the suggestion popup. o display suggestions with two text values, it is also possible to add sap.ui.core/ListItems as SuggestionItems (since 1.21.1). For the selected ListItem, only the first value is returned to the input field.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"setMaxLength":{"!description":"Sets a new value for property <code>maxLength<\/code>.\n\nMaximum number of characters. Value '0' means the feature is switched off.\nThis parameter is not compatible with the input type <code>sap.m.InputType.Number<\/code>.\nIf the input type is set to <code>Number<\/code>, the <code>maxLength<\/code> value is ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iMaxLength: Number) -> sap.m.Input","parameters":{"iMaxLength":"type: int, description: New value for property <code>maxLength<\/code>"}},"attachSubmit":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>submit<\/code> event of this <code>sap.m.Input<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Input<\/code> itself.\n\nThis event is fired when user presses the <code>Enter<\/code> key on the input.\n\n<b>Note:<\/b>\nThe event is fired independent of whether there was a change before or not. If a change was performed the event is fired after the change event.\nThe event is also fired when an item of the select list is selected via <code>Enter<\/code>.\nThe event is only fired on an input which allows text input (<code>editable<\/code>, <code>enabled<\/code> and not <code>valueHelpOnly<\/code>).","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Input","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Input<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"indexOfSuggestionColumn":{"!description":"Checks for the provided <code>sap.m.Column<\/code> in the aggregation <code>suggestionColumns<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSuggestionColumn: sap.m.Column) -> Number","parameters":{"oSuggestionColumn":"type: sap.m.Column, description: The suggestionColumn whose index is looked for"}},"fireLiveChange":{"!description":"Fires event <code>liveChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value<\/code> of type <code>string<\/code>The new value of the input.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Input","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setFieldWidth":{"!description":"Sets a new value for property <code>fieldWidth<\/code>.\n\nThis property only takes effect if the description property is set. It controls the distribution of space between the input field and the description text. The default value is 50% leaving the other 50% for the description.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>50%<\/code>.","!static":false,"!category":"function","!type":"fn(sFieldWidth: sap.ui.core.CSSSize) -> sap.m.Input","parameters":{"sFieldWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>fieldWidth<\/code>"}},"setShowValueHelp":{"!description":"Sets a new value for property <code>showValueHelp<\/code>.\n\nIf set to true, a value help indicator will be displayed inside the control. When clicked the event \"valueHelpRequest\" will be fired.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowValueHelp: Boolean) -> sap.m.Input","parameters":{"bShowValueHelp":"type: boolean, description: New value for property <code>showValueHelp<\/code>"}},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"getShowValueStateMessage":{"!description":"Getter for property <code>showValueStateMessage<\/code>.\nWhether the value state message should be shown. This property is already available for sap.m.Input since 1.16.0.\n\nDefault value is <code>true<\/code>","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeSuggestionRow":{"!description":"Removes a suggestionRow from the aggregation <code>suggestionRows<\/code>.","!static":false,"!category":"function","!type":"fn(vSuggestionRow: Number | String | sap.m.ColumnListItem) -> sap.m.ColumnListItem","parameters":{"vSuggestionRow":"type: int|string|sap.m.ColumnListItem, description: The suggestionRowto remove or its index or id"}},"insertSuggestionItem":{"!description":"Inserts a suggestionItem into the aggregation <code>suggestionItems<\/code>.","!static":false,"!category":"function","!type":"fn(oSuggestionItem: sap.ui.core.Item, iIndex: Number) -> sap.m.Input","parameters":{"oSuggestionItem":"type: sap.ui.core.Item, description: the suggestionItem to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the suggestionItem should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the suggestionItem is inserted at position 0; for a value\n             greater than the current size of the aggregation, the suggestionItem is inserted at\n             the last position"}},"!proto":"sap.m.InputBase","removeSuggestionColumn":{"!description":"Removes a suggestionColumn from the aggregation <code>suggestionColumns<\/code>.","!static":false,"!category":"function","!type":"fn(vSuggestionColumn: Number | String | sap.m.Column) -> sap.m.Column","parameters":{"vSuggestionColumn":"type: int|string|sap.m.Column, description: The suggestionColumnto remove or its index or id"}},"!category":"class","getWidth":{"!description":"Returns the width of the input.","!static":false,"!category":"function","!type":"fn() -> String"},"setDescription":{"!description":"Sets a new value for property <code>description<\/code>.\n\nThe description is a text after the input field, e.g. units of measurement, currencies.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDescription: String) -> sap.m.Input","parameters":{"sDescription":"type: string, description: New value for property <code>description<\/code>"}},"attachLiveChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>liveChange<\/code> event of this <code>sap.m.Input<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Input<\/code> itself.\n\nThis event is fired when the value of the input is changed - e.g. at each keypress","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Input","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Input<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachSuggest":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>suggest<\/code> event of this <code>sap.m.Input<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Input<\/code> itself.\n\nThis event is fired when user types in the input and showSuggestion is set to true. Changing the suggestItems aggregation will show the suggestions within a popup.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Input","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Input<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getDescription":{"!description":"Gets current value of property <code>description<\/code>.\n\nThe description is a text after the input field, e.g. units of measurement, currencies.","!static":false,"!category":"function","!type":"fn() -> String"},"getFieldWidth":{"!description":"Gets current value of property <code>fieldWidth<\/code>.\n\nThis property only takes effect if the description property is set. It controls the distribution of space between the input field and the description text. The default value is 50% leaving the other 50% for the description.\n\nDefault value is <code>50%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new Input.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getType type} : sap.m.InputType (default: Text)<\/li>\n<li>{@link #getMaxLength maxLength} : int (default: 0)<\/li>\n<li>{@link #getDateFormat dateFormat} : string (default: YYYY-MM-dd)<\/li>\n<li>{@link #getShowValueHelp showValueHelp} : boolean (default: false)<\/li>\n<li>{@link #getShowSuggestion showSuggestion} : boolean (default: false)<\/li>\n<li>{@link #getValueHelpOnly valueHelpOnly} : boolean (default: false)<\/li>\n<li>{@link #getFilterSuggests filterSuggests} : boolean (default: true)<\/li>\n<li>{@link #getMaxSuggestionWidth maxSuggestionWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getStartSuggestion startSuggestion} : int (default: 1)<\/li>\n<li>{@link #getShowTableSuggestionValueHelp showTableSuggestionValueHelp} : boolean (default: true)<\/li>\n<li>{@link #getDescription description} : string<\/li>\n<li>{@link #getFieldWidth fieldWidth} : sap.ui.core.CSSSize (default: 50%)<\/li>\n<li>{@link #getValueLiveUpdate valueLiveUpdate} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSuggestionItems suggestionItems} : sap.ui.core.Item[] (default)<\/li>\n<li>{@link #getSuggestionColumns suggestionColumns} : sap.m.Column[]<\/li>\n<li>{@link #getSuggestionRows suggestionRows} : sap.m.ColumnListItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:valueHelpRequest valueHelpRequest} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:suggest suggest} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:suggestionItemSelected suggestionItemSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:submit submit} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.InputBase#constructor sap.m.InputBase}\ncan be used as well.","indexOfSuggestionRow":{"!description":"Checks for the provided <code>sap.m.ColumnListItem<\/code> in the aggregation <code>suggestionRows<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSuggestionRow: sap.m.ColumnListItem) -> Number","parameters":{"oSuggestionRow":"type: sap.m.ColumnListItem, description: The suggestionRow whose index is looked for"}},"getValueLiveUpdate":{"!description":"Gets current value of property <code>valueLiveUpdate<\/code>.\n\nIndicates when the value gets updated with the user changes: At each keystroke (true) or first when the user presses enter or tabs out (false).\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllSuggestionRows":{"!description":"Removes all the controls from the aggregation <code>suggestionRows<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ColumnListItem]"},"fireSuggest":{"!description":"Fires event <code>suggest<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>suggestValue<\/code> of type <code>string<\/code>The current value which has been typed in the input.<\/li>\n<li><code>suggestionColumns<\/code> of type <code>sap.m.ListBase<\/code>The suggestion list is passed to this event for convenience. If you use list-based or tabular suggestions, fill the suggestionList with the items you want to suggest. Otherwise, directly add the suggestions to the \"suggestionItems\" aggregation of the input control.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Input","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"detachValueHelpRequest":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>valueHelpRequest<\/code> event of this <code>sap.m.Input<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Input","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getStartSuggestion":{"!description":"Gets current value of property <code>startSuggestion<\/code>.\n\nMinimum length of the entered text in input before suggest event is fired. The default value is 1 which means the suggest event is fired after user types in input. When it's set to 0, suggest event is fired when input with no text gets focus.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"addSuggestionRow":{"!description":"Adds some suggestionRow to the aggregation <code>suggestionRows<\/code>.","!static":false,"!category":"function","!type":"fn(oSuggestionRow: sap.m.ColumnListItem) -> sap.m.Input","parameters":{"oSuggestionRow":"type: sap.m.ColumnListItem, description: the suggestionRow to add; if empty, nothing is inserted"}},"destroySuggestionItems":{"!description":"Destroys all the suggestionItems in the aggregation <code>suggestionItems<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Input"},"unbindSuggestionRows":{"!description":"Unbinds aggregation <code>suggestionRows<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.Input"},"bindAggregation":{"!description":"Forwards aggregations with the name of items or columns to the internal table.","!static":false,"!category":"function","!type":"fn(sAggregationName: String, oBindingInfo: Object) -> sap.m.Input","parameters":{"sAggregationName":"type: string, description: the name for the binding","oBindingInfo":"type: object, description: the configuration parameters for the binding"}},"fireSubmit":{"!description":"Fires event <code>submit<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value<\/code> of type <code>string<\/code>The new value of the input.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Input","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setDateFormat":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.9.1 <code>sap.m.DatePicker<\/code>, <code>sap.m.TimePicher<\/code> or <code>sap.m.DateTimePicker<\/code> should be used for date/time inputs and formating.<br>Sets a new value for property <code>dateFormat<\/code>.\n\nOnly used if type=date and no datepicker is available.\nThe data is displayed and the user input is parsed according to this format.\nNOTE: The value property is always of the form RFC 3339 (YYYY-MM-dd).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>YYYY-MM-dd<\/code>.","!static":false,"!category":"function","!type":"fn(sDateFormat: String) -> sap.m.Input","parameters":{"sDateFormat":"type: string, description: New value for property <code>dateFormat<\/code>"}},"getShowValueHelp":{"!description":"Gets current value of property <code>showValueHelp<\/code>.\n\nIf set to true, a value help indicator will be displayed inside the control. When clicked the event \"valueHelpRequest\" will be fired.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"indexOfSuggestionItem":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation <code>suggestionItems<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oSuggestionItem: sap.ui.core.Item) -> Number","parameters":{"oSuggestionItem":"type: sap.ui.core.Item, description: The suggestionItem whose index is looked for"}},"getValueStateText":{"!description":"Getter for property <code>valueStateText<\/code>.\nThe text which is shown in the value state message popup. If not specfied a default text is shown. This property is already available for sap.m.Input since 1.16.0.\n\nDefault value is empty/<code>undefined<\/code>","!static":false,"!category":"function","!type":"fn() -> String"},"bindSuggestionRows":{"!description":"Binds aggregation <code>suggestionRows<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.Input","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"setValueHelpOnly":{"!description":"Sets a new value for property <code>valueHelpOnly<\/code>.\n\nIf set to true, direct text input is disabled and the control will trigger the event \"valueHelpRequest\" for all user interactions. The properties \"showValueHelp\", \"editable\", and \"enabled\" must be set to true, otherwise the property will have no effect\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bValueHelpOnly: Boolean) -> sap.m.Input","parameters":{"bValueHelpOnly":"type: boolean, description: New value for property <code>valueHelpOnly<\/code>"}},"destroySuggestionColumns":{"!description":"Destroys all the suggestionColumns in the aggregation <code>suggestionColumns<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Input"},"setShowValueStateMessage":{"!description":"Setter for property <code>showValueStateMessage<\/code>.\n\nDefault value is <code>true<\/code>","!static":false,"!category":"function","!type":"fn(bShowValueStateMessage: Boolean) -> sap.m.InputBase","parameters":{"bShowValueStateMessage":"type: boolean, description: new value for property <code>showValueStateMessage<\/code>"}},"attachValueHelpRequest":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>valueHelpRequest<\/code> event of this <code>sap.m.Input<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Input<\/code> itself.\n\nWhen the value help indicator is clicked, this event will be fired.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Input","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Input<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setType":{"!description":"Sets a new value for property <code>type<\/code>.\n\nHTML type of the internal <code>input<\/code> tag (e.g. Text, Number, Email, Phone).\nThe particular effect of this property differs depending on the browser and the current language settings,\nespecially for the type Number.<br>\nThis parameter is intended to be used with touch devices that use different soft keyboard layouts depending on the given input type.<br>\nOnly the default value <code>sap.m.InputType.Text<\/code> may be used in combination with data model formats.\n<code>sap.ui.model<\/code> defines extended formats that are mostly incompatible with normal HTML\nrepresentations for numbers and dates.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Text<\/code>.","!static":false,"!category":"function","!type":"fn(sType: sap.m.InputType) -> sap.m.Input","parameters":{"sType":"type: sap.m.InputType, description: New value for property <code>type<\/code>"}},"setWidth":{"!description":"Defines the width of the input. Default value is 100%","!static":false,"!category":"function","!type":"fn(sWidth: String)","parameters":{"sWidth":"type: string, description: undefined"}},"getFilterSuggests":{"!description":"Gets current value of property <code>filterSuggests<\/code>.\n\nDefines whether to filter the provided suggestions before showing them to the user.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addSuggestionColumn":{"!description":"Adds some suggestionColumn to the aggregation <code>suggestionColumns<\/code>.","!static":false,"!category":"function","!type":"fn(oSuggestionColumn: sap.m.Column) -> sap.m.Input","parameters":{"oSuggestionColumn":"type: sap.m.Column, description: the suggestionColumn to add; if empty, nothing is inserted"}},"getMaxLength":{"!description":"Gets current value of property <code>maxLength<\/code>.\n\nMaximum number of characters. Value '0' means the feature is switched off.\nThis parameter is not compatible with the input type <code>sap.m.InputType.Number<\/code>.\nIf the input type is set to <code>Number<\/code>, the <code>maxLength<\/code> value is ignored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setValue":{"!description":"Setter for property <code>value<\/code>.\n\nDefault value is empty/<code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.m.Input","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>."}},"destroySuggestionRows":{"!description":"Destroys all the suggestionRows in the aggregation <code>suggestionRows<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Input"},"removeAllSuggestionColumns":{"!description":"Removes all the controls from the aggregation <code>suggestionColumns<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.Column]"},"removeAllSuggestionItems":{"!description":"Removes all the controls from the aggregation <code>suggestionItems<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"}},"sap.m.ComboBox":{"removeItem":{"!description":"Removes an item from the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.core.Item) -> sap.ui.core.Item","parameters":{"vItem":"type: int|string|sap.ui.core.Item, description: The item to be removed or its index or ID."}},"selectText":{"!description":"Sets the start and end positions of the current text selection.","!static":false,"!category":"function","!type":"fn(iSelectionStart: Number, iSelectionEnd: Number)","parameters":{"iSelectionStart":"type: int, description: The index of the first selected character.","iSelectionEnd":"type: int, description: The index of the character after the last selected character."}},"fireSelectionChange":{"!description":"Fires event <code>selectionChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selectedItem<\/code> of type <code>sap.ui.core.Item<\/code>The selected item.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ComboBox","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!proto":"sap.m.ComboBoxBase","!category":"class","getShowSecondaryValues":{"!description":"Gets current value of property <code>showSecondaryValues<\/code>.\n\nIndicates whether the text values of the <code>additionalText<\/code> property of a\n{@link sap.ui.core.ListItem} are shown.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getItems":{"!description":"Gets aggregation <code>items<\/code>.\n\n<b>Note<\/b>: This is the default aggregation.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"!constructorDescription":"Constructor for a new <code>sap.m.ComboBox<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSelectedKey selectedKey} : string (default: )<\/li>\n<li>{@link #getSelectedItemId selectedItemId} : string (default: )<\/li>\n<li>{@link #getShowSecondaryValues showSecondaryValues} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ComboBoxBase#constructor sap.m.ComboBoxBase}\ncan be used as well.","getDefaultSelectedItem":{"!description":"Gets the default selected item from the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> null"},"synchronizeSelection":{"!description":"Synchronizes the <code>selectedItem<\/code> association and the <code>selectedItemId<\/code> property.","!static":false,"!category":"function","!type":"fn()"},"getSelectedItemId":{"!description":"Gets current value of property <code>selectedItemId<\/code>.\n\nID of the selected item.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"detachSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>selectionChange<\/code> event of this <code>sap.m.ComboBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.ComboBox","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>selectionChange<\/code> event of this <code>sap.m.ComboBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.ComboBox<\/code> itself.\n\nThis event is fired when the user types something that matches with an item in the list;\nit is also fired when the user presses on a list item, or when navigating via keyboard.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.ComboBox","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.ComboBox<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getSelectedItem":{"!description":"Gets the selected item object from the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Item | null"},"!description":"The <code>sap.m.ComboBox<\/code> control combines a dropdown list with items and a text field with a button,\nallowing the user to either type a value directly or choose from the list of existing items.","getMetadata":{"!description":"Returns a metadata object for class sap.m.ComboBox.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setSelectedKey":{"!description":"Sets the <code>selectedKey<\/code> property.\n\nDefault value is an empty string <code>\"\"<\/code> or <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sKey: String) -> sap.m.ComboBox","parameters":{"sKey":"type: string, description: New value for property <code>selectedKey<\/code>.\nIf the provided <code>sKey<\/code> is an empty string <code>\"\"<\/code> or <code>undefined<\/code>,\nthe selection is cleared.\nIf duplicate keys exist, the first item matching the key is selected."}},"createPicker":{"!description":"Creates a picker popup container where the selection should take place.\n\nTo be overwritten by subclasses.","!static":false,"!category":"function","!type":"fn(sPickerType: String) -> sap.m.Popover | sap.m.Dialog","parameters":{"sPickerType":"type: string, description: undefined"}},"setShowSecondaryValues":{"!description":"Sets a new value for property <code>showSecondaryValues<\/code>.\n\nIndicates whether the text values of the <code>additionalText<\/code> property of a\n{@link sap.ui.core.ListItem} are shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSecondaryValues: Boolean) -> sap.m.ComboBox","parameters":{"bShowSecondaryValues":"type: boolean, description: New value for property <code>showSecondaryValues<\/code>"}},"onBeforeOpen":{"!description":"This event handler is called before the picker popup is opened.","!static":false,"!category":"function","!type":"fn()"},"setSelectedItemId":{"!description":"Sets the <code>selectedItemId<\/code> property.\n\nDefault value is an empty string <code>\"\"<\/code> or <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: String | undefined) -> sap.m.ComboBox","parameters":{"vItem":"type: string|undefined, description: New value for property <code>selectedItemId<\/code>.\nIf the provided <code>vItem<\/code> is an empty string <code>\"\"<\/code> or <code>undefined<\/code>,\nthe selection is cleared.\nIf the ID has no corresponding aggregated item, the selected item is not changed."}},"extend":{"!description":"Creates a new subclass of class sap.m.ComboBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ComboBoxBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setSelectedItem":{"!description":"Sets the <code>selectedItem<\/code> association.\n\nDefault value is <code>null<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: String | sap.ui.core.Item | null) -> sap.m.ComboBox","parameters":{"vItem":"type: string|sap.ui.core.Item|null, description: New value for the <code>selectedItem<\/code> association.\nIf an ID of a <code>sap.ui.core.Item<\/code> is given, the item with this ID becomes the\n<code>selectedItem<\/code> association.\nAlternatively, a <code>sap.ui.core.Item<\/code> instance may be given or <code>null<\/code> to clear\nthe selection."}},"!module":"sap/m/ComboBox","getSelectedKey":{"!description":"Gets current value of property <code>selectedKey<\/code>.\n\nKey of the selected item.\n\n<b>Note:<\/b> If duplicate keys exist, the first item matching the key is used.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"The <code>sap.m.ComboBox<\/code> control combines a dropdown list with items and a text field with a button,\nallowing the user to either type a value directly or choose from the list of existing items."},"sap.m.semantic.GroupAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.GroupAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.GroupAction"},"sap.m.NotificationListItem":{"!description":"The NotificationListItem control is suitable for showing notifications to the user.","getMetadata":{"!description":"Returns a metadata object for class sap.m.NotificationListItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.m.NotificationListBase","setHideShowMoreButton":{"!description":"Sets a new value for property <code>hideShowMoreButton<\/code>.\n\nDetermines it the \"Show More\" button should be hidden.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bHideShowMoreButton: Boolean) -> sap.m.NotificationListItem","parameters":{"bHideShowMoreButton":"type: boolean, description: New value for property <code>hideShowMoreButton<\/code>"}},"!category":"class","getHideShowMoreButton":{"!description":"Gets current value of property <code>hideShowMoreButton<\/code>.\n\nDetermines it the \"Show More\" button should be hidden.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setDescription":{"!description":"Sets a new value for property <code>description<\/code>.\n\nDetermines the description of the NotificationListItem.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sDescription: String) -> sap.m.NotificationListItem","parameters":{"sDescription":"type: string, description: New value for property <code>description<\/code>"}},"setTruncate":{"!description":"Sets a new value for property <code>truncate<\/code>.\n\nDetermines if the text in the title and the description of the notification are truncated to the first two lines.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bTruncate: Boolean) -> sap.m.NotificationListItem","parameters":{"bTruncate":"type: boolean, description: New value for property <code>truncate<\/code>"}},"getDescription":{"!description":"Gets current value of property <code>description<\/code>.\n\nDetermines the description of the NotificationListItem.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.m.NotificationListItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.NotificationListBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getTruncate":{"!description":"Gets current value of property <code>truncate<\/code>.\n\nDetermines if the text in the title and the description of the notification are truncated to the first two lines.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!constructorDescription":"Constructor for a new NotificationListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDescription description} : string (default: )<\/li>\n<li>{@link #getTruncate truncate} : boolean (default: true)<\/li>\n<li>{@link #getHideShowMoreButton hideShowMoreButton} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.NotificationListBase#constructor sap.m.NotificationListBase}\ncan be used as well.","!module":"sap/m/NotificationListItem","!helpDescription":"The NotificationListItem control is suitable for showing notifications to the user."},"sap.m.P13nPanelType":{"!description":"Type of panels used in the personalization dialog.","filter":{"!description":"Panel type for filtering.","!category":"enum","!type":"String"},"!module":"sap/m/library","columns":{"!description":"Panel type for column settings.","!category":"enum","!type":"String"},"!category":"static class","sort":{"!description":"Panel type for sorting.","!category":"enum","!type":"String"},"dimeasure":{"!description":"Panel type for dimension and measure settings.","!category":"enum","!type":"String"},"group":{"!description":"Panel type for grouping.","!category":"enum","!type":"String"}},"sap.m.TabStripSelectList_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.TabStripSelectList with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.SelectList.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.TabStripSelectList"},"sap.m.MessagePage":{"setCustomDescription":{"!description":"Sets the aggregated <code>customDescription<\/code>.","!static":false,"!category":"function","!type":"fn(oCustomDescription: sap.m.Link) -> sap.m.MessagePage","parameters":{"oCustomDescription":"type: sap.m.Link, description: The customDescription to set"}},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"detachNavButtonPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>navButtonPress<\/code> event of this <code>sap.m.MessagePage<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.MessagePage","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getShowNavButton":{"!description":"Gets current value of property <code>showNavButton<\/code>.\n\nDetermines the visibility of the navigation button in MessagePage header.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"destroyCustomDescription":{"!description":"Destroys the customDescription in the aggregation <code>customDescription<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.MessagePage"},"fireNavButtonPress":{"!description":"Fires event <code>navButtonPress<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.MessagePage","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!proto":"sap.ui.core.Control","!category":"class","setDescription":{"!description":"Sets a new value for property <code>description<\/code>.\n\nDetermines the detailed description that shows additional information on the MessagePage.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Check the filter settings.<\/code>.","!static":false,"!category":"function","!type":"fn(sDescription: String) -> sap.m.MessagePage","parameters":{"sDescription":"type: string, description: New value for property <code>description<\/code>"}},"getCustomText":{"!description":"Gets content of aggregation <code>customText<\/code>.\n\nThe (optional) custom Text control of this page.\nUse this aggregation when the \"text\" (sap.m.Text) control needs to be replaced with a sap.m.Link control.\n\"text\" and \"textDirection\" setters can be used for this aggregation.","!static":false,"!category":"function","!type":"fn() -> sap.m.Link"},"getDescription":{"!description":"Gets current value of property <code>description<\/code>.\n\nDetermines the detailed description that shows additional information on the MessagePage.\n\nDefault value is <code>Check the filter settings.<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new MessagePage.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: No matching items found.)<\/li>\n<li>{@link #getDescription description} : string (default: Check the filter settings.)<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getShowHeader showHeader} : boolean (default: true)<\/li>\n<li>{@link #getShowNavButton showNavButton} : boolean (default: false)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: sap-icon://documents)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCustomText customText} : sap.m.Link<\/li>\n<li>{@link #getCustomDescription customDescription} : sap.m.Link<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:navButtonPress navButtonPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.m.MessagePage","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nDetermines the title in the header of MessagePage.","!static":false,"!category":"function","!type":"fn() -> String"},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setShowHeader":{"!description":"Sets a new value for property <code>showHeader<\/code>.\n\nDetermines the visibility of the MessagePage header.\nCan be used to hide the header of the MessagePage when it's embedded in another page.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowHeader: Boolean) -> sap.m.MessagePage","parameters":{"bShowHeader":"type: boolean, description: New value for property <code>showHeader<\/code>"}},"setCustomText":{"!description":"Sets the aggregated <code>customText<\/code>.","!static":false,"!category":"function","!type":"fn(oCustomText: sap.m.Link) -> sap.m.MessagePage","parameters":{"oCustomText":"type: sap.m.Link, description: The customText to set"}},"!description":"MessagePage is displayed when there is no data or matching content. There are different use cases where a MessagePage might be visualized, for example:\n\t\t- The search query returned no results\n\t\t- The app contains no items\n\t\t- There are too many items\n\t\t- The application is loading\nThe layout is unchanged but the text varies depending on the use case.\n<br><b>Note:<\/b> The <code>MessagePage<\/code> is not intended to be used as a top-level control,\nbut rather used within controls such as <code>NavContainer<\/code>, <code>App<\/code>, <code>Shell<\/code> or other container controls.","removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"destroyCustomText":{"!description":"Destroys the customText in the aggregation <code>customText<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.MessagePage"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.MessagePage.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nDetermines the main text displayed on the MessagePage.\n\nDefault value is <code>No matching items found.<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getCustomDescription":{"!description":"Gets content of aggregation <code>customDescription<\/code>.\n\nThe (optional) custom description control of this page.\nUse this aggregation when the \"description\" (sap.m.Text) control needs to be replaced with a sap.m.Link control.\n\"description\" and \"textDirection\" setters can be used for this aggregation.","!static":false,"!category":"function","!type":"fn() -> sap.m.Link"},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nDetermines the element's text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.m.MessagePage","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nDetermines the title in the header of MessagePage.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.MessagePage","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"setShowNavButton":{"!description":"Sets a new value for property <code>showNavButton<\/code>.\n\nDetermines the visibility of the navigation button in MessagePage header.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowNavButton: Boolean) -> sap.m.MessagePage","parameters":{"bShowNavButton":"type: boolean, description: New value for property <code>showNavButton<\/code>"}},"getShowHeader":{"!description":"Gets current value of property <code>showHeader<\/code>.\n\nDetermines the visibility of the MessagePage header.\nCan be used to hide the header of the MessagePage when it's embedded in another page.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachNavButtonPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>navButtonPress<\/code> event of this <code>sap.m.MessagePage<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.MessagePage<\/code> itself.\n\nThis event is fired when Nav Button is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.MessagePage","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.MessagePage<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nDetermines the icon displayed on the MessagePage.\n\nDefault value is <code>sap-icon://documents<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.m.MessagePage","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.m.MessagePage with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nDetermines the icon displayed on the MessagePage.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>sap-icon://documents<\/code>.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.m.MessagePage","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"!module":"sap/m/MessagePage","!helpDescription":"MessagePage is displayed when there is no data or matching content. There are different use cases where a MessagePage might be visualized, for example:\n\t\t- The search query returned no results\n\t\t- The app contains no items\n\t\t- There are too many items\n\t\t- The application is loading\nThe layout is unchanged but the text varies depending on the use case.\n<br><b>Note:<\/b> The <code>MessagePage<\/code> is not intended to be used as a top-level control,\nbut rather used within controls such as <code>NavContainer<\/code>, <code>App<\/code>, <code>Shell<\/code> or other container controls.","removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nDetermines the element's text directionality with enumerated options. By default, the control inherits text direction from the DOM.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nDetermines the main text displayed on the MessagePage.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>No matching items found.<\/code>.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.m.MessagePage","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.m.P13nSortItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.P13nSortItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.P13nSortItem"},"sap.m.Shell":{"destroyApp":{"!description":"Destroys the app in the aggregation <code>app<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Shell"},"setBackgroundRepeat":{"!description":"Sets a new value for property <code>backgroundRepeat<\/code>.\n\nDetermines whether the background image (if configured) should be proportionally stretched to cover the whole Shell (false, default) or whether it should be tiled (true).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bBackgroundRepeat: Boolean) -> sap.m.Shell","parameters":{"bBackgroundRepeat":"type: boolean, description: New value for property <code>backgroundRepeat<\/code>"}},"setBackgroundOpacity":{"!description":"Sets a new value for property <code>backgroundOpacity<\/code>.\n\nDefines the opacity of the background image. The opacity can be set between 0 (fully transparent) and 1 (fully opaque).\nThis can be used to improve readability of the Shell content by making the background image partly transparent.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn(fBackgroundOpacity: Number) -> sap.m.Shell","parameters":{"fBackgroundOpacity":"type: float, description: New value for property <code>backgroundOpacity<\/code>"}},"getBackgroundColor":{"!description":"Gets current value of property <code>backgroundColor<\/code>.\n\nDefines the background color of the Shell. If set, this color will override the default background defined by the theme. This should only be set when really required.\nAny configured background image will be placed above this colored background.\nUse the backgroundRepeat property to define whether this image should be stretched to cover the complete Shell or whether it should be tiled.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSColor"},"!proto":"sap.ui.core.Control","setBackgroundImage":{"!description":"Sets a new value for property <code>backgroundImage<\/code>.\n\nDefines the background image of the Shell. If set, this image will override the default background defined by the theme. This should only be set when really required.\nThis background image will be placed above any color set for the background.\nUse the backgroundRepeat property to define whether this image should be stretched to cover the complete Shell or whether it should be tiled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sBackgroundImage: sap.ui.core.URI) -> sap.m.Shell","parameters":{"sBackgroundImage":"type: sap.ui.core.URI, description: New value for property <code>backgroundImage<\/code>"}},"!category":"class","fireLogout":{"!description":"Fires event <code>logout<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Shell","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getAppWidthLimited":{"!description":"Gets current value of property <code>appWidthLimited<\/code>.\n\nDetermines whether the width of the content (the aggregated App) should be limited or extended to the full screen width.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getHeaderRightText":{"!description":"Gets current value of property <code>headerRightText<\/code>.\n\nDefines texts, such as the name of the logged-in user, which should be displayed on the right side of the header (if there is enough space to display the header at all - this only happens on very tall screens (1568px height), otherwise, it is always hidden).","!static":false,"!category":"function","!type":"fn() -> String"},"attachLogout":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>logout<\/code> event of this <code>sap.m.Shell<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Shell<\/code> itself.\n\nFires when the user presses the logout button/link.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Shell","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Shell<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachLogout":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>logout<\/code> event of this <code>sap.m.Shell<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Shell","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!constructorDescription":"Constructor for a new Shell.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getLogo logo} : sap.ui.core.URI<\/li>\n<li>{@link #getShowLogout showLogout} : boolean (default: true)<\/li>\n<li>{@link #getHeaderRightText headerRightText} : string<\/li>\n<li>{@link #getAppWidthLimited appWidthLimited} : boolean (default: true)<\/li>\n<li>{@link #getBackgroundColor backgroundColor} : sap.ui.core.CSSColor<\/li>\n<li>{@link #getBackgroundImage backgroundImage} : sap.ui.core.URI<\/li>\n<li>{@link #getBackgroundRepeat backgroundRepeat} : boolean (default: false)<\/li>\n<li>{@link #getBackgroundOpacity backgroundOpacity} : float (default: 1)<\/li>\n<li>{@link #getHomeIcon homeIcon} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getApp app} : sap.ui.core.Control (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:logout logout} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nDefines the application title, which may or may not be displayed outside the actual application, depending on the available screen size.","!static":false,"!category":"function","!type":"fn() -> String"},"setHeaderRightText":{"!description":"Sets a new value for property <code>headerRightText<\/code>.\n\nDefines texts, such as the name of the logged-in user, which should be displayed on the right side of the header (if there is enough space to display the header at all - this only happens on very tall screens (1568px height), otherwise, it is always hidden).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeaderRightText: String) -> sap.m.Shell","parameters":{"sHeaderRightText":"type: string, description: New value for property <code>headerRightText<\/code>"}},"setApp":{"!description":"Sets the aggregated <code>app<\/code>.","!static":false,"!category":"function","!type":"fn(oApp: sap.ui.core.Control) -> sap.m.Shell","parameters":{"oApp":"type: sap.ui.core.Control, description: The app to set"}},"!description":"The Shell control can be used as root element of applications. It can contain an App or a <code>SplitApp<\/code> control.\nThe Shell provides some overarching functionality for the overall application and takes care of visual adaptation, such as a frame around the App, on desktop browser platforms.","setLogo":{"!description":"Sets a new value for property <code>logo<\/code>.\n\nDefines the logo to be displayed next to the App when the screen is sufficiently large.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLogo: sap.ui.core.URI) -> sap.m.Shell","parameters":{"sLogo":"type: sap.ui.core.URI, description: New value for property <code>logo<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.Shell.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getApp":{"!description":"Gets content of aggregation <code>app<\/code>.\n\nA Shell contains an App or a SplitApp (they may be wrapped in a View). Other control types are not allowed.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getLogo":{"!description":"Gets current value of property <code>logo<\/code>.\n\nDefines the logo to be displayed next to the App when the screen is sufficiently large.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"setBackgroundColor":{"!description":"Sets a new value for property <code>backgroundColor<\/code>.\n\nDefines the background color of the Shell. If set, this color will override the default background defined by the theme. This should only be set when really required.\nAny configured background image will be placed above this colored background.\nUse the backgroundRepeat property to define whether this image should be stretched to cover the complete Shell or whether it should be tiled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sBackgroundColor: sap.ui.core.CSSColor) -> sap.m.Shell","parameters":{"sBackgroundColor":"type: sap.ui.core.CSSColor, description: New value for property <code>backgroundColor<\/code>"}},"setHomeIcon":{"!description":"Sets a new value for property <code>homeIcon<\/code>.\n\nSets the icon used for the mobile device home screen and the icon to be used for bookmarks by desktop browsers.\n\nThis property should be only set once, and as early as possible. Subsequent calls replace the previous icon settings and may lead to different behavior depending on the browser.\n\nDifferent image sizes for device home screen need to be given as PNG images, an ICO file needs to be given as desktop browser bookmark icon (other file formats may not work in all browsers).\nThe <code>precomposed<\/code> flag defines whether there is already a glow effect contained in the home screen images (or whether iOS should add such an effect). The given structure could look like this:\n{\n'phone':'phone-icon_57x57.png',\n'phone@2':'phone-retina_114x114.png',\n'tablet':'tablet-icon_72x72.png',\n'tablet@2':'tablet-retina_144x144.png',\n'precomposed':true,\n'favicon':'favicon.ico'\n}\n\nSee jQuery.sap.setIcons() for full documentation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oHomeIcon: Object) -> sap.m.Shell","parameters":{"oHomeIcon":"type: object, description: New value for property <code>homeIcon<\/code>"}},"setTitle":{"!description":"Sets a new value for property <code>title<\/code>.\n\nDefines the application title, which may or may not be displayed outside the actual application, depending on the available screen size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.Shell","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"}},"getShowLogout":{"!description":"Gets current value of property <code>showLogout<\/code>.\n\nDetermines whether the Logout button should be displayed. Currently, this only happens on very tall screens (1568px height), otherwise, it is always hidden.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getBackgroundOpacity":{"!description":"Gets current value of property <code>backgroundOpacity<\/code>.\n\nDefines the opacity of the background image. The opacity can be set between 0 (fully transparent) and 1 (fully opaque).\nThis can be used to improve readability of the Shell content by making the background image partly transparent.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"extend":{"!description":"Creates a new subclass of class sap.m.Shell with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getBackgroundRepeat":{"!description":"Gets current value of property <code>backgroundRepeat<\/code>.\n\nDetermines whether the background image (if configured) should be proportionally stretched to cover the whole Shell (false, default) or whether it should be tiled (true).\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/m/Shell","getHomeIcon":{"!description":"Gets current value of property <code>homeIcon<\/code>.\n\nSets the icon used for the mobile device home screen and the icon to be used for bookmarks by desktop browsers.\n\nThis property should be only set once, and as early as possible. Subsequent calls replace the previous icon settings and may lead to different behavior depending on the browser.\n\nDifferent image sizes for device home screen need to be given as PNG images, an ICO file needs to be given as desktop browser bookmark icon (other file formats may not work in all browsers).\nThe <code>precomposed<\/code> flag defines whether there is already a glow effect contained in the home screen images (or whether iOS should add such an effect). The given structure could look like this:\n{\n'phone':'phone-icon_57x57.png',\n'phone@2':'phone-retina_114x114.png',\n'tablet':'tablet-icon_72x72.png',\n'tablet@2':'tablet-retina_144x144.png',\n'precomposed':true,\n'favicon':'favicon.ico'\n}\n\nSee jQuery.sap.setIcons() for full documentation.","!static":false,"!category":"function","!type":"fn() -> Object"},"setAppWidthLimited":{"!description":"Sets a new value for property <code>appWidthLimited<\/code>.\n\nDetermines whether the width of the content (the aggregated App) should be limited or extended to the full screen width.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bAppWidthLimited: Boolean) -> sap.m.Shell","parameters":{"bAppWidthLimited":"type: boolean, description: New value for property <code>appWidthLimited<\/code>"}},"!helpDescription":"The Shell control can be used as root element of applications. It can contain an App or a <code>SplitApp<\/code> control.\nThe Shell provides some overarching functionality for the overall application and takes care of visual adaptation, such as a frame around the App, on desktop browser platforms.","getBackgroundImage":{"!description":"Gets current value of property <code>backgroundImage<\/code>.\n\nDefines the background image of the Shell. If set, this image will override the default background defined by the theme. This should only be set when really required.\nThis background image will be placed above any color set for the background.\nUse the backgroundRepeat property to define whether this image should be stretched to cover the complete Shell or whether it should be tiled.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"setShowLogout":{"!description":"Sets a new value for property <code>showLogout<\/code>.\n\nDetermines whether the Logout button should be displayed. Currently, this only happens on very tall screens (1568px height), otherwise, it is always hidden.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowLogout: Boolean) -> sap.m.Shell","parameters":{"bShowLogout":"type: boolean, description: New value for property <code>showLogout<\/code>"}}},"sap.m.SegmentedButtonItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.SegmentedButtonItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.SegmentedButtonItem"},"sap.m.MessageStrip_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.MessageStrip with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.MessageStrip"},"sap.m.NumericContent_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.NumericContent with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.NumericContent"},"sap.m.FeedListItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.FeedListItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.FeedListItem"},"sap.m.UploadCollectionToolbarPlaceholder_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.UploadCollectionToolbarPlaceholder with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.UploadCollectionToolbarPlaceholder"},"sap.m.semantic.MultiSelectAction":{"!description":"A MultiSelectAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","extend":{"!description":"Creates a new subclass of class sap.m.semantic.MultiSelectAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticToggleButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.MultiSelectAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new MultiSelectAction.","!module":"sap/m/semantic/MultiSelectAction","!helpDescription":"A MultiSelectAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","!proto":"sap.m.semantic.SemanticToggleButton","!category":"class"},"sap.m.ToggleButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ToggleButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Button.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ToggleButton"},"sap.m.UploadCollectionItem":{"setSelected":{"!description":"Setter of the selected property.","!static":false,"!category":"function","!type":"fn(selected: Boolean) -> sap.m.UploadCollectionItem","parameters":{"selected":"type: boolean, description: value to set on Selected property"}},"setMimeType":{"!description":"Sets a new value for property <code>mimeType<\/code>.\n\nSpecifies the MIME type of the file.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sMimeType: String) -> sap.m.UploadCollectionItem","parameters":{"sMimeType":"type: string, description: New value for property <code>mimeType<\/code>"}},"removeStatus":{"!description":"Removes a status from the aggregation <code>statuses<\/code>.","!static":false,"!category":"function","!type":"fn(vStatus: Number | String | sap.m.ObjectStatus) -> sap.m.ObjectStatus","parameters":{"vStatus":"type: int|string|sap.m.ObjectStatus, description: The statusto remove or its index or id"}},"unbindAttributes":{"!description":"Unbinds aggregation <code>attributes<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.UploadCollectionItem"},"getFileSize":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.30 This property is deprecated; use the aggregation attributes instead.<br>Gets current value of property <code>fileSize<\/code>.\n\nSpecifies the size of the uploaded file (in megabytes).","!static":false,"!category":"function","!type":"fn() -> Number"},"setFileName":{"!description":"Sets a new value for property <code>fileName<\/code>.\n\nSpecifies the name of the uploaded file.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFileName: String) -> sap.m.UploadCollectionItem","parameters":{"sFileName":"type: string, description: New value for property <code>fileName<\/code>"}},"download":{"!description":"Downloads the item.\nThe sap.ui.core.util.File method is used here. For further details on this method, see {sap.ui.core.util.File.save}.","!static":false,"!category":"function","!type":"fn(askForLocation: Boolean)","parameters":{"askForLocation":"type: boolean, description: Decides whether to ask for a location to download or not."}},"setThumbnailUrl":{"!description":"Sets a new value for property <code>thumbnailUrl<\/code>.\n\nSpecifies the URL where the thumbnail of the file is located.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sThumbnailUrl: String) -> sap.m.UploadCollectionItem","parameters":{"sThumbnailUrl":"type: string, description: New value for property <code>thumbnailUrl<\/code>"}},"getFileUploader":{"!description":"ID of the element which is the current target of the association <code>fileUploader<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.FileUploader"},"indexOfAttribute":{"!description":"Checks for the provided <code>sap.m.ObjectAttribute<\/code> in the aggregation <code>attributes<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oAttribute: sap.m.ObjectAttribute) -> Number","parameters":{"oAttribute":"type: sap.m.ObjectAttribute, description: The attribute whose index is looked for"}},"setEnableEdit":{"!description":"Sets a new value for property <code>enableEdit<\/code>.\n\nEnables/Disables the Edit button.\nIf the value is true, the Edit button is enabled and the edit function can be used.\nIf the value is false, the edit function is not available.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableEdit: Boolean) -> sap.m.UploadCollectionItem","parameters":{"bEnableEdit":"type: boolean, description: New value for property <code>enableEdit<\/code>"}},"getFileName":{"!description":"Gets current value of property <code>fileName<\/code>.\n\nSpecifies the name of the uploaded file.","!static":false,"!category":"function","!type":"fn() -> String"},"removeAllStatuses":{"!description":"Removes all the controls from the aggregation <code>statuses<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ObjectStatus]"},"destroyAttributes":{"!description":"Destroys all the attributes in the aggregation <code>attributes<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.UploadCollectionItem"},"!description":"Items provide information about the uploaded files.","unbindStatuses":{"!description":"Unbinds aggregation <code>statuses<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.UploadCollectionItem"},"getDocumentId":{"!description":"Gets current value of property <code>documentId<\/code>.\n\nSpecifies a unique identifier of the file (created by the application).","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.UploadCollectionItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAttributes":{"!description":"Gets content of aggregation <code>attributes<\/code>.\n\nAttributes of an uploaded item, for example, 'Uploaded By', 'Uploaded On', 'File Size'\nattributes are displayed after an item has been uploaded.\nAdditionally, the Active property of sap.m.ObjectAttribute is supported.<br>\nNote that if one of the deprecated properties contributor, fileSize or UploadedDate is filled in addition to this attribute, two attributes with the same title\nare displayed as these properties get displayed as an attribute.\nExample: An application passes the property \u2018contributor\u2019 with the value \u2018A\u2019 and the aggregation attributes \u2018contributor\u2019: \u2018B\u2019. As a result, the attributes\n\u2018contributor\u2019:\u2019A\u2019 and \u2018contributor\u2019:\u2019B\u2019 are displayed. To make sure the title does not appear twice, check if one of the properties is filled.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ObjectAttribute]"},"setFileSize":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.30 undefined<br>Setter of the deprecated fileSize property. The property is mapped to the aggregation attributes.","!static":false,"!category":"function","!type":"fn()"},"setVisibleEdit":{"!description":"Sets a new value for property <code>visibleEdit<\/code>.\n\nShow/Hide the Edit button.\nIf the value is true, the Edit button is visible.\nIf the value is false, the Edit button is not visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisibleEdit: Boolean) -> sap.m.UploadCollectionItem","parameters":{"bVisibleEdit":"type: boolean, description: New value for property <code>visibleEdit<\/code>"}},"setEnableDelete":{"!description":"Sets a new value for property <code>enableDelete<\/code>.\n\nEnables/Disables the Delete button.\nIf the value is true, the Delete button is enabled and the delete function can be used.\nIf the value is false, the delete function is not available.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableDelete: Boolean) -> sap.m.UploadCollectionItem","parameters":{"bEnableDelete":"type: boolean, description: New value for property <code>enableDelete<\/code>"}},"setUrl":{"!description":"Sets a new value for property <code>url<\/code>.\n\nSpecifies the URL where the file is located.\nIf the application doesn't provide a value for this property, the icon and the file name of the UploadCollectionItem are not clickable.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sUrl: String) -> sap.m.UploadCollectionItem","parameters":{"sUrl":"type: string, description: New value for property <code>url<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.UploadCollectionItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getEnableEdit":{"!description":"Gets current value of property <code>enableEdit<\/code>.\n\nEnables/Disables the Edit button.\nIf the value is true, the Edit button is enabled and the edit function can be used.\nIf the value is false, the edit function is not available.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getUploadedDate":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.30 This property is deprecated; use the aggregation attributes instead.<br>Gets current value of property <code>uploadedDate<\/code>.\n\nSpecifies the date on which the file was uploaded.\nThe application has to define the date format.","!static":false,"!category":"function","!type":"fn() -> String"},"getUrl":{"!description":"Gets current value of property <code>url<\/code>.\n\nSpecifies the URL where the file is located.\nIf the application doesn't provide a value for this property, the icon and the file name of the UploadCollectionItem are not clickable.","!static":false,"!category":"function","!type":"fn() -> String"},"!module":"sap/m/UploadCollectionItem","!helpDescription":"Items provide information about the uploaded files.","destroyStatuses":{"!description":"Destroys all the statuses in the aggregation <code>statuses<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.UploadCollectionItem"},"bindAttributes":{"!description":"Binds aggregation <code>attributes<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.UploadCollectionItem","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"!proto":"sap.ui.core.Element","getVisibleDelete":{"!description":"Gets current value of property <code>visibleDelete<\/code>.\n\nShow/Hide the Delete button.\nIf the value is true, the Delete button is visible.\nIf the value is false, the Delete button is not visible.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","setDocumentId":{"!description":"Sets a new value for property <code>documentId<\/code>.\n\nSpecifies a unique identifier of the file (created by the application).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDocumentId: String) -> sap.m.UploadCollectionItem","parameters":{"sDocumentId":"type: string, description: New value for property <code>documentId<\/code>"}},"!constructorDescription":"Constructor for a new UploadCollectionItem\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContributor contributor} : string<\/li>\n<li>{@link #getDocumentId documentId} : string<\/li>\n<li>{@link #getFileName fileName} : string<\/li>\n<li>{@link #getFileSize fileSize} : float<\/li>\n<li>{@link #getMimeType mimeType} : string<\/li>\n<li>{@link #getThumbnailUrl thumbnailUrl} : string<\/li>\n<li>{@link #getUploadedDate uploadedDate} : string<\/li>\n<li>{@link #getUrl url} : string<\/li>\n<li>{@link #getEnableEdit enableEdit} : boolean (default: true)<\/li>\n<li>{@link #getEnableDelete enableDelete} : boolean (default: true)<\/li>\n<li>{@link #getVisibleEdit visibleEdit} : boolean (default: true)<\/li>\n<li>{@link #getVisibleDelete visibleDelete} : boolean (default: true)<\/li>\n<li>{@link #getAriaLabelForPicture ariaLabelForPicture} : string<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAttributes attributes} : sap.m.ObjectAttribute[] (default)<\/li>\n<li>{@link #getStatuses statuses} : sap.m.ObjectStatus[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","setFileUploader":{"!description":"Sets the associated <code>fileUploader<\/code>.","!static":false,"!category":"function","!type":"fn(oFileUploader: sap.ui.unified.FileUploader) -> sap.m.UploadCollectionItem","parameters":{"oFileUploader":"type: sap.ui.unified.FileUploader, description: Id of an element which becomes the new target of this fileUploader association; alternatively, an element instance may be given"}},"getAriaLabelForPicture":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!static":false,"!category":"function","!type":"fn() -> String"},"removeAttribute":{"!description":"Removes a attribute from the aggregation <code>attributes<\/code>.","!static":false,"!category":"function","!type":"fn(vAttribute: Number | String | sap.m.ObjectAttribute) -> sap.m.ObjectAttribute","parameters":{"vAttribute":"type: int|string|sap.m.ObjectAttribute, description: The attributeto remove or its index or id"}},"setAriaLabelForPicture":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!static":false,"!category":"function","!type":"fn(sAriaLabelForPicture: String) -> sap.m.UploadCollectionItem","parameters":{"sAriaLabelForPicture":"type: string, description: New value for property <code>ariaLabelForPicture<\/code>"}},"setContributor":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.30 undefined<br>Setter of the deprecated contributor property. The property is mapped to the aggregation attributes.","!static":false,"!category":"function","!type":"fn()"},"setVisibleDelete":{"!description":"Sets a new value for property <code>visibleDelete<\/code>.\n\nShow/Hide the Delete button.\nIf the value is true, the Delete button is visible.\nIf the value is false, the Delete button is not visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisibleDelete: Boolean) -> sap.m.UploadCollectionItem","parameters":{"bVisibleDelete":"type: boolean, description: New value for property <code>visibleDelete<\/code>"}},"insertStatus":{"!description":"Inserts a status into the aggregation <code>statuses<\/code>.","!static":false,"!category":"function","!type":"fn(oStatus: sap.m.ObjectStatus, iIndex: Number) -> sap.m.UploadCollectionItem","parameters":{"oStatus":"type: sap.m.ObjectStatus, description: the status to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the status should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the status is inserted at position 0; for a value\n             greater than the current size of the aggregation, the status is inserted at\n             the last position"}},"removeAllAttributes":{"!description":"Removes all the controls from the aggregation <code>attributes<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ObjectAttribute]"},"getMimeType":{"!description":"Gets current value of property <code>mimeType<\/code>.\n\nSpecifies the MIME type of the file.","!static":false,"!category":"function","!type":"fn() -> String"},"getStatuses":{"!description":"Gets content of aggregation <code>statuses<\/code>.\n\nStatuses of an uploaded item\nStatuses will be displayed after an item has been uploaded","!static":false,"!category":"function","!type":"fn() -> [sap.m.ObjectStatus]"},"setUploadedDate":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.30 undefined<br>Setter of the deprecated uploadedDate property. The property is mapped to the aggregation attributes.","!static":false,"!category":"function","!type":"fn()"},"bindStatuses":{"!description":"Binds aggregation <code>statuses<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.UploadCollectionItem","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getSelected":{"!description":"Gets current value of property <code>selected<\/code>.\n\nDefines the selected state of the UploadCollectionItem.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getVisibleEdit":{"!description":"Gets current value of property <code>visibleEdit<\/code>.\n\nShow/Hide the Edit button.\nIf the value is true, the Edit button is visible.\nIf the value is false, the Edit button is not visible.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addAttribute":{"!description":"Adds some attribute to the aggregation <code>attributes<\/code>.","!static":false,"!category":"function","!type":"fn(oAttribute: sap.m.ObjectAttribute) -> sap.m.UploadCollectionItem","parameters":{"oAttribute":"type: sap.m.ObjectAttribute, description: the attribute to add; if empty, nothing is inserted"}},"insertAttribute":{"!description":"Inserts a attribute into the aggregation <code>attributes<\/code>.","!static":false,"!category":"function","!type":"fn(oAttribute: sap.m.ObjectAttribute, iIndex: Number) -> sap.m.UploadCollectionItem","parameters":{"oAttribute":"type: sap.m.ObjectAttribute, description: the attribute to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the attribute should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the attribute is inserted at position 0; for a value\n             greater than the current size of the aggregation, the attribute is inserted at\n             the last position"}},"addStatus":{"!description":"Adds some status to the aggregation <code>statuses<\/code>.","!static":false,"!category":"function","!type":"fn(oStatus: sap.m.ObjectStatus) -> sap.m.UploadCollectionItem","parameters":{"oStatus":"type: sap.m.ObjectStatus, description: the status to add; if empty, nothing is inserted"}},"getEnableDelete":{"!description":"Gets current value of property <code>enableDelete<\/code>.\n\nEnables/Disables the Delete button.\nIf the value is true, the Delete button is enabled and the delete function can be used.\nIf the value is false, the delete function is not available.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getThumbnailUrl":{"!description":"Gets current value of property <code>thumbnailUrl<\/code>.\n\nSpecifies the URL where the thumbnail of the file is located.","!static":false,"!category":"function","!type":"fn() -> String"},"indexOfStatus":{"!description":"Checks for the provided <code>sap.m.ObjectStatus<\/code> in the aggregation <code>statuses<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oStatus: sap.m.ObjectStatus) -> Number","parameters":{"oStatus":"type: sap.m.ObjectStatus, description: The status whose index is looked for"}},"getContributor":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.30 This property is deprecated; use the aggregation attributes instead.\nHowever, if the property is filled, it is displayed as an attribute. To make sure the title does not appear twice, do not use the property.<br>Gets current value of property <code>contributor<\/code>.\n\nSpecifies the name of the user who uploaded the file.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.m.FacetFilterListDataType":{"!description":"FacetFilterList data types.","Integer":{"!description":">An input control for specifying a Integer value","!category":"enum","!type":"String"},"Float":{"!description":">An input control for specifying a Float value","!category":"enum","!type":"String"},"!module":"sap/m/library","!category":"static class","Time":{"!description":"An input control for specifying a time value. The user can select the hour, minute, and optionally AM or PM.","!category":"enum","!type":"String"},"String":{"!description":">An input control for specifying a String value","!category":"enum","!type":"String"},"Boolean":{"!description":">An input control for specifying a Boolean value","!category":"enum","!type":"String"},"Date":{"!description":"An input control for specifying a date value. The user can select a month, day of the month, and year.","!category":"enum","!type":"String"},"DateTime":{"!description":"An input control for specifying a date and time value. The user can select a month, day of the month, year, and time of day.","!category":"enum","!type":"String"}},"sap.m.DateTimePicker":{"!description":"This is a date input control with a calendar and a time selector as date time picker.\n\nA date can be entered using a calendar or time selector that opens in a popup. Alternatively a value can be entered directly in the input field by typing it in.\nIf a date is entered by typing it into the input field, it must fit the used date format and locale. (See <code>sap.ui.core.format.DateFormat<\/code>)\n\nThere are two options to provide a date for the <code>DateTimePicker<\/code>.\nYou can put a date as a string to the property <code>value<\/code> or you can put a JavaScript Date object to the property <code>dateValue<\/code>.\nOnly one of the properties should be used at one time, but they are synchronized internally.\nWhat property you should use depends on the use case of the application:\n<ul>\n<li>Use the <code>value<\/code> property if you want to bind the <code>DateTimePicker<\/code> to a model using the <code>sap.ui.model.type.DateTime<\/code>.<\/li>\n<li>Use the <code>value<\/code> property if the date is provided as a string from the back end or inside the application (e.g. as ABAP type DATS field).<\/li>\n<li>Use the <code>dateValue<\/code> property if the date is already provided as a JavaScript Date object or you want to work with a JavaScript Date object.<\/li>\n<\/ul>\n\nAll formatting and parsing of dates to and from strings is done using the {@link sap.ui.core.format.DateFormat}, so please read the corresponding documentation if you need more information about this.\n\nSupported format options are pattern-based on Unicode LDML Date Format notation. {@link http://unicode.org/reports/tr35/#Date_Field_Symbol_Table}\n\nFor example, if the <code>valueFormat<\/code> is \"yyyy-MM-dd-HH-mm-ss\", <code>displayFormat<\/code> is \"MMM d, y, HH:mm:ss\" and the used locale is English,\na valid <code>value<\/code> string is \"2015-07-30-10-30-15\", which leads to an output of \"Jul 30, 2015, 10:30:15\".\n\nIf no <code>placeholder<\/code> is set to the <code>DateTimePicker<\/code>, the used <code>displayFormat<\/code> is shown as a placeholder.\nIf another placeholder is needed, it must be set.\n\nInternally the <code>sap.ui.unified.Calendar<\/code> is used, but it is only needed if the <code>DateTimePicker<\/code> is opened. This means that it is not needed for the initial rendering.\nIf the <code>sap.ui.unified<\/code> library is not loaded before the <code>DateTimePicker<\/code> is opened, it will be loaded upon opening.\nThis could lead to a waiting time before a <code>DateTimePicker<\/code> is opened the first time. To prevent this, applications using the <code>DateTimePicker<\/code> should also load\nthe <code>sap.ui.unified<\/code> library.","extend":{"!description":"Creates a new subclass of class sap.m.DateTimePicker with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.DatePicker.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.DateTimePicker.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new DateTimePicker.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.DatePicker#constructor sap.m.DatePicker}\ncan be used as well.","getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"!module":"sap/m/DateTimePicker","!helpDescription":"This is a date input control with a calendar and a time selector as date time picker.\n\nA date can be entered using a calendar or time selector that opens in a popup. Alternatively a value can be entered directly in the input field by typing it in.\nIf a date is entered by typing it into the input field, it must fit the used date format and locale. (See <code>sap.ui.core.format.DateFormat<\/code>)\n\nThere are two options to provide a date for the <code>DateTimePicker<\/code>.\nYou can put a date as a string to the property <code>value<\/code> or you can put a JavaScript Date object to the property <code>dateValue<\/code>.\nOnly one of the properties should be used at one time, but they are synchronized internally.\nWhat property you should use depends on the use case of the application:\n<ul>\n<li>Use the <code>value<\/code> property if you want to bind the <code>DateTimePicker<\/code> to a model using the <code>sap.ui.model.type.DateTime<\/code>.<\/li>\n<li>Use the <code>value<\/code> property if the date is provided as a string from the back end or inside the application (e.g. as ABAP type DATS field).<\/li>\n<li>Use the <code>dateValue<\/code> property if the date is already provided as a JavaScript Date object or you want to work with a JavaScript Date object.<\/li>\n<\/ul>\n\nAll formatting and parsing of dates to and from strings is done using the {@link sap.ui.core.format.DateFormat}, so please read the corresponding documentation if you need more information about this.\n\nSupported format options are pattern-based on Unicode LDML Date Format notation. {@link http://unicode.org/reports/tr35/#Date_Field_Symbol_Table}\n\nFor example, if the <code>valueFormat<\/code> is \"yyyy-MM-dd-HH-mm-ss\", <code>displayFormat<\/code> is \"MMM d, y, HH:mm:ss\" and the used locale is English,\na valid <code>value<\/code> string is \"2015-07-30-10-30-15\", which leads to an output of \"Jul 30, 2015, 10:30:15\".\n\nIf no <code>placeholder<\/code> is set to the <code>DateTimePicker<\/code>, the used <code>displayFormat<\/code> is shown as a placeholder.\nIf another placeholder is needed, it must be set.\n\nInternally the <code>sap.ui.unified.Calendar<\/code> is used, but it is only needed if the <code>DateTimePicker<\/code> is opened. This means that it is not needed for the initial rendering.\nIf the <code>sap.ui.unified<\/code> library is not loaded before the <code>DateTimePicker<\/code> is opened, it will be loaded upon opening.\nThis could lead to a waiting time before a <code>DateTimePicker<\/code> is opened the first time. To prevent this, applications using the <code>DateTimePicker<\/code> should also load\nthe <code>sap.ui.unified<\/code> library.","!proto":"sap.m.DatePicker","!category":"class"},"sap.m.SelectList":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"destroyItems":{"!description":"Destroys all the items in the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.SelectList"},"getMaxWidth":{"!description":"Gets current value of property <code>maxWidth<\/code>.\n\nSets the maximum width of the control.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nDefines the items contained within this control.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"indexOfItem":{"!description":"Checks for the provided <code>sap.ui.core.Item<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item) -> Number","parameters":{"oItem":"type: sap.ui.core.Item, description: The item whose index is looked for"}},"getSelectedItemId":{"!description":"Gets current value of property <code>selectedItemId<\/code>.\n\nID of the selected item.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getKeyboardNavigationMode":{"!description":"Gets current value of property <code>keyboardNavigationMode<\/code>.\n\nDefines the keyboard navigation mode.\n\n<b>Note:<\/b> The <code>sap.m.SelectListKeyboardNavigationMode.None<\/code> enumeration value, is only\nintended for use in some composite controls that handles keyboard navigation by themselves.\n\nDefault value is <code>Delimited<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.SelectListKeyboardNavigationMode"},"clearSelection":{"!description":"Clear the selection.","!static":false,"!category":"function","!type":"fn()"},"attachSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>selectionChange<\/code> event of this <code>sap.m.SelectList<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.SelectList<\/code> itself.\n\nThis event is fired when the selection has changed.\n\n<b>Note: <\/b> The selection can be changed by pressing an non-selected item or\nvia keyboard and after the enter or space key is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.SelectList","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.SelectList<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getSelectedItem":{"!description":"Gets the selected item object from the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Item | null"},"!description":"The <code>sap.m.SelectList<\/code> displays a list of items that allows the user to select an item.","getMetadata":{"!description":"Returns a metadata object for class sap.m.SelectList.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setMaxWidth":{"!description":"Sets a new value for property <code>maxWidth<\/code>.\n\nSets the maximum width of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sMaxWidth: sap.ui.core.CSSSize) -> sap.m.SelectList","parameters":{"sMaxWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>maxWidth<\/code>"}},"removeAllItems":{"!description":"Removes all the items in the aggregation named <code>items<\/code>.\nAdditionally unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"extend":{"!description":"Creates a new subclass of class sap.m.SelectList with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nIndicates whether the user can change the selection.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.m.SelectList","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"setSelection":{"!description":"Updates and synchronizes <code>selectedItem<\/code> association, <code>selectedItemId<\/code> and <code>selectedKey<\/code> properties.","!static":false,"!category":"function","!type":"fn(vItem: String | sap.ui.core.Item | null)","parameters":{"vItem":"type: string|sap.ui.core.Item|null, description: undefined"}},"!module":"sap/m/SelectList","!helpDescription":"The <code>sap.m.SelectList<\/code> displays a list of items that allows the user to select an item.","detachItemPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>itemPress<\/code> event of this <code>sap.m.SelectList<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.SelectList","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"fireItemPress":{"!description":"Fires event <code>itemPress<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>item<\/code> of type <code>sap.ui.core.Item<\/code>The pressed item.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.SelectList","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachItemPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>itemPress<\/code> event of this <code>sap.m.SelectList<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.SelectList<\/code> itself.\n\nThis event is fired when an item is pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.SelectList","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.SelectList<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeItem":{"!description":"Removes an item from the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.ui.core.Item) -> sap.ui.core.Item","parameters":{"vItem":"type: int|string|sap.ui.core.Item, description: The item to remove or its index or id."}},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"fireSelectionChange":{"!description":"Fires event <code>selectionChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selectedItem<\/code> of type <code>sap.ui.core.Item<\/code>The selected item.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.SelectList","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!proto":"sap.ui.core.Control","getItemByKey":{"!description":"Gets the item with the given key from the aggregation named <code>items<\/code>.\n\n<b>Note: <\/b> If duplicate keys exists, the first item matching the key is returned.","!static":false,"!category":"function","!type":"fn(sKey: String) -> sap.ui.core.Item | null","parameters":{"sKey":"type: string, description: An item key that specifies the item to retrieve."}},"!category":"class","getItemAt":{"!description":"Gets the item from the aggregation named <code>items<\/code> at the given 0-based index.","!static":false,"!category":"function","!type":"fn(iIndex: Number) -> sap.ui.core.Item | null","parameters":{"iIndex":"type: int, description: Index of the item to return."}},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nSets the width of the control.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getShowSecondaryValues":{"!description":"Gets current value of property <code>showSecondaryValues<\/code>.\n\nIndicates whether the text values of the <code>additionalText<\/code> property of a {@link sap.ui.core.ListItem} are shown.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item) -> sap.m.SelectList","parameters":{"oItem":"type: sap.ui.core.Item, description: the item to add; if empty, nothing is inserted"}},"!constructorDescription":"Constructor for a new <code>sap.m.SelectList<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getMaxWidth maxWidth} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getSelectedKey selectedKey} : string (default: )<\/li>\n<li>{@link #getSelectedItemId selectedItemId} : string (default: )<\/li>\n<li>{@link #getShowSecondaryValues showSecondaryValues} : boolean (default: false)<\/li>\n<li>{@link #getKeyboardNavigationMode keyboardNavigationMode} : sap.m.SelectListKeyboardNavigationMode (default: Delimited)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Item[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:itemPress itemPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.m.SelectList","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getDefaultSelectedItem":{"!description":"Retrieves the default selected item from the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(aItems?: [sap.ui.core.Item]) -> sap.ui.core.Item | null","parameters":{"aItems":"type: sap.ui.core.Item[], description: undefined"}},"detachSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>selectionChange<\/code> event of this <code>sap.m.SelectList<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.SelectList","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nIndicates whether the user can change the selection.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"bindItems":{"!description":"Binds aggregation <code>items<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.SelectList","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"setSelectedKey":{"!description":"Sets property <code>selectedKey<\/code>.\n\nDefault value is an empty string <code>\"\"<\/code> or <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(sKey: String) -> sap.m.SelectList","parameters":{"sKey":"type: string, description: New value for property <code>selectedKey<\/code>."}},"setShowSecondaryValues":{"!description":"Sets a new value for property <code>showSecondaryValues<\/code>.\n\nIndicates whether the text values of the <code>additionalText<\/code> property of a {@link sap.ui.core.ListItem} are shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSecondaryValues: Boolean) -> sap.m.SelectList","parameters":{"bShowSecondaryValues":"type: boolean, description: New value for property <code>showSecondaryValues<\/code>"}},"unbindItems":{"!description":"Unbinds aggregation <code>items<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.SelectList"},"setKeyboardNavigationMode":{"!description":"Sets a new value for property <code>keyboardNavigationMode<\/code>.\n\nDefines the keyboard navigation mode.\n\n<b>Note:<\/b> The <code>sap.m.SelectListKeyboardNavigationMode.None<\/code> enumeration value, is only\nintended for use in some composite controls that handles keyboard navigation by themselves.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Delimited<\/code>.","!static":false,"!category":"function","!type":"fn(sKeyboardNavigationMode: sap.m.SelectListKeyboardNavigationMode) -> sap.m.SelectList","parameters":{"sKeyboardNavigationMode":"type: sap.m.SelectListKeyboardNavigationMode, description: New value for property <code>keyboardNavigationMode<\/code>"}},"getLastItem":{"!description":"Gets the enabled items from the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Item | null"},"setSelectedItemId":{"!description":"Sets property <code>selectedItemId<\/code>.\n\nDefault value is an empty string <code>\"\"<\/code> or <code>undefined<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: String | undefined) -> sap.m.SelectList","parameters":{"vItem":"type: string|undefined, description: New value for property <code>selectedItemId<\/code>."}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nSets the width of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.SelectList","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getEnabledItems":{"!description":"Gets the enabled items from the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(aItems?: [sap.ui.core.Item]) -> [sap.ui.core.Item]","parameters":{"aItems":"type: sap.ui.core.Item[], description: items to filter"}},"setSelectedItem":{"!description":"Sets the <code>selectedItem<\/code> association.","!static":false,"!category":"function","!type":"fn(vItem: String | sap.ui.core.Item | null) -> sap.m.SelectList","parameters":{"vItem":"type: string|sap.ui.core.Item|null, description: New value for the <code>selectedItem<\/code> association.\nIf an ID of a <code>sap.ui.core.Item<\/code> is given, the item with this ID becomes the <code>selectedItem<\/code> association.\nAlternatively, a <code>sap.ui.core.Item<\/code> instance may be given or <code>null<\/code> to clear the selection."}},"getSelectedKey":{"!description":"Gets current value of property <code>selectedKey<\/code>.\n\nKey of the selected item.\n\n<b>Note: <\/b> If duplicate keys exist, the first item matching the key is used.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getFirstItem":{"!description":"Gets the first item from the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Item | null"},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item, iIndex: Number) -> sap.m.SelectList","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position","oItem":"type: sap.ui.core.Item, description: the item to insert; if empty, nothing is inserted"}}},"sap.m.BackgroundHelper":{"!description":"Helper for rendering themable background.","renderBackgroundImageTag":{"!description":"Renders an HTML tag into the given RenderManager which carries the background image which is either configured and given or coming from the current theme.\nShould be called right after the opening root tag has been completed, so this is the first child element inside the control.","!static":"true","!category":"function","!type":"fn(rm: undefined, oControl: sap.ui.core.Control, vCssClass: [String | String], sBgImgUrl?: sap.ui.core.URI, bRepeat?: Boolean, fOpacity?: Number)"},"!module":"sap/m/library","!helpDescription":"Helper for rendering themable background.","!category":"namespace","addBackgroundColorStyles":{"!description":"Adds CSS classes and styles to the given RenderManager, depending on the given configuration for background color and background image.\nTo be called by control renderers supporting the global themable background image within their root tag, before they call writeClasses() and writeStyles().","!static":"true","!category":"function","!type":"fn(rm: sap.ui.core.RenderManager, sBgColor?: String, sBgImgUrl?: sap.ui.core.URI)"}},"sap.m.ViewSettingsDialog_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ViewSettingsDialog with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ViewSettingsDialog"},"sap.m.NavContainer":{"detachAfterNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>afterNavigate<\/code> event of this <code>sap.m.NavContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.NavContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"insertPreviousPage":{"!description":"Inserts the page/control with the specified ID into the navigation history stack of the NavContainer.\n\nThis can be used for deep-linking when the user directly reached a drilldown detail page using a bookmark and then wants to navigate up in the drilldown hierarchy. Normally such a back navigation would not be possible because there is no previous page in the NavContainer's history stack.","!static":false,"!category":"function","!type":"fn(sPageId: String, sTransitionName?: String, oData?: Object) -> sap.m.NavContainer","parameters":{"sTransitionName":"type: string, description: The type of the transition/animation which would have been used to navigate from the (inserted) previous page to the current page. When navigating back, the inverse animation will be applied.\n        This parameter can be omitted; then the default is \"slide\" (horizontal movement from the right).","oData":"type: object, description: This optional object can carry any payload data which would have been given to the inserted previous page if the user would have done a normal forward navigation to it.","sPageId":"type: string, description: The ID of the control/page/screen which is inserted into the history stack. The respective control must be aggregated by the NavContainer, otherwise this will cause an error."}},"backToPage":{"!description":"Navigates back to the nearest previous page in the NavContainer history with the given ID. If there is no such page among the previous pages, nothing happens.\nThe transition effect which had been used to get to the current page is inverted and used for this navigation.\n\nCalling this navigation method triggers first the (cancelable) \"navigate\" event on the NavContainer, then the \"beforeHide\" pseudo event on the source page and \"beforeFirstShow\" (if applicable) and\"beforeShow\" on the target page. Later - after the transition has completed - the \"afterShow\" pseudo event is triggered on the target page and \"afterHide\" on the page which has been left. The given backData object is available in the \"beforeFirstShow\", \"beforeShow\" and \"afterShow\" event object as \"data\" property. The original \"data\" object from the \"to\" navigation is also available in these event objects.","!static":false,"!category":"function","!type":"fn(sPageId: String, oBackData?: Object, oTransitionParameters?: Object) -> sap.m.NavContainer","parameters":{"oTransitionParameters":"type: object, description: This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration.\n        The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\n        In order to use the \"transitionParameters\" property, the \"data\" property must be used (at least \"null\" must be given) for a proper parameter order.\n\n        NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.","sPageId":"type: string, description: The ID of the screen to which back navigation should happen. The ID or the control itself can be given. The nearest such page among the previous pages in the history stack will be used.","oBackData":"type: object, description: This optional object can carry any payload data which should be made available to the target page of the \"backToPage\" navigation. The event on the target page will contain this data object as \"backData\" property.\n\n        When the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order."}},"backToTop":{"!description":"Navigates back to the initial/top level (this is the element aggregated as \"initialPage\", or the first added element). If already on the initial page, nothing happens.\nThe transition effect which had been used to get to the current page is inverted and used for this navigation.\n\nCalling this navigation method triggers first the (cancelable) \"navigate\" event on the NavContainer, then the \"beforeHide\" pseudo event on the source page and \"beforeFirstShow\" (if applicable) and\"beforeShow\" on the target page. Later - after the transition has completed - the \"afterShow\" pseudo event is triggered on the target page and \"afterHide\" on the page which has been left. The given backData object is available in the \"beforeFirstShow\", \"beforeShow\" and \"afterShow\" event object as \"data\" property.","!static":false,"!category":"function","!type":"fn(oBackData?: Object, oTransitionParameters?: Object) -> sap.m.NavContainer","parameters":{"oTransitionParameters":"type: object, description: This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration.\n        The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\n        In order to use the \"transitionParameters\" property, the \"data\" property must be used (at least \"null\" must be given) for a proper parameter order.\n\n        NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.","oBackData":"type: object, description: This optional object can carry any payload data which should be made available to the target page of the \"backToTop\" navigation. The event on the target page will contain this data object as \"backData\" property.\n\n        When the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order."}},"setAutoFocus":{"!description":"Sets a new value for property <code>autoFocus<\/code>.\n\nDetermines whether the initial focus is set automatically on first rendering and after navigating to a new page.\nThis is useful when on touch devices the keyboard pops out due to the focus being automatically set on an input field.\nIf necessary the \"afterShow\" event can be used to focus another element.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bAutoFocus: Boolean) -> sap.m.NavContainer","parameters":{"bAutoFocus":"type: boolean, description: New value for property <code>autoFocus<\/code>"}},"getPage":{"!description":"Returns the control with the given ID from the \"pages\" aggregation (if available).","!static":false,"!category":"function","!type":"fn(sId: String) -> sap.ui.core.Control","parameters":{"sId":"type: string, description: The ID of the aggregated control to find."}},"!proto":"sap.ui.core.Control","back":{"!description":"Navigates back one level. If already on the initial page and there is no place to go back, nothing happens.\n\nCalling this navigation method triggers first the (cancelable) \"navigate\" event on the NavContainer, then the \"beforeHide\" pseudo event on the source page and \"beforeFirstShow\" (if applicable) and\"beforeShow\" on the target page. Later - after the transition has completed - the \"afterShow\" pseudo event is triggered on the target page and \"afterHide\" on the page which has been left. The given backData object is available in the \"beforeFirstShow\", \"beforeShow\" and \"afterShow\" event object as \"data\" property. The original \"data\" object from the \"to\" navigation is also available in these event objects.","!static":false,"!category":"function","!type":"fn(oBackData?: Object, oTransitionParameters?: Object) -> sap.m.NavContainer","parameters":{"oTransitionParameters":"type: object, description: Since version 1.7.1. This optional object can give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration.\n        The animation type can NOT be selected here - it is always the inverse of the \"to\" navigation.\n\n        In order to use the \"transitionParameters\" property, the \"data\" property must be used (at least \"null\" must be given) for a proper parameter order.\n\n        NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.","oBackData":"type: object, description: Since version 1.7.1. This optional object can carry any payload data which should be made available to the target page of the back navigation. The event on the target page will contain this data object as \"backData\" property. (The original data from the \"to()\" navigation will still be available as \"data\" property.)\n\n        In scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n        For back navigation this can be used e.g. when returning from a detail page to transfer any settings done there.\n\n        When the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order."}},"!category":"class","getPreviousPage":{"!description":"Returns the previous page (the page from which the user drilled down to the current page with \"to()\").\nNote: this is not the page which the user has seen before, but the page which is the target of the next \"back()\" navigation.\nIf there is no previous page, \"undefined\" is returned.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe width of the NavContainer. Can be changed when the NavContainer should not cover the whole available area.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"removePage":{"!description":"Removes a page from the aggregation <code>pages<\/code>.","!static":false,"!category":"function","!type":"fn(vPage: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vPage":"type: int|string|sap.ui.core.Control, description: The pageto remove or its index or id"}},"setInitialPage":{"!description":"Sets the associated <code>initialPage<\/code>.","!static":false,"!category":"function","!type":"fn(oInitialPage: sap.ui.core.Control) -> sap.m.NavContainer","parameters":{"oInitialPage":"type: sap.ui.core.Control, description: Id of an element which becomes the new target of this initialPage association; alternatively, an element instance may be given"}},"removeAllPages":{"!description":"Removes all the controls from the aggregation <code>pages<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"attachAfterNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>afterNavigate<\/code> event of this <code>sap.m.NavContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.NavContainer<\/code> itself.\n\nThe event is fired when navigation between two pages has completed. In case of animated transitions this event is fired with some delay after the \"navigate\" event.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.NavContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.NavContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nThe height of the NavContainer. Can be changed when the NavContainer should not cover the whole available area.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new NavContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAutoFocus autoFocus} : boolean (default: true)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getDefaultTransitionName defaultTransitionName} : string (default: slide)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPages pages} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:navigate navigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterNavigate afterNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","fireAfterNavigate":{"!description":"Fires event <code>afterNavigate<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>from<\/code> of type <code>sap.ui.core.Control<\/code>The page which had been shown before navigation.<\/li>\n<li><code>fromId<\/code> of type <code>string<\/code>The ID of the page which had been shown before navigation.<\/li>\n<li><code>to<\/code> of type <code>sap.ui.core.Control<\/code>The page which is now shown after navigation.<\/li>\n<li><code>toId<\/code> of type <code>string<\/code>The ID of the page which is now shown after navigation.<\/li>\n<li><code>firstTime<\/code> of type <code>boolean<\/code>Whether the \"to\" page (more precisely: a control with the ID of the page which has been navigated to) had not been shown/navigated to before.<\/li>\n<li><code>isTo<\/code> of type <code>boolean<\/code>Whether was a forward navigation, triggered by \"to()\".<\/li>\n<li><code>isBack<\/code> of type <code>boolean<\/code>Whether this was a back navigation, triggered by \"back()\".<\/li>\n<li><code>isBackToTop<\/code> of type <code>boolean<\/code>Whether this was a navigation to the root page, triggered by \"backToTop()\".<\/li>\n<li><code>isBackToPage<\/code> of type <code>boolean<\/code>Whether this was a navigation to a specific page, triggered by \"backToPage()\".<\/li>\n<li><code>direction<\/code> of type <code>string<\/code>How the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\".<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.NavContainer","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"indexOfPage":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>pages<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oPage: sap.ui.core.Control) -> Number","parameters":{"oPage":"type: sap.ui.core.Control, description: The page whose index is looked for"}},"addPage":{"!description":"Adds some page to the aggregation <code>pages<\/code>.","!static":false,"!category":"function","!type":"fn(oPage: sap.ui.core.Control) -> sap.m.NavContainer","parameters":{"oPage":"type: sap.ui.core.Control, description: the page to add; if empty, nothing is inserted"}},"getCurrentPage":{"!description":"Returns the currently displayed page-level control. Note: it is not necessarily an instance of sap.m.Page, but it could also be a sap.ui.core.View, sap.m.Carousel, or whatever is aggregated.\n\nReturns undefined if no page has been added yet.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"!description":"The NavContainer control handles hierarchic navigation between Pages or other fullscreen controls.\n\nAll children of this control will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}","setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nWhether the NavContainer is visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.m.NavContainer","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"currentPageIsTopPage":{"!description":"Returns whether the current page is the top/initial page.\n\nNote: going to the initial page again with a row of \"to\" navigations causes the initial page to be displayed again, but logically one is not at the top level, so this method returns \"false\" in this case.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"destroyPages":{"!description":"Destroys all the pages in the aggregation <code>pages<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.NavContainer"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.NavContainer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getAutoFocus":{"!description":"Gets current value of property <code>autoFocus<\/code>.\n\nDetermines whether the initial focus is set automatically on first rendering and after navigating to a new page.\nThis is useful when on touch devices the keyboard pops out due to the focus being automatically set on an input field.\nIf necessary the \"afterShow\" event can be used to focus another element.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nWhether the NavContainer is visible.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getInitialPage":{"!description":"ID of the element which is the current target of the association <code>initialPage<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"addCustomTransition":{"!description":"Adds a custom transition to the NavContainer type (not to a particular instance!). The transition is identified by a \"name\". Make sure to only use names that will not collide with transitions which may be added to the NavContainer later. A suggestion is to use the prefix \"c_\" or \"_\" for your custom transitions to ensure this.\n\n\"to\" and \"back\" are the transition functions for the forward and backward navigation.\nBoth will be called with the following parameters:\n- oFromPage: the Control which is currently being displayed by the NavContainer\n- oToPage: the Control which should be displayed by the NavContainer after the transition\n- fCallback: a function which MUST be called when the transition has completed\n- oTransitionParameters: a data object that can be given by application code when triggering the transition by calling to() or back(); this object could give additional information to the transition function, like the DOM element which triggered the transition or the desired transition duration\n\nThe contract for \"to\" and \"back\" is that they may do an animation of their choice, but it should not take \"too long\". At the beginning of the transition the target page \"oToPage\" does have the CSS class \"sapMNavItemHidden\" which initially hides the target page (visibility:hidden). The transition can do any preparation (e.g. move that page out of the screen or make it transparent) and then should remove this CSS class.\nAfter the animation the target page \"oToPage\" should cover the entire screen and the source page \"oFromPage\" should not be visible anymore. This page should then have the CSS class \"sapMNavItemHidden\".\nFor adding/removing this or other CSS classes, the transition can use the addStyleClass/removeStyleClass method:\noFromPage.addStyleClass(\"sapMNavItemHidden\");\nWhen the transition is complete, it MUST call the given fCallback method to inform the NavContainer that navigation has finished!\n\nHint: if the target page of your transition stays black on iPhone, try wrapping the animation start into a\nsetTimeout(..., 0)\nblock (delayed, but without waiting).\n\nThis method can be called on any NavContainer instance or statically on the sap.m.NavContainer type. However, the transition will always be registered for the type (and ALL instances), not for the single instance on which this method was invoked.\n\nReturns the sap.m.NavContainer type if called statically, or \"this\" (to allow method chaining) if called on a particular NavContainer instance.","!static":false,"!category":"function","!type":"fn(sName: String, oTo: Object, oBack: Object) -> sap.m.NavContainer","parameters":{"sName":"type: string, description: The name of the transition. This name can be used by the application to choose this transition when navigating \"to()\" or \"back()\": the \"transitionName\" parameter of \"NavContainer.to()\" corresponds to this name, the back() navigation will automatically use the same transition.\n\n        Make sure to only use names that will not collide with transitions which may be added to the NavContainer later. A suggestion is to use the prefix \"c_\" or \"_\" for your custom transitions to ensure this.","oTo":"type: object, description: The function which will be called by the NavContainer when the application navigates \"to()\", using this animation's name. The NavContainer instance is the \"this\" context within the animation function.\n\n        See the documentation of NavContainer.addCustomTransitions for more details about this function.","oBack":"type: object, description: The function which will be called by the NavContainer when the application navigates \"back()\" from a page where it had navigated to using this animation's name. The NavContainer instance is the \"this\" context within the animation function.\n\n        See the documentation of NavContainer.addCustomTransitions for more details about this function."}},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nThe height of the NavContainer. Can be changed when the NavContainer should not cover the whole available area.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.m.NavContainer","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe width of the NavContainer. Can be changed when the NavContainer should not cover the whole available area.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.NavContainer","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"setDefaultTransitionName":{"!description":"Sets a new value for property <code>defaultTransitionName<\/code>.\n\nThe type of the transition/animation to apply when \"to()\" is called without defining a transition type to use. The default is \"slide\". Other options are: \"fade\", \"flip\" and \"show\" - and the names of any registered custom transitions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>slide<\/code>.","!static":false,"!category":"function","!type":"fn(sDefaultTransitionName: String) -> sap.m.NavContainer","parameters":{"sDefaultTransitionName":"type: string, description: New value for property <code>defaultTransitionName<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.NavContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"fireNavigate":{"!description":"Fires event <code>navigate<\/code> to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.\n\nExpects the following event parameters:\n<ul>\n<li><code>from<\/code> of type <code>sap.ui.core.Control<\/code>The page which was shown before the current navigation.<\/li>\n<li><code>fromId<\/code> of type <code>string<\/code>The ID of the page which was shown before the current navigation.<\/li>\n<li><code>to<\/code> of type <code>sap.ui.core.Control<\/code>The page which will be shown after the current navigation.<\/li>\n<li><code>toId<\/code> of type <code>string<\/code>The ID of the page which will be shown after the current navigation.<\/li>\n<li><code>firstTime<\/code> of type <code>boolean<\/code>Whether the \"to\" page (more precisely: a control with the ID of the page which is currently navigated to) has not been shown/navigated to before.<\/li>\n<li><code>isTo<\/code> of type <code>boolean<\/code>Whether this is a forward navigation, triggered by \"to()\".<\/li>\n<li><code>isBack<\/code> of type <code>boolean<\/code>Whether this is a back navigation, triggered by \"back()\".<\/li>\n<li><code>isBackToTop<\/code> of type <code>boolean<\/code>Whether this is a navigation to the root page, triggered by \"backToTop()\".<\/li>\n<li><code>isBackToPage<\/code> of type <code>boolean<\/code>Whether this was a navigation to a specific page, triggered by \"backToPage()\".<\/li>\n<li><code>direction<\/code> of type <code>string<\/code>How the navigation was triggered, possible values are \"to\", \"back\", \"backToPage\", and \"backToTop\".<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> Boolean","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!module":"sap/m/NavContainer","!helpDescription":"The NavContainer control handles hierarchic navigation between Pages or other fullscreen controls.\n\nAll children of this control will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}","getDefaultTransitionName":{"!description":"Gets current value of property <code>defaultTransitionName<\/code>.\n\nThe type of the transition/animation to apply when \"to()\" is called without defining a transition type to use. The default is \"slide\". Other options are: \"fade\", \"flip\" and \"show\" - and the names of any registered custom transitions.\n\nDefault value is <code>slide<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"attachNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>navigate<\/code> event of this <code>sap.m.NavContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.NavContainer<\/code> itself.\n\nThe event is fired when navigation between two pages has been triggered. The transition (if any) to the new page has not started yet.\nThis event can be aborted by the application with preventDefault(), which means that there will be no navigation.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.NavContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.NavContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getPages":{"!description":"Gets content of aggregation <code>pages<\/code>.\n\nThe content entities between which this NavContainer navigates. These can be of type sap.m.Page, sap.ui.core.View, sap.m.Carousel or any other control with fullscreen/page semantics.\n\nThese aggregated controls will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"to":{"!description":"Navigates to the next page (with drill-down semantic) with the given (or default) animation. This creates a new history item inside the NavContainer and allows going back.\n\nNote that any modifications to the target page (like setting its title, or anything else that could cause a re-rendering) should be done BEFORE calling to(), in order to avoid unwanted side effects, e.g. related to the page animation.\n\nAvailable transitions currently include \"slide\" (default), \"fade\", \"flip\", and \"show\". None of these is currently making use of any given transitionParameters.\n\nCalling this navigation method triggers first the (cancelable) \"navigate\" event on the NavContainer, then the \"beforeHide\" pseudo event on the source page and \"beforeFirstShow\" (if applicable) and\"beforeShow\" on the target page. Later - after the transition has completed - the \"afterShow\" pseudo event is triggered on the target page and \"afterHide\" on the page which has been left. The given data object is available in the \"beforeFirstShow\", \"beforeShow\" and \"afterShow\" event object as \"data\" property.","!static":false,"!category":"function","!type":"fn(sPageId: String, sTransitionName?: String, oData?: Object, oTransitionParameters?: Object) -> sap.m.NavContainer","parameters":{"sTransitionName":"type: string, description: The type of the transition/animation to apply. This parameter can be omitted; then the default is \"slide\" (horizontal movement from the right).\n        Other options are: \"fade\", \"flip\", and \"show\" and the names of any registered custom transitions.\n\n        None of the standard transitions is currently making use of any given transition parameters.","oData":"type: object, description: Since version 1.7.1. This optional object can carry any payload data which should be made available to the target page. The \"beforeShow\" event on the target page will contain this data object as \"data\" property.\n\n        Use case: in scenarios where the entity triggering the navigation can or should not directly initialize the target page, it can fill this object and the target page itself (or a listener on it) can take over the initialization, using the given data.\n\n        When the \"transitionParameters\" object is used, this \"data\" object must also be given (either as object or as null) in order to have a proper parameter order.","oTransitionParameters":"type: object, description: Since version 1.7.1. This optional object can contain additional information for the transition function, like the DOM element which triggered the transition or the desired transition duration.\n\n        For a proper parameter order, the \"data\" parameter must be given when the \"transitionParameters\" parameter is used. (it can be given as \"null\")\n\n        NOTE: it depends on the transition function how the object should be structured and which parameters are actually used to influence the transition.\n        The \"show\", \"slide\" and \"fade\" transitions do not use any parameter.","sPageId":"type: string, description: The screen to which drilldown should happen. The ID or the control itself can be given."}},"insertPage":{"!description":"Inserts a page into the aggregation <code>pages<\/code>.","!static":false,"!category":"function","!type":"fn(oPage: sap.ui.core.Control, iIndex: Number) -> sap.m.NavContainer","parameters":{"oPage":"type: sap.ui.core.Control, description: the page to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the page should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the page is inserted at position 0; for a value\n             greater than the current size of the aggregation, the page is inserted at\n             the last position"}},"detachNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>navigate<\/code> event of this <code>sap.m.NavContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.NavContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}}},"sap.m.MenuItem":{"removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.m.MenuItem) -> sap.m.MenuItem","parameters":{"vItem":"type: int|string|sap.m.MenuItem, description: The itemto remove or its index or id"}},"!proto":"sap.ui.core.Item","destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.MenuItem"},"!category":"class","detachPropertyChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>propertyChanged<\/code> event of this <code>sap.m.MenuItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.MenuItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.MenuItem) -> sap.m.MenuItem","parameters":{"oItem":"type: sap.m.MenuItem, description: the item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nDefines the sub-items contained within this element.","!static":false,"!category":"function","!type":"fn() -> [sap.m.MenuItem]"},"!constructorDescription":"Constructor for a new <code>MenuItem<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : string<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getStartsSection startsSection} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.MenuItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:propertyChanged propertyChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:aggregationChanged aggregationChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","indexOfItem":{"!description":"Checks for the provided <code>sap.m.MenuItem<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.MenuItem) -> Number","parameters":{"oItem":"type: sap.m.MenuItem, description: The item whose index is looked for"}},"bindItems":{"!description":"Binds aggregation <code>items<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.MenuItem","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"fireAggregationChanged":{"!description":"Fires event <code>aggregationChanged<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>aggregationName<\/code> of type <code>String<\/code>The aggregation name of the changed aggregation.<\/li>\n<li><code>methodName<\/code> of type <code>String<\/code>Which method changed the aggregation.<\/li>\n<li><code>methodParams<\/code> of type <code>Object<\/code>What parameters were used to change the aggregation.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.MenuItem","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.m.MenuItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.MenuItem<\/code> itself.\n\nFired after the item has been pressed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.MenuItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.MenuItem<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"The <code>MenuItem<\/code> control is used for creating items for the <code>sap.m.Menu<\/code>.\nIt is derived from a core <code>sap.ui.core.Item<\/code>.","setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nDefines whether the item should be visible on the screen. If set to <code>false<\/code>,\na placeholder is rendered instead of the real item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.m.MenuItem","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"attachPropertyChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>propertyChanged<\/code> event of this <code>sap.m.MenuItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.MenuItem<\/code> itself.\n\nFired when a property of the item changes.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.MenuItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.MenuItem<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.MenuItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"firePropertyChanged":{"!description":"Fires event <code>propertyChanged<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>propertyKey<\/code> of type <code>string<\/code>The property name to be changed.<\/li>\n<li><code>propertyValue<\/code> of type <code>mixed<\/code>The new property value.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.MenuItem","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nDefines whether the item should be visible on the screen. If set to <code>false<\/code>,\na placeholder is rendered instead of the real item.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"unbindItems":{"!description":"Unbinds aggregation <code>items<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.MenuItem"},"removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.MenuItem]"},"setStartsSection":{"!description":"Sets a new value for property <code>startsSection<\/code>.\n\nDefines whether a visual separator should be rendered before the item.\n<b>Note:<\/b> If an item is invisible its separator is also not displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bStartsSection: Boolean) -> sap.m.MenuItem","parameters":{"bStartsSection":"type: boolean, description: New value for property <code>startsSection<\/code>"}},"detachAggregationChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>aggregationChanged<\/code> event of this <code>sap.m.MenuItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.MenuItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nDefines the icon, which belongs to the item.\nThis can be an URI to an image or an icon font URI.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.m.MenuItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nDefines the icon, which belongs to the item.\nThis can be an URI to an image or an icon font URI.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: String) -> sap.m.MenuItem","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.m.MenuItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.MenuItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.MenuItem","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!module":"sap/m/MenuItem","!helpDescription":"The <code>MenuItem<\/code> control is used for creating items for the <code>sap.m.Menu<\/code>.\nIt is derived from a core <code>sap.ui.core.Item<\/code>.","getStartsSection":{"!description":"Gets current value of property <code>startsSection<\/code>.\n\nDefines whether a visual separator should be rendered before the item.\n<b>Note:<\/b> If an item is invisible its separator is also not displayed.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachAggregationChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>aggregationChanged<\/code> event of this <code>sap.m.MenuItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.MenuItem<\/code> itself.\n\nFired when aggregation of the item changes.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.MenuItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.MenuItem<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.MenuItem, iIndex: Number) -> sap.m.MenuItem","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position","oItem":"type: sap.m.MenuItem, description: the item to insert; if empty, nothing is inserted"}}},"sap.m.UploadCollectionParameter_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.UploadCollectionParameter with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.UploadCollectionParameter"},"sap.m.SelectDialog":{"removeItem":{"!description":"Removes a item from the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(vItem: Number | String | sap.m.ListItemBase) -> sap.m.ListItemBase","parameters":{"vItem":"type: int|string|sap.m.ListItemBase, description: The itemto remove or its index or id"}},"toggleStyleClass":{"!description":"Forward method to the inner dialog: toggleStyleClass","!static":false,"!category":"function","!type":"fn() -> sap.m.SelectDialog"},"getContentHeight":{"!description":"Get the internal Dialog's contentHeight property {@link sap.m.Dialog}","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setNoDataText":{"!description":"Set the internal List's no data text property","!static":false,"!category":"function","!type":"fn(sNoDataText: String) -> sap.m.SelectDialog","parameters":{"sNoDataText":"type: string, description: The no data text for the list"}},"!proto":"sap.ui.core.Control","attachConfirm":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>confirm<\/code> event of this <code>sap.m.SelectDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.SelectDialog<\/code> itself.\n\nThis event will be fired when the dialog is confirmed by selecting an item in single selection mode or by pressing the confirmation button in multi selection mode . The items being selected are returned as event parameters.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.SelectDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.SelectDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"destroyItems":{"!description":"Destroys all the items in the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.SelectDialog"},"!category":"class","setRememberSelections":{"!description":"Sets a new value for property <code>rememberSelections<\/code>.\n\nThis flag controls whether the dialog clears the selection after the confirm event has been fired. If the dialog needs to be opened multiple times in the same context to allow for corrections of previous user inputs, set this flag to \"true\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRememberSelections: Boolean) -> sap.m.SelectDialog","parameters":{"bRememberSelections":"type: boolean, description: New value for property <code>rememberSelections<\/code>"}},"detachSearch":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>search<\/code> event of this <code>sap.m.SelectDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.SelectDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"attachLiveChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>liveChange<\/code> event of this <code>sap.m.SelectDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.SelectDialog<\/code> itself.\n\nThis event will be fired when the value of the search field is changed by a user - e.g. at each key press","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.SelectDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.SelectDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"addItem":{"!description":"Adds some item to the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.ListItemBase) -> sap.m.SelectDialog","parameters":{"oItem":"type: sap.m.ListItemBase, description: the item to add; if empty, nothing is inserted"}},"getItems":{"!description":"Gets content of aggregation <code>items<\/code>.\n\nThe items of the list shown in the search dialog. It is recommended to use a StandardListItem for the dialog but other combinations are also possible.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ListItemBase]"},"fireConfirm":{"!description":"Fires event <code>confirm<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selectedItem<\/code> of type <code>sap.m.StandardListItem<\/code>Returns the selected list item. When no item is selected, \"null\" is returned. When multi-selection is enabled and multiple items are selected, only the first selected item is returned.<\/li>\n<li><code>selectedItems<\/code> of type <code>sap.m.StandardListItem[]<\/code>Returns an array containing the visible selected list items. If no items are selected, an empty array is returned.<\/li>\n<li><code>selectedContexts<\/code> of type <code>string<\/code>Returns the binding contexts of the selected items including the non-visible items.\nNOTE: In contrast to the parameter \"selectedItems\", this parameter will also include the selected but NOT visible items (e.g. due to list filtering). An empty array will be set for this parameter if no data binding is used.\nNOTE: When the list binding is pre-filtered and there are items in the selection that are not visible upon opening the dialog, these contexts are not loaded. Therefore, these items will not be included in the selectedContexts array unless they are displayed at least once.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.SelectDialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getContentWidth":{"!description":"Get the internal Dialog's contentWidth property {@link sap.m.Dialog}","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new SelectDialog.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getNoDataText noDataText} : string<\/li>\n<li>{@link #getMultiSelect multiSelect} : boolean (default: false)<\/li>\n<li>{@link #getGrowingThreshold growingThreshold} : int<\/li>\n<li>{@link #getContentWidth contentWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getRememberSelections rememberSelections} : boolean (default: false)<\/li>\n<li>{@link #getContentHeight contentHeight} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.ListItemBase[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:confirm confirm} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:search search} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTitle":{"!description":"Gets current value of property <code>title<\/code>.\n\nDetermines the title text that appears in the dialog header","!static":false,"!category":"function","!type":"fn() -> String"},"indexOfItem":{"!description":"Checks for the provided <code>sap.m.ListItemBase<\/code> in the aggregation <code>items<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.ListItemBase) -> Number","parameters":{"oItem":"type: sap.m.ListItemBase, description: The item whose index is looked for"}},"removeStyleClass":{"!description":"Forward method to the inner dialog: removeStyleClass","!static":false,"!category":"function","!type":"fn() -> sap.m.SelectDialog"},"setContentWidth":{"!description":"Set the internal Dialog's contentWidth property {@link sap.m.Dialog}","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.SelectDialog","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: The new content width value for the dialog"}},"setContentHeight":{"!description":"Set the internal Dialog's contentHeight property {@link sap.m.Dialog}","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.m.SelectDialog","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: The new content width value for the dialog"}},"bindAggregation":{"!description":"Forwards aggregations with the name of items to the internal list.","!static":false,"!category":"function","!type":"fn(sAggregationName: String, oBindingInfo: Object) -> sap.m.SelectDialog","parameters":{"sAggregationName":"type: string, description: The name for the binding","oBindingInfo":"type: object, description: The configuration parameters for the binding"}},"fireCancel":{"!description":"Fires event <code>cancel<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.SelectDialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getMultiSelect":{"!description":"Gets current value of property <code>multiSelect<\/code>.\n\nDetermines if the user can select several options from the list\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!description":"A SelectDialog is a dialog containing a list, search functionality to filter it and a confirmation/cancel button. The control can be used when the user should select one or multiple items out of many.\n\nThe list used in the SelectDialog is a growing list and can be filled with a any kind of list item. The search field triggers the events \"search\" and \"liveChange\" where a filter function can be applied to the list binding.\n\nAfter selecting an item in single selection mode or after confirming in multi selection mode, the dialog will be closed and the event \"confirm\" is fired with the items that have been selected. By default, the selection will also be reset to allow for a new selection when opening the dialog again.\n\nWhen cancelling the selection, the event \"change\" will be fired and the selection is restored to the state when the dialog was opened.\n\nNOTE: The growing functionality of the list does not support two-way Binding, so if you use this control with a JSON model make sure the binding mode is set to \"OneWay\" and that you update the selection model manually with the items passed in the \"confirm\" event.","getGrowingThreshold":{"!description":"Gets current value of property <code>growingThreshold<\/code>.\n\nDetermines the number of items initially displayed in the list. Also defines the number of items to be requested from the model for each grow.","!static":false,"!category":"function","!type":"fn() -> Number"},"detachCancel":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>cancel<\/code> event of this <code>sap.m.SelectDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.SelectDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.SelectDialog.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"hasStyleClass":{"!description":"Forward method to the inner dialog: hasStyleClass","!static":false,"!category":"function","!type":"fn() -> Boolean"},"detachLiveChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>liveChange<\/code> event of this <code>sap.m.SelectDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.SelectDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setTitle":{"!description":"Set the title of the internal dialog","!static":false,"!category":"function","!type":"fn(sTitle: String) -> sap.m.SelectDialog","parameters":{"sTitle":"type: string, description: The title text for the dialog"}},"attachSearch":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>search<\/code> event of this <code>sap.m.SelectDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.SelectDialog<\/code> itself.\n\nThis event will be fired when the search button has been clicked on the searchfield on the visual control","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.SelectDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.SelectDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"removeAllItems":{"!description":"Removes all the controls from the aggregation <code>items<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.ListItemBase]"},"getDomRef":{"!description":"Forward method to the inner dialog: getDomRef","!static":false,"!category":"function","!type":"fn() -> Element"},"extend":{"!description":"Creates a new subclass of class sap.m.SelectDialog with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"fireSearch":{"!description":"Fires event <code>search<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value<\/code> of type <code>string<\/code>The value entered in the search<\/li>\n<li><code>itemsBinding<\/code> of type <code>any<\/code>The Items binding of the Select Dialog for search purposes. It will only be available if the items aggregation is bound to a model.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.SelectDialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setGrowingThreshold":{"!description":"Sets the growing threshold to the internal list","!static":false,"!category":"function","!type":"fn(iValue: Number) -> sap.m.SelectDialog","parameters":{"iValue":"type: int, description: Value for the list's growing threshold."}},"!module":"sap/m/SelectDialog","!helpDescription":"A SelectDialog is a dialog containing a list, search functionality to filter it and a confirmation/cancel button. The control can be used when the user should select one or multiple items out of many.\n\nThe list used in the SelectDialog is a growing list and can be filled with a any kind of list item. The search field triggers the events \"search\" and \"liveChange\" where a filter function can be applied to the list binding.\n\nAfter selecting an item in single selection mode or after confirming in multi selection mode, the dialog will be closed and the event \"confirm\" is fired with the items that have been selected. By default, the selection will also be reset to allow for a new selection when opening the dialog again.\n\nWhen cancelling the selection, the event \"change\" will be fired and the selection is restored to the state when the dialog was opened.\n\nNOTE: The growing functionality of the list does not support two-way Binding, so if you use this control with a JSON model make sure the binding mode is set to \"OneWay\" and that you update the selection model manually with the items passed in the \"confirm\" event.","addStyleClass":{"!description":"Forward method to the inner dialog: addStyleClass","!static":false,"!category":"function","!type":"fn() -> sap.m.SelectDialog"},"setMultiSelect":{"!description":"Enable/Disable multi selection mode.","!static":false,"!category":"function","!type":"fn(bMulti: Boolean) -> sap.m.SelectDialog","parameters":{"bMulti":"type: boolean, description: Flag for multi selection mode"}},"getNoDataText":{"!description":"Get the internal List's no data text property","!static":false,"!category":"function","!type":"fn() -> String"},"detachConfirm":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>confirm<\/code> event of this <code>sap.m.SelectDialog<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.SelectDialog","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getRememberSelections":{"!description":"Gets current value of property <code>rememberSelections<\/code>.\n\nThis flag controls whether the dialog clears the selection after the confirm event has been fired. If the dialog needs to be opened multiple times in the same context to allow for corrections of previous user inputs, set this flag to \"true\".\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"insertItem":{"!description":"Inserts a item into the aggregation <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.m.ListItemBase, iIndex: Number) -> sap.m.SelectDialog","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the item should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n             greater than the current size of the aggregation, the item is inserted at\n             the last position","oItem":"type: sap.m.ListItemBase, description: the item to insert; if empty, nothing is inserted"}},"attachCancel":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>cancel<\/code> event of this <code>sap.m.SelectDialog<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.SelectDialog<\/code> itself.\n\nThis event will be fired when the cancel button is clicked","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.SelectDialog","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.SelectDialog<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"open":{"!description":"Opens the internal dialog with a searchfield and a list.","!static":false,"!category":"function","!type":"fn(sSearchValue: String) -> sap.m.SelectDialog","parameters":{"sSearchValue":"type: string, description: A value for the search can be passed to match with the filter applied to the list binding."}},"fireLiveChange":{"!description":"Fires event <code>liveChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>value<\/code> of type <code>string<\/code>The value to search for, which can change at any keypress<\/li>\n<li><code>itemsBinding<\/code> of type <code>any<\/code>The Items binding of the Select Dialog. It will only be available if the items aggregation is bound to a model.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.SelectDialog","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}}},"sap.m.P13nGroupItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.P13nGroupItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.P13nGroupItem"},"sap.m.routing":{"TargetHandler":"sap.m.routing.TargetHandler_obj","RouteMatchedHandler":"sap.m.routing.RouteMatchedHandler_obj","Router":"sap.m.routing.Router_obj","Targets":"sap.m.routing.Targets_obj","!category":"namespace"},"sap.m.SegmentedButtonItem":{"!description":"The SegmentedButtonItem control is used for creating buttons for the sap.m.SegmentedButton.\nIt is derived from a core sap.ui.core.Item.","setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nWhether the button should be visible on the screen. If set to false, a placeholder is rendered instead of the real button.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.m.SegmentedButtonItem","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.SegmentedButtonItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nWhether the button should be visible on the screen. If set to false, a placeholder is rendered instead of the real button.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Item","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nSets the width of the buttons.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nSets the width of the buttons.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.SegmentedButtonItem","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nThe icon, which belongs to the button.\nThis can be an URI to an image or an icon font URI.","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.m.SegmentedButtonItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nThe icon, which belongs to the button.\nThis can be an URI to an image or an icon font URI.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: String) -> sap.m.SegmentedButtonItem","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.m.SegmentedButtonItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.SegmentedButtonItem","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.SegmentedButtonItem","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!constructorDescription":"Constructor for a new SegmentedButtonItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : string<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","!module":"sap/m/SegmentedButtonItem","!helpDescription":"The SegmentedButtonItem control is used for creating buttons for the sap.m.SegmentedButton.\nIt is derived from a core sap.ui.core.Item.","attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.m.SegmentedButtonItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.SegmentedButtonItem<\/code> itself.\n\nFires when the user clicks on an individual button.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.SegmentedButtonItem","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.SegmentedButtonItem<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.m.HBox":{"!description":"The HBox control builds the container for a horizontal flexible box layout. HBox is a convenience control as it is just a specialized FlexBox control.\n\nBrowser support:\nThis control is not supported in Internet Explorer 9!","extend":{"!description":"Creates a new subclass of class sap.m.HBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.FlexBox.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.HBox.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new HBox.","!module":"sap/m/HBox","!helpDescription":"The HBox control builds the container for a horizontal flexible box layout. HBox is a convenience control as it is just a specialized FlexBox control.\n\nBrowser support:\nThis control is not supported in Internet Explorer 9!","!proto":"sap.m.FlexBox","!category":"class"},"sap.m.App":{"!description":"App is the root element of a UI5 mobile application. It inherits from NavContainer and thus provides its navigation capabilities.\nIt also adds certain header tags to the HTML page which are considered useful for mobile apps.","getMetadata":{"!description":"Returns a metadata object for class sap.m.App.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setBackgroundRepeat":{"!description":"Sets a new value for property <code>backgroundRepeat<\/code>.\n\nWhether the background image (if configured) should be proportionally stretched to cover the whole App (false) or whether it should be tiled (true).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bBackgroundRepeat: Boolean) -> sap.m.App","parameters":{"bBackgroundRepeat":"type: boolean, description: New value for property <code>backgroundRepeat<\/code>"}},"setBackgroundColor":{"!description":"Sets a new value for property <code>backgroundColor<\/code>.\n\nBackground color of the App. If set, this color will override the default background defined by the theme. So this should only be set when really required.\nAny configured background image will be placed above this colored background. But any theme adaptation in the Theme Designer will override this setting.\nUse the \"backgroundRepeat\" property to define whether this image should be stretched to cover the complete App or whether it should be tiled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sBackgroundColor: String) -> sap.m.App","parameters":{"sBackgroundColor":"type: string, description: New value for property <code>backgroundColor<\/code>"}},"setBackgroundOpacity":{"!description":"Sets a new value for property <code>backgroundOpacity<\/code>.\n\nOpacity of the background image. The opacity can be set between 0 (fully transparent) and 1 fully opaque).\nThis can be used to make the application content better readable by making the background image partly transparent.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn(fBackgroundOpacity: Number) -> sap.m.App","parameters":{"fBackgroundOpacity":"type: float, description: New value for property <code>backgroundOpacity<\/code>"}},"getBackgroundColor":{"!description":"Gets current value of property <code>backgroundColor<\/code>.\n\nBackground color of the App. If set, this color will override the default background defined by the theme. So this should only be set when really required.\nAny configured background image will be placed above this colored background. But any theme adaptation in the Theme Designer will override this setting.\nUse the \"backgroundRepeat\" property to define whether this image should be stretched to cover the complete App or whether it should be tiled.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.m.NavContainer","setBackgroundImage":{"!description":"Sets a new value for property <code>backgroundImage<\/code>.\n\nBackground image of the App. If set, this image will override the default background defined by the theme. So this should only be set when really required.\nThis background image will be placed above any color set for the background. But any theme adaptation in the Theme Designer will override this image setting.\nUse the \"backgroundRepeat\" property to define whether this image should be stretched to cover the complete App or whether it should be tiled.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sBackgroundImage: sap.ui.core.URI) -> sap.m.App","parameters":{"sBackgroundImage":"type: sap.ui.core.URI, description: New value for property <code>backgroundImage<\/code>"}},"setHomeIcon":{"!description":"Sets a new value for property <code>homeIcon<\/code>.\n\nThe icon to be displayed on the home screen of iOS devices after the user does \"add to home screen\".\n\nNote that only the first attempt to set the homeIcon will be executed, subsequent settings are ignored.\n\nThis icon must be in PNG format. The property can either hold the URL of one single icon which is used for all devices (and possibly scaled, which looks not perfect), or an object holding icon URLs for the different required sizes.\n\nA desktop icon (used for bookmarks and overriding the favicon) can also be configured. This requires an object to be given and the \"icon\" property of this object then defines the desktop bookmark icon. For this icon, PNG is not supported by Internet Explorer. The ICO format is supported by all browsers. ICO is also preferred for this desktop icon setting because the file can contain different images for different resolutions.\n\nOne example is:\n\napp.setHomeIcon({\n'phone':'phone-icon.png',\n'phone@2':'phone-retina.png',\n'tablet':'tablet-icon.png',\n'tablet@2':'tablet-retina.png',\n'icon':'desktop.ico'\n});\n\nThe respective image sizes are 57/114 px for the phone and 72/144 px for the tablet.\nIf an object is given but one of the sizes is not given, the largest given icon will be used for this size.\n\nOn Android these icons may or may not be used by the device. Apparently chances can be improved by adding glare effect and rounded corners, setting the file name so it ends with \"-precomposed.png\" and setting the \"homeIconPrecomposed\" property to \"true\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oHomeIcon: Object) -> sap.m.App","parameters":{"oHomeIcon":"type: any, description: New value for property <code>homeIcon<\/code>"}},"!category":"class","detachOrientationChange":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20.0 use sap.ui.Device.orientation.attachHandler(...)<br>Detaches event handler <code>fnFunction<\/code> from the <code>orientationChange<\/code> event of this <code>sap.m.App<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.App","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getBackgroundOpacity":{"!description":"Gets current value of property <code>backgroundOpacity<\/code>.\n\nOpacity of the background image. The opacity can be set between 0 (fully transparent) and 1 fully opaque).\nThis can be used to make the application content better readable by making the background image partly transparent.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"extend":{"!description":"Creates a new subclass of class sap.m.App with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.NavContainer.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"fireOrientationChange":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20.0 use sap.ui.Device.orientation.attachHandler(...)<br>Fires event <code>orientationChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>landscape<\/code> of type <code>boolean<\/code>Whether the device is in landscape orientation.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.App","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!constructorDescription":"Constructor for a new App.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHomeIcon homeIcon} : any<\/li>\n<li>{@link #getBackgroundColor backgroundColor} : string<\/li>\n<li>{@link #getBackgroundImage backgroundImage} : sap.ui.core.URI<\/li>\n<li>{@link #getBackgroundRepeat backgroundRepeat} : boolean (default: false)<\/li>\n<li>{@link #getBackgroundOpacity backgroundOpacity} : float (default: 1)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:orientationChange orientationChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.NavContainer#constructor sap.m.NavContainer}\ncan be used as well.","getBackgroundRepeat":{"!description":"Gets current value of property <code>backgroundRepeat<\/code>.\n\nWhether the background image (if configured) should be proportionally stretched to cover the whole App (false) or whether it should be tiled (true).\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!module":"sap/m/App","getHomeIcon":{"!description":"Gets current value of property <code>homeIcon<\/code>.\n\nThe icon to be displayed on the home screen of iOS devices after the user does \"add to home screen\".\n\nNote that only the first attempt to set the homeIcon will be executed, subsequent settings are ignored.\n\nThis icon must be in PNG format. The property can either hold the URL of one single icon which is used for all devices (and possibly scaled, which looks not perfect), or an object holding icon URLs for the different required sizes.\n\nA desktop icon (used for bookmarks and overriding the favicon) can also be configured. This requires an object to be given and the \"icon\" property of this object then defines the desktop bookmark icon. For this icon, PNG is not supported by Internet Explorer. The ICO format is supported by all browsers. ICO is also preferred for this desktop icon setting because the file can contain different images for different resolutions.\n\nOne example is:\n\napp.setHomeIcon({\n'phone':'phone-icon.png',\n'phone@2':'phone-retina.png',\n'tablet':'tablet-icon.png',\n'tablet@2':'tablet-retina.png',\n'icon':'desktop.ico'\n});\n\nThe respective image sizes are 57/114 px for the phone and 72/144 px for the tablet.\nIf an object is given but one of the sizes is not given, the largest given icon will be used for this size.\n\nOn Android these icons may or may not be used by the device. Apparently chances can be improved by adding glare effect and rounded corners, setting the file name so it ends with \"-precomposed.png\" and setting the \"homeIconPrecomposed\" property to \"true\".","!static":false,"!category":"function","!type":"fn() -> Object"},"!helpDescription":"App is the root element of a UI5 mobile application. It inherits from NavContainer and thus provides its navigation capabilities.\nIt also adds certain header tags to the HTML page which are considered useful for mobile apps.","getBackgroundImage":{"!description":"Gets current value of property <code>backgroundImage<\/code>.\n\nBackground image of the App. If set, this image will override the default background defined by the theme. So this should only be set when really required.\nThis background image will be placed above any color set for the background. But any theme adaptation in the Theme Designer will override this image setting.\nUse the \"backgroundRepeat\" property to define whether this image should be stretched to cover the complete App or whether it should be tiled.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"attachOrientationChange":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20.0 use sap.ui.Device.orientation.attachHandler(...)<br>Attaches event handler <code>fnFunction<\/code> to the <code>orientationChange<\/code> event of this <code>sap.m.App<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.App<\/code> itself.\n\nFired when the orientation (portrait/landscape) of the device is changed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.App","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.App<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.m.semantic.SendMessageAction":{"!description":"A SendMessageAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","extend":{"!description":"Creates a new subclass of class sap.m.semantic.SendMessageAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.SendMessageAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new SendMessageAction.","!module":"sap/m/semantic/SendMessageAction","!helpDescription":"A SendMessageAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","!proto":"sap.m.semantic.SemanticButton","!category":"class"},"sap.m.PlanningCalendarView":{"!description":"View of the <code>PlanningCalendar<\/code>.\n\nThe <code>PlanningCalendarView<\/code> defines the granularity of the output. It defines what type of intervals (hours, days or months)\nand how many intervals are shown.","getIntervalsS":{"!description":"Gets current value of property <code>intervalsS<\/code>.\n\nNumber of intervals (defined with <code>intervalType<\/code>) that are displayed on small size (phones).\n\n<b>Note:<\/b> It is not only the screen size which is used to determine the available space, the size of the <code>PlanningCalendar<\/code> is used as well.\n\nDefault value is <code>6<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getKey":{"!description":"Gets current value of property <code>key<\/code>.\n\nKey of the view. This must be set to identify the used view in the <code>PlanningCalendar<\/code>","!static":false,"!category":"function","!type":"fn() -> String"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.PlanningCalendarView.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.ui.core.Element","setIntervalType":{"!description":"Sets a new value for property <code>intervalType<\/code>.\n\nType of the intervals of the row. Default is Hour.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Hour<\/code>.","!static":false,"!category":"function","!type":"fn(sIntervalType: sap.ui.unified.CalendarIntervalType) -> sap.m.PlanningCalendarView","parameters":{"sIntervalType":"type: sap.ui.unified.CalendarIntervalType, description: New value for property <code>intervalType<\/code>"}},"!category":"class","setDescription":{"!description":"Sets a new value for property <code>description<\/code>.\n\nDescription of the <code>PlanningCalendarView<\/code>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDescription: String) -> sap.m.PlanningCalendarView","parameters":{"sDescription":"type: string, description: New value for property <code>description<\/code>"}},"getDescription":{"!description":"Gets current value of property <code>description<\/code>.\n\nDescription of the <code>PlanningCalendarView<\/code>","!static":false,"!category":"function","!type":"fn() -> String"},"getIntervalsL":{"!description":"Gets current value of property <code>intervalsL<\/code>.\n\nNumber of intervals (defined with <code>intervalType<\/code>) that are displayed on large size (desktop)\n\n<b>Note:<\/b> It is not only the screen size which is used to determine the available space, the size of the <code>PlanningCalendar<\/code> is used as well.\n\nDefault value is <code>12<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getIntervalsM":{"!description":"Gets current value of property <code>intervalsM<\/code>.\n\nNumber of intervals (defined with <code>intervalType<\/code>) that are displayed on medium size (tablet)\n\n<b>Note:<\/b> It is not only the screen size which is used to determine the available space, the size of the <code>PlanningCalendar<\/code> is used as well.\n\nDefault value is <code>8<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"extend":{"!description":"Creates a new subclass of class sap.m.PlanningCalendarView with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new <code>PlanningCalendarView<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getIntervalType intervalType} : sap.ui.unified.CalendarIntervalType (default: Hour)<\/li>\n<li>{@link #getDescription description} : string<\/li>\n<li>{@link #getIntervalsS intervalsS} : int (default: 6)<\/li>\n<li>{@link #getIntervalsM intervalsM} : int (default: 8)<\/li>\n<li>{@link #getIntervalsL intervalsL} : int (default: 12)<\/li>\n<li>{@link #getShowSubIntervals showSubIntervals} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/m/PlanningCalendarView","!helpDescription":"View of the <code>PlanningCalendar<\/code>.\n\nThe <code>PlanningCalendarView<\/code> defines the granularity of the output. It defines what type of intervals (hours, days or months)\nand how many intervals are shown.","getIntervalType":{"!description":"Gets current value of property <code>intervalType<\/code>.\n\nType of the intervals of the row. Default is Hour.\n\nDefault value is <code>Hour<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.unified.CalendarIntervalType"},"setShowSubIntervals":{"!description":"Sets a new value for property <code>showSubIntervals<\/code>.\n\nIf set subintervals are shown.\n\nIf the interval type is <code>Hour<\/code>, quarter hours are shown.\n\nIf the interval type is <code>Day<\/code>, hours are shown.\n\nIf the interval type is <code>Month<\/code>, days are shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowSubIntervals: Boolean) -> sap.m.PlanningCalendarView","parameters":{"bShowSubIntervals":"type: boolean, description: New value for property <code>showSubIntervals<\/code>"}},"setIntervalsS":{"!description":"Sets a new value for property <code>intervalsS<\/code>.\n\nNumber of intervals (defined with <code>intervalType<\/code>) that are displayed on small size (phones).\n\n<b>Note:<\/b> It is not only the screen size which is used to determine the available space, the size of the <code>PlanningCalendar<\/code> is used as well.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>6<\/code>.","!static":false,"!category":"function","!type":"fn(iIntervalsS: Number) -> sap.m.PlanningCalendarView","parameters":{"iIntervalsS":"type: int, description: New value for property <code>intervalsS<\/code>"}},"getShowSubIntervals":{"!description":"Gets current value of property <code>showSubIntervals<\/code>.\n\nIf set subintervals are shown.\n\nIf the interval type is <code>Hour<\/code>, quarter hours are shown.\n\nIf the interval type is <code>Day<\/code>, hours are shown.\n\nIf the interval type is <code>Month<\/code>, days are shown.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setIntervalsL":{"!description":"Sets a new value for property <code>intervalsL<\/code>.\n\nNumber of intervals (defined with <code>intervalType<\/code>) that are displayed on large size (desktop)\n\n<b>Note:<\/b> It is not only the screen size which is used to determine the available space, the size of the <code>PlanningCalendar<\/code> is used as well.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>12<\/code>.","!static":false,"!category":"function","!type":"fn(iIntervalsL: Number) -> sap.m.PlanningCalendarView","parameters":{"iIntervalsL":"type: int, description: New value for property <code>intervalsL<\/code>"}},"setIntervalsM":{"!description":"Sets a new value for property <code>intervalsM<\/code>.\n\nNumber of intervals (defined with <code>intervalType<\/code>) that are displayed on medium size (tablet)\n\n<b>Note:<\/b> It is not only the screen size which is used to determine the available space, the size of the <code>PlanningCalendar<\/code> is used as well.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>8<\/code>.","!static":false,"!category":"function","!type":"fn(iIntervalsM: Number) -> sap.m.PlanningCalendarView","parameters":{"iIntervalsM":"type: int, description: New value for property <code>intervalsM<\/code>"}},"setKey":{"!description":"Sets a new value for property <code>key<\/code>.\n\nKey of the view. This must be set to identify the used view in the <code>PlanningCalendar<\/code>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sKey: String) -> sap.m.PlanningCalendarView","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"}}},"sap.m.URLHelper":{"!description":"URL(Uniform Resource Locator) Helper.\n\nThis helper can be used to trigger a native application (e.g. email, sms, phone) from the browser.\nThat means we are restricted of browser or application implementation. e.g.\n<ul>\n<li>Some browsers do not let you to pass more than 2022 characters in the URL<\/li>\n<li>MAPI (Outlook) limit is 2083, max. path under Internet Explorer it is 2048<\/li>\n<li>Different Internet Explorer versions have a different limitation (IE9 approximately 1000 characters)<\/li>\n<li>MS mail app under Windows 8 cuts mail links after approximately 100 characters<\/li>\n<li>Safari gets a confirmation from user before opening a native application and can block other triggers if the user cancels it<\/li>\n<li>Some mail applications(Outlook) do not respect all encodings(e.g. Cyrillic texts are not encoded correctly)<\/li>\n<\/ul>\n\nNote: all the given limitation lengths are for encoded text(e.g space character will be encoded to \"%20\").","redirect":{"!description":"Redirects to the given URL.\nThis method fires \"redirect\" event before opening the URL.","!static":"true","!category":"function","!type":"fn(sURL: String, bNewWindow?: Boolean)"},"triggerSms":{"!description":"Trigger SMS application to send SMS to given telephone number.","!static":"true","!category":"function","!type":"fn(sTel?: String)"},"triggerTel":{"!description":"Trigger telephone to call given telephone number.","!static":"true","!category":"function","!type":"fn(sTel?: String)"},"detachRedirect":{"!description":"Detach already registered redirect event.","!static":"true","!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> Object"},"!category":"namespace","normalizeSms":{"!description":"Sanitizes the given telephone number and returns SMS URI scheme.","!static":"true","!category":"function","!type":"fn(sTel?: String) -> String"},"triggerEmail":{"!description":"Trigger email application to send email.\nTrims spaces from email addresses.","!static":"true","!category":"function","!type":"fn(sEmail?: String, sSubject?: String, sBody?: String, sCC?: String, sBCC?: String)"},"normalizeTel":{"!description":"Sanitizes the given telephone number and returns a telephone URI scheme.","!static":"true","!category":"function","!type":"fn(sTel?: String) -> String"},"!module":"sap/m/library","!helpDescription":"URL(Uniform Resource Locator) Helper.\n\nThis helper can be used to trigger a native application (e.g. email, sms, phone) from the browser.\nThat means we are restricted of browser or application implementation. e.g.\n<ul>\n<li>Some browsers do not let you to pass more than 2022 characters in the URL<\/li>\n<li>MAPI (Outlook) limit is 2083, max. path under Internet Explorer it is 2048<\/li>\n<li>Different Internet Explorer versions have a different limitation (IE9 approximately 1000 characters)<\/li>\n<li>MS mail app under Windows 8 cuts mail links after approximately 100 characters<\/li>\n<li>Safari gets a confirmation from user before opening a native application and can block other triggers if the user cancels it<\/li>\n<li>Some mail applications(Outlook) do not respect all encodings(e.g. Cyrillic texts are not encoded correctly)<\/li>\n<\/ul>\n\nNote: all the given limitation lengths are for encoded text(e.g space character will be encoded to \"%20\").","normalizeEmail":{"!description":"Builds Email URI from given parameter.\nTrims spaces from email addresses.","!static":"true","!category":"function","!type":"fn(sEmail?: String, sSubject?: String, sBody?: String, sCC?: String, sBCC?: String) -> String"},"attachRedirect":{"!description":"Adds an event registration for redirect.","!static":"true","!category":"function","!type":"fn(fnFunction: fn(), oListener?: Object) -> Object"}},"sap.m.MultiComboBox":{"removeItem":{"!description":"Removes an item from the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: Number | String | sap.ui.core.Item) -> sap.ui.core.Item","parameters":{"oItem":"type: int|string|sap.ui.core.Item, description: The item to remove or its index or id."}},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"fireSelectionChange":{"!description":"Fires event <code>selectionChange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>changedItem<\/code> of type <code>sap.ui.core.Item<\/code>Item which selection is changed<\/li>\n<li><code>selected<\/code> of type <code>boolean<\/code>Selection state: true if item is selected, false if\nitem is not selected<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.MultiComboBox","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!proto":"sap.m.ComboBoxBase","destroyItems":{"!description":"Destroys all the items in the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.MultiComboBox"},"getItemByKey":{"!description":"Gets the item with the given key from the aggregation named <code>items<\/code>.<br>\n<b>Note:<\/b> If duplicate keys exist, the first item matching the key is returned.","!static":false,"!category":"function","!type":"fn(sKey: String) -> sap.ui.core.Item","parameters":{"sKey":"type: string, description: An item key that specifies the item to retrieve."}},"removeSelectedKeys":{"!description":"Removes selected items. Only items with valid keys are removed.","!static":false,"!category":"function","!type":"fn(aKeys: [String]) -> sap.m.MultiComboBox","parameters":{"aKeys":"type: string[], description: An array of item keys that identifies the items to be removed"}},"!category":"class","!constructorDescription":"Constructor for a new MultiComboBox.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSelectedKeys selectedKeys} : string[] (default: [])<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionFinish selectionFinish} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ComboBoxBase#constructor sap.m.ComboBoxBase}\ncan be used as well.","getSelectedItems":{"!description":"Retrieves the selected item objects from the association named <code>selectedItems<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"setSelectedKeys":{"!description":"Sets a new value for property <code>selectedKeys<\/code>.\n\nKeys of the selected items. If the key has no corresponding item, no changes will apply. If duplicate keys exists the first item matching the key is used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sSelectedKeys: [String]) -> sap.m.MultiComboBox","parameters":{"sSelectedKeys":"type: string[], description: New value for property <code>selectedKeys<\/code>"}},"clearSelection":{"!description":"Clear the selection.","!static":false,"!category":"function","!type":"fn()"},"detachSelectionChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>selectionChange<\/code> event of this <code>sap.m.MultiComboBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.MultiComboBox","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"addSelectedKeys":{"!description":"Adds selected items. Only items with valid keys are added as selected.","!static":false,"!category":"function","!type":"fn(aKeys: [String]) -> sap.m.MultiComboBox","parameters":{"aKeys":"type: string[], description: An array of item keys that identifies the items to be added as selected"}},"attachSelectionChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>selectionChange<\/code> event of this <code>sap.m.MultiComboBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.MultiComboBox<\/code> itself.\n\nEvent is fired when selection of an item is changed.\nNote: please do not use the \"change\" event inherited from sap.m.InputBase","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.MultiComboBox","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.MultiComboBox<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireSelectionFinish":{"!description":"Fires event <code>selectionFinish<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>selectedItems<\/code> of type <code>sap.ui.core.Item[]<\/code>The selected items which are selected after list box has been closed.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.MultiComboBox","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!description":"The MultiComboBox control provides a list box with items and a text field allowing the user to either type a value directly into the control or choose from the list of existing items.","getMetadata":{"!description":"Returns a metadata object for class sap.m.MultiComboBox.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"createPicker":{"!description":"Creates a picker. To be overwritten by subclasses.","!static":false,"!category":"function","!type":"fn(sPickerType: String) -> sap.m.Popover | sap.m.Dialog","parameters":{"sPickerType":"type: string, description: undefined"}},"onAfterRenderingPicker":{"!description":"This hook method is called after the MultiComboBox's Pop-up is rendered.","!static":false,"!category":"function","!type":"fn()"},"addSelectedItem":{"!description":"Adds some item <code>oItem<\/code> to the association named <code>selectedItems<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item) -> sap.m.MultiComboBox","parameters":{"oItem":"type: sap.ui.core.Item, description: The selected item to add; if empty, nothing is added."}},"removeSelectedItem":{"!description":"Removes an selectedItem from the association named <code>selectedItems<\/code>.","!static":false,"!category":"function","!type":"fn(vSelectedItem: Number | String | sap.ui.core.Item) -> sap.ui.core.Item","parameters":{"vSelectedItem":"type: int|string|sap.ui.core.Item, description: The selectedItemto be removed or its index or ID"}},"removeAllItems":{"!description":"Removes all the items in the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"},"extend":{"!description":"Creates a new subclass of class sap.m.MultiComboBox with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ComboBoxBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"onBeforeRenderingPicker":{"!description":"This hook method is called before the MultiComboBox's Pop-up is rendered.","!static":false,"!category":"function","!type":"fn()"},"getEnabledItems":{"!description":"Gets the enabled items from the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(aItems?: [sap.ui.core.Item]) -> [sap.ui.core.Item]","parameters":{"aItems":"type: sap.ui.core.Item[], description: Items to filter."}},"setSelectedItems":{"!description":"Setter for association <code>selectedItems<\/code>.","!static":false,"!category":"function","!type":"fn(aItems: [string[] | sap.ui.core.Item]) -> sap.m.MultiComboBox","parameters":{"aItems":"type: string[]|sap.ui.core.Item[]|null, description: new values for association <code>selectedItems<\/code>.\nArray of sap.ui.core.Item Id which becomes the new target of this <code>selectedItems<\/code> association.\nAlternatively, an array of sap.ui.core.Item instance may be given or null."}},"!module":"sap/m/MultiComboBox","!helpDescription":"The MultiComboBox control provides a list box with items and a text field allowing the user to either type a value directly into the control or choose from the list of existing items.","attachSelectionFinish":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>selectionFinish<\/code> event of this <code>sap.m.MultiComboBox<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.MultiComboBox<\/code> itself.\n\nEvent is fired when user has finished a selection of items in a list box and list box has been closed.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.MultiComboBox","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.MultiComboBox<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"detachSelectionFinish":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>selectionFinish<\/code> event of this <code>sap.m.MultiComboBox<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.MultiComboBox","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"insertItem":{"!description":"Inserts an item into the aggregation named <code>items<\/code>.","!static":false,"!category":"function","!type":"fn(oItem: sap.ui.core.Item, iIndex: Number) -> sap.m.MultiComboBox","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for\n            a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value\n            greater than the current size of the aggregation, the item is inserted at\n            the last position.","oItem":"type: sap.ui.core.Item, description: The item to insert; if empty, nothing is inserted."}},"getSelectedKeys":{"!description":"Gets current value of property <code>selectedKeys<\/code>.\n\nKeys of the selected items. If the key has no corresponding item, no changes will apply. If duplicate keys exists the first item matching the key is used.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [String]"},"removeAllSelectedItems":{"!description":"Removes all the controls in the association named <code>selectedItems<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Item]"}},"sap.m.InputBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.InputBase with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.InputBase"},"sap.m.ScreenSize":{"!description":"Breakpoint names for different screen sizes.","XSmall":{"!description":"320px wide","!category":"enum","!type":"String"},"Small":{"!description":"480px wide","!category":"enum","!type":"String"},"XLarge":{"!description":"960px wide","!category":"enum","!type":"String"},"Large":{"!description":"768px wide","!category":"enum","!type":"String"},"!category":"static class","XXLarge":{"!description":"1120px wide","!category":"enum","!type":"String"},"!module":"sap/m/library","Desktop":{"!description":"1024px wide","!category":"enum","!type":"String"},"XXSmall":{"!description":"240px wide","!category":"enum","!type":"String"},"Medium":{"!description":"560px wide","!category":"enum","!type":"String"},"Phone":{"!description":"240px wide","!category":"enum","!type":"String"},"Tablet":{"!description":"600px wide","!category":"enum","!type":"String"}},"sap.m.MultiInput_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.MultiInput with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Input.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.MultiInput"},"sap.m.semantic.SemanticButton":{"!description":"A semantic button is either a {@link sap.m.Button} or {@link sap.m.OverflowButton} ,\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.SemanticButton.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!proto":"sap.m.semantic.SemanticControl","!category":"class","extend":{"!description":"Creates a new subclass of class sap.m.semantic.SemanticButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticControl.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.m.semantic.SemanticButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.semantic.SemanticButton","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.semantic.SemanticButton","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nSee {@link sap.m.Button#enabled}\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.m.semantic.SemanticButton","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!constructorDescription":"Constructor for a new SemanticButton.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.SemanticControl#constructor sap.m.semantic.SemanticControl}\ncan be used as well.","!module":"sap/m/semantic/SemanticButton","!helpDescription":"A semantic button is either a {@link sap.m.Button} or {@link sap.m.OverflowButton} ,\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nSee {@link sap.m.Button#enabled}\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.m.semantic.SemanticButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.semantic.SemanticButton<\/code> itself.\n\nSee {@link sap.m.Button#press}","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.semantic.SemanticButton","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.semantic.SemanticButton<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}}},"sap.m.NumericContent":{"setIconDescription":{"!description":"Sets a new value for property <code>iconDescription<\/code>.\n\nDescription of an icon that is used in the tooltip.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIconDescription: String) -> sap.m.NumericContent","parameters":{"sIconDescription":"type: string, description: New value for property <code>iconDescription<\/code>"}},"setTruncateValueTo":{"!description":"Sets a new value for property <code>truncateValueTo<\/code>.\n\nThe number of characters to display for the value property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>4<\/code>.","!static":false,"!category":"function","!type":"fn(iTruncateValueTo: Number) -> sap.m.NumericContent","parameters":{"iTruncateValueTo":"type: int, description: New value for property <code>truncateValueTo<\/code>"}},"!proto":"sap.ui.core.Control","getAnimateTextChange":{"!description":"Gets current value of property <code>animateTextChange<\/code>.\n\nIf set to true, the change of the value will be animated.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe width of the control. If it is not set, the size of the control is defined by the 'size' property.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setWithMargin":{"!description":"Sets a new value for property <code>withMargin<\/code>.\n\nIf the value is set to false, the content will fit to the whole size of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bWithMargin: Boolean) -> sap.m.NumericContent","parameters":{"bWithMargin":"type: boolean, description: New value for property <code>withMargin<\/code>"}},"!constructorDescription":"Constructor for a new sap.m.GenericTile control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAnimateTextChange animateTextChange} : boolean (default: true)<\/li>\n<li>{@link #getFormatterValue formatterValue} : boolean (default: false)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconDescription iconDescription} : string<\/li>\n<li>{@link #getIndicator indicator} : sap.m.DeviationIndicator (default: None)<\/li>\n<li>{@link #getNullifyValue nullifyValue} : boolean (default: true)<\/li>\n<li>{@link #getScale scale} : string<\/li>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getTruncateValueTo truncateValueTo} : int (default: 4)<\/li>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getValueColor valueColor} : sap.m.ValueColor (default: Neutral)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getWithMargin withMargin} : boolean (default: true)<\/li>\n<li>{@link #getState state} : sap.m.LoadState (default: Loaded)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setSize":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38.0 The NumericContent control has now a fixed size, depending on the used media (desktop, tablet or phone).<br>Sets a new value for property <code>size<\/code>.\n\nUpdates the size of the control. If not set then the default size is applied based on the device tile.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn(sSize: sap.m.Size) -> sap.m.NumericContent","parameters":{"sSize":"type: sap.m.Size, description: New value for property <code>size<\/code>"}},"getValueColor":{"!description":"Gets current value of property <code>valueColor<\/code>.\n\nThe semantic color of the value.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.ValueColor"},"setValueColor":{"!description":"Sets a new value for property <code>valueColor<\/code>.\n\nThe semantic color of the value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Neutral<\/code>.","!static":false,"!category":"function","!type":"fn(sValueColor: sap.m.ValueColor) -> sap.m.NumericContent","parameters":{"sValueColor":"type: sap.m.ValueColor, description: New value for property <code>valueColor<\/code>"}},"setFormatterValue":{"!description":"Sets a new value for property <code>formatterValue<\/code>.\n\nIf set to true, the value parameter contains a numeric value and scale. If set to false (default), the value parameter contains a numeric value only.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bFormatterValue: Boolean) -> sap.m.NumericContent","parameters":{"bFormatterValue":"type: boolean, description: New value for property <code>formatterValue<\/code>"}},"getFormatterValue":{"!description":"Gets current value of property <code>formatterValue<\/code>.\n\nIf set to true, the value parameter contains a numeric value and scale. If set to false (default), the value parameter contains a numeric value only.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setIndicator":{"!description":"Sets a new value for property <code>indicator<\/code>.\n\nThe indicator arrow that shows value deviation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sIndicator: sap.m.DeviationIndicator) -> sap.m.NumericContent","parameters":{"sIndicator":"type: sap.m.DeviationIndicator, description: New value for property <code>indicator<\/code>"}},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.m.NumericContent<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.NumericContent<\/code> itself.\n\nThe event is fired when the user chooses the numeric content.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.NumericContent","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.NumericContent<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"Shows numeric values used for example in tiles colored according to their meaning and displays deviations.","getMetadata":{"!description":"Returns a metadata object for class sap.m.NumericContent.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getIconDescription":{"!description":"Gets current value of property <code>iconDescription<\/code>.\n\nDescription of an icon that is used in the tooltip.","!static":false,"!category":"function","!type":"fn() -> String"},"getIndicator":{"!description":"Gets current value of property <code>indicator<\/code>.\n\nThe indicator arrow that shows value deviation.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.DeviationIndicator"},"setScale":{"!description":"Sets a new value for property <code>scale<\/code>.\n\nThe scaling prefix. Financial characters can be used for currencies and counters. The SI prefixes can be used for units. If the scaling prefix contains more than three characters, only the first three characters are displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sScale: String) -> sap.m.NumericContent","parameters":{"sScale":"type: string, description: New value for property <code>scale<\/code>"}},"setAnimateTextChange":{"!description":"Sets a new value for property <code>animateTextChange<\/code>.\n\nIf set to true, the change of the value will be animated.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bAnimateTextChange: Boolean) -> sap.m.NumericContent","parameters":{"bAnimateTextChange":"type: boolean, description: New value for property <code>animateTextChange<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe width of the control. If it is not set, the size of the control is defined by the 'size' property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.NumericContent","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getIcon":{"!description":"Gets current value of property <code>icon<\/code>.\n\nThe icon to be displayed as a graphical element within the control. This can be an image or an icon from the icon font.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"extend":{"!description":"Creates a new subclass of class sap.m.NumericContent with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getNullifyValue":{"!description":"Gets current value of property <code>nullifyValue<\/code>.\n\nIf set to true, the omitted value property is set to 0.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setIcon":{"!description":"Sets a new value for property <code>icon<\/code>.\n\nThe icon to be displayed as a graphical element within the control. This can be an image or an icon from the icon font.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sIcon: sap.ui.core.URI) -> sap.m.NumericContent","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.m.NumericContent<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.NumericContent","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.NumericContent","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nThe actual value.","!static":false,"!category":"function","!type":"fn() -> String"},"getSize":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38.0 The NumericContent control has now a fixed size, depending on the used media (desktop, tablet or phone).<br>Gets current value of property <code>size<\/code>.\n\nUpdates the size of the control. If not set then the default size is applied based on the device tile.\n\nDefault value is <code>Auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Size"},"getState":{"!description":"Gets current value of property <code>state<\/code>.\n\nIndicates the load status.\n\nDefault value is <code>Loaded<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.LoadState"},"!module":"sap/m/NumericContent","getScale":{"!description":"Gets current value of property <code>scale<\/code>.\n\nThe scaling prefix. Financial characters can be used for currencies and counters. The SI prefixes can be used for units. If the scaling prefix contains more than three characters, only the first three characters are displayed.","!static":false,"!category":"function","!type":"fn() -> String"},"!helpDescription":"Shows numeric values used for example in tiles colored according to their meaning and displays deviations.","setNullifyValue":{"!description":"Sets a new value for property <code>nullifyValue<\/code>.\n\nIf set to true, the omitted value property is set to 0.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bNullifyValue: Boolean) -> sap.m.NumericContent","parameters":{"bNullifyValue":"type: boolean, description: New value for property <code>nullifyValue<\/code>"}},"setValue":{"!description":"Sets a new value for property <code>value<\/code>.\n\nThe actual value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.m.NumericContent","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"setState":{"!description":"Sets a new value for property <code>state<\/code>.\n\nIndicates the load status.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Loaded<\/code>.","!static":false,"!category":"function","!type":"fn(sState: sap.m.LoadState) -> sap.m.NumericContent","parameters":{"sState":"type: sap.m.LoadState, description: New value for property <code>state<\/code>"}},"getTruncateValueTo":{"!description":"Gets current value of property <code>truncateValueTo<\/code>.\n\nThe number of characters to display for the value property.\n\nDefault value is <code>4<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getWithMargin":{"!description":"Gets current value of property <code>withMargin<\/code>.\n\nIf the value is set to false, the content will fit to the whole size of the control.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.m.semantic.FavoriteAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.FavoriteAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticToggleButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.FavoriteAction"},"sap.m.semantic.MainAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.MainAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.MainAction"},"sap.m.routing.RouteMatchedHandler_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.routing.RouteMatchedHandler with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(router: sap.ui.core.routing.Router, closeDialogs: Boolean)","prototype":"sap.m.routing.RouteMatchedHandler"},"sap.m.ViewSettingsCustomItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ViewSettingsCustomItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ViewSettingsItem.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ViewSettingsCustomItem"},"sap.m.ListType":{"!description":"Defines the visual indication and behaviour of the list items.","Active":{"!description":"Indicates that the item is clickable via active feedback when item is pressed.","!category":"enum","!type":"String"},"Navigation":{"!description":"Indicates the list item is navigable to show extra information about the item.","!category":"enum","!type":"String"},"!module":"sap/m/library","DetailAndActive":{"!description":"Enables {@link sap.m.ListType#Detail} and {@link sap.m.ListType#Active} enumerations together.","!category":"enum","!type":"String"},"Inactive":{"!description":"Indicates the list item does not have any active feedback when item is pressed.\n<b>Note:<\/b> <code>Inactive<\/code> type cannot be used to disable list items.","!category":"enum","!type":"String"},"!category":"static class","Detail":{"!description":"Enables detail button of the list item that fires <code>detailPress<\/code> event.\nAlso see {@link sap.m.ListBase#attachDetailPress}.","!category":"enum","!type":"String"}},"sap.m.FeedInput_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.FeedInput with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.FeedInput"},"sap.m.ProgressIndicator":{"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nSpecifies the width of the control.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getShowValue":{"!description":"Gets current value of property <code>showValue<\/code>.\n\nIndicates whether the displayValue should be shown in the ProgressIndicator.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nSpecifies the height of the control. The default value depends on the theme. Suggested size for normal use is 2.5rem (40px). Suggested size for small size (like for use in ObjectHeader) is 1.375rem (22px).","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getPercentValue":{"!description":"Gets current value of property <code>percentValue<\/code>.\n\nSpecifies the numerical value in percent for the length of the progress bar.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!constructorDescription":"Constructor for a new ProgressIndicator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getState state} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getDisplayValue displayValue} : string<\/li>\n<li>{@link #getPercentValue percentValue} : float (default: 0)<\/li>\n<li>{@link #getShowValue showValue} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nSwitches enabled state of the control. Disabled fields have different colors, and cannot be focused.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setPercentValue":{"!description":"Sets a new value for property <code>percentValue<\/code>.\n\nSpecifies the numerical value in percent for the length of the progress bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(fPercentValue: Number) -> sap.m.ProgressIndicator","parameters":{"fPercentValue":"type: float, description: New value for property <code>percentValue<\/code>"}},"!description":"Shows the progress of a process in a graphical way. To indicate the progress, the inside of the ProgressIndicator is filled with a color.\nAdditionally, a user-defined string can be displayed on the ProgressIndicator.","getMetadata":{"!description":"Returns a metadata object for class sap.m.ProgressIndicator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nSpecifies the element's text directionality with enumerated options (RTL or LTR). By default, the control inherits text direction from the DOM.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.m.ProgressIndicator","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"setDisplayValue":{"!description":"Sets a new value for property <code>displayValue<\/code>.\n\nSpecifies the text value to be displayed in the bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sDisplayValue: String) -> sap.m.ProgressIndicator","parameters":{"sDisplayValue":"type: string, description: New value for property <code>displayValue<\/code>"}},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nSpecifies the height of the control. The default value depends on the theme. Suggested size for normal use is 2.5rem (40px). Suggested size for small size (like for use in ObjectHeader) is 1.375rem (22px).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.m.ProgressIndicator","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nSpecifies the width of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.ProgressIndicator","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.ProgressIndicator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nSwitches enabled state of the control. Disabled fields have different colors, and cannot be focused.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.m.ProgressIndicator","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"getState":{"!description":"Gets current value of property <code>state<\/code>.\n\nSpecifies the state of the bar. Enumeration sap.ui.core.ValueState provides Error (red), Warning (yellow), Success (green), None (blue) (default value).\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.ValueState"},"!module":"sap/m/ProgressIndicator","!helpDescription":"Shows the progress of a process in a graphical way. To indicate the progress, the inside of the ProgressIndicator is filled with a color.\nAdditionally, a user-defined string can be displayed on the ProgressIndicator.","setShowValue":{"!description":"Sets a new value for property <code>showValue<\/code>.\n\nIndicates whether the displayValue should be shown in the ProgressIndicator.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowValue: Boolean) -> sap.m.ProgressIndicator","parameters":{"bShowValue":"type: boolean, description: New value for property <code>showValue<\/code>"}},"getDisplayValue":{"!description":"Gets current value of property <code>displayValue<\/code>.\n\nSpecifies the text value to be displayed in the bar.","!static":false,"!category":"function","!type":"fn() -> String"},"setState":{"!description":"Sets a new value for property <code>state<\/code>.\n\nSpecifies the state of the bar. Enumeration sap.ui.core.ValueState provides Error (red), Warning (yellow), Success (green), None (blue) (default value).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!static":false,"!category":"function","!type":"fn(sState: sap.ui.core.ValueState) -> sap.m.ProgressIndicator","parameters":{"sState":"type: sap.ui.core.ValueState, description: New value for property <code>state<\/code>"}},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nSpecifies the element's text directionality with enumerated options (RTL or LTR). By default, the control inherits text direction from the DOM.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"}},"sap.m.Carousel":{"detachLoadPage":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.7 Since 1.18.7 pages are no longer loaded or unloaded<br>Detaches event handler <code>fnFunction<\/code> from the <code>loadPage<\/code> event of this <code>sap.m.Carousel<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Carousel","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"next":{"!description":"Call this method to display the next page (corresponds to a swipe right). Returns 'this' for method chaining.","!static":false,"!category":"function","!type":"fn() -> sap.m.Carousel"},"setActivePage":{"!description":"Sets the associated <code>activePage<\/code>.","!static":false,"!category":"function","!type":"fn(oActivePage: sap.ui.core.Control) -> sap.m.Carousel","parameters":{"oActivePage":"type: sap.ui.core.Control, description: Id of an element which becomes the new target of this activePage association; alternatively, an element instance may be given"}},"setPageIndicatorPlacement":{"!description":"Sets a new value for property <code>pageIndicatorPlacement<\/code>.\n\nDefines where the carousel's page indicator is displayed. Possible values are sap.m.PlacementType.Top, sap.m.PlacementType.Bottom. Other values are ignored and the default value will be applied. The default value is sap.m.PlacementType.Bottom.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Bottom<\/code>.","!static":false,"!category":"function","!type":"fn(sPageIndicatorPlacement: sap.m.PlacementType) -> sap.m.Carousel","parameters":{"sPageIndicatorPlacement":"type: sap.m.PlacementType, description: New value for property <code>pageIndicatorPlacement<\/code>"}},"!proto":"sap.ui.core.Control","fireLoadPage":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.7 Since 1.18.7 pages are no longer loaded or unloaded<br>Fires event <code>loadPage<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>pageId<\/code> of type <code>string<\/code>Id of the page which will be loaded<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Carousel","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe width of the carousel. Note that when a percentage value is used, the height of the surrounding container must be defined.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"removePage":{"!description":"Removes a page from the aggregation <code>pages<\/code>.","!static":false,"!category":"function","!type":"fn(vPage: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vPage":"type: int|string|sap.ui.core.Control, description: The pageto remove or its index or id"}},"firePageChanged":{"!description":"Fires event <code>pageChanged<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>oldActivePageId<\/code> of type <code>string<\/code>Id of the page which was active before the page change.<\/li>\n<li><code>newActivePageId<\/code> of type <code>string<\/code>Id of the page which is active after the page change.<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Carousel","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getShowBusyIndicator":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.7 Since 1.18.7 pages are no longer loaded or unloaded. Therefore busy indicator is not necessary any longer.<br>Gets current value of property <code>showBusyIndicator<\/code>.\n\nShow or hide busy indicator in the carousel when loading pages after swipe.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllPages":{"!description":"Removes all the controls from the aggregation <code>pages<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setBusyIndicatorSize":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.7 Since 1.18.7 pages are no longer loaded or unloaded. Therefore busy indicator is not necessary any longer.<br>Sets a new value for property <code>busyIndicatorSize<\/code>.\n\nSize of the busy indicators which can be displayed in the carousel.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>6em<\/code>.","!static":false,"!category":"function","!type":"fn(sBusyIndicatorSize: sap.ui.core.CSSSize) -> sap.m.Carousel","parameters":{"sBusyIndicatorSize":"type: sap.ui.core.CSSSize, description: New value for property <code>busyIndicatorSize<\/code>"}},"getShowPageIndicator":{"!description":"Gets current value of property <code>showPageIndicator<\/code>.\n\nShow or hide carousel's page indicator.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachPageChanged":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>pageChanged<\/code> event of this <code>sap.m.Carousel<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Carousel<\/code> itself.\n\nThis event is fired after a carousel swipe has been completed. It is triggered both by physical swipe events and through API carousel manipulations such as calling 'next', 'previous' or 'setActivePageId' functions.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Carousel","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Carousel<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getHeight":{"!description":"Gets current value of property <code>height<\/code>.\n\nThe height of the carousel. Note that when a percentage value is used, the height of the surrounding container must be defined.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"!constructorDescription":"Constructor for a new Carousel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getLoop loop} : boolean (default: false)<\/li>\n<li>{@link #getShowPageIndicator showPageIndicator} : boolean (default: true)<\/li>\n<li>{@link #getPageIndicatorPlacement pageIndicatorPlacement} : sap.m.PlacementType (default: Bottom)<\/li>\n<li>{@link #getShowBusyIndicator showBusyIndicator} : boolean (default: true)<\/li>\n<li>{@link #getBusyIndicatorSize busyIndicatorSize} : sap.ui.core.CSSSize (default: 6em)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPages pages} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:loadPage loadPage} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:unloadPage unloadPage} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:pageChanged pageChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","indexOfPage":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation <code>pages<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oPage: sap.ui.core.Control) -> Number","parameters":{"oPage":"type: sap.ui.core.Control, description: The page whose index is looked for"}},"setShowBusyIndicator":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.7 Since 1.18.7 pages are no longer loaded or unloaded. Therefore busy indicator is not necessary any longer.<br>Sets a new value for property <code>showBusyIndicator<\/code>.\n\nShow or hide busy indicator in the carousel when loading pages after swipe.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowBusyIndicator: Boolean) -> sap.m.Carousel","parameters":{"bShowBusyIndicator":"type: boolean, description: New value for property <code>showBusyIndicator<\/code>"}},"addPage":{"!description":"Adds some page to the aggregation <code>pages<\/code>.","!static":false,"!category":"function","!type":"fn(oPage: sap.ui.core.Control) -> sap.m.Carousel","parameters":{"oPage":"type: sap.ui.core.Control, description: the page to add; if empty, nothing is inserted"}},"getLoop":{"!description":"Gets current value of property <code>loop<\/code>.\n\nDefines whether the carousel should loop, i.e show the first page after the last page is reached and vice versa.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setShowPageIndicator":{"!description":"Sets a new value for property <code>showPageIndicator<\/code>.\n\nShow or hide carousel's page indicator.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowPageIndicator: Boolean) -> sap.m.Carousel","parameters":{"bShowPageIndicator":"type: boolean, description: New value for property <code>showPageIndicator<\/code>"}},"!description":"The Carousel control can be used to navigate through a list of sap.m controls just like flipping through the pages of a book by swiping right or left. An indicator shows the current position within the control list. When displayed in a desktop browser, a left- and right-arrow button is displayed on the carousel's sides, which can be used to navigate through the carousel.\n\nNote: when displa Internet Explorer 9, page changes are not animated.","destroyPages":{"!description":"Destroys all the pages in the aggregation <code>pages<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.Carousel"},"getMetadata":{"!description":"Returns a metadata object for class sap.m.Carousel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getBusyIndicatorSize":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.7 Since 1.18.7 pages are no longer loaded or unloaded. Therefore busy indicator is not necessary any longer.<br>Gets current value of property <code>busyIndicatorSize<\/code>.\n\nSize of the busy indicators which can be displayed in the carousel.\n\nDefault value is <code>6em<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"previous":{"!description":"Call this method to display the previous page (corresponds to a swipe left). Returns 'this' for method chaining.","!static":false,"!category":"function","!type":"fn() -> sap.m.Carousel"},"attachLoadPage":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.7 Since 1.18.7 pages are no longer loaded or unloaded<br>Attaches event handler <code>fnFunction<\/code> to the <code>loadPage<\/code> event of this <code>sap.m.Carousel<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Carousel<\/code> itself.\n\nCarousel requires a new page to be loaded. This event may be used to fill the content of that page","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Carousel","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Carousel<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"attachUnloadPage":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.7 Since 1.18.7 pages are no longer loaded or unloaded<br>Attaches event handler <code>fnFunction<\/code> to the <code>unloadPage<\/code> event of this <code>sap.m.Carousel<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Carousel<\/code> itself.\n\nCarousel does not display a page any longer and unloads it. This event may be used to clean up the content of that page.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Carousel","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Carousel<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setLoop":{"!description":"Sets a new value for property <code>loop<\/code>.\n\nDefines whether the carousel should loop, i.e show the first page after the last page is reached and vice versa.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bLoop: Boolean) -> sap.m.Carousel","parameters":{"bLoop":"type: boolean, description: New value for property <code>loop<\/code>"}},"setHeight":{"!description":"Sets a new value for property <code>height<\/code>.\n\nThe height of the carousel. Note that when a percentage value is used, the height of the surrounding container must be defined.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.m.Carousel","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe width of the carousel. Note that when a percentage value is used, the height of the surrounding container must be defined.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.Carousel","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"detachPageChanged":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>pageChanged<\/code> event of this <code>sap.m.Carousel<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Carousel","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"extend":{"!description":"Creates a new subclass of class sap.m.Carousel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/m/Carousel","detachUnloadPage":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.7 Since 1.18.7 pages are no longer loaded or unloaded<br>Detaches event handler <code>fnFunction<\/code> from the <code>unloadPage<\/code> event of this <code>sap.m.Carousel<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Carousel","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!helpDescription":"The Carousel control can be used to navigate through a list of sap.m controls just like flipping through the pages of a book by swiping right or left. An indicator shows the current position within the control list. When displayed in a desktop browser, a left- and right-arrow button is displayed on the carousel's sides, which can be used to navigate through the carousel.\n\nNote: when displa Internet Explorer 9, page changes are not animated.","fireUnloadPage":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.7 Since 1.18.7 pages are no longer loaded or unloaded<br>Fires event <code>unloadPage<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>pageId<\/code> of type <code>string<\/code>Id of the page which will be unloaded<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.Carousel","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getActivePage":{"!description":"ID of the element which is the current target of the association <code>activePage<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getPageIndicatorPlacement":{"!description":"Gets current value of property <code>pageIndicatorPlacement<\/code>.\n\nDefines where the carousel's page indicator is displayed. Possible values are sap.m.PlacementType.Top, sap.m.PlacementType.Bottom. Other values are ignored and the default value will be applied. The default value is sap.m.PlacementType.Bottom.\n\nDefault value is <code>Bottom<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.PlacementType"},"getPages":{"!description":"Gets content of aggregation <code>pages<\/code>.\n\nThe content which the carousel displays.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"insertPage":{"!description":"Inserts a page into the aggregation <code>pages<\/code>.","!static":false,"!category":"function","!type":"fn(oPage: sap.ui.core.Control, iIndex: Number) -> sap.m.Carousel","parameters":{"oPage":"type: sap.ui.core.Control, description: the page to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the page should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the page is inserted at position 0; for a value\n             greater than the current size of the aggregation, the page is inserted at\n             the last position"}}},"sap.m.ObjectHeaderContainer":{"!description":"Marker interface for controls which are suitable as items for the ObjectHeader.","!module":"sap/m/library","!category":"static class"},"sap.m.SplitAppMode":{"!description":"The mode of SplitContainer or SplitApp control to show/hide the master area.","!module":"sap/m/library","ShowHideMode":{"!description":"Master will automatically be hidden in portrait mode.","!category":"enum","!type":"String"},"!category":"static class","HideMode":{"!description":"Master area is hidden initially both in portrait and landscape. Master area can be opened by clicking on the top left corner button or swiping right. Swipe is only enabled on mobile devices. Master will keep the open state when changing the orientation of the device.","!category":"enum","!type":"String"},"PopoverMode":{"!description":"Master will be shown inside a Popover when in portrait mode","!category":"enum","!type":"String"},"StretchCompressMode":{"!description":"Master will always be shown but in a compressed version when in portrait mode.","!category":"enum","!type":"String"}},"sap.m.P13nDimMeasurePanel_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.P13nDimMeasurePanel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.P13nPanel.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.P13nDimMeasurePanel"},"sap.m.semantic.ForwardAction":{"!description":"A ForwardAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","extend":{"!description":"Creates a new subclass of class sap.m.semantic.ForwardAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.semantic.ForwardAction.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new ForwardAction.","!module":"sap/m/semantic/ForwardAction","!helpDescription":"A ForwardAction button has default semantic-specific properties and is\neligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","!proto":"sap.m.semantic.SemanticButton","!category":"class"},"sap.m.P13nGroupPanel":{"setContainerQuery":{"!description":"Sets a new value for property <code>containerQuery<\/code>.\n\nDefines if <code>mediaQuery<\/code> or <code>ContainerResize<\/code> is used for a layout update. If <code>ConditionPanel<\/code>\nis used in a dialog, the property must be set to true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bContainerQuery: Boolean) -> sap.m.P13nGroupPanel","parameters":{"bContainerQuery":"type: boolean, description: New value for property <code>containerQuery<\/code>"}},"bindGroupItems":{"!description":"Binds aggregation <code>groupItems<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.P13nGroupPanel","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"!proto":"sap.m.P13nPanel","!category":"class","setOperations":{"!description":"Setter for the supported operations array.","!static":false,"!category":"function","!type":"fn(array: Array)","parameters":{"array":"type: array, description: of operations [sap.m.P13nConditionOperation.BT, sap.m.P13nConditionOperation.EQ]"}},"getGroupItems":{"!description":"Gets content of aggregation <code>groupItems<\/code>.\n\nDefined group items.","!static":false,"!category":"function","!type":"fn() -> [sap.m.P13nGroupItem]"},"addGroupItem":{"!description":"Adds some groupItem to the aggregation <code>groupItems<\/code>.","!static":false,"!category":"function","!type":"fn(oGroupItem: sap.m.P13nGroupItem) -> sap.m.P13nGroupPanel","parameters":{"oGroupItem":"type: sap.m.P13nGroupItem, description: the groupItem to add; if empty, nothing is inserted"}},"setLayoutMode":{"!description":"Sets a new value for property <code>layoutMode<\/code>.\n\nCan be used to control the layout behavior. Default is \"\" which will automatically change the layout. With \"Desktop\", \"Table\"\nor\"Phone\" you can set a fixed layout.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLayoutMode: String) -> sap.m.P13nGroupPanel","parameters":{"sLayoutMode":"type: string, description: New value for property <code>layoutMode<\/code>"}},"attachAddGroupItem":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>addGroupItem<\/code> event of this <code>sap.m.P13nGroupPanel<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.P13nGroupPanel<\/code> itself.\n\nEvent raised if a <code>GroupItem<\/code> has been added.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.P13nGroupPanel","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.P13nGroupPanel<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!constructorDescription":"Constructor for a new P13nGroupPanel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMaxGroups maxGroups} : string (default: -1)<\/li>\n<li>{@link #getContainerQuery containerQuery} : boolean (default: false)<\/li>\n<li>{@link #getLayoutMode layoutMode} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getGroupItems groupItems} : sap.m.P13nGroupItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:addGroupItem addGroupItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:removeGroupItem removeGroupItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:updateGroupItem updateGroupItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.P13nPanel#constructor sap.m.P13nPanel}\ncan be used as well.","getMaxGroups":{"!description":"Gets current value of property <code>maxGroups<\/code>.\n\nDefines the maximum number of groups.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setMaxGroups":{"!description":"Sets a new value for property <code>maxGroups<\/code>.\n\nDefines the maximum number of groups.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn(sMaxGroups: String) -> sap.m.P13nGroupPanel","parameters":{"sMaxGroups":"type: string, description: New value for property <code>maxGroups<\/code>"}},"validateConditions":{"!description":"Checks if the entered or modified conditions are correct, marks invalid fields yellow (Warning) and opens a popup message dialog to let the\nuser know that some values are not correct or missing.","!static":false,"!category":"function","!type":"fn()"},"fireRemoveGroupItem":{"!description":"Fires event <code>removeGroupItem<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.P13nGroupPanel","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachUpdateGroupItem":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>updateGroupItem<\/code> event of this <code>sap.m.P13nGroupPanel<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.P13nGroupPanel<\/code> itself.\n\nUpdates a group item.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.P13nGroupPanel","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.P13nGroupPanel<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireAddGroupItem":{"!description":"Fires event <code>addGroupItem<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.P13nGroupPanel","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"detachUpdateGroupItem":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>updateGroupItem<\/code> event of this <code>sap.m.P13nGroupPanel<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.P13nGroupPanel","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"insertGroupItem":{"!description":"Inserts a groupItem into the aggregation <code>groupItems<\/code>.","!static":false,"!category":"function","!type":"fn(oGroupItem: sap.m.P13nGroupItem, iIndex: Number) -> sap.m.P13nGroupPanel","parameters":{"oGroupItem":"type: sap.m.P13nGroupItem, description: the groupItem to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the groupItem should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the groupItem is inserted at position 0; for a value\n             greater than the current size of the aggregation, the groupItem is inserted at\n             the last position"}},"!description":"The P13nGroupPanel control is used to define group-specific settings for table personalization.","detachAddGroupItem":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>addGroupItem<\/code> event of this <code>sap.m.P13nGroupPanel<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.P13nGroupPanel","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.P13nGroupPanel.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"destroyGroupItems":{"!description":"Destroys all the groupItems in the aggregation <code>groupItems<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.P13nGroupPanel"},"getContainerQuery":{"!description":"Gets current value of property <code>containerQuery<\/code>.\n\nDefines if <code>mediaQuery<\/code> or <code>ContainerResize<\/code> is used for a layout update. If <code>ConditionPanel<\/code>\nis used in a dialog, the property must be set to true.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"extend":{"!description":"Creates a new subclass of class sap.m.P13nGroupPanel with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.P13nPanel.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/m/P13nGroupPanel","attachRemoveGroupItem":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>removeGroupItem<\/code> event of this <code>sap.m.P13nGroupPanel<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.P13nGroupPanel<\/code> itself.\n\nRemoves a group item.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.P13nGroupPanel","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.P13nGroupPanel<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!helpDescription":"The P13nGroupPanel control is used to define group-specific settings for table personalization.","detachRemoveGroupItem":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>removeGroupItem<\/code> event of this <code>sap.m.P13nGroupPanel<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.P13nGroupPanel","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getLayoutMode":{"!description":"Gets current value of property <code>layoutMode<\/code>.\n\nCan be used to control the layout behavior. Default is \"\" which will automatically change the layout. With \"Desktop\", \"Table\"\nor\"Phone\" you can set a fixed layout.","!static":false,"!category":"function","!type":"fn() -> String"},"unbindGroupItems":{"!description":"Unbinds aggregation <code>groupItems<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.P13nGroupPanel"},"removeValidationErrors":{"!description":"Removes all errors/warning states from of all group conditions.","!static":false,"!category":"function","!type":"fn()"},"removeAllGroupItems":{"!description":"Removes all the controls from the aggregation <code>groupItems<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.P13nGroupItem]"},"fireUpdateGroupItem":{"!description":"Fires event <code>updateGroupItem<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.P13nGroupPanel","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"indexOfGroupItem":{"!description":"Checks for the provided <code>sap.m.P13nGroupItem<\/code> in the aggregation <code>groupItems<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oGroupItem: sap.m.P13nGroupItem) -> Number","parameters":{"oGroupItem":"type: sap.m.P13nGroupItem, description: The groupItem whose index is looked for"}},"removeGroupItem":{"!description":"Removes a groupItem from the aggregation <code>groupItems<\/code>.","!static":false,"!category":"function","!type":"fn(vGroupItem: Number | String | sap.m.P13nGroupItem) -> sap.m.P13nGroupItem","parameters":{"vGroupItem":"type: int|string|sap.m.P13nGroupItem, description: The groupItemto remove or its index or id"}},"removeInvalidConditions":{"!description":"Removes all invalid group conditions.","!static":false,"!category":"function","!type":"fn()"}},"sap.m.FlexAlignSelf":{"!description":"Available options for the layout of individual elements along the cross axis of the flexbox layout overriding the default alignment.","Auto":{"!description":"Takes up the value of alignItems from the parent FlexBox","!category":"enum","!type":"String"},"Center":{"!description":"The flex item's margin box is centered in the cross axis within the line.","!category":"enum","!type":"String"},"!module":"sap/m/library","Start":{"!description":"The cross-start margin edges of the flex item is placed flush with the cross-start edge of the line.","!category":"enum","!type":"String"},"Stretch":{"!description":"Make the cross size of the item's margin box as close to the same size as the line as possible.","!category":"enum","!type":"String"},"!category":"static class","End":{"!description":"The cross-start margin edges of the flex item is placed flush with the cross-end edge of the line.","!category":"enum","!type":"String"},"Baseline":{"!description":"If the flex item's inline axis is the same as the cross axis, this value is identical to \"Start\". Otherwise, it participates in baseline alignment: all participating box items on the line are aligned such that their baselines align, and the item with the largest distance between its baseline and its cross-start margin edge is placed flush against the cross-start edge of the line.","!category":"enum","!type":"String"},"Inherit":{"!description":"Inherits the value from its parent.","!category":"enum","!type":"String"}},"sap.m.ObjectMarker":{"!description":"The <code>sap.m.ObjectMarker<\/code> control represents one of the following predefined types:\n<ul>\n<li><code>Flagged<\/code>\n<li><code>Favorite<\/code>\n<li><code>Draft<\/code>\n<li><code>Locked<\/code>\n<li><code>Unsaved Changes<\/code>\n<\/ul>","extend":{"!description":"Creates a new subclass of class sap.m.ObjectMarker with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.m.ObjectMarker","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.ObjectMarker.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"!constructorDescription":"Constructor for a new ObjectMarker.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getType type} : sap.m.ObjectMarkerType<\/li>\n<li>{@link #getVisibility visibility} : sap.m.ObjectMarkerVisibility<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/m/ObjectMarker","!helpDescription":"The <code>sap.m.ObjectMarker<\/code> control represents one of the following predefined types:\n<ul>\n<li><code>Flagged<\/code>\n<li><code>Favorite<\/code>\n<li><code>Draft<\/code>\n<li><code>Locked<\/code>\n<li><code>Unsaved Changes<\/code>\n<\/ul>","getType":{"!description":"Gets current value of property <code>type<\/code>.\n\nSets one of the predefined types.","!static":false,"!category":"function","!type":"fn() -> sap.m.ObjectMarkerType"},"!proto":"sap.ui.core.Control","!category":"class","getVisibility":{"!description":"Gets current value of property <code>visibility<\/code>.\n\nSets one of the visibility states.","!static":false,"!category":"function","!type":"fn() -> sap.m.ObjectMarkerVisibility"}},"sap.m.Label":{"!description":"The Label control is used in a UI5 mobile application to provide label text for other controls. Design such as bold, and text alignment can be specified.","getMetadata":{"!description":"Returns a metadata object for class sap.m.Label.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setRequired":{"!description":"Sets a new value for property <code>required<\/code>.\n\nIndicates that user input is required in the input this label labels.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bRequired: Boolean) -> sap.m.Label","parameters":{"bRequired":"type: boolean, description: New value for property <code>required<\/code>"}},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nDetermines the Label text to be displayed.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Control","setTextAlign":{"!description":"Sets a new value for property <code>textAlign<\/code>.\n\nAvailable alignment settings are \"Begin\", \"Center\", \"End\", \"Left\", and \"Right\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn(sTextAlign: sap.ui.core.TextAlign) -> sap.m.Label","parameters":{"sTextAlign":"type: sap.ui.core.TextAlign, description: New value for property <code>textAlign<\/code>"}},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nOptions for the text direction are RTL and LTR. Alternatively, the control can inherit the text direction from its parent container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.m.Label","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"getTextAlign":{"!description":"Gets current value of property <code>textAlign<\/code>.\n\nAvailable alignment settings are \"Begin\", \"Center\", \"End\", \"Left\", and \"Right\".\n\nDefault value is <code>Begin<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextAlign"},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nDetermines the width of the label.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nDetermines the width of the label.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.Label","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.Label with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new Label.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDesign design} : sap.m.LabelDesign (default: Standard)<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/m/Label","getDesign":{"!description":"Gets current value of property <code>design<\/code>.\n\nSets the design of a Label to either Standard or Bold.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.LabelDesign"},"!helpDescription":"The Label control is used in a UI5 mobile application to provide label text for other controls. Design such as bold, and text alignment can be specified.","setDesign":{"!description":"Sets a new value for property <code>design<\/code>.\n\nSets the design of a Label to either Standard or Bold.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Standard<\/code>.","!static":false,"!category":"function","!type":"fn(sDesign: sap.m.LabelDesign) -> sap.m.Label","parameters":{"sDesign":"type: sap.m.LabelDesign, description: New value for property <code>design<\/code>"}},"getLabelFor":{"!description":"ID of the element which is the current target of the association <code>labelFor<\/code>, or <code>null<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"setLabelFor":{"!description":"Sets the associated <code>labelFor<\/code>.","!static":false,"!category":"function","!type":"fn(oLabelFor: sap.ui.core.Control) -> sap.m.Label","parameters":{"oLabelFor":"type: sap.ui.core.Control, description: Id of an element which becomes the new target of this labelFor association; alternatively, an element instance may be given"}},"getRequired":{"!description":"Gets current value of property <code>required<\/code>.\n\nIndicates that user input is required in the input this label labels.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nOptions for the text direction are RTL and LTR. Alternatively, the control can inherit the text direction from its parent container.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nDetermines the Label text to be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.m.Label","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}},"sap.m.QuickViewGroupElement":{"!description":"QuickViewGroupElement is a combination of one label and another control (Link or Text) associated to this label.","setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nDetermines whether the element should be visible on the screen.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.m.QuickViewGroupElement","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.QuickViewGroupElement.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLabel":{"!description":"Gets current value of property <code>label<\/code>.\n\nSpecifies the text displayed below the associated label.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nDetermines whether the element should be visible on the screen.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Element","setPageLinkId":{"!description":"Sets a new value for property <code>pageLinkId<\/code>.\n\nSpecifies the ID of the QuickViewPage, which is opened from the link in the QuickViewGroupElement.\nWorks only with QuickViewGroupElement of type pageLink.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sPageLinkId: String) -> sap.m.QuickViewGroupElement","parameters":{"sPageLinkId":"type: string, description: New value for property <code>pageLinkId<\/code>"}},"!category":"class","setEmailSubject":{"!description":"Sets a new value for property <code>emailSubject<\/code>.\n\nThe subject of the email.\nWorks only with QuickViewGroupElement of type email.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sEmailSubject: String) -> sap.m.QuickViewGroupElement","parameters":{"sEmailSubject":"type: string, description: New value for property <code>emailSubject<\/code>"}},"setType":{"!description":"Sets a new value for property <code>type<\/code>.\n\nSpecifies the type of the displayed information \u2013 phone number, mobile number, e-mail, link, text or a link to another QuickViewPage. Default value is \u2018text\u2019.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>GroupElementType.text<\/code>.","!static":false,"!category":"function","!type":"fn(sType: sap.m.QuickViewGroupElementType) -> sap.m.QuickViewGroupElement","parameters":{"sType":"type: sap.m.QuickViewGroupElementType, description: New value for property <code>type<\/code>"}},"setUrl":{"!description":"Sets a new value for property <code>url<\/code>.\n\nSpecifies the address of the QuickViewGroupElement link. Works only with QuickViewGroupElement of type link.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sUrl: String) -> sap.m.QuickViewGroupElement","parameters":{"sUrl":"type: string, description: New value for property <code>url<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.QuickViewGroupElement with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getPageLinkId":{"!description":"Gets current value of property <code>pageLinkId<\/code>.\n\nSpecifies the ID of the QuickViewPage, which is opened from the link in the QuickViewGroupElement.\nWorks only with QuickViewGroupElement of type pageLink.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getUrl":{"!description":"Gets current value of property <code>url<\/code>.\n\nSpecifies the address of the QuickViewGroupElement link. Works only with QuickViewGroupElement of type link.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getValue":{"!description":"Gets current value of property <code>value<\/code>.\n\nSpecifies the text of the control that associates with the label.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getTarget":{"!description":"Gets current value of property <code>target<\/code>.\n\nSpecifies the target of the link \u2013 it works like the target property of the HTML <a> tag. Works only with QuickViewGroupElement of type link.\n\nDefault value is <code>_blank<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new QuickViewGroupElement.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getLabel label} : string (default: )<\/li>\n<li>{@link #getValue value} : string (default: )<\/li>\n<li>{@link #getUrl url} : string (default: )<\/li>\n<li>{@link #getTarget target} : string (default: _blank)<\/li>\n<li>{@link #getType type} : sap.m.QuickViewGroupElementType (default: GroupElementType.text)<\/li>\n<li>{@link #getPageLinkId pageLinkId} : string (default: )<\/li>\n<li>{@link #getEmailSubject emailSubject} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/m/QuickViewGroupElement","!helpDescription":"QuickViewGroupElement is a combination of one label and another control (Link or Text) associated to this label.","getType":{"!description":"Gets current value of property <code>type<\/code>.\n\nSpecifies the type of the displayed information \u2013 phone number, mobile number, e-mail, link, text or a link to another QuickViewPage. Default value is \u2018text\u2019.\n\nDefault value is <code>GroupElementType.text<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.QuickViewGroupElementType"},"getEmailSubject":{"!description":"Gets current value of property <code>emailSubject<\/code>.\n\nThe subject of the email.\nWorks only with QuickViewGroupElement of type email.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setValue":{"!description":"Sets a new value for property <code>value<\/code>.\n\nSpecifies the text of the control that associates with the label.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sValue: String) -> sap.m.QuickViewGroupElement","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"}},"setLabel":{"!description":"Sets a new value for property <code>label<\/code>.\n\nSpecifies the text displayed below the associated label.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sLabel: String) -> sap.m.QuickViewGroupElement","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}},"setTarget":{"!description":"Sets a new value for property <code>target<\/code>.\n\nSpecifies the target of the link \u2013 it works like the target property of the HTML <a> tag. Works only with QuickViewGroupElement of type link.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>_blank<\/code>.","!static":false,"!category":"function","!type":"fn(sTarget: String) -> sap.m.QuickViewGroupElement","parameters":{"sTarget":"type: string, description: New value for property <code>target<\/code>"}}},"sap.m":{"translucent":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.6 This property has no effect since release 1.18.6 and should not be used. Translucent bar may overlay an input and make it difficult to edit.<br>Indicates whether the Bar is partially translucent.\nIt is only applied for touch devices.","!category":"enum","!type":"Boolean"},"TileContent":"sap.m.TileContent_obj","dateFormat":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.9.1 <code>sap.m.DatePicker<\/code>, <code>sap.m.TimePicher<\/code> or <code>sap.m.DateTimePicker<\/code> should be used for date/time inputs and formating.<br>Only used if type=date and no datepicker is available.\nThe data is displayed and the user input is parsed according to this format.\nNOTE: The value property is always of the form RFC 3339 (YYYY-MM-dd).","!category":"enum","!type":"String"},"Size":"sap.m.Size","inputsAsTooltips":{"!description":"Indicates whether an Input fields should be used as tooltips for the handles.","!category":"enum","!type":"Boolean"},"formatterValue":{"!description":"If set to true, the value parameter contains a numeric value and scale. If set to false (default), the value parameter contains a numeric value only.","!category":"enum","!type":"Boolean"},"persoMap":{"!description":"persoMap : Object","!category":"enum","!type":"Object"},"showMagnifier":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.0 This parameter is deprecated. Use \"showSearchButton\" instead.<br>Set to false to hide the magnifier icon.","!category":"enum","!type":"Boolean"},"URLHelper":"sap.m.URLHelper","rootLabel":{"!description":"Texts which describes the landmark of the root container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), a predefined text\nis used.","!category":"enum","!type":"String"},"PlanningCalendarView":"sap.m.PlanningCalendarView_obj","changeNotifier":{"!description":"Callback which notifies a change on this panel.","!category":"enum","!type":"Object"},"enableDelete":{"!description":"Enables/Disables the Delete button.\nIf the value is true, the Delete button is enabled and the delete function can be used.\nIf the value is false, the delete function is not available.","!category":"enum","!type":"Boolean"},"mergeDuplicates":{"!description":"Set \"true\" to merge repeating cells(duplicates) into one cell block.\nPlease see \"mergeFunctionName\" property to customize this property.\nNote: This feature must not be used together with two-way binding. This property is ignored if a column is shown in the pop-in.","!category":"enum","!type":"Boolean"},"Button":"sap.m.Button_obj","iconSize":{"!description":"The Size of the image or icon to be displayed. The default value depends on the theme. Please be sure that the size is corresponding to a full pixel value as some browsers don't support subpixel calculations. Recommended size is 1.375rem (22px) for normal, 1rem (16px) for small, and 2rem (32px) for large icons correspondingly.","!category":"enum","!type":"sap.ui.core.CSSSize"},"ObjectMarkerVisibility":"sap.m.ObjectMarkerVisibility","footerRole":{"!description":"Landmark role of the footer container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.","!category":"enum","!type":"sap.ui.core.AccessibleLandmarkRole"},"P13nSortItem":"sap.m.P13nSortItem_obj","NavContainerChild":"sap.m.NavContainerChild","Toolbar":"sap.m.Toolbar_obj","showBusyIndicator":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.7 Since 1.18.7 pages are no longer loaded or unloaded. Therefore busy indicator is not necessary any longer.<br>Show or hide busy indicator in the carousel when loading pages after swipe.","!category":"enum","!type":"Boolean"},"FeedListItem":"sap.m.FeedListItem_obj","intervalsM":{"!description":"Number of intervals (defined with <code>intervalType<\/code>) that are displayed on medium size (tablet)\n\n<b>Note:<\/b> It is not only the screen size which is used to determine the available space, the size of the <code>PlanningCalendar<\/code> is used as well.","!category":"enum","!type":"Number"},"SlideTile":"sap.m.SlideTile_obj","intervalsL":{"!description":"Number of intervals (defined with <code>intervalType<\/code>) that are displayed on large size (desktop)\n\n<b>Note:<\/b> It is not only the screen size which is used to determine the available space, the size of the <code>PlanningCalendar<\/code> is used as well.","!category":"enum","!type":"Number"},"active":{"!description":"Indicates that the whole toolbar is clickable. The Press event is fired only if Active is set to true.\nNote: This property should be used when there are no interactive controls inside the toolbar and the toolbar itself is meant to be interactive.","!category":"enum","!type":"Boolean"},"ActionSelect":"sap.m.ActionSelect_obj","isDefault":{"!description":"the column with isDefault==true will be used as the selected column item on the conditionPanel","!category":"enum","!type":"Boolean"},"iconUnselected":{"!description":"The URI to the icon font icon or image that will be displayed for all unselected rating symbols. A star icon will be used if the property is not set","!category":"enum","!type":"sap.ui.core.URI"},"!module":"sap/m/library","size":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38.0 The TileContent control has now a fixed size, depending on the used media (desktop, tablet or phone).<br>Updates the size of the tile. If it is not set, then the default size is applied based on the device tile.","!category":"enum","!type":"sap.m.Size"},"showAddNewButton":{"!description":"Defines whether an <code>Add New Tab<\/code> button is displayed in the TabStrip.","!category":"enum","!type":"Boolean"},"sender":{"!description":"Sender of the chunk","!category":"enum","!type":"String"},"authorName":{"!description":"Determines the notification group's author name.","!category":"enum","!type":"String"},"HeaderLevel":"sap.m.HeaderLevel","placement":{"!description":"This property only takes effect on desktop or tablet. Please see the documentation sap.m.Popover#placement.","!category":"enum","!type":"sap.m.PlacementType"},"Link":"sap.m.Link_obj","hasGrouping":{"!description":"hasGrouping : Boolean","!category":"enum","!type":"Boolean"},"multiSelect":{"!description":"If set to (true), multi selection will be allowed for the items aggregation.","!category":"enum","!type":"Boolean"},"showButtons":{"!description":"Determines the action buttons visibility.","!category":"enum","!type":"Boolean"},"HBox":"sap.m.HBox_obj","contentRole":{"!description":"Landmark role of the content container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.","!category":"enum","!type":"sap.ui.core.AccessibleLandmarkRole"},"role":{"!description":"Defines role. The role is reflected in the manner how the dimension will influence the chart layout.","!category":"enum","!type":"String"},"infoState":{"!description":"Defines the color of the info text. Possible values are Error, Warning, Success and so on.","!category":"enum","!type":"sap.ui.core.ValueState"},"QuickViewGroupElement":"sap.m.QuickViewGroupElement_obj","iconDescription":{"!description":"Description of an icon that is used in the tooltip.","!category":"enum","!type":"String"},"growingThreshold":{"!description":"Determines the number of items initially displayed in the table.","!category":"enum","!type":"Number"},"introTarget":{"!description":"Determines the <code>target<\/code> attribute for the intro link. Options are <code>_self<\/code>,\n<code>_top<\/code>, <code>_blank<\/code>, <code>_parent<\/code>, <code>_search<\/code>. Alternatively,\na frame name can be entered.","!category":"enum","!type":"String"},"selectedKeys":{"!description":"Keys of the selected items. If the key has no corresponding item, no changes will apply. If duplicate keys exists the first item matching the key is used.","!category":"enum","!type":"[String]"},"icon":{"!description":"Determines the icon that is displayed for this step.\nThe icon is visualized in the progress navigation part of the Wizard control.\n<b>Note:<\/b> In order for the icon to be displayed, each step in the Wizard should have\nthis property defined, otherwise the default numbering will be displayed.","!category":"enum","!type":"sap.ui.core.URI"},"MessagePage":"sap.m.MessagePage_obj","P13nDimMeasureItem":"sap.m.P13nDimMeasureItem_obj","valueColor":{"!description":"The semantic color of the value.","!category":"enum","!type":"sap.m.ValueColor"},"initiallyExpanded":{"!description":"Sets the initial state of the control - expanded or collapsed. By default the control opens as expanded","!category":"enum","!type":"Boolean"},"draggable":{"!description":"Indicates whether the dialog is draggable. If this property is set to true, the dialog will be draggable by it's header. This property has a default value false. The Dialog can be draggable only in desktop mode.","!category":"enum","!type":"Boolean"},"titleActive":{"!description":"Indicates if the ObjectIdentifier's title is clickable.","!category":"enum","!type":"Boolean"},"initialColumnState":{"!description":"initialColumnState : Object","!category":"enum","!type":"Object"},"chartTypeKey":{"!description":"Specifies a chart type key.","!category":"enum","!type":"String"},"autoPriority":{"!description":"Determines if the group will automatically set the priority based on the highest priority of its notifications or get its priority from the developer.","!category":"enum","!type":"Boolean"},"contentMinWidth":{"!description":"Sets the minimum width of the content area inside popover.","!category":"enum","!type":"sap.ui.core.CSSSize"},"introHref":{"!description":"Determines the intro link target URI. Supports standard hyperlink behavior. If an action should be triggered,\nthis should not be set, but instead an event handler for the <code>introPress<\/code> event should be registered.","!category":"enum","!type":"sap.ui.core.URI"},"showNextButton":{"!description":"Controls the visibility of the next button. The developers can choose to control the flow of the\nsteps either through the API (with <code>nextStep<\/code> and <code>previousStep<\/code> methods) or let the user click\nthe next button, and control it with <code>validateStep<\/code> or <code>invalidateStep<\/code> methods.","!category":"enum","!type":"Boolean"},"intervalsS":{"!description":"Number of intervals (defined with <code>intervalType<\/code>) that are displayed on small size (phones).\n\n<b>Note:<\/b> It is not only the screen size which is used to determine the available space, the size of the <code>PlanningCalendar<\/code> is used as well.","!category":"enum","!type":"Number"},"StandardListItem":"sap.m.StandardListItem_obj","localeId":{"!description":"Defines the locale used to parse string values representing time.\n\nDetermines the locale, used to interpret the string, supplied by the\n<code>value<\/code> property.\nExample: AM in the string \"09:04 AM\" is locale (language) dependent.\nThe format comes from the browser language settings if not set explicitly.\nUsed in combination with 12 hour <code>valueFormat<\/code> containing 'a', which\nstands for day period string.\nDefault value is taken from browser's locale setting.","!category":"enum","!type":"String"},"ObjectIdentifier":"sap.m.ObjectIdentifier_obj","FlexJustifyContent":"sap.m.FlexJustifyContent","previousButtonTooltip":{"!description":"Determines the tooltip of the previous button.","!category":"enum","!type":"String"},"ToggleButton":"sap.m.ToggleButton_obj","secondaryCalendarType":{"!description":"If set, the days in the calendar popup are also displayed in this calendar type\nIf not set, the dates are only displayed in the primary calendar type","!category":"enum","!type":"sap.ui.core.CalendarType"},"P13nFilterPanel":"sap.m.P13nFilterPanel_obj","valueFormat":{"!description":"Determines the format of the value property.\n\nThe default value is the browser's medium time format locale setting\n{@link sap.ui.core.LocaleData#getTimePattern}.\nIf data binding with type {@link sap.ui.model.type.Time} is used for the\n<code>value<\/code> property, the <code>valueFormat<\/code> property\nis ignored as the information is provided from the binding itself.","!category":"enum","!type":"String"},"triggerText":{"!description":"Text which is displayed on the trigger at the end of the list. The default is a translated text (\"Load More Data\") coming from the messagebundle properties.\nThis property can be used only if growing property is set \"true\" and scrollToLoad property is set \"false\".","!category":"enum","!type":"String"},"UploadCollectionItem":"sap.m.UploadCollectionItem_obj","customTextOff":{"!description":"Custom text for the \"OFF\" state.\n\n\"OFF\" translated to the current language is the default value.\nBeware that the given text will be cut off if available space is exceeded.","!category":"enum","!type":"String"},"showSelection":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.0 Regarding to changes of this control this property is not needed anymore.<br>Defines whether the current selection is visualized.","!category":"enum","!type":"Boolean"},"subtle":{"!description":"Subtle links look more like standard text than like links. They should only be used to help with visual hierarchy between large data lists of important and less important links. Subtle links should not be used in any other use case.","!category":"enum","!type":"Boolean"},"TablePersoDialog":"sap.m.TablePersoDialog_obj","wrap":{"!description":"Determines the wrapping behavior of the flex container. This property has no effect in older browsers, e.g. Android Native 4.3 and below.","!category":"enum","!type":"sap.m.FlexWrap"},"useMap":{"!description":"The name of the image map that defines the clickable areas","!category":"enum","!type":"String"},"DialogType":"sap.m.DialogType","ListKeyboardMode":"sap.m.ListKeyboardMode","valueState":{"!description":"Visualizes the validation state of the control, e.g. <code>Error<\/code>, <code>Warning<\/code>, <code>Success<\/code>.","!category":"enum","!type":"sap.ui.core.ValueState"},"displayTime":{"!description":"The time of the slide display in milliseconds.","!category":"enum","!type":"Number"},"headerText":{"!description":"Defines the header text that appears in the control.\n<b>Note:<\/b> If <code>headerToolbar<\/code> aggregation is set, then this property is ignored.","!category":"enum","!type":"String"},"showOverlay":{"!description":"Setting this property to <code>true<\/code> will show an overlay on top of the table content and prevents the user interaction with it.","!category":"enum","!type":"Boolean"},"TextArea":"sap.m.TextArea_obj","stretchContentHeight":{"!description":"Determines whether the IconTabBar height is stretched to the maximum possible height\nof its parent container. As a prerequisite, the height of the parent container must be\ndefined as a fixed value.","!category":"enum","!type":"Boolean"},"ToolbarLayoutData":"sap.m.ToolbarLayoutData_obj","enableFlexBox":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16 This property is no longer supported, instead, contentMiddle will always occupy 100% width when no contentLeft and contentRight are being set.<br>If this flag is set to true, contentMiddle will be rendered as a HBox and layoutData can be used to allocate available space.","!category":"enum","!type":"Boolean"},"showLogout":{"!description":"Determines whether the Logout button should be displayed. Currently, this only happens on very tall screens (1568px height), otherwise, it is always hidden.","!category":"enum","!type":"Boolean"},"backgroundOpacity":{"!description":"Defines the opacity of the background image - between 0 (fully transparent) and 1 (fully opaque).\nThis can be used to improve the content visibility by making the background image partly transparent.","!category":"enum","!type":"Number"},"useDefaultActionOnly":{"!description":"Controls whether the default action handler is invoked always or it is invoked only until a menu item is selected.\nUsable only if <code>buttonMode<\/code> is set to <code>Split<\/code>.","!category":"enum","!type":"Boolean"},"allowAdd":{"!description":"Determines whether the user is allowed to add Tiles in Edit mode (editable = true).","!category":"enum","!type":"Boolean"},"mimeType":{"!description":"Specifies the MIME type of the file.","!category":"enum","!type":"String"},"styleClass":{"!description":"The style class will be applied to the flex item and can be used for CSS selectors","!category":"enum","!type":"String"},"TabContainer":"sap.m.TabContainer_obj","markupDescription":{"!description":"Specifies if description should be interpreted as markup","!category":"enum","!type":"Boolean"},"showLabel":{"!description":"show additional labels in the condition","!category":"enum","!type":"Boolean"},"popinHAlign":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.14 Use popinDisplay property instead.<br>Horizontal alignment of the pop-in content. Available alignment settings are \"Begin\", \"Center\", \"End\", \"Left\", and \"Right\".\n\nNOTE: Controls with a text align do not inherit the horizontal alignment.","!category":"enum","!type":"sap.ui.core.TextAlign"},"ViewSettingsFilterItem":"sap.m.ViewSettingsFilterItem_obj","percentValue":{"!description":"Specifies the numerical value in percent for the length of the progress bar.","!category":"enum","!type":"Number"},"FeedInput":"sap.m.FeedInput_obj","showMarkers":{"!description":"If set to true, the ObjectListItem can be marked with icons such as favorite and flag.","!category":"enum","!type":"Boolean"},"ImageContent":"sap.m.ImageContent_obj","SplitAppMode":"sap.m.SplitAppMode","Dialog":"sap.m.Dialog_obj","columnInfoCallback":{"!description":"columnInfoCallback : Object","!category":"enum","!type":"Object"},"List":"sap.m.List_obj","exclude":{"!description":"defines if the filter is an include or exclude filter item","!category":"enum","!type":"Boolean"},"componentName":{"!description":"Available options for the text direction are LTR and RTL. By default the control inherits the text direction from its parent control.","!category":"enum","!type":"String"},"htmlText":{"!description":"Text in HTML format.\nThe following tags are supported:\n<ul>\n\t<li><code>a<\/code><\/li>\n\t<li><code>abbr<\/code><\/li>\n\t<li><code>blockquote<\/code><\/li>\n\t<li><code>br<\/code><\/li>\n\t<li><code>cite<\/code><\/li>\n\t<li><code>code<\/code><\/li>\n\t<li><code>em<\/code><\/li>\n\t<li><code>h1<\/code><\/li>\n\t<li><code>h2<\/code><\/li>\n\t<li><code>h3<\/code><\/li>\n\t<li><code>h4<\/code><\/li>\n\t<li><code>h5<\/code><\/li>\n\t<li><code>h6<\/code><\/li>\n\t<li><code>p<\/code><\/li>\n\t<li><code>pre<\/code><\/li>\n\t<li><code>strong<\/code><\/li>\n\t<li><code>span<\/code><\/li>\n\t<li><code>u<\/code><\/li>\n\t<li><code>dl<\/code><\/li>\n\t<li><code>dt<\/code><\/li>\n\t<li><code>dl<\/code><\/li>\n\t<li><code>ul<\/code><\/li>\n\t<li><code>ol<\/code><\/li>\n\t<li><code>li<\/code><\/li>\n<\/ul>\n<p><code>class, style,<\/code> and <code>target<\/code> attributes are allowed.\nIf <code>target<\/code> is not set, links open in a new window by default.\n<p>Only safe <code>href<\/code> attributes can be used. See {@link jQuery.sap.validateUrl}.","!category":"enum","!type":"String"},"modal":{"!description":"This property only takes effect on desktop or tablet. Please see the documentation sap.m.Popover#modal.","!category":"enum","!type":"Boolean"},"info":{"!description":"Defines the description of the StandardTile.","!category":"enum","!type":"String"},"growingScrollToLoad":{"!description":"If set to true, the user can scroll down to load more items. Otherwise a growing button is displayed at the bottom of the control.\n<b>Note:<\/b> This property can only be used if the <code>growing<\/code> property is set to <code>true<\/code> and only if there is one instance of <code>sap.m.List<\/code> or <code>sap.m.Table<\/code> inside the scrollable scroll container (e.g <code>sap.m.Page<\/code>).","!category":"enum","!type":"Boolean"},"maxExcludes":{"!description":"Defines the maximum number of exclude filters.","!category":"enum","!type":"String"},"startSuggestion":{"!description":"Minimum length of the entered text in input before suggest event is fired. The default value is 1 which means the suggest event is fired after user types in input. When it's set to 0, suggest event is fired when input with no text gets focus.","!category":"enum","!type":"Number"},"withMargin":{"!description":"If the value is set to false, the content will fit to the whole size of the control.","!category":"enum","!type":"Boolean"},"P13nPanelType":"sap.m.P13nPanelType","visibility":{"!description":"Sets one of the visibility states.","!category":"enum","!type":"sap.m.ObjectMarkerVisibility"},"showResetEnabled":{"!description":"This property determines whether the 'Restore' button is enabled and is taken into account only if <code>showReset<\/code> is set\nto <code>true<\/code>.","!category":"enum","!type":"Boolean"},"dataType":{"!description":"FacetFilterList data type. Only String data type will provide search function.","!category":"enum","!type":"sap.m.FacetFilterListDataType"},"ListBase":"sap.m.ListBase_obj","count":{"!description":"Determines the total count of items/entities that the control navigates through.\nThe minimum number of items/entities is 1.","!category":"enum","!type":"Number"},"RadioButton":"sap.m.RadioButton_obj","wrapping":{"!description":"Indicates how the control wraps the text, e.g. <code>Soft<\/code>, <code>Hard<\/code>, <code>Off<\/code>.","!category":"enum","!type":"sap.ui.core.Wrapping"},"pageId":{"!description":"Page id","!category":"enum","!type":"String"},"SelectDialog":"sap.m.SelectDialog_obj","PopinDisplay":"sap.m.PopinDisplay","!helpDescription":"The main UI5 control library, with responsive controls that can be used in touch devices as well as desktop browsers.","disableFirstRemoveIcon":{"!description":"makes the remove icon on the first condition row disabled when only one condition exist.","!category":"enum","!type":"Boolean"},"CheckBox":"sap.m.CheckBox_obj","removable":{"!description":"Determines whether the tile is movable within the surrounding tile container. The remove event is fired by the tile container.","!category":"enum","!type":"Boolean"},"maxSuggestionWidth":{"!description":"If set, the value of this parameter will control the horizontal size of the suggestion list to display more data. This allows suggestion lists to be wider than the input field if there is enough space available. By default, the suggestion list is always as wide as the input field.\nNote: The value will be ignored if the actual width of the input field is larger than the specified parameter value.","!category":"enum","!type":"sap.ui.core.CSSSize"},"maxLines":{"!description":"Limits the number of lines for wrapping texts.\n\nNote: The multi-line overflow indicator depends on the browser line clamping support. For such browsers, this will be shown as ellipsis, for the other browsers the overflow will just be hidden.","!category":"enum","!type":"Number"},"fullScreenOptimized":{"!description":"Optimizes the display of the elements of the <code>ObjectHeader<\/code>.\n\nSet this property to <code>true<\/code> if your app uses a fullscreen layout (as opposed\nto a master-detail or other split-screen layout).\n\n<b>Note<\/b>: Only applied if the <code>responsive<\/code> property is also set to <code>true<\/code>.\n\nIf set to <code>true<\/code>, the following situations apply:\n<ul>\n<li>On desktop, 1-3 attributes/statuses - positioned as a third block on the right side of the Title/Number group<\/li>\n<li>On desktop, 4+ attributes/statuses - 4 columns below the Title/Number<\/li>\n<li>On tablet (portrait mode), always in 2 columns below the Title/Number<\/li>\n<li>On tablet (landscape mode), 1-2 attributes/statuses - 2 columns below the Title/Number<\/li>\n<li>On tablet (landscape mode), 3+ attributes/statuses - 3 columns below the Title/Number<\/li>\n<\/ul>\nOn phone, the attributes and statuses are always positioned in 1 column below the Title/Number of the <code>ObjectHeader<\/code>.\n\nIf set to <code>false<\/code>, the attributes and statuses are being positioned below the\nTitle/Number of the <code>ObjectHeader<\/code> in 2 or 3 columns depending on their number:\n<ul>\n<li>On desktop, 1-4 attributes/statuses - 2 columns<\/li>\n<li>On desktop, 5+ attributes/statuses - 3 columns<\/li>\n<li>On tablet, always in 2 columns<\/li>\n<\/ul>","!category":"enum","!type":"Boolean"},"InputBase":"sap.m.InputBase_obj","iconDensityAware":{"!description":"By default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server.\n\nIf only one version of image is provided, set this value to false to avoid the attempt of fetching density perfect image.","!category":"enum","!type":"Boolean"},"enableBranching":{"!description":"Enables the branching functionality of the Wizard.\nBranching gives the developer the ability to define multiple routes a user\nis able to take based on the input in the current step.\nIt is up to the developer to programatically check for what is the input in the\ncurrent step and set a concrete next step amongs the available subsequent steps.\nNote: If this property is set to false, <code>next<\/code> and <code>subSequentSteps<\/code>\nassociations of the WizardStep control are ignored.","!category":"enum","!type":"Boolean"},"InputListItem":"sap.m.InputListItem_obj","titleTextDirection":{"!description":"Defines the <code>title<\/code> text directionality with enumerated options. By default, the control inherits text direction from the DOM.","!category":"enum","!type":"sap.ui.core.TextDirection"},"title":{"!description":"Determines the title of the step.\nThe title is visualized in the Wizard control.","!category":"enum","!type":"String"},"maxIncludes":{"!description":"Defines the maximum number of include filters.","!category":"enum","!type":"String"},"numberUnit":{"!description":"Defines the number units qualifier of the StandardTile.","!category":"enum","!type":"String"},"emailSubject":{"!description":"The subject of the email.\nWorks only with QuickViewGroupElement of type email.","!category":"enum","!type":"String"},"showUnread":{"!description":"Activates the unread indicator for all items, if set to <code>true<\/code>.","!category":"enum","!type":"Boolean"},"activeSrc":{"!description":"The source property which is used when the image is pressed.","!category":"enum","!type":"sap.ui.core.URI"},"stretch":{"!description":"Determines  if the dialog will be stretched to full screen. This property is only applicable to standard dialog and message type dialog ignores this property.","!category":"enum","!type":"Boolean"},"expanded":{"!description":"Indicates whether the Panel is expanded or not.\nIf expanded is set to true, then both the infoToolbar (if available) and the content are rendered.\nIf expanded is set to false, then only the headerText or headerToolbar is rendered.","!category":"enum","!type":"Boolean"},"getHTMLTag":{"!description":"Gets the HTML tag of the root domref","!category":"enum","!type":"String"},"ActionListItem":"sap.m.ActionListItem_obj","ProgressIndicator":"sap.m.ProgressIndicator_obj","fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!category":"enum","!type":"[String]"},"IconTab":"sap.m.IconTab","showRemoveFacetIcon":{"!description":"Specifies whether remove icon for facet is visible or hidden.","!category":"enum","!type":"Boolean"},"selectedKey":{"!description":"Key of the selected item.\n\n<b>Note: <\/b> If duplicate keys exist, the first item matching the key is used.","!category":"enum","!type":"String"},"appointmentsReducedHeight":{"!description":"If set the appointments without text (only title) are rendered with a smaller height.\n\n<b>Note:<\/b> On phone devices this property is ignored, appointments are always rendered in full height\nto allow touching.","!category":"enum","!type":"Boolean"},"NotificationListGroup":"sap.m.NotificationListGroup_obj","IBarInPageEnabler":"sap.m.IBarInPageEnabler_obj","showHeader":{"!description":"This property is supported by both variants. Please see the documentation on sap.m.Popover#showHeader and sap.m.Dialog#showHeader","!category":"enum","!type":"Boolean"},"inset":{"!description":"Defines the indentation of the container. Setting it to <code>true<\/code> indents the list.","!category":"enum","!type":"Boolean"},"Breadcrumbs":"sap.m.Breadcrumbs_obj","multiple":{"!description":"Lets the user select multiple files from the same folder and then upload them.\nInternet Explorer 8 and 9 do not support this property.\nPlease note that the various operating systems for mobile devices can react differently to the property so that fewer upload functions may be available in some cases.","!category":"enum","!type":"Boolean"},"ValueCSSColor":"sap.m.ValueCSSColor","counter":{"!description":"Defines the counter value of the list items.","!category":"enum","!type":"Number"},"label":{"!description":"Specifies the text displayed below the associated label.","!category":"enum","!type":"String"},"RangeSlider":"sap.m.RangeSlider_obj","documentId":{"!description":"Specifies a unique identifier of the file (created by the application).","!category":"enum","!type":"String"},"includeItemInSelection":{"!description":"Defines whether the items are selectable by clicking on the item itself (<code>true<\/code>) rather than having to set the selection control first.\n<b>Note:<\/b> The <code>SingleSelectMaster<\/code> mode also provides this functionality by default.","!category":"enum","!type":"Boolean"},"GroupHeaderListItem":"sap.m.GroupHeaderListItem_obj","fieldWidth":{"!description":"This property only takes effect if the description property is set. It controls the distribution of space between the input field and the description text. The default value is 50% leaving the other 50% for the description.","!category":"enum","!type":"sap.ui.core.CSSSize"},"LabelDesign":"sap.m.LabelDesign","FacetFilterItem":"sap.m.FacetFilterItem_obj","busyIndicatorSize":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.7 Since 1.18.7 pages are no longer loaded or unloaded. Therefore busy indicator is not necessary any longer.<br>Size of the busy indicators which can be displayed in the carousel.","!category":"enum","!type":"sap.ui.core.CSSSize"},"defaultTransitionNameMaster":{"!description":"Determines the type of the transition/animation to apply when to() is called, without defining the\ntransition to use. The default is \"slide\", other options are \"fade\", \"show\", and the names of any registered custom transitions.","!category":"enum","!type":"String"},"autoAdjustWidth":{"!description":"Indicates whether the width of the input field is determined by the selected item's content.","!category":"enum","!type":"Boolean"},"maximumFileSize":{"!description":"Specifies a file size limit in megabytes that prevents the upload if at least one file exceeds the limit.\nThis property is not supported by Internet Explorer 8 and 9.","!category":"enum","!type":"Number"},"Token":"sap.m.Token_obj","Image":"sap.m.Image_obj","vAlign":{"!description":"Sets the vertical alignment of all the cells within the table row (including selection and navigation).\n<b>Note:<\/b> <code>vAlign<\/code> property of <code>sap.m.Column<\/code> overrides the property for cell vertical alignment if both are set.","!category":"enum","!type":"sap.ui.core.VerticalAlign"},"titleHref":{"!description":"Defines the title link target URI. Supports standard hyperlink behavior.\n\n<b>Note:<\/b> If an action should be triggered, this property should not be set, but instead\nan event handler for the <code>titlePress<\/code> event should be registered.","!category":"enum","!type":"sap.ui.core.URI"},"defaultTransitionName":{"!description":"The type of the transition/animation to apply when \"to()\" is called without defining a transition type to use. The default is \"slide\". Other options are: \"fade\", \"flip\" and \"show\" - and the names of any registered custom transitions.","!category":"enum","!type":"String"},"number":{"!description":"Defines the number field of the StandardTile.","!category":"enum","!type":"String"},"SegmentedButton":"sap.m.SegmentedButton_obj","FlexAlignItems":"sap.m.FlexAlignItems","ListType":"sap.m.ListType","P13nColumnsPanel":"sap.m.P13nColumnsPanel_obj","text":{"!description":"The text to be displayed for the item.","!category":"enum","!type":"String"},"Tokenizer":"sap.m.Tokenizer_obj","maxWidth":{"!description":"Sets the maximum width of the toolbar item.","!category":"enum","!type":"sap.ui.core.CSSSize"},"order":{"!description":"Determines the display order of flex items independent of their source code order.","!category":"enum","!type":"Number"},"filterCount":{"!description":"The number of currently active filters for this custom filter item. It will be displayed in the filter list of the ViewSettingsDialog to represent the filter state of the custom control.","!category":"enum","!type":"Number"},"FlexAlignContent":"sap.m.FlexAlignContent","pressed":{"!description":"The property is \u201ctrue\u201d when the control is toggled. The default state of this property is \"false\".","!category":"enum","!type":"Boolean"},"index":{"!description":"Specifies the order of visible dimensions or measures of a chart.","!category":"enum","!type":"Number"},"NavContainer":"sap.m.NavContainer_obj","getLocaleData":{"!description":"Finds default locale data once and returns always the same.","!static":"true","!category":"function","!type":"fn() -> Object"},"justifyContent":{"!description":"Determines the layout behavior along the main axis.","!category":"enum","!type":"sap.m.FlexJustifyContent"},"VerticalPlacementType":"sap.m.VerticalPlacementType","navButtonText":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 Deprecated since the MVI theme is removed now. This property only affected the NavButton in that theme.<br>The text of the nav button when running in iOS (if shown) in case it deviates from the default, which is \"Back\". This property is mvi-theme-dependent and will not have any effect in other themes.","!category":"enum","!type":"String"},"showButton":{"!description":"Indicates whether the dropdown arrow button is shown.","!category":"enum","!type":"Boolean"},"titleLevel":{"!description":"Defines the semantic level of the title. Using \"Auto\" no explicit level information is written.\nUsed for accessibility purposes only.","!category":"enum","!type":"sap.ui.core.TitleLevel"},"DatePicker":"sap.m.DatePicker_obj","ObjectHeaderContainer":"sap.m.ObjectHeaderContainer","Popover":"sap.m.Popover_obj","flexClass":{"!description":"Flexible Spacer Class Name","!category":"enum","!type":"String"},"P13nFilterItem":"sap.m.P13nFilterItem_obj","sortDescending":{"!description":"Determines whether the sort order is descending or ascending (default).","!category":"enum","!type":"Boolean"},"semantic":"sap.m.semantic","customIconRotationSpeed":{"!description":"Defines the rotation speed of the given image.\nIf a .gif is used, the speed has to be set to 0.\nThe unit is in ms.\n<b>Note:<\/b> Values are considered valid when greater than or equal to 0.\nIf invalid value is provided the speed defaults to 0.","!category":"enum","!type":"Number"},"SwipeDirection":"sap.m.SwipeDirection","ToolbarSeparator":"sap.m.ToolbarSeparator_obj","condensed":{"!description":"<code>ObjectHeader<\/code> with title, one attribute, number, and number unit.\n\n<b>Note:<\/b> Only applied if the <code>responsive<\/code> property is set to <code>false<\/code>.","!category":"enum","!type":"Boolean"},"nextButtonTooltip":{"!description":"Determines the tooltip of the next button.","!category":"enum","!type":"String"},"showPageIndicator":{"!description":"Show or hide carousel's page indicator.","!category":"enum","!type":"Boolean"},"ObjectStatus":"sap.m.ObjectStatus_obj","activeIcon":{"!description":"The source property of an alternative icon for the active (depressed) state of the button.\nBoth active and default icon properties should be defined and have the same type: image or icon font.\nIf the <code>icon<\/code> property is not set or has a different type, the active icon is not displayed.","!category":"enum","!type":"sap.ui.core.URI"},"transitionTime":{"!description":"The time of the slide changing in milliseconds.","!category":"enum","!type":"Number"},"P13nGroupPanel":"sap.m.P13nGroupPanel_obj","asyncURLHandler":{"!description":"Callback function for resolving a promise after a link has been asynchronously validated inside this function","!category":"enum","!type":"Object"},"CustomTile":"sap.m.CustomTile_obj","showRefreshButton":{"!description":"Set to true to display a refresh button in place of the search icon. By pressing the refresh button or F5 key on keyboard, the user can reload the results list without changing the search string.","!category":"enum","!type":"Boolean"},"showSearchButton":{"!description":"Set to true to show the search button with the magnifier icon.\nIf false, both the search and refresh buttons are not displayed even if the \"showRefreshButton\" property is true.","!category":"enum","!type":"Boolean"},"closeKeyboard":{"!description":"Hide the soft keyboard.","!category":"enum","!type":"String"},"showSubHeader":{"!description":"Whether this page shall show the subheader.","!category":"enum","!type":"Boolean"},"Menu":"sap.m.Menu_obj","maxGroups":{"!description":"Defines the maximum number of groups.","!category":"enum","!type":"String"},"showHandleTooltip":{"!description":"Indicate whether the handle tooltip is shown.","!category":"enum","!type":"Boolean"},"showSummaryBar":{"!description":"Shows the summary bar instead of the FacetFilter buttons bar when set to <code>true<\/code>.","!category":"enum","!type":"Boolean"},"numberOfAttachmentsText":{"!description":"Sets the title text in the toolbar of the list of attachments.\nTo show as well the number of attachments in brackets like the default text does. The number of attachments could be retrieved via \"getItems().length\".\nIf a new title is set, the default is deactivated.\nThe default value is set to language-dependent \"Attachments (n)\".","!category":"enum","!type":"String"},"FacetFilterType":"sap.m.FacetFilterType","resizable":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!category":"enum","!type":"Boolean"},"heading":{"!description":"The title of the group","!category":"enum","!type":"String"},"max":{"!description":"The maximum value.","!category":"enum","!type":"Number"},"subHeaderLabel":{"!description":"Texts which describes the landmark of the subheader container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), a predefined text\nis used.","!category":"enum","!type":"String"},"Text":"sap.m.Text_obj","url":{"!description":"Specifies the URL where the file is located.\nIf the application doesn't provide a value for this property, the icon and the file name of the UploadCollectionItem are not clickable.","!category":"enum","!type":"String"},"Panel":"sap.m.Panel_obj","titleTarget":{"!description":"Determines the <code>target<\/code> attribute for the title link. Options are <code>_self<\/code>,\n<code>_top<\/code>, <code>_blank<\/code>, <code>_parent<\/code>, <code>_search<\/code>. Alternatively,\na frame name can be entered.","!category":"enum","!type":"String"},"DraftIndicator":"sap.m.DraftIndicator_obj","retainListSequence":{"!description":"Retains the list sequence if it is inactive and made active again.","!category":"enum","!type":"Boolean"},"adaptTitleSize":{"!description":"By default, the title size adapts to the available space and gets bigger if the description is empty. If you have list items with and without descriptions, this results in titles with different sizes. In this case, it can be better to switch the size adaption off by setting this property to <code>false<\/code>.","!category":"enum","!type":"Boolean"},"IBarHTMLTag":"sap.m.IBarHTMLTag","maxDate":{"!description":"Maximum date that can be shown and selected in the <code>PlanningCalendar<\/code>. This must be a JavaScript date object.\n\n<b>Note:<\/b> If the <code>maxDate<\/code> is set to be before the <code>minDate<\/code>,\nthe <code>minDate<\/code> is set to the begin of the month of the <code>maxDate<\/code>.","!category":"enum","!type":"Object"},"showPopoverOKButton":{"!description":"If set to <code>true<\/code>, an OK button is displayed for every FacetFilterList popover. This button allows the user to close the popover from within the popover instead of having to click outside of it.","!category":"enum","!type":"Boolean"},"contentLabel":{"!description":"Texts which describes the landmark of the content container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), a predefined text\nis used.","!category":"enum","!type":"String"},"showTitleSelector":{"!description":"Determines whether the selector arrow icon/image is displayed and can be pressed.","!category":"enum","!type":"Boolean"},"headerRole":{"!description":"Landmark role of the header container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.","!category":"enum","!type":"sap.ui.core.AccessibleLandmarkRole"},"rememberSelections":{"!description":"Controls whether the dialog clears the selection or not. When the dialog is opened multiple times in the same context to allow for corrections of previous user inputs, set this flag to \"true\". When the dialog should reset the selection to allow for a new selection each time set it to \"false\"\nNote: This property must be set before the Dialog is opened to have an effect.","!category":"enum","!type":"Boolean"},"TimePicker":"sap.m.TimePicker_obj","valueStateText":{"!description":"Defines the text that appears in the value state message pop-up. If this is not specified, a default text is shown from the resource bundle.","!category":"enum","!type":"String"},"_setModel":{"!description":"Sets the model for the internal table and the current control, so that both controls can be used with data binding.","!category":"enum","!type":"String"},"FacetFilter":"sap.m.FacetFilter_obj","Carousel":"sap.m.Carousel_obj","FacetFilterListDataType":"sap.m.FacetFilterListDataType","precision":{"!description":"if type==numeric the precision will be used to format the entered value (maxIntegerDigits of the used Formatter)","!category":"enum","!type":"String"},"ActionSheet":"sap.m.ActionSheet_obj","contentText":{"!description":"The content text.","!category":"enum","!type":"String"},"bShowLabelAsPlaceholder":{"!description":"Use labels as placeholder configuration.\nIt can be necessary for the subclasses to overwrite this when\nnative placeholder usage causes undesired input events or when\nplaceholder attribute is not supported for the specified type.\nhttps://html.spec.whatwg.org/multipage/forms.html#input-type-attr-summary","!category":"enum","!type":"String"},"GrowingEnablement":"sap.m.GrowingEnablement_obj","densityAware":{"!description":"If this is set to false, the src image will be loaded directly without attempting to fetch the density perfect image for high density device.\n\nBy default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server.\n\nIf bandwidth is the key for the application, set this value to false.","!category":"enum","!type":"Boolean"},"DateTimePicker":"sap.m.DateTimePicker_obj","QuickViewBase":"sap.m.QuickViewBase_obj","refreshButtonTooltip":{"!description":"Tooltip text of the refresh button. If it is not set, the tooltip of the SearchField (if any) is displayed. Tooltips are not displayed on touch devices.","!category":"enum","!type":"String"},"mode":{"!description":"Defines the selection mode of the control (e.g. None, SingleSelect, MultiSelect, SingleSelectLeft, SingleSelectMaster).\nSince the UploadCollection reacts like a list for attachments, the API is close to the ListBase Interface.\nsap.m.ListMode.Delete mode is not supported and will be automatically set to sap.m.ListMode.None.\nIn addition, if instant upload is set to false the mode sap.m.ListMode.MultiSelect is not supported and will be automatically set to sap.m.ListMode.None.","!category":"enum","!type":"sap.m.ListMode"},"offsetX":{"!description":"This property only takes effect on desktop or tablet. Please see the documentation sap.m.Popover#offsetX.","!category":"enum","!type":"Number"},"showIntervalHeaders":{"!description":"If set, interval headers are shown like specified in <code>showEmptyIntervalHeaders<\/code>.\n\nIf not set, no interval headers are shown even if <code>intervalHeaders<\/code> are assigned.","!category":"enum","!type":"Boolean"},"datetime":{"!description":"Determines the due date of the NotificationListItem.","!category":"enum","!type":"String"},"offsetY":{"!description":"This property only takes effect on desktop or tablet. Please see the documentation sap.m.Popover#offsetY.","!category":"enum","!type":"Number"},"numberState":{"!description":"Defines the ObjectListItem number and numberUnit value state.","!category":"enum","!type":"sap.ui.core.ValueState"},"logo":{"!description":"Defines the logo to be displayed next to the App when the screen is sufficiently large.","!category":"enum","!type":"sap.ui.core.URI"},"modified":{"!description":"Shows if a control is edited (default is false). Items that are marked as modified have a * symbol to indicate that they haven't been saved.","!category":"enum","!type":"Boolean"},"BackgroundDesign":"sap.m.BackgroundDesign","ButtonType":"sap.m.ButtonType","showReset":{"!description":"This property determines whether the 'Restore' button is shown inside the dialog. If this property is set to true, clicking the\n'Reset' button will trigger the <code>reset<\/code> event sending a notification that model data must be reset.","!category":"enum","!type":"Boolean"},"selected":{"!description":"Selected state of the item. If set to \"true\", the item will be displayed as selected in the view settings dialog.","!category":"enum","!type":"Boolean"},"maxConditions":{"!description":"defines the max number of conditions on the ConditionPanel","!category":"enum","!type":"String"},"PlanningCalendarRow":"sap.m.PlanningCalendarRow_obj","textAlign":{"!description":"Defines the alignment of the text within the title. <b>Note:<\/b> This property only has an effect if the overall width of the title control is\nlarger than the displayed text.","!category":"enum","!type":"sap.ui.core.TextAlign"},"level":{"!description":"Defines the semantic level of the title.\nThis information is e.g. used by assistive technologies like screenreaders to create a hierarchical site map for faster navigation.\nDepending on this setting either a HTML h1-h6 element is used or when using level <code>Auto<\/code> no explicit level information is written (HTML5 header element).","!category":"enum","!type":"sap.ui.core.TitleLevel"},"ScrollContainer":"sap.m.ScrollContainer_obj","shrinkable":{"!description":"Determines whether the control, when in a toolbar, is shrinkable or not. For controls with fixed width (100px, 5rem, etc...) this property is ignored.\n\nNote: Nested layout controls should not be shrinkable.","!category":"enum","!type":"Boolean"},"maxValue":{"!description":"The number of displayed rating symbols","!category":"enum","!type":"Number"},"alt":{"!description":"The alternative text that is displayed in case the Image is not available, or cannot be displayed.\nIf the image is set to decorative this property is ignored.","!category":"enum","!type":"String"},"touch":"sap.m.touch","NotificationListBase":"sap.m.NotificationListBase_obj","introTextDirection":{"!description":"Determines the text direction of the item intro.\nAvailable options for the intro direction are LTR (left-to-right) and RTL (right-to-left).\nBy default the item intro inherits the text direction from its parent.","!category":"enum","!type":"sap.ui.core.TextDirection"},"stayInOverflow":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 undefined<br>The OverflowToolbar item can or cannot stay in the overflow area","!category":"enum","!type":"Boolean"},"ListHeaderDesign":"sap.m.ListHeaderDesign","RatingIndicator":"sap.m.RatingIndicator_obj","unit":{"!description":"The percent sign, the currency symbol, or the unit of measure.","!category":"enum","!type":"String"},"growingTriggerText":{"!description":"Defines the text displayed on the growing button. The default is a translated text (\"More\") coming from the message bundle.\nThis property can only be used if the <code>growing<\/code> property is set to <code>true<\/code>.","!category":"enum","!type":"String"},"groupDescending":{"!description":"Determines whether the group order is descending or ascending (default).","!category":"enum","!type":"Boolean"},"header":{"!description":"Specifies the text displayed in the header of the control.","!category":"enum","!type":"String"},"position":{"!description":"Determines the current position in the items/entities that the control navigates through.\nStarting (minimum) number is 1.","!category":"enum","!type":"Number"},"VBox":"sap.m.VBox_obj","labelTextDirection":{"!description":"This property specifies the label text directionality with enumerated options. By default, the label inherits text direction from the DOM.","!category":"enum","!type":"sap.ui.core.TextDirection"},"ImageHelper":"sap.m.ImageHelper","maxLength":{"!description":"Defines the maximum number of characters that the <code>value<\/code> can be.","!category":"enum","!type":"Number"},"fitContainer":{"!description":"Determines whether the <code>sap.m.FlexBox<\/code> will be sized to completely fill its container. If the <code>sap.m.FlexBox<\/code> is inserted into a Page, the property 'enableScrolling' of the Page needs to be set to 'false' for the FlexBox to fit the entire viewport.","!category":"enum","!type":"Boolean"},"hideShowMoreButton":{"!description":"Determines it the \"Show More\" button should be hidden.","!category":"enum","!type":"Boolean"},"SplitApp":"sap.m.SplitApp_obj","instantUpload":{"!description":"If false, no upload is triggered when a file is selected. In addition, if a file was selected, a new FileUploader instance is created to ensure that multiple files from multiple folders can be chosen.","!category":"enum","!type":"Boolean"},"footerText":{"!description":"Defines the footer text that appears in the control.","!category":"enum","!type":"String"},"footer":{"!description":"The footer text of the tile.","!category":"enum","!type":"String"},"backgroundImage":{"!description":"Sets the background image of the SplitContainer. When set, this image overrides\nthe default background defined by the theme (should only be used when really required).\nThis background image will be placed above any color set for the background,\nbut any theme adaptation in the Theme Designer will override this image setting.\nUse the backgroundRepeat property to define whether this image should be stretched\nto cover the complete SplitContainer or whether it should be tiled.","!category":"enum","!type":"sap.ui.core.URI"},"showValueHelp":{"!description":"If set to true, a value help indicator will be displayed inside the control. When clicked the event \"valueHelpRequest\" will be fired.","!category":"enum","!type":"Boolean"},"MenuButton":"sap.m.MenuButton_obj","enableBusyIndicator":{"!description":"When this property is set to <code>true<\/code>, the control will automatically display a busy indicator when it detects that data is being loaded. This busy indicator blocks the interaction with the items until data loading is finished.\nBy default, the busy indicator will be shown after one second. This behavior can be customized by setting the <code>busyIndicatorDelay<\/code> property.","!category":"enum","!type":"Boolean"},"autoFocus":{"!description":"Determines whether the initial focus is set automatically on first rendering and after navigating to a new page.\nThis is useful when on touch devices the keyboard pops out due to the focus being automatically set on an input field.\nIf necessary the \"afterShow\" event can be used to focus another element.","!category":"enum","!type":"Boolean"},"DateRangeSelection":"sap.m.DateRangeSelection_obj","QuickViewCard":"sap.m.QuickViewCard_obj","showCancelButton":{"!description":"Indicates if the cancel button will be rendered inside the busy dialog. The default value is set to <code>false<\/code>.","!category":"enum","!type":"Boolean"},"NumericContent":"sap.m.NumericContent_obj","total":{"!description":"This property contains the total flag of a table column.","!category":"enum","!type":"Boolean"},"contentWidth":{"!description":"Determines the content width of the inner dialog. For more information, see the Dialog documentation.","!category":"enum","!type":"sap.ui.core.CSSSize"},"ViewSettingsCustomTab":"sap.m.ViewSettingsCustomTab_obj","FrameType":"sap.m.FrameType","busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"design":{"!description":"Defines the toolbar design.\nNote: Design settings are theme-dependent. They also determine the default height of the toolbar.","!category":"enum","!type":"sap.m.ToolbarDesign"},"StandardTileType":"sap.m.StandardTileType","senderActive":{"!description":"If true, sender string is an link, which will fire 'senderPress' events. If false, sender is normal text.","!category":"enum","!type":"Boolean"},"BarDesign":"sap.m.BarDesign","titleSelectorTooltip":{"!description":"Determines a custom text for the tooltip of the select title arrow. If not set, a default text of the tooltip will be displayed.","!category":"enum","!type":"String"},"showSeparators":{"!description":"Defines whether separators are shown between list items.","!category":"enum","!type":"sap.m.ListSeparators"},"direction":{"!description":"Determines the direction of the layout of child elements.","!category":"enum","!type":"sap.m.FlexDirection"},"asyncDescriptionHandler":{"!description":"Callback function for resolving a promise after description has been asynchronously loaded inside this function","!category":"enum","!type":"Object"},"growFactor":{"!description":"Determines the flexibility of the flex item when allocatable space is remaining.","!category":"enum","!type":"Number"},"swipeDirection":{"!description":"Defines the direction of the swipe movement (e.g LeftToRight, RightToLeft, Both) to display the control defined in the <code>swipeContent<\/code> aggregation.","!category":"enum","!type":"sap.m.SwipeDirection"},"src":{"!description":"The image to be displayed as a graphical element within the imageContent. This can be an image or an icon from the icon font.","!category":"enum","!type":"sap.ui.core.URI"},"editable":{"!description":"true if tokens shall be editable otherwise false","!category":"enum","!type":"Boolean"},"fixedLayout":{"!description":"Defines the algorithm to be used to layout the table cells, rows, and columns.\nBy default, a table is rendered with fixed layout algorithm. This means the horizontal layout only depends on the table's width and the width of the columns, not the contents of the cells. Cells in subsequent rows do not affect column widths. This allows a browser to layout the table faster than the auto table layout since the browser can begin to display the table once the first row has been analyzed.\n\nWhen this property is set to <code>false<\/code>, <code>sap.m.Table<\/code> is rendered with auto layout algorithm. This means, the width of the table and its cells depends on the contents of the cells. The column width is set by the widest unbreakable content inside the cells. This can make the rendering slow, since the browser needs to read through all the content in the table before determining the final layout.\n<b>Note:<\/b> Since <code>sap.m.Table<\/code> does not have its own scrollbars, setting <code>fixedLayout<\/code> to false can force the table to overflow, which may cause visual problems. It is suggested to use this property when a table has a few columns in wide screens or within the horizontal scroll container (e.g <code>sap.m.Dialog<\/code>) to handle overflow.\nIn auto layout mode the <code>width<\/code> property of <code>sap.m.Column<\/code> is taken into account as a minimum width.","!category":"enum","!type":"Boolean"},"headerLabel":{"!description":"Texts which describes the landmark of the header container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), a predefined text\nis used.","!category":"enum","!type":"String"},"NotificationListItem":"sap.m.NotificationListItem_obj","RadioButtonGroup":"sap.m.RadioButtonGroup_obj","visualMode":{"!description":"Defines how float values are visualized: Full, Half (see enumeration RatingIndicatorVisualMode)","!category":"enum","!type":"sap.m.RatingIndicatorVisualMode"},"rows":{"!description":"Defines the number of visible text lines for the control.\n<b>Note:<\/b> The <code>height<\/code> property wins over the <code>rows<\/code> property, if both are set.","!category":"enum","!type":"Number"},"showSubIntervals":{"!description":"If set subintervals are shown.\n\nIf the interval type is <code>Hour<\/code>, quarter hours are shown.\n\nIf the interval type is <code>Day<\/code>, hours are shown.\n\nIf the interval type is <code>Month<\/code>, days are shown.","!category":"enum","!type":"Boolean"},"getInvalidDate":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.12 UI5 returns null for invalid date<br>Returns invalid date value of UI5.","!static":"true","!category":"function","!type":"fn() -> null"},"SearchField":"sap.m.SearchField_obj","StandardTile":"sap.m.StandardTile_obj","GenericTile":"sap.m.GenericTile_obj","iconColor":{"!description":"Specifies the icon color.\n\nIf an icon font is used, the color can be chosen from the icon colors (sap.ui.core.IconColor).\nPossible semantic colors are: Neutral, Positive, Critical, Negative.\nInstead of the semantic icon color the brand color can be used, this is named Default.\nSemantic colors and brand colors should not be mixed up inside one IconTabBar.","!category":"enum","!type":"sap.ui.core.IconColor"},"RatingIndicatorVisualMode":"sap.m.RatingIndicatorVisualMode","filterSuggests":{"!description":"Defines whether to filter the provided suggestions before showing them to the user.","!category":"enum","!type":"Boolean"},"App":"sap.m.App_obj","TabContainerItem":"sap.m.TabContainerItem_obj","fileName":{"!description":"Specifies the name of the uploaded file.","!category":"enum","!type":"String"},"OverflowToolbarLayoutData":"sap.m.OverflowToolbarLayoutData_obj","value2":{"!description":"to value of the between filter","!category":"enum","!type":"String"},"MessageToast":"sap.m.MessageToast","value1":{"!description":"value of the filter","!category":"enum","!type":"String"},"nonWorkingHours":{"!description":"If set, the provided hours are displayed as non-working hours.\nValid values inside the array are 0 to 23. (other values will just be ignored.)\n\n<b>Note:<\/b> The non-working hours are only visualized if <code>intervalType<\/code> is set to hour.","!category":"enum","!type":"[Number]"},"iconFirst":{"!description":"If set to true (default), the display sequence is 1. icon 2. control text","!category":"enum","!type":"Boolean"},"pageLinkId":{"!description":"Specifies the ID of the QuickViewPage, which is opened from the link in the QuickViewGroupElement.\nWorks only with QuickViewGroupElement of type pageLink.","!category":"enum","!type":"String"},"ViewSettingsDialog":"sap.m.ViewSettingsDialog_obj","TileContainer":"sap.m.TileContainer_obj","minHeight":{"!description":"The minimum height of the flex item.","!category":"enum","!type":"sap.ui.core.CSSSize"},"isContextSensitive":{"!description":"Returns if the bar is sensitive to the container context. Implementation of the IBar interface","!category":"enum","!type":"String"},"defaultTransitionNameDetail":{"!description":"Determines the type of the transition/animation to apply when to() is called without defining the\ntransition to use. The default is \"slide\", other options are \"fade\", \"show\", and the names of any registered custom transitions.","!category":"enum","!type":"String"},"DisplayListItem":"sap.m.DisplayListItem_obj","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"FlexDirection":"sap.m.FlexDirection","state":{"!description":"A boolean value indicating whether the switch is on or off.","!category":"enum","!type":"Boolean"},"height":{"!description":"Determines the height of the Wizard.","!category":"enum","!type":"sap.ui.core.CSSSize"},"popinDisplay":{"!description":"Defines enumerated display options for the pop-in.","!category":"enum","!type":"sap.m.PopinDisplay"},"!description":"The main UI5 control library, with responsive controls that can be used in touch devices as well as desktop browsers.","maskFormatSymbol":{"!description":"Defines the symbol used in the mask format which will accept a certain range of characters.","!category":"enum","!type":"String"},"currentLocationText":{"!description":"Determines the text of current/last element in the Breadcrumbs path.","!category":"enum","!type":"String"},"ThreeColumnLayoutType":"sap.m.ThreeColumnLayoutType","MultiInput":"sap.m.MultiInput_obj","ComboBox":"sap.m.ComboBox_obj","showSecondaryValues":{"!description":"Indicates whether the text values of the <code>additionalText<\/code> property of a {@link sap.ui.core.ListItem} are shown.","!category":"enum","!type":"Boolean"},"keyboardNavigationMode":{"!description":"Defines the keyboard navigation mode.\n\n<b>Note:<\/b> The <code>sap.m.SelectListKeyboardNavigationMode.None<\/code> enumeration value, is only\nintended for use in some composite controls that handles keyboard navigation by themselves.","!category":"enum","!type":"sap.m.SelectListKeyboardNavigationMode"},"showPersonalization":{"!description":"If set to <code>true<\/code> and the FacetFilter type is <code>Simple<\/code>, then the Add Facet icon will be displayed and each facet button will also have a Facet Remove icon displayed beside it, allowing the user to deactivate the facet.","!category":"enum","!type":"Boolean"},"decorative":{"!description":"A decorative image is included for design reasons. Accessibility tools will ignore decorative images.\n\nNote: If the Image has an image map (useMap is set), this property will be overridden (the image will not be rendered as decorative).\nA decorative image has no ALT attribute, so the Alt property is ignored if the image is decorative.","!category":"enum","!type":"Boolean"},"regex":{"!description":"Defines the allowed characters as a regular expression.","!category":"enum","!type":"String"},"groupName":{"!description":"Name of the radio button group the current radio button belongs to. You can define a new name for the group.\nIf no new name is specified, this radio button belongs to the sapMRbDefaultGroup per default. Default behavior of a radio button in a group is that when one of the radio buttons in a group is selected, all others are unselected.","!category":"enum","!type":"String"},"PlanningCalendar":"sap.m.PlanningCalendar_obj","GenericTileMode":"sap.m.GenericTileMode","expandAnimation":{"!description":"Indicates whether the transition between the expanded and the collapsed state of the control is animated.\nBy default the animation is enabled.","!category":"enum","!type":"Boolean"},"frameType":{"!description":"The frame type: 1x1 or 2x1.","!category":"enum","!type":"sap.m.FrameType"},"ViewSettingsItem":"sap.m.ViewSettingsItem_obj","forceSelection":{"!description":"Indicates whether the selection is restricted to one of the items in the list.\n<b>Note:<\/b> We strongly recommend that you always set this property to <code>false<\/code> and bind\nthe <code>selectedKey<\/code> property to the desired value for better interoperability with data binding.","!category":"enum","!type":"Boolean"},"customIcon":{"!description":"Provide a URI to a custom icon image to replace the SAP logo. Large images are scaled down to max 50px height.","!category":"enum","!type":"sap.ui.core.URI"},"startDate":{"!description":"Start date of the row, as JavaScript date object. As a default the current date is used.","!category":"enum","!type":"Object"},"P13nDimMeasurePanel":"sap.m.P13nDimMeasurePanel_obj","customIconWidth":{"!description":"Width of the provided icon. By default 44px are used.","!category":"enum","!type":"sap.ui.core.CSSSize"},"minDate":{"!description":"Minimum date that can be shown and selected in the <code>PlanningCalendar<\/code>. This must be a JavaScript date object.\n\n<b>Note:<\/b> If the <code>minDate<\/code> is set to be after the <code>maxDate<\/code>,\nthe <code>maxDate<\/code> is set to the end of the month of the <code>minDate<\/code>.","!category":"enum","!type":"Object"},"hAlign":{"!description":"Horizontal alignment of the column content. Available alignment settings are \"Begin\", \"Center\", \"End\", \"Left\", and \"Right\".\n\nNOTE: Control with a \"textAlign\" property inherits the horizontal alignment.","!category":"enum","!type":"sap.ui.core.TextAlign"},"validationListener":{"!description":"Callback method which is called in order to register for validation result.","!category":"enum","!type":"Object"},"contentOnlyBusy":{"!description":"Decides which area is covered by the local BusyIndicator when <code>page.setBusy()<\/code> is called. By default the entire page is covered, including headers and footer. When this property is set to \"true\", only the content area is covered (not header/sub header and footer), which is useful e.g. when there is a SearchField in the sub header and live search continuously updates the content area while the user is still able to type.","!category":"enum","!type":"Boolean"},"TableSelectDialog":"sap.m.TableSelectDialog_obj","unread":{"!description":"Activates the unread indicator for the list item, if set to <code>true<\/code>.\n<b>Note:<\/b> This flag is ignored when the <code>showUnread<\/code> property of the parent is set to <code>false<\/code>.","!category":"enum","!type":"Boolean"},"collapsed":{"!description":"Determines if the group is collapsed or expanded.","!category":"enum","!type":"Boolean"},"SuggestionItem":"sap.m.SuggestionItem_obj","subHeaderRole":{"!description":"Landmark role of the subheader container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.","!category":"enum","!type":"sap.ui.core.AccessibleLandmarkRole"},"allCount":{"!description":"Determines the number of objects that match this item in the target data set when all filter items are selected.","!category":"enum","!type":"Number"},"routing":"sap.m.routing","InputODataSuggestProvider":"sap.m.InputODataSuggestProvider","QuickViewPage":"sap.m.QuickViewPage_obj","visibleDelete":{"!description":"Show/Hide the Delete button.\nIf the value is true, the Delete button is visible.\nIf the value is false, the Delete button is not visible.","!category":"enum","!type":"Boolean"},"showAll":{"!description":"Enables special visualization for disabled filter (show all items).","!category":"enum","!type":"Boolean"},"min":{"!description":"The minimum value.","!category":"enum","!type":"Number"},"PageBackgroundDesign":"sap.m.PageBackgroundDesign","maxHeight":{"!description":"The maximum height of the flex item.","!category":"enum","!type":"sap.ui.core.CSSSize"},"visibleItemsThreshold":{"!description":"Specifies a threshold of visible items. If the end user makes a lot of columns visible, this might cause performance to slow down.\nWhen this happens, the user can receive a corresponding warning triggered by the <code>visibleItemsThreshold<\/code> property. The\nproperty needs to be activated and set to the required value by the consuming application to ensure that the warning message is\nshown when the threshold has been exceeded. In the following example the message will be shown if more than 100 visible columns are\nselected:\n\n<pre>\ncustomData&gt;\ncore:CustomData key=&quot;p13nDialogSettings&quot;\nvalue='\\{&quot;columns&quot;:\\{&quot;visible&quot;: true, &quot;payload&quot;: \\{&quot;visibleItemsThreshold&quot;: 3\\}\\}\\}' /&gt;\n/customData&gt;\n<\/pre>","!category":"enum","!type":"Number"},"isSelected":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.10.2 API Change makes this method unnecessary. Use getSelected method instead.<br>Returns the state of the item selection as a boolean","!category":"enum","!type":"String"},"autoAddNewRow":{"!description":"adds initial a new empty condition row","!category":"enum","!type":"Boolean"},"isDate":{"!description":"Checks if the given parameter is a valid JsDate Object.","!static":"true","!category":"function","!type":"fn(value: Object) -> Boolean"},"demandPopin":{"!description":"According to your minScreenWidth settings, the column can be hidden in different screen sizes.\nSetting this property to true, shows this column as pop-in instead of hiding it.","!category":"enum","!type":"Boolean"},"keyboardMode":{"!description":"Defines keyboard handling behavior of the control.","!category":"enum","!type":"sap.m.ListKeyboardMode"},"iconSelected":{"!description":"The URI to the icon font icon or image that will be displayed for selected rating symbols. A star icon will be used if the property is not set","!category":"enum","!type":"sap.ui.core.URI"},"disabled":{"!description":"Disables control if true.","!category":"enum","!type":"Boolean"},"backgroundPosition":{"!description":"Defines the position of the image in sap.m.ImageMode.Background mode. This property is set on the output DOM element using CSS style 'background-position'. This property takes effect only when the 'mode' property is set to sap.m.ImageMode.Background.","!category":"enum","!type":"String"},"visibleEdit":{"!description":"Show/Hide the Edit button.\nIf the value is true, the Edit button is visible.\nIf the value is false, the Edit button is not visible.","!category":"enum","!type":"Boolean"},"key":{"!description":"Can be used as input for subsequent actions.","!category":"enum","!type":"String"},"timestamp":{"!description":"This chunks timestamp","!category":"enum","!type":"String"},"thumbnailUrl":{"!description":"Specifies the URL where the thumbnail of the file is located.","!category":"enum","!type":"String"},"backgroundColor":{"!description":"Determines the background color of the SplitContainer. If set, this color overrides the default one,\nwhich is defined by the theme (should only be used when really required).\nAny configured background image will be placed above this colored background,\nbut any theme adaptation in the Theme Designer will override this setting.\nUse the backgroundRepeat property to define whether this image should be stretched\nto cover the complete SplitContainer or whether it should be tiled.","!category":"enum","!type":"String"},"iconActive":{"!description":"Determines whether the <code>ObjectHeader<\/code> icon is clickable.","!category":"enum","!type":"Boolean"},"ObjectMarker":"sap.m.ObjectMarker_obj","MessagePopoverItem":"sap.m.MessagePopoverItem_obj","SelectType":"sap.m.SelectType","viewKey":{"!description":"Key of the <code>PlanningCalendarView<\/code> used for the output. The default value uses a default view.\nIf you are using own views, the keys of these views must be used instead.","!category":"enum","!type":"String"},"ImageMode":"sap.m.ImageMode","MaskInputRule":"sap.m.MaskInputRule_obj","ColumnListItem":"sap.m.ColumnListItem_obj","MessageBox":"sap.m.MessageBox","P13nDialog":"sap.m.P13nDialog_obj","displayValue":{"!description":"Specifies the text value to be displayed in the bar.","!category":"enum","!type":"String"},"showValue":{"!description":"Indicates whether the displayValue should be shown in the ProgressIndicator.","!category":"enum","!type":"Boolean"},"uploadUrl":{"!description":"Specifies the URL where the uploaded files have to be stored.","!category":"enum","!type":"String"},"rootRole":{"!description":"Landmark role of the root container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.","!category":"enum","!type":"sap.ui.core.AccessibleLandmarkRole"},"Select":"sap.m.Select_obj","PlacementType":"sap.m.PlacementType","scrollToLoad":{"!description":"If you set this property to true then user needs to scroll end to trigger loading a new page. Default value is false which means user needs to scroll end and then click button to load new page.\nNOTE: This property can be set true, if growing property is set \"true\" and if you only have one instance of this control inside the scroll container(e.g Page).","!category":"enum","!type":"Boolean"},"progress":{"!description":"Indicate whether a progress bar indicator is shown.","!category":"enum","!type":"Boolean"},"growingMaxLines":{"!description":"Defines the maximum number of lines that the control can grow.","!category":"enum","!type":"Number"},"to":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22.0 Use <code>secondDateValue<\/code> instead.<br>End date of the range.","!category":"enum","!type":"Object"},"finishButtonText":{"!description":"Changes the text of the finish button for the last step.\nThis property can be used only if <code>showNextButton<\/code> is set to true.\nBy default the text of the button is \"Review\".","!category":"enum","!type":"String"},"operation":{"!description":"sap.m.P13nConditionOperation","!category":"enum","!type":"String"},"footerLabel":{"!description":"Texts which describes the landmark of the header container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), a predefined text\nis used.","!category":"enum","!type":"String"},"buttonTooltip":{"!description":"Sets a new tooltip for Submit button. The tooltip can either be a simple string (which in most cases will be rendered as the title attribute of this element)\nor an instance of sap.ui.core.TooltipBase.\nIf a new tooltip is set, any previously set tooltip is deactivated.\nThe default value is set language dependent.","!category":"enum","!type":"sap.ui.core.TooltipBase"},"showSuggestion":{"!description":"If this is set to true, suggest event is fired when user types in the input. Changing the suggestItems aggregation in suggest event listener will show suggestions within a popup. When runs on phone, input will first open a dialog where the input and suggestions are shown. When runs on a tablet, the suggestions are shown in a popup next to the input.","!category":"enum","!type":"Boolean"},"FlexItemData":"sap.m.FlexItemData_obj","Label":"sap.m.Label_obj","NewsContent":"sap.m.NewsContent_obj","Page":"sap.m.Page_obj","FlexRendertype":"sap.m.FlexRendertype","OverflowToolbar":"sap.m.OverflowToolbar_obj","P13nPanel":"sap.m.P13nPanel_obj","alignContent":{"!description":"Determines the layout behavior of container lines when there's extra space along the cross-axis. This property has no effect in Internet Explorer 10.","!category":"enum","!type":"sap.m.FlexAlignContent"},"horizontal":{"!description":"Whether horizontal scrolling should be possible.","!category":"enum","!type":"Boolean"},"loop":{"!description":"Defines whether the carousel should loop, i.e show the first page after the last page is reached and vice versa.","!category":"enum","!type":"Boolean"},"TablePersoProvider":"sap.m.TablePersoProvider_obj","showRowHeaders":{"!description":"If set, headers of the <code>PlanningCalendarRows<\/code> are shown. This means the column with the headers is shown.\n\nIf not set, the header column is not shown at all, even if header information is provided.","!category":"enum","!type":"Boolean"},"BackgroundHelper":"sap.m.BackgroundHelper","ResponsivePopover":"sap.m.ResponsivePopover_obj","markFavorite":{"!description":"Sets the favorite state for the ObjectListItem.","!category":"enum","!type":"Boolean"},"crossAppNavCallback":{"!description":"Specifies the application which provides target and param configuration  for cross-application navigation from the 'page header'.","!category":"enum","!type":"Object"},"alignSelf":{"!description":"Determines cross-axis alignment of individual element (not currently supported in Internet Explorer)","!category":"enum","!type":"sap.m.FlexAlignSelf"},"IconTabHeader":"sap.m.IconTabHeader_obj","failedText":{"!description":"The message that appears when the control is in the Failed state.","!category":"enum","!type":"String"},"FormattedText":"sap.m.FormattedText_obj","buttonMode":{"!description":"Defines whether the <code>MenuButton<\/code> is set to <code>Regular<\/code> or <code>Split<\/code> mode.","!category":"enum","!type":"sap.m.MenuButtonMode"},"SwitchType":"sap.m.SwitchType","customIconDensityAware":{"!description":"If this is set to false, the src image will be loaded directly without attempting\nto fetch the density perfect image for high density device.\nBy default, this is set to true but then one or more requests are sent to the server,\ntrying to get the density perfect version of the specified image.\nIf bandwidth is the key for the application, set this value to false.","!category":"enum","!type":"Boolean"},"placeholderSymbol":{"!description":"Defines a placeholder symbol. Shown at the position where there is no user input yet.","!category":"enum","!type":"String"},"maxCharacters":{"!description":"The expand and collapse feature is set by default and uses 300 characters on mobile devices and 500 characters on desktops as limits. Based on these values, the text of the FeedListItem is collapsed once text reaches these limits. In this case, only the specified number of characters is displayed. By clicking on the text link More, the entire text can be displayed. The text link Less collapses the text. The application is able to set the value to its needs.","!category":"enum","!type":"Number"},"LoadState":"sap.m.LoadState","name":{"!description":"Specifies the name of the parameter.","!category":"enum","!type":"String"},"liveSearch":{"!description":"Enables/disables live search on all search fields except for the FacetFilterList search.","!category":"enum","!type":"Boolean"},"MenuButtonMode":"sap.m.MenuButtonMode","FeedContent":"sap.m.FeedContent_obj","customTextOn":{"!description":"Custom text for the \"ON\" state.\n\n\"ON\" translated to the current language is the default value.\nBeware that the given text will be cut off if available space is exceeded.","!category":"enum","!type":"String"},"normalLineHeight":{"!description":"Default line height value as a number when line-height is normal.\n\nThis value is required during max-height calculation for the browsers that do not support line-clamping.\nIt is better to define line-height in CSS instead of \"normal\" to get consistent maxLines results since normal line-height\nnot only varies from browser to browser but they also vary from one font face to another and can also vary within a given face.\n\nDefault value is 1.2","!category":"enum","!type":"Number"},"ComboBoxTextField":"sap.m.ComboBoxTextField_obj","ViewSettingsCustomItem":"sap.m.ViewSettingsCustomItem_obj","dateValue":{"!description":"Holds a reference to a JavaScript Date Object. The <code>value<\/code> (string)\nproperty will be set according to it. Alternatively, if the <code>value<\/code>\nand <code>valueFormat<\/code> pair properties are supplied instead,\nthe <code>dateValue<\/code> will be instantiated аccording to the parsed\n<code>value<\/code>.","!category":"enum","!type":"Object"},"badgePeople":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.24.0 Will be replaced in the future by a more generic mechanism.<br>Indicates whether or not the address book icon is displayed.","!category":"enum","!type":"Boolean"},"Slider":"sap.m.Slider_obj","expandable":{"!description":"Specifies whether the control is expandable.\nThis allows for collapsing or expanding the infoToolbar (if available) and content of the Panel.\nNote: If expandable is set to false, the Panel will always be rendered expanded.","!category":"enum","!type":"Boolean"},"autoReduceKeyFieldItems":{"!description":"KeyField value can only be selected once. When you set the property to true the ConditionPanel will automatically offers on the\nKeyField drop down only the keyFields which are not used. The default behavior is that in each keyField dropdown all keyfields are\nlisted.","!category":"enum","!type":"Boolean"},"P13nItem":"sap.m.P13nItem_obj","shrinkFactor":{"!description":"The shrink factor determines how much the flex item will shrink relative to the rest of the flex items in the flex container when negative free space is distributed.","!category":"enum","!type":"Number"},"description":{"!description":"Additional text of type string, optionally to be displayed along with this item.","!category":"enum","!type":"String"},"IconTabFilter":"sap.m.IconTabFilter_obj","singleSelection":{"!description":"If set, only a single row can be selected","!category":"enum","!type":"Boolean"},"vertical":{"!description":"Whether vertical scrolling should be possible.\n\nNote that this is off by default because typically a Page is used as fullscreen element which can handle vertical scrolling. If this is not the case and vertical scrolling is required, this flag needs to be set to \"true\".\nImportant: it is not supported to have nested controls that both enable scrolling into the same dimension.","!category":"enum","!type":"Boolean"},"showFooter":{"!description":"Whether this page shall have a footer","!category":"enum","!type":"Boolean"},"Shell":"sap.m.Shell_obj","enableCaseInsensitiveSearch":{"!description":"If set to <code>true<\/code>, enables case-insensitive search for OData.","!category":"enum","!type":"Boolean"},"showCloseButton":{"!description":"Determines if a close button should be inserted into the dialog's header dynamically to close the dialog. This property only takes effect on phone.","!category":"enum","!type":"Boolean"},"P13nSortPanel":"sap.m.P13nSortPanel_obj","placeholder":{"!description":"Defines a short hint intended to aid the user with data entry when the control has no value.","!category":"enum","!type":"String"},"headerRightText":{"!description":"Defines texts, such as the name of the logged-in user, which should be displayed on the right side of the header (if there is enough space to display the header at all - this only happens on very tall screens (1568px height), otherwise, it is always hidden).","!category":"enum","!type":"String"},"getScrollDelegate":{"!description":"Search given control's parents and try to find ScrollDelegate.","!category":"enum","!type":"String"},"renderType":{"!description":"Determines whether the layout is rendered as a series of divs or as an unordered list (ul)","!category":"enum","!type":"sap.m.FlexRendertype"},"cols":{"!description":"Defines the visible width of the control, in average character widths.\n<b>Note:<\/b> The <code>width<\/code> property wins over the <code>cols<\/code> property, if both are set.","!category":"enum","!type":"Number"},"activeHandling":{"!description":"This is a flag to switch on activeHandling. When it is switched off,\nthere will not be visual changes on active state. Default value is 'true'","!category":"enum","!type":"Boolean"},"showIcon":{"!description":"Set to true to display an icon/logo. Icon must be set either in the customIcon property or in the CSS theme for the PullToRefresh control.","!category":"enum","!type":"Boolean"},"cancelButtonText":{"!description":"The text of the cancel button. The default text is \"Cancel\" (translated to the respective language).","!category":"enum","!type":"String"},"mask":{"!description":"Mask defined by its characters type (respectively, by its length).\nYou should consider the following important facts:\n1. The mask characters normally correspond to an existing rule (one rule per unique char).\nCharacters which don't, are considered immutable characters (for example, the mask '2099', where '9' corresponds to a rule\nfor digits, has the characters '2' and '0' as immutable).\n2. Adding a rule corresponding to the <code>placeholderSymbol<\/code> is not recommended and would lead to an unpredictable behavior.\n3. You can use the special escape character '^' called \"Caret\" prepending a rule character to make it immutable.\nUse the double escape '^^' if you want to make use of the escape character as a immutable one.","!category":"enum","!type":"String"},"valueLiveUpdate":{"!description":"Indicates when the <code>value<\/code> property gets updated with the user changes. Setting it to <code>true<\/code> updates the <code>value<\/code> property whenever the user has modified the text shown on the text area.","!category":"enum","!type":"Boolean"},"QuickView":"sap.m.QuickView_obj","Tile":"sap.m.Tile_obj","Title":"sap.m.Title_obj","displayFormat":{"!description":"Determines the format, displayed in the input field and the picker sliders.\n\nThe default value is the browser's medium time format locale setting\n{@link sap.ui.core.LocaleData#getTimePattern}.\nIf data binding with type {@link sap.ui.model.type.Time} is used for the\n<code>value<\/code> property, the <code>displayFormat<\/code> property\nis ignored as the information is provided from the binding itself.","!category":"enum","!type":"String"},"MenuItem":"sap.m.MenuItem_obj","minScreenWidth":{"!description":"By default column is always shown. If you set this property, control checks the minimum width of the screen to show or hide this column.\nAs you can give specific CSS sizes(e.g: \"480px\" or \"40em\"), you can also use sap.m.ScreenSize enumeration(e.g: \"Phone\", \"Tablet\", \"Desktop\", \"Small\", \"Medium\", \"Large\", ....).\n\nsap.m.Column.MediaQuery1->Range1 = 199\n\nThis property can be used for responsive design. e.g: \"40em\"(or \"640px\" or \"Tablet\") setting shows this column in iPad(and Desktop) but hides in iPhone.\nPlease also see \"demandPopin\" property","!category":"enum","!type":"String"},"initialVisiblePanelType":{"!description":"This property determines which panel is initially shown when dialog is opened. Due to extensibility reason the type should be\n<code>string<\/code>. So it is feasible to add a custom panel without expanding the type.","!category":"enum","!type":"String"},"ariaLabelForPicture":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!category":"enum","!type":"String"},"DateTimeInput":"sap.m.DateTimeInput_obj","showValueStateMessage":{"!description":"Indicates whether the value state message should be shown or not.","!category":"enum","!type":"Boolean"},"target":{"!description":"Specifies the target of the link \u2013 it works like the target property of the HTML <a> tag. Works only with QuickViewGroupElement of type link.","!category":"enum","!type":"String"},"SelectListKeyboardNavigationMode":"sap.m.SelectListKeyboardNavigationMode","pageIndicatorPlacement":{"!description":"Defines where the carousel's page indicator is displayed. Possible values are sap.m.PlacementType.Top, sap.m.PlacementType.Bottom. Other values are ignored and the default value will be applied. The default value is sap.m.PlacementType.Bottom.","!category":"enum","!type":"sap.m.PlacementType"},"enableSuggestions":{"!description":"If true, a <code>suggest<\/code> event is fired when user types in the input and when the input is focused.\nOn a phone device, a full screen dialog with suggestions is always shown even if the suggestions list is empty.","!category":"enum","!type":"Boolean"},"homeIcon":{"!description":"Represents the icon to be displayed on the home screen of iOS devices after the user does \"add to home screen\".\nNote that only the first attempt to set the homeIcon is executed, subsequent settings are ignored.\nThe icon must be in PNG format. The property can either store the URL of one single icon or an object holding icon URLs for the different required sizes.\nNote that if single icon is used for all devices, when scaled, its quality can regress.\nA desktop icon (used for bookmarks and overriding the favicon) can also be configured. This requires an object to be given and the \"icon\" property of this object then defines the desktop bookmark icon.\nFor this icon, PNG is not supported by Internet Explorer. The ICO format is supported by all browsers. ICO is also preferred for this desktop icon setting as the file can contain different images for different resolutions.\n\nOne example is:\n\napp.setHomeIcon({\n'phone':'phone-icon.png',\n'phone@2':'phone-retina.png',\n'tablet':'tablet-icon.png',\n'tablet@2':'tablet-retina.png',\n'icon':'desktop.ico'\n});\n\nThe image size is 57/114 px for the phone and 72/144 px for the tablet.\nIf an object is given but one of the sizes is not given, the largest given icon will be used for this size.\n\nOn Android, these icons may or may not be used by the device. Chances can be improved by adding glare effect, rounded corners, setting the file name to end with \"-precomposed.png\", and setting the homeIconPrecomposed property to true.","!category":"enum","!type":"Object"},"ToolbarDesign":"sap.m.ToolbarDesign","step":{"!description":"Define the amount of units to change the slider when adjusting by drag and drop.\n\nDefines the size of the slider's selection intervals. (e.g. min = 0, max = 10, step = 5 would result in possible selection of the values 0, 5, 10).\n\nThe step must be positive, if a negative number is provided, the default value will be used instead.\nIf the width of the slider converted to pixels is less than the range (max \u2013 min), the value will be rounded to multiples of the step size.","!category":"enum","!type":"Number"},"authorPicture":{"!description":"Determines the URL of the notification group's author picture.","!category":"enum","!type":"sap.ui.core.URI"},"titleLarge":{"!description":"Large title text appears e.g. in dialog header in case that only one panel is shown.","!category":"enum","!type":"String"},"customIconHeight":{"!description":"Height of the provided icon. By default 44px are used.","!category":"enum","!type":"sap.ui.core.CSSSize"},"containerQuery":{"!description":"defines if the mediaQuery or a ContainerResize will be used for layout update. When the ConditionPanel is used on a dialog the\nproperty should be set to true!","!category":"enum","!type":"Boolean"},"enableEdit":{"!description":"Enables/Disables the Edit button.\nIf the value is true, the Edit button is enabled and the edit function can be used.\nIf the value is false, the edit function is not available.","!category":"enum","!type":"Boolean"},"getLocale":{"!description":"Finds default locale settings once and returns always the same.\nWe should not need to create new instance to get same locale settings\nThis method keep the locale instance in the scope and returns the same after first run","!static":"true","!category":"function","!type":"fn() -> Object"},"DraftIndicatorState":"sap.m.DraftIndicatorState","fileType":{"!description":"Defines the allowed file types for the upload.\nThe chosen files will be checked against an array of file types.\nIf at least one file does not fit the file type requirements, the upload is prevented.  Example: [\"jpg\", \"png\", \"bmp\"].","!category":"enum","!type":"[String]"},"ObjectHeader":"sap.m.ObjectHeader_obj","Support":{"!description":"<pre>\n<code>sap.m.Support<\/code> shows the technical information for SAPUI5 Mobile Applications.\nThis technical information includes\n   * SAPUI5 Version\n   * User Agent\n   * Configurations (Bootstrap and Computed)\n   * URI parameters\n   * All loaded module names\n\nIn order to show the device information, the user must follow the following gestures.\n   1 - Hold two finger for 3 seconds minimum.\n   2 - Tab with a third finger while holding the first two fingers.\n\nNOTE: This class is internal and all its functions must not be used by an application\n\nAs <code>sap.m.Support<\/code> is a static class, a <code>jQuery.sap.require(\"sap.m.Support\");<\/code>\nstatement must be implicitly executed before the class is used.\n\n\nEnable Support:\n--------------------------------------------------\n//import library\njQuery.sap.require(\"sap.m.Support\");\n\n//By default after require, support is enabled but implicitly we can call\nsap.m.Support.on();\n\nDisable Support:\n--------------------------------------------------\nsap.m.Support.off();\n<\/pre>","!module":"sap/m/Support","!category":"enum","!type":"String"},"bounce":{"!description":"Whether bouncing is enabled.","!category":"enum","!type":"Boolean"},"enableMultiLineMode":{"!description":"If set to true, the MultiInput will be displayed in multi-line display mode.\nIn multi-line display mode, all tokens can be fully viewed and easily edited in the MultiInput.\nThe default value is false.\n<b>Note:<\/b> This property does not take effect on smartphones.","!category":"enum","!type":"Boolean"},"numberTextDirection":{"!description":"Determines the text direction of the item number.\nAvailable options for the number direction are LTR (left-to-right) and RTL (right-to-left).\nBy default the item number inherits the text direction from its parent.","!category":"enum","!type":"sap.ui.core.TextDirection"},"MessageStrip":"sap.m.MessageStrip_obj","type":{"!description":"Type of a button (e.g. Default, Accept, Reject, Back, etc.)","!category":"enum","!type":"sap.m.ButtonType"},"uploadedDate":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.30 This property is deprecated; use the aggregation attributes instead.<br>Specifies the date on which the file was uploaded.\nThe application has to define the date format.","!category":"enum","!type":"String"},"truncateValueTo":{"!description":"The number of characters to display for the value property.","!category":"enum","!type":"Number"},"required":{"!description":"Indicates that user input is required. This property is only needed for accessibility purposes when a single relationship between\nthe field and a label (see aggregation <code>labelFor<\/code> of <code>sap.m.Label<\/code>) cannot be established\n(e.g. one label should label multiple fields).","!category":"enum","!type":"Boolean"},"baseSize":{"!description":"The base size is the initial main size of the item for the flex algorithm. If set to \"auto\", this will be the computed size of the item.","!category":"enum","!type":"sap.ui.core.CSSSize"},"truncate":{"!description":"Determines if the text in the title and the description of the notification are truncated to the first two lines.","!category":"enum","!type":"Boolean"},"delimiter":{"!description":"Delimiter between start and end date. Default value is \"-\".\nIf no delimiter is given, the one defined for the used locale is used.","!category":"enum","!type":"String"},"imageDescription":{"!description":"Description of a header image that is used in the tooltip.","!category":"enum","!type":"String"},"maxTokens":{"!description":"The max number of tokens that is allowed in MultiInput.","!category":"enum","!type":"Number"},"uploadEnabled":{"!description":"Enables the upload of a file.","!category":"enum","!type":"Boolean"},"ObjectAttribute":"sap.m.ObjectAttribute_obj","href":{"!description":"The link target URI. Supports standard hyperlink behavior. If a JavaScript action should be triggered, this should not be set, but instead an event handler for the \"press\" event should be registered.","!category":"enum","!type":"sap.ui.core.URI"},"DateTimeInputType":"sap.m.DateTimeInputType","applyTagAndContextClassFor":{"!description":"Sets classes and tag according to the context in the page. Possible contexts are header, footer, subheader","!category":"enum","!type":"String"},"alignItems":{"!description":"Determines the layout behavior of items along the cross-axis. \"Baseline\" is not supported in Internet Explorer 10.","!category":"enum","!type":"sap.m.FlexAlignItems"},"ListSeparators":"sap.m.ListSeparators","IBar":"sap.m.IBar","focusable":{"!description":"Whether the scroll container can be focused.\n\nNote that it should be set to \"true\" when there are no focusable elements inside or when keyboard interaction requires an additional tab stop on the container.","!category":"enum","!type":"Boolean"},"selectOnFocus":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 This parameter is deprecated and has no effect in run time. The cursor position of a focused search field is restored after re-rendering automatically.<br>Normally, search text is selected for copy when the SearchField is focused by keyboard navigation. If an application re-renders the SearchField during the liveChange event, set this property to false to disable text selection by focus.","!category":"enum","!type":"Boolean"},"priority":{"!description":"Defines OverflowToolbar items priority, Available priorities ate NeverOverflow, High, Low, Disappear and AlwaysOverflow","!category":"enum","!type":"sap.m.OverflowToolbarPriority"},"applyContentPadding":{"!description":"Determines whether the IconTabBar content fits to the full area.\nThe paddings are removed if it's set to false.","!category":"enum","!type":"Boolean"},"setHTMLTag":{"!description":"Sets the HTML tag of the root domref","!category":"enum","!type":"String"},"subheader":{"!description":"The subheader.","!category":"enum","!type":"String"},"Switch":"sap.m.Switch_obj","WizardStep":"sap.m.WizardStep_obj","InputType":"sap.m.InputType","navButtonType":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 Deprecated since the MVI theme is removed now. This property is only usable with a Button text in that theme.<br>This property is used to set the appearance of the NavButton. By default when showNavButton is set to true, a back button will be shown in iOS and an up button in other platforms. In case you want to show a normal button in the left header area, you can set the value to \"Default\".","!category":"enum","!type":"sap.m.ButtonType"},"appWidthLimited":{"!description":"Determines whether the width of the content (the aggregated App) should be limited or extended to the full screen width.","!category":"enum","!type":"Boolean"},"MaskInput":"sap.m.MaskInput_obj","backgroundRepeat":{"!description":"Defines whether the background image (if configured) is proportionally stretched\nto cover the whole SplitContainer (false) or whether it should be tiled (true).","!category":"enum","!type":"Boolean"},"columnKey":{"!description":"key of the column","!category":"enum","!type":"String"},"showIfGrouped":{"!description":"make the grouped column as normalcolumn visible","!category":"enum","!type":"Boolean"},"horizontalScrolling":{"!description":"This property is supported by both variants. Please see the documentation on sap.m.Popover#horizontalScrolling and sap.m.Dialog#horizontalScrolling","!category":"enum","!type":"Boolean"},"displayInline":{"!description":"Determines whether the <code>sap.m.FlexBox<\/code> is in block or inline mode.","!category":"enum","!type":"Boolean"},"columns":{"!description":"Specifies the maximum number of radio buttons displayed in one line.","!category":"enum","!type":"Number"},"ToolbarSpacer":"sap.m.ToolbarSpacer_obj","range":{"!description":"Determines the range in which the user can select values.\n\nIf the value is lower/higher than the allowed minimum/maximum,\na warning message will be output to the console.","!category":"enum","!type":"[Number]"},"enabled":{"!description":"Enabled items can be selected.","!category":"enum","!type":"Boolean"},"P13nGroupItem":"sap.m.P13nGroupItem_obj","DeviationIndicator":"sap.m.DeviationIndicator","infoTextDirection":{"!description":"Defines the <code>info<\/code> directionality with enumerated options. By default, the control inherits text direction from the DOM.","!category":"enum","!type":"sap.ui.core.TextDirection"},"emphasized":{"!description":"Indicates if the object number should appear emphasized.","!category":"enum","!type":"Boolean"},"iconHovered":{"!description":"The URI to the icon font icon or image that will be displayed for hovered rating symbols. A star icon will be used if the property is not set","!category":"enum","!type":"sap.ui.core.URI"},"backgroundSize":{"!description":"Defines the size of the image in sap.m.ImageMode.Background mode. This property is set on the output DOM element using CSS style 'background-size'. This property takes effect only when the 'mode' property is set to sap.m.ImageMode.Background.","!category":"enum","!type":"String"},"cacheLineHeight":{"!description":"Determines per instance whether line height should be cached or not.\n\nDefault value is true.","!category":"enum","!type":"Boolean"},"showTableSuggestionValueHelp":{"!description":"For tabular suggestions, this flag will show/hide the button at the end of the suggestion table that triggers the event \"valueHelpRequest\" when pressed. The default value is true.\n\nNOTE: If suggestions are not tabular or no suggestions are used, the button will not be displayed and this flag is without effect.","!category":"enum","!type":"Boolean"},"ScreenSize":"sap.m.ScreenSize","MultiComboBox":"sap.m.MultiComboBox_obj","showNavButton":{"!description":"A nav button will be rendered on the left area of header bar if this property is set to true.","!category":"enum","!type":"Boolean"},"markFlagged":{"!description":"Sets the flagged state for the ObjectListItem.","!category":"enum","!type":"Boolean"},"MessagePopover":"sap.m.MessagePopover_obj","PullToRefresh":"sap.m.PullToRefresh_obj","GrowingList":"sap.m.GrowingList_obj","ISnappable":"sap.m.ISnappable","Table":"sap.m.Table_obj","ObjectNumber":"sap.m.ObjectNumber_obj","verticalScrolling":{"!description":"This property is supported by both variants. Please see the documentation on sap.m.Popover#verticalScrolling and sap.m.Dialog#verticalScrolling","!category":"enum","!type":"Boolean"},"minWidth":{"!description":"Sets the minimum width of the toolbar item.","!category":"enum","!type":"sap.ui.core.CSSSize"},"nullifyValue":{"!description":"If set to true, the omitted value property is set to 0.","!category":"enum","!type":"Boolean"},"mergeFunctionName":{"!description":"Defines the value getter(serialization) function if \"mergeDuplicates\" property is set \"true\"\nControl itself uses this function to compare values of two repeating cells.\nDefault value \"getText\" is suitable for Label and Text control.\ne.g. For \"Icon\" control \"getSrc\" can be used.\nNote: You can pass one string parameter to given function after \"#\" sign. e.g. \"data#myparameter\"","!category":"enum","!type":"String"},"valueTextDirection":{"!description":"Defines the <code>value<\/code> text directionality with enumerated options. By default, the control inherits text direction from the DOM.","!category":"enum","!type":"sap.ui.core.TextDirection"},"noDataText":{"!description":"Allows you to set your own text for the 'No data' text label.","!category":"enum","!type":"String"},"selectedIndex":{"!description":"Determines the index of the selected/checked RadioButton. Default is 0.\nIf no radio button is selected, the selectedIndex property will return -1.","!category":"enum","!type":"Number"},"modeAnimationOn":{"!description":"Defines if animations will be shown while switching between modes.","!category":"enum","!type":"Boolean"},"width":{"!description":"Determines the width of the Wizard.","!category":"enum","!type":"sap.ui.core.CSSSize"},"ObjectMarkerType":"sap.m.ObjectMarkerType","titleUrl":{"!description":"Specifies the URL which opens when the title or the thumbnail is clicked.","!category":"enum","!type":"String"},"indicator":{"!description":"The indicator arrow that shows value deviation.","!category":"enum","!type":"sap.m.DeviationIndicator"},"secondDateValue":{"!description":"The end date of the range as JavaScript Date object. This is independent from any formatter.\n\n<b>Note:<\/b> If this property is used, the <code>value<\/code> property should not be changed from the caller.","!category":"enum","!type":"Object"},"aggregationRole":{"!description":"Defines aggregation role","!category":"enum","!type":"String"},"ObjectListItem":"sap.m.ObjectListItem_obj","FacetFilterList":"sap.m.FacetFilterList_obj","threshold":{"!description":"Number of items requested from the server. To activate this you should set growing property to \"true\"","!category":"enum","!type":"Number"},"headerDesign":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16 No longer has any functionality.<br>Defines the header style of the control. Possible values are <code>Standard<\/code> and <code>Plain<\/code>.","!category":"enum","!type":"sap.m.ListHeaderDesign"},"PagingButton":"sap.m.PagingButton_obj","ListMode":"sap.m.ListMode","growing":{"!description":"Indicates the ability of the control to automatically grow and shrink dynamically with its content.\n<b>Note:<\/b> The <code>height<\/code> property is ignored, if this property set to <code>true<\/code>.","!category":"enum","!type":"Boolean"},"Input":"sap.m.Input_obj","SplitContainer":"sap.m.SplitContainer_obj","navButtonTooltip":{"!description":"The tooltip of the nav button\n\nSince version 1.34","!category":"enum","!type":"String"},"nonWorkingDays":{"!description":"If set, the provided weekdays are displayed as non-working days.\nValid values inside the array are 0 to 6. (other values will just be ignored.)\n\nIf not set, the weekend defined in the locale settings is displayed as non-working days.\n\n<b>Note:<\/b> The non-working days are only visualized if <code>intervalType<\/code> is set to day.","!category":"enum","!type":"[Number]"},"headerImage":{"!description":"The image to be displayed as a graphical element within the header. This can be an image or an icon from the icon font.","!category":"enum","!type":"sap.ui.core.URI"},"P13nColumnsItem":"sap.m.P13nColumnsItem_obj","P13nConditionPanel":"sap.m.P13nConditionPanel_obj","intro":{"!description":"Defines the introductory text for the ObjectListItem.","!category":"enum","!type":"String"},"markLocked":{"!description":"Sets the locked state of the ObjectListItem.","!category":"enum","!type":"Boolean"},"BusyIndicator":"sap.m.BusyIndicator_obj","from":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22.0 Use <code>dateValue<\/code> instead.<br>Start date of the range.","!category":"enum","!type":"Object"},"titleStyle":{"!description":"Defines the style of the title.\nWhen using the <code>Auto<\/code> styling, the appearance of the title depends on the current position of the title and the defined level.\nThis automatism can be overridden by setting a different style explicitly.\nThe actual appearance of the title and the different styles always depends on the theme being used.","!category":"enum","!type":"sap.ui.core.TitleLevel"},"valueHelpOnly":{"!description":"If set to true, direct text input is disabled and the control will trigger the event \"valueHelpRequest\" for all user interactions. The properties \"showValueHelp\", \"editable\", and \"enabled\" must be set to true, otherwise the property will have no effect","!category":"enum","!type":"Boolean"},"ValueColor":"sap.m.ValueColor","introActive":{"!description":"Determines whether the introductory text of the <code>ObjectHeader<\/code> is clickable.","!category":"enum","!type":"Boolean"},"group":{"!description":"Defines OverflowToolbar items group number.\nDefault value is 0, which means that the control does not belong to any group.\nElements that belong to a group overflow together. The overall priority of the group is defined by the element with highest priority.\nElements that belong to a group are not allowed to have AlwaysOverflow or NeverOverflow priority.","!category":"enum","!type":"Number"},"UploadCollectionToolbarPlaceholder":"sap.m.UploadCollectionToolbarPlaceholder_obj","showNoData":{"!description":"Defines whether or not the text specified in the <code>noDataText<\/code> property is displayed.","!category":"enum","!type":"Boolean"},"visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!category":"enum","!type":"Boolean"},"badgeNotes":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.24.0 Will be replaced in the future by a more generic mechanism.<br>Indicates whether or not the notes icon is displayed.","!category":"enum","!type":"Boolean"},"displayFormatType":{"!description":"Displays date in this given type in input field. Default value is taken from locale settings.\nAccepted are values of <code>sap.ui.core.CalendarType<\/code> or an empty string. If no type is set, the default type of the\nconfiguration is used.\n<b>Note:<\/b> If data binding on <code>value<\/code> property with type <code>sap.ui.model.type.Date<\/code> is used, this property will be ignored.","!category":"enum","!type":"String"},"sameFilenameAllowed":{"!description":"Allows the user to use the same name for a file when editing the file name. 'Same name' refers to an already existing file name in the list.","!category":"enum","!type":"Boolean"},"TabStripSelectList":"sap.m.TabStripSelectList_obj","ComboBoxBase":"sap.m.ComboBoxBase_obj","sequence":{"!description":"Sequence that determines the order in which FacetFilterList is shown on the FacetFilter. Lists are rendered by ascending order of sequence.","!category":"enum","!type":"Number"},"fileSize":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.30 This property is deprecated; use the aggregation attributes instead.<br>Specifies the size of the uploaded file (in megabytes).","!category":"enum","!type":"Number"},"upperCase":{"!description":"Determines whether the text of the icon tab filter (not the count) is displayed in uppercase.","!category":"enum","!type":"Boolean"},"layoutMode":{"!description":"can be used to control the layout behavior. Default is \"\" which will automatically change the layout. With \"Desktop\", \"Table\"\nor\"Phone\" you can set a fixed layout.","!category":"enum","!type":"String"},"IconTabSeparator":"sap.m.IconTabSeparator_obj","showResetAll":{"!description":"showResetAll : Boolean","!category":"enum","!type":"Boolean"},"IconTabFilterDesign":"sap.m.IconTabFilterDesign","SelectList":"sap.m.SelectList_obj","moveToOverflow":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 undefined<br>The OverflowToolbar item can or cannot move to the overflow area","!category":"enum","!type":"Boolean"},"iconInset":{"!description":"Defines the indentation of the icon. If set to <code>false<\/code>, the icon will not be shown as embedded. Instead it will take the full height of the list item.","!category":"enum","!type":"Boolean"},"badgeAttachments":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.24.0 Will be replaced in the future by a more generic mechanism.<br>Indicates whether or not the attachments icon is displayed.","!category":"enum","!type":"Boolean"},"wordWrap":{"!description":"If set to <code>true<\/code>, the item text wraps when it is too long.","!category":"enum","!type":"Boolean"},"values":{"!description":"the array of values for type bool. e.g. [\"\", \"Off\", \"On\"]. The first entry can be empty (used to blank the value field). Next value\nrepresent the false value, last entry the true value.","!category":"enum","!type":"[String]"},"scale":{"!description":"if type==numeric the scale will be used to format the entered value (maxFractionDigits of the used Formatter)","!category":"enum","!type":"String"},"maximumFilenameLength":{"!description":"Specifies the maximum length of a file name.\nIf the maximum file name length is exceeded, the corresponding event 'filenameLengthExceed' is triggered.","!category":"enum","!type":"Number"},"!category":"namespace","QuickViewGroupElementType":"sap.m.QuickViewGroupElementType","TablePersoController":"sap.m.TablePersoController_obj","textDirection":{"!description":"Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control.","!category":"enum","!type":"sap.ui.core.TextDirection"},"FlexWrap":"sap.m.FlexWrap","contributor":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.30 This property is deprecated; use the aggregation attributes instead.\nHowever, if the property is filled, it is displayed as an attribute. To make sure the title does not appear twice, do not use the property.<br>Specifies the name of the user who uploaded the file.","!category":"enum","!type":"String"},"validated":{"!description":"Indicates whether or not the step is validated.\nWhen a step is validated a Next button is visualized in the Wizard control.","!category":"enum","!type":"Boolean"},"Column":"sap.m.Column_obj","alwaysShowAddIcon":{"!description":"makes the Add icon visible on each condition row. If is set to false the Add is only visible at the end and you can only append a\nnew condition.","!category":"enum","!type":"Boolean"},"longtextUrl":{"!description":"Specifies long text description location URL","!category":"enum","!type":"sap.ui.core.URI"},"showVerticalScrollBar":{"!description":"Determines whether the browser displays the vertical scroll bar or simply cuts the content of the QuickViewCard.","!category":"enum","!type":"Boolean"},"PopupHelper":"sap.m.PopupHelper","UploadCollectionParameter":"sap.m.UploadCollectionParameter_obj","OverflowToolbarPriority":"sap.m.OverflowToolbarPriority","selectedItemId":{"!description":"ID of the selected item.","!category":"enum","!type":"String"},"startsSection":{"!description":"Defines whether a visual separator should be rendered before the item.\n<b>Note:<\/b> If an item is invisible its separator is also not displayed.","!category":"enum","!type":"Boolean"},"masterButtonText":{"!description":"Determines the text displayed in master button, which has a default value \"Navigation\".\nThis text is only displayed in iOS platform and the icon from the current page in detail area is\ndisplayed in the master button for the other platforms.\nThe master button is shown/hidden depending on the orientation of the device and whether\nthe master area is opened or not. SplitContainer manages the show/hide of the master button by itself\nonly when the pages added to the detail area are sap.m.Page with built-in header or sap.m.Page\nwith built-in header, which is wrapped by one or several sap.ui.core.mvc.View.\nOtherwise, the show/hide of master button needs to be managed by the application.","!category":"enum","!type":"String"},"value":{"!description":"Specifies the value of the parameter.","!category":"enum","!type":"String"},"iconAlt":{"!description":"Determines the alternative text of the <code>ObjectHeader<\/code> icon. The text is\ndisplayed if the image for the icon is not available, or cannot be displayed.","!category":"enum","!type":"String"},"enableScrolling":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.0 This property is deprecated. Please use properties verticalScrolling and horizontalScrolling instead. If you still use this property it will be mapped on the new properties verticalScrolling and horizontalScrolling.<br>This property is deprecated. Please use properties verticalScrolling and horizontalScrolling instead. If you still use this property it will be mapped on the new properties verticalScrolling and horizontalScrolling.","!category":"enum","!type":"Boolean"},"stretchOnPhone":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.13.1 Please use the new stretch property instead. This enables a stretched dialog even on tablet and desktop. If you want to achieve the same effect as stretchOnPhone, please set the stretch with jQuery.device.is.phone, then dialog is only stretched when runs on phone.<br>Determines whether the dialog will displayed on full screen on a phone.","!category":"enum","!type":"Boolean"},"CustomListItem":"sap.m.CustomListItem_obj","SegmentedButtonItem":"sap.m.SegmentedButtonItem_obj","IconTabBar":"sap.m.IconTabBar_obj","UploadCollection":"sap.m.UploadCollection_obj","minDisplayTime":{"!description":"Minimum time in milliseconds for showing the draft indicator","!category":"enum","!type":"Number"},"QuickViewGroup":"sap.m.QuickViewGroup_obj","getIScroll":{"!description":"Search given control's parents and try to find iScroll.","!category":"enum","!type":"String"},"showArrow":{"!description":"Whether Popover arrow should be visible","!category":"enum","!type":"Boolean"},"FlexAlignSelf":"sap.m.FlexAlignSelf","BusyDialog":"sap.m.BusyDialog_obj","ListItemBase":"sap.m.ListItemBase_obj","ellipsis":{"!description":"Ellipsis(\u2026) text to indicate more text when clampText function is used.\n\nCan be overwritten with 3dots(...) if fonts do not support this UTF-8 character.","!category":"enum","!type":"String"},"contentHeight":{"!description":"Specifies the content height of the inner dialog. For more information, see the Dialog documentation.","!category":"enum","!type":"sap.ui.core.CSSSize"},"Bar":"sap.m.Bar_obj","PageAccessibleLandmarkInfo":"sap.m.PageAccessibleLandmarkInfo_obj","intervalType":{"!description":"Type of the intervals of the row. Default is Hour.","!category":"enum","!type":"sap.ui.unified.CalendarIntervalType"},"FlexBox":"sap.m.FlexBox_obj","validationExecutor":{"!description":"Callback method which is called in order to validate end user entry.","!category":"enum","!type":"Object"},"animateTextChange":{"!description":"If set to true, the change of the value will be animated.","!category":"enum","!type":"Boolean"},"showSelectAll":{"!description":"showSelectAll : Boolean","!category":"enum","!type":"Boolean"},"responsive":{"!description":"Determines whether the <code>ObjectHeader<code> is rendered with a different design that\nreacts responsively to the screen sizes.\n\n<b>Note:<\/b> Be aware that the design and behavior of the responsive <code>ObjectHeader<\/code>\ncould change without further notification.","!category":"enum","!type":"Boolean"},"showEmptyIntervalHeaders":{"!description":"If set, interval headers are shown even if no <code>intervalHeaders<\/code> are assigned to the visible time frame.\n\nIf not set, no interval headers are shown if no <code>intervalHeaders<\/code> are assigned.\n\n<b>Note:<\/b> This property is only used if <code>showIntervalHeaders<\/code> is set to <code>true<\/code>.","!category":"enum","!type":"Boolean"},"Wizard":"sap.m.Wizard_obj","backgroundDesign":{"!description":"Defines the background style of the <code>sap.m.FlexBox<\/code>.","!category":"enum","!type":"sap.m.BackgroundDesign"},"_setBindingContext":{"!description":"Sets the binding context for the internal table AND the current control so that both controls can be used with the context.","!category":"enum","!type":"String"},"usePrevConditionSetting":{"!description":"new added condition use the settings from the previous condition as default.","!category":"enum","!type":"Boolean"}},"sap":{"sap":"sap","!category":"namespace","m":"sap.m"},"sap.m.semantic.DeleteAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.DeleteAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.DeleteAction"},"sap.m.PageAccessibleLandmarkInfo":{"getContentLabel":{"!description":"Gets current value of property <code>contentLabel<\/code>.\n\nTexts which describes the landmark of the content container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), a predefined text\nis used.","!static":false,"!category":"function","!type":"fn() -> String"},"setContentRole":{"!description":"Sets a new value for property <code>contentRole<\/code>.\n\nLandmark role of the content container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Main<\/code>.","!static":false,"!category":"function","!type":"fn(sContentRole: sap.ui.core.AccessibleLandmarkRole) -> sap.m.PageAccessibleLandmarkInfo","parameters":{"sContentRole":"type: sap.ui.core.AccessibleLandmarkRole, description: New value for property <code>contentRole<\/code>"}},"setContentLabel":{"!description":"Sets a new value for property <code>contentLabel<\/code>.\n\nTexts which describes the landmark of the content container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), a predefined text\nis used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sContentLabel: String) -> sap.m.PageAccessibleLandmarkInfo","parameters":{"sContentLabel":"type: string, description: New value for property <code>contentLabel<\/code>"}},"getHeaderRole":{"!description":"Gets current value of property <code>headerRole<\/code>.\n\nLandmark role of the header container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.\n\nDefault value is <code>Region<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.AccessibleLandmarkRole"},"!proto":"sap.ui.core.Element","getRootRole":{"!description":"Gets current value of property <code>rootRole<\/code>.\n\nLandmark role of the root container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.\n\nDefault value is <code>Region<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.AccessibleLandmarkRole"},"!category":"class","getFooterRole":{"!description":"Gets current value of property <code>footerRole<\/code>.\n\nLandmark role of the footer container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.\n\nDefault value is <code>Region<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.AccessibleLandmarkRole"},"setRootLabel":{"!description":"Sets a new value for property <code>rootLabel<\/code>.\n\nTexts which describes the landmark of the root container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), a predefined text\nis used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sRootLabel: String) -> sap.m.PageAccessibleLandmarkInfo","parameters":{"sRootLabel":"type: string, description: New value for property <code>rootLabel<\/code>"}},"!constructorDescription":"Constructor for a new <code>sap.m.PageAccessibleLandmarkInfo<\/code> element.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getRootRole rootRole} : sap.ui.core.AccessibleLandmarkRole (default: Region)<\/li>\n<li>{@link #getRootLabel rootLabel} : string<\/li>\n<li>{@link #getContentRole contentRole} : sap.ui.core.AccessibleLandmarkRole (default: Main)<\/li>\n<li>{@link #getContentLabel contentLabel} : string<\/li>\n<li>{@link #getHeaderRole headerRole} : sap.ui.core.AccessibleLandmarkRole (default: Region)<\/li>\n<li>{@link #getHeaderLabel headerLabel} : string<\/li>\n<li>{@link #getSubHeaderRole subHeaderRole} : sap.ui.core.AccessibleLandmarkRole<\/li>\n<li>{@link #getSubHeaderLabel subHeaderLabel} : string<\/li>\n<li>{@link #getFooterRole footerRole} : sap.ui.core.AccessibleLandmarkRole (default: Region)<\/li>\n<li>{@link #getFooterLabel footerLabel} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","getRootLabel":{"!description":"Gets current value of property <code>rootLabel<\/code>.\n\nTexts which describes the landmark of the root container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), a predefined text\nis used.","!static":false,"!category":"function","!type":"fn() -> String"},"setHeaderLabel":{"!description":"Sets a new value for property <code>headerLabel<\/code>.\n\nTexts which describes the landmark of the header container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), a predefined text\nis used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHeaderLabel: String) -> sap.m.PageAccessibleLandmarkInfo","parameters":{"sHeaderLabel":"type: string, description: New value for property <code>headerLabel<\/code>"}},"getFooterLabel":{"!description":"Gets current value of property <code>footerLabel<\/code>.\n\nTexts which describes the landmark of the header container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), a predefined text\nis used.","!static":false,"!category":"function","!type":"fn() -> String"},"!description":"Settings for accessible landmarks which can be applied to the container elements of a <code>sap.m.Page<\/code> control.\nThese landmarks are e.g. used by assistive technologies (like screenreaders) to provide a meaningful page overview.","getMetadata":{"!description":"Returns a metadata object for class sap.m.PageAccessibleLandmarkInfo.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setFooterRole":{"!description":"Sets a new value for property <code>footerRole<\/code>.\n\nLandmark role of the footer container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Region<\/code>.","!static":false,"!category":"function","!type":"fn(sFooterRole: sap.ui.core.AccessibleLandmarkRole) -> sap.m.PageAccessibleLandmarkInfo","parameters":{"sFooterRole":"type: sap.ui.core.AccessibleLandmarkRole, description: New value for property <code>footerRole<\/code>"}},"getSubHeaderRole":{"!description":"Gets current value of property <code>subHeaderRole<\/code>.\n\nLandmark role of the subheader container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.AccessibleLandmarkRole"},"setRootRole":{"!description":"Sets a new value for property <code>rootRole<\/code>.\n\nLandmark role of the root container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Region<\/code>.","!static":false,"!category":"function","!type":"fn(sRootRole: sap.ui.core.AccessibleLandmarkRole) -> sap.m.PageAccessibleLandmarkInfo","parameters":{"sRootRole":"type: sap.ui.core.AccessibleLandmarkRole, description: New value for property <code>rootRole<\/code>"}},"getHeaderLabel":{"!description":"Gets current value of property <code>headerLabel<\/code>.\n\nTexts which describes the landmark of the header container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), a predefined text\nis used.","!static":false,"!category":"function","!type":"fn() -> String"},"setHeaderRole":{"!description":"Sets a new value for property <code>headerRole<\/code>.\n\nLandmark role of the header container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Region<\/code>.","!static":false,"!category":"function","!type":"fn(sHeaderRole: sap.ui.core.AccessibleLandmarkRole) -> sap.m.PageAccessibleLandmarkInfo","parameters":{"sHeaderRole":"type: sap.ui.core.AccessibleLandmarkRole, description: New value for property <code>headerRole<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.m.PageAccessibleLandmarkInfo with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/m/PageAccessibleLandmarkInfo","!helpDescription":"Settings for accessible landmarks which can be applied to the container elements of a <code>sap.m.Page<\/code> control.\nThese landmarks are e.g. used by assistive technologies (like screenreaders) to provide a meaningful page overview.","setSubHeaderLabel":{"!description":"Sets a new value for property <code>subHeaderLabel<\/code>.\n\nTexts which describes the landmark of the subheader container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), a predefined text\nis used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSubHeaderLabel: String) -> sap.m.PageAccessibleLandmarkInfo","parameters":{"sSubHeaderLabel":"type: string, description: New value for property <code>subHeaderLabel<\/code>"}},"setFooterLabel":{"!description":"Sets a new value for property <code>footerLabel<\/code>.\n\nTexts which describes the landmark of the header container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), a predefined text\nis used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sFooterLabel: String) -> sap.m.PageAccessibleLandmarkInfo","parameters":{"sFooterLabel":"type: string, description: New value for property <code>footerLabel<\/code>"}},"getContentRole":{"!description":"Gets current value of property <code>contentRole<\/code>.\n\nLandmark role of the content container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.\n\nDefault value is <code>Main<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.AccessibleLandmarkRole"},"getSubHeaderLabel":{"!description":"Gets current value of property <code>subHeaderLabel<\/code>.\n\nTexts which describes the landmark of the subheader container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf not set (and a landmark different than <code>sap.ui.core.AccessibleLandmarkRole.None<\/code> is defined), a predefined text\nis used.","!static":false,"!category":"function","!type":"fn() -> String"},"setSubHeaderRole":{"!description":"Sets a new value for property <code>subHeaderRole<\/code>.\n\nLandmark role of the subheader container of the corresponding <code>sap.m.Page<\/code> control.\n\nIf set to <code>sap.ui.core.AccessibleLandmarkRole.None<\/code>, no landmark will be added to the container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sSubHeaderRole: sap.ui.core.AccessibleLandmarkRole) -> sap.m.PageAccessibleLandmarkInfo","parameters":{"sSubHeaderRole":"type: sap.ui.core.AccessibleLandmarkRole, description: New value for property <code>subHeaderRole<\/code>"}}},"sap.m.semantic.AddAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.AddAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.AddAction"},"sap.m.ProgressIndicator_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ProgressIndicator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ProgressIndicator"},"sap.m.IconTabFilterDesign":{"!description":"Available Filter Item Design.","Vertical":{"!description":"A vertically layouted design using minimum horizontal space.","!category":"enum","!type":"String"},"Horizontal":{"!description":"A horizontally layouted design providing more space for texts.","!category":"enum","!type":"String"},"!module":"sap/m/library","!category":"static class"},"sap.m.MenuButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.MenuButton with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.MenuButton"},"sap.m.semantic.DetailPage_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.DetailPage with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.ShareMenuPage.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.DetailPage"},"sap.m.semantic.ForwardAction_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.semantic.ForwardAction with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.semantic.SemanticButton.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.semantic.ForwardAction"},"sap.m.Size":{"!description":"Enumeration of possible size settings.","Auto":{"!description":"The size of the tile depends on the device it is running on. It is medium size for desktop and tablet and small size for phone.","!category":"enum","!type":"String"},"S":{"!description":"Small size.","!category":"enum","!type":"String"},"!module":"sap/m/library","!category":"static class","XS":{"!description":"Extra small size.","!category":"enum","!type":"String"},"L":{"!description":"Large size.","!category":"enum","!type":"String"},"M":{"!description":"Medium size.","!category":"enum","!type":"String"}},"sap.m.IconTabBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.IconTabBar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.IconTabBar"},"sap.m.ObjectListItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.ObjectListItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.ListItemBase.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.m.ObjectListItem"},"sap.m.SlideTile":{"!description":"The control that displays multiple GenericTile controls as changing slides.","getMetadata":{"!description":"Returns a metadata object for class sap.m.SlideTile.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setTransitionTime":{"!description":"Sets a new value for property <code>transitionTime<\/code>.\n\nThe time of the slide changing in milliseconds.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>500<\/code>.","!static":false,"!category":"function","!type":"fn(iTransitionTime: Number) -> sap.m.SlideTile","parameters":{"iTransitionTime":"type: int, description: New value for property <code>transitionTime<\/code>"}},"addTile":{"!description":"Adds some tile to the aggregation <code>tiles<\/code>.","!static":false,"!category":"function","!type":"fn(oTile: sap.m.GenericTile) -> sap.m.SlideTile","parameters":{"oTile":"type: sap.m.GenericTile, description: the tile to add; if empty, nothing is inserted"}},"setDisplayTime":{"!description":"Sets a new value for property <code>displayTime<\/code>.\n\nThe time of the slide display in milliseconds.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>5000<\/code>.","!static":false,"!category":"function","!type":"fn(iDisplayTime: Number) -> sap.m.SlideTile","parameters":{"iDisplayTime":"type: int, description: New value for property <code>displayTime<\/code>"}},"!proto":"sap.ui.core.Control","removeTile":{"!description":"Removes a tile from the aggregation <code>tiles<\/code>.","!static":false,"!category":"function","!type":"fn(vTile: Number | String | sap.m.GenericTile) -> sap.m.GenericTile","parameters":{"vTile":"type: int|string|sap.m.GenericTile, description: The tileto remove or its index or id"}},"!category":"class","unbindTiles":{"!description":"Unbinds aggregation <code>tiles<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.m.SlideTile"},"removeAllTiles":{"!description":"Removes all the controls from the aggregation <code>tiles<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.m.GenericTile]"},"destroyTiles":{"!description":"Destroys all the tiles in the aggregation <code>tiles<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.m.SlideTile"},"extend":{"!description":"Creates a new subclass of class sap.m.SlideTile with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"insertTile":{"!description":"Inserts a tile into the aggregation <code>tiles<\/code>.","!static":false,"!category":"function","!type":"fn(oTile: sap.m.GenericTile, iIndex: Number) -> sap.m.SlideTile","parameters":{"iIndex":"type: int, description: the <code>0<\/code>-based index the tile should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the tile is inserted at position 0; for a value\n             greater than the current size of the aggregation, the tile is inserted at\n             the last position","oTile":"type: sap.m.GenericTile, description: the tile to insert; if empty, nothing is inserted"}},"getTransitionTime":{"!description":"Gets current value of property <code>transitionTime<\/code>.\n\nThe time of the slide changing in milliseconds.\n\nDefault value is <code>500<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!constructorDescription":"Constructor for a new sap.m.SlideTile control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDisplayTime displayTime} : int (default: 5000)<\/li>\n<li>{@link #getTransitionTime transitionTime} : int (default: 500)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTiles tiles} : sap.m.GenericTile[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/m/SlideTile","!helpDescription":"The control that displays multiple GenericTile controls as changing slides.","bindTiles":{"!description":"Binds aggregation <code>tiles<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.m.SlideTile","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"indexOfTile":{"!description":"Checks for the provided <code>sap.m.GenericTile<\/code> in the aggregation <code>tiles<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oTile: sap.m.GenericTile) -> Number","parameters":{"oTile":"type: sap.m.GenericTile, description: The tile whose index is looked for"}},"getDisplayTime":{"!description":"Gets current value of property <code>displayTime<\/code>.\n\nThe time of the slide display in milliseconds.\n\nDefault value is <code>5000<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getTiles":{"!description":"Gets content of aggregation <code>tiles<\/code>.\n\nThe set of Generic Tiles to be shown in the control.","!static":false,"!category":"function","!type":"fn() -> [sap.m.GenericTile]"}},"sap.m.P13nDimMeasureItem":{"!description":"Type for <code>columnsItems<\/code> aggregation in P13nDimMeasurePanel control.","setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nSpecifies the visibility of dimensions or measures.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.m.P13nDimMeasureItem","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.P13nDimMeasureItem.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nSpecifies the visibility of dimensions or measures.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getIndex":{"!description":"Gets current value of property <code>index<\/code>.\n\nSpecifies the order of visible dimensions or measures of a chart.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!proto":"sap.ui.core.Item","getRole":{"!description":"Gets current value of property <code>role<\/code>.\n\nSpecifies the role of dimensions or measures. The role determines how dimensions and measures influence the chart.","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.m.P13nDimMeasureItem with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getColumnKey":{"!description":"Gets current value of property <code>columnKey<\/code>.\n\nSpecifies the unique chart column key. In this context a column refers to dimensions or measures of a chart.","!static":false,"!category":"function","!type":"fn() -> String"},"setColumnKey":{"!description":"Sets a new value for property <code>columnKey<\/code>.\n\nSpecifies the unique chart column key. In this context a column refers to dimensions or measures of a chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sColumnKey: String) -> sap.m.P13nDimMeasureItem","parameters":{"sColumnKey":"type: string, description: New value for property <code>columnKey<\/code>"}},"!constructorDescription":"Constructor for a new P13nDimMeasureItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColumnKey columnKey} : string<\/li>\n<li>{@link #getIndex index} : int (default: -1)<\/li>\n<li>{@link #getVisible visible} : boolean<\/li>\n<li>{@link #getRole role} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","!module":"sap/m/P13nDimMeasureItem","!helpDescription":"Type for <code>columnsItems<\/code> aggregation in P13nDimMeasurePanel control.","setIndex":{"!description":"Sets a new value for property <code>index<\/code>.\n\nSpecifies the order of visible dimensions or measures of a chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn(iIndex: Number) -> sap.m.P13nDimMeasureItem","parameters":{"iIndex":"type: int, description: New value for property <code>index<\/code>"}},"setRole":{"!description":"Sets a new value for property <code>role<\/code>.\n\nSpecifies the role of dimensions or measures. The role determines how dimensions and measures influence the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sRole: String) -> sap.m.P13nDimMeasureItem","parameters":{"sRole":"type: string, description: New value for property <code>role<\/code>"}}},"sap.m.GrowingEnablement_obj":{"extend":{"!description":"Creates a new subclass of class sap.m.GrowingEnablement with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(oControl: sap.m.ListBase)","prototype":"sap.m.GrowingEnablement"},"sap.m.Link":{"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"getAccessibilityInfo":{"!static":false,"!category":"function","!type":"fn()"},"getWrapping":{"!description":"Gets current value of property <code>wrapping<\/code>.\n\nDetermines whether the link text is allowed to wrap when there is not sufficient space.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setSubtle":{"!description":"Sets a new value for property <code>subtle<\/code>.\n\nSubtle links look more like standard text than like links. They should only be used to help with visual hierarchy between large data lists of important and less important links. Subtle links should not be used in any other use case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSubtle: Boolean) -> sap.m.Link","parameters":{"bSubtle":"type: boolean, description: New value for property <code>subtle<\/code>"}},"!proto":"sap.ui.core.Control","getTextAlign":{"!description":"Gets current value of property <code>textAlign<\/code>.\n\nSets the horizontal alignment of the text.\n\nDefault value is <code>Initial<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextAlign"},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nWidth of the link (CSS-size such as % or px). When it is set, this is the exact size. When left blank, the text defines the size.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getSubtle":{"!description":"Gets current value of property <code>subtle<\/code>.\n\nSubtle links look more like standard text than like links. They should only be used to help with visual hierarchy between large data lists of important and less important links. Subtle links should not be used in any other use case.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTarget":{"!description":"Gets current value of property <code>target<\/code>.\n\nOptions are the standard values for window.open() supported by browsers: _self, _top, _blank, _parent, _search. Alternatively, a frame name can be entered. This property is only used when the href property is set.","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new Link.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getTarget target} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHref href} : sap.ui.core.URI<\/li>\n<li>{@link #getWrapping wrapping} : boolean (default: false)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Initial)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getSubtle subtle} : boolean (default: false)<\/li>\n<li>{@link #getEmphasized emphasized} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: String | sap.ui.core.Control) -> sap.m.Link","parameters":{"vAriaLabelledBy":"type: string|sap.ui.core.Control, description: the ariaLabelledBy to add; if empty, nothing is inserted"}},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nDetermines whether the link can be triggered by the user.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setWrapping":{"!description":"Sets a new value for property <code>wrapping<\/code>.\n\nDetermines whether the link text is allowed to wrap when there is not sufficient space.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bWrapping: Boolean) -> sap.m.Link","parameters":{"bWrapping":"type: boolean, description: New value for property <code>wrapping<\/code>"}},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn() -> [sap.ui.core.Control]"},"setTarget":{"!description":"Sets a new value for property <code>target<\/code>.\n\nOptions are the standard values for window.open() supported by browsers: _self, _top, _blank, _parent, _search. Alternatively, a frame name can be entered. This property is only used when the href property is set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTarget: String) -> sap.m.Link","parameters":{"sTarget":"type: string, description: New value for property <code>target<\/code>"}},"attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>press<\/code> event of this <code>sap.m.Link<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.m.Link<\/code> itself.\n\nEvent is fired when the user triggers the link control.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.m.Link","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.m.Link<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!description":"A hyperlink control which can be used to trigger actions or to navigate to other applications or web pages.","getHref":{"!description":"Gets current value of property <code>href<\/code>.\n\nThe link target URI. Supports standard hyperlink behavior. If a JavaScript action should be triggered, this should not be set, but instead an event handler for the \"press\" event should be registered.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.URI"},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named <code>ariaLabelledBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaLabelledBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaLabelledBy":"type: int|string|sap.ui.core.Control, description: The ariaLabelledByto be removed or its index or ID"}},"getMetadata":{"!description":"Returns a metadata object for class sap.m.Link.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getText":{"!description":"Gets current value of property <code>text<\/code>.\n\nLink text to be displayed.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setHref":{"!description":"Sets a new value for property <code>href<\/code>.\n\nThe link target URI. Supports standard hyperlink behavior. If a JavaScript action should be triggered, this should not be set, but instead an event handler for the \"press\" event should be registered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sHref: sap.ui.core.URI) -> sap.m.Link","parameters":{"sHref":"type: sap.ui.core.URI, description: New value for property <code>href<\/code>"}},"setTextAlign":{"!description":"Sets a new value for property <code>textAlign<\/code>.\n\nSets the horizontal alignment of the text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Initial<\/code>.","!static":false,"!category":"function","!type":"fn(sTextAlign: sap.ui.core.TextAlign) -> sap.m.Link","parameters":{"sTextAlign":"type: sap.ui.core.TextAlign, description: New value for property <code>textAlign<\/code>"}},"setTextDirection":{"!description":"Sets a new value for property <code>textDirection<\/code>.\n\nThis property specifies the element's text directionality with enumerated options. By default, the control inherits text direction from the parent DOM.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.m.Link","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"}},"getEmphasized":{"!description":"Gets current value of property <code>emphasized<\/code>.\n\nEmphasized links look visually more important than regular links.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nWidth of the link (CSS-size such as % or px). When it is set, this is the exact size. When left blank, the text defines the size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.m.Link","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: String | sap.ui.core.Control) -> sap.m.Link","parameters":{"vAriaDescribedBy":"type: string|sap.ui.core.Control, description: the ariaDescribedBy to add; if empty, nothing is inserted"}},"extend":{"!description":"Creates a new subclass of class sap.m.Link with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>press<\/code> event of this <code>sap.m.Link<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.m.Link","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"firePress":{"!description":"Fires event <code>press<\/code> to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> Boolean","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nDetermines whether the link can be triggered by the user.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.m.Link","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"!module":"sap/m/Link","!helpDescription":"A hyperlink control which can be used to trigger actions or to navigate to other applications or web pages.","removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named <code>ariaDescribedBy<\/code>.","!static":false,"!category":"function","!type":"fn(vAriaDescribedBy: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","parameters":{"vAriaDescribedBy":"type: int|string|sap.ui.core.Control, description: The ariaDescribedByto be removed or its index or ID"}},"setEmphasized":{"!description":"Sets a new value for property <code>emphasized<\/code>.\n\nEmphasized links look visually more important than regular links.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEmphasized: Boolean) -> sap.m.Link","parameters":{"bEmphasized":"type: boolean, description: New value for property <code>emphasized<\/code>"}},"getTextDirection":{"!description":"Gets current value of property <code>textDirection<\/code>.\n\nThis property specifies the element's text directionality with enumerated options. By default, the control inherits text direction from the parent DOM.\n\nDefault value is <code>Inherit<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.TextDirection"},"setText":{"!description":"Sets a new value for property <code>text<\/code>.\n\nLink text to be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!static":false,"!category":"function","!type":"fn(sText: String) -> sap.m.Link","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"}}}}}