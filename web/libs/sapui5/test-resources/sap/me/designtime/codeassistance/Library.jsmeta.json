{"!name":"sap.me","!version":"1.17.0","!define":{"sap.me":{"OverlapCalendarEvent":"sap.me.OverlapCalendarEvent_obj","currentDate":{"!description":"the center date where the month/week will be built around","!category":"enum","!type":"String"},"type":{"!description":"Type of the event. Display in the second label (no overlap)","!category":"enum","!type":"String"},"TabContainer":"sap.me.TabContainer_obj","percentValue":{"!description":"The numerical value for the displayed length of the progress bar.","!category":"enum","!type":"Number"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"singleRow":{"!description":"boolean that sets the view to week mode or month mode","!category":"enum","!type":"Boolean"},"badgeInfo":{"!description":"The number to display in the badge for the info tab","!category":"enum","!type":"Number"},"CalendarEventType":"sap.me.CalendarEventType","legendForNormal":{"!description":"legend for normal","!category":"enum","!type":"String"},"dayHeight":{"!description":"the height of a day","!category":"enum","!type":"Number"},"!description":"SAPUI5 library with controls specialized for mobile devices (extension).","visible":{"!description":"setter for visible property","!category":"enum","!type":"Boolean"},"months":{"!description":"Array of month names, default value is sap.m.getLocaleData().getMonths(\"abbreviated\")\nCheck sap.ui.core.LocaleData documentation for more info.","!category":"enum","!type":"Object"},"badgeNotes":{"!description":"The number to display in the badge for the notes tab","!category":"enum","!type":"Number"},"startDay":{"!description":"The first day of the event","!category":"enum","!type":"String"},"legendForToday":{"!description":"legend for today","!category":"enum","!type":"String"},"CalendarSelectionMode":"sap.me.CalendarSelectionMode","monthsToDisplay":{"!description":"number of months in a row.","!category":"enum","!type":"Number"},"hideNavControls":{"!description":"hides the area of navigation controls","!category":"enum","!type":"Boolean"},"disabledWeekDays":{"!description":"Array of weekDays (as integers where 0=Sunday, 1=Monday etc) to be disabled. Interaction will be disabled for these week days.","!category":"enum","!type":"Object"},"dayWidth":{"!description":"the width of a day","!category":"enum","!type":"Number"},"swipeToNavigate":{"!description":"Use swipe gesture to navigate","!category":"enum","!type":"Boolean"},"enableMultiselection":{"!description":"to enable multiselection feature","!category":"enum","!type":"Boolean"},"relevant":{"!description":"Indicates if this elements is relevant to be consider in the overlap","!category":"enum","!type":"Boolean"},"OverlapCalendar":"sap.me.OverlapCalendar_obj","legendForType04":{"!description":"legend for type 04","!category":"enum","!type":"String"},"!module":"sap/me/library","legendForType06":{"!description":"legend for type 06","!category":"enum","!type":"String"},"!helpDescription":"SAPUI5 library with controls specialized for mobile devices (extension).","legendForType07":{"!description":"legend for type 07","!category":"enum","!type":"String"},"name":{"!description":"Name of the row","!category":"enum","!type":"String"},"selectionMode":{"!description":"Indicates the design of the calendar (mainly colors)","!category":"enum","!type":"sap.me.CalendarSelectionMode"},"legendForType00":{"!description":"legend for type 00","!category":"enum","!type":"String"},"startDate":{"!description":"The first date to display for the calendar","!category":"enum","!type":"String"},"legendForType01":{"!description":"legend for type 01","!category":"enum","!type":"String"},"badgePeople":{"!description":"The number to display in the badge for the people tab","!category":"enum","!type":"Number"},"expandable":{"!description":"Indicates if the tab can be collapsed and expanded","!category":"enum","!type":"Boolean"},"badgeAttachments":{"!description":"The number to display in the badge for the attachments tab","!category":"enum","!type":"Number"},"weeksPerRow":{"!description":"Number of weeks","!category":"enum","!type":"Number"},"halfDay":{"!description":"Is this half a day","!category":"enum","!type":"Boolean"},"typeName":{"!description":"The CSS class to use","!category":"enum","!type":"String"},"!category":"namespace","barColor":{"!description":"The color of the bar. Enumeration sap.ui.core.BarColor provides CRITICAL (yellow), NEGATIVE (red), POSITIVE (green), NEUTRAL (blue) (default value).","!category":"enum","!type":"sap.ui.core.BarColor"},"enabled":{"!description":"Switches enabled state of the control. Disabled fields have different colors, and cannot be focused.","!category":"enum","!type":"Boolean"},"expanded":{"!description":"Indicates if the actual tab is expanded or not","!category":"enum","!type":"Boolean"},"ProgressIndicator":"sap.me.ProgressIndicator_obj","firstDayOffset":{"!description":"Indicate how to offset the first day in regards to a Sunday (by default)","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"hideMonthTitles":{"!description":"hides the area of month titles","!category":"enum","!type":"Boolean"},"design":{"!description":"design name for the legend","!category":"enum","!type":"sap.me.CalendarDesign"},"endDay":{"!description":"Last day of the event","!category":"enum","!type":"String"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!category":"enum","!type":"[String]"},"legendWidth":{"!description":"Indicates the legend items width","!category":"enum","!type":"sap.ui.core.CSSSize"},"disabledDates":{"!description":"Array of specific dates (strings or Date objects) that will be disabled/non interactive","!category":"enum","!type":"Object"},"row":{"!description":"Id of the row on which to place this event","!category":"enum","!type":"Number"},"monthsPerRow":{"!description":"months to display in a row. This sets the width of the whole control in order to contain the desired number of months per row","!category":"enum","!type":"Number"},"legendForSelected":{"!description":"legend for selected","!category":"enum","!type":"String"},"selectedTab":{"!description":"Return the index of the selected tab","!category":"enum","!type":"Number"},"legendForSelected00":{"!description":"legend for selected 00","!category":"enum","!type":"String"},"CalendarLegend":"sap.me.CalendarLegend_obj","Calendar":"sap.me.Calendar_obj","displayValue":{"!description":"The text value to be displayed in the bar.","!category":"enum","!type":"String"},"CalendarDesign":"sap.me.CalendarDesign","showValue":{"!description":"Specifies whether the current value shall be rendered inside the bar.","!category":"enum","!type":"Boolean"},"width":{"!description":"The width of the control.","!category":"enum","!type":"sap.ui.core.CSSSize"},"days":{"!description":"Array of day names, default value is sap.m.getLocaleData().getDays(\"abbreviated\")\nCheck sap.ui.core.LocaleData documentation for more info.","!category":"enum","!type":"Object"},"showOverlapIndicator":{"!description":"Do we want to display the overlap indicator","!category":"enum","!type":"Boolean"}},"sap.me.CalendarDesign":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","Action":{"!description":"Colors match calendar design for Action","!category":"enum","!type":"String"},"!module":"sap/me/library","!category":"static class","Approval":{"!description":"Colors match calendar design for Approval","!category":"enum","!type":"String"}},"sap":{"sap":"sap","me":"sap.me","!category":"namespace"},"sap.me.TabContainer":{"setBadgeNotes":{"!description":"Sets a new value for property <code>badgeNotes<\/code>.\n\nThe number to display in the badge for the notes tab\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iBadgeNotes: Number) -> sap.me.TabContainer","parameters":{"iBadgeNotes":"type: int, description: New value for property <code>badgeNotes<\/code>"}},"setContentInfo":{"!description":"Sets the aggregated <code>contentInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oContentInfo: sap.ui.core.Control) -> sap.me.TabContainer","parameters":{"oContentInfo":"type: sap.ui.core.Control, description: The contentInfo to set"}},"setBadgeInfo":{"!description":"Sets a new value for property <code>badgeInfo<\/code>.\n\nThe number to display in the badge for the info tab\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iBadgeInfo: Number) -> sap.me.TabContainer","parameters":{"iBadgeInfo":"type: int, description: New value for property <code>badgeInfo<\/code>"}},"setExpanded":{"!description":"Sets a new value for property <code>expanded<\/code>.\n\nIndicates if the actual tab is expanded or not\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bExpanded: Boolean) -> sap.me.TabContainer","parameters":{"bExpanded":"type: boolean, description: New value for property <code>expanded<\/code>"}},"fireSelect":{"!description":"Fires event <code>select<\/code> to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> Boolean","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>select<\/code> event of this <code>sap.me.TabContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.me.TabContainer<\/code> itself.\n\nIndicates that the selected tab has changed","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.me.TabContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.me.TabContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"!proto":"sap.ui.core.Control","!category":"class","getContentPeople":{"!description":"Gets content of aggregation <code>contentPeople<\/code>.\n\nThe people tab","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"fireExpand":{"!description":"Fires event <code>expand<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.me.TabContainer","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getContentInfo":{"!description":"Gets content of aggregation <code>contentInfo<\/code>.\n\nThe info tab","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"setBadgeAttachments":{"!description":"Sets a new value for property <code>badgeAttachments<\/code>.\n\nThe number to display in the badge for the attachments tab\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iBadgeAttachments: Number) -> sap.me.TabContainer","parameters":{"iBadgeAttachments":"type: int, description: New value for property <code>badgeAttachments<\/code>"}},"!constructorDescription":"Constructor for a new TabContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSelectedTab selectedTab} : int<\/li>\n<li>{@link #getBadgeInfo badgeInfo} : int<\/li>\n<li>{@link #getBadgeNotes badgeNotes} : int<\/li>\n<li>{@link #getBadgeAttachments badgeAttachments} : int<\/li>\n<li>{@link #getBadgePeople badgePeople} : int<\/li>\n<li>{@link #getExpandable expandable} : boolean (default: true)<\/li>\n<li>{@link #getExpanded expanded} : boolean (default: true)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContentInfo contentInfo} : sap.ui.core.Control<\/li>\n<li>{@link #getContentAttachments contentAttachments} : sap.ui.core.Control<\/li>\n<li>{@link #getContentNotes contentNotes} : sap.ui.core.Control<\/li>\n<li>{@link #getContentPeople contentPeople} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:expand expand} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:collapse collapse} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","destroyContentAttachments":{"!description":"Destroys the contentAttachments in the aggregation <code>contentAttachments<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.me.TabContainer"},"setContentNotes":{"!description":"Sets the aggregated <code>contentNotes<\/code>.","!static":false,"!category":"function","!type":"fn(oContentNotes: sap.ui.core.Control) -> sap.me.TabContainer","parameters":{"oContentNotes":"type: sap.ui.core.Control, description: The contentNotes to set"}},"destroyContentPeople":{"!description":"Destroys the contentPeople in the aggregation <code>contentPeople<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.me.TabContainer"},"getExpandable":{"!description":"Gets current value of property <code>expandable<\/code>.\n\nIndicates if the tab can be collapsed and expanded\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setSelectedTab":{"!description":"Sets a new value for property <code>selectedTab<\/code>.\n\nReturn the index of the selected tab\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iSelectedTab: Number) -> sap.me.TabContainer","parameters":{"iSelectedTab":"type: int, description: New value for property <code>selectedTab<\/code>"}},"destroyContentInfo":{"!description":"Destroys the contentInfo in the aggregation <code>contentInfo<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.me.TabContainer"},"getContentAttachments":{"!description":"Gets content of aggregation <code>contentAttachments<\/code>.\n\nThe attachments tab","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"setBadgePeople":{"!description":"Sets a new value for property <code>badgePeople<\/code>.\n\nThe number to display in the badge for the people tab\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(iBadgePeople: Number) -> sap.me.TabContainer","parameters":{"iBadgePeople":"type: int, description: New value for property <code>badgePeople<\/code>"}},"destroyContentNotes":{"!description":"Destroys the contentNotes in the aggregation <code>contentNotes<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.me.TabContainer"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.0 The functionality of this control is merged with the sap.m.IconTabBar.\nPlease use the sap.m.IconTabBar instead!\nThis control will not be supported anymore.<br>The TabContainer allow to stack 1 to 4 contents in a\nview with corresponding icons","setExpandable":{"!description":"Sets a new value for property <code>expandable<\/code>.\n\nIndicates if the tab can be collapsed and expanded\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bExpandable: Boolean) -> sap.me.TabContainer","parameters":{"bExpandable":"type: boolean, description: New value for property <code>expandable<\/code>"}},"setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nsetter for visible property\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.me.TabContainer","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"attachCollapse":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>collapse<\/code> event of this <code>sap.me.TabContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.me.TabContainer<\/code> itself.\n\nIndicates that the tab will collapse","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.me.TabContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.me.TabContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getMetadata":{"!description":"Returns a metadata object for class sap.me.TabContainer.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getBadgeAttachments":{"!description":"Gets current value of property <code>badgeAttachments<\/code>.\n\nThe number to display in the badge for the attachments tab","!static":false,"!category":"function","!type":"fn() -> Number"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nsetter for visible property\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setContentAttachments":{"!description":"Sets the aggregated <code>contentAttachments<\/code>.","!static":false,"!category":"function","!type":"fn(oContentAttachments: sap.ui.core.Control) -> sap.me.TabContainer","parameters":{"oContentAttachments":"type: sap.ui.core.Control, description: The contentAttachments to set"}},"getBadgeNotes":{"!description":"Gets current value of property <code>badgeNotes<\/code>.\n\nThe number to display in the badge for the notes tab","!static":false,"!category":"function","!type":"fn() -> Number"},"setContentPeople":{"!description":"Sets the aggregated <code>contentPeople<\/code>.","!static":false,"!category":"function","!type":"fn(oContentPeople: sap.ui.core.Control) -> sap.me.TabContainer","parameters":{"oContentPeople":"type: sap.ui.core.Control, description: The contentPeople to set"}},"getExpanded":{"!description":"Gets current value of property <code>expanded<\/code>.\n\nIndicates if the actual tab is expanded or not\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getContentNotes":{"!description":"Gets content of aggregation <code>contentNotes<\/code>.\n\nThe notes tab","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.Control"},"getBadgeInfo":{"!description":"Gets current value of property <code>badgeInfo<\/code>.\n\nThe number to display in the badge for the info tab","!static":false,"!category":"function","!type":"fn() -> Number"},"attachExpand":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>expand<\/code> event of this <code>sap.me.TabContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.me.TabContainer<\/code> itself.\n\nIndicates that the tab will expand","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.me.TabContainer","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.me.TabContainer<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"extend":{"!description":"Creates a new subclass of class sap.me.TabContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"detachExpand":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>expand<\/code> event of this <code>sap.me.TabContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.me.TabContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"!module":"sap/me/TabContainer","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.0 The functionality of this control is merged with the sap.m.IconTabBar.\nPlease use the sap.m.IconTabBar instead!\nThis control will not be supported anymore.<br>The TabContainer allow to stack 1 to 4 contents in a\nview with corresponding icons","fireCollapse":{"!description":"Fires event <code>collapse<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.me.TabContainer","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>select<\/code> event of this <code>sap.me.TabContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.me.TabContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getBadgePeople":{"!description":"Gets current value of property <code>badgePeople<\/code>.\n\nThe number to display in the badge for the people tab","!static":false,"!category":"function","!type":"fn() -> Number"},"detachCollapse":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>collapse<\/code> event of this <code>sap.me.TabContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.me.TabContainer","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getSelectedTab":{"!description":"Gets current value of property <code>selectedTab<\/code>.\n\nReturn the index of the selected tab","!static":false,"!category":"function","!type":"fn() -> Number"}},"sap.me.ProgressIndicator_obj":{"extend":{"!description":"Creates a new subclass of class sap.me.ProgressIndicator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.me.ProgressIndicator"},"sap.me.CalendarLegend_obj":{"extend":{"!description":"Creates a new subclass of class sap.me.CalendarLegend with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.me.CalendarLegend"},"sap.me.CalendarEventType":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!module":"sap/me/library","Type06":{"!description":"Type 06 (public holiday)","!category":"enum","!type":"String"},"Type07":{"!description":"Type 07 (deletion requested / your action needed)","!category":"enum","!type":"String"},"!category":"static class","Type04":{"!description":"Type 04 (open request / manager action needed)","!category":"enum","!type":"String"},"Type10":{"!description":"Type 10 (workday)","!category":"enum","!type":"String"},"Type00":{"!description":"Type 00 (non-working day (e.g. weekend))","!category":"enum","!type":"String"},"Type01":{"!description":"Type 01 (nonattendance / submitted day)","!category":"enum","!type":"String"}},"sap.me.CalendarLegend":{"setLegendForSelected":{"!description":"Sets a new value for property <code>legendForSelected<\/code>.\n\nlegend for selected\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLegendForSelected: String) -> sap.me.CalendarLegend","parameters":{"sLegendForSelected":"type: string, description: New value for property <code>legendForSelected<\/code>"}},"getLegendForToday":{"!description":"Gets current value of property <code>legendForToday<\/code>.\n\nlegend for today","!static":false,"!category":"function","!type":"fn() -> String"},"setExpanded":{"!description":"Sets a new value for property <code>expanded<\/code>.\n\nIndicates if the legend is expanded or not\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bExpanded: Boolean) -> sap.me.CalendarLegend","parameters":{"bExpanded":"type: boolean, description: New value for property <code>expanded<\/code>"}},"getLegendForSelected00":{"!description":"Gets current value of property <code>legendForSelected00<\/code>.\n\nlegend for selected 00","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Control","!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nIndicates the whole component width\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getLegendForNormal":{"!description":"Gets current value of property <code>legendForNormal<\/code>.\n\nlegend for normal","!static":false,"!category":"function","!type":"fn() -> String"},"!constructorDescription":"Constructor for a new CalendarLegend.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLegendForType00 legendForType00} : string<\/li>\n<li>{@link #getLegendForType01 legendForType01} : string<\/li>\n<li>{@link #getLegendForType04 legendForType04} : string<\/li>\n<li>{@link #getLegendForType06 legendForType06} : string<\/li>\n<li>{@link #getLegendForType07 legendForType07} : string<\/li>\n<li>{@link #getLegendForToday legendForToday} : string<\/li>\n<li>{@link #getLegendForSelected legendForSelected} : string<\/li>\n<li>{@link #getLegendForSelected00 legendForSelected00} : string<\/li>\n<li>{@link #getLegendForNormal legendForNormal} : string<\/li>\n<li>{@link #getExpandable expandable} : boolean (default: true)<\/li>\n<li>{@link #getExpanded expanded} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getLegendWidth legendWidth} : sap.ui.core.CSSSize (default: 12.5rem)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getDesign design} : sap.me.CalendarDesign (default: Approval)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setLegendForNormal":{"!description":"Sets a new value for property <code>legendForNormal<\/code>.\n\nlegend for normal\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLegendForNormal: String) -> sap.me.CalendarLegend","parameters":{"sLegendForNormal":"type: string, description: New value for property <code>legendForNormal<\/code>"}},"getExpandable":{"!description":"Gets current value of property <code>expandable<\/code>.\n\nIndicates if the legend can be collapsed and expanded\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getLegendForSelected":{"!description":"Gets current value of property <code>legendForSelected<\/code>.\n\nlegend for selected","!static":false,"!category":"function","!type":"fn() -> String"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34.0 This control was experimental since 1.12. Please use the sap.ui.unified.CalendarLegend instead!<br>Legend for the calendar control","setExpandable":{"!description":"Sets a new value for property <code>expandable<\/code>.\n\nIndicates if the legend can be collapsed and expanded\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bExpandable: Boolean) -> sap.me.CalendarLegend","parameters":{"bExpandable":"type: boolean, description: New value for property <code>expandable<\/code>"}},"setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nIndicates if the legend is visible\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.me.CalendarLegend","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.me.CalendarLegend.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nIndicates if the legend is visible\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getLegendForType01":{"!description":"Gets current value of property <code>legendForType01<\/code>.\n\nlegend for type 01","!static":false,"!category":"function","!type":"fn() -> String"},"getLegendForType00":{"!description":"Gets current value of property <code>legendForType00<\/code>.\n\nlegend for type 00","!static":false,"!category":"function","!type":"fn() -> String"},"getExpanded":{"!description":"Gets current value of property <code>expanded<\/code>.\n\nIndicates if the legend is expanded or not\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setLegendWidth":{"!description":"Sets a new value for property <code>legendWidth<\/code>.\n\nIndicates the legend items width\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>12.5rem<\/code>.","!static":false,"!category":"function","!type":"fn(sLegendWidth: sap.ui.core.CSSSize) -> sap.me.CalendarLegend","parameters":{"sLegendWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>legendWidth<\/code>"}},"getLegendForType04":{"!description":"Gets current value of property <code>legendForType04<\/code>.\n\nlegend for type 04","!static":false,"!category":"function","!type":"fn() -> String"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nIndicates the whole component width\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.me.CalendarLegend","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"getLegendForType07":{"!description":"Gets current value of property <code>legendForType07<\/code>.\n\nlegend for type 07","!static":false,"!category":"function","!type":"fn() -> String"},"getLegendForType06":{"!description":"Gets current value of property <code>legendForType06<\/code>.\n\nlegend for type 06","!static":false,"!category":"function","!type":"fn() -> String"},"extend":{"!description":"Creates a new subclass of class sap.me.CalendarLegend with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!module":"sap/me/CalendarLegend","getDesign":{"!description":"Gets current value of property <code>design<\/code>.\n\ndesign name for the legend\n\nDefault value is <code>Approval<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.me.CalendarDesign"},"setLegendForType00":{"!description":"Sets a new value for property <code>legendForType00<\/code>.\n\nlegend for type 00\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLegendForType00: String) -> sap.me.CalendarLegend","parameters":{"sLegendForType00":"type: string, description: New value for property <code>legendForType00<\/code>"}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34.0 This control was experimental since 1.12. Please use the sap.ui.unified.CalendarLegend instead!<br>Legend for the calendar control","setLegendForType01":{"!description":"Sets a new value for property <code>legendForType01<\/code>.\n\nlegend for type 01\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLegendForType01: String) -> sap.me.CalendarLegend","parameters":{"sLegendForType01":"type: string, description: New value for property <code>legendForType01<\/code>"}},"setDesign":{"!description":"Sets a new value for property <code>design<\/code>.\n\ndesign name for the legend\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Approval<\/code>.","!static":false,"!category":"function","!type":"fn(sDesign: sap.me.CalendarDesign) -> sap.me.CalendarLegend","parameters":{"sDesign":"type: sap.me.CalendarDesign, description: New value for property <code>design<\/code>"}},"setLegendForToday":{"!description":"Sets a new value for property <code>legendForToday<\/code>.\n\nlegend for today\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLegendForToday: String) -> sap.me.CalendarLegend","parameters":{"sLegendForToday":"type: string, description: New value for property <code>legendForToday<\/code>"}},"setLegendForType04":{"!description":"Sets a new value for property <code>legendForType04<\/code>.\n\nlegend for type 04\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLegendForType04: String) -> sap.me.CalendarLegend","parameters":{"sLegendForType04":"type: string, description: New value for property <code>legendForType04<\/code>"}},"setLegendForType06":{"!description":"Sets a new value for property <code>legendForType06<\/code>.\n\nlegend for type 06\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLegendForType06: String) -> sap.me.CalendarLegend","parameters":{"sLegendForType06":"type: string, description: New value for property <code>legendForType06<\/code>"}},"getLegendWidth":{"!description":"Gets current value of property <code>legendWidth<\/code>.\n\nIndicates the legend items width\n\nDefault value is <code>12.5rem<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setLegendForType07":{"!description":"Sets a new value for property <code>legendForType07<\/code>.\n\nlegend for type 07\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLegendForType07: String) -> sap.me.CalendarLegend","parameters":{"sLegendForType07":"type: string, description: New value for property <code>legendForType07<\/code>"}},"setLegendForSelected00":{"!description":"Sets a new value for property <code>legendForSelected00<\/code>.\n\nlegend for selected 00\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLegendForSelected00: String) -> sap.me.CalendarLegend","parameters":{"sLegendForSelected00":"type: string, description: New value for property <code>legendForSelected00<\/code>"}}},"sap.me.OverlapCalendar_obj":{"extend":{"!description":"Creates a new subclass of class sap.me.OverlapCalendar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.me.OverlapCalendar"},"sap.me.TabContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.me.TabContainer with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.me.TabContainer"},"sap.me.OverlapCalendarEvent_obj":{"extend":{"!description":"Creates a new subclass of class sap.me.OverlapCalendarEvent with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.me.OverlapCalendarEvent"},"sap.me.OverlapCalendar":{"getStartDate":{"!description":"Gets current value of property <code>startDate<\/code>.\n\nThe first date to display for the calendar","!static":false,"!category":"function","!type":"fn() -> String"},"removeCalendarEvent":{"!description":"Removes a calendarEvent from the aggregation <code>calendarEvents<\/code>.","!static":false,"!category":"function","!type":"fn(vCalendarEvent: Number | String | sap.me.OverlapCalendarEvent) -> sap.me.OverlapCalendarEvent","parameters":{"vCalendarEvent":"type: int|string|sap.me.OverlapCalendarEvent, description: The calendarEventto remove or its index or id"}},"!proto":"sap.ui.core.Control","addCalendarEvent":{"!description":"Adds some calendarEvent to the aggregation <code>calendarEvents<\/code>.","!static":false,"!category":"function","!type":"fn(oCalendarEvent: sap.me.OverlapCalendarEvent) -> sap.me.OverlapCalendar","parameters":{"oCalendarEvent":"type: sap.me.OverlapCalendarEvent, description: the calendarEvent to add; if empty, nothing is inserted"}},"!category":"class","attachChangeDate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>changeDate<\/code> event of this <code>sap.me.OverlapCalendar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.me.OverlapCalendar<\/code> itself.\n\nTriggered when the displayed dates change","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.me.OverlapCalendar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.me.OverlapCalendar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe width of the calendar\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setWeeksPerRow":{"!static":false,"!category":"function","!type":"fn(iWeeksPerRow: Number)","parameters":{"iWeeksPerRow":"type: number, description: The integer number of weeks per row"}},"getCalendar":{"!static":false,"!category":"function","!type":"fn() -> sap.me.Calendar"},"attachEndOfData":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>endOfData<\/code> event of this <code>sap.me.OverlapCalendar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.me.OverlapCalendar<\/code> itself.\n\nIndicates that we have reach the last week with data","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.me.OverlapCalendar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.me.OverlapCalendar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getCalendarEvents":{"!description":"Gets content of aggregation <code>calendarEvents<\/code>.\n\nThe list of events to display in the calendar grid","!static":false,"!category":"function","!type":"fn() -> [sap.me.OverlapCalendarEvent]"},"destroyCalendarEvents":{"!description":"Destroys all the calendarEvents in the aggregation <code>calendarEvents<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.me.OverlapCalendar"},"!constructorDescription":"Constructor for a new OverlapCalendar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getStartDate startDate} : string<\/li>\n<li>{@link #getWeeksPerRow weeksPerRow} : int (default: 2)<\/li>\n<li>{@link #getFirstDayOffset firstDayOffset} : int (default: 0)<\/li>\n<li>{@link #getShowOverlapIndicator showOverlapIndicator} : boolean (default: false)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getSwipeToNavigate swipeToNavigate} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCalendarEvents calendarEvents} : sap.me.OverlapCalendarEvent[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:endOfData endOfData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:changeDate changeDate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","detachEndOfData":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>endOfData<\/code> event of this <code>sap.me.OverlapCalendar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.me.OverlapCalendar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"insertCalendarEvent":{"!description":"Inserts a calendarEvent into the aggregation <code>calendarEvents<\/code>.","!static":false,"!category":"function","!type":"fn(oCalendarEvent: sap.me.OverlapCalendarEvent, iIndex: Number) -> sap.me.OverlapCalendar","parameters":{"oCalendarEvent":"type: sap.me.OverlapCalendarEvent, description: the calendarEvent to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the calendarEvent should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the calendarEvent is inserted at position 0; for a value\n             greater than the current size of the aggregation, the calendarEvent is inserted at\n             the last position"}},"fireEndOfData":{"!description":"Fires event <code>endOfData<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>before<\/code> of type <code>boolean<\/code>Indicates if the data missing are before the start date or at the end<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.me.OverlapCalendar","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getWeeksPerRow":{"!description":"Gets current value of property <code>weeksPerRow<\/code>.\n\nNumber of weeks\n\nDefault value is <code>2<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setShowOverlapIndicator":{"!description":"Sets a new value for property <code>showOverlapIndicator<\/code>.\n\nDo we want to display the overlap indicator\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bShowOverlapIndicator: Boolean) -> sap.me.OverlapCalendar","parameters":{"bShowOverlapIndicator":"type: boolean, description: New value for property <code>showOverlapIndicator<\/code>"}},"getSwipeToNavigate":{"!description":"Gets current value of property <code>swipeToNavigate<\/code>.\n\nUse swipe gesture to navigate\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"onAfterRendering":{"!static":false,"!category":"function","!type":"fn()"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34.0 This control was experimental since 1.12. Please use the sap.m.TeamCalendar instead!<br>A calendar that allows to display events in a grid and show the overlapped events","setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nIndicates if we should render this component\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.me.OverlapCalendar","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"setStartDate":{"!static":false,"!category":"function","!type":"fn(sDate: String | Date)","parameters":{"sDate":"type: string|Date, description: The start date, expected toDateString."}},"getMetadata":{"!description":"Returns a metadata object for class sap.me.OverlapCalendar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"onBeforeRendering":{"!static":false,"!category":"function","!type":"fn()"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nIndicates if we should render this component\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setSwipeToNavigate":{"!static":false,"!category":"function","!type":"fn(bSwipe: Boolean)","parameters":{"bSwipe":"type: boolean, description: undefined"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe width of the calendar\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.me.OverlapCalendar","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.me.OverlapCalendar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getShowOverlapIndicator":{"!description":"Gets current value of property <code>showOverlapIndicator<\/code>.\n\nDo we want to display the overlap indicator\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"removeAllCalendarEvents":{"!description":"Removes all the controls from the aggregation <code>calendarEvents<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.me.OverlapCalendarEvent]"},"detachChangeDate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>changeDate<\/code> event of this <code>sap.me.OverlapCalendar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.me.OverlapCalendar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"indexOfCalendarEvent":{"!description":"Checks for the provided <code>sap.me.OverlapCalendarEvent<\/code> in the aggregation <code>calendarEvents<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oCalendarEvent: sap.me.OverlapCalendarEvent) -> Number","parameters":{"oCalendarEvent":"type: sap.me.OverlapCalendarEvent, description: The calendarEvent whose index is looked for"}},"onswipeleft":{"!static":false,"!category":"function","!type":"fn(oEvent: event)","parameters":{"oEvent":"type: event, description: undefined"}},"!module":"sap/me/OverlapCalendar","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34.0 This control was experimental since 1.12. Please use the sap.m.TeamCalendar instead!<br>A calendar that allows to display events in a grid and show the overlapped events","getFirstDayOffset":{"!description":"Gets current value of property <code>firstDayOffset<\/code>.\n\nIndicate how to offset the first day in regards to a Sunday (by default)\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setFirstDayOffset":{"!description":"Sets a new value for property <code>firstDayOffset<\/code>.\n\nIndicate how to offset the first day in regards to a Sunday (by default)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iFirstDayOffset: Number) -> sap.me.OverlapCalendar","parameters":{"iFirstDayOffset":"type: int, description: New value for property <code>firstDayOffset<\/code>"}},"fireChangeDate":{"!description":"Fires event <code>changeDate<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>firstDate<\/code> of type <code>object<\/code>The first date displayed in the calendar<\/li>\n<li><code>lastDate<\/code> of type <code>object<\/code>The last date that will be displayed<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.me.OverlapCalendar","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"onswiperight":{"!static":false,"!category":"function","!type":"fn(oEvent: event)","parameters":{"oEvent":"type: event, description: undefined"}}},"sap.me.Calendar_obj":{"extend":{"!description":"Creates a new subclass of class sap.me.Calendar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.me.Calendar"},"sap.me.CalendarSelectionMode":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","SINGLE":{"!description":"Can only select one date","!category":"enum","!type":"String"},"!module":"sap/me/library","!category":"static class","MULTIPLE":{"!description":"Can select multiple dates and ranges","!category":"enum","!type":"String"},"RANGE":{"!description":"Can select a range of dates","!category":"enum","!type":"String"}},"sap.me.Calendar":{"getDayWidth":{"!description":"Gets current value of property <code>dayWidth<\/code>.\n\nthe width of a day\n\nDefault value is <code>45<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"unselectAllDates":{"!description":"unselect all the dates","!static":false,"!category":"function","!type":"fn()"},"fireChangeRange":{"!description":"Fires event <code>changeRange<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>fromDate<\/code> of type <code>string<\/code>from date<\/li>\n<li><code>toDate<\/code> of type <code>string<\/code>to date<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.me.Calendar","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getEnableMultiselection":{"!description":"Gets current value of property <code>enableMultiselection<\/code>.\n\nto enable multiselection feature\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setDisabledWeekDays":{"!description":"Sets a new value for property <code>disabledWeekDays<\/code>.\n\nArray of weekDays (as integers where 0=Sunday, 1=Monday etc) to be disabled. Interaction will be disabled for these week days.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oDisabledWeekDays: Object) -> sap.me.Calendar","parameters":{"oDisabledWeekDays":"type: any, description: New value for property <code>disabledWeekDays<\/code>"}},"fireChangeCurrentDate":{"!description":"Fires event <code>changeCurrentDate<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>currentDate<\/code> of type <code>string<\/code>new date<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.me.Calendar","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getMonths":{"!description":"Gets current value of property <code>months<\/code>.\n\nArray of month names, default value is sap.m.getLocaleData().getMonths(\"abbreviated\")\nCheck sap.ui.core.LocaleData documentation for more info.","!static":false,"!category":"function","!type":"fn() -> Object"},"toggleDatesType":{"!description":"Change the type of the given dates","!static":false,"!category":"function","!type":"fn(aDates: Object, sType: sap.me.CalendarEventType, bSelected: Boolean)","parameters":{"sType":"type: sap.me.CalendarEventType, description: The type of event","aDates":"type: any, description: An array of dates in string representation","bSelected":"type: boolean, description: Add/remove the type, if ommited it will toggle"}},"setCurrentDate":{"!description":"Sets the current date of the calendar.","!static":false,"!category":"function","!type":"fn(strDate: String) -> sap.me.Calendar","parameters":{"strDate":"type: String, description: The Date to set, the format being identical to a date string produced by \"toDateString\"."}},"setDays":{"!description":"Sets a new value for property <code>days<\/code>.\n\nArray of day names, default value is sap.m.getLocaleData().getDays(\"abbreviated\")\nCheck sap.ui.core.LocaleData documentation for more info.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oDays: Object) -> sap.me.Calendar","parameters":{"oDays":"type: any, description: New value for property <code>days<\/code>"}},"detachChangeRange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>changeRange<\/code> event of this <code>sap.me.Calendar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.me.Calendar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setMonthsPerRow":{"!description":"Sets a new value for property <code>monthsPerRow<\/code>.\n\nmonths to display in a row. This sets the width of the whole control in order to contain the desired number of months per row\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn(iMonthsPerRow: Number) -> sap.me.Calendar","parameters":{"iMonthsPerRow":"type: int, description: New value for property <code>monthsPerRow<\/code>"}},"getSwipeToNavigate":{"!description":"Gets current value of property <code>swipeToNavigate<\/code>.\n\nWhen enabled, swipe gestures will navigate and not select\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setSingleRow":{"!description":"Sets a new value for property <code>singleRow<\/code>.\n\nboolean that sets the view to week mode or month mode\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bSingleRow: Boolean) -> sap.me.Calendar","parameters":{"bSingleRow":"type: boolean, description: New value for property <code>singleRow<\/code>"}},"setDayHeight":{"!description":"Sets a new value for property <code>dayHeight<\/code>.\n\nthe height of a day\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>50<\/code>.","!static":false,"!category":"function","!type":"fn(iDayHeight: Number) -> sap.me.Calendar","parameters":{"iDayHeight":"type: int, description: New value for property <code>dayHeight<\/code>"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26.0 This control was experimental since 1.12. Please use the sap.ui.unified.Calendar instead!<br>This is the Calendar control","setHideNavControls":{"!description":"Sets a new value for property <code>hideNavControls<\/code>.\n\nhides the area of navigation controls\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bHideNavControls: Boolean) -> sap.me.Calendar","parameters":{"bHideNavControls":"type: boolean, description: New value for property <code>hideNavControls<\/code>"}},"setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nvisibility of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.me.Calendar","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getDisabledDates":{"!description":"Gets current value of property <code>disabledDates<\/code>.\n\nArray of specific dates (strings or Date objects) that will be disabled/non interactive","!static":false,"!category":"function","!type":"fn() -> Object"},"getMetadata":{"!description":"Returns a metadata object for class sap.me.Calendar.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nvisibility of the control\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachChangeRange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>changeRange<\/code> event of this <code>sap.me.Calendar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.me.Calendar<\/code> itself.\n\nwhen the range of selected dates changes","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.me.Calendar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.me.Calendar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setMonthsToDisplay":{"!description":"Sets a new value for property <code>monthsToDisplay<\/code>.\n\nnumber of months in a row.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn(iMonthsToDisplay: Number) -> sap.me.Calendar","parameters":{"iMonthsToDisplay":"type: int, description: New value for property <code>monthsToDisplay<\/code>"}},"setSwipeToNavigate":{"!description":"Sets a new value for property <code>swipeToNavigate<\/code>.\n\nWhen enabled, swipe gestures will navigate and not select\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bSwipeToNavigate: Boolean) -> sap.me.Calendar","parameters":{"bSwipeToNavigate":"type: boolean, description: New value for property <code>swipeToNavigate<\/code>"}},"setSelectionMode":{"!description":"Sets a new value for property <code>selectionMode<\/code>.\n\nIndicates the design of the calendar (mainly colors)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>SINGLE<\/code>.","!static":false,"!category":"function","!type":"fn(sSelectionMode: sap.me.CalendarSelectionMode) -> sap.me.Calendar","parameters":{"sSelectionMode":"type: sap.me.CalendarSelectionMode, description: New value for property <code>selectionMode<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.me.Calendar with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"toggleDatesSelection":{"!description":"it toggles the passed dates to selected/unselected","!static":false,"!category":"function","!type":"fn(aDates: Object, bSelected: Boolean)","parameters":{"aDates":"type: any, description: Array of the dates to be toggled. they can be Strings or Date objects.","bSelected":"type: boolean, description: select/unselect. Optional, if omitted it inverts each date's current state"}},"getDays":{"!description":"Gets current value of property <code>days<\/code>.\n\nArray of day names, default value is sap.m.getLocaleData().getDays(\"abbreviated\")\nCheck sap.ui.core.LocaleData documentation for more info.","!static":false,"!category":"function","!type":"fn() -> Object"},"!module":"sap/me/Calendar","getCurrentDate":{"!description":"Gets current value of property <code>currentDate<\/code>.\n\nthe center date where the month/week will be built around","!static":false,"!category":"function","!type":"fn() -> String"},"getDesign":{"!description":"Gets current value of property <code>design<\/code>.\n\nIndicates the design of the calendar (mainly colors)\n\nDefault value is <code>Approval<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.me.CalendarDesign"},"parseDate":{"!description":"Helper function to instantiate a Date from the string(s) provided\nby the getCurrentDate, getSelectedDates methods.\n<B>IMPORTANT:<\/B> The only valid values for the created Date are: year, month, day.\nDisregard any other value: hours, minutes, seconds, milliseconds...","!static":true,"!category":"function","!type":"fn(strDate: String) -> Date","parameters":{"strDate":"type: String, description: The date, produced by a former call to Date.toDateString."}},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.26.0 This control was experimental since 1.12. Please use the sap.ui.unified.Calendar instead!<br>This is the Calendar control","getFirstDayOffset":{"!description":"Gets current value of property <code>firstDayOffset<\/code>.\n\nto offset the first day of the week (0 = sunday)\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setDayWidth":{"!description":"Sets a new value for property <code>dayWidth<\/code>.\n\nthe width of a day\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>45<\/code>.","!static":false,"!category":"function","!type":"fn(iDayWidth: Number) -> sap.me.Calendar","parameters":{"iDayWidth":"type: int, description: New value for property <code>dayWidth<\/code>"}},"setFirstDayOffset":{"!description":"Sets a new value for property <code>firstDayOffset<\/code>.\n\nto offset the first day of the week (0 = sunday)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn(iFirstDayOffset: Number) -> sap.me.Calendar","parameters":{"iFirstDayOffset":"type: int, description: New value for property <code>firstDayOffset<\/code>"}},"getMonthsPerRow":{"!description":"Gets current value of property <code>monthsPerRow<\/code>.\n\nmonths to display in a row. This sets the width of the whole control in order to contain the desired number of months per row\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"detachChangeCurrentDate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>changeCurrentDate<\/code> event of this <code>sap.me.Calendar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.me.Calendar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"toggleDatesRangeSelection":{"!description":"it toggles the selection of the dates within the passed range to selected/unselected","!static":false,"!category":"function","!type":"fn(oDateStart: Object, oDateEnd: Object, bSelected: Boolean)","parameters":{"oDateStart":"type: any, description: starting date of the range. It can be Strings or Date objects.","oDateEnd":"type: any, description: ending date of the range. It can be Strings or Date objects.","bSelected":"type: boolean, description: selected/unselected. Optional, if omitted it inverts each date's current state"}},"setEnableMultiselection":{"!description":"Sets a new value for property <code>enableMultiselection<\/code>.\n\nto enable multiselection feature\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bEnableMultiselection: Boolean) -> sap.me.Calendar","parameters":{"bEnableMultiselection":"type: boolean, description: New value for property <code>enableMultiselection<\/code>"}},"getMonthsToDisplay":{"!description":"Gets current value of property <code>monthsToDisplay<\/code>.\n\nnumber of months in a row.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getDayHeight":{"!description":"Gets current value of property <code>dayHeight<\/code>.\n\nthe height of a day\n\nDefault value is <code>50<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!proto":"sap.ui.core.Control","getSelectionMode":{"!description":"Gets current value of property <code>selectionMode<\/code>.\n\nIndicates the design of the calendar (mainly colors)\n\nDefault value is <code>SINGLE<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.me.CalendarSelectionMode"},"!category":"class","getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe width of the calendar\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"setWeeksPerRow":{"!description":"Sets a new value for property <code>weeksPerRow<\/code>.\n\nweeks to display in a row\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn(iWeeksPerRow: Number) -> sap.me.Calendar","parameters":{"iWeeksPerRow":"type: int, description: New value for property <code>weeksPerRow<\/code>"}},"setDisabledDates":{"!description":"Sets a new value for property <code>disabledDates<\/code>.\n\nArray of specific dates (strings or Date objects) that will be disabled/non interactive\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oDisabledDates: Object) -> sap.me.Calendar","parameters":{"oDisabledDates":"type: any, description: New value for property <code>disabledDates<\/code>"}},"setHideMonthTitles":{"!description":"Sets a new value for property <code>hideMonthTitles<\/code>.\n\nhides the area of month titles\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bHideMonthTitles: Boolean) -> sap.me.Calendar","parameters":{"bHideMonthTitles":"type: boolean, description: New value for property <code>hideMonthTitles<\/code>"}},"!constructorDescription":"Constructor for a new Calendar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getHideNavControls hideNavControls} : boolean (default: false)<\/li>\n<li>{@link #getHideMonthTitles hideMonthTitles} : boolean (default: false)<\/li>\n<li>{@link #getMonthsPerRow monthsPerRow} : int (default: 1)<\/li>\n<li>{@link #getDayWidth dayWidth} : int (default: 45)<\/li>\n<li>{@link #getDayHeight dayHeight} : int (default: 50)<\/li>\n<li>{@link #getWeeksPerRow weeksPerRow} : int (default: 1)<\/li>\n<li>{@link #getSingleRow singleRow} : boolean<\/li>\n<li>{@link #getMonthsToDisplay monthsToDisplay} : int (default: 1)<\/li>\n<li>{@link #getCurrentDate currentDate} : string<\/li>\n<li>{@link #getEnableMultiselection enableMultiselection} : boolean (default: false)<\/li>\n<li>{@link #getFirstDayOffset firstDayOffset} : int (default: 0)<\/li>\n<li>{@link #getDisabledWeekDays disabledWeekDays} : any<\/li>\n<li>{@link #getDisabledDates disabledDates} : any<\/li>\n<li>{@link #getSwipeToNavigate swipeToNavigate} : boolean (default: false)<\/li>\n<li>{@link #getDesign design} : sap.me.CalendarDesign (default: Approval)<\/li>\n<li>{@link #getSelectionMode selectionMode} : sap.me.CalendarSelectionMode (default: SINGLE)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getDays days} : any<\/li>\n<li>{@link #getMonths months} : any<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:tapOnDate tapOnDate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:changeCurrentDate changeCurrentDate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:changeRange changeRange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getHideMonthTitles":{"!description":"Gets current value of property <code>hideMonthTitles<\/code>.\n\nhides the area of month titles\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getWeeksPerRow":{"!description":"Gets current value of property <code>weeksPerRow<\/code>.\n\nweeks to display in a row\n\nDefault value is <code>1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"getSelectedDates":{"!description":"returns an array of the currently selected dates (dates are strings formatted as Date.toDateString())","!static":false,"!category":"function","!type":"fn() -> Object"},"getSingleRow":{"!description":"Gets current value of property <code>singleRow<\/code>.\n\nboolean that sets the view to week mode or month mode","!static":false,"!category":"function","!type":"fn() -> Boolean"},"attachChangeCurrentDate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>changeCurrentDate<\/code> event of this <code>sap.me.Calendar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.me.Calendar<\/code> itself.\n\nevent fired when tap to next or previous button and currentDate is updated","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.me.Calendar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.me.Calendar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"setMonths":{"!description":"Sets a new value for property <code>months<\/code>.\n\nArray of month names, default value is sap.m.getLocaleData().getMonths(\"abbreviated\")\nCheck sap.ui.core.LocaleData documentation for more info.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(oMonths: Object) -> sap.me.Calendar","parameters":{"oMonths":"type: any, description: New value for property <code>months<\/code>"}},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe width of the calendar\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.me.Calendar","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"detachTapOnDate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>tapOnDate<\/code> event of this <code>sap.me.Calendar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.me.Calendar","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setDesign":{"!description":"Sets a new value for property <code>design<\/code>.\n\nIndicates the design of the calendar (mainly colors)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Approval<\/code>.","!static":false,"!category":"function","!type":"fn(sDesign: sap.me.CalendarDesign) -> sap.me.Calendar","parameters":{"sDesign":"type: sap.me.CalendarDesign, description: New value for property <code>design<\/code>"}},"fireTapOnDate":{"!description":"Fires event <code>tapOnDate<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>date<\/code> of type <code>string<\/code>date tapped<\/li>\n<li><code>didSelect<\/code> of type <code>boolean<\/code>if day was selected<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.me.Calendar","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"attachTapOnDate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>tapOnDate<\/code> event of this <code>sap.me.Calendar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.me.Calendar<\/code> itself.\n\nevent fired when a date is tapped","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.me.Calendar","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.me.Calendar<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getDisabledWeekDays":{"!description":"Gets current value of property <code>disabledWeekDays<\/code>.\n\nArray of weekDays (as integers where 0=Sunday, 1=Monday etc) to be disabled. Interaction will be disabled for these week days.","!static":false,"!category":"function","!type":"fn() -> Object"},"getHideNavControls":{"!description":"Gets current value of property <code>hideNavControls<\/code>.\n\nhides the area of navigation controls\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.me.OverlapCalendarEvent":{"setName":{"!description":"Sets a new value for property <code>name<\/code>.\n\nName of the row\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.me.OverlapCalendarEvent","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"getName":{"!description":"Gets current value of property <code>name<\/code>.\n\nName of the row","!static":false,"!category":"function","!type":"fn() -> String"},"bindEndDay":{"!description":"Binds property <code>endDay<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.me.OverlapCalendarEvent","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getStartDay":{"!description":"Gets current value of property <code>startDay<\/code>.\n\nThe first day of the event","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Element","unbindType":{"!description":"Unbinds property <code>type<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.me.OverlapCalendarEvent"},"setHalfDay":{"!description":"Sets a new value for property <code>halfDay<\/code>.\n\nIs this half a day\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn(bHalfDay: Boolean) -> sap.me.OverlapCalendarEvent","parameters":{"bHalfDay":"type: boolean, description: New value for property <code>halfDay<\/code>"}},"unbindStartDay":{"!description":"Unbinds property <code>startDay<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.me.OverlapCalendarEvent"},"!category":"class","getHalfDay":{"!description":"Gets current value of property <code>halfDay<\/code>.\n\nIs this half a day\n\nDefault value is <code>false<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"bindRow":{"!description":"Binds property <code>row<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.me.OverlapCalendarEvent","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"unbindTypeName":{"!description":"Unbinds property <code>typeName<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.me.OverlapCalendarEvent"},"setStartDay":{"!description":"Sets a new value for property <code>startDay<\/code>.\n\nThe first day of the event\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sStartDay: String) -> sap.me.OverlapCalendarEvent","parameters":{"sStartDay":"type: string, description: New value for property <code>startDay<\/code>"}},"!constructorDescription":"Constructor for a new OverlapCalendarEvent.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getStartDay startDay} : string<\/li>\n<li>{@link #getEndDay endDay} : string<\/li>\n<li>{@link #getRelevant relevant} : boolean<\/li>\n<li>{@link #getType type} : string<\/li>\n<li>{@link #getTypeName typeName} : string<\/li>\n<li>{@link #getHalfDay halfDay} : boolean (default: false)<\/li>\n<li>{@link #getRow row} : int (default: -1)<\/li>\n<li>{@link #getName name} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","bindName":{"!description":"Binds property <code>name<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.me.OverlapCalendarEvent","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getRelevant":{"!description":"Gets current value of property <code>relevant<\/code>.\n\nIndicates if this elements is relevant to be consider in the overlap","!static":false,"!category":"function","!type":"fn() -> Boolean"},"bindStartDay":{"!description":"Binds property <code>startDay<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.me.OverlapCalendarEvent","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"setTypeName":{"!description":"Sets a new value for property <code>typeName<\/code>.\n\nThe CSS class to use\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTypeName: String) -> sap.me.OverlapCalendarEvent","parameters":{"sTypeName":"type: string, description: New value for property <code>typeName<\/code>"}},"unbindRelevant":{"!description":"Unbinds property <code>relevant<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.me.OverlapCalendarEvent"},"bindRelevant":{"!description":"Binds property <code>relevant<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.me.OverlapCalendarEvent","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getEndDay":{"!description":"Gets current value of property <code>endDay<\/code>.\n\nLast day of the event","!static":false,"!category":"function","!type":"fn() -> String"},"setRow":{"!description":"Sets a new value for property <code>row<\/code>.\n\nId of the row on which to place this event\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn(iRow: Number) -> sap.me.OverlapCalendarEvent","parameters":{"iRow":"type: int, description: New value for property <code>row<\/code>"}},"unbindHalfDay":{"!description":"Unbinds property <code>halfDay<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.me.OverlapCalendarEvent"},"getTypeName":{"!description":"Gets current value of property <code>typeName<\/code>.\n\nThe CSS class to use","!static":false,"!category":"function","!type":"fn() -> String"},"bindHalfDay":{"!description":"Binds property <code>halfDay<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.me.OverlapCalendarEvent","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34.0 This control was experimental since 1.12. Please use the sap.ui.unified.CalendarAppointment instead!<br>Represent the data of an event for the overlap calendar","setRelevant":{"!description":"Sets a new value for property <code>relevant<\/code>.\n\nIndicates if this elements is relevant to be consider in the overlap\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bRelevant: Boolean) -> sap.me.OverlapCalendarEvent","parameters":{"bRelevant":"type: boolean, description: New value for property <code>relevant<\/code>"}},"setEndDay":{"!description":"Sets a new value for property <code>endDay<\/code>.\n\nLast day of the event\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sEndDay: String) -> sap.me.OverlapCalendarEvent","parameters":{"sEndDay":"type: string, description: New value for property <code>endDay<\/code>"}},"bindTypeName":{"!description":"Binds property <code>typeName<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.me.OverlapCalendarEvent","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getMetadata":{"!description":"Returns a metadata object for class sap.me.OverlapCalendarEvent.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"bindType":{"!description":"Binds property <code>type<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindProperty ManagedObject.bindProperty} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.me.OverlapCalendarEvent","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getRow":{"!description":"Gets current value of property <code>row<\/code>.\n\nId of the row on which to place this event\n\nDefault value is <code>-1<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"setType":{"!description":"Sets a new value for property <code>type<\/code>.\n\nType of the event. Display in the second label (no overlap)\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sType: String) -> sap.me.OverlapCalendarEvent","parameters":{"sType":"type: string, description: New value for property <code>type<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.me.OverlapCalendarEvent with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"unbindRow":{"!description":"Unbinds property <code>row<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.me.OverlapCalendarEvent"},"!module":"sap/me/OverlapCalendarEvent","unbindName":{"!description":"Unbinds property <code>name<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.me.OverlapCalendarEvent"},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34.0 This control was experimental since 1.12. Please use the sap.ui.unified.CalendarAppointment instead!<br>Represent the data of an event for the overlap calendar","getType":{"!description":"Gets current value of property <code>type<\/code>.\n\nType of the event. Display in the second label (no overlap)","!static":false,"!category":"function","!type":"fn() -> String"},"unbindEndDay":{"!description":"Unbinds property <code>endDay<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.me.OverlapCalendarEvent"}},"sap.me.ProgressIndicator":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.14 This control is replaced by sap.m.ProgressIndicator<br>Shows the progress of a process in a graphical way. The indicator can be displayed with or without numerical values.\nThe filling can be displayed in color only, or additionally with the percentage rate. The indicator status can be interactive.","setVisible":{"!description":"Sets a new value for property <code>visible<\/code>.\n\nInvisible controls are not rendered\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bVisible: Boolean) -> sap.me.ProgressIndicator","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.me.ProgressIndicator.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getVisible":{"!description":"Gets current value of property <code>visible<\/code>.\n\nInvisible controls are not rendered\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"!proto":"sap.ui.core.Control","!category":"class","setDisplayValue":{"!description":"Sets a new value for property <code>displayValue<\/code>.\n\nThe text value to be displayed in the bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0%<\/code>.","!static":false,"!category":"function","!type":"fn(sDisplayValue: String) -> sap.me.ProgressIndicator","parameters":{"sDisplayValue":"type: string, description: New value for property <code>displayValue<\/code>"}},"getWidth":{"!description":"Gets current value of property <code>width<\/code>.\n\nThe width of the control.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.CSSSize"},"getShowValue":{"!description":"Gets current value of property <code>showValue<\/code>.\n\nSpecifies whether the current value shall be rendered inside the bar.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setWidth":{"!description":"Sets a new value for property <code>width<\/code>.\n\nThe width of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!static":false,"!category":"function","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.me.ProgressIndicator","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.me.ProgressIndicator with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getBarColor":{"!description":"Gets current value of property <code>barColor<\/code>.\n\nThe color of the bar. Enumeration sap.ui.core.BarColor provides CRITICAL (yellow), NEGATIVE (red), POSITIVE (green), NEUTRAL (blue) (default value).\n\nDefault value is <code>NEUTRAL<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.ui.core.BarColor"},"setEnabled":{"!description":"Sets a new value for property <code>enabled<\/code>.\n\nSwitches enabled state of the control. Disabled fields have different colors, and cannot be focused.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bEnabled: Boolean) -> sap.me.ProgressIndicator","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"}},"getPercentValue":{"!description":"Gets current value of property <code>percentValue<\/code>.\n\nThe numerical value for the displayed length of the progress bar.\n\nDefault value is <code>0<\/code>.","!static":false,"!category":"function","!type":"fn() -> Number"},"!constructorDescription":"Constructor for a new ProgressIndicator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getBarColor barColor} : sap.ui.core.BarColor (default: NEUTRAL)<\/li>\n<li>{@link #getDisplayValue displayValue} : string (default: 0%)<\/li>\n<li>{@link #getPercentValue percentValue} : int (default: 0)<\/li>\n<li>{@link #getShowValue showValue} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/me/ProgressIndicator","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.14 This control is replaced by sap.m.ProgressIndicator<br>Shows the progress of a process in a graphical way. The indicator can be displayed with or without numerical values.\nThe filling can be displayed in color only, or additionally with the percentage rate. The indicator status can be interactive.","setShowValue":{"!description":"Sets a new value for property <code>showValue<\/code>.\n\nSpecifies whether the current value shall be rendered inside the bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bShowValue: Boolean) -> sap.me.ProgressIndicator","parameters":{"bShowValue":"type: boolean, description: New value for property <code>showValue<\/code>"}},"getDisplayValue":{"!description":"Gets current value of property <code>displayValue<\/code>.\n\nThe text value to be displayed in the bar.\n\nDefault value is <code>0%<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"getEnabled":{"!description":"Gets current value of property <code>enabled<\/code>.\n\nSwitches enabled state of the control. Disabled fields have different colors, and cannot be focused.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"setPercentValue":{"!description":"Property setter for the PercentValue\nA new rendering is not necessary, only the bar has to be moved.","!static":false,"!category":"function","!type":"fn(iPercentValue: undefined) -> sap.me.ProgressIndicator","parameters":{"iPercentValue":"type: undefined, description: undefined"}},"setBarColor":{"!description":"Sets a new value for property <code>barColor<\/code>.\n\nThe color of the bar. Enumeration sap.ui.core.BarColor provides CRITICAL (yellow), NEGATIVE (red), POSITIVE (green), NEUTRAL (blue) (default value).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>NEUTRAL<\/code>.","!static":false,"!category":"function","!type":"fn(sBarColor: sap.ui.core.BarColor) -> sap.me.ProgressIndicator","parameters":{"sBarColor":"type: sap.ui.core.BarColor, description: New value for property <code>barColor<\/code>"}}}}}