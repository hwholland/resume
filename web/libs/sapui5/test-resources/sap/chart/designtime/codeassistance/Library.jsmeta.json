{"!name":"sap.chart","!version":"1.17.0","!define":{"sap":{"sap":"sap","!category":"namespace","chart":"sap.chart"},"sap.chart.Chart":{"getSelectedDataPoints":{"!description":"Return a total number and an array of datapoint objects (including a Context object) of currently selected data points.\n\nDatapoint object has the following structure:\n<pre>\n{\n\t\tgroupId:  \"groupId\",\t\t  // group ID (optional)\n\t\tindex:\t\tindex,\t\t\t\t  // index of the data in the group\n\t\tmeasures: [\"measureId\"]   // measure IDs (data points created from the same Context object\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  // differing only in measure names are merged together)\n\t\tcontext:  [Context]\t\t   // Context object\n}\n<\/pre>\n\nOnly works when selectionBehavior is \"DATAPOINT\"","!static":false,"!category":"function","!type":"fn() -> Object"},"getSelectionBehavior":{"!description":"Gets current value of property <code>selectionBehavior<\/code>.\n\nChart selection behavior.\n\nSupported values are \"DATAPOINT\", \"CATEGORY\", or \"SERIES\", case insensitive, always return in upper case.\n\nUnsupported values will be ignored.\n\nDefault value is <code>DATAPOINT<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"destroyData":{"!description":"Unsupported.\nChart manages the \"data\" aggregation only via data binding. The method \"destroyData\" therefore cannot be used programmatically!","!static":false,"!category":"function","!type":"fn()"},"insertData":{"!description":"Unsupported.\nChart manages the \"data\" aggregation only via data binding. The method \"insertData\" therefore cannot be used programmatically!","!static":false,"!category":"function","!type":"fn()"},"setVizScales":{"!description":"Change Chart's scales.\n\nChart's scales will be updated with the parameters.\n\nRefer to chart property <a href=\"../../vizdocs/index.html\" target=\"_blank\">documentation<\/a> for more details.","!static":false,"!category":"function","!type":"fn(oVizScales: [Object])","parameters":{"oVizScales":"type: object[], description: array of vizScale objects"}},"fireRenderComplete":{"!description":"Fires event <code>renderComplete<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.chart.Chart","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"detachRenderComplete":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>renderComplete<\/code> event of this <code>sap.chart.Chart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.chart.Chart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setVisibleMeasures":{"!description":"Sets a new value for property <code>visibleMeasures<\/code>.\n\nNames of the Measures to be displayed in the Chart.\n\nDepending on chart type, insufficient number of visible <code>Measure<\/code>s will cause errors.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sVisibleMeasures: [String]) -> sap.chart.Chart","parameters":{"sVisibleMeasures":"type: string[], description: New value for property <code>visibleMeasures<\/code>"}},"getDimensionByName":{"!description":"Return Dimension with the given name.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.chart.data.Dimension","parameters":{"sName":"type: string, description: name of the Dimension to get"}},"destroyDimensions":{"!description":"Destroys all the dimensions in the aggregation <code>dimensions<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.chart.Chart"},"fireSelectData":{"!description":"Fires event <code>selectData<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.chart.Chart","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"removeSelectedDataPoints":{"!description":"Deselect one or more data points from current data point selections, specified by datapoint objects.\n\nDatapoint object has the following structure:\n<pre>\n{\n\t\tgroupId:  \"groupId\",\t\t  // group ID (optional)\n\t\tindex:\t\tindex,\t\t\t\t  // index of the data in the group\n\t\tmeasures: [\"measureId\"]   // measure IDs\n}\n<\/pre>\n\nOnly works when selectionBehavior is \"DATAPOINT\"","!static":false,"!category":"function","!type":"fn(aDataPoints: Array) -> sap.chart.Chart","parameters":{"aDataPoints":"type: array, description: an array of datapoint objects."}},"addSelectedDataPoints":{"!description":"Add one or more data points to current data point selection, specified by datapoint objects.\n\nDatapoint object has the following structure:\n<pre>\n{\n\t\tgroupId:  \"groupId\",\t\t  // group ID (optional)\n\t\tindex:\t\tindex,\t\t\t\t  // index of the data in the group\n\t\tmeasures: [\"measureId\"]   // measure IDs\n}\n<\/pre>\n\nOnly works when selectionBehavior is \"DATAPOINT\"","!static":false,"!category":"function","!type":"fn(aDataPoints: Array) -> sap.chart.Chart","parameters":{"aDataPoints":"type: array, description: an array of datapoint objects."}},"attachDrilledDown":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>drilledDown<\/code> event of this <code>sap.chart.Chart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.chart.Chart<\/code> itself.\n\nfired after a drill-down operation","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.chart.Chart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.chart.Chart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"fireDrilledDown":{"!description":"Fires event <code>drilledDown<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>dimensions<\/code> of type <code>string[]<\/code>array of strings holding the names of the added dimensions<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.chart.Chart","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"insertMeasure":{"!description":"Inserts a measure into the aggregation <code>measures<\/code>.","!static":false,"!category":"function","!type":"fn(oMeasure: sap.chart.data.Measure, iIndex: Number) -> sap.chart.Chart","parameters":{"oMeasure":"type: sap.chart.data.Measure, description: the measure to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the measure should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the measure is inserted at position 0; for a value\n             greater than the current size of the aggregation, the measure is inserted at\n             the last position"}},"removeMeasure":{"!description":"Removes a measure from the aggregation <code>measures<\/code>.","!static":false,"!category":"function","!type":"fn(vMeasure: Number | String | sap.chart.data.Measure) -> sap.chart.data.Measure","parameters":{"vMeasure":"type: int|string|sap.chart.data.Measure, description: The measureto remove or its index or id"}},"getInResultDimensions":{"!description":"Gets current value of property <code>inResultDimensions<\/code>.\n\nNames of the inResult dimensions.\n\ninResult dimension do not show up in chart layout, i.e. axis/legend. They do show in tooltip, popover, and in selection results.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [String]"},"attachRenderComplete":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>renderComplete<\/code> event of this <code>sap.chart.Chart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.chart.Chart<\/code> itself.\n\nEvent fires when the rendering ends.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.chart.Chart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.chart.Chart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"indexOfMeasure":{"!description":"Checks for the provided <code>sap.chart.data.Measure<\/code> in the aggregation <code>measures<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oMeasure: sap.chart.data.Measure) -> Number","parameters":{"oMeasure":"type: sap.chart.data.Measure, description: The measure whose index is looked for"}},"addSelectedSeries":{"!description":"Add one or more series to current series selections, specified by series objects.\n\nSeries object has the following structure:\n<pre>\n{\n\t   measure: measureName,\n\t   dimensions: {\n\t\t   dimensionName1: dimensionValue1,\n\t\t   dimensionName2: dimensionValue2,\n\t\t   ...\n\t   }\n}\n<\/pre>\n\nOnly works when selectionBehavior is \"SERIES\"","!static":false,"!category":"function","!type":"fn(aSeries: Array) -> sap.chart.Chart","parameters":{"aSeries":"type: array, description: an array of series objects"}},"fireDeselectData":{"!description":"Fires event <code>deselectData<\/code> to attached listeners.","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.chart.Chart","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"removeAllData":{"!description":"Unsupported.\nChart manages the \"data\" aggregation only via data binding. The method \"removeAllData\" therefore cannot be used programmatically!","!static":false,"!category":"function","!type":"fn()"},"getVisibleDimensions":{"!description":"Gets current value of property <code>visibleDimensions<\/code>.\n\nNames of the Dimensions to be displayed in the Chart.\n\nDepending on chart type, insufficient number of visible <code>Dimension<\/code>s will cause error.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [String]"},"!description":"UI5 Chart control","getSelectedCategories":{"!description":"Return category objects of currently selected categories and a total number of selected data points.\n\nCategory object has the following structure:\n<pre>\n{\n\t   measure: measureName,\n\t   dimensions: {\n\t\t   dimensionName1: dimensionValue1,\n\t\t   dimensionName2: dimensionValue2,\n\t\t   ...\n\t   }\n}\n<\/pre>\n\nReturn 0 and empty list if selectionBehavior is not \"CATEGORY\"","!static":false,"!category":"function","!type":"fn() -> Object"},"removeSelectedSeries":{"!description":"Deselect one or more series from current series selections, specified by series objects.\n\nSeries object has the following structure:\n<pre>\n{\n\t   measure: measureName,\n\t   dimensions: {\n\t\t   dimensionName1: dimensionValue1,\n\t\t   dimensionName2: dimensionValue2,\n\t\t   ...\n\t   }\n}\n<\/pre>\n\nOnly works when selectionBehavior is \"SERIES\"","!static":false,"!category":"function","!type":"fn(aSeries: Array) -> sap.chart.Chart","parameters":{"aSeries":"type: array, description: an array of series objects"}},"resetLayout":{"!description":"Reset to visible layout.","!static":false,"!category":"function","!type":"fn() -> sap.chart.Chart"},"getIsAnalytical":{"!description":"Gets current value of property <code>isAnalytical<\/code>.\n\nWhether or not an aggregated entity set is bound to the chart.","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getMetadata":{"!description":"Returns a metadata object for class sap.chart.Chart.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"removeAllMeasures":{"!description":"Removes all the controls from the aggregation <code>measures<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.chart.data.Measure]"},"indexOfDimension":{"!description":"Checks for the provided <code>sap.chart.data.Dimension<\/code> in the aggregation <code>dimensions<\/code>.\nand returns its index if found or -1 otherwise.","!static":false,"!category":"function","!type":"fn(oDimension: sap.chart.data.Dimension) -> Number","parameters":{"oDimension":"type: sap.chart.data.Dimension, description: The dimension whose index is looked for"}},"insertDimension":{"!description":"Inserts a dimension into the aggregation <code>dimensions<\/code>.","!static":false,"!category":"function","!type":"fn(oDimension: sap.chart.data.Dimension, iIndex: Number) -> sap.chart.Chart","parameters":{"oDimension":"type: sap.chart.data.Dimension, description: the dimension to insert; if empty, nothing is inserted","iIndex":"type: int, description: the <code>0<\/code>-based index the dimension should be inserted at; for\n             a negative value of <code>iIndex<\/code>, the dimension is inserted at position 0; for a value\n             greater than the current size of the aggregation, the dimension is inserted at\n             the last position"}},"drillUp":{"!description":"Drill up to previous drill down state, or remove the last visible Dimension","!static":false,"!category":"function","!type":"fn()"},"setIsAnalytical":{"!description":"Sets a new value for property <code>isAnalytical<\/code>.\n\nWhether or not an aggregated entity set is bound to the chart.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(bIsAnalytical: Boolean) -> sap.chart.Chart","parameters":{"bIsAnalytical":"type: boolean, description: New value for property <code>isAnalytical<\/code>"}},"setSelectionMode":{"!description":"Sets a new value for property <code>selectionMode<\/code>.\n\nChart selection mode.\n\nSupported values are {@link sap.chart.SelectionMode.Single} or {@link sap.chart.SelectionMode.Multi}, case insensitive, always return in upper case.\n\nUnsupported values will be ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>sap.chart.SelectionMode.Multi<\/code>.","!static":false,"!category":"function","!type":"fn(sSelectionMode: String) -> sap.chart.Chart","parameters":{"sSelectionMode":"type: string, description: New value for property <code>selectionMode<\/code>"}},"getChartType":{"!description":"Gets current value of property <code>chartType<\/code>.\n\nType of the Chart.\n\nRefer to supported chart enum {@link sap.chart.ChartType}\n\nDefault value is <code>bar<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setInResultDimensions":{"!description":"Sets a new value for property <code>inResultDimensions<\/code>.\n\nNames of the inResult dimensions.\n\ninResult dimension do not show up in chart layout, i.e. axis/legend. They do show in tooltip, popover, and in selection results.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sInResultDimensions: [String]) -> sap.chart.Chart","parameters":{"sInResultDimensions":"type: string[], description: New value for property <code>inResultDimensions<\/code>"}},"extend":{"!description":"Creates a new subclass of class sap.chart.Chart with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.viz.ui5.controls.common.BaseControl.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getDimensions":{"!description":"Gets content of aggregation <code>dimensions<\/code>.\n\nDimensions of the data.","!static":false,"!category":"function","!type":"fn() -> [sap.chart.data.Dimension]"},"!module":"sap/chart/Chart","!helpDescription":"UI5 Chart control","getUiConfig":{"!description":"Gets current value of property <code>uiConfig<\/code>.\n\nConfiguration for initialization to VizControl. This property could only set via settings parameter in Constructor.","!static":false,"!category":"function","!type":"fn() -> Object"},"getVizProperties":{"!description":"Return Chart's properties.\n\nRefer to chart property <a href=\"../../vizdocs/index.html\" target=\"_blank\">documentation<\/a> for more details.","!static":false,"!category":"function","!type":"fn() -> Object"},"detachDrilledDown":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>drilledDown<\/code> event of this <code>sap.chart.Chart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.chart.Chart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"removeData":{"!description":"Unsupported.\nChart manages the \"data\" aggregation only via data binding. The method \"removeData\" therefore cannot be used programmatically!","!static":false,"!category":"function","!type":"fn()"},"setSelectedCategories":{"!description":"Select one or more categories, specified by category objects.\n\nCategory object has the following structure:\n<pre>\n{\n\t   measure: measureName,\n\t   dimensions: {\n\t\t   dimensionName1: dimensionValue1,\n\t\t   dimensionName2: dimensionValue2,\n\t\t   ...\n\t   }\n}\n<\/pre>\n\nOnly works when selectionBehavior is \"CATEGORY\"","!static":false,"!category":"function","!type":"fn(aCategories: Array) -> sap.chart.Chart","parameters":{"aCategories":"type: array, description: an array of category objects"}},"attachDeselectData":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>deselectData<\/code> event of this <code>sap.chart.Chart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.chart.Chart<\/code> itself.\n\nEvent fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.chart.Chart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.chart.Chart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"getSelectedSeries":{"!description":"Return series objects of currently selected series and a total number of selected data points.\n\nSeries object has the following structure:\n<pre>\n{\n\t   measure: measureName,\n\t   dimensions: {\n\t\t   dimensionName1: dimensionValue1,\n\t\t   dimensionName2: dimensionValue2,\n\t\t   ...\n\t   }\n}\n<\/pre>\n\nReturn 0 and empty list if selectionBehavior is not \"SERIES\"","!static":false,"!category":"function","!type":"fn() -> Object"},"addDimension":{"!description":"Adds some dimension to the aggregation <code>dimensions<\/code>.","!static":false,"!category":"function","!type":"fn(oDimension: sap.chart.data.Dimension) -> sap.chart.Chart","parameters":{"oDimension":"type: sap.chart.data.Dimension, description: the dimension to add; if empty, nothing is inserted"}},"getEnablePagination":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!static":false,"!category":"function","!type":"fn() -> Boolean"},"getTimeDimensions":{"!description":"Return all TimeDimensions from current Dimensions.","!static":false,"!category":"function","!type":"fn() -> Array"},"!proto":"sap.viz.ui5.controls.common.BaseControl","getSelectionMode":{"!description":"Gets current value of property <code>selectionMode<\/code>.\n\nChart selection mode.\n\nSupported values are {@link sap.chart.SelectionMode.Single} or {@link sap.chart.SelectionMode.Multi}, case insensitive, always return in upper case.\n\nUnsupported values will be ignored.\n\nDefault value is <code>sap.chart.SelectionMode.Multi<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","setEnablePagination":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!static":false,"!category":"function","!type":"fn(bEnablePagination: Boolean) -> sap.chart.Chart","parameters":{"bEnablePagination":"type: boolean, description: New value for property <code>enablePagination<\/code>"}},"drillDown":{"!description":"Drill down on specific Dimension(s).\n\nThe drill down Dimension(s) must present in the Dimension aggregation\nand must NOT present in previous drill down or be visible already.","!static":false,"!category":"function","!type":"fn(vDimensions: Array)","parameters":{"vDimensions":"type: array, description: an array, or just a single instance, of either Dimension instance or Dimension name to drill down"}},"removeSelectedCategories":{"!description":"Deselect one or more categories from current category selections, specified by category objects.\n\nCategory object has the following structure:\n<pre>\n{\n\t   measure: measureName,\n\t   dimensions: {\n\t\t   dimensionName1: dimensionValue1,\n\t\t   dimensionName2: dimensionValue2,\n\t\t   ...\n\t   }\n}\n<\/pre>\n\nOnly works when selectionBehavior is \"CATEGORY\"","!static":false,"!category":"function","!type":"fn(aCategories: Array) -> sap.chart.Chart","parameters":{"aCategories":"type: array, description: an array of category objects"}},"unbindData":{"!description":"Unbinds aggregation <code>data<\/code> from model data.","!static":false,"!category":"function","!type":"fn() -> sap.chart.Chart"},"detachDeselectData":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>deselectData<\/code> event of this <code>sap.chart.Chart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.chart.Chart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"setVisibleDimensions":{"!description":"Sets a new value for property <code>visibleDimensions<\/code>.\n\nNames of the Dimensions to be displayed in the Chart.\n\nDepending on chart type, insufficient number of visible <code>Dimension<\/code>s will cause error.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn(sVisibleDimensions: [String]) -> sap.chart.Chart","parameters":{"sVisibleDimensions":"type: string[], description: New value for property <code>visibleDimensions<\/code>"}},"!constructorDescription":"Constructor for a new Chart.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getChartType chartType} : string (default: bar)<\/li>\n<li>{@link #getUiConfig uiConfig} : object<\/li>\n<li>{@link #getVisibleDimensions visibleDimensions} : string[] (default: [])<\/li>\n<li>{@link #getInResultDimensions inResultDimensions} : string[] (default: [])<\/li>\n<li>{@link #getVisibleMeasures visibleMeasures} : string[] (default: [])<\/li>\n<li>{@link #getVizProperties vizProperties} : object<\/li>\n<li>{@link #getVizScales vizScales} : object[]<\/li>\n<li>{@link #getIsAnalytical isAnalytical} : boolean<\/li>\n<li>{@link #getSelectionBehavior selectionBehavior} : string (default: DATAPOINT)<\/li>\n<li>{@link #getSelectionMode selectionMode} : string (default: sap.chart.SelectionMode.Multi)<\/li>\n<li>{@link #getEnablePagination enablePagination} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getData data} : sap.ui.core.Element[]<\/li>\n<li>{@link #getDimensions dimensions} : sap.chart.data.Dimension[]<\/li>\n<li>{@link #getMeasures measures} : sap.chart.data.Measure[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:drilledDown drilledDown} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:drilledUp drilledUp} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:renderComplete renderComplete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectData selectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:deselectData deselectData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.viz.ui5.controls.common.BaseControl#constructor sap.viz.ui5.controls.common.BaseControl}\ncan be used as well.","destroyMeasures":{"!description":"Destroys all the measures in the aggregation <code>measures<\/code>.","!static":false,"!category":"function","!type":"fn() -> sap.chart.Chart"},"removeDimension":{"!description":"Removes a dimension from the aggregation <code>dimensions<\/code>.","!static":false,"!category":"function","!type":"fn(vDimension: Number | String | sap.chart.data.Dimension) -> sap.chart.data.Dimension","parameters":{"vDimension":"type: int|string|sap.chart.data.Dimension, description: The dimensionto remove or its index or id"}},"attachDrilledUp":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>drilledUp<\/code> event of this <code>sap.chart.Chart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.chart.Chart<\/code> itself.\n\nfired after a drill-up operation","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.chart.Chart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.chart.Chart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"addMeasure":{"!description":"Adds some measure to the aggregation <code>measures<\/code>.","!static":false,"!category":"function","!type":"fn(oMeasure: sap.chart.data.Measure) -> sap.chart.Chart","parameters":{"oMeasure":"type: sap.chart.data.Measure, description: the measure to add; if empty, nothing is inserted"}},"addSelectedCategories":{"!description":"Add one or more categories to current category selections, specified by category objects.\n\nCategory object has the following structure:\n<pre>\n{\n\t   measure: measureName,\n\t   dimensions: {\n\t\t   dimensionName1: dimensionValue1,\n\t\t   dimensionName2: dimensionValue2,\n\t\t   ...\n\t   }\n}\n<\/pre>\n\nOnly works when selectionBehavior is \"CATEGORY\"","!static":false,"!category":"function","!type":"fn(aCategories: Array) -> sap.chart.Chart","parameters":{"aCategories":"type: array, description: an array of category objects"}},"setSelectedSeries":{"!description":"Select one or more series, specified by series objects.\n\nSeries object has the following structure:\n<pre>\n{\n\t   measure: measureName,\n\t   dimensions: {\n\t\t   dimensionName1: dimensionValue1,\n\t\t   dimensionName2: dimensionValue2,\n\t\t   ...\n\t   }\n}\n<\/pre>\n\nOnly works when selectionBehavior is \"SERIES\"","!static":false,"!category":"function","!type":"fn(aSeries: Array) -> sap.chart.Chart","parameters":{"aSeries":"type: array, description: an array of series objects"}},"detachDrilledUp":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>drilledUp<\/code> event of this <code>sap.chart.Chart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.chart.Chart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"detachSelectData":{"!description":"Detaches event handler <code>fnFunction<\/code> from the <code>selectData<\/code> event of this <code>sap.chart.Chart<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!static":false,"!category":"function","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.chart.Chart","parameters":{"oListener":"type: object, description: Context object on which the given function had to be called","fnFunction":"type: function, description: The function to be called, when the event occurs"}},"getData":{"!description":"Unsupported.\nChart manages the \"data\" aggregation only via data binding. The method \"getData\" therefore cannot be used programmatically!","!static":false,"!category":"function","!type":"fn()"},"attachSelectData":{"!description":"Attaches event handler <code>fnFunction<\/code> to the <code>selectData<\/code> event of this <code>sap.chart.Chart<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, \notherwise it will be bound to this <code>sap.chart.Chart<\/code> itself.\n\nEvent fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in.","!static":false,"!category":"function","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.chart.Chart","parameters":{"oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.chart.Chart<\/code> itself","fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event"}},"addData":{"!description":"Unsupported.\nChart manages the \"data\" aggregation only via data binding. The method \"addData\" therefore cannot be used programmatically!","!static":false,"!category":"function","!type":"fn()"},"getMeasures":{"!description":"Gets content of aggregation <code>measures<\/code>.\n\nMeasures of the data.","!static":false,"!category":"function","!type":"fn() -> [sap.chart.data.Measure]"},"zoom":{"!description":"Zoom the chart plot.\n\nExample:\n<pre>\n\tvar oChart = new sap.chart.Chart(...);\n\toChart.zoom({direction: \"in\"});\n<\/pre>","!static":false,"!category":"function","!type":"fn(oConfig: Object)","parameters":{"oConfig":"type: object, description: contains a \"direction\" attribute with value \"in\" or \"out\" indicating zoom to enlarge or shrink respectively"}},"getAvailableChartTypes":{"!description":"Returns available and unavailable chart types with current Dimensions and Measures.\nAn error info will be returned along with each unavailable chart types.\n\n<pre>\n{\n\t\t available: [{\n\t\t\t\t chart: \"chartType\"\n\t\t }, ...],\n\t\t unavailable: [{\n\t\t\t\t chart: \"chartType\"\n\t\t\t\t error: {\n\t\t\t\t\t\t missing: {\n\t\t\t\t\t\t\t\t Dimension: n,\n\t\t\t\t\t\t\t\t Measure: n,\n\t\t\t\t\t\t\t\t DateTimeDimension: n\n\t\t\t\t\t\t }\n\t\t\t\t }\n\t\t }, ...]\n}\n<\/pre>","!static":false,"!category":"function","!type":"fn() -> Object"},"setSelectionBehavior":{"!description":"Sets a new value for property <code>selectionBehavior<\/code>.\n\nChart selection behavior.\n\nSupported values are \"DATAPOINT\", \"CATEGORY\", or \"SERIES\", case insensitive, always return in upper case.\n\nUnsupported values will be ignored.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>DATAPOINT<\/code>.","!static":false,"!category":"function","!type":"fn(sSelectionBehavior: String) -> sap.chart.Chart","parameters":{"sSelectionBehavior":"type: string, description: New value for property <code>selectionBehavior<\/code>"}},"getVizUid":{"!description":"Get the UID for Chart. It supports other controls to connect to a viz instance.","!static":false,"!category":"function","!type":"fn() -> String"},"setVizProperties":{"!description":"Change Chart's properties.\n\nChart's properties will be updated with the parameter.\n\nRefer to chart property <a href=\"../../vizdocs/index.html\" target=\"_blank\">documentation<\/a> for more details.","!static":false,"!category":"function","!type":"fn(oVizProperties: Object)","parameters":{"oVizProperties":"type: object, description: object containing vizProperty values to update"}},"fireDrilledUp":{"!description":"Fires event <code>drilledUp<\/code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>dimensions<\/code> of type <code>string[]<\/code>array of strings holding the names of the removed dimensions<\/li>\n<\/ul>","!static":false,"!category":"function","!type":"fn(mArguments?: Map) -> sap.chart.Chart","parameters":{"mArguments":"type: Map, description: The arguments to pass along with the event"}},"getVisibleMeasures":{"!description":"Gets current value of property <code>visibleMeasures<\/code>.\n\nNames of the Measures to be displayed in the Chart.\n\nDepending on chart type, insufficient number of visible <code>Measure<\/code>s will cause errors.\n\nDefault value is <code>[]<\/code>.","!static":false,"!category":"function","!type":"fn() -> [String]"},"setSelectedDataPoints":{"!description":"Select one or more data points, specified by datapoint objects.\n\nDatapoint object has the following structure:\n<pre>\n{\n\t\tgroupId:  \"groupId\",\t\t  // group ID (optional)\n\t\tindex:\t\tindex,\t\t\t\t  // index of the data in the group\n\t\tmeasures: [\"measureId\"]   // measure IDs\n}\n<\/pre>\n\nOnly works when selectionBehavior is \"DATAPOINT\"","!static":false,"!category":"function","!type":"fn(aDataPoints: Array) -> sap.chart.Chart","parameters":{"aDataPoints":"type: array, description: an array of datapoint objects."}},"removeAllDimensions":{"!description":"Removes all the controls from the aggregation <code>dimensions<\/code>.\n\nAdditionally, it unregisters them from the hosting UIArea.","!static":false,"!category":"function","!type":"fn() -> [sap.chart.data.Dimension]"},"getVizScales":{"!description":"Return Chart's scales.\n\nRefer to chart property <a href=\"../../vizdocs/index.html\" target=\"_blank\">documentation<\/a> for more details.","!static":false,"!category":"function","!type":"fn() -> [Object]"},"indexOfData":{"!description":"Unsupported.\nChart manages the \"data\" aggregation only via data binding. The method \"indexOfData\" therefore cannot be used programmatically!","!static":false,"!category":"function","!type":"fn()"},"setUiConfig":{"!description":"Setter for property uiConfig. uiConfig could only set via settings parameter\nof constructor.\n\nuiConfig from base type could config the instance. Supported uiConfig\nkeyword: applicationSet, showErrorMessage\n\nExample:\n\n<pre>\nvar chart = new sap.chart.Chart({\n 'chartType' : 'bar',\n 'uiConfig' : {\n\t\t  'applicationSet' : 'fiori',\n\t\t  'showErrorMessage' : true\n }\n});\n<\/pre>","!static":false,"!category":"function","!type":"fn(oUiConfig: Object)","parameters":{"oUiConfig":"type: object, description: the UI configuration"}},"setChartType":{"!description":"Sets a new value for property <code>chartType<\/code>.\n\nType of the Chart.\n\nRefer to supported chart enum {@link sap.chart.ChartType}\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>bar<\/code>.","!static":false,"!category":"function","!type":"fn(sChartType: String) -> sap.chart.Chart","parameters":{"sChartType":"type: string, description: New value for property <code>chartType<\/code>"}},"bindData":{"!description":"Binds aggregation <code>data<\/code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo<\/code>.","!static":false,"!category":"function","!type":"fn(oBindingInfo: Object) -> sap.chart.Chart","parameters":{"oBindingInfo":"type: object, description: The binding information"}},"getMeasureByName":{"!description":"Return Measure with the given name.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.chart.data.Measure","parameters":{"sName":"type: string, description: name of the Measure to get"}}},"sap.chart.api":{"!description":"Package with additional chart APIs","!module":"sap/chart/library","!helpDescription":"Package with additional chart APIs","getChartTypes":{"!description":"Returns all chart types currently supported by chart control (subset of viz types).","!static":"true","!category":"function","!type":"fn() -> Object"},"!category":"namespace","getChartTypeLayout":{"!description":"Get the Dimensions and Measures layout for a certain ChartType with provided Dimensions and Measures.","!static":"true","!category":"function","!type":"fn(sChartType: String, aDimensions: [Object], aMeasures: [Object]) -> Object"}},"sap.chart.data.Dimension_obj":{"extend":{"!description":"Creates a new subclass of class sap.chart.data.Dimension with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.chart.data.Dimension"},"sap.chart.data":{"textFormatter":{"!description":"Function returning a formatted text for a Dimension key value that will be used for axis labelling. If specified, this property takes precedence over the \"textProperty\" property of the Dimension.\nDimension key value and the corresponding text will be passed to the supplied function as parameters.","!category":"enum","!type":"fn()"},"displayText":{"!description":"Whether a text is displayed. If the \"textProperty\" property has not been specified, it will be derived from the metadata.","!category":"enum","!type":"Boolean"},"role":{"!description":"How the Dimension will influence the chart layout. Possible values are \"category\" or \"series\".\nThe default is \"category\".\nNOTE: Has no effect if the Dimension is used as inResultDimensions by Chart","!category":"enum","!type":"String"},"valueFormat":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Please use {@link sap.chart.Chart#setVizProperties} to set related formatStrings instead.<br>A (core UI5) format pattern to be used by the formatter to format the measure value.","!category":"enum","!type":"String"},"!category":"namespace","Dimension":"sap.chart.data.Dimension_obj","label":{"!description":"Label for the Dimension, either as a string literal or by a pointer using the binding syntax to some property containing the label.","!category":"enum","!type":"String"},"unitBinding":{"!description":"Unit for the measure, a pointer using the binding syntax to some field containing the unit.\nValue of the given field from the same data record will be displayed after formatted measure value in data label, tooltip and chart popover.\nNOTE: If the unit field is not set as visible dimension in chart, or more than one unit value exists \nfor any visible dimension value combination, they will be rendered in the chart resulting different chart layout.","!category":"enum","!type":"String"},"textProperty":{"!description":"Text for a Dimension key value, typically by a pointer using the binding syntax to some property containing the text.","!category":"enum","!type":"String"},"Measure":"sap.chart.data.Measure_obj","name":{"!description":"Property in the \"data\" model holding the (always unique) Dimension key.","!category":"enum","!type":"String"},"TimeDimension":"sap.chart.data.TimeDimension_obj","timeUnit":{"!description":"Detailed unit infomation of TimeDimension. Please refer to {@link sap.chart.TimeUnitType TimeUnitType}.","!category":"enum","!type":"String"}},"sap.chart.Chart_obj":{"extend":{"!description":"Creates a new subclass of class sap.chart.Chart with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.viz.ui5.controls.common.BaseControl.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.chart.Chart"},"sap.chart.TimeUnitType":{"!description":"Enumeration for supported time unit types in analytical chart","yearmonthday":{"!description":"type is Edm.string and V2 annotation sap:semantics is \"yearmonthday\", like \"yyyyMMdd\"","!category":"enum","!type":"String"},"!module":"sap/chart/TimeUnitType","!helpDescription":"Enumeration for supported time unit types in analytical chart","!category":"namespace","Date":{"!description":"type is Edm.DateTime and V2 annotation sap:display-format is \"Date\" or timestamp","!category":"enum","!type":"String"}},"sap.chart.ChartType":{"DualBar":{"!description":"Bar Chart with 2 X-Axes","!category":"enum","!type":"String"},"PercentageDualStackedBar":{"!description":"100% Stacked Bar Chart with 2 X-Axes","!category":"enum","!type":"String"},"VerticalBullet":{"!description":"Vertical Bullet Chart","!category":"enum","!type":"String"},"Waterfall":{"!description":"Waterfall Chart","!category":"enum","!type":"String"},"!category":"namespace","DualColumn":{"!description":"Column Chart with 2 Y-Axes","!category":"enum","!type":"String"},"StackedBar":{"!description":"Stacked Bar Chart","!category":"enum","!type":"String"},"Bubble":{"!description":"Bubble Chart","!category":"enum","!type":"String"},"DualHorizontalStackedCombination":{"!description":"Horizontal Combined Stacked Line Chart with 2 X-Axes","!category":"enum","!type":"String"},"Column":{"!description":"Column Chart","!category":"enum","!type":"String"},"DualLine":{"!description":"Line Chart with 2 Y-Axes","!category":"enum","!type":"String"},"Combination":{"!description":"Combined Column Line Chart","!category":"enum","!type":"String"},"PercentageDualStackedColumn":{"!description":"100% Stacked Column Chart with 2 Y-Axes","!category":"enum","!type":"String"},"!description":"Enumeration for supported chart types in analytical chart","Bullet":{"!description":"Bubble Chart","!category":"enum","!type":"String"},"PercentageStackedBar":{"!description":"100% Stacked Bar Chart","!category":"enum","!type":"String"},"HorizontalStackedCombination":{"!description":"Horizontal Combined Stacked Line Chart","!category":"enum","!type":"String"},"DualStackedColumn":{"!description":"Stacked Column Chart with 2 Y-Axes","!category":"enum","!type":"String"},"Heatmap":{"!description":"Heat Map","!category":"enum","!type":"String"},"HorizontalWaterfall":{"!description":"Horizontal Waterfall Chart","!category":"enum","!type":"String"},"DualStackedCombination":{"!description":"Combined Stacked Line Chart with 2 Y-Axes","!category":"enum","!type":"String"},"PercentageStackedColumn":{"!description":"100% Stacked Column Chart","!category":"enum","!type":"String"},"Pie":{"!description":"Pie Chart","!category":"enum","!type":"String"},"StackedCombination":{"!description":"Combined Stacked Line Chart","!category":"enum","!type":"String"},"Donut":{"!description":"Donut Chart","!category":"enum","!type":"String"},"Line":{"!description":"Line Chart","!category":"enum","!type":"String"},"StackedColumn":{"!description":"Stacked Column Chart","!category":"enum","!type":"String"},"Bar":{"!description":"Bar Chart","!category":"enum","!type":"String"},"!module":"sap/chart/ChartType","!helpDescription":"Enumeration for supported chart types in analytical chart","Scatter":{"!description":"Scatter Plot","!category":"enum","!type":"String"},"DualStackedBar":{"!description":"Stacked Bar Chart with 2 X-Axes","!category":"enum","!type":"String"}},"sap.chart.data.Measure":{"!description":"Definition of a single measure in a chart","setName":{"!description":"Sets a new value for property <code>name<\/code>.\n\nProperty in the \"data\" model holding the raw measure value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.chart.data.Measure","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.chart.data.Measure.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getUnitBinding":{"!description":"Gets current value of property <code>unitBinding<\/code>.\n\nUnit for the measure, a pointer using the binding syntax to some field containing the unit.\nValue of the given field from the same data record will be displayed after formatted measure value in data label, tooltip and chart popover.\nNOTE: If the unit field is not set as visible dimension in chart, or more than one unit value exists \nfor any visible dimension value combination, they will be rendered in the chart resulting different chart layout.","!static":false,"!category":"function","!type":"fn() -> String"},"getLabel":{"!description":"Gets current value of property <code>label<\/code>.\n\nLabel for the Measure, either as a string literal or by a pointer using the binding syntax to some property containing the label.","!static":false,"!category":"function","!type":"fn() -> String"},"getName":{"!description":"Gets current value of property <code>name<\/code>.\n\nProperty in the \"data\" model holding the raw measure value.","!static":false,"!category":"function","!type":"fn() -> String"},"getValueFormat":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Please use {@link sap.chart.Chart#setVizProperties} to set related formatStrings instead.<br>Gets current value of property <code>valueFormat<\/code>.\n\nA (core UI5) format pattern to be used by the formatter to format the measure value.","!static":false,"!category":"function","!type":"fn() -> String"},"!proto":"sap.ui.core.Element","getRole":{"!description":"Gets current value of property <code>role<\/code>.\n\nHow values of measure will be rendered in the chart. Possible role values are \"axis1\", \"axis2\", \"axis3\", and \"axis4\".\nThe default is \"axis1\".\nThey correspond to the well-known concepts of axis identifiers in the Cartesian coordinate system, e.g. a Y-axis in a bar/column/line chart, an X- and a Y-axis in a scatter chart, or two Y-axes in bar charts, and an optional third axis for the weight/size/intensity/temperature of a data point.\n\nDefault value is <code>axis1<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.chart.data.Measure with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"setUnitBinding":{"!description":"Sets a new value for property <code>unitBinding<\/code>.\n\nUnit for the measure, a pointer using the binding syntax to some field containing the unit.\nValue of the given field from the same data record will be displayed after formatted measure value in data label, tooltip and chart popover.\nNOTE: If the unit field is not set as visible dimension in chart, or more than one unit value exists \nfor any visible dimension value combination, they will be rendered in the chart resulting different chart layout.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sUnitBinding: String) -> sap.chart.data.Measure","parameters":{"sUnitBinding":"type: string, description: New value for property <code>unitBinding<\/code>"}},"!constructorDescription":"Constructor for a new ui5/data/Measure.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getUnitBinding unitBinding} : string<\/li>\n<li>{@link #getValueFormat valueFormat} : string<\/li>\n<li>{@link #getRole role} : string (default: axis1)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/chart/data/Measure","!helpDescription":"Definition of a single measure in a chart","setRole":{"!description":"Sets a new value for property <code>role<\/code>.\n\nHow values of measure will be rendered in the chart. Possible role values are \"axis1\", \"axis2\", \"axis3\", and \"axis4\".\nThe default is \"axis1\".\nThey correspond to the well-known concepts of axis identifiers in the Cartesian coordinate system, e.g. a Y-axis in a bar/column/line chart, an X- and a Y-axis in a scatter chart, or two Y-axes in bar charts, and an optional third axis for the weight/size/intensity/temperature of a data point.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>axis1<\/code>.","!static":false,"!category":"function","!type":"fn(sRole: String) -> sap.chart.data.Measure","parameters":{"sRole":"type: string, description: New value for property <code>role<\/code>"}},"setLabel":{"!description":"Sets a new value for property <code>label<\/code>.\n\nLabel for the Measure, either as a string literal or by a pointer using the binding syntax to some property containing the label.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLabel: String) -> sap.chart.data.Measure","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}},"setValueFormat":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Please use {@link sap.chart.Chart#setVizProperties} to set related formatStrings instead.<br>Sets a new value for property <code>valueFormat<\/code>.\n\nA (core UI5) format pattern to be used by the formatter to format the measure value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sValueFormat: String) -> sap.chart.data.Measure","parameters":{"sValueFormat":"type: string, description: New value for property <code>valueFormat<\/code>"}}},"sap.chart.SelectionMode":{"!description":"Enumeration for supported selection mode in analytical chart","!module":"sap/chart/library","!helpDescription":"Enumeration for supported selection mode in analytical chart","Single":{"!description":"Single selection mode, only one set of data points can be selected at once.","!category":"enum","!type":"String"},"!category":"namespace","Multi":{"!description":"Multi selection mode, multiple sets of data points can be selected at once.","!category":"enum","!type":"String"},"None":{"!description":"None selection mode, no data points can be selected.","!category":"enum","!type":"String"}},"sap.chart.data.Dimension":{"!description":"Definition of a single dimension in a chart","setName":{"!description":"Sets a new value for property <code>name<\/code>.\n\nProperty in the \"data\" model holding the (always unique) Dimension key.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sName: String) -> sap.chart.data.Dimension","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"}},"getMetadata":{"!description":"Returns a metadata object for class sap.chart.data.Dimension.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"getLabel":{"!description":"Gets current value of property <code>label<\/code>.\n\nLabel for the Dimension, either as a string literal or by a pointer using the binding syntax to some property containing the label.","!static":false,"!category":"function","!type":"fn() -> String"},"getName":{"!description":"Gets current value of property <code>name<\/code>.\n\nProperty in the \"data\" model holding the (always unique) Dimension key.","!static":false,"!category":"function","!type":"fn() -> String"},"setDisplayText":{"!description":"Sets a new value for property <code>displayText<\/code>.\n\nWhether a text is displayed. If the \"textProperty\" property has not been specified, it will be derived from the metadata.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn(bDisplayText: Boolean) -> sap.chart.data.Dimension","parameters":{"bDisplayText":"type: boolean, description: New value for property <code>displayText<\/code>"}},"!proto":"sap.ui.core.Element","getRole":{"!description":"Gets current value of property <code>role<\/code>.\n\nHow the Dimension will influence the chart layout. Possible values are \"category\" or \"series\".\nThe default is \"category\".\nNOTE: Has no effect if the Dimension is used as inResultDimensions by Chart\n\nDefault value is <code>category<\/code>.","!static":false,"!category":"function","!type":"fn() -> String"},"setTextFormatter":{"!description":"Sets a new value for property <code>textFormatter<\/code>.\n\nFunction returning a formatted text for a Dimension key value that will be used for axis labelling. If specified, this property takes precedence over the \"textProperty\" property of the Dimension.\nDimension key value and the corresponding text will be passed to the supplied function as parameters.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(fnTextFormatter: fn()) -> sap.chart.data.Dimension","parameters":{"fnTextFormatter":"type: function, description: New value for property <code>textFormatter<\/code>"}},"setTextProperty":{"!description":"Sets a new value for property <code>textProperty<\/code>.\n\nText for a Dimension key value, typically by a pointer using the binding syntax to some property containing the text.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTextProperty: String) -> sap.chart.data.Dimension","parameters":{"sTextProperty":"type: string, description: New value for property <code>textProperty<\/code>"}},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.chart.data.Dimension with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!constructorDescription":"Constructor for a new ui5/data/Dimension.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getTextFormatter textFormatter} : function<\/li>\n<li>{@link #getTextProperty textProperty} : string<\/li>\n<li>{@link #getDisplayText displayText} : boolean (default: true)<\/li>\n<li>{@link #getRole role} : string (default: category)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/chart/data/Dimension","!helpDescription":"Definition of a single dimension in a chart","setRole":{"!description":"Sets a new value for property <code>role<\/code>.\n\nHow the Dimension will influence the chart layout. Possible values are \"category\" or \"series\".\nThe default is \"category\".\nNOTE: Has no effect if the Dimension is used as inResultDimensions by Chart\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>category<\/code>.","!static":false,"!category":"function","!type":"fn(sRole: String) -> sap.chart.data.Dimension","parameters":{"sRole":"type: string, description: New value for property <code>role<\/code>"}},"setLabel":{"!description":"Sets a new value for property <code>label<\/code>.\n\nLabel for the Dimension, either as a string literal or by a pointer using the binding syntax to some property containing the label.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sLabel: String) -> sap.chart.data.Dimension","parameters":{"sLabel":"type: string, description: New value for property <code>label<\/code>"}},"getTextFormatter":{"!description":"Gets current value of property <code>textFormatter<\/code>.\n\nFunction returning a formatted text for a Dimension key value that will be used for axis labelling. If specified, this property takes precedence over the \"textProperty\" property of the Dimension.\nDimension key value and the corresponding text will be passed to the supplied function as parameters.","!static":false,"!category":"function","!type":"fn() -> fn()"},"getTextProperty":{"!description":"Gets current value of property <code>textProperty<\/code>.\n\nText for a Dimension key value, typically by a pointer using the binding syntax to some property containing the text.","!static":false,"!category":"function","!type":"fn() -> String"},"getDisplayText":{"!description":"Gets current value of property <code>displayText<\/code>.\n\nWhether a text is displayed. If the \"textProperty\" property has not been specified, it will be derived from the metadata.\n\nDefault value is <code>true<\/code>.","!static":false,"!category":"function","!type":"fn() -> Boolean"}},"sap.chart.data.Measure_obj":{"extend":{"!description":"Creates a new subclass of class sap.chart.data.Measure with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.chart.data.Measure"},"sap.chart.data.TimeDimension_obj":{"extend":{"!description":"Creates a new subclass of class sap.chart.data.TimeDimension with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.chart.data.Dimension.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.chart.data.TimeDimension"},"sap.chart.data.TimeDimension":{"!description":"Definition of a single time dimension in a chart","extend":{"!description":"Creates a new subclass of class sap.chart.data.TimeDimension with name <code>sClassName<\/code>\nand enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.chart.data.Dimension.extend}.","!static":true,"!category":"function","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","parameters":{"oClassInfo":"type: object, description: Object literal with information about the class","FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","sClassName":"type: string, description: Name of the class being created"}},"getMetadata":{"!description":"Returns a metadata object for class sap.chart.data.TimeDimension.","!static":true,"!category":"function","!type":"fn() -> sap.ui.base.Metadata"},"setTimeUnit":{"!description":"Sets a new value for property <code>timeUnit<\/code>.\n\nDetailed unit infomation of TimeDimension. Please refer to {@link sap.chart.TimeUnitType TimeUnitType}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!static":false,"!category":"function","!type":"fn(sTimeUnit: String) -> sap.chart.data.TimeDimension","parameters":{"sTimeUnit":"type: string, description: New value for property <code>timeUnit<\/code>"}},"!constructorDescription":"Constructor for a new ui5/data/TimeDimension.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTimeUnit timeUnit} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.chart.data.Dimension#constructor sap.chart.data.Dimension}\ncan be used as well.","!module":"sap/chart/data/TimeDimension","!helpDescription":"Definition of a single time dimension in a chart","!proto":"sap.chart.data.Dimension","!category":"class","getTimeUnit":{"!description":"Gets current value of property <code>timeUnit<\/code>.\n\nDetailed unit infomation of TimeDimension. Please refer to {@link sap.chart.TimeUnitType TimeUnitType}.","!static":false,"!category":"function","!type":"fn() -> String"}},"sap.chart":{"data":"sap.chart.data","!category":"namespace","uiConfig":{"!description":"Configuration for initialization to VizControl. This property could only set via settings parameter in Constructor.","!category":"enum","!type":"Object"},"vizScales":{"!description":"/** Chart scales, refer to chart property <a href=\"../../vizdocs/index.html\" target=\"_blank\">documentation<\/a> for more details.","!category":"enum","!type":"[Object]"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!category":"enum","!type":"Number"},"busy":{"!description":"Whether the control is currently in busy state.","!category":"enum","!type":"Boolean"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to. All fields in a logical field group should share the same <code>fieldGroupId<\/code>.\nOnce a logical field group is left, the validateFieldGroup event is raised.","!category":"enum","!type":"[String]"},"api":"sap.chart.api","visibleMeasures":{"!description":"Names of the Measures to be displayed in the Chart.\n\nDepending on chart type, insufficient number of visible <code>Measure<\/code>s will cause errors.","!category":"enum","!type":"[String]"},"Chart":"sap.chart.Chart_obj","visibleDimensions":{"!description":"Names of the Dimensions to be displayed in the Chart.\n\nDepending on chart type, insufficient number of visible <code>Dimension<\/code>s will cause error.","!category":"enum","!type":"[String]"},"height":{"!description":"Height of the VizControl as a CSS size.","!category":"enum","!type":"sap.ui.core.CSSSize"},"!description":"Chart controls based on Vizframe","enablePagination":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!category":"enum","!type":"Boolean"},"visible":{"!description":"Whether the control should be visible on the screen. If set to false, a placeholder is rendered instead of the real control","!category":"enum","!type":"Boolean"},"vizProperties":{"!description":"Chart properties, refer to chart property <a href=\"../../vizdocs/index.html\" target=\"_blank\">documentation<\/a> for more details.","!category":"enum","!type":"Object"},"isAnalytical":{"!description":"Whether or not an aggregated entity set is bound to the chart.","!category":"enum","!type":"Boolean"},"ChartType":"sap.chart.ChartType","TimeUnitType":"sap.chart.TimeUnitType","selectionBehavior":{"!description":"Chart selection behavior.\n\nSupported values are \"DATAPOINT\", \"CATEGORY\", or \"SERIES\", case insensitive, always return in upper case.\n\nUnsupported values will be ignored.","!category":"enum","!type":"String"},"!module":"sap/chart/library","!helpDescription":"Chart controls based on Vizframe","width":{"!description":"Width of the VizControl as a CSS size.","!category":"enum","!type":"sap.ui.core.CSSSize"},"chartType":{"!description":"Type of the Chart.\n\nRefer to supported chart enum {@link sap.chart.ChartType}","!category":"enum","!type":"String"},"inResultDimensions":{"!description":"Names of the inResult dimensions.\n\ninResult dimension do not show up in chart layout, i.e. axis/legend. They do show in tooltip, popover, and in selection results.","!category":"enum","!type":"[String]"},"selectionMode":{"!description":"Chart selection mode.\n\nSupported values are {@link sap.chart.SelectionMode.Single} or {@link sap.chart.SelectionMode.Multi}, case insensitive, always return in upper case.\n\nUnsupported values will be ignored.","!category":"enum","!type":"String"},"SelectionMode":"sap.chart.SelectionMode"}}}