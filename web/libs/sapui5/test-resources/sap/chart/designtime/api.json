{
	"$schema-ref": "http://schemas.sap.com/sapui5/designtime/api.json/1.0",
	"version": "1.38.33",
	"library": "sap.chart",
	"symbols": [
		{
			"kind": "namespace",
			"name": "sap.chart",
			"basename": "chart",
			"resource": "sap/chart/library.js",
			"module": "sap/chart/library",
			"static": true,
			"visibility": "public",
			"description": "Chart controls based on Vizframe"
		},
		{
			"kind": "namespace",
			"name": "sap.chart.api",
			"basename": "api",
			"resource": "sap/chart/library.js",
			"module": "sap/chart/library",
			"static": true,
			"visibility": "public",
			"description": "Package with additional chart APIs",
			"methods": [
				{
					"name": "getChartTypeLayout",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "object",
						"description": "the chart layout object of the following form:\n<pre>\n{\n  dimensions: [],     // names of dimensions that will be rendered\n\t measures:\t [],     // names of measures that will be rendered\n\t errors:\t [],     // reasons of why the chart cannot be rendered with the given (chartType, dimensions, measures) combination\n}"
					},
					"parameters": [
						{
							"name": "sChartType",
							"type": "string",
							"optional": false,
							"description": "chart type"
						},
						{
							"name": "aDimensions",
							"type": "object[]",
							"optional": false,
							"description": "visible Dimensions of the form {name: sName}"
						},
						{
							"name": "aMeasures",
							"type": "object[]",
							"optional": false,
							"description": "visible Measures of the form {name: sName}."
						}
					],
					"description": "Get the Dimensions and Measures layout for a certain ChartType with provided Dimensions and Measures."
				},
				{
					"name": "getChartTypes",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "object",
						"description": "a map with chartType as key, localized chart name as value."
					},
					"description": "Returns all chart types currently supported by chart control (subset of viz types)."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.chart.Chart",
			"basename": "Chart",
			"resource": "sap/chart/Chart.js",
			"module": "sap/chart/Chart",
			"static": true,
			"visibility": "public",
			"since": "1.32.0",
			"extends": "sap.viz.ui5.controls.common.BaseControl",
			"description": "UI5 Chart control",
			"ui5-metadata": {
				"properties": [
					{
						"name": "chartType",
						"type": "string",
						"defaultValue": "bar",
						"group": "Misc",
						"visibility": "public",
						"description": "Type of the Chart.\n\nRefer to supported chart enum {@link sap.chart.ChartType}",
						"methods": [
							"getChartType",
							"setChartType"
						]
					},
					{
						"name": "uiConfig",
						"type": "object",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Configuration for initialization to VizControl. This property could only set via settings parameter in Constructor.",
						"methods": [
							"getUiConfig",
							"setUiConfig"
						]
					},
					{
						"name": "visibleDimensions",
						"type": "string[]",
						"defaultValue": "[]",
						"group": "Misc",
						"visibility": "public",
						"description": "Names of the Dimensions to be displayed in the Chart.\n\nDepending on chart type, insufficient number of visible <code>Dimension</code>s will cause error.",
						"methods": [
							"getVisibleDimensions",
							"setVisibleDimensions"
						]
					},
					{
						"name": "inResultDimensions",
						"type": "string[]",
						"defaultValue": "[]",
						"group": "Misc",
						"visibility": "public",
						"description": "Names of the inResult dimensions.\n\ninResult dimension do not show up in chart layout, i.e. axis/legend. They do show in tooltip, popover, and in selection results.",
						"methods": [
							"getInResultDimensions",
							"setInResultDimensions"
						]
					},
					{
						"name": "visibleMeasures",
						"type": "string[]",
						"defaultValue": "[]",
						"group": "Misc",
						"visibility": "public",
						"description": "Names of the Measures to be displayed in the Chart.\n\nDepending on chart type, insufficient number of visible <code>Measure</code>s will cause errors.",
						"methods": [
							"getVisibleMeasures",
							"setVisibleMeasures"
						]
					},
					{
						"name": "vizProperties",
						"type": "object",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Chart properties, refer to chart property <a href=\"../../vizdocs/index.html\" target=\"_blank\">documentation</a> for more details.",
						"methods": [
							"getVizProperties",
							"setVizProperties"
						]
					},
					{
						"name": "vizScales",
						"type": "object[]",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "/** Chart scales, refer to chart property <a href=\"../../vizdocs/index.html\" target=\"_blank\">documentation</a> for more details.",
						"methods": [
							"getVizScales",
							"setVizScales"
						]
					},
					{
						"name": "isAnalytical",
						"type": "boolean",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Whether or not an aggregated entity set is bound to the chart.",
						"methods": [
							"getIsAnalytical",
							"setIsAnalytical"
						]
					},
					{
						"name": "selectionBehavior",
						"type": "string",
						"defaultValue": "DATAPOINT",
						"group": "Misc",
						"visibility": "public",
						"description": "Chart selection behavior.\n\nSupported values are \"DATAPOINT\", \"CATEGORY\", or \"SERIES\", case insensitive, always return in upper case.\n\nUnsupported values will be ignored.",
						"methods": [
							"getSelectionBehavior",
							"setSelectionBehavior"
						]
					},
					{
						"name": "selectionMode",
						"type": "string",
						"defaultValue": "sap.chart.SelectionMode.Multi",
						"group": "Misc",
						"visibility": "public",
						"description": "Chart selection mode.\n\nSupported values are {@link sap.chart.SelectionMode.Single} or {@link sap.chart.SelectionMode.Multi}, case insensitive, always return in upper case.\n\nUnsupported values will be ignored.",
						"methods": [
							"getSelectionMode",
							"setSelectionMode"
						]
					},
					{
						"name": "enablePagination",
						"type": "boolean",
						"defaultValue": false,
						"group": "Misc",
						"visibility": "public",
						"description": "Enable pagination mode.\n\nPagination mode empowers users to visualize dataset page by page by scrolling back or forth. Currently there are some limitations of this mode in some chart transversal features. Please refer to release notes for details.",
						"experimental": {
							"text": "<b>This property is only for experimental usage!!! It only works with constructor and cannot be changed during runtime.</b>"
						},
						"methods": [
							"getEnablePagination",
							"setEnablePagination"
						]
					}
				],
				"aggregations": [
					{
						"name": "data",
						"singularName": "data",
						"type": "sap.ui.core.Element",
						"cardinality": "0..n",
						"visibility": "public",
						"bindable": true,
						"description": "Actual data. It can be bound to an (analytical) OData model.",
						"methods": [
							"getData",
							"destroyData",
							"insertData",
							"addData",
							"removeData",
							"indexOfData",
							"removeAllData",
							"bindData",
							"unbindData"
						]
					},
					{
						"name": "_vizFrame",
						"singularName": "_vizFrame",
						"type": "sap.viz.ui5.controls.VizFrame",
						"cardinality": "0..1",
						"visibility": "hidden",
						"description": "Internal VizFrame instance which does the actual rendering work.",
						"methods": [
							"get_vizFrame",
							"destroy_vizFrame",
							"set_vizFrame"
						]
					},
					{
						"name": "dimensions",
						"singularName": "dimension",
						"type": "sap.chart.data.Dimension",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Dimensions of the data.",
						"methods": [
							"getDimensions",
							"destroyDimensions",
							"insertDimension",
							"addDimension",
							"removeDimension",
							"indexOfDimension",
							"removeAllDimensions"
						]
					},
					{
						"name": "measures",
						"singularName": "measure",
						"type": "sap.chart.data.Measure",
						"cardinality": "0..n",
						"visibility": "public",
						"description": "Measures of the data.",
						"methods": [
							"getMeasures",
							"destroyMeasures",
							"insertMeasure",
							"addMeasure",
							"removeMeasure",
							"indexOfMeasure",
							"removeAllMeasures"
						]
					}
				],
				"events": [
					{
						"name": "drilledDown",
						"visibility": "public",
						"description": "fired after a drill-down operation",
						"parameters": {
							"dimensions": {
								"name": "dimensions",
								"type": "string[]",
								"description": "array of strings holding the names of the added dimensions"
							}
						},
						"methods": [
							"attachDrilledDown",
							"detachDrilledDown",
							"fireDrilledDown"
						]
					},
					{
						"name": "drilledUp",
						"visibility": "public",
						"description": "fired after a drill-up operation",
						"parameters": {
							"dimensions": {
								"name": "dimensions",
								"type": "string[]",
								"description": "array of strings holding the names of the removed dimensions"
							}
						},
						"methods": [
							"attachDrilledUp",
							"detachDrilledUp",
							"fireDrilledUp"
						]
					},
					{
						"name": "renderComplete",
						"visibility": "public",
						"description": "Event fires when the rendering ends.",
						"methods": [
							"attachRenderComplete",
							"detachRenderComplete",
							"fireRenderComplete"
						]
					},
					{
						"name": "selectData",
						"visibility": "public",
						"description": "Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in.",
						"methods": [
							"attachSelectData",
							"detachSelectData",
							"fireSelectData"
						]
					},
					{
						"name": "deselectData",
						"visibility": "public",
						"description": "Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in",
						"methods": [
							"attachDeselectData",
							"detachDeselectData",
							"fireDeselectData"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new Chart.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"events": [
				{
					"name": "deselectData",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in"
				},
				{
					"name": "drilledDown",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"dimensions": {
											"name": "dimensions",
											"type": "string[]",
											"optional": false,
											"description": "array of strings holding the names of the added dimensions"
										}
									}
								}
							}
						}
					],
					"description": "fired after a drill-down operation"
				},
				{
					"name": "drilledUp",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false,
									"parameterProperties": {
										"dimensions": {
											"name": "dimensions",
											"type": "string[]",
											"optional": false,
											"description": "array of strings holding the names of the removed dimensions"
										}
									}
								}
							}
						}
					],
					"description": "fired after a drill-up operation"
				},
				{
					"name": "renderComplete",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event fires when the rendering ends."
				},
				{
					"name": "selectData",
					"visibility": "public",
					"parameters": [
						{
							"name": "oControlEvent",
							"type": "sap.ui.base.Event",
							"parameterProperties": {
								"getSource": {
									"name": "getSource",
									"type": "sap.ui.base.EventProvider",
									"optional": false
								},
								"getParameters": {
									"name": "getParameters",
									"type": "object",
									"optional": false
								}
							}
						}
					],
					"description": "Event fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in."
				}
			],
			"methods": [
				{
					"name": "addData",
					"visibility": "public",
					"description": "Unsupported.\nChart manages the \"data\" aggregation only via data binding. The method \"addData\" therefore cannot be used programmatically!"
				},
				{
					"name": "addDimension",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDimension",
							"type": "sap.chart.data.Dimension",
							"optional": false,
							"description": "the dimension to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some dimension to the aggregation <code>dimensions</code>."
				},
				{
					"name": "addMeasure",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oMeasure",
							"type": "sap.chart.data.Measure",
							"optional": false,
							"description": "the measure to add; if empty, nothing is inserted"
						}
					],
					"description": "Adds some measure to the aggregation <code>measures</code>."
				},
				{
					"name": "addSelectedCategories",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "aCategories",
							"type": "array",
							"optional": false,
							"description": "an array of category objects"
						}
					],
					"description": "Add one or more categories to current category selections, specified by category objects.\n\nCategory object has the following structure:\n<pre>\n{\n\t   measure: measureName,\n\t   dimensions: {\n\t\t   dimensionName1: dimensionValue1,\n\t\t   dimensionName2: dimensionValue2,\n\t\t   ...\n\t   }\n}\n</pre>\n\nOnly works when selectionBehavior is \"CATEGORY\""
				},
				{
					"name": "addSelectedDataPoints",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "aDataPoints",
							"type": "array",
							"optional": false,
							"description": "an array of datapoint objects."
						}
					],
					"description": "Add one or more data points to current data point selection, specified by datapoint objects.\n\nDatapoint object has the following structure:\n<pre>\n{\n\t\tgroupId:  \"groupId\",\t\t  // group ID (optional)\n\t\tindex:\t\tindex,\t\t\t\t  // index of the data in the group\n\t\tmeasures: [\"measureId\"]   // measure IDs\n}\n</pre>\n\nOnly works when selectionBehavior is \"DATAPOINT\""
				},
				{
					"name": "addSelectedSeries",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "aSeries",
							"type": "array",
							"optional": false,
							"description": "an array of series objects"
						}
					],
					"description": "Add one or more series to current series selections, specified by series objects.\n\nSeries object has the following structure:\n<pre>\n{\n\t   measure: measureName,\n\t   dimensions: {\n\t\t   dimensionName1: dimensionValue1,\n\t\t   dimensionName2: dimensionValue2,\n\t\t   ...\n\t   }\n}\n</pre>\n\nOnly works when selectionBehavior is \"SERIES\""
				},
				{
					"name": "attachDeselectData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.chart.Chart</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>deselectData</code> event of this <code>sap.chart.Chart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.chart.Chart</code> itself.\n\nEvent fires when certain data point(s) is(are) deselected, data context of deselected item(s) would be passed in"
				},
				{
					"name": "attachDrilledDown",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.chart.Chart</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>drilledDown</code> event of this <code>sap.chart.Chart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.chart.Chart</code> itself.\n\nfired after a drill-down operation"
				},
				{
					"name": "attachDrilledUp",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.chart.Chart</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>drilledUp</code> event of this <code>sap.chart.Chart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.chart.Chart</code> itself.\n\nfired after a drill-up operation"
				},
				{
					"name": "attachRenderComplete",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.chart.Chart</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>renderComplete</code> event of this <code>sap.chart.Chart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.chart.Chart</code> itself.\n\nEvent fires when the rendering ends."
				},
				{
					"name": "attachSelectData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oData",
							"type": "object",
							"optional": true,
							"description": "An application-specific payload object that will be passed to the event handler along with the event object when firing the event"
						},
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": true,
							"description": "Context object to call the event handler with. Defaults to this <code>sap.chart.Chart</code> itself"
						}
					],
					"description": "Attaches event handler <code>fnFunction</code> to the <code>selectData</code> event of this <code>sap.chart.Chart</code>.\n\nWhen called, the context of the event handler (its <code>this</code>) will be bound to <code>oListener</code> if specified, \notherwise it will be bound to this <code>sap.chart.Chart</code> itself.\n\nEvent fires when certain data point(s) is(are) selected, data context of selected item(s) would be passed in."
				},
				{
					"name": "bindData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oBindingInfo",
							"type": "object",
							"optional": false,
							"description": "The binding information"
						}
					],
					"description": "Binds aggregation <code>data</code> to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a \ndetailed description of the possible properties of <code>oBindingInfo</code>."
				},
				{
					"name": "destroyData",
					"visibility": "public",
					"description": "Unsupported.\nChart manages the \"data\" aggregation only via data binding. The method \"destroyData\" therefore cannot be used programmatically!"
				},
				{
					"name": "destroyDimensions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the dimensions in the aggregation <code>dimensions</code>."
				},
				{
					"name": "destroyMeasures",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Destroys all the measures in the aggregation <code>measures</code>."
				},
				{
					"name": "detachDeselectData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>deselectData</code> event of this <code>sap.chart.Chart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachDrilledDown",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>drilledDown</code> event of this <code>sap.chart.Chart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachDrilledUp",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>drilledUp</code> event of this <code>sap.chart.Chart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachRenderComplete",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>renderComplete</code> event of this <code>sap.chart.Chart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "detachSelectData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnFunction",
							"type": "function",
							"optional": false,
							"description": "The function to be called, when the event occurs"
						},
						{
							"name": "oListener",
							"type": "object",
							"optional": false,
							"description": "Context object on which the given function had to be called"
						}
					],
					"description": "Detaches event handler <code>fnFunction</code> from the <code>selectData</code> event of this <code>sap.chart.Chart</code>.\n\nThe passed function and listener object must match the ones used for event registration."
				},
				{
					"name": "drillDown",
					"visibility": "public",
					"parameters": [
						{
							"name": "vDimensions",
							"type": "array",
							"optional": false,
							"description": "an array, or just a single instance, of either Dimension instance or Dimension name to drill down"
						}
					],
					"description": "Drill down on specific Dimension(s).\n\nThe drill down Dimension(s) must present in the Dimension aggregation\nand must NOT present in previous drill down or be visible already."
				},
				{
					"name": "drillUp",
					"visibility": "public",
					"description": "Drill up to previous drill down state, or remove the last visible Dimension"
				},
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.chart.Chart with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.viz.ui5.controls.common.BaseControl.extend}."
				},
				{
					"name": "fireDeselectData",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>deselectData</code> to attached listeners."
				},
				{
					"name": "fireDrilledDown",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>drilledDown</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>dimensions</code> of type <code>string[]</code>array of strings holding the names of the added dimensions</li>\n</ul>"
				},
				{
					"name": "fireDrilledUp",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>drilledUp</code> to attached listeners.\n\nExpects the following event parameters:\n<ul>\n<li><code>dimensions</code> of type <code>string[]</code>array of strings holding the names of the removed dimensions</li>\n</ul>"
				},
				{
					"name": "fireRenderComplete",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>renderComplete</code> to attached listeners."
				},
				{
					"name": "fireSelectData",
					"visibility": "protected",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "mArguments",
							"type": "Map",
							"optional": true,
							"description": "The arguments to pass along with the event"
						}
					],
					"description": "Fires event <code>selectData</code> to attached listeners."
				},
				{
					"name": "getAvailableChartTypes",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "chart types and errors for unavailable chart types, grouped by availability"
					},
					"description": "Returns available and unavailable chart types with current Dimensions and Measures.\nAn error info will be returned along with each unavailable chart types.\n\n<pre>\n{\n\t\t available: [{\n\t\t\t\t chart: \"chartType\"\n\t\t }, ...],\n\t\t unavailable: [{\n\t\t\t\t chart: \"chartType\"\n\t\t\t\t error: {\n\t\t\t\t\t\t missing: {\n\t\t\t\t\t\t\t\t Dimension: n,\n\t\t\t\t\t\t\t\t Measure: n,\n\t\t\t\t\t\t\t\t DateTimeDimension: n\n\t\t\t\t\t\t }\n\t\t\t\t }\n\t\t }, ...]\n}\n</pre>"
				},
				{
					"name": "getChartType",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>chartType</code>"
					},
					"description": "Gets current value of property <code>chartType</code>.\n\nType of the Chart.\n\nRefer to supported chart enum {@link sap.chart.ChartType}\n\nDefault value is <code>bar</code>."
				},
				{
					"name": "getData",
					"visibility": "public",
					"description": "Unsupported.\nChart manages the \"data\" aggregation only via data binding. The method \"getData\" therefore cannot be used programmatically!"
				},
				{
					"name": "getDimensionByName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.data.Dimension",
						"description": "Dimension of the specified name."
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "name of the Dimension to get"
						}
					],
					"description": "Return Dimension with the given name."
				},
				{
					"name": "getDimensions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.data.Dimension[]"
					},
					"description": "Gets content of aggregation <code>dimensions</code>.\n\nDimensions of the data."
				},
				{
					"name": "getEnablePagination",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>enablePagination</code>"
					},
					"description": "Gets current value of property <code>enablePagination</code>.\n\nEnable pagination mode.\n\nPagination mode empowers users to visualize dataset page by page by scrolling back or forth. Currently there are some limitations of this mode in some chart transversal features. Please refer to release notes for details.\n\nDefault value is <code>false</code>.",
					"experimental": {
						"text": "<b>This property is only for experimental usage!!! It only works with constructor and cannot be changed during runtime.</b>"
					}
				},
				{
					"name": "getInResultDimensions",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "Value of property <code>inResultDimensions</code>"
					},
					"description": "Gets current value of property <code>inResultDimensions</code>.\n\nNames of the inResult dimensions.\n\ninResult dimension do not show up in chart layout, i.e. axis/legend. They do show in tooltip, popover, and in selection results.\n\nDefault value is <code>[]</code>."
				},
				{
					"name": "getIsAnalytical",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>isAnalytical</code>"
					},
					"description": "Gets current value of property <code>isAnalytical</code>.\n\nWhether or not an aggregated entity set is bound to the chart."
				},
				{
					"name": "getMeasureByName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.data.Measure",
						"description": "Measure of the specified name."
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "name of the Measure to get"
						}
					],
					"description": "Return Measure with the given name."
				},
				{
					"name": "getMeasures",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.data.Measure[]"
					},
					"description": "Gets content of aggregation <code>measures</code>.\n\nMeasures of the data."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.chart.Chart."
				},
				{
					"name": "getSelectedCategories",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "a total number of selected data points, and an array of category objects for selected categories."
					},
					"description": "Return category objects of currently selected categories and a total number of selected data points.\n\nCategory object has the following structure:\n<pre>\n{\n\t   measure: measureName,\n\t   dimensions: {\n\t\t   dimensionName1: dimensionValue1,\n\t\t   dimensionName2: dimensionValue2,\n\t\t   ...\n\t   }\n}\n</pre>\n\nReturn 0 and empty list if selectionBehavior is not \"CATEGORY\""
				},
				{
					"name": "getSelectedDataPoints",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "a total number of selected data points, and an array of datapoint objects."
					},
					"description": "Return a total number and an array of datapoint objects (including a Context object) of currently selected data points.\n\nDatapoint object has the following structure:\n<pre>\n{\n\t\tgroupId:  \"groupId\",\t\t  // group ID (optional)\n\t\tindex:\t\tindex,\t\t\t\t  // index of the data in the group\n\t\tmeasures: [\"measureId\"]   // measure IDs (data points created from the same Context object\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  // differing only in measure names are merged together)\n\t\tcontext:  [Context]\t\t   // Context object\n}\n</pre>\n\nOnly works when selectionBehavior is \"DATAPOINT\""
				},
				{
					"name": "getSelectedSeries",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "object containing a total number of selected data points,\nand an array of series objects for selected series."
					},
					"description": "Return series objects of currently selected series and a total number of selected data points.\n\nSeries object has the following structure:\n<pre>\n{\n\t   measure: measureName,\n\t   dimensions: {\n\t\t   dimensionName1: dimensionValue1,\n\t\t   dimensionName2: dimensionValue2,\n\t\t   ...\n\t   }\n}\n</pre>\n\nReturn 0 and empty list if selectionBehavior is not \"SERIES\""
				},
				{
					"name": "getSelectionBehavior",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>selectionBehavior</code>"
					},
					"description": "Gets current value of property <code>selectionBehavior</code>.\n\nChart selection behavior.\n\nSupported values are \"DATAPOINT\", \"CATEGORY\", or \"SERIES\", case insensitive, always return in upper case.\n\nUnsupported values will be ignored.\n\nDefault value is <code>DATAPOINT</code>."
				},
				{
					"name": "getSelectionMode",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>selectionMode</code>"
					},
					"description": "Gets current value of property <code>selectionMode</code>.\n\nChart selection mode.\n\nSupported values are {@link sap.chart.SelectionMode.Single} or {@link sap.chart.SelectionMode.Multi}, case insensitive, always return in upper case.\n\nUnsupported values will be ignored.\n\nDefault value is <code>sap.chart.SelectionMode.Multi</code>."
				},
				{
					"name": "getTimeDimensions",
					"visibility": "public",
					"returnValue": {
						"type": "array",
						"description": "Dimensions which are instance of TimeDimension."
					},
					"description": "Return all TimeDimensions from current Dimensions."
				},
				{
					"name": "getUiConfig",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "Value of property <code>uiConfig</code>"
					},
					"description": "Gets current value of property <code>uiConfig</code>.\n\nConfiguration for initialization to VizControl. This property could only set via settings parameter in Constructor."
				},
				{
					"name": "getVisibleDimensions",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "Value of property <code>visibleDimensions</code>"
					},
					"description": "Gets current value of property <code>visibleDimensions</code>.\n\nNames of the Dimensions to be displayed in the Chart.\n\nDepending on chart type, insufficient number of visible <code>Dimension</code>s will cause error.\n\nDefault value is <code>[]</code>."
				},
				{
					"name": "getVisibleMeasures",
					"visibility": "public",
					"returnValue": {
						"type": "string[]",
						"description": "Value of property <code>visibleMeasures</code>"
					},
					"description": "Gets current value of property <code>visibleMeasures</code>.\n\nNames of the Measures to be displayed in the Chart.\n\nDepending on chart type, insufficient number of visible <code>Measure</code>s will cause errors.\n\nDefault value is <code>[]</code>."
				},
				{
					"name": "getVizProperties",
					"visibility": "public",
					"returnValue": {
						"type": "object",
						"description": "the Chart properties object"
					},
					"description": "Return Chart's properties.\n\nRefer to chart property <a href=\"../../vizdocs/index.html\" target=\"_blank\">documentation</a> for more details."
				},
				{
					"name": "getVizScales",
					"visibility": "public",
					"returnValue": {
						"type": "object[]",
						"description": "an array of scale objects"
					},
					"description": "Return Chart's scales.\n\nRefer to chart property <a href=\"../../vizdocs/index.html\" target=\"_blank\">documentation</a> for more details."
				},
				{
					"name": "getVizUid",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Chart UID"
					},
					"description": "Get the UID for Chart. It supports other controls to connect to a viz instance."
				},
				{
					"name": "indexOfData",
					"visibility": "public",
					"description": "Unsupported.\nChart manages the \"data\" aggregation only via data binding. The method \"indexOfData\" therefore cannot be used programmatically!"
				},
				{
					"name": "indexOfDimension",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oDimension",
							"type": "sap.chart.data.Dimension",
							"optional": false,
							"description": "The dimension whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.chart.data.Dimension</code> in the aggregation <code>dimensions</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "indexOfMeasure",
					"visibility": "public",
					"returnValue": {
						"type": "int",
						"description": "The index of the provided control in the aggregation if found, or -1 otherwise"
					},
					"parameters": [
						{
							"name": "oMeasure",
							"type": "sap.chart.data.Measure",
							"optional": false,
							"description": "The measure whose index is looked for"
						}
					],
					"description": "Checks for the provided <code>sap.chart.data.Measure</code> in the aggregation <code>measures</code>.\nand returns its index if found or -1 otherwise."
				},
				{
					"name": "insertData",
					"visibility": "public",
					"description": "Unsupported.\nChart manages the \"data\" aggregation only via data binding. The method \"insertData\" therefore cannot be used programmatically!"
				},
				{
					"name": "insertDimension",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oDimension",
							"type": "sap.chart.data.Dimension",
							"optional": false,
							"description": "the dimension to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the dimension should be inserted at; for\n             a negative value of <code>iIndex</code>, the dimension is inserted at position 0; for a value\n             greater than the current size of the aggregation, the dimension is inserted at\n             the last position"
						}
					],
					"description": "Inserts a dimension into the aggregation <code>dimensions</code>."
				},
				{
					"name": "insertMeasure",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "oMeasure",
							"type": "sap.chart.data.Measure",
							"optional": false,
							"description": "the measure to insert; if empty, nothing is inserted"
						},
						{
							"name": "iIndex",
							"type": "int",
							"optional": false,
							"description": "the <code>0</code>-based index the measure should be inserted at; for\n             a negative value of <code>iIndex</code>, the measure is inserted at position 0; for a value\n             greater than the current size of the aggregation, the measure is inserted at\n             the last position"
						}
					],
					"description": "Inserts a measure into the aggregation <code>measures</code>."
				},
				{
					"name": "removeAllData",
					"visibility": "public",
					"description": "Unsupported.\nChart manages the \"data\" aggregation only via data binding. The method \"removeAllData\" therefore cannot be used programmatically!"
				},
				{
					"name": "removeAllDimensions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.data.Dimension[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>dimensions</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeAllMeasures",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.data.Measure[]",
						"description": "An array of the removed elements (might be empty)"
					},
					"description": "Removes all the controls from the aggregation <code>measures</code>.\n\nAdditionally, it unregisters them from the hosting UIArea."
				},
				{
					"name": "removeData",
					"visibility": "public",
					"description": "Unsupported.\nChart manages the \"data\" aggregation only via data binding. The method \"removeData\" therefore cannot be used programmatically!"
				},
				{
					"name": "removeDimension",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.data.Dimension",
						"description": "The removed dimension or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vDimension",
							"type": "int|string|sap.chart.data.Dimension",
							"optional": false,
							"description": "The dimensionto remove or its index or id"
						}
					],
					"description": "Removes a dimension from the aggregation <code>dimensions</code>."
				},
				{
					"name": "removeMeasure",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.data.Measure",
						"description": "The removed measure or <code>null</code>"
					},
					"parameters": [
						{
							"name": "vMeasure",
							"type": "int|string|sap.chart.data.Measure",
							"optional": false,
							"description": "The measureto remove or its index or id"
						}
					],
					"description": "Removes a measure from the aggregation <code>measures</code>."
				},
				{
					"name": "removeSelectedCategories",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "aCategories",
							"type": "array",
							"optional": false,
							"description": "an array of category objects"
						}
					],
					"description": "Deselect one or more categories from current category selections, specified by category objects.\n\nCategory object has the following structure:\n<pre>\n{\n\t   measure: measureName,\n\t   dimensions: {\n\t\t   dimensionName1: dimensionValue1,\n\t\t   dimensionName2: dimensionValue2,\n\t\t   ...\n\t   }\n}\n</pre>\n\nOnly works when selectionBehavior is \"CATEGORY\""
				},
				{
					"name": "removeSelectedDataPoints",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "aDataPoints",
							"type": "array",
							"optional": false,
							"description": "an array of datapoint objects."
						}
					],
					"description": "Deselect one or more data points from current data point selections, specified by datapoint objects.\n\nDatapoint object has the following structure:\n<pre>\n{\n\t\tgroupId:  \"groupId\",\t\t  // group ID (optional)\n\t\tindex:\t\tindex,\t\t\t\t  // index of the data in the group\n\t\tmeasures: [\"measureId\"]   // measure IDs\n}\n</pre>\n\nOnly works when selectionBehavior is \"DATAPOINT\""
				},
				{
					"name": "removeSelectedSeries",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "aSeries",
							"type": "array",
							"optional": false,
							"description": "an array of series objects"
						}
					],
					"description": "Deselect one or more series from current series selections, specified by series objects.\n\nSeries object has the following structure:\n<pre>\n{\n\t   measure: measureName,\n\t   dimensions: {\n\t\t   dimensionName1: dimensionValue1,\n\t\t   dimensionName2: dimensionValue2,\n\t\t   ...\n\t   }\n}\n</pre>\n\nOnly works when selectionBehavior is \"SERIES\""
				},
				{
					"name": "resetLayout",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Reset to visible layout."
				},
				{
					"name": "setChartType",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sChartType",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>chartType</code>"
						}
					],
					"description": "Sets a new value for property <code>chartType</code>.\n\nType of the Chart.\n\nRefer to supported chart enum {@link sap.chart.ChartType}\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>bar</code>."
				},
				{
					"name": "setEnablePagination",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bEnablePagination",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>enablePagination</code>"
						}
					],
					"description": "Sets a new value for property <code>enablePagination</code>.\n\nEnable pagination mode.\n\nPagination mode empowers users to visualize dataset page by page by scrolling back or forth. Currently there are some limitations of this mode in some chart transversal features. Please refer to release notes for details.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>false</code>.",
					"experimental": {
						"text": "<b>This property is only for experimental usage!!! It only works with constructor and cannot be changed during runtime.</b>"
					}
				},
				{
					"name": "setInResultDimensions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sInResultDimensions",
							"type": "string[]",
							"optional": false,
							"description": "New value for property <code>inResultDimensions</code>"
						}
					],
					"description": "Sets a new value for property <code>inResultDimensions</code>.\n\nNames of the inResult dimensions.\n\ninResult dimension do not show up in chart layout, i.e. axis/legend. They do show in tooltip, popover, and in selection results.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>[]</code>."
				},
				{
					"name": "setIsAnalytical",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bIsAnalytical",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>isAnalytical</code>"
						}
					],
					"description": "Sets a new value for property <code>isAnalytical</code>.\n\nWhether or not an aggregated entity set is bound to the chart.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setSelectedCategories",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "aCategories",
							"type": "array",
							"optional": false,
							"description": "an array of category objects"
						}
					],
					"description": "Select one or more categories, specified by category objects.\n\nCategory object has the following structure:\n<pre>\n{\n\t   measure: measureName,\n\t   dimensions: {\n\t\t   dimensionName1: dimensionValue1,\n\t\t   dimensionName2: dimensionValue2,\n\t\t   ...\n\t   }\n}\n</pre>\n\nOnly works when selectionBehavior is \"CATEGORY\""
				},
				{
					"name": "setSelectedDataPoints",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "aDataPoints",
							"type": "array",
							"optional": false,
							"description": "an array of datapoint objects."
						}
					],
					"description": "Select one or more data points, specified by datapoint objects.\n\nDatapoint object has the following structure:\n<pre>\n{\n\t\tgroupId:  \"groupId\",\t\t  // group ID (optional)\n\t\tindex:\t\tindex,\t\t\t\t  // index of the data in the group\n\t\tmeasures: [\"measureId\"]   // measure IDs\n}\n</pre>\n\nOnly works when selectionBehavior is \"DATAPOINT\""
				},
				{
					"name": "setSelectedSeries",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "aSeries",
							"type": "array",
							"optional": false,
							"description": "an array of series objects"
						}
					],
					"description": "Select one or more series, specified by series objects.\n\nSeries object has the following structure:\n<pre>\n{\n\t   measure: measureName,\n\t   dimensions: {\n\t\t   dimensionName1: dimensionValue1,\n\t\t   dimensionName2: dimensionValue2,\n\t\t   ...\n\t   }\n}\n</pre>\n\nOnly works when selectionBehavior is \"SERIES\""
				},
				{
					"name": "setSelectionBehavior",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSelectionBehavior",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>selectionBehavior</code>"
						}
					],
					"description": "Sets a new value for property <code>selectionBehavior</code>.\n\nChart selection behavior.\n\nSupported values are \"DATAPOINT\", \"CATEGORY\", or \"SERIES\", case insensitive, always return in upper case.\n\nUnsupported values will be ignored.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>DATAPOINT</code>."
				},
				{
					"name": "setSelectionMode",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sSelectionMode",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>selectionMode</code>"
						}
					],
					"description": "Sets a new value for property <code>selectionMode</code>.\n\nChart selection mode.\n\nSupported values are {@link sap.chart.SelectionMode.Single} or {@link sap.chart.SelectionMode.Multi}, case insensitive, always return in upper case.\n\nUnsupported values will be ignored.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>sap.chart.SelectionMode.Multi</code>."
				},
				{
					"name": "setUiConfig",
					"visibility": "public",
					"parameters": [
						{
							"name": "oUiConfig",
							"type": "object",
							"optional": false,
							"description": "the UI configuration"
						}
					],
					"description": "Setter for property uiConfig. uiConfig could only set via settings parameter\nof constructor.\n\nuiConfig from base type could config the instance. Supported uiConfig\nkeyword: applicationSet, showErrorMessage\n\nExample:\n\n<pre>\nvar chart = new sap.chart.Chart({\n 'chartType' : 'bar',\n 'uiConfig' : {\n\t\t  'applicationSet' : 'fiori',\n\t\t  'showErrorMessage' : true\n }\n});\n</pre>"
				},
				{
					"name": "setVisibleDimensions",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sVisibleDimensions",
							"type": "string[]",
							"optional": false,
							"description": "New value for property <code>visibleDimensions</code>"
						}
					],
					"description": "Sets a new value for property <code>visibleDimensions</code>.\n\nNames of the Dimensions to be displayed in the Chart.\n\nDepending on chart type, insufficient number of visible <code>Dimension</code>s will cause error.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>[]</code>."
				},
				{
					"name": "setVisibleMeasures",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sVisibleMeasures",
							"type": "string[]",
							"optional": false,
							"description": "New value for property <code>visibleMeasures</code>"
						}
					],
					"description": "Sets a new value for property <code>visibleMeasures</code>.\n\nNames of the Measures to be displayed in the Chart.\n\nDepending on chart type, insufficient number of visible <code>Measure</code>s will cause errors.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>[]</code>."
				},
				{
					"name": "setVizProperties",
					"visibility": "public",
					"parameters": [
						{
							"name": "oVizProperties",
							"type": "object",
							"optional": false,
							"description": "object containing vizProperty values to update"
						}
					],
					"description": "Change Chart's properties.\n\nChart's properties will be updated with the parameter.\n\nRefer to chart property <a href=\"../../vizdocs/index.html\" target=\"_blank\">documentation</a> for more details."
				},
				{
					"name": "setVizScales",
					"visibility": "public",
					"parameters": [
						{
							"name": "oVizScales",
							"type": "object[]",
							"optional": false,
							"description": "array of vizScale objects"
						}
					],
					"description": "Change Chart's scales.\n\nChart's scales will be updated with the parameters.\n\nRefer to chart property <a href=\"../../vizdocs/index.html\" target=\"_blank\">documentation</a> for more details."
				},
				{
					"name": "unbindData",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.Chart",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"description": "Unbinds aggregation <code>data</code> from model data."
				},
				{
					"name": "zoom",
					"visibility": "public",
					"parameters": [
						{
							"name": "oConfig",
							"type": "object",
							"optional": false,
							"description": "contains a \"direction\" attribute with value \"in\" or \"out\" indicating zoom to enlarge or shrink respectively"
						}
					],
					"description": "Zoom the chart plot.\n\nExample:\n<pre>\n\tvar oChart = new sap.chart.Chart(...);\n\toChart.zoom({direction: \"in\"});\n</pre>"
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.chart.ChartType",
			"basename": "ChartType",
			"resource": "sap/chart/ChartType.js",
			"module": "sap/chart/ChartType",
			"static": true,
			"visibility": "public",
			"description": "Enumeration for supported chart types in analytical chart",
			"properties": [
				{
					"name": "Bar",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Bar Chart"
				},
				{
					"name": "Bubble",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Bubble Chart"
				},
				{
					"name": "Bullet",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Bubble Chart"
				},
				{
					"name": "Column",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Column Chart"
				},
				{
					"name": "Combination",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Combined Column Line Chart"
				},
				{
					"name": "Donut",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Donut Chart"
				},
				{
					"name": "DualBar",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Bar Chart with 2 X-Axes"
				},
				{
					"name": "DualColumn",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Column Chart with 2 Y-Axes"
				},
				{
					"name": "DualHorizontalStackedCombination",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Horizontal Combined Stacked Line Chart with 2 X-Axes"
				},
				{
					"name": "DualLine",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Line Chart with 2 Y-Axes"
				},
				{
					"name": "DualStackedBar",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Stacked Bar Chart with 2 X-Axes"
				},
				{
					"name": "DualStackedColumn",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Stacked Column Chart with 2 Y-Axes"
				},
				{
					"name": "DualStackedCombination",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Combined Stacked Line Chart with 2 Y-Axes"
				},
				{
					"name": "Heatmap",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Heat Map"
				},
				{
					"name": "HorizontalStackedCombination",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Horizontal Combined Stacked Line Chart"
				},
				{
					"name": "HorizontalWaterfall",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Horizontal Waterfall Chart"
				},
				{
					"name": "Line",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Line Chart"
				},
				{
					"name": "PercentageDualStackedBar",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "100% Stacked Bar Chart with 2 X-Axes"
				},
				{
					"name": "PercentageDualStackedColumn",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "100% Stacked Column Chart with 2 Y-Axes"
				},
				{
					"name": "PercentageStackedBar",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "100% Stacked Bar Chart"
				},
				{
					"name": "PercentageStackedColumn",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "100% Stacked Column Chart"
				},
				{
					"name": "Pie",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Pie Chart"
				},
				{
					"name": "Scatter",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Scatter Plot"
				},
				{
					"name": "StackedBar",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Stacked Bar Chart"
				},
				{
					"name": "StackedColumn",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Stacked Column Chart"
				},
				{
					"name": "StackedCombination",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Combined Stacked Line Chart"
				},
				{
					"name": "VerticalBullet",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Vertical Bullet Chart"
				},
				{
					"name": "Waterfall",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Waterfall Chart"
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.chart.data.Dimension",
			"basename": "Dimension",
			"resource": "sap/chart/data/Dimension.js",
			"module": "sap/chart/data/Dimension",
			"static": true,
			"visibility": "public",
			"since": "1.32.0",
			"extends": "sap.ui.core.Element",
			"description": "Definition of a single dimension in a chart",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "name",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Property in the \"data\" model holding the (always unique) Dimension key.",
						"methods": [
							"getName",
							"setName"
						]
					},
					{
						"name": "label",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Label for the Dimension, either as a string literal or by a pointer using the binding syntax to some property containing the label.",
						"methods": [
							"getLabel",
							"setLabel"
						]
					},
					{
						"name": "textFormatter",
						"type": "function",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Function returning a formatted text for a Dimension key value that will be used for axis labelling. If specified, this property takes precedence over the \"textProperty\" property of the Dimension.\nDimension key value and the corresponding text will be passed to the supplied function as parameters.",
						"methods": [
							"getTextFormatter",
							"setTextFormatter"
						]
					},
					{
						"name": "textProperty",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Text for a Dimension key value, typically by a pointer using the binding syntax to some property containing the text.",
						"methods": [
							"getTextProperty",
							"setTextProperty"
						]
					},
					{
						"name": "displayText",
						"type": "boolean",
						"defaultValue": true,
						"group": "Misc",
						"visibility": "public",
						"description": "Whether a text is displayed. If the \"textProperty\" property has not been specified, it will be derived from the metadata.",
						"methods": [
							"getDisplayText",
							"setDisplayText"
						]
					},
					{
						"name": "role",
						"type": "string",
						"defaultValue": "category",
						"group": "Misc",
						"visibility": "public",
						"description": "How the Dimension will influence the chart layout. Possible values are \"category\" or \"series\".\nThe default is \"category\".\nNOTE: Has no effect if the Dimension is used as inResultDimensions by Chart",
						"methods": [
							"getRole",
							"setRole"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ui5/data/Dimension.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.chart.data.Dimension with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getDisplayText",
					"visibility": "public",
					"returnValue": {
						"type": "boolean",
						"description": "Value of property <code>displayText</code>"
					},
					"description": "Gets current value of property <code>displayText</code>.\n\nWhether a text is displayed. If the \"textProperty\" property has not been specified, it will be derived from the metadata.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "getLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>label</code>"
					},
					"description": "Gets current value of property <code>label</code>.\n\nLabel for the Dimension, either as a string literal or by a pointer using the binding syntax to some property containing the label."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.chart.data.Dimension."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>name</code>"
					},
					"description": "Gets current value of property <code>name</code>.\n\nProperty in the \"data\" model holding the (always unique) Dimension key."
				},
				{
					"name": "getRole",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>role</code>"
					},
					"description": "Gets current value of property <code>role</code>.\n\nHow the Dimension will influence the chart layout. Possible values are \"category\" or \"series\".\nThe default is \"category\".\nNOTE: Has no effect if the Dimension is used as inResultDimensions by Chart\n\nDefault value is <code>category</code>."
				},
				{
					"name": "getTextFormatter",
					"visibility": "public",
					"returnValue": {
						"type": "function",
						"description": "Value of property <code>textFormatter</code>"
					},
					"description": "Gets current value of property <code>textFormatter</code>.\n\nFunction returning a formatted text for a Dimension key value that will be used for axis labelling. If specified, this property takes precedence over the \"textProperty\" property of the Dimension.\nDimension key value and the corresponding text will be passed to the supplied function as parameters."
				},
				{
					"name": "getTextProperty",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>textProperty</code>"
					},
					"description": "Gets current value of property <code>textProperty</code>.\n\nText for a Dimension key value, typically by a pointer using the binding syntax to some property containing the text."
				},
				{
					"name": "setDisplayText",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.data.Dimension",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "bDisplayText",
							"type": "boolean",
							"optional": false,
							"description": "New value for property <code>displayText</code>"
						}
					],
					"description": "Sets a new value for property <code>displayText</code>.\n\nWhether a text is displayed. If the \"textProperty\" property has not been specified, it will be derived from the metadata.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>true</code>."
				},
				{
					"name": "setLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.data.Dimension",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLabel",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>label</code>"
						}
					],
					"description": "Sets a new value for property <code>label</code>.\n\nLabel for the Dimension, either as a string literal or by a pointer using the binding syntax to some property containing the label.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.data.Dimension",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>name</code>"
						}
					],
					"description": "Sets a new value for property <code>name</code>.\n\nProperty in the \"data\" model holding the (always unique) Dimension key.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setRole",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.data.Dimension",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sRole",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>role</code>"
						}
					],
					"description": "Sets a new value for property <code>role</code>.\n\nHow the Dimension will influence the chart layout. Possible values are \"category\" or \"series\".\nThe default is \"category\".\nNOTE: Has no effect if the Dimension is used as inResultDimensions by Chart\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>category</code>."
				},
				{
					"name": "setTextFormatter",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.data.Dimension",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "fnTextFormatter",
							"type": "function",
							"optional": false,
							"description": "New value for property <code>textFormatter</code>"
						}
					],
					"description": "Sets a new value for property <code>textFormatter</code>.\n\nFunction returning a formatted text for a Dimension key value that will be used for axis labelling. If specified, this property takes precedence over the \"textProperty\" property of the Dimension.\nDimension key value and the corresponding text will be passed to the supplied function as parameters.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setTextProperty",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.data.Dimension",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTextProperty",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>textProperty</code>"
						}
					],
					"description": "Sets a new value for property <code>textProperty</code>.\n\nText for a Dimension key value, typically by a pointer using the binding syntax to some property containing the text.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.chart.data.Measure",
			"basename": "Measure",
			"resource": "sap/chart/data/Measure.js",
			"module": "sap/chart/data/Measure",
			"static": true,
			"visibility": "public",
			"since": "1.32.0",
			"extends": "sap.ui.core.Element",
			"description": "Definition of a single measure in a chart",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "name",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Property in the \"data\" model holding the raw measure value.",
						"methods": [
							"getName",
							"setName"
						]
					},
					{
						"name": "label",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Label for the Measure, either as a string literal or by a pointer using the binding syntax to some property containing the label.",
						"methods": [
							"getLabel",
							"setLabel"
						]
					},
					{
						"name": "unitBinding",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Unit for the measure, a pointer using the binding syntax to some field containing the unit.\nValue of the given field from the same data record will be displayed after formatted measure value in data label, tooltip and chart popover.\nNOTE: If the unit field is not set as visible dimension in chart, or more than one unit value exists \nfor any visible dimension value combination, they will be rendered in the chart resulting different chart layout.",
						"methods": [
							"getUnitBinding",
							"setUnitBinding"
						]
					},
					{
						"name": "valueFormat",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "A (core UI5) format pattern to be used by the formatter to format the measure value.",
						"deprecated": {
							"text": "Please use {@link sap.chart.Chart#setVizProperties} to set related formatStrings instead."
						},
						"methods": [
							"getValueFormat",
							"setValueFormat"
						]
					},
					{
						"name": "role",
						"type": "string",
						"defaultValue": "axis1",
						"group": "Misc",
						"visibility": "public",
						"description": "How values of measure will be rendered in the chart. Possible role values are \"axis1\", \"axis2\", \"axis3\", and \"axis4\".\nThe default is \"axis1\".\nThey correspond to the well-known concepts of axis identifiers in the Cartesian coordinate system, e.g. a Y-axis in a bar/column/line chart, an X- and a Y-axis in a scatter chart, or two Y-axes in bar charts, and an optional third axis for the weight/size/intensity/temperature of a data point.",
						"methods": [
							"getRole",
							"setRole"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ui5/data/Measure.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.chart.data.Measure with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}."
				},
				{
					"name": "getLabel",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>label</code>"
					},
					"description": "Gets current value of property <code>label</code>.\n\nLabel for the Measure, either as a string literal or by a pointer using the binding syntax to some property containing the label."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.chart.data.Measure."
				},
				{
					"name": "getName",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>name</code>"
					},
					"description": "Gets current value of property <code>name</code>.\n\nProperty in the \"data\" model holding the raw measure value."
				},
				{
					"name": "getRole",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>role</code>"
					},
					"description": "Gets current value of property <code>role</code>.\n\nHow values of measure will be rendered in the chart. Possible role values are \"axis1\", \"axis2\", \"axis3\", and \"axis4\".\nThe default is \"axis1\".\nThey correspond to the well-known concepts of axis identifiers in the Cartesian coordinate system, e.g. a Y-axis in a bar/column/line chart, an X- and a Y-axis in a scatter chart, or two Y-axes in bar charts, and an optional third axis for the weight/size/intensity/temperature of a data point.\n\nDefault value is <code>axis1</code>."
				},
				{
					"name": "getUnitBinding",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>unitBinding</code>"
					},
					"description": "Gets current value of property <code>unitBinding</code>.\n\nUnit for the measure, a pointer using the binding syntax to some field containing the unit.\nValue of the given field from the same data record will be displayed after formatted measure value in data label, tooltip and chart popover.\nNOTE: If the unit field is not set as visible dimension in chart, or more than one unit value exists \nfor any visible dimension value combination, they will be rendered in the chart resulting different chart layout."
				},
				{
					"name": "getValueFormat",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>valueFormat</code>"
					},
					"description": "Gets current value of property <code>valueFormat</code>.\n\nA (core UI5) format pattern to be used by the formatter to format the measure value.",
					"deprecated": {
						"text": "Please use {@link sap.chart.Chart#setVizProperties} to set related formatStrings instead."
					}
				},
				{
					"name": "setLabel",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.data.Measure",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sLabel",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>label</code>"
						}
					],
					"description": "Sets a new value for property <code>label</code>.\n\nLabel for the Measure, either as a string literal or by a pointer using the binding syntax to some property containing the label.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setName",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.data.Measure",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sName",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>name</code>"
						}
					],
					"description": "Sets a new value for property <code>name</code>.\n\nProperty in the \"data\" model holding the raw measure value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setRole",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.data.Measure",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sRole",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>role</code>"
						}
					],
					"description": "Sets a new value for property <code>role</code>.\n\nHow values of measure will be rendered in the chart. Possible role values are \"axis1\", \"axis2\", \"axis3\", and \"axis4\".\nThe default is \"axis1\".\nThey correspond to the well-known concepts of axis identifiers in the Cartesian coordinate system, e.g. a Y-axis in a bar/column/line chart, an X- and a Y-axis in a scatter chart, or two Y-axes in bar charts, and an optional third axis for the weight/size/intensity/temperature of a data point.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.\n\nDefault value is <code>axis1</code>."
				},
				{
					"name": "setUnitBinding",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.data.Measure",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sUnitBinding",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>unitBinding</code>"
						}
					],
					"description": "Sets a new value for property <code>unitBinding</code>.\n\nUnit for the measure, a pointer using the binding syntax to some field containing the unit.\nValue of the given field from the same data record will be displayed after formatted measure value in data label, tooltip and chart popover.\nNOTE: If the unit field is not set as visible dimension in chart, or more than one unit value exists \nfor any visible dimension value combination, they will be rendered in the chart resulting different chart layout.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				},
				{
					"name": "setValueFormat",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.data.Measure",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sValueFormat",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>valueFormat</code>"
						}
					],
					"description": "Sets a new value for property <code>valueFormat</code>.\n\nA (core UI5) format pattern to be used by the formatter to format the measure value.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored.",
					"deprecated": {
						"text": "Please use {@link sap.chart.Chart#setVizProperties} to set related formatStrings instead."
					}
				}
			]
		},
		{
			"kind": "class",
			"name": "sap.chart.data.TimeDimension",
			"basename": "TimeDimension",
			"resource": "sap/chart/data/TimeDimension.js",
			"module": "sap/chart/data/TimeDimension",
			"static": true,
			"visibility": "public",
			"since": "1.38.0",
			"extends": "sap.chart.data.Dimension",
			"description": "Definition of a single time dimension in a chart",
			"ui5-metadata": {
				"stereotype": "element",
				"properties": [
					{
						"name": "timeUnit",
						"type": "string",
						"defaultValue": null,
						"group": "Misc",
						"visibility": "public",
						"description": "Detailed unit infomation of TimeDimension. Please refer to {@link sap.chart.TimeUnitType TimeUnitType}.",
						"methods": [
							"getTimeUnit",
							"setTimeUnit"
						]
					}
				]
			},
			"constructor": {
				"visibility": "public",
				"parameters": [
					{
						"name": "sId",
						"type": "string",
						"optional": true,
						"description": "id for the new control, generated automatically if no id is given"
					},
					{
						"name": "mSettings",
						"type": "object",
						"optional": true,
						"description": "initial settings for the new control"
					}
				],
				"description": "Constructor for a new ui5/data/TimeDimension.\n\n\nAccepts an object literal <code>mSettings</code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object."
			},
			"methods": [
				{
					"name": "extend",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "function",
						"description": "Created class / constructor function"
					},
					"parameters": [
						{
							"name": "sClassName",
							"type": "string",
							"optional": false,
							"description": "Name of the class being created"
						},
						{
							"name": "oClassInfo",
							"type": "object",
							"optional": true,
							"description": "Object literal with information about the class"
						},
						{
							"name": "FNMetaImpl",
							"type": "function",
							"optional": true,
							"description": "Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata</code>"
						}
					],
					"description": "Creates a new subclass of class sap.chart.data.TimeDimension with name <code>sClassName</code>\nand enriches it with the information contained in <code>oClassInfo</code>.\n\n<code>oClassInfo</code> might contain the same kind of information as described in {@link sap.chart.data.Dimension.extend}."
				},
				{
					"name": "getMetadata",
					"visibility": "public",
					"static": true,
					"returnValue": {
						"type": "sap.ui.base.Metadata",
						"description": "Metadata object describing this class"
					},
					"description": "Returns a metadata object for class sap.chart.data.TimeDimension."
				},
				{
					"name": "getTimeUnit",
					"visibility": "public",
					"returnValue": {
						"type": "string",
						"description": "Value of property <code>timeUnit</code>"
					},
					"description": "Gets current value of property <code>timeUnit</code>.\n\nDetailed unit infomation of TimeDimension. Please refer to {@link sap.chart.TimeUnitType TimeUnitType}."
				},
				{
					"name": "setTimeUnit",
					"visibility": "public",
					"returnValue": {
						"type": "sap.chart.data.TimeDimension",
						"description": "Reference to <code>this</code> in order to allow method chaining"
					},
					"parameters": [
						{
							"name": "sTimeUnit",
							"type": "string",
							"optional": false,
							"description": "New value for property <code>timeUnit</code>"
						}
					],
					"description": "Sets a new value for property <code>timeUnit</code>.\n\nDetailed unit infomation of TimeDimension. Please refer to {@link sap.chart.TimeUnitType TimeUnitType}.\n\nWhen called with a value of <code>null</code> or <code>undefined</code>, the default value of the property will be restored."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.chart.SelectionMode",
			"basename": "SelectionMode",
			"resource": "sap/chart/library.js",
			"module": "sap/chart/library",
			"static": true,
			"visibility": "public",
			"description": "Enumeration for supported selection mode in analytical chart",
			"properties": [
				{
					"name": "Multi",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Multi selection mode, multiple sets of data points can be selected at once."
				},
				{
					"name": "None",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "None selection mode, no data points can be selected."
				},
				{
					"name": "Single",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "Single selection mode, only one set of data points can be selected at once."
				}
			]
		},
		{
			"kind": "namespace",
			"name": "sap.chart.TimeUnitType",
			"basename": "TimeUnitType",
			"resource": "sap/chart/TimeUnitType.js",
			"module": "sap/chart/TimeUnitType",
			"static": true,
			"visibility": "public",
			"description": "Enumeration for supported time unit types in analytical chart",
			"properties": [
				{
					"name": "Date",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "type is Edm.DateTime and V2 annotation sap:display-format is \"Date\" or timestamp"
				},
				{
					"name": "yearmonthday",
					"visibility": "public",
					"static": true,
					"type": "undefined",
					"description": "type is Edm.string and V2 annotation sap:semantics is \"yearmonthday\", like \"yyyyMMdd\""
				}
			]
		}
	]
}