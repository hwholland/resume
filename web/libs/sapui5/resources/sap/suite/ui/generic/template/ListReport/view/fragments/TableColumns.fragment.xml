<core:FragmentDefinition
	xmlns:customData="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
	xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
	xmlns="sap.m" xmlns:build="sap.build" xmlns:core="sap.ui.core">
	<!-- @classdesc @name: Name: sap.suite.ui.generic.template.ListReport.view.fragments.TableColumns.fragment.xml 
		@description: Visualizes one column (header and data) of a responsive table, 
		as part of a list report. Reduced version of the TableColumns fragment that 
		you can find under sap.suite.ui.generic.template.fragments. The reduction 
		aims at a performance optimization. @param {UI.LineItem} [collection] @param 
		{Edm.EntitySet} [listEntitySet] -->

	<columns>
		<template:repeat list="{collection>}" var="dataField">
			<!-- handle inline actions -->
			<template:if test="{= (${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataFieldForAction' || ${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation') &amp;&amp; ${dataField>Inline/Bool} === 'true'}">
				<Column
					visible="{= ${target>com.sap.vocabularies.UI.v1.Importance/EnumMember} === 'com.sap.vocabularies.UI.v1.ImportanceType/High' ? 'true' :
  							  ( ${target>com.sap.vocabularies.UI.v1.Importance/EnumMember} === 'com.sap.vocabularies.UI.v1.ImportanceType/Medium' &amp;&amp; ( ${device>/system/tablet} || ${device>/system/desktop} ) ? 'true' : ${device>/system/desktop} ? 'true' : 'false' ) }"
 					build:metadata="#pattern:Column;staticProp::Importance:\{target>com.sap.vocabularies.UI.v1.Importance/EnumMember\};condition:collection>AnnotationType:com.sap.vocabularies.UI.v1.LineItem">
					<customData>
						<template:with path="dataField>Action" helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="action">
							<core:CustomData key="p13nData"
								value="{path: 'dataField>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.createP13NColumnForAction'}" />
						</template:with>
					</customData>
					<template:if test="{dataField>Label}" build:metadata="#ignore">
						<template:then build:metadata="#ignore">
							<Text
								text="{path: 'dataField>Label', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"
								visible="{= ${dataField>Inline/Bool} === 'true' ? 'false' : 'true'}"
								build:metadata="#pattern:Column;staticProp:text:Title;" />
						</template:then>
						<template:else>
							<Text
								text="{path: 'dataFieldValue>com.sap.vocabularies.Common.v1.Label', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"
								visible="{= ${dataField>Inline/Bool} === 'true' ? 'false' : 'true'}" />
						</template:else>
					</template:if>
				</Column>
			</template:if>
			<!-- handle rating and progress indicators -->
			<template:if
				test="{= ${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataFieldForAnnotation'}">
				<template:then>
					<template:with path="dataField>" helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="target">
						<template:with path="dataField>Target"
							helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="dataPoint">
							<template:if test="{= ${dataPoint>Visualization}}">
								<template:with path="dataField>Value"
									helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="dataFieldValue">
									<template:with path="dataField>Target"
										helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="dataFieldTarget">
										<template:with path="dataFieldTarget>Value"
											helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="dataFieldTargetValue">
											<Column
												visible="{= ${target>com.sap.vocabularies.UI.v1.Importance/EnumMember} === 'com.sap.vocabularies.UI.v1.ImportanceType/High' ? 'true' :
  							  							( ${target>com.sap.vocabularies.UI.v1.Importance/EnumMember} === 'com.sap.vocabularies.UI.v1.ImportanceType/Medium' &amp;&amp; ( ${device>/system/tablet} || ${device>/system/desktop} ) ? 'true' : ${device>/system/desktop} ? 'true' : 'false' ) }"
 												build:metadata="#pattern:Column;staticProp::Importance:\{target>com.sap.vocabularies.UI.v1.Importance/EnumMember\};condition:collection>AnnotationType:com.sap.vocabularies.UI.v1.LineItem">
												<customData>
													<core:CustomData key="p13nData"
														value="{parts: [{path: 'listEntitySet>'}, {path: 'dataFieldValue>'}, {path: 'dataField>'}, {path: 'dataFieldTarget>'}, {path: 'dataFieldTargetValue>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.createP13NColumnForIndicator'}" />
												</customData>
												<template:if test="{dataField>Label}"
													build:metadata="#ignore">
													<template:then build:metadata="#ignore">
														<Text
															text="{path: 'dataField>Label', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"
															visible="true"
															build:metadata="#pattern:Column;staticProp:text:Title;" />
													</template:then>
													<template:elseif test="{dataFieldTarget>Title}">
														<Text
															text="{path: 'dataFieldTarget>Title', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}" />
													</template:elseif>
													<template:elseif
														test="{dataFieldTargetValue>com.sap.vocabularies.Common.v1.Label}">
														<Text
															text="{path: 'dataFieldTargetValue>com.sap.vocabularies.Common.v1.Label', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}" />
													</template:elseif>
													<template:else>
														<Text
															text="{path: 'dataFieldValue>com.sap.vocabularies.Common.v1.Label', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"
															visible="true"/>
													</template:else>
												</template:if>
											</Column>
										</template:with>
									</template:with>
								</template:with>
							</template:if>
						</template:with>
						</template:with>
					</template:then>
				</template:if>
		</template:repeat>
 		<!--  add break-out columns -->
		<template:if test="{= ${facet>Target/AnnotationPath} }">
			<template:then>
				<core:ExtensionPoint
					name="ResponsiveTableColumnsExtension|{listEntitySet>name}|{path: 'facet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}" />
			</template:then>
			<template:else>
				<core:ExtensionPoint
					name="ResponsiveTableColumnsExtension|{listEntitySet>name}" />
			</template:else>
		</template:if>
	</columns>
	<items>
		<ColumnListItem
			type="{parts: [{path: 'listEntitySet>'}, {path: 'parameter>/settings/subPages/'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getColumnListItemType'}"
			press="{= ${parts: [{path: 'listEntitySet>name'}, {path: 'parameter>/settings/subPages/'}, {path: 'facet>Target/AnnotationPath'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getDisplayNavigationIntent'} ? '._templateEventHandlers.onListNavigateIntent' : '._templateEventHandlers.onListNavigate'}">
			<template:if test="{parts: [{path: 'listEntitySet>name'}, {path: 'parameter>/settings/subPages/'}, {path: 'facet>Target/AnnotationPath'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getDisplayNavigationIntent'}">
				<customData>
					<core:CustomData key="CrossNavigation" value="{parts: [{path: 'listEntitySet>name'}, {path: 'parameter>/settings/subPages/'}, {path: 'facet>Target/AnnotationPath'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getDisplayNavigationIntent'}"/>
				</customData>
			</template:if>
			<cells>
				<template:repeat list="{collection>}" var="dataField">
					<!-- handle inline buttons -->
					<template:if test="{= (${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataFieldForAction' || ${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation') &amp;&amp; ${dataField>Inline/Bool} === 'true'}">
						<template:then>
							<core:Fragment fragmentName="sap.suite.ui.generic.template.ListReport.view.fragments.InlineButton" type="XML" />
						</template:then>
					</template:if>
					<template:if
						test="{= ${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataField' || ${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataFieldForAnnotation'}"
						build:metadata="#ignore">
						<!-- handle rating and progress indicators -->
						<template:then>
									<template:with path="dataField>"
										helper="sap.ui.model.odata.AnnotationHelper.resolvePath" var="target">
										<template:if
											test="{= ${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataFieldForAnnotation'}">
											<template:then>
												<template:with path="dataField>Target"
													helper="sap.ui.model.odata.AnnotationHelper.resolvePath"
													var="dataPoint">
													<template:if test="{= ${dataPoint>Visualization}}">
														<template:then>
															<template:if
																test="{= ${dataPoint>Visualization/EnumMember} === 'com.sap.vocabularies.UI.v1.VisualizationType/Rating'}">
																<template:then>
																	<template:with path="dataPoint>Value"
																		helper="sap.ui.model.odata.AnnotationHelper.resolvePath"
																		var="value">
																		<!--Due to SideEffect issues the RatingIndicator is not	editable -->
																		<RatingIndicator enabled="false"
																			maxValue="{path: 'dataPoint>TargetValue', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}"
																			value="{parts: [{path: 'dataPoint>'}, {path: 'value>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.ratingIndicatorFormatter'}" />
																	</template:with>
																</template:then>
																<template:elseif
																	test="{= ${dataPoint>Visualization/EnumMember} === 'com.sap.vocabularies.UI.v1.VisualizationType/Progress'}">
																	<template:with path="dataPoint>Value"
																		helper="sap.ui.model.odata.AnnotationHelper.resolvePath"
																		var="value">
																		<ProgressIndicator enabled="false"
																			state="{parts:[{path: 'dataField>Criticality'}, {path: 'dataPoint>Criticality'}], formatter:'sap.suite.ui.generic.template.js.AnnotationHelper.createProgressStateFormatter'}"
																			percentValue="{parts: [{path: 'dataPoint>'}, {path: 'value>'}], formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.createProgressFormatter'}">
																			<template:if test="{= ${dataPoint>TargetValue/Decimal}}">
																				<template:then>
																					<customData>
																						<core:CustomData key="fixTargetValue"
																							value="{dataPoint>TargetValue/Decimal}" />
																					</customData>
																				</template:then>
																			</template:if>
																		</ProgressIndicator>
																	</template:with>
																</template:elseif>
															</template:if>
														</template:then>
													</template:if>
												</template:with>
											</template:then>
										</template:if>
									</template:with>
						</template:then>
					</template:if>
				</template:repeat>
				<!-- handle break-out columns -->
				<template:if test="{= ${facet>Target/AnnotationPath} }">
					<template:then>
						<core:ExtensionPoint
							name="ResponsiveTableCellsExtension|{listEntitySet>name}|{path: 'facet>', formatter: 'sap.suite.ui.generic.template.js.AnnotationHelper.getStableIdPartFromFacet'}" />
					</template:then>
					<template:else>
						<core:ExtensionPoint
							name="ResponsiveTableCellsExtension|{listEntitySet>name}" />
					</template:else>
				</template:if>
			</cells>
		</ColumnListItem>
	</items>
</core:FragmentDefinition>