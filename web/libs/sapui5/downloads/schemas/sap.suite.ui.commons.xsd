<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="sap.suite.ui.commons" xmlns:n2="sap.suite.ui.microchart" xmlns:n0="sap.ui.core" xmlns:n3="sap.suite.ui.commons" xmlns:n1="sap.m">
<xsd:import namespace="sap.suite.ui.microchart"/>
<xsd:import namespace="sap.ui.core"/>
<xsd:import namespace="sap.m"/>
<xsd:element name="BulletChart" type="n3:_BulletChartType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>Chart that displays an actual value as a horizontal bar in semantic color on the top of the background bar, the numeric value, the scaling factor, along with the thresholds, and a target value as vertical bars.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="BulletChartData" type="n3:_BulletChartDataType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>Thresholds data holder.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="BusinessCard" type="n3:_BusinessCardType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>This control allows you to display business card information including an image, first title (either URL link or text), second title, and multiple text lines.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ChartContainer" type="n3:_ChartContainerType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>Provides a toolbar with generic functions for tables and charts based on the VizFrame control like zoom, display in fullscreen mode, toggle the legend, switch between chart types, and changes of the chart dimension. The controls of the content aggregation are positioned below the toolbar. Additional functions can be added to the toolbar with the customIcons aggregation.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ChartContainerContent" type="n3:_ChartContainerContentType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>Content aggregation for ChartContainer.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ChartContainerToolbarPlaceholder" type="n3:_ChartContainerToolbarPlaceholderType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>Provides a placeholder for the embedded chart container toolbar.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ChartTile" type="n3:_ChartTileType" substitutionGroup="n3:InfoTile">
<xsd:annotation>
<xsd:documentation>This control is the implementation of the InfoTile to show a comparison or bullet chart.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ColumnData" type="n3:_ColumnDataType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>Column data holder.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ColumnMicroChart" type="n3:_ColumnMicroChartType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>This control shows a column chart.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ColumnMicroChartLabel" type="n3:_ColumnMicroChartLabelType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>This element contains data for a label in ColumnMicroChart control.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ComparisonChart" type="n3:_ComparisonChartType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>This control shows a comparison chart.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ComparisonData" type="n3:_ComparisonDataType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>Comparison tile value holder.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="CountingNavigationItem" type="n3:_CountingNavigationItemType" substitutionGroup=":NavigationItem">
<xsd:annotation>
<xsd:documentation>This control extends the sap.ui.ux3.NavigationItem control. This control can display the quantity of items on a corresponding content area. It also provides a rich tooltip that can appear and disappear after a certain delay. </xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="DateRangeScroller" type="n3:_DateRangeScrollerType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>The DateRangeScroller provides a method to scroll through a series of time periods, each of which is represented by a starting date and an ending date, known as the date range.  The user may scroll to the previous or next date range.  Several predefined ranges are supported such as day, week, work week, month, and year.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="DateRangeSlider" type="n3:_DateRangeSliderType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>The Date Range Slider provides the user with a Range Slider control that is optimized for use with Dates.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="DateRangeSliderInternal" type="n3:_DateRangeSliderInternalType" substitutionGroup=":RangeSlider">
<xsd:annotation>
<xsd:documentation>The Date Range Slider provides the user with a Range Slider control that is optimized for use with Dates.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="DeltaMicroChart" type="n3:_DeltaMicroChartType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>This control displays a delta of two values as a chart.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="DynamicContainer" type="n3:_DynamicContainerType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>The control that displays multiple GenericTile controls as changing slides.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="FacetOverview" type="n3:_FacetOverviewType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>This control is used in UnifiedThingInspector to display the preview of the facet content.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="FeedItem" type="n3:_FeedItemType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>This element represents a news feed item.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="FeedItemHeader" type="n3:_FeedItemHeaderType" substitutionGroup="n1:ListItemBase">
<xsd:annotation>
<xsd:documentation>This control displays feed item header information.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="FeedTile" type="n3:_FeedTileType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>This control displays news feeds.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="GenericTile" type="n3:_GenericTileType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>The tile control that displays the title, description, and customizable main area.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="GenericTile2X2" type="n3:_GenericTile2X2Type" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>The tile control that displays the title, description, and customizable main area.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="HarveyBallMicroChart" type="n3:_HarveyBallMicroChartType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>This chart shows the part comparative to total.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="HarveyBallMicroChartItem" type="n3:_HarveyBallMicroChartItemType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>The configuration of the slice on the pie chart.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="HeaderCell" type="n3:_HeaderCellType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>This control contains 4 cells (West, North, East, South). It can display one or more controls in different layouts. Each aggregation must contain only one instance of HeaderCellItem.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="HeaderCellItem" type="n3:_HeaderCellItemType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>Object that contains instance of control and information about height. It should be used inside sap.suite.ui.commons.HeaderCell</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="HeaderContainer" type="n3:_HeaderContainerType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>The container that provides a horizontal layout. It provides a horizontal scroll on the tablet and phone. On the desktop, it provides scroll left and scroll right buttons. This control supports keyboard navigation. You can use left and right arrow keys to navigate through the inner content. The Home key puts focus on the first control and the End key puts focus on the last control. Use Enter or Space to choose the control.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="InfoTile" type="n3:_InfoTileType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>The tile control that displays the title, description, footer, and customizable main area.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="JamContent" type="n3:_JamContentType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>This control displays the jam content text, subheader, and numeric value in a tile.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="KpiTile" type="n3:_KpiTileType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>This control is used in UnifiedThingInspector to display object-related KPIs in a factsheet.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="LaunchTile" type="n3:_LaunchTileType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>This control launches a URL.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="LinkActionSheet" type="n3:_LinkActionSheetType" substitutionGroup="n1:ActionSheet">
<xsd:annotation>
<xsd:documentation>This control contains one or more sap.m.Button controls or sap.ui.commons.Link controls. The LinkActionSheet control is closed if the user chooses one of the buttons or links. It looks similar to sap.m.Dialog in iPhone and Android, and to sap.m.Popover in iPad.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="MicroAreaChart" type="n3:_MicroAreaChartType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>This control displays the history of values as a line mini chart or an area mini chart. </xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="MicroAreaChartItem" type="n3:_MicroAreaChartItemType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>The configuration of the graphic element on the chart.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="MicroAreaChartLabel" type="n3:_MicroAreaChartLabelType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>This element contains data for a label in MicroAreaChart control.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="MicroAreaChartPoint" type="n3:_MicroAreaChartPointType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>This control contains data for the point.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="MonitoringContent" type="n3:_MonitoringContentType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>This control is used in a tile or any other place to display numeric values and an icon.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="MonitoringTile" type="n3:_MonitoringTileType" substitutionGroup="n3:InfoTile">
<xsd:annotation>
<xsd:documentation>This control is the implementation of the InfoTile to show a numeric value and an icon.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="NewsContent" type="n3:_NewsContentType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>This control displays the news content text and subheader in a tile.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="NoteTaker" type="n3:_NoteTakerType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>This control allows you to create and store your notes for further reference.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="NoteTakerCard" type="n3:_NoteTakerCardType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>This control allows you to store Note Taker card header and body text.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="NoteTakerFeeder" type="n3:_NoteTakerFeederType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>This control allows you to enter a quick note and N note cards.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="NumericContent" type="n3:_NumericContentType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>NumericContent to be used in tile or in other place where need to show numeric values with sematic colors and deviations.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="NumericTile" type="n3:_NumericTileType" substitutionGroup="n3:InfoTile">
<xsd:annotation>
<xsd:documentation>This control is the implementation of the InfoTile to show a numeric value.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="PictureZoomIn" type="n3:_PictureZoomInType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>Shows picture in fullscreen.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ProcessFlow" type="n3:_ProcessFlowType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>Complex control that enables you to display documents or other items in their flow.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ProcessFlowConnection" type="n3:_ProcessFlowConnectionType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>This control is used inside the ProcessFlow control to connect process flow node A with process flow node B in respect to the style(x) chosen by the application.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ProcessFlowConnectionLabel" type="n3:_ProcessFlowConnectionLabelType" substitutionGroup="n1:Button">
<xsd:annotation>
<xsd:documentation>This control is used inside the ProcessFlow control providing information on connections. Using this control, you need to take care of the lifetime handling instance as instances of this control are not destroyed automatically.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ProcessFlowLaneHeader" type="n3:_ProcessFlowLaneHeaderType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>This control gives you an overview of documents/items used in a process flow. The process flow is represented by the doughnut chart sections which are colored according to  the documents’ status(es). This control can be used in two different ways. If you use it standalone, an event is fired and can be caught in to display the node map. If you use it with the node/document, it gives you an overview of the documents/items used in the process flow that is represented by the doughnut chart sections.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ProcessFlowNode" type="n3:_ProcessFlowNodeType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>This control enables you to see documents (or other items) in respect to their statuses – positive, negative, neutral, planned, planned negative. In addition to the node title (which can be optionally a hyperlink) also two other text fields are provided and can be filled. The process flow nodes consider all styles depending on the status they are in. The user can update or change the content of the node. The content of the node can be also filtered according to updated data and specific parameters set. This means that also the node’s style is affected.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="RepeaterViewConfiguration" type="n3:_RepeaterViewConfigurationType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>A configuration control defining how the content of the sap.suite.ui.commons.ViewRepeater control is displayed and what data is bound.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="SplitButton" type="n3:_SplitButtonType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>The Split Button Control is a composite control that consists of a default-action Button and a Menu Button control. 
The default-action button control represents a simple push button. It is used for initiating actions, such as save or print. It can contain some text, an icon, or both; the order of the two can be configured. The action initiated by this button is considered to be the default action for the control, and it must be one of the selections defined in the Menu Button menu.
The Menu Button control is a button that opens a menu upon user's click. MenuButton is a composition of the Menu control and the Button control and thus inheriting all features. When a menu item is selected by the user, MenuButton throws an event called itemSelected. The event transfers the itemId of the selected item. As an alternative, the button press event can be used which has a similar behavior.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="TargetFilter" type="n3:_TargetFilterType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>The analytical filter control. The control works only with the OData model connected to the analytical OData service (for example, HANA XS Analytical view exposed as an OData service).</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="TargetFilterColumn" type="n3:_TargetFilterColumnType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>The configuration element for the column in the TargetFilter control.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="TargetFilterMeasureColumn" type="n3:_TargetFilterMeasureColumnType" substitutionGroup="n0:Element">
<xsd:annotation>
<xsd:documentation>The configuration element for the measure column in the TargetFilter control.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ThingCollection" type="n3:_ThingCollectionType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>This control contains a collection of the sap.ui.ux3.ThingViewer controls or descendants of sap.ui.ux3.ThingViewer. It allows you to navigate through them as well as delete them from the collection.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ThreePanelThingInspector" type="n3:_ThreePanelThingInspectorType" substitutionGroup=":ThingInspector">
<xsd:annotation>
<xsd:documentation>This control extends the sap.ui.ux3.ThingInspector control. It displays the sap.suite.ui.commons.ThreePanelThingViewer control in the sap.ui.ux3.Overlay control.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ThreePanelThingViewer" type="n3:_ThreePanelThingViewerType" substitutionGroup=":ThingViewer">
<xsd:annotation>
<xsd:documentation>This control extends the sap.ui.ux3.ThingViewer control. The first panel can display a thing icon, a title, the Action Menu button, up to two rows of text descriptions (the first is wrapped, the second is truncated), vertical navigation bar (sap.suite.ui.commons.VerticalNavigationBar), and an image aka key visual. The second panel displays the header area as a vertical panel containing ThingGroup objects. The third panel is a main content area designed to display ThingGroup objects.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="TileContent" type="n3:_TileContentType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>This control serves a universal container for different types of content and footer.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="TileContent2X2" type="n3:_TileContent2X2Type" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>This control serves a universal container for different types of content and footer.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="Timeline" type="n3:_TimelineType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>Timeline Control for sFin.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="TimelineFilterListItem" type="n3:_TimelineFilterListItemType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>Provides Filter List Item for Timeline Control</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="TimelineItem" type="n3:_TimelineItemType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>TimelineItem</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="UnifiedThingGroup" type="n3:_UnifiedThingGroupType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>This control is used in UnifiedThingInspector to display the facet header information.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="UnifiedThingInspector" type="n3:_UnifiedThingInspectorType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>This control provides an ability to display a thing (for example, object factsheet) on the desktop, tablet, and phone devices in a Fiori style.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="VerticalNavigationBar" type="n3:_VerticalNavigationBarType" substitutionGroup=":NavigationBar">
<xsd:annotation>
<xsd:documentation>This control extends the sap.ui.ux3.NavigationBar and
		allows you to display navigation items vertically. The navigation list
		can contain sap.ui.ux3.NavigationItem or
		sap.suite.ui.commons.CountingNavigationItem controls. </xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="ViewRepeater" type="n3:_ViewRepeaterType" substitutionGroup=":RowRepeater">
<xsd:annotation>
<xsd:documentation>This control extends the sap.ui.commons.RowRepeater control providing an ability to change data representation by switching between a number of views. The data can be displayed not only in rows but also in tiles that are adjusted to fill the entire horizontal space in a row.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<!--type definition for UIElement 'sap.suite.ui.commons.BulletChart'-->
<xsd:complexType name="_BulletChartType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="actual" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The bullet chart actual data.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:BulletChartData"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="thresholds" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The bullet chart thresholds data.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:BulletChartData"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="size" type="n3:_InfoTileSizeType">
<xsd:annotation>
<xsd:documentation>The size of the chart. If not set, the default size is applied based on the size of the device tile.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="mode" type="n3:_BulletChartModeType">
<xsd:annotation>
<xsd:documentation>The mode of displaying the actual value itself or the delta between the actual value and the target value. If not set, the actual value is displayed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="scale" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The scaling suffix that is added to the actual and target values.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="forecastValue" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The forecast value that is displayed in Actual  mode only. If set, the forecast value bar appears in the background of the actual value bar.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="targetValue" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The target value that is displayed as a black vertical bar.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="minValue" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The minimum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="maxValue" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The maximum scale value for the bar chart used for defining a fixed size of the scale in different instances of this control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showActualValue" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to true, shows the numeric actual value. This property works in Actual mode only.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showDeltaValue" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to true, shows the calculated delta value instead of the numeric actual value regardless of the showActualValue setting. This property works in Delta mode only.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showTargetValue" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to true, shows the numeric target value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showValueMarker" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to true, shows the value marker.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="actualValueLabel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>If set, displays a specified label instead of the numeric actual value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="deltaValueLabel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>If set, displays a specified label instead of the calculated numeric delta value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="targetValueLabel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>If set, displays a specified label instead of the numeric target value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="width" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The width of the chart. If it is not set, the size of the control is defined by the size property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="scaleColor" type="n3:_CommonBackgroundType">
<xsd:annotation>
<xsd:documentation>The background color of the scale.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the user chooses the bullet chart.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.BulletChartData'-->
<xsd:complexType name="_BulletChartDataType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:attribute name="value" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The actual value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="color" type="n3:_InfoTileValueColorType">
<xsd:annotation>
<xsd:documentation>The semantic color of the actual value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.BusinessCard'-->
<xsd:complexType name="_BusinessCardType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="content" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The content of the BusinessCard body must be provided by the application developer.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="firstTitle" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Any control that can display a title. Content of this control appears at the first position in BusinessCard. Recomended controls: sap.ui.commons.Label and sap.ui.commons.Link.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="type" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Title of the BusinessCard that describes its type.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="iconPath" type="n0:_URIType">
<xsd:annotation>
<xsd:documentation>A path to the BusinessCard icon.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="secondTitle" type="xsd:string">
<xsd:annotation>
<xsd:documentation>A short text line that describes this BusinessCard.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="width" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>Width of the BusinessCard. Alternatively, CSS size can be set in %, px, or em.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="imageTooltip" type="xsd:string">
<xsd:annotation>
<xsd:documentation>A tooltip that is set for an image.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.ChartContainer'-->
<xsd:complexType name="_ChartContainerType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<!--default aggregation 'content'-->
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:ChartContainerContent"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
<xsd:element name="dimensionSelectors" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Dimension Selects.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="content" minOccurs="0">
<xsd:annotation>
<xsd:documentation>ChartToolBar Content aggregation. Only sap.viz.ui5.controls.VizFrame, sap.m.Table and sap.ui.table.Table can be embedded.
If not specified explicitly, the rendering order of the charts is determined by the sequence of contents provided by the application via this aggregation. This means, per default the first chart of the aggregation will be rendered within the container.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:ChartContainerContent"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="toolbar" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Overflow ToolBar. If an external toolbar is used, it will be integrated with the embedded toolbar via a placeholder.
			This placeholder is mandatory, and it needs to be of type 'sap.suite.ui.commons.ChartContainerToolbarPlaceholder'.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n1:OverflowToolbar"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="customIcons" minOccurs="0">
<xsd:annotation>
<xsd:documentation>This aggregation contains the custom icons that should be displayed additionally on the toolbar.
			It is not guaranteed that the same instance of the sap.ui.core.Icon control will be used within the toolbar,
			but the toolbar will contain a sap.m.OverflowToolbarButton with an icon property equal to the src property
			of the sap.ui.core.Icon provided in the aggregation.
			If a press event is triggered by the icon displayed on the toolbar, then the press handler of
			the original sap.ui.core.Icon control is used. The instance of the control, that has triggered the press event,
			can be accessed using the "controlReference" parameter of the event object.
			</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Icon"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="showPersonalization" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Set to true to display the personalization icon. Set to false to hide it.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showFullScreen" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Set to true to display the full screen icon. Set to false to hide it.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="fullScreen" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Display the chart and the toolbar in full screen or normal mode.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showLegend" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Set to true to display the charts' legends. Set to false to hide them. See also showLegendButton.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="title" type="xsd:string">
<xsd:annotation>
<xsd:documentation>String shown if there are no dimensions to display.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="selectorGroupLabel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Custom Label for Selectors Group.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="autoAdjustHeight" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determine whether to stretch the chart height to the maximum possible height of ChartContainer's parent container. As a prerequisite, the parent container needs to have a fixed value height or be able to determine height from its parent.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showZoom" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Set to true to display zoom icons. Set to false to hide them.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showLegendButton" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Set to true or false to display or hide a button for controlling the visbility of the chart's legend. Please be aware that setting this property to true indirectly is setting showLegend to false. If you need to hide the button but to show the legend, you need to set showLegend at a later point in time (onBeforeRendering). The execution order of the combined properties is not guaranteed by the control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="personalizationPress" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Event fired when a user clicks on the personalization icon.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="contentChange" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Event fired when a user changes the displayed content.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="customZoomInPress" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Custom event for zoom in.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="customZoomOutPress" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Custom event for zoom out.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.ChartContainerContent'-->
<xsd:complexType name="_ChartContainerContentType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="content" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Chart or Table as content of the ChartToolBar. Supported Types: sap.viz.ui5.controls.VizFrame, sap.m.Table, sap.ui.table.Table
			</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="icon" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Icon of the Chart.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="title" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Title of the Chart/Table</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.ChartContainerToolbarPlaceholder'-->
<xsd:complexType name="_ChartContainerToolbarPlaceholderType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType"/>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.ChartTile'-->
<xsd:complexType name="_ChartTileType">
<xsd:complexContent>
<xsd:extension base="n3:_InfoTileType">
<xsd:attribute name="unit" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The percent sign, the currency symbol, or the unit of measure.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.ColumnData'-->
<xsd:complexType name="_ColumnDataType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:attribute name="label" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The label.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="value" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The actual value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="color" type="n3:_InfoTileValueColorType">
<xsd:annotation>
<xsd:documentation>The semantic color of the column.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the user chooses the column data.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.ColumnMicroChart'-->
<xsd:complexType name="_ColumnMicroChartType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="columns" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The column chart data.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:ColumnData"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="leftTopLabel" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The label on the left top corner of the chart.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:ColumnMicroChartLabel"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="rightTopLabel" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The label on the right top corner of the chart.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:ColumnMicroChartLabel"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="leftBottomLabel" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The label on the left bottom corner of the chart.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:ColumnMicroChartLabel"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="rightBottomLabel" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The label on the right bottom corner of the chart.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:ColumnMicroChartLabel"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="size" type="n3:_InfoTileSizeType">
<xsd:annotation>
<xsd:documentation>Updates the size of the chart. If not set then the default size is applied based on the device tile.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="width" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The width of the chart. If it is not set, the width of the control is defined by the size property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="height" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The height of the chart. If it is not set, the height of the control is defined by the size property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the user chooses the column chart.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.ColumnMicroChartLabel'-->
<xsd:complexType name="_ColumnMicroChartLabelType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:attribute name="label" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The text of the label.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="color" type="n3:_InfoTileValueColorType">
<xsd:annotation>
<xsd:documentation>The color of the label.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.ComparisonChart'-->
<xsd:complexType name="_ComparisonChartType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="data" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The comparison chart data.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:ComparisonData"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="scale" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The scaling suffix.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="size" type="n3:_InfoTileSizeType">
<xsd:annotation>
<xsd:documentation>Updates the size of the chart. If not set then the default size is applied based on the device tile.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="view" type="n3:_ComparisonChartViewType">
<xsd:annotation>
<xsd:documentation>The view of the chart. If not set, the Normal view is used by default.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="width" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The width of the chart. If it is not set, the size of the control is defined by the size property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="colorPalette" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The color palette for the chart. If this property is set, semantic colors defined in ComparisonData are ignored. Colors from the palette are assigned to each bar consequentially. When all the palette colors are used, assignment of the colors begins from the first palette color.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="shrinkable" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If it is set to true, the height of the control is defined by its content. </xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="height" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>Height of the chart.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the user chooses the comparison chart.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.ComparisonData'-->
<xsd:complexType name="_ComparisonDataType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:attribute name="title" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The comparison bar title.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="value" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The float value for comparison.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="color" type="n3:_InfoTileValueColorType">
<xsd:annotation>
<xsd:documentation>The semantic color of the value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="displayValue" type="xsd:string">
<xsd:annotation>
<xsd:documentation>If this property is set then it will be rendered instead of value. </xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the user chooses the comparison data.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.CountingNavigationItem'-->
<xsd:complexType name="_CountingNavigationItemType">
<xsd:complexContent>
<xsd:extension base=":_NavigationItemType">
<xsd:attribute name="quantity" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Stores the number of content items associated with this navigation item. This number appears in brackets next to the navigation item name. For example, Employes (10000).</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.DateRangeScroller'-->
<xsd:complexType name="_DateRangeScrollerType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:attribute name="ariaDescribedBy" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Association to controls / ids which describe this control (see WAI-ARIA attribute aria-describedby).</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="ariaLabelledBy" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Association to controls / ids which label this control (see WAI-ARIA attribute aria-labelledby).</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="change" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event is fired whenever the date range is changed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.DateRangeSlider'-->
<xsd:complexType name="_DateRangeSliderType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:attribute name="width" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>Width of the horizontal date range slider.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="enabled" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>This property switches the enabled state of the control. Disabled fields have different colors, and can not be focused.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="editable" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>This property switches the enabled state of the control. Using the date range slider interactively requires this property to be true.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showBubbles" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Property to show or hide bubbles. Default is true.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="smallStepWidth" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The grips of the control can only be moved in steps of this width.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="totalUnits" type="xsd:int">
<xsd:annotation>
<xsd:documentation>Number of units between ticks.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="stepLabels" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Display a date label above each tick.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="labels" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Labels to be displayed instead of dates.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="min" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Minimum date for the slider.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="max" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Maximum date for the slider.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="value" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Date value of the left grip.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="value2" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Date value of the right grip.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="pinGrip" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Pin the left grip so that user cannot move it with the keyboard or mouse.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="pinGrip2" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Pin the right grip so that user cannot move it with the keyboard or mouse.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="change" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event is fired when user changes completes the selection of a new date using a grip. It contains the Date object value of each grip such that the left grip value is held by the value property and the right grip value is held by the value2 property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="liveChange" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This live event is fired as the user slides a grip with the mouse. It contains the Date object value of each grip such that the left grip value is held by the value property and the right grip value is held by the value2 property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.DateRangeSliderInternal'-->
<xsd:complexType name="_DateRangeSliderInternalType">
<xsd:complexContent>
<xsd:extension base=":_RangeSliderType">
<xsd:attribute name="showBubbles" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Property to show or hide bubbles. Default is true.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="pinGrip" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Property to pin Grip (left grip) of the slider so that user cannot move it with key or mouse clicks.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="pinGrip2" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Property to pin Grip2 (right grip) of the slider so that user cannot move it with key or mouse clicks.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="change" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event is fired when user changes the positions of the grips of the control. It contains value as Date object and value2 as Date object which are based on the positions of two grips.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="liveChange" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This live event is fired when user changes the positions of the grips of the control. It contains value as Date object and value2 as Date object which are based on the positions of two grips.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.DeltaMicroChart'-->
<xsd:complexType name="_DeltaMicroChartType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:attribute name="value1" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The first value for delta calculation.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="value2" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The second value for delta calculation.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="title1" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The first value title.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="title2" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The second value title.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="displayValue1" type="xsd:string">
<xsd:annotation>
<xsd:documentation>If this property is set, it is rendered instead of value1.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="displayValue2" type="xsd:string">
<xsd:annotation>
<xsd:documentation>If this property is set, it is rendered instead of value2.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="deltaDisplayValue" type="xsd:string">
<xsd:annotation>
<xsd:documentation>If this property is set, it is rendered instead of a calculated delta.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="color" type="n3:_InfoTileValueColorType">
<xsd:annotation>
<xsd:documentation>The semantic color of the delta value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="width" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The width of the chart.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="size" type="n3:_InfoTileSizeType">
<xsd:annotation>
<xsd:documentation>The size of the chart. If is not set, the default size is applied based on the device type.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the user chooses the delta micro chart.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.DynamicContainer'-->
<xsd:complexType name="_DynamicContainerType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="tiles" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The set of Generic Tiles to be shown in the control.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:GenericTile"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="displayTime" type="xsd:int">
<xsd:annotation>
<xsd:documentation>The time of the slide display in milliseconds.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="transitionTime" type="xsd:int">
<xsd:annotation>
<xsd:documentation>The time of the slide changing in milliseconds.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.FacetOverview'-->
<xsd:complexType name="_FacetOverviewType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="content" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The content that appears in the left part of the control.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="title" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This property is shown in the upper left part of control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="quantity" type="xsd:int">
<xsd:annotation>
<xsd:documentation>Displays a label with the number of items in the right part of the control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="width" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>Defines the width of the control. By default, the value is empty and the control inhertis the size from its content.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="height" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>Defines the height of the control only if the heightType prperty is set to None. Must be set in rems for the correct work in the UnifiedThingInspector.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="rowSpan" type="xsd:int">
<xsd:annotation>
<xsd:documentation>Defines the number of rows that the control represents in an external layout.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="heightType" type="n3:_FacetOverviewHeightType">
<xsd:annotation>
<xsd:documentation>Indicates the height of the control in the predifened values. If set to None, then the height is defined by the depricated height property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the user chooses the control. Provides an event with parameter id, the ID of the chosen control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="heightChange" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event is fired when a new value to the heightType or height property is set.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.FeedItem'-->
<xsd:complexType name="_FeedItemType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:attribute name="title" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The title of the feed item.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="image" type="n0:_URIType">
<xsd:annotation>
<xsd:documentation>The background image for the feed item.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="link" type="n0:_URIType">
<xsd:annotation>
<xsd:documentation>The target location of the feed item.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="source" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The source of the feed item.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="publicationDate" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The date the feed was published.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.FeedItemHeader'-->
<xsd:complexType name="_FeedItemHeaderType">
<xsd:complexContent>
<xsd:extension base="n1:_ListItemBaseType">
<xsd:attribute name="title" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The title of the feed item.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="image" type="n0:_URIType">
<xsd:annotation>
<xsd:documentation>The image associated with the feed item.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="link" type="n0:_URIType">
<xsd:annotation>
<xsd:documentation>The target location of the feed item.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="source" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The source of the feed item.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="publicationDate" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The date the feed item was published.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="description" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The description of the feed item.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.FeedTile'-->
<xsd:complexType name="_FeedTileType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="items" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The feed items the control cycles through.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:FeedItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="displayDuration" type="xsd:int">
<xsd:annotation>
<xsd:documentation>The length of time in seconds the control displays each  feed item. Default value is 5 seconds.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="displayArticleImage" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>To display article Image or not. If it is true, the article Image will be displayed based on precedence. If it is false, the default image will be displayed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="source" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The source of the feed item.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="defaultImages" type="xsd:string">
<xsd:annotation>
<xsd:documentation>A list of default images that is cycled by the control when no image is available for a feed item or when no feed items exist. After a random image is displayed first time, control cycles through this list of images.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event fired when the user clicks on the control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.GenericTile'-->
<xsd:complexType name="_GenericTileType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="tileContent" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The switchable view that depends on the tile type.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:TileContent"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="icon" minOccurs="0">
<xsd:annotation>
<xsd:documentation>An icon or image to be displayed in the control.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="header" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The header of the tile.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="subheader" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The subheader of the tile.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="failedText" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The message that appears when the control is in the Failed state.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="size" type="n3:_InfoTileSizeType">
<xsd:annotation>
<xsd:documentation>The size of the tile. If not set, then the default size is applied based on the device tile.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="frameType" type="n3:_FrameTypeType">
<xsd:annotation>
<xsd:documentation>The frame type: 1x1 or 2x1.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="backgroundImage" type="n0:_URIType">
<xsd:annotation>
<xsd:documentation>The URI of the background image.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="headerImage" type="n0:_URIType">
<xsd:annotation>
<xsd:documentation>The image to be displayed as a graphical element within the header. This can be an image or an icon from the icon font.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="state" type="n3:_LoadStateType">
<xsd:annotation>
<xsd:documentation>The load status.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="imageDescription" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Description of a header image that is used in the tooltip.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the user chooses the tile.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.GenericTile2X2'-->
<xsd:complexType name="_GenericTile2X2Type">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="tileContent" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The switchable view that depends on the tile type.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:TileContent2X2"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="icon" minOccurs="0">
<xsd:annotation>
<xsd:documentation>An icon or image to be displayed in the control.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="header" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The header of the tile.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="subheader" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The subheader of the tile.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="failedText" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The message that appears when the control is in the Failed state.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="size" type="n3:_InfoTileSizeType">
<xsd:annotation>
<xsd:documentation>The size of the tile. If not set, then the default size is applied based on the device tile.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="backgroundImage" type="n0:_URIType">
<xsd:annotation>
<xsd:documentation>The URI of the background image.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="headerImage" type="n0:_URIType">
<xsd:annotation>
<xsd:documentation>The image to be displayed as a graphical element within the header. This can be an image or an icon from the icon font.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="frameType" type="n3:_FrameTypeType">
<xsd:annotation>
<xsd:documentation>The frame type: 1x1 or 2x1.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="state" type="n3:_LoadStateType">
<xsd:annotation>
<xsd:documentation>The load status.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="imageDescription" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Description of a header image that is used in the tooltip.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the user chooses the tile.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.HarveyBallMicroChart'-->
<xsd:complexType name="_HarveyBallMicroChartType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="items" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The pie chart slices.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:HarveyBallMicroChartItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="total" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The total value. This is taken as 360 degrees value on the chart.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="totalLabel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The total label. If specified, it is displayed instead of the total value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="totalScale" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The scaling factor that is displayed next to the total value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="formattedLabel" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to true, the totalLabel parameter is considered as the combination of the total value and its scaling factor. The default value is false. It means that the total value and the scaling factor are defined separately by the total and the totalScale properties accordingly.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showTotal" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If it is set to true, the total value is displayed next to the chart. The default setting is true.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showFractions" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If it is set to true, the fraction values are displayed next to the chart. The default setting is true.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="size" type="n3:_InfoTileSizeType">
<xsd:annotation>
<xsd:documentation>The size of the chart. If it is not set, the default size is applied based on the device type.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="colorPalette" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The color palette for the chart. If this property is set, semantic colors defined in HarveyBallMicroChart are ignored. Colors from the palette are assigned to each slice consequentially. When all the palette colors are used, assignment of the colors begins from the first palette color.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="width" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The width of the chart. If it is not set, the size of the control is defined by the size property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the user chooses the control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.HarveyBallMicroChartItem'-->
<xsd:complexType name="_HarveyBallMicroChartItemType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:attribute name="color" type="n3:_InfoTileValueColorType">
<xsd:annotation>
<xsd:documentation>The slice color.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="fraction" type="xsd:float">
<xsd:annotation>
<xsd:documentation>The fraction value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="fractionLabel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The fraction label. If specified, it is displayed instead of the fraction value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="fractionScale" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The scaling factor that is displayed after the fraction value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="formattedLabel" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to true, the fractionLabel parameter is considered as the combination of the fraction value and scaling factor. The default value is false. It means that the fraction value and the scaling factor are defined separately by the fraction and the fractionScale properties accordingly.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.HeaderCell'-->
<xsd:complexType name="_HeaderCellType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="west" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Object that contains control to render in west area of the HeaderCell.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:HeaderCellItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="north" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Object that contains control to render in north area of the HeaderCell.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:HeaderCellItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="east" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Object that contains control to render in east area of the HeaderCell.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:HeaderCellItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="south" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Object that contains control to render in south area of the HeaderCell.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:HeaderCellItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="heigth" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>Height of the HeaderCell control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="height" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>Height of the HeaderCell control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.HeaderCellItem'-->
<xsd:complexType name="_HeaderCellItemType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:sequence>
<xsd:element name="content" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Instance of UI5 Control that is used as content.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="height" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>Height of area to occupy by control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.HeaderContainer'-->
<xsd:complexType name="_HeaderContainerType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="items" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Items to add to HeaderContainer.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="scrollStep" type="xsd:int">
<xsd:annotation>
<xsd:documentation>Number of pixels to scroll when the user chooses Next or Previous buttons. Relevant only for desktop.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="scrollTime" type="xsd:int">
<xsd:annotation>
<xsd:documentation>Scroll animation time in milliseconds.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showDividers" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to true, shows dividers between scrollable items.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="view" type="n3:_HeaderContainerViewType">
<xsd:annotation>
<xsd:documentation>The view of the HeaderContainer. There are two view modes: horizontal and vertical. In horizontal mode the content controls are displayed next to each other, in vertical mode the content controls are displayed on top of each other.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="backgroundDesign" type="n1:_BackgroundDesignType">
<xsd:annotation>
<xsd:documentation>Specifies the background color of the content. The visualization of the different options depends on the used theme.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.InfoTile'-->
<xsd:complexType name="_InfoTileType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="content" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The switchable view that depends on the tile type.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="description" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Shows the description of the selected tile.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="title" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The title of the tile.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="footer" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The footer text of the tile.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="size" type="n3:_InfoTileSizeType">
<xsd:annotation>
<xsd:documentation>Updates the size of the tile. If not set then the default size is applied based on the device tile.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="state" type="n3:_LoadStateType">
<xsd:annotation>
<xsd:documentation>Indicates the load status.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the user chooses the tile.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.JamContent'-->
<xsd:complexType name="_JamContentType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence/>
<xsd:attribute name="size" type="n3:_InfoTileSizeType">
<xsd:annotation>
<xsd:documentation>Updates the size of the chart. If not set then the default size is applied based on the device tile.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="contentText" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The content text.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="subheader" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The subheader.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="value" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The actual value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="valueColor" type="n3:_InfoTileValueColorType">
<xsd:annotation>
<xsd:documentation>The semantic color of the value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="truncateValueTo" type="xsd:int">
<xsd:annotation>
<xsd:documentation>The number of characters to display for the value property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the user chooses the jam content.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.KpiTile'-->
<xsd:complexType name="_KpiTileType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:attribute name="value" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The Value field.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="description" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The Description field.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="doubleFontSize" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If true, the value text will have 2 rem, if false - 1 rem.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="valueUnit" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The percent sign, currency symbol, or unit for a value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="valueScale" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The scale of a value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="valueStatus" type="n3:_ValueStatusType">
<xsd:annotation>
<xsd:documentation>The status color of the value. Depending on the status the tile is displayed in different colors.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.LaunchTile'-->
<xsd:complexType name="_LaunchTileType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:attribute name="title" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Descriptive title of the launch destination.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="icon" type="n0:_URIType">
<xsd:annotation>
<xsd:documentation>Icon associated with the launch destination.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="link" type="n0:_URIType">
<xsd:annotation>
<xsd:documentation>The launch destination.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event fired when the user clicks on the control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.LinkActionSheet'-->
<xsd:complexType name="_LinkActionSheetType">
<xsd:complexContent>
<xsd:extension base="n1:_ActionSheetType">
<xsd:sequence>
<xsd:element name="items" minOccurs="0">
<xsd:annotation>
<xsd:documentation>These buttons or links are added to the content area in the LinkActionSheet control. If the user chooses a button or a link, the LinkActionSheet is closed before the event listener is called.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="itemPress" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the user chooses any item.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.MicroAreaChart'-->
<xsd:complexType name="_MicroAreaChartType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="chart" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The configuration of the actual values line. The color property defines the color of the line. Points are rendered in the same sequence as in this aggregation.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:MicroAreaChartItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="maxThreshold" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The configuration of the max threshold area. The color property defines the color of the area above the max threshold line. Points are rendered in the same sequence as in this aggregation.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:MicroAreaChartItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="innerMaxThreshold" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The configuration of the upper line of the inner threshold area. The color property defines the color of the area between inner thresholds. For rendering of the inner threshold area, both innerMaxThreshold and innerMinThreshold aggregations must be defined. Points are rendered in the same sequence as in this aggregation.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:MicroAreaChartItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="innerMinThreshold" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The configuration of the bottom line of the inner threshold area. The color property is ignored. For rendering of the inner threshold area, both innerMaxThreshold and innerMinThreshold aggregations must be defined. Points are rendered in the same sequence as in this aggregation.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:MicroAreaChartItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="minThreshold" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The configuration of the min threshold area. The color property defines the color of the area below the min threshold line. Points are rendered in the same sequence as in this aggregation.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:MicroAreaChartItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="target" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The configuration of the target values line. The color property defines the color of the line. Points are rendered in the same sequence as in this aggregation.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:MicroAreaChartItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="firstXLabel" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The label on X axis for the first point of the chart.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:MicroAreaChartLabel"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="firstYLabel" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The label on Y axis for the first point of the chart.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:MicroAreaChartLabel"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="lastXLabel" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The label on X axis for the last point of the chart.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:MicroAreaChartLabel"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="lastYLabel" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The label on Y axis for the last point of the chart.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:MicroAreaChartLabel"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="maxLabel" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The label for the maximum point of the chart.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:MicroAreaChartLabel"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="minLabel" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The label for the minimum point of the chart.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:MicroAreaChartLabel"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="lines" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The set of lines.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:MicroAreaChartItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="width" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The width of the chart.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="height" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The height of the chart.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="maxXValue" type="xsd:float">
<xsd:annotation>
<xsd:documentation>If this property is set it indicates the value X axis ends with.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="minXValue" type="xsd:float">
<xsd:annotation>
<xsd:documentation>If this property is set it indicates the value X axis starts with.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="maxYValue" type="xsd:float">
<xsd:annotation>
<xsd:documentation>If this property is set it indicates the value Y axis ends with.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="minYValue" type="xsd:float">
<xsd:annotation>
<xsd:documentation>If this property is set it indicates the value Y axis starts with.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="view" type="n3:_MicroAreaChartViewType">
<xsd:annotation>
<xsd:documentation>The view of the chart.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="colorPalette" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The color palette for the chart. If this property is set, semantic colors defined in MicroAreaChartItem are ignored. Colors from the palette are assigned to each line consequentially. When all the palette colors are used, assignment of the colors begins from the first palette color.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the user chooses the micro area chart.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.MicroAreaChartItem'-->
<xsd:complexType name="_MicroAreaChartItemType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:sequence>
<xsd:element name="points" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The set of points for this graphic element.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:MicroAreaChartPoint"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="color" type="n3:_InfoTileValueColorType">
<xsd:annotation>
<xsd:documentation>The graphic element color.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="title" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The line title.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.MicroAreaChartLabel'-->
<xsd:complexType name="_MicroAreaChartLabelType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:attribute name="label" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The text of the label.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="color" type="n3:_InfoTileValueColorType">
<xsd:annotation>
<xsd:documentation>The color of the label.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.MicroAreaChartPoint'-->
<xsd:complexType name="_MicroAreaChartPointType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:attribute name="x" type="xsd:float">
<xsd:annotation>
<xsd:documentation>X value for the given point.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="y" type="xsd:float">
<xsd:annotation>
<xsd:documentation>Y value for the given point.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.MonitoringContent'-->
<xsd:complexType name="_MonitoringContentType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="icon" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The icon that is displayed in the content.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Icon"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="value" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The actual value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="iconSrc" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This property is set by the return value of sap.ui.core.IconPool.getIconURI that is called with an icon name parameter and optional collection parameter. The collection parameter is required when the application extended icons are used.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="size" type="n3:_InfoTileSizeType">
<xsd:annotation>
<xsd:documentation>Updates the size of the chart. If not set then the default size is applied based on the device tile.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="state" type="n3:_LoadStateType">
<xsd:annotation>
<xsd:documentation>Indicates the load status.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="animateTextChange" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to true, changing of the value is animated.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the user chooses the monitoring content.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.MonitoringTile'-->
<xsd:complexType name="_MonitoringTileType">
<xsd:complexContent>
<xsd:extension base="n3:_InfoTileType">
<xsd:attribute name="value" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The actual value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="iconSrc" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This property is set by the return value of sap.ui.core.IconPool.getIconURI that is called with an icon name parameter and optional collection parameter. The collection parameter is required when the application extended icons are used.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="footerColor" type="n3:_InfoTileTextColorType">
<xsd:annotation>
<xsd:documentation>The color of the tile footer text.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.NewsContent'-->
<xsd:complexType name="_NewsContentType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence/>
<xsd:attribute name="size" type="n3:_InfoTileSizeType">
<xsd:annotation>
<xsd:documentation>Updates the size of the chart. If not set then the default size is applied based on the device tile.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="contentText" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The content text.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="subheader" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The subheader.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the user chooses the news content.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.NoteTaker'-->
<xsd:complexType name="_NoteTakerType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="cards" minOccurs="0">
<xsd:annotation>
<xsd:documentation>This aggregation allows you to add note cards to the Note Taker and remove them from the Note Taker. </xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:NoteTakerCard"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="visibleNotes" type="xsd:int">
<xsd:annotation>
<xsd:documentation>Number of notes to display.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="cardViewAllTrigger" type="xsd:int">
<xsd:annotation>
<xsd:documentation>The View All link appears in the Note Taker card when length of a card body text exceeds the specified value. The updated value of this property is not applied to the existing cards.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="filterCriteria" type="xsd:string">
<xsd:annotation>
<xsd:documentation>A composite object containing criteria for filtering cards in the Note Taker.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="attachmentUploadUrl" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Defines a path on the server where the attached files are uploaded. 
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="attachmentName" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The attachment property name for identification on the server side after sending data to the server.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="addCard" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when a new card is added if no data binding is available.
If data binding is available, the event is fired to notify a developer to add an element to the model.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="deleteCard" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when a new card is deleted if no data binding  is available.
If data binding is available, the event is fired to notify a developer to delete the element from the model.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="editCard" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when a new card has been edited.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="attachmentSelect" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the value of attached file has been changed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="attachmentUploadComplete" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Fire event uploadComplete to attached listeners.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="attachmentDelete" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired, when  user deletes the attached file.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="attachmentClick" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when a user presses the attachment link.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.NoteTakerCard'-->
<xsd:complexType name="_NoteTakerCardType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:attribute name="header" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Stores the Note Taker card header.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="body" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Stores the Note Taker card body text.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="timestamp" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Stores a timestamp of the Note Taker card.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="tags" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Contains an array of the String type tags applied to the current card.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="viewAllTrigger" type="xsd:int">
<xsd:annotation>
<xsd:documentation>The View All link appears in the Note Taker card if a body text length exceeds the specified value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="uid" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The card ID. This property should be set by an application developer.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="isFiltered" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Shows whether the note card is hidden by the applied filter.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="thumbUp" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Indicates positive information for the card.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="thumbDown" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Indicates negative information for the card.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="allTags" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Contains an array of the String type tags available for selection during the card update.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="attachmentFilename" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Stores the name of the file attached to the card.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="attachmentUrl" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Stores the address of the file attached to the card.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="editNote" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when a user chooses the Edit button in the note card.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="deleteNote" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when a card needs to be deleted. This event is needed for the Note Taker control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="attachmentClick" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when a user chooses the attachment download link.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.NoteTakerFeeder'-->
<xsd:complexType name="_NoteTakerFeederType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence/>
<xsd:attribute name="body" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The text inside the note card.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="title" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This text is the header of a new note.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="tags" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The list of tags selected for addition to a new note card.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="thumbUp" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Sets positive indication for a new note.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="thumbDown" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Sets negative indication for a new note.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="attachmentUploadUrl" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Sets the upload attachment URL for a new card.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="attachmentName" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The attachment property name for identification on the server side after sending data to the server.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="addNote" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when a user chooses the Add button in the control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="attachmentSelect" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the value of attached file has been changed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="attachmentUploadComplete" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the upload of the file is completed. However this covers only the client side of the Upload process and does not give any success status from the server.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="attachmentDelete" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when a user presses the Delete button in the Feeder card.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="attachmentClick" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when a user presses the attachment link.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.NumericContent'-->
<xsd:complexType name="_NumericContentType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:attribute name="size" type="n3:_InfoTileSizeType">
<xsd:annotation>
<xsd:documentation>Updates the size of the chart. If not set then the default size is applied based on the device tile.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="value" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The actual value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="scale" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The scaling prefix. Financial characters can be used for currencies and counters. The SI prefixes can be used for units. If the scaling prefix contains more than three characters, only the first three characters are displayed.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="valueColor" type="n3:_InfoTileValueColorType">
<xsd:annotation>
<xsd:documentation>The semantic color of the value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="indicator" type="n3:_DeviationIndicatorType">
<xsd:annotation>
<xsd:documentation>The indicator arrow that shows value deviation.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="state" type="n3:_LoadStateType">
<xsd:annotation>
<xsd:documentation>Indicates the load status.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="animateTextChange" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to true, the change of the value will be animated.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="formatterValue" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to true, the value parameter contains a numeric value and scale. If set to false (default), the value parameter contains a numeric value only.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="truncateValueTo" type="xsd:int">
<xsd:annotation>
<xsd:documentation>The number of characters to display for the value property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="icon" type="n0:_URIType">
<xsd:annotation>
<xsd:documentation>The icon to be displayed as a graphical element within the control. This can be an image or an icon from the icon font.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="nullifyValue" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to true, the omitted value property is set to 0.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="iconDescription" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Description of an icon that is used in the tooltip.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="width" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The width of the chart. If it is not set, the size of the control is defined by the size property.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="withMargin" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If the value is set to false, the content will fit to the whole size of the control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the user chooses the numeric content.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.NumericTile'-->
<xsd:complexType name="_NumericTileType">
<xsd:complexContent>
<xsd:extension base="n3:_InfoTileType">
<xsd:attribute name="value" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The actual value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="scale" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The scaling prefix. Financial characters can be used for currencies and counters. The SI prefixes can be used for units.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="unit" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The percent sign, the currency symbol, or the unit of measure.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="valueColor" type="n3:_InfoTileValueColorType">
<xsd:annotation>
<xsd:documentation>The semantic color of the value.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="indicator" type="n3:_DeviationIndicatorType">
<xsd:annotation>
<xsd:documentation>The indicator arrow that shows value deviation.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.PictureZoomIn'-->
<xsd:complexType name="_PictureZoomInType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="busyIndicator" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Custom busy indicator.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="description" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Description is shown under image.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="imageSrc" type="n0:_URIType">
<xsd:annotation>
<xsd:documentation>Source for image.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.ProcessFlow'-->
<xsd:complexType name="_ProcessFlowType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<!--default aggregation 'lanes'-->
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:ProcessFlowLaneHeader"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
<xsd:element name="nodes" minOccurs="0">
<xsd:annotation>
<xsd:documentation>This is the aggregation of the node controls put into the table to the calculated cells.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:ProcessFlowNode"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="lanes" minOccurs="0">
<xsd:annotation>
<xsd:documentation>This is a header of the table for the process flow control.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:ProcessFlowLaneHeader"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="foldedCorners" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>This property defines the folded corners for the single node control. The following values exist:
- true: means folded corner
- false/null/undefined: means normal corner</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="scrollable" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>By default, the control body is embedded into a scroll container of fixed size, so the user
can put the control into a fixe sized layout.
When the control body (the graph) gets larger than the container cuts the overflowing parts of the graph and the cut parts can be viewed by scroling the control body.
When the control body fits into the container limits, obviously no scrolling is possible (and makes sense).

The scrolling feature can be turned off by setting this property value to false,
so the width/height of the whole control will change as the flow graph gets smaller/larger.
In this case the control body could not be scrolled, as the control body size matches the control container size.
</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="wheelZoomable" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>The property specifies if to enable semantic zooming by mouse wheel events on desktop browsers.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showLabels" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Defines if the connection labels are shown or not.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="nodeTitlePress" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event is fired when a process flow node title was
        clicked. The user can access the clicked process flow node control object which is the only argument of the event handler.
      </xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="nodePress" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event is fired when a process flow node was clicked.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="labelPress" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event is fired when a process flow connection label was clicked.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="headerPress" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event is fired when the header column was clicked.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="onError" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event is fired when an issue occurs with the process flow calculation. In most cases, there is an issue with the data. The console contains the detailed error description with the errors.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.ProcessFlowConnection'-->
<xsd:complexType name="_ProcessFlowConnectionType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<!--default aggregation '_labels'-->
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:ProcessFlowConnectionLabel"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
<xsd:attribute name="drawData" type="">
<xsd:annotation>
<xsd:documentation>This is an array of the following attributes for one element:
1. flowLine (string) - A connection definition where the line should be drawn. A string which defines a course of a flow line. A flow line is a connection between nodes in a process flow control. The string can contain the following characters:
- "r" for right,
- "t" for top,
- "l" for left,
- "b" for bottom.
2. targetNodeState (ProcessFlowNodeState) - A copy of the target node status. If the target node is created, the line is solid.
 If the target node is planned, the line is dashed.
3. displayState (ProcessFlowDisplayState) - Display state of the node. This property defines if the node is displayed regularly, highlighted, or dimmed in combination with a selected visual style of the control.
4. hasArrow (boolean) - Indicates if the line has an arrow on the right end.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="zoomLevel" type="n3:_ProcessFlowZoomLevelType">
<xsd:annotation>
<xsd:documentation>This is a current zoom level for the connection. The point of connection to the node is derived from zoom level.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="type" type="n3:_ProcessFlowConnectionTypeType">
<xsd:annotation>
<xsd:documentation>Type of the connection.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="state" type="n3:_ProcessFlowConnectionStateType">
<xsd:annotation>
<xsd:documentation>State of the connection.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.ProcessFlowConnectionLabel'-->
<xsd:complexType name="_ProcessFlowConnectionLabelType">
<xsd:complexContent>
<xsd:extension base="n1:_ButtonType">
<xsd:attribute name="priority" type="xsd:int">
<xsd:annotation>
<xsd:documentation>Priority is used to define which label is visible if the state of multiple labels is equal. Assuming there are multiple labels with equal state (e.g. Negative state appears twice), the priority decides which one needs to be selected.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="state" type="n3:_ProcessFlowConnectionLabelStateType">
<xsd:annotation>
<xsd:documentation>Specifies the state of the connection label. If multiple labels are available for one connection, the label will be selected by state based on the following order: Neutral -&gt; Positive -&gt; Critical -&gt; Negative.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.ProcessFlowLaneHeader'-->
<xsd:complexType name="_ProcessFlowLaneHeaderType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:attribute name="text" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Text information that is displayed in the control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="iconSrc" type="n0:_URIType">
<xsd:annotation>
<xsd:documentation>Icon to be displayed in the middle of the control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="position" type="xsd:int">
<xsd:annotation>
<xsd:documentation>Position of the lane in the process flow control. Numbering of the position has to be sequential and needs to start from 0.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="laneId" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Internal identification of the header.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="state" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Array of the ProcessFlowLaneState. The user can explicitly set an array with the two properties state and value of the state, for example [state:sap.suite.ui.commons.ProcessFlowNodeState.Neutral, value: 20]. Possible states are states are positive, negative, neutral, and planned.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="zoomLevel" type="n3:_ProcessFlowZoomLevelType">
<xsd:annotation>
<xsd:documentation>Current zoom level for the lane header.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event is fired when the header is clicked.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.ProcessFlowNode'-->
<xsd:complexType name="_ProcessFlowNodeType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:attribute name="title" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The node title.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="isTitleClickable" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Specifies if the node title is clickable.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="laneId" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Specifies the assignment of the node to the respective lane.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="nodeId" type="xsd:string">
<xsd:annotation>
<xsd:documentation>&gt;Node identifier.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="state" type="n3:_ProcessFlowNodeStateType">
<xsd:annotation>
<xsd:documentation>State of the node.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="type" type="n3:_ProcessFlowNodeTypeType">
<xsd:annotation>
<xsd:documentation>Type of the node.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="children" type="">
<xsd:annotation>
<xsd:documentation>Defines an array of children of the node.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="titleAbbreviation" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Title abbreviation is used in the compact mode.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="stateText" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Description of the state, for example "Status OK".</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="texts" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The property contains the additional texts on the node. The expected type is array of strings. One array must not contain more than two strings. Additional strings in the array will be ignored.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="highlighted" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>The parameter defines if the node should be displayed in highlighted state.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="focused" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>The parameter defines if the node should be displayed in focus state.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="tag" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The user-defined object which is returned back to the user by a node click event.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="selected" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>The parameter defines if the node should be displayed in selected state.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="parents" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Reference to ProcessFlowNodes which appears before this ProcessFlowNode.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="titlePress" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event handler is executed when the user clicks the node title. This event is fired only when the title is clickable (isTitleClickable equals true).</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="press" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event is fired when the user clicks on the node. However, this event is not fired if the titlePress event has been fired.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.RepeaterViewConfiguration'-->
<xsd:complexType name="_RepeaterViewConfigurationType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="template" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The control used as a template while displaying rows/tiles in this view. It should not have fixed width wider than defined by the "itemMinWidth" property, otherwise some content may appear cropped.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="externalRepresentation" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The control to be rendered instead of sap.suite.ui.commons.ViewRepeater's own content. Only used if the "external" property is set to true. This allows you to create custom views, for example, Table views. The sap.suite.ui.commons.ViewRepeater control will share its model with this control if the control does not have its own model.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="title" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The title of the view to be displayed in sap.suite.ui.commons.ViewRepeater view selector. If neither this nor "icon" property are defined, the default title "View ##" will be shown, where ## is an index number of the view in View Repeater starting from 1.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="icon" type="n0:_URIType">
<xsd:annotation>
<xsd:documentation>A path to the icon representing this view in sap.suite.ui.commons.ViewRepeater view selector.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="iconHovered" type="n0:_URIType">
<xsd:annotation>
<xsd:documentation>A path to the icon representing this view in sap.suite.ui.commons.ViewRepeater view selector when the regular icon is hovered.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="path" type="xsd:string">
<xsd:annotation>
<xsd:documentation>A path used for rows/titles data binding.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="itemMinWidth" type="xsd:int">
<xsd:annotation>
<xsd:documentation>The minimal width of the tile in this view. Only applicable if "responsive" property is set to true.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="numberOfTiles" type="xsd:int">
<xsd:annotation>
<xsd:documentation>The number of tiles/rows that will be shown on a single page in this view.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="responsive" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This parameter indicates whether the content is shown in rows or tiles. If false, the content is shown in rows just like in core sap.ui.commons.RowRepeater. If true, the content is shown in tiles (similar to sap.ui.ux3.DataSet control) that have minimal width defined by the "itemMinWidth" property. The number of columns depends on the parent control's width. If you resize the control, the number of columns may change respectively so that the content tiles can fill the entire space of a row.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="external" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Indicates if the external representation of this view is rendered instead of the row repeater's own content.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="iconSelected" type="n0:_URIType">
<xsd:annotation>
<xsd:documentation>A path to the icon representing this view in sap.suite.ui.commons.ViewRepeater view selector when the regular icon is selected.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="itemHeight" type="xsd:int">
<xsd:annotation>
<xsd:documentation>The height of the tile in this view in pixels. Only applicable if the responsive property is set to true. This value is used for calculating the number of tile rows.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.SplitButton'-->
<xsd:complexType name="_SplitButtonType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="menu" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Menu that shall be opened when the menu part of the button is clicked</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="null:Menu"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="enabled" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Boolean property to enable the control (default is true). Buttons that are disabled have other colors than enabled ones, depending on custom settings.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="lite" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>The split button is rendered as lite split button.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="style" type="null:_ButtonStyleType">
<xsd:annotation>
<xsd:documentation>Style of the control (e.g. emphasized, accept)</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="styled" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Indicatied if the button is styled. If not it is rendered as native HTML-button. In this case a custom styling can be added usig addStyleClass.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="iconFirst" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to true (default), the display sequence is 1. icon 2. control text .</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="text" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Text to be displayed for the action button.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="icon" type="n0:_URIType">
<xsd:annotation>
<xsd:documentation>Icon to be displayed as graphical element within the action button.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.TargetFilter'-->
<xsd:complexType name="_TargetFilterType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="columns" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The list of the columns.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:TargetFilterColumn"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="measureColumn" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The measure column.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n3:TargetFilterMeasureColumn"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="entitySet" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The name of the entity set from OData service metadata. The filtering applies to this entity set.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="selectedColumns" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The list of selected columns. The index of the columns in this list corresponds to the quadrant.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="search" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event is fired if the user chooses the Show Selected link.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="filterChange" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event is fired if the user changes a selected filter set.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="cancel" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event is fired if the user changes a selected filter set to the filter set used for the last search.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.TargetFilterColumn'-->
<xsd:complexType name="_TargetFilterColumnType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:attribute name="path" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The binding path.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="title" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The column title.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="length" type="xsd:int">
<xsd:annotation>
<xsd:documentation>The number of the retrieved entries for the cloud of the links in the quadrant. The quadrant can display fewer links than retrieved.
			The font size of the links in the quadrant depends on the measure number. The font size of the links is relative in the retrieved group.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="type" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The type of the displayed data. The type of the property must be sap.ui.model.SimpleType or its descedants. By default, sap.ui.model.type.String.
			This property is used for formatting the displayed values. If sap.ui.model.type.String, the filter operator in the Search field of the column selection dialog is 'Contains'.
			In other cases, the filter operator is 'EQ'.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.TargetFilterMeasureColumn'-->
<xsd:complexType name="_TargetFilterMeasureColumnType">
<xsd:complexContent>
<xsd:extension base="n0:_ElementType">
<xsd:attribute name="path" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The binding path.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="type" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This property is used for formatting the displayed values. The type of the property must be sap.ui.model.SimpleType or its descedants. By default, sap.ui.model.type.Integer with enabled grouping.
			</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.ThingCollection'-->
<xsd:complexType name="_ThingCollectionType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="content" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Contains a collection of sap.ui.ux3.ThingViewer controls or descendants of sap.ui.ux3.ThingViewer.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="null:ThingViewer"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="width" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The width of the control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="height" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The height of the control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="minWidth" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The minimal width of the control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="minHeight" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The minimal height of the control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.ThreePanelThingInspector'-->
<xsd:complexType name="_ThreePanelThingInspectorType">
<xsd:complexContent>
<xsd:extension base=":_ThingInspectorType">
<xsd:sequence>
<xsd:element name="menuContent" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The items of the ThingViewer's Action Menu.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="null:Link"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="showHeader" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Shows or hides a middle panel of the ThingViewer named Header that contains general information.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="logo" type="n0:_URIType">
<xsd:annotation>
<xsd:documentation>A URL of the source of the ThingViewer's key visual image.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="sidebarWidth" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The width of the ThingViewer's navigation panel.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.ThreePanelThingViewer'-->
<xsd:complexType name="_ThreePanelThingViewerType">
<xsd:complexContent>
<xsd:extension base=":_ThingViewerType">
<xsd:sequence>
<xsd:element name="menuContent" minOccurs="0">
<xsd:annotation>
<xsd:documentation>This aggregation allows you to add sap.ui.commons.Link items to the Action Menu. The menu appears as a popup when a user chooses a button in the top title section of the navigation panel.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="null:Link"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="logo" type="n0:_URIType">
<xsd:annotation>
<xsd:documentation>A URL of the source of an image known as key visual. This can be a company logo or other essential graphics.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showHeader" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Shows or hides a middle panel named Header that contains general information.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="sidebarWidth" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The width of the first panel that contains thing's title, icon, key visual and navigation bar. The default value is "244px".</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.TileContent'-->
<xsd:complexType name="_TileContentType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="content" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The switchable view that depends on the tile type.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="footer" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The footer text of the tile.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="size" type="n3:_InfoTileSizeType">
<xsd:annotation>
<xsd:documentation>Updates the size of the tile. If not set then the default size is applied based on the device tile.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="unit" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The percent sign, the currency symbol, or the unit of measure.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="disabled" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Disables control if true.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="frameType" type="n3:_FrameTypeType">
<xsd:annotation>
<xsd:documentation>The frame type: 1x1 or 2x1.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.TileContent2X2'-->
<xsd:complexType name="_TileContent2X2Type">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="content" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The switchable view that depends on the tile type.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="footer" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The footer text of the tile.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="size" type="n3:_InfoTileSizeType">
<xsd:annotation>
<xsd:documentation>Updates the size of the tile. If not set then the default size is applied based on the device tile.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="unit" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The percent sign, the currency symbol, or the unit of measure.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="disabled" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Disables control if true.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.Timeline'-->
<xsd:complexType name="_TimelineType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="content" minOccurs="0">
<xsd:annotation>
<xsd:documentation>List of Timeline Items.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:TimelineItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="filterList" minOccurs="0">
<xsd:annotation>
<xsd:documentation>sap.suite.ui.commons/TimelineFilterListItem</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:TimelineFilterListItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="suggestionItems" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Items for suggestions</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n1:StandardListItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="customFilter" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Provide Custom Filter here</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="data" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Data for Timeline Control..</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="sortOldestFirst" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Whether the oldest item will be displayed first.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="axisOrientation" type="n3:_TimelineAxisOrientationType">
<xsd:annotation>
<xsd:documentation>Timeline axis orientation.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="alignment" type="n3:_TimelineAlignmentType">
<xsd:annotation>
<xsd:documentation>Timeline item alignment. </xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showIcons" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Show icon on each Timeline item.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="noDataText" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This text is displayed when the control has no data.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="width" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>Sets the width of the Timeline.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="enableBusyIndicator" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>When this property is set to "true", Timeline will display a busy indicator when data is being loaded.This BusyIndicator blocks the interaction with the items until data loading is finished.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showHeaderBar" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Show header tool bar</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="growing" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Sets the growing(paging) feature of control. This feature only works with model binding for aggregation "content". </xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="growingThreshold" type="xsd:int">
<xsd:annotation>
<xsd:documentation>Number of items requested from the server. To activate this you should set "growing" property to "true".</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="enableBackendFilter" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>This flag enables to get data from backend instead of deriving filter values from front-end values(displayed list).</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="enableAllInFilterItem" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>This flag enables to add 'All' in the begining of filter list</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="enableSocial" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>enable Jam Integration</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showSuggestion" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If this is set to true, suggest event is fired when user types in the input. Changing the suggestItems aggregation in suggest event listener will show suggestions within a popup. </xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="enableScroll" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Enable scroll bar display</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="forceGrowing" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to true, the "More" button will always show.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="sort" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Allow only latest first sort when Sort is checked, otherwise display order in which data is received.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showFilterBar" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Set timeline filterbar visibility</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showSearch" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Set timeline search field visibility</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="group" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Set if timeline items need to be grouped by year</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="groupBy" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Set timeline group by field - Supports Date field only </xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="enableDoubleSided" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to true, timeline items will render on both sides</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="filterSelectionChange" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event is getting triggered after selecting an item from filter list.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="select" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Select Timeline Item</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="addPost" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Event fire when user  add a new post</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="suggest" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event is fired when user types in the input and showSuggestion is set to true. Changing the suggestItems aggregation will show the suggestions within a popup.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="suggestionItemSelected" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event is fired when suggestionItem shown in suggestion popup are selected. This event is only fired when showSuggestion is set to true and there are suggestionItems shown in the suggestion popup.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="grow" type="xsd:string">
<xsd:annotation>
<xsd:documentation>this event is fired when "More" button is clicked. </xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="filterOpen" type="xsd:string">
<xsd:annotation>
<xsd:documentation>event is fired when filter icon is clicked and filter open</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.TimelineFilterListItem'-->
<xsd:complexType name="_TimelineFilterListItemType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:attribute name="key" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Can be used as input for subsequent actions.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="text" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The text to be displayed for the item.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.TimelineItem'-->
<xsd:complexType name="_TimelineItemType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="embeddedControl" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Embed other control in timeline item, such as a button or a check box, etc.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="replyList" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Reply list related to the post</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n1:List"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="customAction" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Custom actions to display as links on the social bar</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:CustomData"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="suggestionItems" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Items for suggestions</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n1:StandardListItem"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="customReply" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Customer reply for embedded reply action</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="dateTime" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Datetime value of Timeline item</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="userName" type="xsd:string">
<xsd:annotation>
<xsd:documentation>User name shown in the title</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="title" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Text shown in the title after user name</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="text" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Text shown inside the item</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="icon" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Icon for this item</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="filterValue" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Text for filter value</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="userNameClickable" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Make user name as a clickable to raise userNameClicked event</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="userPicture" type="n0:_URIType">
<xsd:annotation>
<xsd:documentation>User Picture</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="replyCount" type="xsd:int">
<xsd:annotation>
<xsd:documentation>count of the replies to the post</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="maxCharacters" type="xsd:int">
<xsd:annotation>
<xsd:documentation>The expand and collapse feature is set by default and uses 300 characters on mobile devices and 500 characters on desktops as limits. Based on these values, the text of the timeline utem is collapsed once text reaches these limits. In this case, only the specified number of characters is displayed. By clicking on the text link More, the entire text can be displayed. The text link Less collapses the text. The application is able to set the value to its needs. </xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="iconTooltip" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Icon Tooltip for Item</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="userNameClicked" type="xsd:string">
<xsd:annotation>
<xsd:documentation>Fire when user name in the item header is clicked</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="replyPost" type="xsd:string">
<xsd:annotation>
<xsd:documentation>fire when Reply button is clicked</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="replyListOpen" type="xsd:string">
<xsd:annotation>
<xsd:documentation>fire when the reply link is clicked to open reply popover</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="customActionClicked" type="xsd:string">
<xsd:annotation>
<xsd:documentation>fire when custom action link is clicked</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="suggest" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event is fired when user types in the input and showSuggestion is set to true. Changing the suggestItems aggregation will show the suggestions within a popup.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="suggestionItemSelected" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event is fired when suggestionItem shown in suggestion popup are selected. This event is only fired when showSuggestion is set to true and there are suggestionItems shown in the suggestion popup.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.UnifiedThingGroup'-->
<xsd:complexType name="_UnifiedThingGroupType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="content" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The content of the group.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="title" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The title of the group.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="description" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The description of the group.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="design" type="n3:_ThingGroupDesignType">
<xsd:annotation>
<xsd:documentation>Defines how the control is rendered.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.UnifiedThingInspector'-->
<xsd:complexType name="_UnifiedThingInspectorType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="facets" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The list of the sap.suite.ui.commons.FacetOverview objects.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:FacetOverview"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="facetContent" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The content that appears on the detail page of the UnifiedThingInspector.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="kpis" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A set of the KPI tiles to be shown in the header. Currently only 3 tiles from the list are displayed on the desktop and tablet. On the phone, all tiles are displayed in a swipeable container.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:KpiTile"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="transactions" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Menu items for transaction popup.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="actions" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Action sheet controls.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n1:Button"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="pages" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Contains pages except for Master and Detail.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="height" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The height of the control.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="title" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The title of the thing.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="name" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The name of the thing.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="description" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The description of the thing.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="icon" type="n0:_URIType">
<xsd:annotation>
<xsd:documentation>The icon to be displayed as a graphical element within the header. This can be an image or an icon from the icon font.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="transactionsVisible" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to true, the Transaction button appears.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="actionsVisible" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to true, the Actions button appears.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="destroyPageOnBack" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to true, destroys a page when the user chooses the Back button to leave this page.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="configurationVisible" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>If set to true, the Configuration button appears.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="backAction" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the user chooses the Back button.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="transactionsButtonPress" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the user chooses the Transactions button.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="actionsButtonPress" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the user chooses the Actions button.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="configurationButtonPress" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when the user chooses the Configuration button.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="navigate" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when navigation between two pages has been triggered. The transition (if any) to the new page has not started yet.
This event can be aborted by the application with preventDefault(), which means that there will be no navigation.
This event is propogated from the inner NavContainer. The event can also return internal Master and Detail pages.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="afterNavigate" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The event is fired when navigation between two pages has completed. In case of animated transitions this event is fired with some delay after the "navigate" event.
This event is propogated from the inner NavContainer. The event can also return internal Master and Detail pages.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.VerticalNavigationBar'-->
<xsd:complexType name="_VerticalNavigationBarType">
<xsd:complexContent>
<xsd:extension base=":_NavigationBarType"/>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.suite.ui.commons.ViewRepeater'-->
<xsd:complexType name="_ViewRepeaterType">
<xsd:complexContent>
<xsd:extension base=":_RowRepeaterType">
<xsd:sequence>
<xsd:element name="views" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The list of views for the data representation.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n3:RepeaterViewConfiguration"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="itemMinWidth" type="xsd:int">
<xsd:annotation>
<xsd:documentation>The minimal width of the tile for the current view. Only applicable if "responsive" property is set to true.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="responsive" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>This parameter indicates whether the content is shown in rows or tiles. If false, the content is shown in rows just like in core sap.ui.commons.RowRepeater. If true, the content is shown in tiles (similar to sap.ui.ux3.DataSet control) that have minimal width defined by the "itemMinWidth" property. The number of columns depends on the parent control's width. If you resize the control, the number of columns may change respectively so that the content tiles can fill the entire space of a row.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="defaultViewIndex" type="xsd:int">
<xsd:annotation>
<xsd:documentation>The index of the default view starting from 0. The view is selected on the initial rendering of the control. If the index is greater than the total quantity of the views, the last view is selected.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showSearchField" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Indicates if the search field panel is shown.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showViews" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Indicates if the view selector panel is shown.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="external" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Indicates if the external representation of the current view is rendered.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="itemHeight" type="xsd:int">
<xsd:annotation>
<xsd:documentation>The height of the tile in the current view in pixels. Only applicable if the responsive property is set to true. This value is used for calculating the number of tile rows.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="height" type="n0:_CSSSizeType">
<xsd:annotation>
<xsd:documentation>The height of the control. Only applicable if the responsive property is set to true.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="externalRepresentation" type="xsd:string">
<xsd:annotation>
<xsd:documentation>The control to be rendered instead of the repeater's own content.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="search" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event is fired when the user performs a search.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="changeView" type="xsd:string">
<xsd:annotation>
<xsd:documentation>This event is fired when a user switches between views.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<xsd:simpleType name="_BulletChartModeType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Actual">
<xsd:annotation>
<xsd:documentation>Displays the Actual value.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Delta">
<xsd:annotation>
<xsd:documentation>Displays delta between the Actual and Threshold values.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_CommonBackgroundType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Lightest">
<xsd:annotation>
<xsd:documentation>The lightest background color.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="ExtraLight">
<xsd:annotation>
<xsd:documentation>Extra light background color.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Light">
<xsd:annotation>
<xsd:documentation>Light background color.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="MediumLight">
<xsd:annotation>
<xsd:documentation>Medium light background color.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Medium">
<xsd:annotation>
<xsd:documentation>Medium background color.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Dark">
<xsd:annotation>
<xsd:documentation>Dark background color.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="ExtraDark">
<xsd:annotation>
<xsd:documentation>Extra dark background color.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Darkest">
<xsd:annotation>
<xsd:documentation>The darkest background color.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_ComparisonChartViewType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Normal">
<xsd:annotation>
<xsd:documentation>Titles and values are displayed above the bars.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Wide">
<xsd:annotation>
<xsd:documentation>Titles and values are displayed in the same line with the bars.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_DeviationIndicatorType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Up">
<xsd:annotation>
<xsd:documentation>The actual value is more than the target value.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Down">
<xsd:annotation>
<xsd:documentation>The actual value is less than the target value.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="None">
<xsd:annotation>
<xsd:documentation>No value.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_FacetOverviewHeightType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="XS">
<xsd:annotation>
<xsd:documentation>Extra small height</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="S">
<xsd:annotation>
<xsd:documentation>Small height</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="M">
<xsd:annotation>
<xsd:documentation>Medium height</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="L">
<xsd:annotation>
<xsd:documentation>Large height</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="XL">
<xsd:annotation>
<xsd:documentation>Extra Large height</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="XXL">
<xsd:annotation>
<xsd:documentation>Extra extra large height</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Auto">
<xsd:annotation>
<xsd:documentation>Content based height</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="None">
<xsd:annotation>
<xsd:documentation>No value. The height of the control is defined by depricated height property.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_FrameTypeType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="OneByOne">
<xsd:annotation>
<xsd:documentation>The 1x1 frame type.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="TwoByOne">
<xsd:annotation>
<xsd:documentation>The 2x1 frame type.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="TwoThirds">
<xsd:annotation>
<xsd:documentation>The 2/3 frame type.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Auto">
<xsd:annotation>
<xsd:documentation>The Auto frame type that adjusts the size of the control to the content.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_HeaderContainerViewType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Horizontal">
<xsd:annotation>
<xsd:documentation>The horizontal orientation of the control.
			</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Vertical">
<xsd:annotation>
<xsd:documentation>The vertical orientation of the control.
			</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_InfoTileSizeType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="XS">
<xsd:annotation>
<xsd:documentation>Extra small size.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="S">
<xsd:annotation>
<xsd:documentation>Small size.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="M">
<xsd:annotation>
<xsd:documentation>Medium size.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="L">
<xsd:annotation>
<xsd:documentation>Large size.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Auto">
<xsd:annotation>
<xsd:documentation>The size of the tile depends on the device it is running on. It is large on desktop, medium on tablet and small on phone.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_InfoTileTextColorType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Positive">
<xsd:annotation>
<xsd:documentation>Positive InfoTile text color.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Critical">
<xsd:annotation>
<xsd:documentation>Critical InfoTile text color.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Negative">
<xsd:annotation>
<xsd:documentation>Negative InfoTile text color.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_InfoTileValueColorType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Neutral">
<xsd:annotation>
<xsd:documentation>Neutral InfoTile value color.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Good">
<xsd:annotation>
<xsd:documentation>Good InfoTile value color.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Critical">
<xsd:annotation>
<xsd:documentation>Critical InfoTile value color.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Error">
<xsd:annotation>
<xsd:documentation>Error InfoTile value color.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_LoadStateType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Loading">
<xsd:annotation>
<xsd:documentation>LoadableView is loading the control.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Loaded">
<xsd:annotation>
<xsd:documentation>LoadableView has loaded the control.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Failed">
<xsd:annotation>
<xsd:documentation>LoadableView failed to load the control.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Disabled">
<xsd:annotation>
<xsd:documentation>LoadableView disabled to load the control.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_MicroAreaChartViewType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Normal">
<xsd:annotation>
<xsd:documentation>The view with labels on the top and bottom.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Wide">
<xsd:annotation>
<xsd:documentation>The view with labels on the left and right.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_ProcessFlowConnectionLabelStateType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Neutral">
<xsd:annotation>
<xsd:documentation>Neutral connection label.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Positive">
<xsd:annotation>
<xsd:documentation>Positive connection label.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Critical">
<xsd:annotation>
<xsd:documentation>Critical connection label.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Negative">
<xsd:annotation>
<xsd:documentation>Negative connection label.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_ProcessFlowConnectionStateType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Highlighted">
<xsd:annotation>
<xsd:documentation>Highlighted connection.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Dimmed">
<xsd:annotation>
<xsd:documentation>Dimmed connection.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Regular">
<xsd:annotation>
<xsd:documentation>Regular connection.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Selected">
<xsd:annotation>
<xsd:documentation>Selected connection.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_ProcessFlowConnectionTypeType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Planned">
<xsd:annotation>
<xsd:documentation>Planned connection.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Normal">
<xsd:annotation>
<xsd:documentation>Normal connection.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_ProcessFlowDisplayStateType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Regular">
<xsd:annotation>
<xsd:documentation>The control is in the regular display state</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="RegularFocused">
<xsd:annotation>
<xsd:documentation>The control is in the combination of regular and focused display state</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Highlighted">
<xsd:annotation>
<xsd:documentation>The control is in highlighted display state</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="HighlightedFocused">
<xsd:annotation>
<xsd:documentation>The control is in the combination of highlighted and focused display state</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Dimmed">
<xsd:annotation>
<xsd:documentation>The control is in the dimmed state</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="DimmedFocused">
<xsd:annotation>
<xsd:documentation>The control is in the combination of dimmed and focused display state</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Selected">
<xsd:annotation>
<xsd:documentation>The control is in the selected display state</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="SelectedHighlighted">
<xsd:annotation>
<xsd:documentation>The control is in the combination of selected and highlighted display state</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="SelectedHighlightedFocused">
<xsd:annotation>
<xsd:documentation>The control is in the combination of selected, highlighted and focused display state</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="SelectedFocused">
<xsd:annotation>
<xsd:documentation>The control is in the combination of selected and focused display state</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_ProcessFlowLaneStateType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="value">
<xsd:annotation>
<xsd:documentation>In the ‘state’ array , the total sum of all values needs to be 100%.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="state">
<xsd:annotation>
<xsd:documentation>The ‘state’ property is associated with the given value. The possible states are: positive, negative, neutral, and planned.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_ProcessFlowNodeStateType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Positive">
<xsd:annotation>
<xsd:documentation>Positive status for a created document: the document is done, finished, solved.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Negative">
<xsd:annotation>
<xsd:documentation>Negative status for a created document: with this document, an issue occurred.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Critical">
<xsd:annotation>
<xsd:documentation>Critical status for a created document: with this document, a critical issue occurred, for example, the business process can be interrupted.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Planned">
<xsd:annotation>
<xsd:documentation>Planned status for a document: the document is planned to be started.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Neutral">
<xsd:annotation>
<xsd:documentation>Neutral status for a created document: the document is in progress.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="PlannedNegative">
<xsd:annotation>
<xsd:documentation>Planned, but negative status for a document: the planned document has an issue but has not yet been started.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_ProcessFlowNodeTypeType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Single">
<xsd:annotation>
<xsd:documentation>Single node - one node is illustrated in a column.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Aggregated">
<xsd:annotation>
<xsd:documentation>Aggregated node - several nodes are illustrated as a stack of nodes in the same path and in one column.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_ProcessFlowZoomLevelType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="One">
<xsd:annotation>
<xsd:documentation>The full details with normal font size.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Two">
<xsd:annotation>
<xsd:documentation>The full detail view of the node but with smaller font size.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Three">
<xsd:annotation>
<xsd:documentation>The details are the icon, title text and no additional texts.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Four">
<xsd:annotation>
<xsd:documentation>Zoom level for least details - only icon is displayed.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_SelectionStateType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Selected">
<xsd:annotation>
<xsd:documentation>[Enter description for newValue]</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="NotSelected">
<xsd:annotation>
<xsd:documentation>[Enter description for newValue]</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Semantic">
<xsd:annotation>
<xsd:documentation>[Enter description for newValue]</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_ThingGroupDesignType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="ZeroIndent">
<xsd:annotation>
<xsd:documentation>In this design there is no indentation between header and content of the group.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="TopIndent">
<xsd:annotation>
<xsd:documentation>In this design there is indentation between header and content of the group.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_TimelineAlignmentType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Right">
<xsd:annotation>
<xsd:documentation>Right</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_TimelineAxisOrientationType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Vertical">
<xsd:annotation>
<xsd:documentation>Vertical Orientation</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Horizontal">
<xsd:annotation>
<xsd:documentation>Horizontal Orientation</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_TimelineItemPositionType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Top">
<xsd:annotation>
<xsd:documentation>[Enter description for newValue]</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Bottom">
<xsd:annotation>
<xsd:documentation>[Enter description for newValue]</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Middle">
<xsd:annotation>
<xsd:documentation>[Enter description for newValue]</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
<xsd:simpleType name="_ValueStatusType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="Good">
<xsd:annotation>
<xsd:documentation>Good value.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Neutral">
<xsd:annotation>
<xsd:documentation>Positive value.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Critical">
<xsd:annotation>
<xsd:documentation>Critical value.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="Bad">
<xsd:annotation>
<xsd:documentation>Bad value.</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:schema>
