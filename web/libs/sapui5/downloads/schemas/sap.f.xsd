<?xml version="1.0" encoding="UTF-8"?><xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="sap.f" xmlns:n1="sap.m" xmlns:n2="sap.f" xmlns:n0="sap.ui.core">
<xsd:import namespace="sap.m"/>
<xsd:import namespace="sap.ui.core"/>
<xsd:element name="DynamicPage" type="n2:_DynamicPageType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>&lt;strong&gt;&lt;i&gt;Overview&lt;/i&gt;&lt;/strong&gt;
&lt;br&gt;&lt;br&gt;
A {@link sap.f.DynamicPage} is a control that is used as a layout for an
application. It consists of a title, a header, content and a footer.
Additionally it offers dynamic behavior when scrolling, where part of the
header snaps to the title.
&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Notes:&lt;/strong&gt;
&lt;ul&gt;&lt;li&gt;If you're displaying a {@link sap.m.FlexBox FlexBox} control with
non-adaptive content (doesn't stretch to fill the available space), it is
recommended to set the &lt;code&gt;fitContainer&lt;/code&gt; property of the
{@link sap.m.FlexBox FlexBox} to &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If you are displaying a {@link sap.ui.table.Table}, keep in mind that it is
non-adaptive and may cause unpredicted behavior for the
{@link sap.f.DynamicPage DynamicPage} on smaller screen sizes, such as mobile.&lt;/li&gt;
&lt;/ul&gt;
&lt;strong&gt;&lt;i&gt;Structure&lt;/i&gt;&lt;/strong&gt;
&lt;br&gt;&lt;br&gt;
The control consist of several components -
{@link sap.f.DynamicPageTitle DynamicPageTitle},
{@link sap.f.DynamicPageHeader DynamicPageHeader}, a content area, and a footer:
&lt;ul&gt;&lt;li&gt;{@link sap.f.DynamicPageTitle DynamicPageTitle} - consists of a heading
on the left side, content in the middle, and actions on the right. The displayed
content changes based on the current mode of the {@link sap.f.DynamicPageHeader
DynamicPageHeader}.&lt;/li&gt;
&lt;li&gt;{@link sap.f.DynamicPageHeader DynamicPageHeader} - a generic container, which
can contain a single layout control and does not care about the content alignment
and responsiveness. The header works in two modes - expanded and snapped and its
behavior can be adjusted with the help of different properties.&lt;/li&gt;
&lt;li&gt;Content area - a generic container, which can have a single UI5 layout control
and does not care about the content alignment and responsiveness.&lt;/li&gt;
&lt;li&gt;Footer - positioned at the bottom with a small offset and used for additional
actions, the footer floats above the content. It can be any {@link sap.m.IBar}
control.&lt;/li&gt;
&lt;/ul&gt;
&lt;strong&gt;&lt;i&gt;Usage&lt;/i&gt;&lt;/strong&gt;
&lt;br&gt;&lt;br&gt;
Use the {@link sap.f.DynamicPage DynamicPage} if you need to have a title, that is
always visible and a header, that has configurable Expanding/Snapping functionality.
If you don't need the Expanding/Snapping functionality it is better to use the
{@link sap.m.Page} as a lighter control.
&lt;br&gt;&lt;br&gt;
&lt;strong&gt;&lt;i&gt;Responsive Behavior&lt;/i&gt;&lt;/strong&gt;
&lt;br&gt;&lt;br&gt;
The responsive behavior of the {@link sap.f.DynamicPage DynamicPage} depends on the
behavior of the content that is displayed.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="DynamicPageHeader" type="n2:_DynamicPageHeaderType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>&lt;strong&gt;&lt;i&gt;Overview&lt;/i&gt;&lt;/strong&gt;
&lt;br&gt;&lt;br&gt;
The {@link sap.f.DynamicPageHeader DynamicPageHeader} control is part
of the {@link sap.f.DynamicPage} family and is used to serve as header
of the {@link sap.f.DynamicPage DynamicPage}.
&lt;br&gt;&lt;br&gt;
&lt;strong&gt;&lt;i&gt;Usage&lt;/i&gt;&lt;/strong&gt;
&lt;br&gt;&lt;br&gt;
The {@link sap.f.DynamicPageHeader DynamicPageHeader} can hold any
layout control and has two states - expanded and collapsed (snapped).
The switching between these states happens when:
&lt;ul&gt;
&lt;li&gt;the user scrolls below its bottom margin&lt;/li&gt;
&lt;li&gt;the user clicks on the
{@link sap.f.DynamicPageTitle DynamicPageTitle}&lt;/li&gt;
&lt;li&gt;through the {@link sap.f.DynamicPage DynamicPage}
property &lt;code&gt;headerExpanded&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;strong&gt;&lt;i&gt;Responsive Behavior&lt;/i&gt;&lt;/strong&gt;
&lt;br&gt;&lt;br&gt;
The responsive behavior of the
{@link sap.f.DynamicPageHeader DynamicPageHeader} depends on the
behavior of the content that is displayed.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="DynamicPageTitle" type="n2:_DynamicPageTitleType" substitutionGroup="n0:Control">
<xsd:annotation>
<xsd:documentation>&lt;strong&gt;&lt;i&gt;Overview&lt;/i&gt;&lt;/strong&gt;
&lt;br&gt;&lt;br&gt;
The {@link sap.f.DynamicPageTitle DynamicPageTitle} control is part of
the {@link sap.f.DynamicPage} family and is used to serve as title of
the {@link sap.f.DynamicPage DynamicPage}.
&lt;br&gt;&lt;br&gt;
&lt;strong&gt;&lt;i&gt;Usage&lt;/i&gt;&lt;/strong&gt;
&lt;br&gt;&lt;br&gt;
The {@link sap.f.DynamicPageTitle DynamicPageTitle} can hold any
control and displays the most important information regarding the
object that will always remain visible while scrolling.
&lt;br&gt;&lt;br&gt;
&lt;b&gt;Note:&lt;/b&gt; The &lt;code&gt;actions&lt;/code&gt; aggregation accepts any UI5 control, but it`s recommended to use controls,
suitable for {@link sap.m.Toolbar} and {@link sap.m.OverflowToolbar}.
&lt;br&gt;&lt;br&gt;
If the &lt;code&gt;toggleHeaderOnTitleClick&lt;/code&gt; property of the
{@link sap.f.DynamicPage DynamicPage} is set to &lt;code&gt;true&lt;/code&gt;, the user can
switch between the expanded/collapsed states of the
{@link sap.f.DynamicPageHeader DynamicPageHeader} by clicking on the
&lt;code&gt;DynamicPageTitle&lt;/code&gt;. If set to &lt;code&gt;false&lt;/code&gt;, the
&lt;code&gt;DynamicPageTitle&lt;/code&gt; is not clickable and the application must provide
other means for expanding/collapsing the &lt;code&gt;DynamicPageHeader&lt;/code&gt;,
if necessary.
&lt;br&gt;&lt;br&gt;
&lt;strong&gt;&lt;i&gt;Responsive Behavior&lt;/i&gt;&lt;/strong&gt;
&lt;br&gt;&lt;br&gt;
The responsive behavior of the
{@link sap.f.DynamicPageTitle DynamicPageTitle} depends on the
behavior of the content that is displayed.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<!--type definition for UIElement 'sap.f.DynamicPage'-->
<xsd:complexType name="_DynamicPageType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="title" minOccurs="0">
<xsd:annotation>
<xsd:documentation>&lt;code&gt;DynamicPage&lt;/code&gt; title.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n2:DynamicPageTitle"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="header" minOccurs="0">
<xsd:annotation>
<xsd:documentation>&lt;code&gt;DynamicPage&lt;/code&gt; header.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n2:DynamicPageHeader"/>
<xsd:element ref="n0:Fragment"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="content" minOccurs="0">
<xsd:annotation>
<xsd:documentation>&lt;code&gt;DynamicPage&lt;/code&gt; content.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="footer" minOccurs="0">
<xsd:annotation>
<xsd:documentation>&lt;code&gt;DynamicPage&lt;/code&gt; floating footer.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="preserveHeaderStateOnScroll" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Preserves the current header state when scrolling.
For example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.
&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; Based on internal rules, the value of the property is not always taken into account - for example,
when the control is rendered on tablet or mobile and the control`s title and header
are with height larger than the given threshold.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="headerExpanded" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the header is expanded.
&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; Based on internal rules, the value of the property is not always taken into account - for example
when the expanded header is larger than the available screen area. For those cases a warning is logged.
The header can be also expanded/collapsed by user interaction, which requires the property to be
internally mutated by the control to reflect the changed state.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="toggleHeaderOnTitleClick" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the the user can switch between the expanded/collapsed states of the
&lt;code&gt;DynamicPageHeader&lt;/code&gt; by clicking on the &lt;code&gt;DynamicPageTitle&lt;/code&gt;. If set to
&lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;DynamicPageTitle&lt;/code&gt; is not clickable and the application
must provide other means for expanding/collapsing the &lt;code&gt;DynamicPageHeader&lt;/code&gt;, if necessary.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
<xsd:attribute name="showFooter" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the footer is visible.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.DynamicPageHeader'-->
<xsd:complexType name="_DynamicPageHeaderType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="content" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The content of the header.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="pinnable" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation>Determines whether the header is pinnable.</xsd:documentation>
</xsd:annotation>
</xsd:attribute>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<!--type definition for UIElement 'sap.f.DynamicPageTitle'-->
<xsd:complexType name="_DynamicPageTitleType">
<xsd:complexContent>
<xsd:extension base="n0:_ControlType">
<xsd:sequence>
<xsd:element name="heading" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The title or any other UI5 control that serves as a heading for the object.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="actions" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The &lt;code&gt;DynamicPageTitle&lt;/code&gt; actions.
&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; The &lt;code&gt;actions&lt;/code&gt; aggregation accepts any UI5 control, but it`s recommended to use controls,
suitable for {@link sap.m.Toolbar} and {@link sap.m.OverflowToolbar}.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="snappedContent" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The content that is displayed in the &lt;code&gt;DynamicPageTitle&lt;/code&gt; in collapsed (snapped) state.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
<xsd:element name="expandedContent" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The content that is displayed in the &lt;code&gt;DynamicPageTitle&lt;/code&gt; in expanded state.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:choice minOccurs="0" maxOccurs="unbounded">
<xsd:element ref="n0:Control"/>
<xsd:element ref="n0:Fragment"/>
<xsd:any processContents="lax" namespace="http://www.w3.org/1999/xhtml"/>
</xsd:choice>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
</xsd:extension>
</xsd:complexContent>
</xsd:complexType>
<xsd:simpleType name="_ThreeColumnLayoutTypeType">
<xsd:restriction base="xsd:string">
<xsd:enumeration value="EndColumnEmphasized">
<xsd:annotation>
<xsd:documentation>Emphasized last column (endColumn) - column layout 25/25/50</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
<xsd:enumeration value="MidColumnEmphasized">
<xsd:annotation>
<xsd:documentation>Emphasized middle column (midColumn) - column layout 25/50/25</xsd:documentation>
</xsd:annotation>
</xsd:enumeration>
</xsd:restriction>
</xsd:simpleType>
</xsd:schema>
