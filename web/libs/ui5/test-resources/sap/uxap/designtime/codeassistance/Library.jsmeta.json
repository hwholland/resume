{"!define":{"sap.uxap.HierarchicalSelect":{"!description":"A select that displays items on a hierarchy of 2 levels.\n\nIf a provided item has a custom data named <code>secondLevel<\/code>, then it will be displayed as a second level, otherwise it would be displayed as a first level.","extend":{"!description":"Creates a new subclass of class sap.uxap.HierarchicalSelect with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Select.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getUpperCase":{"!description":"Gets current value of property {@link #getUpperCase upperCase}.\n\nDetermines whether the HierarchicalSelect items are displayed in upper case.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!category":"class","!constructorDescription":"Constructor for a new <code>HierarchicalSelect<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getUpperCase upperCase} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Select#constructor sap.m.Select}\ncan be used as well.","!module":"sap/uxap/HierarchicalSelect","setUpperCase":{"!description":"Sets a new value for property {@link #getUpperCase upperCase}.\n\nDetermines whether the HierarchicalSelect items are displayed in upper case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bUpperCase: Boolean) -> sap.uxap.HierarchicalSelect","!category":"function","parameters":{"bUpperCase":"type: boolean, description: New value for property <code>upperCase<\/code>"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.uxap.HierarchicalSelect.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.m.Select","!helpDescription":"A select that displays items on a hierarchy of 2 levels.\n\nIf a provided item has a custom data named <code>secondLevel<\/code>, then it will be displayed as a second level, otherwise it would be displayed as a first level."},"sap.uxap.IHeaderContent":{"!description":"Interface for controls that are eligible for the <code>headerContent<\/code> aggregation of the <code>{@link sap.uxap.ObjectPageLayout}<\/code>.\n\nControls that implement this interface: <ul> <li><code>{@link sap.uxap.ObjectPageHeaderContent}<\/code> - <code>ObjectPageLayout<\/code>'s classic header content<\/code><\/li> <li><code>{@link sap.uxap.ObjectPageDynamicHeaderContent}<\/code> - <code>ObjectPageLayout<\/code>'s dynamic header content<\/code><\/li> <\/ul>\n\nFor more information on the types of header available for the <code>{@link sap.uxap.ObjectPageLayout ObjectPageLayout}<\/code>, see {@link topic:d2ef0099542d44dc868719d908e576d0 Object Page Headers}.\n\nFor details regarding the differences and similarities between the available headers, see {@link topic:9c9d94fd28284539a9a5a57e9caf82a8 Object Page Headers Comparison}.","!category":"static class","!module":"sap/uxap/library"},"sap.uxap.ObjectPageSubSection":{"destroyMoreBlocks":{"!description":"Destroys all the moreBlocks in the aggregation {@link #getMoreBlocks moreBlocks}.","!type":"fn() -> sap.uxap.ObjectPageSubSection","!category":"function","!static":false},"!module":"sap/uxap/ObjectPageSubSection","removeAllActions":{"!description":"Removes all the controls from the aggregation {@link #getActions actions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"!category":"class","indexOfMoreBlock":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getMoreBlocks moreBlocks}. and returns its index if found or -1 otherwise.","!type":"fn(oMoreBlock: sap.ui.core.Control) -> Number","!category":"function","parameters":{"oMoreBlock":"type: sap.ui.core.Control, description: The moreBlock whose index is looked for"},"!static":false},"removeBlock":{"!description":"Removes a block from the aggregation {@link #getBlocks blocks}.","!type":"fn(vBlock: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","parameters":{"vBlock":"type: int|string|sap.ui.core.Control, description: The block to remove or its index or id"},"!static":false},"indexOfAction":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getActions actions}. and returns its index if found or -1 otherwise.","!type":"fn(oAction: sap.ui.core.Control) -> Number","!category":"function","parameters":{"oAction":"type: sap.ui.core.Control, description: The action whose index is looked for"},"!static":false},"destroyBlocks":{"!description":"Destroys all the blocks in the aggregation {@link #getBlocks blocks}.","!type":"fn() -> sap.uxap.ObjectPageSubSection","!category":"function","!static":false},"removeAllBlocks":{"!description":"Removes all the controls from the aggregation {@link #getBlocks blocks}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"indexOfBlock":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getBlocks blocks}. and returns its index if found or -1 otherwise.","!type":"fn(oBlock: sap.ui.core.Control) -> Number","!category":"function","parameters":{"oBlock":"type: sap.ui.core.Control, description: The block whose index is looked for"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageSubSection with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.uxap.ObjectPageSectionBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getMoreBlocks":{"!description":"Gets content of aggregation {@link #getMoreBlocks moreBlocks}.\n\nAdditional controls to display when the Show more / See all / (...) button is pressed","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getActions":{"!description":"Gets content of aggregation {@link #getActions actions}.\n\nActions available for this Subsection","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getBlocks":{"!description":"Gets content of aggregation {@link #getBlocks blocks}.\n\nControls to be displayed in the subsection","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"setMode":{"!description":"Sets a new value for property {@link #getMode mode}.\n\nA mode property that will be passed to the controls in the blocks and moreBlocks aggregations. Only relevant if these aggregations use Object page blocks.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Collapsed<\/code>.","!type":"fn(sMode: sap.uxap.ObjectPageSubSectionMode) -> sap.uxap.ObjectPageSubSection","!category":"function","parameters":{"sMode":"type: sap.uxap.ObjectPageSubSectionMode, description: New value for property <code>mode<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new <code>ObjectPageSubSection<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMode mode} : sap.uxap.ObjectPageSubSectionMode (default: Collapsed)<\/li>\n<li>{@link #getTitleUppercase titleUppercase} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getBlocks blocks} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getMoreBlocks moreBlocks} : sap.ui.core.Control[]<\/li>\n<li>{@link #getActions actions} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.uxap.ObjectPageSectionBase#constructor sap.uxap.ObjectPageSectionBase}\ncan be used as well.","insertAction":{"!description":"Inserts a action into the aggregation {@link #getActions actions}.","!type":"fn(oAction: sap.ui.core.Control, iIndex: Number) -> sap.uxap.ObjectPageSubSection","!category":"function","parameters":{"oAction":"type: sap.ui.core.Control, description: The action to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the action should be inserted at; for a negative value of <code>iIndex<\/code>, the action is inserted at position 0; for a value greater than the current size of the aggregation, the action is inserted at the last position"},"!static":false},"getTitleUppercase":{"!description":"Gets current value of property {@link #getTitleUppercase titleUppercase}.\n\nDetermines whether the Subsection title is displayed in upper case.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setTitleUppercase":{"!description":"Sets a new value for property {@link #getTitleUppercase titleUppercase}.\n\nDetermines whether the Subsection title is displayed in upper case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bTitleUppercase: Boolean) -> sap.uxap.ObjectPageSubSection","!category":"function","parameters":{"bTitleUppercase":"type: boolean, description: New value for property <code>titleUppercase<\/code>"},"!static":false},"removeMoreBlock":{"!description":"Removes a moreBlock from the aggregation {@link #getMoreBlocks moreBlocks}.","!type":"fn(vMoreBlock: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","parameters":{"vMoreBlock":"type: int|string|sap.ui.core.Control, description: The moreBlock to remove or its index or id"},"!static":false},"!description":"Second-level information container of an {@link sap.uxap.ObjectPageLayout}.\n\nAn <code>ObjectPageSubSection<\/code> may only be used within sections in the <code>ObjectPageLayout<\/code>. Subsections are used to display primary information in the <code>blocks<\/code> aggregation (always visible) and not-so-important information in the <code>moreBlocks<\/code> aggregation. The content in the <code>moreBlocks<\/code> aggregation is initially hidden, but may be accessed with a \"See more\" (...) button.\n\n<b>Note:<\/b> This control is intended to be used only as part of the <code>ObjectPageLayout<\/code>.","destroyActions":{"!description":"Destroys all the actions in the aggregation {@link #getActions actions}.","!type":"fn() -> sap.uxap.ObjectPageSubSection","!category":"function","!static":false},"removeAllMoreBlocks":{"!description":"Removes all the controls from the aggregation {@link #getMoreBlocks moreBlocks}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"addBlock":{"!description":"Adds some block to the aggregation {@link #getBlocks blocks}.","!type":"fn(oBlock: sap.ui.core.Control) -> sap.uxap.ObjectPageSubSection","!category":"function","parameters":{"oBlock":"type: sap.ui.core.Control, description: The block to add; if empty, nothing is inserted"},"!static":false},"addMoreBlock":{"!description":"Adds some moreBlock to the aggregation {@link #getMoreBlocks moreBlocks}.","!type":"fn(oMoreBlock: sap.ui.core.Control) -> sap.uxap.ObjectPageSubSection","!category":"function","parameters":{"oMoreBlock":"type: sap.ui.core.Control, description: The moreBlock to add; if empty, nothing is inserted"},"!static":false},"getMode":{"!description":"Gets current value of property {@link #getMode mode}.\n\nA mode property that will be passed to the controls in the blocks and moreBlocks aggregations. Only relevant if these aggregations use Object page blocks.\n\nDefault value is <code>Collapsed<\/code>.","!type":"fn() -> sap.uxap.ObjectPageSubSectionMode","!category":"function","!static":false},"insertBlock":{"!description":"Adds an <code>sap.uxap.BlockBase<\/code> instance to the <code>blocks<\/code> aggregation.\n\n<b>Note:<\/b> The <code>insertBlock<\/code> method is not supported by design. If used, it works as an <code>addBlock<\/code>, adding a single block to the end of the <code>blocks<\/code> aggregation.","!type":"fn(oObject: sap.uxap.BlockBase, iIndex: Number) -> sap.uxap.ObjectPageSubSection","!category":"function","parameters":{"iIndex":"type: int, description: The insertion index","oObject":"type: sap.uxap.BlockBase, description: The <code>sap.uxap.BlockBase<\/code> instance"},"!static":false},"addAction":{"!description":"Adds some action to the aggregation {@link #getActions actions}.","!type":"fn(oAction: sap.ui.core.Control) -> sap.uxap.ObjectPageSubSection","!category":"function","parameters":{"oAction":"type: sap.ui.core.Control, description: The action to add; if empty, nothing is inserted"},"!static":false},"removeAction":{"!description":"Removes a action from the aggregation {@link #getActions actions}.","!type":"fn(vAction: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","parameters":{"vAction":"type: int|string|sap.ui.core.Control, description: The action to remove or its index or id"},"!static":false},"insertMoreBlock":{"!description":"Adds an <code>sap.uxap.BlockBase<\/code> instance to the <code>moreBlocks<\/code> aggregation.\n\n<b>Note:<\/b> The <code>insertMoreBlock<\/code> method is not supported by design. If used, it works as an <code>addMoreBlock<\/code>, adding a single block to the end of the <code>moreBlocks<\/code> aggregation.","!type":"fn(oObject: sap.uxap.BlockBase, iIndex: Number) -> sap.uxap.ObjectPageSubSection","!category":"function","parameters":{"iIndex":"type: int, description: The insertion index","oObject":"type: sap.uxap.BlockBase, description: The <code>sap.uxap.BlockBase<\/code> instance"},"!static":false},"!proto":"sap.uxap.ObjectPageSectionBase","!helpDescription":"Second-level information container of an {@link sap.uxap.ObjectPageLayout}.\n\nAn <code>ObjectPageSubSection<\/code> may only be used within sections in the <code>ObjectPageLayout<\/code>. Subsections are used to display primary information in the <code>blocks<\/code> aggregation (always visible) and not-so-important information in the <code>moreBlocks<\/code> aggregation. The content in the <code>moreBlocks<\/code> aggregation is initially hidden, but may be accessed with a \"See more\" (...) button.\n\n<b>Note:<\/b> This control is intended to be used only as part of the <code>ObjectPageLayout<\/code>.","getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageSubSection.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.uxap.ObjectPageLazyLoader_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageLazyLoader with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageLazyLoader"},"sap.uxap.AnchorBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.AnchorBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Toolbar.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.AnchorBar"},"sap.uxap.ObjectPageSection":{"getSelectedSubSection":{"!description":"ID of the element which is the current target of the association {@link #getSelectedSubSection selectedSubSection}, or <code>null<\/code>.","!type":"fn() -> sap.ui.core.ID","!category":"function","!static":false},"destroySubSections":{"!description":"Destroys all the subSections in the aggregation {@link #getSubSections subSections}.","!type":"fn() -> sap.uxap.ObjectPageSection","!category":"function","!static":false},"insertSubSection":{"!description":"Inserts a subSection into the aggregation {@link #getSubSections subSections}.","!type":"fn(oSubSection: sap.uxap.ObjectPageSubSection, iIndex: Number) -> sap.uxap.ObjectPageSection","!category":"function","parameters":{"oSubSection":"type: sap.uxap.ObjectPageSubSection, description: The subSection to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the subSection should be inserted at; for a negative value of <code>iIndex<\/code>, the subSection is inserted at position 0; for a value greater than the current size of the aggregation, the subSection is inserted at the last position"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageSection with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.uxap.ObjectPageSectionBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getSubSections":{"!description":"Gets content of aggregation {@link #getSubSections subSections}.\n\nThe list of Subsections.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"!constructorDescription":"Constructor for a new <code>ObjectPageSection<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowTitle showTitle} : boolean (default: true)<\/li>\n<li>{@link #getTitleUppercase titleUppercase} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSubSections subSections} : sap.uxap.ObjectPageSubSection[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedSubSection selectedSubSection} : (sap.ui.core.ID | sap.uxap.ObjectPageSubSection)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.uxap.ObjectPageSectionBase#constructor sap.uxap.ObjectPageSectionBase}\ncan be used as well.","!module":"sap/uxap/ObjectPageSection","setShowTitle":{"!description":"Sets a new value for property {@link #getShowTitle showTitle}.\n\nDetermines whether to display the Section title or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowTitle: Boolean) -> sap.uxap.ObjectPageSection","!category":"function","parameters":{"bShowTitle":"type: boolean, description: New value for property <code>showTitle<\/code>"},"!static":false},"getTitleUppercase":{"!description":"Gets current value of property {@link #getTitleUppercase titleUppercase}.\n\nDetermines whether the Section title is displayed in upper case.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"removeAllSubSections":{"!description":"Removes all the controls from the aggregation {@link #getSubSections subSections}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"setTitleUppercase":{"!description":"Sets a new value for property {@link #getTitleUppercase titleUppercase}.\n\nDetermines whether the Section title is displayed in upper case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bTitleUppercase: Boolean) -> sap.uxap.ObjectPageSection","!category":"function","parameters":{"bTitleUppercase":"type: boolean, description: New value for property <code>titleUppercase<\/code>"},"!static":false},"removeSubSection":{"!description":"Removes a subSection from the aggregation {@link #getSubSections subSections}.","!type":"fn(vSubSection: Number | String | sap.uxap.ObjectPageSubSection) -> sap.uxap.ObjectPageSubSection","!category":"function","parameters":{"vSubSection":"type: int|string|sap.uxap.ObjectPageSubSection, description: The subSection to remove or its index or id"},"!static":false},"!description":"Top-level information container of an {@link sap.uxap.ObjectPageLayout}.\n\nThe <code>ObjectPageSection<\/code>'s purpose is to aggregate subsections.\n\n<b>Note:<\/b> This control is intended to be used only as part of the <code>ObjectPageLayout<\/code>.","setSelectedSubSection":{"!description":"Sets the associated {@link #getSelectedSubSection selectedSubSection}.","!type":"fn(oSelectedSubSection: sap.ui.core.ID | sap.uxap.ObjectPageSubSection) -> sap.uxap.ObjectPageSection","!category":"function","parameters":{"oSelectedSubSection":"type: sap.ui.core.ID|sap.uxap.ObjectPageSubSection, description: ID of an element which becomes the new target of this selectedSubSection association; alternatively, an element instance may be given"},"!static":false},"!category":"class","getShowTitle":{"!description":"Gets current value of property {@link #getShowTitle showTitle}.\n\nDetermines whether to display the Section title or not.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"indexOfSubSection":{"!description":"Checks for the provided <code>sap.uxap.ObjectPageSubSection<\/code> in the aggregation {@link #getSubSections subSections}. and returns its index if found or -1 otherwise.","!type":"fn(oSubSection: sap.uxap.ObjectPageSubSection) -> Number","!category":"function","parameters":{"oSubSection":"type: sap.uxap.ObjectPageSubSection, description: The subSection whose index is looked for"},"!static":false},"addSubSection":{"!description":"Adds some subSection to the aggregation {@link #getSubSections subSections}.","!type":"fn(oSubSection: sap.uxap.ObjectPageSubSection) -> sap.uxap.ObjectPageSection","!category":"function","parameters":{"oSubSection":"type: sap.uxap.ObjectPageSubSection, description: The subSection to add; if empty, nothing is inserted"},"!static":false},"!helpDescription":"Top-level information container of an {@link sap.uxap.ObjectPageLayout}.\n\nThe <code>ObjectPageSection<\/code>'s purpose is to aggregate subsections.\n\n<b>Note:<\/b> This control is intended to be used only as part of the <code>ObjectPageLayout<\/code>.","!proto":"sap.uxap.ObjectPageSectionBase","getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageSection.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.uxap.ObjectPageSubSectionLayout":{"TitleOnLeft":{"!description":"Title and actions on the left, inside the block area.","!type":"String","!category":"enum"},"!description":"Used by the <code>ObjectPagSubSection<\/code> control to define which layout to apply.","!category":"static class","!module":"sap/uxap/library","TitleOnTop":{"!description":"Title and actions on top of the block area.","!type":"String","!category":"enum"}},"sap.uxap.ObjectPageDynamicHeaderContent_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageDynamicHeaderContent with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.DynamicPageHeader.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageDynamicHeaderContent"},"sap.uxap.ObjectPageHeaderContent_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageHeaderContent with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageHeaderContent"},"sap.uxap.ObjectPageHeaderLayoutData":{"setVisibleM":{"!description":"Sets a new value for property {@link #getVisibleM visibleM}.\n\nIf this property is set the control will be visible (or not) in a medium sized layout.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisibleM: Boolean) -> sap.uxap.ObjectPageHeaderLayoutData","!category":"function","parameters":{"bVisibleM":"type: boolean, description: New value for property <code>visibleM<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageHeaderLayoutData with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.LayoutData.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getShowSeparatorAfter":{"!description":"Gets current value of property {@link #getShowSeparatorAfter showSeparatorAfter}.\n\nIf this property is set the control will display a separator after it.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setVisibleL":{"!description":"Sets a new value for property {@link #getVisibleL visibleL}.\n\nIf this property is set the control will be visible (or not) in a large sized layout.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisibleL: Boolean) -> sap.uxap.ObjectPageHeaderLayoutData","!category":"function","parameters":{"bVisibleL":"type: boolean, description: New value for property <code>visibleL<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new <code>ObjectPageHeaderLayoutData<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisibleS visibleS} : boolean (default: true)<\/li>\n<li>{@link #getVisibleM visibleM} : boolean (default: true)<\/li>\n<li>{@link #getVisibleL visibleL} : boolean (default: true)<\/li>\n<li>{@link #getShowSeparatorBefore showSeparatorBefore} : boolean (default: false)<\/li>\n<li>{@link #getShowSeparatorAfter showSeparatorAfter} : boolean (default: false)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: auto)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.LayoutData#constructor sap.ui.core.LayoutData}\ncan be used as well.","!module":"sap/uxap/ObjectPageHeaderLayoutData","getVisibleL":{"!description":"Gets current value of property {@link #getVisibleL visibleL}.\n\nIf this property is set the control will be visible (or not) in a large sized layout.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getShowSeparatorBefore":{"!description":"Gets current value of property {@link #getShowSeparatorBefore showSeparatorBefore}.\n\nIf this property is set the control will display a separator before it.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getVisibleM":{"!description":"Gets current value of property {@link #getVisibleM visibleM}.\n\nIf this property is set the control will be visible (or not) in a medium sized layout.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"A {@link sap.ui.core.LayoutData} element that can be added to controls used in the <code>headerContent<\/code> aggregation of the <code>ObjectPageLayout<\/code>.\n\n<b>Note:<\/b> This element is only taken into account when the <code>sap.uxap.ObjectPageLayout<\/code> control is used together with <code>sap.uxap.ObjectPageHeader<\/code> as value of <code>headerTitle<\/code>.","setShowSeparatorAfter":{"!description":"Sets a new value for property {@link #getShowSeparatorAfter showSeparatorAfter}.\n\nIf this property is set the control will display a separator after it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowSeparatorAfter: Boolean) -> sap.uxap.ObjectPageHeaderLayoutData","!category":"function","parameters":{"bShowSeparatorAfter":"type: boolean, description: New value for property <code>showSeparatorAfter<\/code>"},"!static":false},"getVisibleS":{"!description":"Gets current value of property {@link #getVisibleS visibleS}.\n\nIf this property is set the control will be visible (or not) in a small sized layout.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nIf this property is set the control will take the provided size.\n\nDefault value is <code>auto<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setVisibleS":{"!description":"Sets a new value for property {@link #getVisibleS visibleS}.\n\nIf this property is set the control will be visible (or not) in a small sized layout.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisibleS: Boolean) -> sap.uxap.ObjectPageHeaderLayoutData","!category":"function","parameters":{"bVisibleS":"type: boolean, description: New value for property <code>visibleS<\/code>"},"!static":false},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nIf this property is set the control will take the provided size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>auto<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.uxap.ObjectPageHeaderLayoutData","!category":"function","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"},"!static":false},"setShowSeparatorBefore":{"!description":"Sets a new value for property {@link #getShowSeparatorBefore showSeparatorBefore}.\n\nIf this property is set the control will display a separator before it.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowSeparatorBefore: Boolean) -> sap.uxap.ObjectPageHeaderLayoutData","!category":"function","parameters":{"bShowSeparatorBefore":"type: boolean, description: New value for property <code>showSeparatorBefore<\/code>"},"!static":false},"!helpDescription":"A {@link sap.ui.core.LayoutData} element that can be added to controls used in the <code>headerContent<\/code> aggregation of the <code>ObjectPageLayout<\/code>.\n\n<b>Note:<\/b> This element is only taken into account when the <code>sap.uxap.ObjectPageLayout<\/code> control is used together with <code>sap.uxap.ObjectPageHeader<\/code> as value of <code>headerTitle<\/code>.","!proto":"sap.ui.core.LayoutData","getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageHeaderLayoutData.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.uxap.HierarchicalSelect_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.HierarchicalSelect with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Select.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.HierarchicalSelect"},"sap.uxap.BlockBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.BlockBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.BlockBase"},"sap.uxap.ObjectPageHeaderPictureShape":{"!description":"Used by the <code>ObjectPageHeader<\/code> control to define which shape to use for the image.","Square":{"!description":"Square shape for the images in the <code>ObjectPageHeader<\/code>.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/uxap/library","Circle":{"!description":"Circle shape for the images in the <code>ObjectPageHeader<\/code>.","!type":"String","!category":"enum"}},"sap.uxap.ObjectPageHeaderContent":{"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!type":"fn(oContent: sap.ui.core.Control) -> sap.uxap.ObjectPageHeaderContent","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"},"!static":false},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nThe list of Objects of type sap.ui.core.Control.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageHeaderContent with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"},"!static":false},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"},"!static":false},"!constructorDescription":"Constructor for a new <code>ObjectPageHeaderContent<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContentDesign contentDesign} : sap.uxap.ObjectPageHeaderDesign (default: Light)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/uxap/ObjectPageHeaderContent","destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!type":"fn() -> sap.uxap.ObjectPageHeaderContent","!category":"function","!static":false},"setContentDesign":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.1 undefined<br>Sets a new value for property {@link #getContentDesign contentDesign}.\n\nDetermines the design of the header - Light or Dark. <b>Note: <\/b>This property is deprecated. It will continue to work in the Blue Crystal theme, but it will not be taken into account for the Belize themes.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Light<\/code>.","!type":"fn(sContentDesign: sap.uxap.ObjectPageHeaderDesign) -> sap.uxap.ObjectPageHeaderContent","!category":"function","parameters":{"sContentDesign":"type: sap.uxap.ObjectPageHeaderDesign, description: New value for property <code>contentDesign<\/code>"},"!static":false},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.uxap.ObjectPageHeaderContent","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"},"!static":false},"!description":"Header content for the classic header of the {@link sap.uxap.ObjectPageLayout}.\n\n<h3>Overview<\/h3>\n\nThe <code>ObjectPageHeaderContent<\/code> represents the movable part of the <code>ObjectPageLayout<\/code>'s classic header. It can contain any control and scrolls along with the content of the page until it disappears (collapsed header). When scrolled back to the top it becomes visible again (expanded header). It contains all the additional information of the object.\n\nDocumentation links: <ul> <li>{@link topic:d2ef0099542d44dc868719d908e576d0 Object Page Headers}<\/li> <li>{@link topic:0fecbce45e39406aa939bd25e89823f4 Object Page Classic Header}<\/li> <\/ul>","!category":"class","!helpDescription":"Header content for the classic header of the {@link sap.uxap.ObjectPageLayout}.\n\n<h3>Overview<\/h3>\n\nThe <code>ObjectPageHeaderContent<\/code> represents the movable part of the <code>ObjectPageLayout<\/code>'s classic header. It can contain any control and scrolls along with the content of the page until it disappears (collapsed header). When scrolled back to the top it becomes visible again (expanded header). It contains all the additional information of the object.\n\nDocumentation links: <ul> <li>{@link topic:d2ef0099542d44dc868719d908e576d0 Object Page Headers}<\/li> <li>{@link topic:0fecbce45e39406aa939bd25e89823f4 Object Page Classic Header}<\/li> <\/ul>","!proto":"sap.ui.core.Control","getContentDesign":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.1 undefined<br>Gets current value of property {@link #getContentDesign contentDesign}.\n\nDetermines the design of the header - Light or Dark. <b>Note: <\/b>This property is deprecated. It will continue to work in the Blue Crystal theme, but it will not be taken into account for the Belize themes.\n\nDefault value is <code>Light<\/code>.","!type":"fn() -> sap.uxap.ObjectPageHeaderDesign","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageHeaderContent.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.uxap.ObjectPageSectionBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageSectionBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageSectionBase"},"sap.uxap.ObjectPageDynamicHeaderContent":{"!description":"Header content for the dynamic header of the {@link sap.uxap.ObjectPageLayout}.\n\n<h3>Overview<\/h3>\n\nThe <code>ObjectPageDynamicHeaderContent<\/code> represents the movable part of the <code>ObjectPageLayout<\/code>'s dynamic header. It can contain any control and scrolls along with the content of the page until it disappears (collapsed header). When scrolled back to the top it becomes visible again (expanded header). It contains all the additional information of the object.\n\nDocumentation links: <ul> <li>{@link topic:d2ef0099542d44dc868719d908e576d0 Object Page Headers}<\/li> <li>{@link topic:6e340c119ddd4c778b315f65a0432420 Object Page Dynamic Header}<\/li> <\/ul>","extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageDynamicHeaderContent with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.DynamicPageHeader.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new <code>ObjectPageDynamicHeaderContent<\/code>.","!module":"sap/uxap/ObjectPageDynamicHeaderContent","getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageDynamicHeaderContent.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.f.DynamicPageHeader","!helpDescription":"Header content for the dynamic header of the {@link sap.uxap.ObjectPageLayout}.\n\n<h3>Overview<\/h3>\n\nThe <code>ObjectPageDynamicHeaderContent<\/code> represents the movable part of the <code>ObjectPageLayout<\/code>'s dynamic header. It can contain any control and scrolls along with the content of the page until it disappears (collapsed header). When scrolled back to the top it becomes visible again (expanded header). It contains all the additional information of the object.\n\nDocumentation links: <ul> <li>{@link topic:d2ef0099542d44dc868719d908e576d0 Object Page Headers}<\/li> <li>{@link topic:6e340c119ddd4c778b315f65a0432420 Object Page Dynamic Header}<\/li> <\/ul>"},"sap.uxap.BlockBase":{"addMapping":{"!description":"Adds some mapping to the aggregation {@link #getMappings mappings}.","!type":"fn(oMapping: sap.uxap.ModelMapping) -> sap.uxap.BlockBase","!category":"function","parameters":{"oMapping":"type: sap.uxap.ModelMapping, description: The mapping to add; if empty, nothing is inserted"},"!static":false},"getColumnLayout":{"!description":"Gets current value of property {@link #getColumnLayout columnLayout}.\n\nDetermines on how many columns the layout will be rendered. Allowed values are integers from 1 to 4 and \"auto\".\n\nDefault value is <code>auto<\/code>.","!type":"fn() -> sap.uxap.BlockBaseColumnLayout","!category":"function","!static":false},"insertMapping":{"!description":"Inserts a mapping into the aggregation {@link #getMappings mappings}.","!type":"fn(oMapping: sap.uxap.ModelMapping, iIndex: Number) -> sap.uxap.BlockBase","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the mapping should be inserted at; for a negative value of <code>iIndex<\/code>, the mapping is inserted at position 0; for a value greater than the current size of the aggregation, the mapping is inserted at the last position","oMapping":"type: sap.uxap.ModelMapping, description: The mapping to insert; if empty, nothing is inserted"},"!static":false},"!module":"sap/uxap/BlockBase","setSelectedView":{"!description":"Sets the associated {@link #getSelectedView selectedView}.","!type":"fn(oSelectedView: sap.ui.core.ID | sap.ui.core.Control) -> sap.uxap.BlockBase","!category":"function","parameters":{"oSelectedView":"type: sap.ui.core.ID|sap.ui.core.Control, description: ID of an element which becomes the new target of this selectedView association; alternatively, an element instance may be given"},"!static":false},"setShowSubSectionMore":{"!description":"Sets a new value for property {@link #getShowSubSectionMore showSubSectionMore}.\n\nDetermines whether the show more button should be shown.\n\n<b>Note:<\/b> The property will take effect if the <code>BlockBase<\/code> is inside <ObjectPageSubSection<\/code> and would be ignored in case the <code>BlockBase<\/code> is nested inside another <code>BlockBase<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowSubSectionMore: Boolean) -> sap.uxap.BlockBase","!category":"function","parameters":{"bShowSubSectionMore":"type: boolean, description: New value for property <code>showSubSectionMore<\/code>"},"!static":false},"removeMapping":{"!description":"Removes a mapping from the aggregation {@link #getMappings mappings}.","!type":"fn(vMapping: Number | String | sap.uxap.ModelMapping) -> sap.uxap.ModelMapping","!category":"function","parameters":{"vMapping":"type: int|string|sap.uxap.ModelMapping, description: The mapping to remove or its index or id"},"!static":false},"!category":"class","indexOfMapping":{"!description":"Checks for the provided <code>sap.uxap.ModelMapping<\/code> in the aggregation {@link #getMappings mappings}. and returns its index if found or -1 otherwise.","!type":"fn(oMapping: sap.uxap.ModelMapping) -> Number","!category":"function","parameters":{"oMapping":"type: sap.uxap.ModelMapping, description: The mapping whose index is looked for"},"!static":false},"getFormAdjustment":{"!description":"Gets current value of property {@link #getFormAdjustment formAdjustment}.\n\nDetermines if the block should automatically adjust its inner forms. Allowed values are \"BlockColumns\" and \"OneColumn\" and \"None\". If the value is \"BlockColumns\", then the inner form will have as many columns as the colspan of its parent block. If the value is \"OneColumn\", the inner form will have exactly one column, regardless the colspan of its parent block. If the value is \"None\", no automatic adjustment of inner forms will be made and the form will keep its original column count.\n\nDefault value is <code>BlockColumns<\/code>.","!type":"fn() -> sap.uxap.BlockBaseFormAdjustment","!category":"function","!static":false},"getSelectedView":{"!description":"ID of the element which is the current target of the association {@link #getSelectedView selectedView}, or <code>null<\/code>.","!type":"fn() -> sap.ui.core.ID","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.uxap.BlockBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setColumnLayout":{"!description":"Set the column layout for this particular block.","!type":"fn(sLayout: String)","!category":"function","parameters":{"sLayout":"type: string, description: The column layout to apply to the control"},"!static":false},"getMappings":{"!description":"Gets content of aggregation {@link #getMappings mappings}.\n\nMap external UI5 model and internal Block model","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"setVisible":{"!description":"Setter for the visibility of the block.","!type":"fn()","!category":"function","!static":false},"!constructorDescription":"Constructor for a new <code>BlockBase<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMode mode} : string<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getColumnLayout columnLayout} : sap.uxap.BlockBaseColumnLayout (default: auto)<\/li>\n<li>{@link #getFormAdjustment formAdjustment} : sap.uxap.BlockBaseFormAdjustment (default: BlockColumns)<\/li>\n<li>{@link #getShowSubSectionMore showSubSectionMore} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getMappings mappings} : sap.uxap.ModelMapping[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedView selectedView} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setMode":{"!description":"Set the view mode for this particular block.","!type":"fn(sMode: String) -> *","!category":"function","parameters":{"sMode":"type: string, description: the mode to apply to the control (that should be synchronized with view declared)"},"!static":false},"destroyMappings":{"!description":"Destroys all the mappings in the aggregation {@link #getMappings mappings}.","!type":"fn() -> sap.uxap.BlockBase","!category":"function","!static":false},"getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nDetermines the visibility of the block.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setFormAdjustment":{"!description":"Sets a new value for property {@link #getFormAdjustment formAdjustment}.\n\nDetermines if the block should automatically adjust its inner forms. Allowed values are \"BlockColumns\" and \"OneColumn\" and \"None\". If the value is \"BlockColumns\", then the inner form will have as many columns as the colspan of its parent block. If the value is \"OneColumn\", the inner form will have exactly one column, regardless the colspan of its parent block. If the value is \"None\", no automatic adjustment of inner forms will be made and the form will keep its original column count.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>BlockColumns<\/code>.","!type":"fn(sFormAdjustment: sap.uxap.BlockBaseFormAdjustment) -> sap.uxap.BlockBase","!category":"function","parameters":{"sFormAdjustment":"type: sap.uxap.BlockBaseFormAdjustment, description: New value for property <code>formAdjustment<\/code>"},"!static":false},"!description":"The main element that holds the content that is displayed in an {@link sap.uxap.ObjectPageLayout ObjectPageLayout}, but not necessarily only there.\n\n<h3>Overview<\/h3>\n\nThe blocks give the flexibility to combine different content types.\n\nA block is a control that: <ul> <li>Has modes and a view associated to each mode. At rendering time, the view associated to the mode is rendered.<\/li> <li>Can use all view types for storing its internal control tree (XML, JS, JSON, HTML)<\/li> <\/ul>\n\nAs any UI5 view, the XML view can have a controller which automatically comes with a <code>this.oParentBlock<\/code> attribute (so that the controller can interact with the block). If the controller implements the <code>onParentBlockModeChange<\/code> method, this method will be called with the <code>sMode<\/code> parameter when the view is used or reused by the block.","getMode":{"!description":"Gets current value of property {@link #getMode mode}.\n\nDetermines the mode of the block. When block is used inside ObjectPage this mode is inherited my the SubSection. The mode of the block is changed when SubSection mode changes.","!type":"fn() -> String","!category":"function","!static":false},"getShowSubSectionMore":{"!description":"Gets current value of property {@link #getShowSubSectionMore showSubSectionMore}.\n\nDetermines whether the show more button should be shown.\n\n<b>Note:<\/b> The property will take effect if the <code>BlockBase<\/code> is inside <ObjectPageSubSection<\/code> and would be ignored in case the <code>BlockBase<\/code> is nested inside another <code>BlockBase<\/code>.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.uxap.BlockBase.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Control","!helpDescription":"The main element that holds the content that is displayed in an {@link sap.uxap.ObjectPageLayout ObjectPageLayout}, but not necessarily only there.\n\n<h3>Overview<\/h3>\n\nThe blocks give the flexibility to combine different content types.\n\nA block is a control that: <ul> <li>Has modes and a view associated to each mode. At rendering time, the view associated to the mode is rendered.<\/li> <li>Can use all view types for storing its internal control tree (XML, JS, JSON, HTML)<\/li> <\/ul>\n\nAs any UI5 view, the XML view can have a controller which automatically comes with a <code>this.oParentBlock<\/code> attribute (so that the controller can interact with the block). If the controller implements the <code>onParentBlockModeChange<\/code> method, this method will be called with the <code>sMode<\/code> parameter when the view is used or reused by the block.","removeAllMappings":{"!description":"Removes all the controls from the aggregation {@link #getMappings mappings}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false}},"sap.uxap.ObjectPageSubSectionMode":{"!description":"Used by the <code>ObjectPageLayout<\/code> control to define which layout to use (either Collapsed or Expanded).","Collapsed":{"!description":"Collapsed mode of display of the <code>ObjectPageLayout<\/code>.","!type":"String","!category":"enum"},"!category":"static class","Expanded":{"!description":"Expanded mode of displaying the <code>ObjectPageLayout<\/code>.","!type":"String","!category":"enum"},"!module":"sap/uxap/library"},"sap.uxap.ModelMapping":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ModelMapping with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getExternalModelName":{"!description":"Gets current value of property {@link #getExternalModelName externalModelName}.\n\nDetermines the external model name.","!type":"fn() -> String","!category":"function","!static":false},"!constructorDescription":"Constructor for a new <code>ModelMapping<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getExternalModelName externalModelName} : string<\/li>\n<li>{@link #getInternalModelName internalModelName} : string (default: Model)<\/li>\n<li>{@link #getExternalPath externalPath} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/uxap/ModelMapping","getInternalModelName":{"!description":"Gets current value of property {@link #getInternalModelName internalModelName}.\n\nDetermines the internal model name.\n\nDefault value is <code>Model<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"getExternalPath":{"!description":"Gets current value of property {@link #getExternalPath externalPath}.\n\nDetermines the external path.","!type":"fn() -> String","!category":"function","!static":false},"!description":"Defines the entity that will be passed to the {@link sap.uxap.ObjectPageLayout}.","setExternalModelName":{"!description":"Sets a new value for property {@link #getExternalModelName externalModelName}.\n\nDetermines the external model name.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sExternalModelName: String) -> sap.uxap.ModelMapping","!category":"function","parameters":{"sExternalModelName":"type: string, description: New value for property <code>externalModelName<\/code>"},"!static":false},"!category":"class","setInternalModelName":{"!description":"Sets a new value for property {@link #getInternalModelName internalModelName}.\n\nDetermines the internal model name.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Model<\/code>.","!type":"fn(sInternalModelName: String) -> sap.uxap.ModelMapping","!category":"function","parameters":{"sInternalModelName":"type: string, description: New value for property <code>internalModelName<\/code>"},"!static":false},"setExternalPath":{"!description":"Sets a new value for property {@link #getExternalPath externalPath}.\n\nDetermines the external path.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sExternalPath: String) -> sap.uxap.ModelMapping","!category":"function","parameters":{"sExternalPath":"type: string, description: New value for property <code>externalPath<\/code>"},"!static":false},"!helpDescription":"Defines the entity that will be passed to the {@link sap.uxap.ObjectPageLayout}.","!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ModelMapping.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.uxap.Importance":{"Medium":{"!description":"Medium importance of the content.","!type":"String","!category":"enum"},"Low":{"!description":"Low importance of the content.","!type":"String","!category":"enum"},"!description":"Used by the <code>ObjectSectionBase<\/code> control to define the importance of the content contained in it.","!category":"static class","High":{"!description":"High importance of the content.","!type":"String","!category":"enum"},"!module":"sap/uxap/library"},"sap.uxap":{"showSeparatorBefore":{"!description":"If this property is set the control will display a separator before it.","!type":"Boolean","!category":"enum"},"autoAdjustWidth":{"!description":"Indicates whether the width of the input field is determined by the selected item's content.","!type":"Boolean","!category":"enum"},"ObjectPageSubSectionMode":"sap.uxap.ObjectPageSubSectionMode","useIconTabBar":{"!description":"Use tab navigation mode instead of the default Anchor bar mode. <br><b>Note: <\/b>Keep in mind that the <code>sap.m.IconTabBar<\/code> control is no longer used for the tab navigation mode.","!type":"Boolean","!category":"enum"},"titleUppercase":{"!description":"Determines whether the Subsection title is displayed in upper case.","!type":"Boolean","!category":"enum"},"ObjectPageConfigurationMode":"sap.uxap.ObjectPageConfigurationMode","!module":"sap/uxap/library","useTwoColumnsForLargeScreen":{"!description":"Determines whether the to use two column layout for the L screen size.","!type":"Boolean","!category":"enum"},"externalModelName":{"!description":"Determines the external model name.","!type":"String","!category":"enum"},"visibleL":{"!description":"If this property is set the control will be visible (or not) in a large sized layout.","!type":"Boolean","!category":"enum"},"visibleM":{"!description":"If this property is set the control will be visible (or not) in a medium sized layout.","!type":"Boolean","!category":"enum"},"ModelMapping":"sap.uxap.ModelMapping_obj","showEditHeaderButton":{"!description":"Determines whether an Edit button will be displayed in Header Content.\n\n<b>Note<\/b>: This property is only taken into account if an instance of <code>sap.uxap.ObjectPageHeader<\/code> is used for the <code>headerTitle<\/code> aggregation.","!type":"Boolean","!category":"enum"},"preserveHeaderStateOnScroll":{"!description":"Preserves the current header state when scrolling. For example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.\n\n<b>Notes:<\/b> <ul><li>This property is only taken into account if an instance of <code>sap.uxap.ObjectPageDynamicHeaderTitle<\/code> is used for the <code>headerTitle<\/code> aggregation.<\/li> <li>Based on internal rules, the value of the property is not always taken into account - for example, when the control is rendered on tablet or mobile and the control`s title and header are with height larger than the given threshold.<\/li><\/ul>","!type":"Boolean","!category":"enum"},"showTitle":{"!description":"Determines whether to display the Section title or not.","!type":"Boolean","!category":"enum"},"IHeaderTitle":"sap.uxap.IHeaderTitle","ObjectPageHeaderLayoutData":"sap.uxap.ObjectPageHeaderLayoutData_obj","busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!type":"sap.ui.core.BusyIndicatorSize","!category":"enum"},"showTitleInHeaderContent":{"!description":"Determines whether the title, image, markers and selectTitleArrow are shown in the Header content area.\n\n<b>Note<\/b>: This property is only taken into account if an instance of <code>sap.uxap.ObjectPageHeader<\/code> is used for the <code>headerTitle<\/code> aggregation.<\/li>","!type":"Boolean","!category":"enum"},"visibleS":{"!description":"If this property is set the control will be visible (or not) in a small sized layout.","!type":"Boolean","!category":"enum"},"isChildPage":{"!description":"Determines whether the page is a child page and renders it with a different design. Child pages have an additional (darker/lighter) stripe on the left side of their header content area.\n\n<b>Note<\/b>: This property is only taken into account if an instance of <code>sap.uxap.ObjectPageHeader<\/code> is used for the <code>headerTitle<\/code> aggregation.","!type":"Boolean","!category":"enum"},"textDirection":{"!description":"This property specifies the element's text directionality with enumerated options. By default, the control inherits text direction from the DOM.","!type":"sap.ui.core.TextDirection","!category":"enum"},"showAnchorBarPopover":{"!description":"Determines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar.","!type":"Boolean","!category":"enum"},"subSectionLayout":{"!description":"Determines whether Subsection titles are displayed on top or to the left of the Subsection content.","!type":"sap.uxap.ObjectPageSubSectionLayout","!category":"enum"},"flexEnabled":{"!description":"Specifies whether the object page enables flexibility features, such as hiding and adding sections.<br> For more information about SAPUI5 flexibility, refer to the Developer Guide.","!type":"Boolean","!category":"enum"},"!helpDescription":"SAP UxAP","ObjectPageHeaderDesign":"sap.uxap.ObjectPageHeaderDesign","valueState":{"!description":"Visualizes the validation state of the control, e.g. <code>Error<\/code>, <code>Warning<\/code>, <code>Success<\/code>.","!type":"sap.ui.core.ValueState","!category":"enum"},"markLocked":{"!description":"Set the locked state of the objectPageHeader.","!type":"Boolean","!category":"enum"},"externalPath":{"!description":"Determines the external path.","!type":"String","!category":"enum"},"ObjectPageHeaderActionButton":"sap.uxap.ObjectPageHeaderActionButton_obj","mode":{"!description":"A mode property that will be passed to the controls in the blocks and moreBlocks aggregations. Only relevant if these aggregations use Object page blocks.","!type":"sap.uxap.ObjectPageSubSectionMode","!category":"enum"},"BlockBaseColumnLayout":"sap.uxap.BlockBaseColumnLayout","isObjectSubtitleAlwaysVisible":{"!description":"Determines whether the subtitle should always be visible or visible only when the header is snapped.","!type":"Boolean","!category":"enum"},"showAnchorBar":{"!description":"Determines whether the Navigation bar (Anchor bar) is displayed.","!type":"Boolean","!category":"enum"},"title":{"!description":"Section Title","!type":"String","!category":"enum"},"ObjectPageDynamicHeaderContent":"sap.uxap.ObjectPageDynamicHeaderContent_obj","showOnlyHighImportance":{"!description":"Determines whether sections and subsections with importance Low and Medium are hidden even on large screens.","!type":"Boolean","!category":"enum"},"showSeparatorAfter":{"!description":"If this property is set the control will display a separator after it.","!type":"Boolean","!category":"enum"},"!category":"namespace","Importance":"sap.uxap.Importance","iconFirst":{"!description":"Determines whether the icon is displayed before the text.","!type":"Boolean","!category":"enum"},"titleLevel":{"!description":"Determines the ARIA level of the <code>ObjectPageSectionBase<\/code> title. The ARIA level is used by assisting technologies, such as screen readers, to create a hierarchical site map for faster navigation.\n\n<b>Note:<\/b> Defining a <code>titleLevel<\/code> will add <code>aria-level<\/code> attribute from 1 to 6, instead of changing the <code>ObjectPageSectionBase<\/code> title HTML tag from H1 to H6. <br>For example: if <code>titleLevel<\/code> is <code>TitleLevel.H1<\/code>, it will result as aria-level of 1 added to the <code>ObjectPageSectionBase<\/code> title.","!type":"sap.ui.core.TitleLevel","!category":"enum"},"ObjectPageDynamicHeaderTitle":"sap.uxap.ObjectPageDynamicHeaderTitle_obj","ObjectPageLayout":"sap.uxap.ObjectPageLayout_obj","areaShrinkRatio":{"!description":"Assigns shrinking ratio to the <code>DynamicPageTitle<\/code> areas (Heading, Content, Actions). The greater value a section has the faster it shrinks when the screen size is being reduced.\n\nThe value must be set in <code>Heading:Content:Actions<\/code> format where Title, Content and Actions are numbers greater than or equal to 0. If set to 0, the respective area will not shrink.\n\nFor example, if <code>2:7:1<\/code> is set, the Content area will shrink seven times faster than the Actions area. So, when all three areas have width of 500px and the available space is reduced by 100px the Title area will reduced by 20px, the Content area - by 70px and the Actions area - by 10px.\n\nIf all the areas have assigned values greater than 1, the numbers are scaled so that at least one of them is equal to 1. For example, value of <code>2:4:8<\/code> is equal to <code>1:2:4<\/code>.\n\n<Note:> When this property is set the <code>primaryArea<\/code> property has no effect.","!type":"sap.f.DynamicPageTitleShrinkRatio","!category":"enum"},"isObjectTitleAlwaysVisible":{"!description":"Determines whether the title should always be visible or visible only when the header is snapped.","!type":"Boolean","!category":"enum"},"columnLayout":{"!description":"Determines on how many columns the layout will be rendered. Allowed values are integers from 1 to 4 and \"auto\".","!type":"sap.uxap.BlockBaseColumnLayout","!category":"enum"},"!description":"SAP UxAP","valueStateText":{"!description":"Defines the text of the value state message popup. If this is not specified, a default text is shown from the resource bundle.","!type":"String","!category":"enum"},"ObjectPageHeaderPictureShape":"sap.uxap.ObjectPageHeaderPictureShape","primaryArea":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.54 Please use the <code>areaShrinkRatio<\/code> property instead. The value of <code>areaShrinkRatio<\/code> must be set in <code>Heading:Content:Actions<\/code> format where Heading, Content and Actions are numbers greater than or equal to 0. The greater value a section has the faster it shrinks when the screen size is being reduced.\n\n<code>primaryArea=Begin<\/code> can be achieved by setting a low number for the Heading area to <code>areaShrinkRatio<\/code>, for example <code>1:1.6:1.6<\/code>.\n\n<code>primaryArea=Middle<\/code> can be achieved by setting a low number for the Content area to <code>areaShrinkRatio<\/code>, for example <code>1.6:1:1.6<\/code>.<br>Determines which of the <code>DynamicPageTitle<\/code> areas (Begin, Middle) is primary.\n\n<b>Note:<\/b> The primary area is shrinking at lower rate, remaining visible as much as it can.","!type":"sap.f.DynamicPageTitleArea","!category":"enum"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is raised.\n\nSee {@link sap.ui.core.Control#attachValidateFieldGroup}.","!type":"[String]","!category":"enum"},"design":{"!description":"Defines the toolbar design.\n\n<b>Note:<\/b> Design settings are theme-dependent. They also determine the default height of the toolbar.","!type":"sap.m.ToolbarDesign","!category":"enum"},"showPlaceholder":{"!description":"Enables support of a placeholder image in case no image is specified or the URL of the provided image is invalid.","!type":"Boolean","!category":"enum"},"objectImageAlt":{"!description":"The text to be used for the Alt and Tooltip attribute of the image, supplied via the objectImageURI property","!type":"String","!category":"enum"},"ObjectPageHeader":"sap.uxap.ObjectPageHeader_obj","showFooter":{"!description":"Determines whether the footer is visible.","!type":"Boolean","!category":"enum"},"visible":{"!description":"Invisible ObjectPageSectionBase are not rendered","!type":"Boolean","!category":"enum"},"objectSubtitle":{"!description":"The description of the object","!type":"String","!category":"enum"},"busy":{"!description":"Whether the control is currently in busy state.","!type":"Boolean","!category":"enum"},"type":{"!description":"Defines the <code>Button<\/code> type.","!type":"sap.m.ButtonType","!category":"enum"},"forceSelection":{"!description":"Indicates whether the selection is restricted to one of the items in the list. <b>Note:<\/b> We strongly recommend that you always set this property to <code>false<\/code> and bind the <code>selectedKey<\/code> property to the desired value for better interoperability with data binding.","!type":"Boolean","!category":"enum"},"isObjectIconAlwaysVisible":{"!description":"Determines whether the icon should always be visible or visible only when the header is snapped.","!type":"Boolean","!category":"enum"},"headerContentPinnable":{"!description":"Determines whether the Header Content area can be pinned.\n\nWhen set to <code>true<\/code>, a pin button is displayed within the Header Content area. The pin button allows the user to make the Header Content always visible at the top of the page above any scrollable content.\n\n<b>Note:<\/b> This property is only taken into account if an instance of <code>sap.uxap.ObjectPageDynamicHeaderTitle<\/code> is used for the <code>headerTitle<\/code> aggregation.","!type":"Boolean","!category":"enum"},"ObjectPageHeaderContent":"sap.uxap.ObjectPageHeaderContent_obj","ObjectPageLazyLoader":"sap.uxap.ObjectPageLazyLoader_obj","selectedKey":{"!description":"Key of the selected item.\n\n<b>Note:<\/b> If duplicate keys exist, the first item matching the key is used.","!type":"String","!category":"enum"},"height":{"!description":"Determines the height of the ObjectPage.","!type":"sap.ui.core.CSSSize","!category":"enum"},"pinnable":{"!description":"Determines whether the header is pinnable.","!type":"Boolean","!category":"enum"},"objectImageURI":{"!description":"The URL of the image, representing the business object","!type":"String","!category":"enum"},"maxWidth":{"!description":"Sets the maximum width of the control.\n\n<b>Note:<\/b> This property is ignored if the <code>autoAdjustWidth<\/code> property is set to <code>true<\/code>.","!type":"sap.ui.core.CSSSize","!category":"enum"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!type":"Number","!category":"enum"},"enabled":{"!description":"Determines whether the <code>Button<\/code> is enabled (default is set to <code>true<\/code>). A disabled <code>Button<\/code> has different colors depending on the {@link sap.m.ButtonType ButtonType}.","!type":"Boolean","!category":"enum"},"markFlagged":{"!description":"Set the flagged state to true or false. The showMarkers property must be true for this property to take effect.","!type":"Boolean","!category":"enum"},"text":{"!description":"Determines the text of the <code>Button<\/code>.","!type":"String","!category":"enum"},"iconDensityAware":{"!description":"By default, this is set to true but then one or more requests are sent trying to get the density perfect version of image if this version of image doesn't exist on the server.\n\nIf only one version of image is provided, set this value to false to avoid the attempt of fetching density perfect image.","!type":"Boolean","!category":"enum"},"IHeaderContent":"sap.uxap.IHeaderContent","upperCase":{"!description":"Determines whether the HierarchicalSelect items are displayed in upper case.","!type":"Boolean","!category":"enum"},"width":{"!description":"If this property is set the control will take the provided size.","!type":"sap.ui.core.CSSSize","!category":"enum"},"BlockBaseFormAdjustment":"sap.uxap.BlockBaseFormAdjustment","showHeaderContent":{"!description":"Determines the visibility of the Header content (headerContent aggregation).","!type":"Boolean","!category":"enum"},"hideText":{"!description":"Hide the button text when rendered into the headerTitle part of the ObjectPageLayout. This is useful if you want to display icons only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions.","!type":"Boolean","!category":"enum"},"toggleHeaderOnTitleClick":{"!description":"Determines whether the user can switch between the expanded/collapsed states of the <code>sap.uxap.ObjectPageDynamicHeaderContent<\/code> by clicking on the <code>sap.uxap.ObjectPageDynamicHeaderTitle<\/code>. If set to <code>false<\/code>, the <code>sap.uxap.ObjectPageDynamicHeaderTitle<\/code> is not clickable and the application must provide other means for expanding/collapsing the <code>sap.uxap.ObjectPageDynamicHeaderContent<\/code>, if necessary.\n\n<b>Note:<\/b> This property is only taken into account if an instance of <code>sap.uxap.ObjectPageDynamicHeaderTitle<\/code> is used for the <code>headerTitle<\/code> aggregation.","!type":"Boolean","!category":"enum"},"importance":{"!description":"Determines whether the section will be hidden on low resolutions.","!type":"sap.uxap.Importance","!category":"enum"},"active":{"!description":"Indicates that the whole toolbar is clickable. The Press event is fired only if Active is set to true. Note: This property should be used when there are no interactive controls inside the toolbar and the toolbar itself is meant to be interactive.","!type":"Boolean","!category":"enum"},"objectImageDensityAware":{"!description":"The value of densityAware for the image, supplied via the objectImageURI property. See sap.m.Image for more details on densityAware.","!type":"Boolean","!category":"enum"},"ObjectPageSection":"sap.uxap.ObjectPageSection_obj","BreadCrumbs":"sap.uxap.BreadCrumbs_obj","activeIcon":{"!description":"The source property of an alternative icon for the active (depressed) state of the button. Both active and default icon properties should be defined and have the same type: image or icon font. If the <code>icon<\/code> property is not set or has a different type, the active icon is not displayed.","!type":"sap.ui.core.URI","!category":"enum"},"hideIcon":{"!description":"Hide the button icon when rendered into the headerTitle part of the ObjectPageLayout. This is useful if you want to display texts only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions.","!type":"Boolean","!category":"enum"},"showSecondaryValues":{"!description":"Indicates whether the text values of the <code>additionalText<\/code> property of a {@link sap.ui.core.ListItem} are shown.","!type":"Boolean","!category":"enum"},"HierarchicalSelect":"sap.uxap.HierarchicalSelect_obj","ObjectPageSubSection":"sap.uxap.ObjectPageSubSection_obj","objectImageShape":{"!description":"Determines whether the picture should be displayed in a square or with a circle-shaped mask.","!type":"sap.uxap.ObjectPageHeaderPictureShape","!category":"enum"},"AnchorBar":"sap.uxap.AnchorBar_obj","style":{"!description":"Defines the visual style of the <code>Toolbar<\/code>.\n\n<b>Note:<\/b> The visual styles are theme-dependent.","!type":"sap.m.ToolbarStyle","!category":"enum"},"showCurrentLocation":{"!description":"Sets the visibility of the current/last element in the BreadCrumbs path.","!type":"Boolean","!category":"enum"},"name":{"!description":"The name to be used in the HTML code (for example, for HTML forms that send data to the server via submit).","!type":"String","!category":"enum"},"showPopover":{"!description":"Determines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar.","!type":"Boolean","!category":"enum"},"BlockBase":"sap.uxap.BlockBase_obj","ObjectPageSubSectionLayout":"sap.uxap.ObjectPageSubSectionLayout","textAlign":{"!description":"Sets the horizontal alignment of the text within the input field.","!type":"sap.ui.core.TextAlign","!category":"enum"},"ObjectPageSectionBase":"sap.uxap.ObjectPageSectionBase_obj","showTitleSelector":{"!description":"When set to true, the selector arrow icon/image is shown and can be pressed.","!type":"Boolean","!category":"enum"},"icon":{"!description":"Defines the icon to be displayed as graphical element within the <code>Button<\/code>. It can be an image or an icon from the icon font.","!type":"sap.ui.core.URI","!category":"enum"},"showSubSectionMore":{"!description":"Determines whether the show more button should be shown.\n\n<b>Note:<\/b> The property will take effect if the <code>BlockBase<\/code> is inside <ObjectPageSubSection<\/code> and would be ignored in case the <code>BlockBase<\/code> is nested inside another <code>BlockBase<\/code>.","!type":"Boolean","!category":"enum"},"showMarkers":{"!description":"Indicates if object page header title supports showing markers such as flagged and favorite.","!type":"Boolean","!category":"enum"},"contentDesign":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.1 undefined<br>Determines the design of the header - Light or Dark. <b>Note: <\/b>This property is deprecated. It will continue to work in the Blue Crystal theme, but it will not be taken into account for the Belize themes.","!type":"sap.uxap.ObjectPageHeaderDesign","!category":"enum"},"formAdjustment":{"!description":"Determines if the block should automatically adjust its inner forms. Allowed values are \"BlockColumns\" and \"OneColumn\" and \"None\". If the value is \"BlockColumns\", then the inner form will have as many columns as the colspan of its parent block. If the value is \"OneColumn\", the inner form will have exactly one column, regardless the colspan of its parent block. If the value is \"None\", no automatic adjustment of inner forms will be made and the form will keep its original column count.","!type":"sap.uxap.BlockBaseFormAdjustment","!category":"enum"},"headerDesign":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.1 undefined<br>Determines the design of the header - Light or Dark. <b>Note: <\/b>This property is deprecated. It will continue to work in the Blue Crystal theme, but it will not be taken into account for the Belize themes.","!type":"sap.uxap.ObjectPageHeaderDesign","!category":"enum"},"objectTitle":{"!description":"The title of the object","!type":"String","!category":"enum"},"markChanges":{"!description":"Marks that there are unsaved changes in the objectPageHeader. The markChanges state cannot be used together with the markLocked state. If both are set to true, only the locked state will be displayed.","!type":"Boolean","!category":"enum"},"sectionTitleLevel":{"!description":"Determines the ARIA level of the <code>ObjectPageSection<\/code> and <code>ObjectPageSubSection<\/code> titles. The ARIA level is used by assisting technologies, such as screen readers, to create a hierarchical site map for faster navigation.\n\n<br><b>Note:<\/b> <ul> <li>Defining a <code>sectionTitleLevel<\/code> will add <code>aria-level<\/code> attribute from 1 to 6 instead of changing the titles` HTML tag from H1 to H6. <br>For example: if <code>sectionTitleLevel<\/code> is <code>TitleLevel.H1<\/code>, it will result as aria-level of 1 added to the <code>ObjectPageSection<\/code> title. <\/li>\n\n<li> The <code>ObjectPageSubSection<\/code> title would have <code>aria-level<\/code> one level lower than the defined. For example: if <code>sectionTitleLevel<\/code> is <code>TitleLevel.H1<\/code>, it will result as aria-level of 2 added to the <code>ObjectPageSubSection<\/code> title.<\/li>\n\n<li> It is possible to define a <code>titleLevel<\/code> on <code>ObjectPageSection<\/code> or <code>ObjectPageSubSection<\/code> level. In this case the value of this property will be ignored. <\/li> <\/ul>","!type":"sap.ui.core.TitleLevel","!category":"enum"},"markFavorite":{"!description":"Set the favorite state to true or false. The showMarkers property must be true for this property to take effect.","!type":"Boolean","!category":"enum"},"upperCaseAnchorBar":{"!description":"Determines whether the Anchor bar items are displayed in upper case.","!type":"Boolean","!category":"enum"},"selectedItemId":{"!description":"ID of the selected item.","!type":"String","!category":"enum"},"alwaysShowContentHeader":{"!description":"Determines whether Header Content will always be expanded on desktop.\n\n<b>Note<\/b>: This property is only taken into account if an instance of <code>sap.uxap.ObjectPageHeader<\/code> is used for the <code>headerTitle<\/code> aggregation.","!type":"Boolean","!category":"enum"},"internalModelName":{"!description":"Determines the internal model name.","!type":"String","!category":"enum"},"enableLazyLoading":{"!description":"Enable lazy loading for the Object page Subsections.","!type":"Boolean","!category":"enum"},"isActionAreaAlwaysVisible":{"!description":"Determines whether the action buttons should always be visible or visible only when the header is snapped.","!type":"Boolean","!category":"enum"}},"sap.uxap.BlockBaseFormAdjustment":{"!description":"Used by the <code>BlockBase<\/code> control to define if it should do automatic adjustment of its nested forms.","!category":"static class","None":{"!description":"No automatic adjustment of forms.","!type":"String","!category":"enum"},"!module":"sap/uxap/library","OneColumn":{"!description":"Any form within the block will be automatically adjusted to have only one column.","!type":"String","!category":"enum"},"BlockColumns":{"!description":"Any form within the block will be automatically adjusted to have as many columns as the colspan of its parent block.","!type":"String","!category":"enum"}},"sap.uxap.ObjectPageLayout":{"setShowAnchorBarPopover":{"!description":"Sets a new value for property {@link #getShowAnchorBarPopover showAnchorBarPopover}.\n\nDetermines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowAnchorBarPopover: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"bShowAnchorBarPopover":"type: boolean, description: New value for property <code>showAnchorBarPopover<\/code>"},"!static":false},"fireEditHeaderButtonPress":{"!description":"Fires event {@link #event:editHeaderButtonPress editHeaderButtonPress} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setFooter":{"!description":"Sets the aggregated {@link #getFooter footer}.","!type":"fn(oFooter: sap.m.IBar) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"oFooter":"type: sap.m.IBar, description: The footer to set"},"!static":false},"setFlexEnabled":{"!description":"Sets a new value for property {@link #getFlexEnabled flexEnabled}.\n\nSpecifies whether the object page enables flexibility features, such as hiding and adding sections.<br> For more information about SAPUI5 flexibility, refer to the Developer Guide.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bFlexEnabled: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"bFlexEnabled":"type: boolean, description: New value for property <code>flexEnabled<\/code>"},"!static":false},"getPreserveHeaderStateOnScroll":{"!description":"Gets current value of property {@link #getPreserveHeaderStateOnScroll preserveHeaderStateOnScroll}.\n\nPreserves the current header state when scrolling. For example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.\n\n<b>Notes:<\/b> <ul><li>This property is only taken into account if an instance of <code>sap.uxap.ObjectPageDynamicHeaderTitle<\/code> is used for the <code>headerTitle<\/code> aggregation.<\/li> <li>Based on internal rules, the value of the property is not always taken into account - for example, when the control is rendered on tablet or mobile and the control`s title and header are with height larger than the given threshold.<\/li><\/ul>\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setIsChildPage":{"!description":"Sets a new value for property {@link #getIsChildPage isChildPage}.\n\nDetermines whether the page is a child page and renders it with a different design. Child pages have an additional (darker/lighter) stripe on the left side of their header content area.\n\n<b>Note<\/b>: This property is only taken into account if an instance of <code>sap.uxap.ObjectPageHeader<\/code> is used for the <code>headerTitle<\/code> aggregation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bIsChildPage: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"bIsChildPage":"type: boolean, description: New value for property <code>isChildPage<\/code>"},"!static":false},"setShowEditHeaderButton":{"!description":"Sets a new value for property {@link #getShowEditHeaderButton showEditHeaderButton}.\n\nDetermines whether an Edit button will be displayed in Header Content.\n\n<b>Note<\/b>: This property is only taken into account if an instance of <code>sap.uxap.ObjectPageHeader<\/code> is used for the <code>headerTitle<\/code> aggregation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowEditHeaderButton: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"bShowEditHeaderButton":"type: boolean, description: New value for property <code>showEditHeaderButton<\/code>"},"!static":false},"scrollToSection":{"!description":"Scrolls the Object page to the given Section.","!type":"fn(sId: String, iDuration: Number, iOffset: Number)","!category":"function","parameters":{"sId":"type: string, description: The Section ID to scroll to","iDuration":"type: int, description: Scroll duration (in ms). Default value is 0","iOffset":"type: int, description: Additional pixels to scroll"},"!static":false},"!module":"sap/uxap/ObjectPageLayout","getSelectedSection":{"!description":"ID of the element which is the current target of the association {@link #getSelectedSection selectedSection}, or <code>null<\/code>.","!type":"fn() -> sap.ui.core.ID","!category":"function","!static":false},"removeSection":{"!description":"Removes a section from the aggregation {@link #getSections sections}.","!type":"fn(vSection: Number | String | sap.uxap.ObjectPageSection) -> sap.uxap.ObjectPageSection","!category":"function","parameters":{"vSection":"type: int|string|sap.uxap.ObjectPageSection, description: The section to remove or its index or id"},"!static":false},"detachEditHeaderButtonPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:editHeaderButtonPress editHeaderButtonPress} event of this <code>sap.uxap.ObjectPageLayout<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getAlwaysShowContentHeader":{"!description":"Gets current value of property {@link #getAlwaysShowContentHeader alwaysShowContentHeader}.\n\nDetermines whether Header Content will always be expanded on desktop.\n\n<b>Note<\/b>: This property is only taken into account if an instance of <code>sap.uxap.ObjectPageHeader<\/code> is used for the <code>headerTitle<\/code> aggregation.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getSubSectionLayout":{"!description":"Gets current value of property {@link #getSubSectionLayout subSectionLayout}.\n\nDetermines whether Subsection titles are displayed on top or to the left of the Subsection content.\n\nDefault value is <code>TitleOnTop<\/code>.","!type":"fn() -> sap.uxap.ObjectPageSubSectionLayout","!category":"function","!static":false},"addHeaderContent":{"!description":"Adds some headerContent to the aggregation {@link #getHeaderContent headerContent}.","!type":"fn(oHeaderContent: sap.ui.core.Control) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"oHeaderContent":"type: sap.ui.core.Control, description: The headerContent to add; if empty, nothing is inserted"},"!static":false},"setShowFooter":{"!description":"Sets a new value for property {@link #getShowFooter showFooter}.\n\nDetermines whether the footer is visible.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowFooter: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"bShowFooter":"type: boolean, description: New value for property <code>showFooter<\/code>"},"!static":false},"getToggleHeaderOnTitleClick":{"!description":"Gets current value of property {@link #getToggleHeaderOnTitleClick toggleHeaderOnTitleClick}.\n\nDetermines whether the user can switch between the expanded/collapsed states of the <code>sap.uxap.ObjectPageDynamicHeaderContent<\/code> by clicking on the <code>sap.uxap.ObjectPageDynamicHeaderTitle<\/code>. If set to <code>false<\/code>, the <code>sap.uxap.ObjectPageDynamicHeaderTitle<\/code> is not clickable and the application must provide other means for expanding/collapsing the <code>sap.uxap.ObjectPageDynamicHeaderContent<\/code>, if necessary.\n\n<b>Note:<\/b> This property is only taken into account if an instance of <code>sap.uxap.ObjectPageDynamicHeaderTitle<\/code> is used for the <code>headerTitle<\/code> aggregation.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setHeaderTitle":{"!description":"Sets the aggregated {@link #getHeaderTitle headerTitle}.","!type":"fn(oHeaderTitle: sap.uxap.IHeaderTitle) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"oHeaderTitle":"type: sap.uxap.IHeaderTitle, description: The headerTitle to set"},"!static":false},"getFooter":{"!description":"Gets content of aggregation {@link #getFooter footer}.\n\nObject page floating footer.","!type":"fn() -> sap.m.IBar","!category":"function","!static":false},"getShowAnchorBar":{"!description":"Gets current value of property {@link #getShowAnchorBar showAnchorBar}.\n\nDetermines whether the Navigation bar (Anchor bar) is displayed.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getShowHeaderContent":{"!description":"Gets current value of property {@link #getShowHeaderContent showHeaderContent}.\n\nDetermines the visibility of the Header content (headerContent aggregation).\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"detachNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:navigate navigate} event of this <code>sap.uxap.ObjectPageLayout<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setUseTwoColumnsForLargeScreen":{"!description":"Sets a new value for property {@link #getUseTwoColumnsForLargeScreen useTwoColumnsForLargeScreen}.\n\nDetermines whether the to use two column layout for the L screen size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bUseTwoColumnsForLargeScreen: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"bUseTwoColumnsForLargeScreen":"type: boolean, description: New value for property <code>useTwoColumnsForLargeScreen<\/code>"},"!static":false},"setSelectedSection":{"!description":"Sets the section that should be selected.\n\nThe section can either be given by itself or by its id.\n\nNote that <code>null<\/code> or <code>undefined<\/code> are not valid arguments and will be discarded. This is because the <code>sap.uxap.ObjectPageLayout<\/code> should always have one of its sections selected (unless it has 0 sections).","!type":"fn(vSectionBase: String | sap.uxap.ObjectPageSection) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"vSectionBase":"type: string|sap.uxap.ObjectPageSection, description: The ID or the section instance that should be selected Note that <code>null<\/code> or <code>undefined<\/code> are not valid arguments"},"!static":false},"getShowEditHeaderButton":{"!description":"Gets current value of property {@link #getShowEditHeaderButton showEditHeaderButton}.\n\nDetermines whether an Edit button will be displayed in Header Content.\n\n<b>Note<\/b>: This property is only taken into account if an instance of <code>sap.uxap.ObjectPageHeader<\/code> is used for the <code>headerTitle<\/code> aggregation.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"_triggerVisibleSubSectionsEvents":{"!description":"Resets the internal information of which subsections are in view and immediately calls the layout calculation so that an event <code>subSectionEnteredViewPort<\/code> is fired for the subsections that are actually in view. Use this method after a change in bindings to the existing object, since it's layout might have changed and the app needs to react to the new subsections in view.","!type":"fn()","!category":"function","!static":false},"setSubSectionLayout":{"!description":"Sets a new value for property {@link #getSubSectionLayout subSectionLayout}.\n\nDetermines whether Subsection titles are displayed on top or to the left of the Subsection content.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>TitleOnTop<\/code>.","!type":"fn(sSubSectionLayout: sap.uxap.ObjectPageSubSectionLayout) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"sSubSectionLayout":"type: sap.uxap.ObjectPageSubSectionLayout, description: New value for property <code>subSectionLayout<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new <code>ObjectPageLayout<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowAnchorBar showAnchorBar} : boolean (default: true)<\/li>\n<li>{@link #getShowAnchorBarPopover showAnchorBarPopover} : boolean (default: true)<\/li>\n<li>{@link #getUpperCaseAnchorBar upperCaseAnchorBar} : boolean (default: true)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getEnableLazyLoading enableLazyLoading} : boolean (default: false)<\/li>\n<li>{@link #getSubSectionLayout subSectionLayout} : sap.uxap.ObjectPageSubSectionLayout (default: TitleOnTop)<\/li>\n<li>{@link #getSectionTitleLevel sectionTitleLevel} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getUseIconTabBar useIconTabBar} : boolean (default: false)<\/li>\n<li>{@link #getShowHeaderContent showHeaderContent} : boolean (default: true)<\/li>\n<li>{@link #getUseTwoColumnsForLargeScreen useTwoColumnsForLargeScreen} : boolean (default: false)<\/li>\n<li>{@link #getShowTitleInHeaderContent showTitleInHeaderContent} : boolean (default: false)<\/li>\n<li>{@link #getShowOnlyHighImportance showOnlyHighImportance} : boolean (default: false)<\/li>\n<li>{@link #getIsChildPage isChildPage} : boolean (default: false)<\/li>\n<li>{@link #getAlwaysShowContentHeader alwaysShowContentHeader} : boolean (default: false)<\/li>\n<li>{@link #getHeaderContentPinnable headerContentPinnable} : boolean (default: true)<\/li>\n<li>{@link #getToggleHeaderOnTitleClick toggleHeaderOnTitleClick} : boolean (default: true)<\/li>\n<li>{@link #getPreserveHeaderStateOnScroll preserveHeaderStateOnScroll} : boolean (default: false)<\/li>\n<li>{@link #getShowEditHeaderButton showEditHeaderButton} : boolean (default: false)<\/li>\n<li>{@link #getFlexEnabled flexEnabled} : boolean (default: false)<\/li>\n<li>{@link #getShowFooter showFooter} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSections sections} : sap.uxap.ObjectPageSection[] (default)<\/li>\n<li>{@link #getHeaderTitle headerTitle} : sap.uxap.IHeaderTitle<\/li>\n<li>{@link #getHeaderContent headerContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getFooter footer} : sap.m.IBar<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedSection selectedSection} : (sap.ui.core.ID | sap.uxap.ObjectPageSection)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:toggleAnchorBar toggleAnchorBar} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:editHeaderButtonPress editHeaderButtonPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:navigate navigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","destroyHeaderTitle":{"!description":"Destroys the headerTitle in the aggregation {@link #getHeaderTitle headerTitle}.","!type":"fn() -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"getHeaderContentPinnable":{"!description":"Gets current value of property {@link #getHeaderContentPinnable headerContentPinnable}.\n\nDetermines whether the Header Content area can be pinned.\n\nWhen set to <code>true<\/code>, a pin button is displayed within the Header Content area. The pin button allows the user to make the Header Content always visible at the top of the page above any scrollable content.\n\n<b>Note:<\/b> This property is only taken into account if an instance of <code>sap.uxap.ObjectPageDynamicHeaderTitle<\/code> is used for the <code>headerTitle<\/code> aggregation.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getFlexEnabled":{"!description":"Gets current value of property {@link #getFlexEnabled flexEnabled}.\n\nSpecifies whether the object page enables flexibility features, such as hiding and adding sections.<br> For more information about SAPUI5 flexibility, refer to the Developer Guide.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getSections":{"!description":"Gets content of aggregation {@link #getSections sections}.\n\nThe sections that make up the Object page content area.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nDetermines the height of the ObjectPage.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"},"!static":false},"removeHeaderContent":{"!description":"Removes a headerContent from the aggregation {@link #getHeaderContent headerContent}.","!type":"fn(vHeaderContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","parameters":{"vHeaderContent":"type: int|string|sap.ui.core.Control, description: The headerContent to remove or its index or id"},"!static":false},"setUseIconTabBar":{"!description":"Sets a new value for property {@link #getUseIconTabBar useIconTabBar}.\n\nUse tab navigation mode instead of the default Anchor bar mode. <br><b>Note: <\/b>Keep in mind that the <code>sap.m.IconTabBar<\/code> control is no longer used for the tab navigation mode.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bUseIconTabBar: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"bUseIconTabBar":"type: boolean, description: New value for property <code>useIconTabBar<\/code>"},"!static":false},"removeAllSections":{"!description":"Removes all the controls from the aggregation {@link #getSections sections}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getHeaderContent":{"!description":"Gets content of aggregation {@link #getHeaderContent headerContent}.\n\nObject page header content - the dynamic part of the Object page header.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"setShowTitleInHeaderContent":{"!description":"Sets a new value for property {@link #getShowTitleInHeaderContent showTitleInHeaderContent}.\n\nDetermines whether the title, image, markers and selectTitleArrow are shown in the Header content area.\n\n<b>Note<\/b>: This property is only taken into account if an instance of <code>sap.uxap.ObjectPageHeader<\/code> is used for the <code>headerTitle<\/code> aggregation.<\/li>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowTitleInHeaderContent: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"bShowTitleInHeaderContent":"type: boolean, description: New value for property <code>showTitleInHeaderContent<\/code>"},"!static":false},"setToggleHeaderOnTitleClick":{"!description":"Sets a new value for property {@link #getToggleHeaderOnTitleClick toggleHeaderOnTitleClick}.\n\nDetermines whether the user can switch between the expanded/collapsed states of the <code>sap.uxap.ObjectPageDynamicHeaderContent<\/code> by clicking on the <code>sap.uxap.ObjectPageDynamicHeaderTitle<\/code>. If set to <code>false<\/code>, the <code>sap.uxap.ObjectPageDynamicHeaderTitle<\/code> is not clickable and the application must provide other means for expanding/collapsing the <code>sap.uxap.ObjectPageDynamicHeaderContent<\/code>, if necessary.\n\n<b>Note:<\/b> This property is only taken into account if an instance of <code>sap.uxap.ObjectPageDynamicHeaderTitle<\/code> is used for the <code>headerTitle<\/code> aggregation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bToggleHeaderOnTitleClick: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"bToggleHeaderOnTitleClick":"type: boolean, description: New value for property <code>toggleHeaderOnTitleClick<\/code>"},"!static":false},"!helpDescription":"A layout that allows apps to easily display information related to a business object.\n\n<h3>Overview<\/h3>\n\nThe <code>ObjectPageLayout<\/code> layout is composed of a header (title and content), an optional anchor bar and block content wrapped in sections and subsections that structure the information.\n\n<h3>Structure<\/h3>\n\nAn <code>ObjectPageLayout<\/code> control is used to put together all parts of an Object page - Header, optional Anchor Bar and Sections/Subsections.\n\n<h4>Header<\/h4> The <code>ObjectPageLayout<\/code> implements the snapping header concept. This means that the upper part of the header (Header Title) always stays visible, while the lower part (Header Content) can scroll out of view.\n\nHeader Title is displayed at the top of the header and always remains visible above the scrollable content of the page. It contains the title and most prominent details of the object.\n\nThe Header Content scrolls along with the content of the page until it disappears (collapsed header). When scrolled back to the top it becomes visible again (expanded header). It contains all the additional information of the object.\n\n<h4>Anchor Bar<\/h4> The Anchor Bar is an automatically generated internal menu that shows the titles of the sections and subsections and allows the user to scroll to the respective section and subsection content.\n\n<h4>Sections, Subsections, Blocks<\/h4> The content of the page that appears bellow the header is composed of blocks structured into sections and subsections.\n\n<h3>Usage<\/h3> Use the <code>ObjectPageLayout<\/code> if: <ul> <li>The users need to see, edit, or create an item with all its details.<\/li> <li>Users need to get an overview of an object and interact with different parts of the object.<\/li> <\/ul>\n\n<h3>Responsive behavior<\/h3>\n\nThe <code>ObjectPageLayout<\/code> is responsive and adapts to all screen sizes.","!proto":"sap.ui.core.Control","getShowTitleInHeaderContent":{"!description":"Gets current value of property {@link #getShowTitleInHeaderContent showTitleInHeaderContent}.\n\nDetermines whether the title, image, markers and selectTitleArrow are shown in the Header content area.\n\n<b>Note<\/b>: This property is only taken into account if an instance of <code>sap.uxap.ObjectPageHeader<\/code> is used for the <code>headerTitle<\/code> aggregation.<\/li>\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"insertSection":{"!description":"Inserts a section into the aggregation {@link #getSections sections}.","!type":"fn(oSection: sap.uxap.ObjectPageSection, iIndex: Number) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"oSection":"type: sap.uxap.ObjectPageSection, description: The section to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the section should be inserted at; for a negative value of <code>iIndex<\/code>, the section is inserted at position 0; for a value greater than the current size of the aggregation, the section is inserted at the last position"},"!static":false},"fireNavigate":{"!description":"Fires event {@link #event:navigate navigate} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setShowHeaderContent":{"!description":"Sets a new value for property {@link #getShowHeaderContent showHeaderContent}.\n\nDetermines the visibility of the Header content (headerContent aggregation).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowHeaderContent: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"bShowHeaderContent":"type: boolean, description: New value for property <code>showHeaderContent<\/code>"},"!static":false},"getShowOnlyHighImportance":{"!description":"Gets current value of property {@link #getShowOnlyHighImportance showOnlyHighImportance}.\n\nDetermines whether sections and subsections with importance Low and Medium are hidden even on large screens.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setShowOnlyHighImportance":{"!description":"Sets a new value for property {@link #getShowOnlyHighImportance showOnlyHighImportance}.\n\nDetermines whether sections and subsections with importance Low and Medium are hidden even on large screens.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowOnlyHighImportance: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"bShowOnlyHighImportance":"type: boolean, description: New value for property <code>showOnlyHighImportance<\/code>"},"!static":false},"attachEditHeaderButtonPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:editHeaderButtonPress editHeaderButtonPress} event of this <code>sap.uxap.ObjectPageLayout<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.uxap.ObjectPageLayout<\/code> itself.\n\nThe event is fired when the Edit Header button is pressed","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.uxap.ObjectPageLayout<\/code> itself"},"!static":false},"getHeaderTitle":{"!description":"Gets content of aggregation {@link #getHeaderTitle headerTitle}.\n\nObject page header title - the upper, always static, part of the Object page header.","!type":"fn() -> sap.uxap.IHeaderTitle","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nDetermines the height of the ObjectPage.\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"indexOfSection":{"!description":"Checks for the provided <code>sap.uxap.ObjectPageSection<\/code> in the aggregation {@link #getSections sections}. and returns its index if found or -1 otherwise.","!type":"fn(oSection: sap.uxap.ObjectPageSection) -> Number","!category":"function","parameters":{"oSection":"type: sap.uxap.ObjectPageSection, description: The section whose index is looked for"},"!static":false},"destroyFooter":{"!description":"Destroys the footer in the aggregation {@link #getFooter footer}.","!type":"fn() -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"getShowAnchorBarPopover":{"!description":"Gets current value of property {@link #getShowAnchorBarPopover showAnchorBarPopover}.\n\nDetermines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setEnableLazyLoading":{"!description":"Sets a new value for property {@link #getEnableLazyLoading enableLazyLoading}.\n\nEnable lazy loading for the Object page Subsections.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bEnableLazyLoading: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"bEnableLazyLoading":"type: boolean, description: New value for property <code>enableLazyLoading<\/code>"},"!static":false},"insertHeaderContent":{"!description":"Inserts a headerContent into the aggregation {@link #getHeaderContent headerContent}.","!type":"fn(oHeaderContent: sap.ui.core.Control, iIndex: Number) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"oHeaderContent":"type: sap.ui.core.Control, description: The headerContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the headerContent should be inserted at; for a negative value of <code>iIndex<\/code>, the headerContent is inserted at position 0; for a value greater than the current size of the aggregation, the headerContent is inserted at the last position"},"!static":false},"destroyHeaderContent":{"!description":"Destroys all the headerContent in the aggregation {@link #getHeaderContent headerContent}.","!type":"fn() -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"addSection":{"!description":"Adds some section to the aggregation {@link #getSections sections}.","!type":"fn(oSection: sap.uxap.ObjectPageSection) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"oSection":"type: sap.uxap.ObjectPageSection, description: The section to add; if empty, nothing is inserted"},"!static":false},"!category":"class","getUseTwoColumnsForLargeScreen":{"!description":"Gets current value of property {@link #getUseTwoColumnsForLargeScreen useTwoColumnsForLargeScreen}.\n\nDetermines whether the to use two column layout for the L screen size.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"destroySections":{"!description":"Destroys all the sections in the aggregation {@link #getSections sections}.","!type":"fn() -> sap.uxap.ObjectPageLayout","!category":"function","!static":false},"setAlwaysShowContentHeader":{"!description":"Sets a new value for property {@link #getAlwaysShowContentHeader alwaysShowContentHeader}.\n\nDetermines whether Header Content will always be expanded on desktop.\n\n<b>Note<\/b>: This property is only taken into account if an instance of <code>sap.uxap.ObjectPageHeader<\/code> is used for the <code>headerTitle<\/code> aggregation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bAlwaysShowContentHeader: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"bAlwaysShowContentHeader":"type: boolean, description: New value for property <code>alwaysShowContentHeader<\/code>"},"!static":false},"fireToggleAnchorBar":{"!description":"Fires event {@link #event:toggleAnchorBar toggleAnchorBar} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getUseIconTabBar":{"!description":"Gets current value of property {@link #getUseIconTabBar useIconTabBar}.\n\nUse tab navigation mode instead of the default Anchor bar mode. <br><b>Note: <\/b>Keep in mind that the <code>sap.m.IconTabBar<\/code> control is no longer used for the tab navigation mode.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setHeaderContentPinnable":{"!description":"Sets a new value for property {@link #getHeaderContentPinnable headerContentPinnable}.\n\nDetermines whether the Header Content area can be pinned.\n\nWhen set to <code>true<\/code>, a pin button is displayed within the Header Content area. The pin button allows the user to make the Header Content always visible at the top of the page above any scrollable content.\n\n<b>Note:<\/b> This property is only taken into account if an instance of <code>sap.uxap.ObjectPageDynamicHeaderTitle<\/code> is used for the <code>headerTitle<\/code> aggregation.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bHeaderContentPinnable: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"bHeaderContentPinnable":"type: boolean, description: New value for property <code>headerContentPinnable<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageLayout with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getEnableLazyLoading":{"!description":"Gets current value of property {@link #getEnableLazyLoading enableLazyLoading}.\n\nEnable lazy loading for the Object page Subsections.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getShowFooter":{"!description":"Gets current value of property {@link #getShowFooter showFooter}.\n\nDetermines whether the footer is visible.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"detachToggleAnchorBar":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:toggleAnchorBar toggleAnchorBar} event of this <code>sap.uxap.ObjectPageLayout<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"removeAllHeaderContent":{"!description":"Removes all the controls from the aggregation {@link #getHeaderContent headerContent}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"setShowAnchorBar":{"!description":"Sets a new value for property {@link #getShowAnchorBar showAnchorBar}.\n\nDetermines whether the Navigation bar (Anchor bar) is displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowAnchorBar: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"bShowAnchorBar":"type: boolean, description: New value for property <code>showAnchorBar<\/code>"},"!static":false},"invalidate":{"!description":"This triggers rerendering of itself and its children.","!type":"fn(oOrigin?: sap.ui.base.ManagedObject)","!category":"function","parameters":{"oOrigin":"type: sap.ui.base.ManagedObject, description: Child control for which the method was called<\/br> If the child is an instance of <code>sap.uxap.ObjectPageSection<\/code> that corresponds to an inactive tab, the invalidation will be suppressed (in iconTabBar mode)"},"!static":false},"getIsChildPage":{"!description":"Gets current value of property {@link #getIsChildPage isChildPage}.\n\nDetermines whether the page is a child page and renders it with a different design. Child pages have an additional (darker/lighter) stripe on the left side of their header content area.\n\n<b>Note<\/b>: This property is only taken into account if an instance of <code>sap.uxap.ObjectPageHeader<\/code> is used for the <code>headerTitle<\/code> aggregation.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getScrollingSectionId":{"!description":"Returns the UI5 ID of the Section that is currently being scrolled.","!type":"fn() -> String","!category":"function","!static":false},"indexOfHeaderContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getHeaderContent headerContent}. and returns its index if found or -1 otherwise.","!type":"fn(oHeaderContent: sap.ui.core.Control) -> Number","!category":"function","parameters":{"oHeaderContent":"type: sap.ui.core.Control, description: The headerContent whose index is looked for"},"!static":false},"!description":"A layout that allows apps to easily display information related to a business object.\n\n<h3>Overview<\/h3>\n\nThe <code>ObjectPageLayout<\/code> layout is composed of a header (title and content), an optional anchor bar and block content wrapped in sections and subsections that structure the information.\n\n<h3>Structure<\/h3>\n\nAn <code>ObjectPageLayout<\/code> control is used to put together all parts of an Object page - Header, optional Anchor Bar and Sections/Subsections.\n\n<h4>Header<\/h4> The <code>ObjectPageLayout<\/code> implements the snapping header concept. This means that the upper part of the header (Header Title) always stays visible, while the lower part (Header Content) can scroll out of view.\n\nHeader Title is displayed at the top of the header and always remains visible above the scrollable content of the page. It contains the title and most prominent details of the object.\n\nThe Header Content scrolls along with the content of the page until it disappears (collapsed header). When scrolled back to the top it becomes visible again (expanded header). It contains all the additional information of the object.\n\n<h4>Anchor Bar<\/h4> The Anchor Bar is an automatically generated internal menu that shows the titles of the sections and subsections and allows the user to scroll to the respective section and subsection content.\n\n<h4>Sections, Subsections, Blocks<\/h4> The content of the page that appears bellow the header is composed of blocks structured into sections and subsections.\n\n<h3>Usage<\/h3> Use the <code>ObjectPageLayout<\/code> if: <ul> <li>The users need to see, edit, or create an item with all its details.<\/li> <li>Users need to get an overview of an object and interact with different parts of the object.<\/li> <\/ul>\n\n<h3>Responsive behavior<\/h3>\n\nThe <code>ObjectPageLayout<\/code> is responsive and adapts to all screen sizes.","attachNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:navigate navigate} event of this <code>sap.uxap.ObjectPageLayout<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.uxap.ObjectPageLayout<\/code> itself.\n\nThe event is fired when the selected section is changed using the navigation.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.uxap.ObjectPageLayout<\/code> itself"},"!static":false},"setSectionTitleLevel":{"!description":"Sets a new value for property {@link #getSectionTitleLevel sectionTitleLevel}.\n\nDetermines the ARIA level of the <code>ObjectPageSection<\/code> and <code>ObjectPageSubSection<\/code> titles. The ARIA level is used by assisting technologies, such as screen readers, to create a hierarchical site map for faster navigation.\n\n<br><b>Note:<\/b> <ul> <li>Defining a <code>sectionTitleLevel<\/code> will add <code>aria-level<\/code> attribute from 1 to 6 instead of changing the titles` HTML tag from H1 to H6. <br>For example: if <code>sectionTitleLevel<\/code> is <code>TitleLevel.H1<\/code>, it will result as aria-level of 1 added to the <code>ObjectPageSection<\/code> title. <\/li>\n\n<li> The <code>ObjectPageSubSection<\/code> title would have <code>aria-level<\/code> one level lower than the defined. For example: if <code>sectionTitleLevel<\/code> is <code>TitleLevel.H1<\/code>, it will result as aria-level of 2 added to the <code>ObjectPageSubSection<\/code> title.<\/li>\n\n<li> It is possible to define a <code>titleLevel<\/code> on <code>ObjectPageSection<\/code> or <code>ObjectPageSubSection<\/code> level. In this case the value of this property will be ignored. <\/li> <\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!type":"fn(sSectionTitleLevel: sap.ui.core.TitleLevel) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"sSectionTitleLevel":"type: sap.ui.core.TitleLevel, description: New value for property <code>sectionTitleLevel<\/code>"},"!static":false},"attachToggleAnchorBar":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:toggleAnchorBar toggleAnchorBar} event of this <code>sap.uxap.ObjectPageLayout<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.uxap.ObjectPageLayout<\/code> itself.\n\nThe event is fired when the Anchor bar is switched from moving to fixed or the other way round.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.uxap.ObjectPageLayout<\/code> itself"},"!static":false},"setUpperCaseAnchorBar":{"!description":"Sets a new value for property {@link #getUpperCaseAnchorBar upperCaseAnchorBar}.\n\nDetermines whether the Anchor bar items are displayed in upper case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bUpperCaseAnchorBar: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"bUpperCaseAnchorBar":"type: boolean, description: New value for property <code>upperCaseAnchorBar<\/code>"},"!static":false},"getSectionTitleLevel":{"!description":"Gets current value of property {@link #getSectionTitleLevel sectionTitleLevel}.\n\nDetermines the ARIA level of the <code>ObjectPageSection<\/code> and <code>ObjectPageSubSection<\/code> titles. The ARIA level is used by assisting technologies, such as screen readers, to create a hierarchical site map for faster navigation.\n\n<br><b>Note:<\/b> <ul> <li>Defining a <code>sectionTitleLevel<\/code> will add <code>aria-level<\/code> attribute from 1 to 6 instead of changing the titles` HTML tag from H1 to H6. <br>For example: if <code>sectionTitleLevel<\/code> is <code>TitleLevel.H1<\/code>, it will result as aria-level of 1 added to the <code>ObjectPageSection<\/code> title. <\/li>\n\n<li> The <code>ObjectPageSubSection<\/code> title would have <code>aria-level<\/code> one level lower than the defined. For example: if <code>sectionTitleLevel<\/code> is <code>TitleLevel.H1<\/code>, it will result as aria-level of 2 added to the <code>ObjectPageSubSection<\/code> title.<\/li>\n\n<li> It is possible to define a <code>titleLevel<\/code> on <code>ObjectPageSection<\/code> or <code>ObjectPageSubSection<\/code> level. In this case the value of this property will be ignored. <\/li> <\/ul>\n\nDefault value is <code>Auto<\/code>.","!type":"fn() -> sap.ui.core.TitleLevel","!category":"function","!static":false},"getUpperCaseAnchorBar":{"!description":"Gets current value of property {@link #getUpperCaseAnchorBar upperCaseAnchorBar}.\n\nDetermines whether the Anchor bar items are displayed in upper case.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getScrollDelegate":{"!description":"Returns an sap.ui.core.delegate.ScrollEnablement object used to handle scrolling","!type":"fn() -> Object","!category":"function","!static":false},"setPreserveHeaderStateOnScroll":{"!description":"Sets a new value for property {@link #getPreserveHeaderStateOnScroll preserveHeaderStateOnScroll}.\n\nPreserves the current header state when scrolling. For example, if the user expands the header by clicking on the title and then scrolls down the page, the header will remain expanded.\n\n<b>Notes:<\/b> <ul><li>This property is only taken into account if an instance of <code>sap.uxap.ObjectPageDynamicHeaderTitle<\/code> is used for the <code>headerTitle<\/code> aggregation.<\/li> <li>Based on internal rules, the value of the property is not always taken into account - for example, when the control is rendered on tablet or mobile and the control`s title and header are with height larger than the given threshold.<\/li><\/ul>\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bPreserveHeaderStateOnScroll: Boolean) -> sap.uxap.ObjectPageLayout","!category":"function","parameters":{"bPreserveHeaderStateOnScroll":"type: boolean, description: New value for property <code>preserveHeaderStateOnScroll<\/code>"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageLayout.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.uxap.ObjectPageHeaderActionButton":{"setImportance":{"!description":"Sets a new value for property {@link #getImportance importance}.\n\nDetermines the order in which the button overflows.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>High<\/code>.","!type":"fn(sImportance: sap.uxap.Importance) -> sap.uxap.ObjectPageHeaderActionButton","!category":"function","parameters":{"sImportance":"type: sap.uxap.Importance, description: New value for property <code>importance<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageHeaderActionButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Button.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new <code>ObjectPageHeaderActionButton<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHideText hideText} : boolean (default: true)<\/li>\n<li>{@link #getHideIcon hideIcon} : boolean (default: false)<\/li>\n<li>{@link #getImportance importance} : sap.uxap.Importance (default: High)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Button#constructor sap.m.Button}\ncan be used as well.","!module":"sap/uxap/ObjectPageHeaderActionButton","setHideIcon":{"!description":"Sets a new value for property {@link #getHideIcon hideIcon}.\n\nHide the button icon when rendered into the headerTitle part of the ObjectPageLayout. This is useful if you want to display texts only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bHideIcon: Boolean) -> sap.uxap.ObjectPageHeaderActionButton","!category":"function","parameters":{"bHideIcon":"type: boolean, description: New value for property <code>hideIcon<\/code>"},"!static":false},"getImportance":{"!description":"Gets current value of property {@link #getImportance importance}.\n\nDetermines the order in which the button overflows.\n\nDefault value is <code>High<\/code>.","!type":"fn() -> sap.uxap.Importance","!category":"function","!static":false},"!description":"A Button that is used in the <code>actions<\/code> aggregation of the {@link sap.uxap.ObjectPageHeader}.","!category":"class","setHideText":{"!description":"Sets a new value for property {@link #getHideText hideText}.\n\nHide the button text when rendered into the headerTitle part of the ObjectPageLayout. This is useful if you want to display icons only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bHideText: Boolean) -> sap.uxap.ObjectPageHeaderActionButton","!category":"function","parameters":{"bHideText":"type: boolean, description: New value for property <code>hideText<\/code>"},"!static":false},"getHideText":{"!description":"Gets current value of property {@link #getHideText hideText}.\n\nHide the button text when rendered into the headerTitle part of the ObjectPageLayout. This is useful if you want to display icons only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getHideIcon":{"!description":"Gets current value of property {@link #getHideIcon hideIcon}.\n\nHide the button icon when rendered into the headerTitle part of the ObjectPageLayout. This is useful if you want to display texts only in the headerTitle part but still want to display text + icon in the actionSheet that appears when not enough space is available on the screen for displaying all actions.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!helpDescription":"A Button that is used in the <code>actions<\/code> aggregation of the {@link sap.uxap.ObjectPageHeader}.","!proto":"sap.m.Button","getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageHeaderActionButton.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.uxap.IHeaderTitle":{"!description":"Interface for controls that are eligible for the <code>headerTitle<\/code> aggregation of the <code>{@link sap.uxap.ObjectPageLayout}<\/code>.\n\nControls that implement this interface: <ul> <li><code>{@link sap.uxap.ObjectPageHeader}<\/code> - <code>ObjectPageLayout<\/code>'s classic header<\/code><\/li> <li><code>{@link sap.uxap.ObjectPageDynamicHeaderTitle}<\/code> - <code>ObjectPageLayout<\/code>'s dynamic header<\/code><\/li> <\/ul>\n\nFor more information on the types of header available for the <code>{@link sap.uxap.ObjectPageLayout ObjectPageLayout}<\/code>, see {@link topic:d2ef0099542d44dc868719d908e576d0 Object Page Headers}.\n\nFor details regarding the differences and similarities between the available headers, see {@link topic:9c9d94fd28284539a9a5a57e9caf82a8 Object Page Headers Comparison}.","!category":"static class","!module":"sap/uxap/library"},"sap.uxap.ObjectPageHeader":{"removeAllBreadCrumbsLinks":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.50 use the <code>breadcrumbs<\/code> aggregation instead.<br>Removes all the controls from the aggregation {@link #getBreadCrumbsLinks breadCrumbsLinks}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"detachTitleSelectorPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:titleSelectorPress titleSelectorPress} event of this <code>sap.uxap.ObjectPageHeader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getMarkFavorite":{"!description":"Gets current value of property {@link #getMarkFavorite markFavorite}.\n\nSet the favorite state to true or false. The showMarkers property must be true for this property to take effect.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"destroyBreadCrumbsLinks":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.50 use the <code>breadcrumbs<\/code> aggregation instead.<br>Destroys all the breadCrumbsLinks in the aggregation {@link #getBreadCrumbsLinks breadCrumbsLinks}.","!type":"fn() -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"!module":"sap/uxap/ObjectPageHeader","setHeaderDesign":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.1 undefined<br>Sets a new value for property {@link #getHeaderDesign headerDesign}.\n\nDetermines the design of the header - Light or Dark. <b>Note: <\/b>This property is deprecated. It will continue to work in the Blue Crystal theme, but it will not be taken into account for the Belize themes.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Light<\/code>.","!type":"fn(sHeaderDesign: sap.uxap.ObjectPageHeaderDesign) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"sHeaderDesign":"type: sap.uxap.ObjectPageHeaderDesign, description: New value for property <code>headerDesign<\/code>"},"!static":false},"getMarkChanges":{"!description":"Gets current value of property {@link #getMarkChanges markChanges}.\n\nMarks that there are unsaved changes in the objectPageHeader. The markChanges state cannot be used together with the markLocked state. If both are set to true, only the locked state will be displayed.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getIsObjectSubtitleAlwaysVisible":{"!description":"Gets current value of property {@link #getIsObjectSubtitleAlwaysVisible isObjectSubtitleAlwaysVisible}.\n\nDetermines whether the subtitle should always be visible or visible only when the header is snapped.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setObjectImageAlt":{"!description":"Sets a new value for property {@link #getObjectImageAlt objectImageAlt}.\n\nThe text to be used for the Alt and Tooltip attribute of the image, supplied via the objectImageURI property\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!type":"fn(sObjectImageAlt: String) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"sObjectImageAlt":"type: string, description: New value for property <code>objectImageAlt<\/code>"},"!static":false},"setIsObjectSubtitleAlwaysVisible":{"!description":"Sets a new value for property {@link #getIsObjectSubtitleAlwaysVisible isObjectSubtitleAlwaysVisible}.\n\nDetermines whether the subtitle should always be visible or visible only when the header is snapped.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bIsObjectSubtitleAlwaysVisible: Boolean) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"bIsObjectSubtitleAlwaysVisible":"type: boolean, description: New value for property <code>isObjectSubtitleAlwaysVisible<\/code>"},"!static":false},"getObjectImageDensityAware":{"!description":"Gets current value of property {@link #getObjectImageDensityAware objectImageDensityAware}.\n\nThe value of densityAware for the image, supplied via the objectImageURI property. See sap.m.Image for more details on densityAware.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getMarkFlagged":{"!description":"Gets current value of property {@link #getMarkFlagged markFlagged}.\n\nSet the flagged state to true or false. The showMarkers property must be true for this property to take effect.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getBreadcrumbs":{"!description":"Gets content of aggregation {@link #getBreadcrumbs breadcrumbs}.\n\nThe breadcrumbs displayed in the <code>ObjectPageHeader<\/code>. If this aggregation is set, the <code>breadCrumbsLinks<\/code> aggregation is omitted.","!type":"fn() -> sap.m.Breadcrumbs","!category":"function","!static":false},"setObjectImageShape":{"!description":"Sets a new value for property {@link #getObjectImageShape objectImageShape}.\n\nDetermines whether the picture should be displayed in a square or with a circle-shaped mask.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Square<\/code>.","!type":"fn(sObjectImageShape: sap.uxap.ObjectPageHeaderPictureShape) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"sObjectImageShape":"type: sap.uxap.ObjectPageHeaderPictureShape, description: New value for property <code>objectImageShape<\/code>"},"!static":false},"destroyNavigationBar":{"!description":"Destroys the navigationBar in the aggregation {@link #getNavigationBar navigationBar}.","!type":"fn() -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"setNavigationBar":{"!description":"Sets the aggregated {@link #getNavigationBar navigationBar}.","!type":"fn(oNavigationBar: sap.m.Bar) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"oNavigationBar":"type: sap.m.Bar, description: The navigationBar to set"},"!static":false},"getIsActionAreaAlwaysVisible":{"!description":"Gets current value of property {@link #getIsActionAreaAlwaysVisible isActionAreaAlwaysVisible}.\n\nDetermines whether the action buttons should always be visible or visible only when the header is snapped.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getActions":{"!description":"Gets content of aggregation {@link #getActions actions}.\n\nList of actions that will be displayed in the header. You can use ObjectPageHeaderActionButton controls to achieve a different visual representation of the action buttons in the action bar and the action sheet (overflow menu). You can use ObjectPageHeaderLayoutData to display a visual separator.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"!constructorDescription":"Constructor for a new <code>ObjectPageHeader<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getObjectImageURI objectImageURI} : string<\/li>\n<li>{@link #getObjectImageAlt objectImageAlt} : string (default: )<\/li>\n<li>{@link #getObjectImageDensityAware objectImageDensityAware} : boolean (default: false)<\/li>\n<li>{@link #getObjectTitle objectTitle} : string<\/li>\n<li>{@link #getObjectSubtitle objectSubtitle} : string<\/li>\n<li>{@link #getObjectImageShape objectImageShape} : sap.uxap.ObjectPageHeaderPictureShape (default: Square)<\/li>\n<li>{@link #getIsObjectIconAlwaysVisible isObjectIconAlwaysVisible} : boolean (default: false)<\/li>\n<li>{@link #getIsObjectTitleAlwaysVisible isObjectTitleAlwaysVisible} : boolean (default: true)<\/li>\n<li>{@link #getIsObjectSubtitleAlwaysVisible isObjectSubtitleAlwaysVisible} : boolean (default: true)<\/li>\n<li>{@link #getIsActionAreaAlwaysVisible isActionAreaAlwaysVisible} : boolean (default: true)<\/li>\n<li>{@link #getHeaderDesign headerDesign} : sap.uxap.ObjectPageHeaderDesign (default: Light)<\/li>\n<li>{@link #getShowTitleSelector showTitleSelector} : boolean (default: false)<\/li>\n<li>{@link #getMarkFavorite markFavorite} : boolean (default: false)<\/li>\n<li>{@link #getMarkFlagged markFlagged} : boolean (default: false)<\/li>\n<li>{@link #getShowMarkers showMarkers} : boolean (default: false)<\/li>\n<li>{@link #getMarkLocked markLocked} : boolean (default: false)<\/li>\n<li>{@link #getShowPlaceholder showPlaceholder} : boolean (default: false)<\/li>\n<li>{@link #getMarkChanges markChanges} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getBreadcrumbs breadcrumbs} : sap.m.Breadcrumbs<\/li>\n<li>{@link #getBreadCrumbsLinks breadCrumbsLinks} : sap.m.Link[]<\/li>\n<li>{@link #getNavigationBar navigationBar} : sap.m.Bar<\/li>\n<li>{@link #getActions actions} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getSideContentButton sideContentButton} : sap.m.Button<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:titleSelectorPress titleSelectorPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:markLockedPress markLockedPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:markChangesPress markChangesPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","insertAction":{"!description":"Inserts a action into the aggregation {@link #getActions actions}.","!type":"fn(oAction: sap.ui.core.Control, iIndex: Number) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"oAction":"type: sap.ui.core.Control, description: The action to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the action should be inserted at; for a negative value of <code>iIndex<\/code>, the action is inserted at position 0; for a value greater than the current size of the aggregation, the action is inserted at the last position"},"!static":false},"detachMarkLockedPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:markLockedPress markLockedPress} event of this <code>sap.uxap.ObjectPageHeader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setShowTitleSelector":{"!description":"Sets a new value for property {@link #getShowTitleSelector showTitleSelector}.\n\nWhen set to true, the selector arrow icon/image is shown and can be pressed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowTitleSelector: Boolean) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"bShowTitleSelector":"type: boolean, description: New value for property <code>showTitleSelector<\/code>"},"!static":false},"destroyActions":{"!description":"Destroys all the actions in the aggregation {@link #getActions actions}.","!type":"fn() -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"setMarkChanges":{"!description":"Sets a new value for property {@link #getMarkChanges markChanges}.\n\nMarks that there are unsaved changes in the objectPageHeader. The markChanges state cannot be used together with the markLocked state. If both are set to true, only the locked state will be displayed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bMarkChanges: Boolean) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"bMarkChanges":"type: boolean, description: New value for property <code>markChanges<\/code>"},"!static":false},"setIsObjectIconAlwaysVisible":{"!description":"Sets a new value for property {@link #getIsObjectIconAlwaysVisible isObjectIconAlwaysVisible}.\n\nDetermines whether the icon should always be visible or visible only when the header is snapped.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bIsObjectIconAlwaysVisible: Boolean) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"bIsObjectIconAlwaysVisible":"type: boolean, description: New value for property <code>isObjectIconAlwaysVisible<\/code>"},"!static":false},"detachMarkChangesPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:markChangesPress markChangesPress} event of this <code>sap.uxap.ObjectPageHeader<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setBreadcrumbs":{"!description":"Sets the aggregated {@link #getBreadcrumbs breadcrumbs}.","!type":"fn(oBreadcrumbs: sap.m.Breadcrumbs) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"oBreadcrumbs":"type: sap.m.Breadcrumbs, description: The breadcrumbs to set"},"!static":false},"!helpDescription":"Represents the static part (header title) of the classic header of the {@link sap.uxap.ObjectPageLayout}.\n\n<h3>Overview<\/h3>\n\nThe <code>ObjectPageHeader<\/code> is used to display the basic information about a business object, such as title/description/picture, as well as a list of common actions.\n\n<b>Note:<\/b> The <code>ObjectPageHeader<\/code> is meant to be used inside the <code>ObjectPageLayout<\/code> control. Any other usage is not supported and can lead to unexpected behavior.","!proto":"sap.ui.core.Control","setMarkLocked":{"!description":"Sets a new value for property {@link #getMarkLocked markLocked}.\n\nSet the locked state of the objectPageHeader.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bMarkLocked: Boolean) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"bMarkLocked":"type: boolean, description: New value for property <code>markLocked<\/code>"},"!static":false},"setObjectImageDensityAware":{"!description":"Sets a new value for property {@link #getObjectImageDensityAware objectImageDensityAware}.\n\nThe value of densityAware for the image, supplied via the objectImageURI property. See sap.m.Image for more details on densityAware.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bObjectImageDensityAware: Boolean) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"bObjectImageDensityAware":"type: boolean, description: New value for property <code>objectImageDensityAware<\/code>"},"!static":false},"getBreadCrumbsLinks":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.50 use the <code>breadcrumbs<\/code> aggregation instead.<br>Gets content of aggregation {@link #getBreadCrumbsLinks breadCrumbsLinks}.\n\nA list of all the active link elements in the BreadCrumbs control.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"destroySideContentButton":{"!description":"Destroys the sideContentButton in the aggregation {@link #getSideContentButton sideContentButton}.","!type":"fn() -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"setMarkFavorite":{"!description":"Sets a new value for property {@link #getMarkFavorite markFavorite}.\n\nSet the favorite state to true or false. The showMarkers property must be true for this property to take effect.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bMarkFavorite: Boolean) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"bMarkFavorite":"type: boolean, description: New value for property <code>markFavorite<\/code>"},"!static":false},"getSideContentButton":{"!description":"Gets content of aggregation {@link #getSideContentButton sideContentButton}.\n\nA button that is used for opening the side content of the page or some additional content.","!type":"fn() -> sap.m.Button","!category":"function","!static":false},"setObjectImageURI":{"!description":"Sets a new value for property {@link #getObjectImageURI objectImageURI}.\n\nThe URL of the image, representing the business object\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sObjectImageURI: String) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"sObjectImageURI":"type: string, description: New value for property <code>objectImageURI<\/code>"},"!static":false},"getHeaderDesign":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.40.1 undefined<br>Gets current value of property {@link #getHeaderDesign headerDesign}.\n\nDetermines the design of the header - Light or Dark. <b>Note: <\/b>This property is deprecated. It will continue to work in the Blue Crystal theme, but it will not be taken into account for the Belize themes.\n\nDefault value is <code>Light<\/code>.","!type":"fn() -> sap.uxap.ObjectPageHeaderDesign","!category":"function","!static":false},"removeAllActions":{"!description":"Removes all the controls from the aggregation {@link #getActions actions}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"removeBreadCrumbLink":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.50 use the <code>breadcrumbs<\/code> aggregation instead.<br>Removes a breadCrumbLink from the aggregation {@link #getBreadCrumbsLinks breadCrumbsLinks}.","!type":"fn(vBreadCrumbLink: Number | String | sap.m.Link) -> sap.m.Link","!category":"function","parameters":{"vBreadCrumbLink":"type: int|string|sap.m.Link, description: The breadCrumbLink to remove or its index or id"},"!static":false},"!category":"class","getObjectImageAlt":{"!description":"Gets current value of property {@link #getObjectImageAlt objectImageAlt}.\n\nThe text to be used for the Alt and Tooltip attribute of the image, supplied via the objectImageURI property\n\nDefault value is <code>empty string<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"setIsObjectTitleAlwaysVisible":{"!description":"Sets a new value for property {@link #getIsObjectTitleAlwaysVisible isObjectTitleAlwaysVisible}.\n\nDetermines whether the title should always be visible or visible only when the header is snapped.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bIsObjectTitleAlwaysVisible: Boolean) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"bIsObjectTitleAlwaysVisible":"type: boolean, description: New value for property <code>isObjectTitleAlwaysVisible<\/code>"},"!static":false},"setIsActionAreaAlwaysVisible":{"!description":"Sets a new value for property {@link #getIsActionAreaAlwaysVisible isActionAreaAlwaysVisible}.\n\nDetermines whether the action buttons should always be visible or visible only when the header is snapped.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bIsActionAreaAlwaysVisible: Boolean) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"bIsActionAreaAlwaysVisible":"type: boolean, description: New value for property <code>isActionAreaAlwaysVisible<\/code>"},"!static":false},"setObjectTitle":{"!description":"Sets a new value for property {@link #getObjectTitle objectTitle}.\n\nThe title of the object\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sObjectTitle: String) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"sObjectTitle":"type: string, description: New value for property <code>objectTitle<\/code>"},"!static":false},"indexOfAction":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getActions actions}. and returns its index if found or -1 otherwise.","!type":"fn(oAction: sap.ui.core.Control) -> Number","!category":"function","parameters":{"oAction":"type: sap.ui.core.Control, description: The action whose index is looked for"},"!static":false},"fireMarkChangesPress":{"!description":"Fires event {@link #event:markChangesPress markChangesPress} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getObjectImageShape":{"!description":"Gets current value of property {@link #getObjectImageShape objectImageShape}.\n\nDetermines whether the picture should be displayed in a square or with a circle-shaped mask.\n\nDefault value is <code>Square<\/code>.","!type":"fn() -> sap.uxap.ObjectPageHeaderPictureShape","!category":"function","!static":false},"getObjectTitle":{"!description":"Gets current value of property {@link #getObjectTitle objectTitle}.\n\nThe title of the object","!type":"fn() -> String","!category":"function","!static":false},"setMarkFlagged":{"!description":"Sets a new value for property {@link #getMarkFlagged markFlagged}.\n\nSet the flagged state to true or false. The showMarkers property must be true for this property to take effect.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bMarkFlagged: Boolean) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"bMarkFlagged":"type: boolean, description: New value for property <code>markFlagged<\/code>"},"!static":false},"getShowTitleSelector":{"!description":"Gets current value of property {@link #getShowTitleSelector showTitleSelector}.\n\nWhen set to true, the selector arrow icon/image is shown and can be pressed.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageHeader with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"attachMarkChangesPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:markChangesPress markChangesPress} event of this <code>sap.uxap.ObjectPageHeader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.uxap.ObjectPageHeader<\/code> itself.\n\nThe event is fired when the unsaved changes button is pressed","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.uxap.ObjectPageHeader<\/code> itself"},"!static":false},"setSideContentButton":{"!description":"Sets the aggregated {@link #getSideContentButton sideContentButton}.","!type":"fn(oSideContentButton: sap.m.Button) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"oSideContentButton":"type: sap.m.Button, description: The sideContentButton to set"},"!static":false},"attachTitleSelectorPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:titleSelectorPress titleSelectorPress} event of this <code>sap.uxap.ObjectPageHeader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.uxap.ObjectPageHeader<\/code> itself.\n\nThe event is fired when the objectPage header title selector (down-arrow) is pressed","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.uxap.ObjectPageHeader<\/code> itself"},"!static":false},"getObjectImageURI":{"!description":"Gets current value of property {@link #getObjectImageURI objectImageURI}.\n\nThe URL of the image, representing the business object","!type":"fn() -> String","!category":"function","!static":false},"insertBreadCrumbLink":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.50 use the <code>breadcrumbs<\/code> aggregation instead.<br>Inserts a breadCrumbLink into the aggregation {@link #getBreadCrumbsLinks breadCrumbsLinks}.","!type":"fn(oBreadCrumbLink: sap.m.Link, iIndex: Number) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the breadCrumbLink should be inserted at; for a negative value of <code>iIndex<\/code>, the breadCrumbLink is inserted at position 0; for a value greater than the current size of the aggregation, the breadCrumbLink is inserted at the last position","oBreadCrumbLink":"type: sap.m.Link, description: The breadCrumbLink to insert; if empty, nothing is inserted"},"!static":false},"attachMarkLockedPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:markLockedPress markLockedPress} event of this <code>sap.uxap.ObjectPageHeader<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.uxap.ObjectPageHeader<\/code> itself.\n\nThe event is fired when the Locked button is pressed","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.uxap.ObjectPageHeader<\/code> itself"},"!static":false},"destroyBreadcrumbs":{"!description":"Destroys the breadcrumbs in the aggregation {@link #getBreadcrumbs breadcrumbs}.","!type":"fn() -> sap.uxap.ObjectPageHeader","!category":"function","!static":false},"getNavigationBar":{"!description":"Gets content of aggregation {@link #getNavigationBar navigationBar}.\n\nAn instance of sap.m.Bar to be embedded in the header","!type":"fn() -> sap.m.Bar","!category":"function","!static":false},"!description":"Represents the static part (header title) of the classic header of the {@link sap.uxap.ObjectPageLayout}.\n\n<h3>Overview<\/h3>\n\nThe <code>ObjectPageHeader<\/code> is used to display the basic information about a business object, such as title/description/picture, as well as a list of common actions.\n\n<b>Note:<\/b> The <code>ObjectPageHeader<\/code> is meant to be used inside the <code>ObjectPageLayout<\/code> control. Any other usage is not supported and can lead to unexpected behavior.","addBreadCrumbLink":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.50 use the <code>breadcrumbs<\/code> aggregation instead.<br>Adds some breadCrumbLink to the aggregation {@link #getBreadCrumbsLinks breadCrumbsLinks}.","!type":"fn(oBreadCrumbLink: sap.m.Link) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"oBreadCrumbLink":"type: sap.m.Link, description: The breadCrumbLink to add; if empty, nothing is inserted"},"!static":false},"indexOfBreadCrumbLink":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.50 use the <code>breadcrumbs<\/code> aggregation instead.<br>Checks for the provided <code>sap.m.Link<\/code> in the aggregation {@link #getBreadCrumbsLinks breadCrumbsLinks}. and returns its index if found or -1 otherwise.","!type":"fn(oBreadCrumbLink: sap.m.Link) -> Number","!category":"function","parameters":{"oBreadCrumbLink":"type: sap.m.Link, description: The breadCrumbLink whose index is looked for"},"!static":false},"getShowMarkers":{"!description":"Gets current value of property {@link #getShowMarkers showMarkers}.\n\nIndicates if object page header title supports showing markers such as flagged and favorite.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"fireMarkLockedPress":{"!description":"Fires event {@link #event:markLockedPress markLockedPress} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getIsObjectTitleAlwaysVisible":{"!description":"Gets current value of property {@link #getIsObjectTitleAlwaysVisible isObjectTitleAlwaysVisible}.\n\nDetermines whether the title should always be visible or visible only when the header is snapped.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setShowPlaceholder":{"!description":"Sets a new value for property {@link #getShowPlaceholder showPlaceholder}.\n\nEnables support of a placeholder image in case no image is specified or the URL of the provided image is invalid.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowPlaceholder: Boolean) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"bShowPlaceholder":"type: boolean, description: New value for property <code>showPlaceholder<\/code>"},"!static":false},"fireTitleSelectorPress":{"!description":"Fires event {@link #event:titleSelectorPress titleSelectorPress} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setShowMarkers":{"!description":"Sets a new value for property {@link #getShowMarkers showMarkers}.\n\nIndicates if object page header title supports showing markers such as flagged and favorite.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bShowMarkers: Boolean) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"bShowMarkers":"type: boolean, description: New value for property <code>showMarkers<\/code>"},"!static":false},"addAction":{"!description":"Adds some action to the aggregation {@link #getActions actions}.","!type":"fn(oAction: sap.ui.core.Control) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"oAction":"type: sap.ui.core.Control, description: The action to add; if empty, nothing is inserted"},"!static":false},"getMarkLocked":{"!description":"Gets current value of property {@link #getMarkLocked markLocked}.\n\nSet the locked state of the objectPageHeader.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"removeAction":{"!description":"Removes a action from the aggregation {@link #getActions actions}.","!type":"fn(vAction: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","parameters":{"vAction":"type: int|string|sap.ui.core.Control, description: The action to remove or its index or id"},"!static":false},"getIsObjectIconAlwaysVisible":{"!description":"Gets current value of property {@link #getIsObjectIconAlwaysVisible isObjectIconAlwaysVisible}.\n\nDetermines whether the icon should always be visible or visible only when the header is snapped.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getObjectSubtitle":{"!description":"Gets current value of property {@link #getObjectSubtitle objectSubtitle}.\n\nThe description of the object","!type":"fn() -> String","!category":"function","!static":false},"setObjectSubtitle":{"!description":"Sets a new value for property {@link #getObjectSubtitle objectSubtitle}.\n\nThe description of the object\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sObjectSubtitle: String) -> sap.uxap.ObjectPageHeader","!category":"function","parameters":{"sObjectSubtitle":"type: string, description: New value for property <code>objectSubtitle<\/code>"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageHeader.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"getShowPlaceholder":{"!description":"Gets current value of property {@link #getShowPlaceholder showPlaceholder}.\n\nEnables support of a placeholder image in case no image is specified or the URL of the provided image is invalid.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false}},"sap.uxap.ObjectPageSubSection_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageSubSection with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.uxap.ObjectPageSectionBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageSubSection"},"sap.uxap.ObjectPageDynamicHeaderTitle_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageDynamicHeaderTitle with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.DynamicPageTitle.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageDynamicHeaderTitle"},"sap.uxap.ObjectPageDynamicHeaderTitle":{"!description":"Represents the static part (header title) of the dynamic header of the {@link sap.uxap.ObjectPageLayout}.\n\n<h3>Overview<\/h3>\n\nThe <code>ObjectPageDynamicHeaderTitle<\/code> is used to represent the most important details of the displayed business object, such as the object title and actions that the user can perform.\n\n<b>Note:<\/b> The <code>ObjectPageDynamicHeaderTitle<\/code> is meant to be used inside the <code>ObjectPageLayout<\/code> control. Any other usage is not supported and can lead to unexpected behavior.","extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageDynamicHeaderTitle with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.f.DynamicPageTitle.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new <code>ObjectPageDynamicHeaderTitle<\/code>.","!module":"sap/uxap/ObjectPageDynamicHeaderTitle","getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageDynamicHeaderTitle.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.f.DynamicPageTitle","!helpDescription":"Represents the static part (header title) of the dynamic header of the {@link sap.uxap.ObjectPageLayout}.\n\n<h3>Overview<\/h3>\n\nThe <code>ObjectPageDynamicHeaderTitle<\/code> is used to represent the most important details of the displayed business object, such as the object title and actions that the user can perform.\n\n<b>Note:<\/b> The <code>ObjectPageDynamicHeaderTitle<\/code> is meant to be used inside the <code>ObjectPageLayout<\/code> control. Any other usage is not supported and can lead to unexpected behavior."},"sap.uxap.ObjectPageHeaderDesign":{"!description":"Used by the <code>ObjectPageHeader<\/code> control to define which design to use.","Dark":{"!description":"Dark theme for the <code>ObjectPageHeader<\/code>.","!type":"String","!category":"enum"},"!category":"static class","Light":{"!description":"Light theme for the <code>ObjectPageHeader<\/code>.","!type":"String","!category":"enum"},"!module":"sap/uxap/library"},"sap.uxap.ObjectPageConfigurationMode":{"!description":"Used by the <code>sap.uxap.component.Component<\/code> how to initialize the <code>ObjectPageLayout<\/code> sections and subsections.","JsonModel":{"!description":"Determines the JSON model.","!type":"String","!category":"enum"},"JsonURL":{"!description":"Determines the JSON URL.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/uxap/library"},"sap.uxap.ObjectPageLazyLoader":{"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!type":"fn(oContent: sap.ui.core.Control) -> sap.uxap.ObjectPageLazyLoader","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"},"!static":false},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nControls to be displayed after this element is unstashed","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageLazyLoader with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"},"!static":false},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"},"!static":false},"!constructorDescription":"Constructor for a new <code>ObjectPageLazyLoader<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/uxap/ObjectPageLazyLoader","destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!type":"fn() -> sap.uxap.ObjectPageLazyLoader","!category":"function","!static":false},"!description":"A helper element that enables a \"stashed-based\" lazy loading approach for the content of the {@link sap.uxap.ObjectPageSubSection} control.\n\n<code>ObjectPageLazyLoader<\/code> is intended to be used in a declarative way only (for example, in a view) with the <code>stashed<\/code> property set to <code>true<\/code>, and is recommended to be used only once per subsection as its sole content.\n\n<code>ObjectPageLazyLoader<\/code> utilizes UI5's stashing mechanism and is a lightweight alternative to the native block-based Lazy Loading of the <code>ObjectPageLayout<\/code>. Wrapping the content of a subsection in an <code>ObjectPageLazyLoader<\/code> with <code>stashed=true<\/code> will make the content unstash automatically as the user scrolls.\n\n<b>Note:<\/b> Subsections are required to have an ID when used with <code>ObjectPageLazyLoader<\/code>.","insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.uxap.ObjectPageLazyLoader","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"},"!static":false},"!category":"class","!helpDescription":"A helper element that enables a \"stashed-based\" lazy loading approach for the content of the {@link sap.uxap.ObjectPageSubSection} control.\n\n<code>ObjectPageLazyLoader<\/code> is intended to be used in a declarative way only (for example, in a view) with the <code>stashed<\/code> property set to <code>true<\/code>, and is recommended to be used only once per subsection as its sole content.\n\n<code>ObjectPageLazyLoader<\/code> utilizes UI5's stashing mechanism and is a lightweight alternative to the native block-based Lazy Loading of the <code>ObjectPageLayout<\/code>. Wrapping the content of a subsection in an <code>ObjectPageLazyLoader<\/code> with <code>stashed=true<\/code> will make the content unstash automatically as the user scrolls.\n\n<b>Note:<\/b> Subsections are required to have an ID when used with <code>ObjectPageLazyLoader<\/code>.","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageLazyLoader.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.uxap.ObjectPageHeaderActionButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageHeaderActionButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Button.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageHeaderActionButton"},"sap.uxap.BlockBaseColumnLayout":{"!description":"Used by the <code>BlockBase<\/code> control to define how many columns should it be assigned by the <code>objectPageSubSection<\/code>. The allowed values can be auto (subsection assigned a number of columns based on the parent objectPageLayout subsectionLayout property), 1, 2 or 3 (This may not be a valid value for some <code>subSectionLayout<\/code>, for example, asking for 3 columns in a 2 column layout would raise warnings).","!category":"namespace","!module":"sap/uxap/library","!helpDescription":"Used by the <code>BlockBase<\/code> control to define how many columns should it be assigned by the <code>objectPageSubSection<\/code>. The allowed values can be auto (subsection assigned a number of columns based on the parent objectPageLayout subsectionLayout property), 1, 2 or 3 (This may not be a valid value for some <code>subSectionLayout<\/code>, for example, asking for 3 columns in a 2 column layout would raise warnings)."},"sap":{"sap":"sap","uxap":"sap.uxap","!category":"namespace"},"sap.uxap.BreadCrumbs":{"removeAllLinks":{"!description":"Removes all the controls from the aggregation {@link #getLinks links}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"destroyLinks":{"!description":"Destroys all the links in the aggregation {@link #getLinks links}.","!type":"fn() -> sap.uxap.BreadCrumbs","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.uxap.BreadCrumbs with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"indexOfLink":{"!description":"Checks for the provided <code>sap.m.Link<\/code> in the aggregation {@link #getLinks links}. and returns its index if found or -1 otherwise.","!type":"fn(oLink: sap.m.Link) -> Number","!category":"function","parameters":{"oLink":"type: sap.m.Link, description: The link whose index is looked for"},"!static":false},"getShowCurrentLocation":{"!description":"Gets current value of property {@link #getShowCurrentLocation showCurrentLocation}.\n\nSets the visibility of the current/last element in the BreadCrumbs path.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"destroyCurrentLocation":{"!description":"Destroys the currentLocation in the aggregation {@link #getCurrentLocation currentLocation}.","!type":"fn() -> sap.uxap.BreadCrumbs","!category":"function","!static":false},"!constructorDescription":"Constructor for a new <code>BreadCrumbs<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowCurrentLocation showCurrentLocation} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getLinks links} : sap.m.Link[] (default)<\/li>\n<li>{@link #getCurrentLocation currentLocation} : sap.m.Text<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/uxap/BreadCrumbs","getLinks":{"!description":"Gets content of aggregation {@link #getLinks links}.\n\nA list of all the active link elements in the BreadCrumbs control.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"!description":"Represents the navigation steps up to the current location in the app.\n\n<h3>Overview<\/h3>\n\nThe <code>BreadCrumbs<\/code> control allows the users to quickly navigate to a previous location on the path that got them to the current location by choosing the displayed navigation steps.\n\nIt has two main modes of operation: <ul> <li>A trail of links followed by separators, when there's enough space for the control to fit on one line.<\/li> <li>A dropdown list with the links, when the trail of links wouldn't fit on one line.<\/li> <\/ul>","setShowCurrentLocation":{"!description":"Sets a new value for property {@link #getShowCurrentLocation showCurrentLocation}.\n\nSets the visibility of the current/last element in the BreadCrumbs path.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowCurrentLocation: Boolean) -> sap.uxap.BreadCrumbs","!category":"function","parameters":{"bShowCurrentLocation":"type: boolean, description: New value for property <code>showCurrentLocation<\/code>"},"!static":false},"addLink":{"!description":"Adds some link to the aggregation {@link #getLinks links}.","!type":"fn(oLink: sap.m.Link) -> sap.uxap.BreadCrumbs","!category":"function","parameters":{"oLink":"type: sap.m.Link, description: The link to add; if empty, nothing is inserted"},"!static":false},"setCurrentLocation":{"!description":"Sets the aggregated {@link #getCurrentLocation currentLocation}.","!type":"fn(oCurrentLocation: sap.m.Text) -> sap.uxap.BreadCrumbs","!category":"function","parameters":{"oCurrentLocation":"type: sap.m.Text, description: The currentLocation to set"},"!static":false},"removeLink":{"!description":"Removes a link from the aggregation {@link #getLinks links}.","!type":"fn(vLink: Number | String | sap.m.Link) -> sap.m.Link","!category":"function","parameters":{"vLink":"type: int|string|sap.m.Link, description: The link to remove or its index or id"},"!static":false},"!category":"class","getCurrentLocation":{"!description":"Gets content of aggregation {@link #getCurrentLocation currentLocation}.\n\nThe current/last element in the BreadCrumbs path.","!type":"fn() -> sap.m.Text","!category":"function","!static":false},"insertLink":{"!description":"Inserts a link into the aggregation {@link #getLinks links}.","!type":"fn(oLink: sap.m.Link, iIndex: Number) -> sap.uxap.BreadCrumbs","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the link should be inserted at; for a negative value of <code>iIndex<\/code>, the link is inserted at position 0; for a value greater than the current size of the aggregation, the link is inserted at the last position","oLink":"type: sap.m.Link, description: The link to insert; if empty, nothing is inserted"},"!static":false},"!helpDescription":"Represents the navigation steps up to the current location in the app.\n\n<h3>Overview<\/h3>\n\nThe <code>BreadCrumbs<\/code> control allows the users to quickly navigate to a previous location on the path that got them to the current location by choosing the displayed navigation steps.\n\nIt has two main modes of operation: <ul> <li>A trail of links followed by separators, when there's enough space for the control to fit on one line.<\/li> <li>A dropdown list with the links, when the trail of links wouldn't fit on one line.<\/li> <\/ul>","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.uxap.BreadCrumbs.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.uxap.ModelMapping_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ModelMapping with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ModelMapping"},"sap.uxap.AnchorBar":{"getSelectedButton":{"!description":"ID of the element which is the current target of the association {@link #getSelectedButton selectedButton}, or <code>null<\/code>.","!type":"fn() -> sap.ui.core.ID","!category":"function","!static":false},"setShowPopover":{"!description":"Sets a new value for property {@link #getShowPopover showPopover}.\n\nDetermines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bShowPopover: Boolean) -> sap.uxap.AnchorBar","!category":"function","parameters":{"bShowPopover":"type: boolean, description: New value for property <code>showPopover<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.uxap.AnchorBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.Toolbar.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getShowPopover":{"!description":"Gets current value of property {@link #getShowPopover showPopover}.\n\nDetermines whether to show a Popover with Subsection links when clicking on Section links in the Anchor bar.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"scrollToSection":{"!description":"Scroll to a specific Section.","!type":"fn(sId: String, iDuration: Number)","!category":"function","parameters":{"sId":"type: string, description: The Section ID to scroll to","iDuration":"type: int, description: Scroll duration (in ms). Default value is 0."},"!static":false},"!constructorDescription":"Constructor for a new <code>AnchorBar<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowPopover showPopover} : boolean (default: true)<\/li>\n<li>{@link #getUpperCase upperCase} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedButton selectedButton} : (sap.ui.core.ID | sap.m.Button)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Toolbar#constructor sap.m.Toolbar}\ncan be used as well.","!module":"sap/uxap/AnchorBar","setUpperCase":{"!description":"Sets a new value for property {@link #getUpperCase upperCase}.\n\nDetermines whether the Anchor bar items are displayed in upper case.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bUpperCase: Boolean) -> sap.uxap.AnchorBar","!category":"function","parameters":{"bUpperCase":"type: boolean, description: New value for property <code>upperCase<\/code>"},"!static":false},"enhanceAccessibilityState":{"!description":"This method is a hook for the RenderManager that gets called during the rendering of child Controls. It allows to add, remove and update existing accessibility attributes (ARIA) of those controls.","!type":"fn(oElement: sap.ui.core.Control, mAriaProps: Object)","!category":"function","parameters":{"mAriaProps":"type: Object, description: The mapping of \"aria-\" prefixed attributes","oElement":"type: sap.ui.core.Control, description: The Control that gets rendered by the RenderManager"},"!static":false},"!description":"Displays the titles of the sections and subsections in the {@link sap.uxap.ObjectPageLayout ObjectPageLayout} and allows the user to scroll to the respective content.\n\n<h3>Overview<\/h3>\n\nThe <code>AnchorBar<\/code> is internally generated as a menu in the <code>ObjectPageLayout<\/code>. It displays the sections and subsections and allows the user to directly scroll to the respective content by selecting them, while it remains visible at the top of the page (below the page header).","getUpperCase":{"!description":"Gets current value of property {@link #getUpperCase upperCase}.\n\nDetermines whether the Anchor bar items are displayed in upper case.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!category":"class","getScrollDelegate":{"!description":"Returns an sap.ui.core.delegate.ScrollEnablement object used to handle scrolling.","!type":"fn() -> Object","!category":"function","!static":false},"setSelectedButton":{"!description":"Sets the associated {@link #getSelectedButton selectedButton}.","!type":"fn(oSelectedButton: sap.ui.core.ID | sap.m.Button) -> sap.uxap.AnchorBar","!category":"function","parameters":{"oSelectedButton":"type: sap.ui.core.ID|sap.m.Button, description: ID of an element which becomes the new target of this selectedButton association; alternatively, an element instance may be given"},"!static":false},"!helpDescription":"Displays the titles of the sections and subsections in the {@link sap.uxap.ObjectPageLayout ObjectPageLayout} and allows the user to scroll to the respective content.\n\n<h3>Overview<\/h3>\n\nThe <code>AnchorBar<\/code> is internally generated as a menu in the <code>ObjectPageLayout<\/code>. It displays the sections and subsections and allows the user to directly scroll to the respective content by selecting them, while it remains visible at the top of the page (below the page header).","!proto":"sap.m.Toolbar","getMetadata":{"!description":"Returns a metadata object for class sap.uxap.AnchorBar.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.uxap.ObjectPageHeader_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageHeader with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageHeader"},"sap.uxap.ObjectPageLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageLayout with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageLayout"},"sap.uxap.BreadCrumbs_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.BreadCrumbs with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.BreadCrumbs"},"sap.uxap.ObjectPageSection_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageSection with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.uxap.ObjectPageSectionBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageSection"},"sap.uxap.ObjectPageSectionBase":{"setImportance":{"!description":"Sets a new value for property {@link #getImportance importance}.\n\nDetermines whether the section will be hidden on low resolutions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>High<\/code>.","!type":"fn(sImportance: sap.uxap.Importance) -> sap.uxap.ObjectPageSectionBase","!category":"function","parameters":{"sImportance":"type: sap.uxap.Importance, description: New value for property <code>importance<\/code>"},"!static":false},"setTitleLevel":{"!description":"Sets a new value for property {@link #getTitleLevel titleLevel}.\n\nDetermines the ARIA level of the <code>ObjectPageSectionBase<\/code> title. The ARIA level is used by assisting technologies, such as screen readers, to create a hierarchical site map for faster navigation.\n\n<b>Note:<\/b> Defining a <code>titleLevel<\/code> will add <code>aria-level<\/code> attribute from 1 to 6, instead of changing the <code>ObjectPageSectionBase<\/code> title HTML tag from H1 to H6. <br>For example: if <code>titleLevel<\/code> is <code>TitleLevel.H1<\/code>, it will result as aria-level of 1 added to the <code>ObjectPageSectionBase<\/code> title.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!type":"fn(sTitleLevel: sap.ui.core.TitleLevel) -> sap.uxap.ObjectPageSectionBase","!category":"function","parameters":{"sTitleLevel":"type: sap.ui.core.TitleLevel, description: New value for property <code>titleLevel<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageSectionBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setVisible":{"!description":"Sets a new value for property {@link #getVisible visible}.\n\nInvisible ObjectPageSectionBase are not rendered\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisible: Boolean) -> sap.uxap.ObjectPageSectionBase","!category":"function","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"},"!static":false},"connectToModels":{"!description":"Explicitly ask to connect to the UI5 model tree","!type":"fn()","!category":"function","!static":false},"setCustomAnchorBarButton":{"!description":"Sets the aggregated {@link #getCustomAnchorBarButton customAnchorBarButton}.","!type":"fn(oCustomAnchorBarButton: sap.m.Button) -> sap.uxap.ObjectPageSectionBase","!category":"function","parameters":{"oCustomAnchorBarButton":"type: sap.m.Button, description: The customAnchorBarButton to set"},"!static":false},"!constructorDescription":"Constructor for a new <code>ObjectPageSectionBase<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getTitleLevel titleLevel} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getImportance importance} : sap.uxap.Importance (default: High)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCustomAnchorBarButton customAnchorBarButton} : sap.m.Button<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTitleLevel":{"!description":"Gets current value of property {@link #getTitleLevel titleLevel}.\n\nDetermines the ARIA level of the <code>ObjectPageSectionBase<\/code> title. The ARIA level is used by assisting technologies, such as screen readers, to create a hierarchical site map for faster navigation.\n\n<b>Note:<\/b> Defining a <code>titleLevel<\/code> will add <code>aria-level<\/code> attribute from 1 to 6, instead of changing the <code>ObjectPageSectionBase<\/code> title HTML tag from H1 to H6. <br>For example: if <code>titleLevel<\/code> is <code>TitleLevel.H1<\/code>, it will result as aria-level of 1 added to the <code>ObjectPageSectionBase<\/code> title.\n\nDefault value is <code>Auto<\/code>.","!type":"fn() -> sap.ui.core.TitleLevel","!category":"function","!static":false},"!module":"sap/uxap/ObjectPageSectionBase","getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nInvisible ObjectPageSectionBase are not rendered\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getImportance":{"!description":"Gets current value of property {@link #getImportance importance}.\n\nDetermines whether the section will be hidden on low resolutions.\n\nDefault value is <code>High<\/code>.","!type":"fn() -> sap.uxap.Importance","!category":"function","!static":false},"!description":"An abstract container for sections and subsections in the {@link sap.uxap.ObjectPageLayout}.","getCustomAnchorBarButton":{"!description":"Gets content of aggregation {@link #getCustomAnchorBarButton customAnchorBarButton}.\n\nThe custom button that will provide a link to the section in the ObjectPageLayout anchor bar. This button will be used as a custom template to be into the ObjectPageLayout anchorBar area, therefore property changes happening on this button template after the first rendering won't affect the actual button copy used in the anchorBar.\n\nIf you want to change some of the button properties, you would need to bind them to a model.","!type":"fn() -> sap.m.Button","!category":"function","!static":false},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nSection Title\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.uxap.ObjectPageSectionBase","!category":"function","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"},"!static":false},"!category":"class","destroyCustomAnchorBarButton":{"!description":"Destroys the customAnchorBarButton in the aggregation {@link #getCustomAnchorBarButton customAnchorBarButton}.","!type":"fn() -> sap.uxap.ObjectPageSectionBase","!category":"function","!static":false},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nSection Title","!type":"fn() -> String","!category":"function","!static":false},"!helpDescription":"An abstract container for sections and subsections in the {@link sap.uxap.ObjectPageLayout}.","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.uxap.ObjectPageSectionBase.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.uxap.ObjectPageHeaderLayoutData_obj":{"extend":{"!description":"Creates a new subclass of class sap.uxap.ObjectPageHeaderLayoutData with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.LayoutData.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.uxap.ObjectPageHeaderLayoutData"}},"!name":"sap.uxap","!version":"1.18.0"}