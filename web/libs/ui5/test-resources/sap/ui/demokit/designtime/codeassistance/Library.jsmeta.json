{"!define":{"sap.ui.demokit.TagCloud_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.TagCloud with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.TagCloud"},"sap.ui.demokit.TagCloud":{"removeTag":{"!description":"Removes a tag from the aggregation {@link #getTags tags}.","!type":"fn(vTag: Number | String | sap.ui.demokit.Tag) -> sap.ui.demokit.Tag","!category":"function","parameters":{"vTag":"type: int|string|sap.ui.demokit.Tag, description: The tag to remove or its index or id"},"!static":false},"getMinFontSize":{"!description":"Gets current value of property {@link #getMinFontSize minFontSize}.\n\nMinimum font size that must be used for a tag in this cloud\n\nDefault value is <code>10<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.TagCloud with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.demokit.TagCloud","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setMaxFontSize":{"!description":"Sets a new value for property {@link #getMaxFontSize maxFontSize}.\n\nMaximum font size that may be chosen for a tag in this cloud\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>30<\/code>.","!type":"fn(iMaxFontSize: Number) -> sap.ui.demokit.TagCloud","!category":"function","parameters":{"iMaxFontSize":"type: int, description: New value for property <code>maxFontSize<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new TagCloud.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMaxFontSize maxFontSize} : int (default: 30)<\/li>\n<li>{@link #getMinFontSize minFontSize} : int (default: 10)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTags tags} : sap.ui.demokit.Tag[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/demokit/TagCloud","attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.ui.demokit.TagCloud<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.demokit.TagCloud<\/code> itself.\n\nFired when a Tag is clicked.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.demokit.TagCloud","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.demokit.TagCloud<\/code> itself"},"!static":false},"getTags":{"!description":"Gets content of aggregation {@link #getTags tags}.\n\nThe tags displayed in this tag cloud","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getMaxFontSize":{"!description":"Gets current value of property {@link #getMaxFontSize maxFontSize}.\n\nMaximum font size that may be chosen for a tag in this cloud\n\nDefault value is <code>30<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"!description":"A simple TagCloud representing a set of weighted tags","destroyTags":{"!description":"Destroys all the tags in the aggregation {@link #getTags tags}.","!type":"fn() -> sap.ui.demokit.TagCloud","!category":"function","!static":false},"addTag":{"!description":"Adds some tag to the aggregation {@link #getTags tags}.","!type":"fn(oTag: sap.ui.demokit.Tag) -> sap.ui.demokit.TagCloud","!category":"function","parameters":{"oTag":"type: sap.ui.demokit.Tag, description: The tag to add; if empty, nothing is inserted"},"!static":false},"insertTag":{"!description":"Inserts a tag into the aggregation {@link #getTags tags}.","!type":"fn(oTag: sap.ui.demokit.Tag, iIndex: Number) -> sap.ui.demokit.TagCloud","!category":"function","parameters":{"oTag":"type: sap.ui.demokit.Tag, description: The tag to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the tag should be inserted at; for a negative value of <code>iIndex<\/code>, the tag is inserted at position 0; for a value greater than the current size of the aggregation, the tag is inserted at the last position"},"!static":false},"!category":"class","removeAllTags":{"!description":"Removes all the controls from the aggregation {@link #getTags tags}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.ui.demokit.TagCloud<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.demokit.TagCloud","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setMinFontSize":{"!description":"Sets a new value for property {@link #getMinFontSize minFontSize}.\n\nMinimum font size that must be used for a tag in this cloud\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>10<\/code>.","!type":"fn(iMinFontSize: Number) -> sap.ui.demokit.TagCloud","!category":"function","parameters":{"iMinFontSize":"type: int, description: New value for property <code>minFontSize<\/code>"},"!static":false},"indexOfTag":{"!description":"Checks for the provided <code>sap.ui.demokit.Tag<\/code> in the aggregation {@link #getTags tags}. and returns its index if found or -1 otherwise.","!type":"fn(oTag: sap.ui.demokit.Tag) -> Number","!category":"function","parameters":{"oTag":"type: sap.ui.demokit.Tag, description: The tag whose index is looked for"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.TagCloud.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!helpDescription":"A simple TagCloud representing a set of weighted tags","!proto":"sap.ui.core.Control"},"sap.ui.demokit.CodeViewer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.CodeViewer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.CodeViewer"},"sap.ui.demokit":{"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nSee {@link sap.ui.core.RenderManager#writeInvisiblePlaceholderData RenderManager#writeInvisiblePlaceholderData} for details.","!type":"Boolean","!category":"enum"},"collapsible":{"!description":"Whether the cue card can be collapsed at all. When set to true, the value of property expanded determines the current collapsed/expanded state. When false, the control is always expanded.","!type":"Boolean","!category":"enum"},"CodeSampleContainer":"sap.ui.demokit.CodeSampleContainer_obj","busy":{"!description":"Whether the control is currently in busy state.","!type":"Boolean","!category":"enum"},"UI5EntityCueCard":"sap.ui.demokit.UI5EntityCueCard_obj","!module":"sap/ui/demokit/library","HexagonButton":"sap.ui.demokit.HexagonButton_obj","maxFontSize":{"!description":"Maximum font size that may be chosen for a tag in this cloud","!type":"Number","!category":"enum"},"height":{"!description":"(CSS) Height of the control","!type":"sap.ui.core.CSSSize","!category":"enum"},"lineNumbering":{"!description":"Whether the code to have line numbering or not","!type":"Boolean","!category":"enum"},"Tag":"sap.ui.demokit.Tag_obj","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!type":"Number","!category":"enum"},"minFontSize":{"!description":"Minimum font size that must be used for a tag in this cloud","!type":"Number","!category":"enum"},"enabled":{"!description":"Whether the button is enabled or not.","!type":"Boolean","!category":"enum"},"text":{"!description":"The text to be disaplyed for this tag.","!type":"String","!category":"enum"},"colspan":{"!description":"How many buttons might be placed in the same row of the grid","!type":"Number","!category":"enum"},"FileUploadIntrospector":"sap.ui.demokit.FileUploadIntrospector_obj","width":{"!description":"Width of the file list","!type":"sap.ui.core.CSSSize","!category":"enum"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!type":"sap.ui.core.BusyIndicatorSize","!category":"enum"},"autoRefreshInterval":{"!description":"Interval in milliseconds after which the content is checked again. values lower or equal to 0 mean 'no automatic refresh'.","!type":"String","!category":"enum"},"expanded":{"!description":"Whether the cue card is currently expanded.","!type":"Boolean","!category":"enum"},"editable":{"!description":"Whether the code can be edited or not","!type":"Boolean","!category":"enum"},"itemHeight":{"!description":"The height of a content item. Only px values are allowed.","!type":"sap.ui.core.CSSSize","!category":"enum"},"uiAreaId":{"!description":"Id of the container for the running code. This Id can be used in calls to sap.ui.setRoot as if it would be a normal UIArea. Internally, a container UIElement is created with that Id.","!type":"String","!category":"enum"},"UI5EntityCueCardStyle":"sap.ui.demokit.UI5EntityCueCardStyle","navigable":{"!description":"Whether type information is navigable. Also see event 'navigate'.","!type":"Boolean","!category":"enum"},"!helpDescription":"SAPUI5 library with non-public controls, used in the UI5 demokit (SDK)","position":{"!description":"The position. If set, the button is rendered with an absolute position.","!type":"String","!category":"enum"},"CodeViewer":"sap.ui.demokit.CodeViewer_obj","IndexLayout":"sap.ui.demokit.IndexLayout_obj","weight":{"!description":"The weight for this tag. Can be any integer value.","!type":"Number","!category":"enum"},"itemWidth":{"!description":"The width of a content item. Only px values are allowed.","!type":"sap.ui.core.CSSSize","!category":"enum"},"title":{"!description":"A title to be displayed above the code.","!type":"String","!category":"enum"},"style":{"!description":"Style of the cue card.","!type":"sap.ui.demokit.UI5EntityCueCardStyle","!category":"enum"},"HexagonButtonGroup":"sap.ui.demokit.HexagonButtonGroup_obj","!category":"namespace","imagePosition":{"!description":"The position of the contained image. If not set the image is rendered with a fixed relative position.","!type":"String","!category":"enum"},"enableScaling":{"!description":"Whether the given item width/height should be scaled according to the screen size.","!type":"Boolean","!category":"enum"},"uploadUrl":{"!description":"The URL to check the upload content with....","!type":"String","!category":"enum"},"icon":{"!description":"Icon to display","!type":"String","!category":"enum"},"scriptElementId":{"!description":"Id of the script element that contains the initial sample code for this code sample.","!type":"String","!category":"enum"},"UIAreaSubstitute":"sap.ui.demokit.UIAreaSubstitute_obj","entityName":{"!description":"Qualified name of the control or type to show the documentation for. The name can be specified in the metamodel notation ('sap.ui.core/Control' or in the UI5 resource notation (sap.ui.core.Control).","!type":"String","!category":"enum"},"!description":"SAPUI5 library with non-public controls, used in the UI5 demokit (SDK)","source":{"!description":"The source code to display.","!type":"String","!category":"enum"},"color":{"!description":"The color of the hexagon","!type":"String","!category":"enum"},"sourceVisible":{"!description":"Whether the source code is visible or not.","!type":"Boolean","!category":"enum"},"TagCloud":"sap.ui.demokit.TagCloud_obj","fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is raised.\n\nSee {@link sap.ui.core.Control#attachValidateFieldGroup}.","!type":"[String]","!category":"enum"}},"sap.ui.demokit.FileUploadIntrospector_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.FileUploadIntrospector with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.FileUploadIntrospector"},"sap.ui.demokit.IndexLayout":{"setEnableScaling":{"!description":"Sets a new value for property {@link #getEnableScaling enableScaling}.\n\nWhether the given item width/height should be scaled according to the screen size.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnableScaling: Boolean) -> sap.ui.demokit.IndexLayout","!category":"function","parameters":{"bEnableScaling":"type: boolean, description: New value for property <code>enableScaling<\/code>"},"!static":false},"getItemHeight":{"!description":"Gets current value of property {@link #getItemHeight itemHeight}.\n\nThe height of a content item. Only px values are allowed.\n\nDefault value is <code>200px<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.demokit.IndexLayout","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"},"!static":false},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nThe content items","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"setItemHeight":{"!description":"Sets a new value for property {@link #getItemHeight itemHeight}.\n\nThe height of a content item. Only px values are allowed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>200px<\/code>.","!type":"fn(sItemHeight: sap.ui.core.CSSSize) -> sap.ui.demokit.IndexLayout","!category":"function","parameters":{"sItemHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>itemHeight<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.IndexLayout with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"},"!static":false},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"},"!static":false},"!constructorDescription":"Constructor for a new IndexLayout.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getItemWidth itemWidth} : sap.ui.core.CSSSize (default: 200px)<\/li>\n<li>{@link #getItemHeight itemHeight} : sap.ui.core.CSSSize (default: 200px)<\/li>\n<li>{@link #getEnableScaling enableScaling} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/demokit/IndexLayout","destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!type":"fn() -> sap.ui.demokit.IndexLayout","!category":"function","!static":false},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.demokit.IndexLayout","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"},"!static":false},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","setItemWidth":{"!description":"Sets a new value for property {@link #getItemWidth itemWidth}.\n\nThe width of a content item. Only px values are allowed.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>200px<\/code>.","!type":"fn(sItemWidth: sap.ui.core.CSSSize) -> sap.ui.demokit.IndexLayout","!category":"function","parameters":{"sItemWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>itemWidth<\/code>"},"!static":false},"!category":"class","getEnableScaling":{"!description":"Gets current value of property {@link #getEnableScaling enableScaling}.\n\nWhether the given item width/height should be scaled according to the screen size.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getItemWidth":{"!description":"Gets current value of property {@link #getItemWidth itemWidth}.\n\nThe width of a content item. Only px values are allowed.\n\nDefault value is <code>200px<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.IndexLayout.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","!proto":"sap.ui.core.Control"},"sap.ui.demokit.CodeSampleContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.CodeSampleContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.CodeSampleContainer"},"sap.ui.demokit.UIAreaSubstitute_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.UIAreaSubstitute with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.UIAreaSubstitute"},"sap.ui.demokit.HexagonButton":{"getColor":{"!description":"Gets current value of property {@link #getColor color}.\n\nThe color of the hexagon\n\nDefault value is <code>blue<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"getImagePosition":{"!description":"Gets current value of property {@link #getImagePosition imagePosition}.\n\nThe position of the contained image. If not set the image is rendered with a fixed relative position.","!type":"fn() -> String","!category":"function","!static":false},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nWhether the button is enabled or not.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.HexagonButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.demokit.HexagonButton","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setPosition":{"!description":"Sets a new value for property {@link #getPosition position}.\n\nThe position. If set, the button is rendered with an absolute position.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sPosition: String) -> sap.ui.demokit.HexagonButton","!category":"function","parameters":{"sPosition":"type: string, description: New value for property <code>position<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new HexagonButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : string<\/li>\n<li>{@link #getColor color} : string (default: blue)<\/li>\n<li>{@link #getPosition position} : string<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getImagePosition imagePosition} : string<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getPosition":{"!description":"Gets current value of property {@link #getPosition position}.\n\nThe position. If set, the button is rendered with an absolute position.","!type":"fn() -> String","!category":"function","!static":false},"!module":"sap/ui/demokit/HexagonButton","attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.ui.demokit.HexagonButton<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.demokit.HexagonButton<\/code> itself.\n\nFired when the user clicks the hex button","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.demokit.HexagonButton","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.demokit.HexagonButton<\/code> itself"},"!static":false},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nIcon to display","!type":"fn() -> String","!category":"function","!static":false},"setImagePosition":{"!description":"Sets a new value for property {@link #getImagePosition imagePosition}.\n\nThe position of the contained image. If not set the image is rendered with a fixed relative position.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sImagePosition: String) -> sap.ui.demokit.HexagonButton","!category":"function","parameters":{"sImagePosition":"type: string, description: New value for property <code>imagePosition<\/code>"},"!static":false},"setColor":{"!description":"Sets a new value for property {@link #getColor color}.\n\nThe color of the hexagon\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>blue<\/code>.","!type":"fn(sColor: String) -> sap.ui.demokit.HexagonButton","!category":"function","parameters":{"sColor":"type: string, description: New value for property <code>color<\/code>"},"!static":false},"!description":"A custom button with a 'hexagon' shape","!category":"class","setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nWhether the button is enabled or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.demokit.HexagonButton","!category":"function","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"},"!static":false},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nIcon to display\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: String) -> sap.ui.demokit.HexagonButton","!category":"function","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"},"!static":false},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.ui.demokit.HexagonButton<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.demokit.HexagonButton","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.HexagonButton.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!helpDescription":"A custom button with a 'hexagon' shape","!proto":"sap.ui.core.Control"},"sap.ui.demokit.Tag":{"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nThe text to be disaplyed for this tag.","!type":"fn() -> String","!category":"function","!static":false},"!description":"A Tag in a TagCloud","setWeight":{"!description":"Sets a new value for property {@link #getWeight weight}.\n\nThe weight for this tag. Can be any integer value.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>1<\/code>.","!type":"fn(iWeight: Number) -> sap.ui.demokit.Tag","!category":"function","parameters":{"iWeight":"type: int, description: New value for property <code>weight<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.Tag with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new Tag.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getWeight weight} : int (default: 1)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nThe text to be disaplyed for this tag.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sText: String) -> sap.ui.demokit.Tag","!category":"function","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"},"!static":false},"getWeight":{"!description":"Gets current value of property {@link #getWeight weight}.\n\nThe weight for this tag. Can be any integer value.\n\nDefault value is <code>1<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"!module":"sap/ui/demokit/Tag","getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.Tag.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Element","!helpDescription":"A Tag in a TagCloud"},"sap.ui.demokit.HexagonButtonGroup_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.HexagonButtonGroup with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.HexagonButtonGroup"},"sap":{"ui":"sap.ui","sap":"sap","!category":"namespace"},"sap.ui":{"!category":"namespace","demokit":"sap.ui.demokit"},"sap.ui.demokit.IndexLayout_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.IndexLayout with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.IndexLayout"},"sap.ui.demokit.UI5EntityCueCardStyle":{"Standard":{"!description":"default style (no special styling).","!type":"String","!category":"enum"},"!description":"Different styles for an entity cue card.","!category":"static class","Demokit":{"!description":"Demokit style","!type":"String","!category":"enum"},"!module":"sap/ui/demokit/library"},"sap.ui.demokit.HexagonButtonGroup":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.HexagonButtonGroup with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new HexagonButtonGroup.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColspan colspan} : int (default: 3)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getButtons buttons} : sap.ui.demokit.HexagonButton[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","removeButton":{"!description":"Removes a button from the aggregation {@link #getButtons buttons}.","!type":"fn(vButton: Number | String | sap.ui.demokit.HexagonButton) -> sap.ui.demokit.HexagonButton","!category":"function","parameters":{"vButton":"type: int|string|sap.ui.demokit.HexagonButton, description: The button to remove or its index or id"},"!static":false},"!module":"sap/ui/demokit/HexagonButtonGroup","removeAllButtons":{"!description":"Removes all the controls from the aggregation {@link #getButtons buttons}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"insertButton":{"!description":"Inserts a button into the aggregation {@link #getButtons buttons}.","!type":"fn(oButton: sap.ui.demokit.HexagonButton, iIndex: Number) -> sap.ui.demokit.HexagonButtonGroup","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the button should be inserted at; for a negative value of <code>iIndex<\/code>, the button is inserted at position 0; for a value greater than the current size of the aggregation, the button is inserted at the last position","oButton":"type: sap.ui.demokit.HexagonButton, description: The button to insert; if empty, nothing is inserted"},"!static":false},"setColspan":{"!description":"Sets a new value for property {@link #getColspan colspan}.\n\nHow many buttons might be placed in the same row of the grid\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>3<\/code>.","!type":"fn(iColspan: Number) -> sap.ui.demokit.HexagonButtonGroup","!category":"function","parameters":{"iColspan":"type: int, description: New value for property <code>colspan<\/code>"},"!static":false},"!description":"A group of HexagonButtons, aligned in a packed grid","destroyButtons":{"!description":"Destroys all the buttons in the aggregation {@link #getButtons buttons}.","!type":"fn() -> sap.ui.demokit.HexagonButtonGroup","!category":"function","!static":false},"addButton":{"!description":"Adds some button to the aggregation {@link #getButtons buttons}.","!type":"fn(oButton: sap.ui.demokit.HexagonButton) -> sap.ui.demokit.HexagonButtonGroup","!category":"function","parameters":{"oButton":"type: sap.ui.demokit.HexagonButton, description: The button to add; if empty, nothing is inserted"},"!static":false},"!category":"class","indexOfButton":{"!description":"Checks for the provided <code>sap.ui.demokit.HexagonButton<\/code> in the aggregation {@link #getButtons buttons}. and returns its index if found or -1 otherwise.","!type":"fn(oButton: sap.ui.demokit.HexagonButton) -> Number","!category":"function","parameters":{"oButton":"type: sap.ui.demokit.HexagonButton, description: The button whose index is looked for"},"!static":false},"getButtons":{"!description":"Gets content of aggregation {@link #getButtons buttons}.\n\nThe buttons to layout in a grid","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getColspan":{"!description":"Gets current value of property {@link #getColspan colspan}.\n\nHow many buttons might be placed in the same row of the grid\n\nDefault value is <code>3<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"!helpDescription":"A group of HexagonButtons, aligned in a packed grid","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.HexagonButtonGroup.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.demokit.UI5EntityCueCard_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.UI5EntityCueCard with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.UI5EntityCueCard"},"sap.ui.demokit.HexagonButton_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.HexagonButton with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.HexagonButton"},"sap.ui.demokit.UI5EntityCueCard":{"getEntityName":{"!description":"Gets current value of property {@link #getEntityName entityName}.\n\nQualified name of the control or type to show the documentation for. The name can be specified in the metamodel notation ('sap.ui.core/Control' or in the UI5 resource notation (sap.ui.core.Control).","!type":"fn() -> String","!category":"function","!static":false},"detachNavigate":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:navigate navigate} event of this <code>sap.ui.demokit.UI5EntityCueCard<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.demokit.UI5EntityCueCard","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getCollapsible":{"!description":"Gets current value of property {@link #getCollapsible collapsible}.\n\nWhether the cue card can be collapsed at all. When set to true, the value of property expanded determines the current collapsed/expanded state. When false, the control is always expanded.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.UI5EntityCueCard with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"fireNavigate":{"!description":"Fires event {@link #event:navigate navigate} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!type":"fn(mParameters?: Object) -> Boolean","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getExpanded":{"!description":"Gets current value of property {@link #getExpanded expanded}.\n\nWhether the cue card is currently expanded.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setEntityName":{"!description":"Sets a new value for property {@link #getEntityName entityName}.\n\nQualified name of the control or type to show the documentation for. The name can be specified in the metamodel notation ('sap.ui.core/Control' or in the UI5 resource notation (sap.ui.core.Control).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sEntityName: String) -> sap.ui.demokit.UI5EntityCueCard","!category":"function","parameters":{"sEntityName":"type: string, description: New value for property <code>entityName<\/code>"},"!static":false},"getStyle":{"!description":"Gets current value of property {@link #getStyle style}.\n\nStyle of the cue card.","!type":"fn() -> sap.ui.demokit.UI5EntityCueCardStyle","!category":"function","!static":false},"!constructorDescription":"Constructor for a new UI5EntityCueCard.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getCollapsible collapsible} : boolean (default: true)<\/li>\n<li>{@link #getExpanded expanded} : boolean (default: false)<\/li>\n<li>{@link #getNavigable navigable} : boolean (default: false)<\/li>\n<li>{@link #getEntityName entityName} : string<\/li>\n<li>{@link #getStyle style} : sap.ui.demokit.UI5EntityCueCardStyle<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:navigate navigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/demokit/UI5EntityCueCard","setNavigable":{"!description":"Sets a new value for property {@link #getNavigable navigable}.\n\nWhether type information is navigable. Also see event 'navigate'.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bNavigable: Boolean) -> sap.ui.demokit.UI5EntityCueCard","!category":"function","parameters":{"bNavigable":"type: boolean, description: New value for property <code>navigable<\/code>"},"!static":false},"!description":"Displays documentation for a UI5 entity (control or type).\n\nThe documentation will be read from a UI5 metamodel file that by default is loaded from the same resource location where the control or type would be loaded from (using the UI5 resource loading). This control displays all properties, aggregations, associations, events and methods that are described in the metamodel. For each part, it lists the name, type (where applicable) and documentation. If the navigable property is set to true, all types are shown as links and when pressed, the navigate event is fired. This allows consumers to react on a user click on such a type (and to e.g. navigate to the underlying type of a property or aggregation)","attachNavigate":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:navigate navigate} event of this <code>sap.ui.demokit.UI5EntityCueCard<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.demokit.UI5EntityCueCard<\/code> itself.\n\nFired when a link for a type is activated (clicked) by the user.\n\nWhen property \"navigable\" is set to true, type links are created for the types of properties, aggregations and associations, for the types of event or method parameters and for the return types of methods (if not void).\n\nThe default behavior for this event is to set the entityName property to the clicked entityName. Applications can prevent the default by calling the corresponding method on the event object.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.demokit.UI5EntityCueCard","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.demokit.UI5EntityCueCard<\/code> itself"},"!static":false},"setExpanded":{"!description":"Sets a new value for property {@link #getExpanded expanded}.\n\nWhether the cue card is currently expanded.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bExpanded: Boolean) -> sap.ui.demokit.UI5EntityCueCard","!category":"function","parameters":{"bExpanded":"type: boolean, description: New value for property <code>expanded<\/code>"},"!static":false},"setCollapsible":{"!description":"Sets a new value for property {@link #getCollapsible collapsible}.\n\nWhether the cue card can be collapsed at all. When set to true, the value of property expanded determines the current collapsed/expanded state. When false, the control is always expanded.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bCollapsible: Boolean) -> sap.ui.demokit.UI5EntityCueCard","!category":"function","parameters":{"bCollapsible":"type: boolean, description: New value for property <code>collapsible<\/code>"},"!static":false},"!category":"class","setStyle":{"!description":"Sets a new value for property {@link #getStyle style}.\n\nStyle of the cue card.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sStyle: sap.ui.demokit.UI5EntityCueCardStyle) -> sap.ui.demokit.UI5EntityCueCard","!category":"function","parameters":{"sStyle":"type: sap.ui.demokit.UI5EntityCueCardStyle, description: New value for property <code>style<\/code>"},"!static":false},"getNavigable":{"!description":"Gets current value of property {@link #getNavigable navigable}.\n\nWhether type information is navigable. Also see event 'navigate'.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.UI5EntityCueCard.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!helpDescription":"Displays documentation for a UI5 entity (control or type).\n\nThe documentation will be read from a UI5 metamodel file that by default is loaded from the same resource location where the control or type would be loaded from (using the UI5 resource loading). This control displays all properties, aggregations, associations, events and methods that are described in the metamodel. For each part, it lists the name, type (where applicable) and documentation. If the navigable property is set to true, all types are shown as links and when pressed, the navigate event is fired. This allows consumers to react on a user click on such a type (and to e.g. navigate to the underlying type of a property or aggregation)","!proto":"sap.ui.core.Control"},"sap.ui.demokit.FileUploadIntrospector":{"getAutoRefreshInterval":{"!description":"Gets current value of property {@link #getAutoRefreshInterval autoRefreshInterval}.\n\nInterval in milliseconds after which the content is checked again. values lower or equal to 0 mean 'no automatic refresh'.\n\nDefault value is <code>0<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.FileUploadIntrospector with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setAutoRefreshInterval":{"!description":"Sets a new value for property {@link #getAutoRefreshInterval autoRefreshInterval}.\n\nInterval in milliseconds after which the content is checked again. values lower or equal to 0 mean 'no automatic refresh'.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>0<\/code>.","!type":"fn(sAutoRefreshInterval: String) -> sap.ui.demokit.FileUploadIntrospector","!category":"function","parameters":{"sAutoRefreshInterval":"type: string, description: New value for property <code>autoRefreshInterval<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new FileUploadIntrospector.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getUploadUrl uploadUrl} : string<\/li>\n<li>{@link #getAutoRefreshInterval autoRefreshInterval} : string (default: 0)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/demokit/FileUploadIntrospector","getUploadUrl":{"!description":"Gets current value of property {@link #getUploadUrl uploadUrl}.\n\nThe URL to check the upload content with....","!type":"fn() -> String","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\n(CSS) Height of the control","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"!description":"Control that allows to monitor uploaded files in a demo scenario. This is not a general purpose monitor but only works with the demo fileupload service.","setUploadUrl":{"!description":"Sets a new value for property {@link #getUploadUrl uploadUrl}.\n\nThe URL to check the upload content with....\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sUploadUrl: String) -> sap.ui.demokit.FileUploadIntrospector","!category":"function","parameters":{"sUploadUrl":"type: string, description: New value for property <code>uploadUrl<\/code>"},"!static":false},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\n(CSS) Height of the control\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.demokit.FileUploadIntrospector","!category":"function","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"},"!static":false},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nWidth of the file list","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nWidth of the file list\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.demokit.FileUploadIntrospector","!category":"function","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"},"!static":false},"refresh":{"!description":"Trigger an explicit refresh of the displayed information","!type":"fn()","!category":"function","!static":false},"!helpDescription":"Control that allows to monitor uploaded files in a demo scenario. This is not a general purpose monitor but only works with the demo fileupload service.","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.FileUploadIntrospector.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.demokit.UIAreaSubstitute":{"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.demokit.UIAreaSubstitute","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"},"!static":false},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nContent Area used for the running sample code","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.UIAreaSubstitute with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"},"!static":false},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"},"!static":false},"!constructorDescription":"Constructor for a new UIAreaSubstitute.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/demokit/UIAreaSubstitute","destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!type":"fn() -> sap.ui.demokit.UIAreaSubstitute","!category":"function","!static":false},"!description":"A substitute for a UIArea that can be embedded in the control tree.","insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.demokit.UIAreaSubstitute","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"},"!static":false},"!category":"class","!helpDescription":"A substitute for a UIArea that can be embedded in the control tree.","!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.UIAreaSubstitute.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.demokit.CodeSampleContainer":{"setScriptElementId":{"!description":"Sets a new value for property {@link #getScriptElementId scriptElementId}.\n\nId of the script element that contains the initial sample code for this code sample.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sScriptElementId: String) -> sap.ui.demokit.CodeSampleContainer","!category":"function","parameters":{"sScriptElementId":"type: string, description: New value for property <code>scriptElementId<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.CodeSampleContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getUiAreaId":{"!description":"Gets current value of property {@link #getUiAreaId uiAreaId}.\n\nId of the container for the running code. This Id can be used in calls to sap.ui.setRoot as if it would be a normal UIArea. Internally, a container UIElement is created with that Id.","!type":"fn() -> String","!category":"function","!static":false},"!constructorDescription":"Constructor for a new CodeSampleContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getScriptElementId scriptElementId} : string<\/li>\n<li>{@link #getUiAreaId uiAreaId} : string<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getSourceVisible sourceVisible} : boolean (default: false)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 90%)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:apply apply} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/demokit/CodeSampleContainer","fireApply":{"!description":"Fires event {@link #event:apply apply} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.demokit.CodeSampleContainer","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"!description":"A container for both the source and the runtime results of a CodeSample. By default, only the runtime results are shown. There are additional controls that allow the user to display the source, modify and run it.\n\nThe container provides a sub container that can be used in calls to sap.ui.setRoot() as if it would be a normal UIArea. So the sample code doesn't have to know that it runs in a CodeSample container.","setSourceVisible":{"!description":"Sets a new value for property {@link #getSourceVisible sourceVisible}.\n\nWhether the source code is visible or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bSourceVisible: Boolean) -> sap.ui.demokit.CodeSampleContainer","!category":"function","parameters":{"bSourceVisible":"type: boolean, description: New value for property <code>sourceVisible<\/code>"},"!static":false},"setUiAreaId":{"!description":"Sets a new value for property {@link #getUiAreaId uiAreaId}.\n\nId of the container for the running code. This Id can be used in calls to sap.ui.setRoot as if it would be a normal UIArea. Internally, a container UIElement is created with that Id.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sUiAreaId: String) -> sap.ui.demokit.CodeSampleContainer","!category":"function","parameters":{"sUiAreaId":"type: string, description: New value for property <code>uiAreaId<\/code>"},"!static":false},"setTitle":{"!description":"Sets a new value for property {@link #getTitle title}.\n\nA title to be displayed above the code.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTitle: String) -> sap.ui.demokit.CodeSampleContainer","!category":"function","parameters":{"sTitle":"type: string, description: New value for property <code>title<\/code>"},"!static":false},"!category":"class","detachApply":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:apply apply} event of this <code>sap.ui.demokit.CodeSampleContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.demokit.CodeSampleContainer","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"attachApply":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:apply apply} event of this <code>sap.ui.demokit.CodeSampleContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.demokit.CodeSampleContainer<\/code> itself.\n\nFired when the user decides to apply his/her changes to the sample code","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.demokit.CodeSampleContainer","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.demokit.CodeSampleContainer<\/code> itself"},"!static":false},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nWidth of the CodeSample container.\n\nDefault value is <code>90%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getTitle":{"!description":"Gets current value of property {@link #getTitle title}.\n\nA title to be displayed above the code.","!type":"fn() -> String","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nWidth of the CodeSample container.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>90%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.demokit.CodeSampleContainer","!category":"function","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"},"!static":false},"getSourceVisible":{"!description":"Gets current value of property {@link #getSourceVisible sourceVisible}.\n\nWhether the source code is visible or not.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getScriptElementId":{"!description":"Gets current value of property {@link #getScriptElementId scriptElementId}.\n\nId of the script element that contains the initial sample code for this code sample.","!type":"fn() -> String","!category":"function","!static":false},"!helpDescription":"A container for both the source and the runtime results of a CodeSample. By default, only the runtime results are shown. There are additional controls that allow the user to display the source, modify and run it.\n\nThe container provides a sub container that can be used in calls to sap.ui.setRoot() as if it would be a normal UIArea. So the sample code doesn't have to know that it runs in a CodeSample container.","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.CodeSampleContainer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.demokit.CodeViewer":{"fireSave":{"!description":"Fires event {@link #event:save save} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.demokit.CodeViewer","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.demokit.CodeViewer","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"!module":"sap/ui/demokit/CodeViewer","getSource":{"!description":"Gets current value of property {@link #getSource source}.\n\nThe source code to display.","!type":"fn() -> String","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nThe CSS height property","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setEditable":{"!description":"Sets a new value for property {@link #getEditable editable}.\n\nWhether the code can be edited or not\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bEditable: Boolean) -> sap.ui.demokit.CodeViewer","!category":"function","parameters":{"bEditable":"type: boolean, description: New value for property <code>editable<\/code>"},"!static":false},"setSource":{"!description":"Sets a new value for property {@link #getSource source}.\n\nThe source code to display.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSource: String) -> sap.ui.demokit.CodeViewer","!category":"function","parameters":{"sSource":"type: string, description: New value for property <code>source<\/code>"},"!static":false},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nThe CSS width property","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setLineNumbering":{"!description":"Sets a new value for property {@link #getLineNumbering lineNumbering}.\n\nWhether the code to have line numbering or not\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bLineNumbering: Boolean) -> sap.ui.demokit.CodeViewer","!category":"function","parameters":{"bLineNumbering":"type: boolean, description: New value for property <code>lineNumbering<\/code>"},"!static":false},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nThe CSS width property\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.demokit.CodeViewer","!category":"function","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"},"!static":false},"getEditable":{"!description":"Gets current value of property {@link #getEditable editable}.\n\nWhether the code can be edited or not\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getLineNumbering":{"!description":"Gets current value of property {@link #getLineNumbering lineNumbering}.\n\nWhether the code to have line numbering or not\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.CodeViewer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"detachSave":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:save save} event of this <code>sap.ui.demokit.CodeViewer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.demokit.CodeViewer","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setVisible":{"!description":"Sets a new value for property {@link #getVisible visible}.\n\nWhether the code viewer should be visible\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisible: Boolean) -> sap.ui.demokit.CodeViewer","!category":"function","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new CodeViewer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSource source} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEditable editable} : boolean (default: false)<\/li>\n<li>{@link #getLineNumbering lineNumbering} : boolean (default: false)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:save save} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.ui.demokit.CodeViewer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.demokit.CodeViewer<\/code> itself.\n\nCalled when the mouse button is clicked over the non-editable(!) control","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.demokit.CodeViewer","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.demokit.CodeViewer<\/code> itself"},"!static":false},"attachSave":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:save save} event of this <code>sap.ui.demokit.CodeViewer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.demokit.CodeViewer<\/code> itself.\n\nCalled when the editor is active and should be saved","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.demokit.CodeViewer","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.demokit.CodeViewer<\/code> itself"},"!static":false},"getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nWhether the code viewer should be visible\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"Shows a piece of (Javascript) code and allows to edit it","setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nThe CSS height property\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.demokit.CodeViewer","!category":"function","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"},"!static":false},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.ui.demokit.CodeViewer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.demokit.CodeViewer","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"Shows a piece of (Javascript) code and allows to edit it","getMetadata":{"!description":"Returns a metadata object for class sap.ui.demokit.CodeViewer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.demokit.Tag_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.demokit.Tag with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.demokit.Tag"}},"!name":"sap.ui.demokit","!version":"1.18.0"}