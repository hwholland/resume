{"!define":{"sap.ui.model.type.String":{"!description":"This class represents string simple types.","extend":{"!description":"Creates a new subclass of class sap.ui.model.type.String with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a String type.","!module":"sap/ui/model/type/String","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.type.String.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.SimpleType","!helpDescription":"This class represents string simple types."},"sap.ui.model.analytics.odata4analytics.QueryResultRequest_obj":{"!type":"fn(oQueryResult: sap.ui.model.analytics.odata4analytics.QueryResult, oParameterizationRequest?: sap.ui.model.analytics.odata4analytics.ParameterizationRequest)","prototype":"sap.ui.model.analytics.odata4analytics.QueryResultRequest"},"sap.ui.model.analytics.odata4analytics.Parameterization_obj":{"!type":"fn(oEntityType: sap.ui.model.analytics.odata4analytics.EntityType, oEntitySet: sap.ui.model.analytics.odata4analytics.EntitySet)","prototype":"sap.ui.model.analytics.odata4analytics.Parameterization"},"sap.ui.base.ManagedObjectMetadata":{"uid":{"!description":"Calculates a new ID based on a prefix.\n\nTo guarantee uniqueness of the generated IDs across all ID prefixes, prefixes must not end with digits.","!type":"fn(sIdPrefix: String) -> String","!category":"function","parameters":{"sIdPrefix":"type: string, description: prefix for the new ID"},"!static":true},"isGeneratedId":{"!description":"Test whether a given ID looks like it was automatically generated.\n\nExamples: <pre>\nTrue for:\n  \"foo--__bar04--baz\"\n  \"foo--__bar04\"\n  \"__bar04--baz\"\n  \"__bar04\"\n  \"__bar04--\"\n  \"__bar04--foo\"\nFalse for:\n  \"foo__bar04\"\n  \"foo__bar04--baz\"\n<\/pre>\n\nSee {@link sap.ui.base.ManagedObjectMetadata.prototype.uid} for details on ID generation.","!type":"fn(sId: String) -> Boolean","!category":"function","parameters":{"sId":"type: string, description: the ID that should be tested"},"!static":true},"getAssociation":{"!description":"Returns an info object for the named public association of the described class, no matter whether the association was defined by the class itself or by one of its ancestor classes.\n\nIf neither the described class nor its ancestor classes define an association with the given name, <code>undefined<\/code> is returned.\n\n<b>Warning:<\/b> Type, structure and behavior of the returned info objects is not documented and therefore not part of the API. See the {@link #constructor Notes about Info objects} in the constructor documentation of this class.","!type":"fn(sName: String) -> Object","!category":"function","parameters":{"sName":"type: string, description: name of the association"},"!static":false},"getAssociations":{"!description":"Returns a map of info objects for all public associations of the described class. Associations declared by ancestor classes are not included.\n\nThe returned map keys the association info objects by their name. In case of 0..1 associations this is the singular name, otherwise it is the plural name.\n\n<b>Warning:<\/b> Type, structure and behavior of the returned info objects is not documented and therefore not part of the API. See the {@link #constructor Notes about Info objects} in the constructor documentation of this class.","!type":"fn() -> map","!category":"function","!static":false},"!module":"sap/ui/base/ManagedObjectMetadata","getAllAssociations":{"!description":"Returns a map of info objects for all public associations of the described class, including public associations form the ancestor classes.\n\nThe returned map keys the association info objects by their name. In case of 0..1 associations this is the singular name, otherwise it is the plural name.\n\n<b>Warning:<\/b> Type, structure and behavior of the returned info objects is not documented and therefore not part of the API. See the {@link #constructor Notes about Info objects} in the constructor documentation of this class.","!type":"fn() -> map","!category":"function","!static":false},"getEvent":{"!description":"Returns an info object for the named public event of the described class, no matter whether the event was defined by the class itself or by one of its ancestor classes.\n\nIf neither the described class nor its ancestor classes define an event with the given name, <code>undefined<\/code> is returned.\n\n<b>Warning:<\/b> Type, structure and behavior of the returned info objects is not documented and therefore not part of the API. See the {@link #constructor Notes about Info objects} in the constructor documentation of this class.","!type":"fn(sName: String) -> Object","!category":"function","parameters":{"sName":"type: string, description: name of the event"},"!static":false},"loadDesignTime":{"!description":"Load and returns the design time metadata asynchronously. It inherits/merges parent design time metadata and if provided merges also instance specific design time metadata that was provided via the dt namespace.\n\nBe aware that ManagedObjects do not ensure to have unique IDs. This may lead to issues if you would like to persist DesignTime based information. In that case you need to take care of identification yourself.","!type":"fn(oManagedObject?: ManageObject, sScopeKey?: String) -> Promise","!category":"function","parameters":{"oManagedObject":"type: ManageObject, description: instance that could have instance specific design time metadata","sScopeKey":"type: string, description: scope name for which metadata will be resolved, see sap.ui.base.ManagedObjectMetadataScope"},"!static":false},"getAllPrivateAggregations":{"!description":"Returns a map of info objects for all private (hidden) aggregations of the described class, including private aggregations from the ancestor classes.\n\nThe returned map contains aggregation info objects keyed by the aggregation name. In case of 0..1 aggregations this is the singular name, otherwise it is the plural name.\n\n<b>Warning:<\/b> Type, structure and behavior of the returned info objects is not documented and therefore not part of the API. See the {@link #constructor Notes about Info objects} in the constructor documentation of this class.","!type":"fn() -> map","!category":"function","!static":false},"getManagedAggregation":{"!description":"Returns the info object for the named public or private aggregation declared by the described class or by any of its ancestors.\n\nIf the name is not given (or has a falsy value), then it is substituted by the name of the default aggregation of the described class (if it is defined).\n\n<b>Warning:<\/b> Type, structure and behavior of the returned info objects is not documented and therefore not part of the API. See the {@link #constructor Notes about Info objects} in the constructor documentation of this class.","!type":"fn(sAggregationName: String) -> Object","!category":"function","parameters":{"sAggregationName":"type: string, description: name of the aggregation to be retrieved or empty"},"!static":false},"getPropertyLikeSetting":{"!description":"Returns an info object for a public setting with the given name that either is a managed property or a managed aggregation of cardinality 0..1 and with at least one simple alternative type. The setting can be defined by the class itself or by one of its ancestor classes.\n\nIf neither the described class nor its ancestor classes define a suitable setting with the given name, <code>undefined<\/code> is returned.\n\n<b>Warning:<\/b> Type, structure and behavior of the returned info objects is not documented and therefore not part of the API. See the {@link #constructor Notes about Info objects} in the constructor documentation of this class.","!type":"fn(sName: String) -> Object","!category":"function","parameters":{"sName":"type: string, description: name of the property like setting"},"!static":false},"!category":"class","hasEvent":{"!description":"Checks the existence of the given event by its name","!type":"fn(sName: String) -> Boolean","!category":"function","parameters":{"sName":"type: string, description: name of the event"},"!static":false},"getAggregations":{"!description":"Returns a map of info objects for the public aggregations of the described class. Aggregations declared by ancestor classes are not included.\n\nThe returned map keys the aggregation info objects by their name. In case of 0..1 aggregations this is the singular name, otherwise it is the plural name.\n\n<b>Warning:<\/b> Type, structure and behavior of the returned info objects is not documented and therefore not part of the API. See the {@link #constructor Notes about Info objects} in the constructor documentation of this class.","!type":"fn() -> map","!category":"function","!static":false},"getAllProperties":{"!description":"Returns a map of info objects for all public properties of the described class, including public properties from the ancestor classes.\n\nThe returned map keys the property info objects by their name.\n\n<b>Warning:<\/b> Type, structure and behavior of the returned info objects is not documented and therefore not part of the API. See the {@link #constructor Notes about Info objects} in the constructor documentation of this class.","!type":"fn() -> map","!category":"function","!static":false},"getLibraryName":{"!description":"Returns the name of the library that contains the described UIElement.","!type":"fn() -> String","!category":"function","!static":false},"hasProperty":{"!description":"Checks the existence of the given property by its name","!type":"fn(sName: String) -> Boolean","!category":"function","parameters":{"sName":"type: string, description: name of the property"},"!static":false},"hasAggregation":{"!description":"Checks the existence of the given aggregation by its name.","!type":"fn(sName: String) -> Boolean","!category":"function","parameters":{"sName":"type: string, description: name of the aggregation"},"!static":false},"!constructorDescription":"Creates a new metadata object that describes a subclass of ManagedObject.\n\n<b>Note:<\/b> Code outside the <code>sap.ui.base<\/code> namespace must not call this\nconstructor directly. Instances will be created automatically when a new class is\ndefined with one of the {@link sap.ui.base.ManagedObject.extend <i>SomeClass<\/i>.extend}\nmethods.\n\n<b>Note<\/b>: throughout this class documentation, the described subclass of ManagedObject\nis referenced as <i>the described class<\/i>.","getProperties":{"!description":"Returns a map of info objects for the public properties of the described class. Properties declared by ancestor classes are not included.\n\nThe returned map keys the property info objects by their name.\n\n<b>Warning:<\/b> Type, structure and behavior of the returned info objects is not documented and therefore not part of the API. See the {@link #constructor Notes about Info objects} in the constructor documentation of this class.","!type":"fn() -> map","!category":"function","!static":false},"getAllAggregations":{"!description":"Returns a map of info objects for all public aggregations of the described class, including public aggregations form the ancestor classes.\n\nThe returned map keys the aggregation info objects by their name. In case of 0..1 aggregations this is the singular name, otherwise it is the plural name.\n\n<b>Warning:<\/b> Type, structure and behavior of the returned info objects is not documented and therefore not part of the API. See the {@link #constructor Notes about Info objects} in the constructor documentation of this class.","!type":"fn() -> map","!category":"function","!static":false},"getEvents":{"!description":"Returns a map of info objects for the public events of the described class. Events declared by ancestor classes are not included.\n\nThe returned map keys the event info objects by their name.\n\n<b>Warning:<\/b> Type, structure and behavior of the returned info objects is not documented and therefore not part of the API. See the {@link #constructor Notes about Info objects} in the constructor documentation of this class.","!type":"fn() -> map","!category":"function","!static":false},"!description":"<strong>Note about Info Objects<\/strong>\n\nSeveral methods in this class return info objects that describe a property, aggregation, association or event of the class described by this metadata object. The type, structure and behavior of these info objects is not yet documented and not part of the stable, public API.\n\nCode using such methods and the returned info objects therefore needs to be aware of the following restrictions:\n\n<ul> <li>the set of properties exposed by each info object, their type and value might change as well as the class of the info object itself.\n\nProperties that represent settings provided during class definition (in the oClassInfo parameter of the 'extend' call, e.g. 'type', 'multiple' of an aggregation) are more likely to stay the same than additional, derived properties like '_iKind'.<\/li>\n\n<li>info objects must not be modified / enriched although they technically could.<\/li>\n\n<li>the period of validity of info objects is not defined. They should be referenced only for a short time and not be kept as members of long living objects or closures.<\/li>\n\n<\/ul>","getPropertyDefaults":{"!description":"Returns a map of default values for all properties declared by the described class and its ancestors, keyed by the property name.","!type":"fn() -> map","!category":"function","!static":false},"getAggregation":{"!description":"Returns an info object for the named public aggregation of the described class no matter whether the aggregation was defined by the class itself or by one of its ancestor classes.\n\nIf neither the class nor its ancestor classes define a public aggregation with the given name, <code>undefined<\/code> is returned.\n\nIf the name is not given (or has a falsy value), then it is substituted by the name of the default aggregation of the 'described class' (if any).\n\n<b>Warning:<\/b> Type, structure and behavior of the returned info objects is not documented and therefore not part of the API. See the {@link #constructor Notes about Info objects} in the constructor documentation of this class.","!type":"fn(sName?: String) -> Object","!category":"function","parameters":{"sName":"type: string, description: name of the aggregation or empty"},"!static":false},"getProperty":{"!description":"Returns an info object for the named public property of the described class, no matter whether the property was defined by the class itself or by one of its ancestor classes.\n\nIf neither the described class nor its ancestor classes define a property with the given name, <code>undefined<\/code> is returned.\n\n<b>Warning:<\/b> Type, structure and behavior of the returned info objects is not documented and therefore not part of the API. See the {@link #constructor Notes about Info objects} in the constructor documentation of this class.","!type":"fn(sName: String) -> Object","!category":"function","parameters":{"sName":"type: string, description: name of the property"},"!static":false},"getAllEvents":{"!description":"Returns a map of info objects for all public events of the described class, including public events form the ancestor classes.\n\nThe returned map keys the event info objects by their name.\n\n<b>Warning:<\/b> Type, structure and behavior of the returned info objects is not documented and therefore not part of the API. See the {@link #constructor Notes about Info objects} in the constructor documentation of this class.","!type":"fn() -> map","!category":"function","!static":false},"forwardAggregation":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"fn(sForwardedSourceAggregation: String, mOptions: Object)","!category":"function","parameters":{"sForwardedSourceAggregation":"type: string, description: The name of the aggregation to be forwarded","mOptions":"type: object, description: The forwarding target as well as additional options"},"!static":false},"hasAssociation":{"!description":"Checks the existence of the given association by its name","!type":"fn(sName: String) -> Boolean","!category":"function","parameters":{"sName":"type: string, description: name of the association"},"!static":false},"!proto":"sap.ui.base.Object","!helpDescription":"<strong>Note about Info Objects<\/strong>\n\nSeveral methods in this class return info objects that describe a property, aggregation, association or event of the class described by this metadata object. The type, structure and behavior of these info objects is not yet documented and not part of the stable, public API.\n\nCode using such methods and the returned info objects therefore needs to be aware of the following restrictions:\n\n<ul> <li>the set of properties exposed by each info object, their type and value might change as well as the class of the info object itself.\n\nProperties that represent settings provided during class definition (in the oClassInfo parameter of the 'extend' call, e.g. 'type', 'multiple' of an aggregation) are more likely to stay the same than additional, derived properties like '_iKind'.<\/li>\n\n<li>info objects must not be modified / enriched although they technically could.<\/li>\n\n<li>the period of validity of info objects is not defined. They should be referenced only for a short time and not be kept as members of long living objects or closures.<\/li>\n\n<\/ul>"},"sap.ui.core.mvc.Controller":{"onAfterRendering":{"!description":"This method is called every time the View is rendered, after the HTML is placed in the DOM-Tree. It can be used to apply additional changes to the DOM after the Renderer has finished. (Even though this method is declared as \"abstract\", it does not need to be defined in controllers, if the method does not exist, it will simply not be called.)","!type":"fn()","!category":"function","!static":false},"onBeforeRendering":{"!description":"This method is called every time the View is rendered, before the Renderer is called and the HTML is placed in the DOM-Tree. It can be used to perform clean-up-tasks before re-rendering. (Even though this method is declared as \"abstract\", it does not need to be defined in controllers, if the method does not exist, it will simply not be called.)","!type":"fn()","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.mvc.Controller with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Instantiates a (MVC-style) controller. Consumers should call the constructor only in the\ntyped controller scenario. In the generic controller use case, they should use\n{@link sap.ui.controller} instead.","!module":"sap/ui/core/mvc/Controller","getView":{"!description":"Returns the view associated with this controller or undefined.","!type":"fn() -> sap.ui.core.mvc.View","!category":"function","!static":false},"onInit":{"!description":"This method is called upon initialization of the View. The controller can perform its internal setup in this hook. It is only called once per View instance, unlike the onBeforeRendering and onAfterRendering hooks. (Even though this method is declared as \"abstract\", it does not need to be defined in controllers, if the method does not exist, it will simply not be called.)","!type":"fn()","!category":"function","!static":false},"getOwnerComponent":{"!description":"Gets the component of the controller's view\n\nIf there is no Component connected to the view or the view is not connected to the controller, undefined is returned.","!type":"fn() -> sap.ui.core.Component","!category":"function","!static":false},"!description":"A generic controller implementation for the UI5 Model-View-Controller concept.\n\nCan either be used as a generic controller which is enriched on the fly with methods and properties (see {@link sap.ui.controller}) or as a base class for typed controllers.","byId":{"!description":"Returns an Element of the connected view with the given local ID.\n\nViews automatically prepend their own ID as a prefix to created Elements to make the IDs unique even in the case of multiple view instances. This method helps to find an element by its local ID only.\n\nIf no view is connected or if the view doesn't contain an element with the given local ID, undefined is returned.","!type":"fn(sId: String) -> sap.ui.core.Element","!category":"function","parameters":{"sId":"type: string, description: View-local ID"},"!static":false},"registerExtensionProvider":{"!description":"Registers a callback module, which provides code enhancements for the lifecycle and event handler functions of a specific controller. The code enhancements are returned either in sync or async mode.\n\nThe extension provider module provides the <code>getControllerExtensions<\/code> function which returns either directly an array of objects or a Promise that returns an array of objects when it resolves. These objects are object literals defining the methods and properties of the controller in a similar way as {@link sap.ui.controller}.\n\n<b>Example for a callback module definition (sync):<\/b> <pre>\nsap.ui.define(\"my/custom/sync/ExtensionProvider\", ['jquery.sap.global'], function(jQuery) {\n  var ExtensionProvider = function() {};\n  ExtensionProvider.prototype.getControllerExtensions = function(sControllerName, sComponentId, bAsync) {\n    if (!bAsync && sControllerName == \"my.own.Controller\") {\n      // IMPORTANT: only return extensions for a specific controller\n      return [{\n        onInit: function() {\n          // Do something here...\n        },\n        onAfterRendering: function() {\n          // Do something here...\n        },\n        onButtonClick: function(oEvent) {\n          // Handle the button click event\n        }\n      }\n    }];\n  };\n  return ExtensionProvider;\n}, true);\n<\/pre>\n\n<b>Example for a callback module definition (async):<\/b> <pre>\nsap.ui.define(\"my/custom/async/ExtensionProvider\", ['jquery.sap.global'], function(jQuery) {\n  var ExtensionProvider = function() {};\n  ExtensionProvider.prototype.getControllerExtensions = function(sControllerName, sComponentId, bAsync) {\n    if (bAsync && sControllerName == \"my.own.Controller\") {\n      // IMPORTANT:\n      // only return a Promise for a specific controller since it\n      // requires the View/Controller and its parents to run in async\n      // mode!\n      return new Promise(function(fnResolve, fnReject) {\n        fnResolve([{\n          onInit: function() {\n            // Do something here...\n          },\n          onAfterRendering: function() {\n            // Do something here...\n          },\n          onButtonClick: function(oEvent) {\n            // Handle the button click event\n          }\n        }]);\n      }\n    };\n  };\n  return ExtensionProvider;\n}, true);\n<\/pre>\n\nThe lifecycle functions <code>onInit<\/code>, <code>onExit<\/code>, <code>onBeforeRendering<\/code> and <code>onAfterRendering<\/code> are added before or after the lifecycle functions of the original controller. The event handler functions, such as <code>onButtonClick<\/code>, are replacing the original controller's function.\n\nWhen using an async extension provider you need to ensure that the view is loaded in async mode.\n\nIn both cases, return <code>undefined<\/code> if no controller extension shall be applied.","!type":"fn(sExtensionProvider: String)","!category":"function","parameters":{"sExtensionProvider":"type: string, description: the module name of the extension provider\n\nSee {@link sap.ui.controller} for an overview of the available functions for controllers."},"!static":true},"onExit":{"!description":"This method is called upon desctuction of the View. The controller should perform its internal destruction in this hook. It is only called once per View instance, unlike the onBeforeRendering and onAfterRendering hooks. (Even though this method is declared as \"abstract\", it does not need to be defined in controllers, if the method does not exist, it will simply not be called.)","!type":"fn()","!category":"function","!static":false},"!category":"class","!helpDescription":"A generic controller implementation for the UI5 Model-View-Controller concept.\n\nCan either be used as a generic controller which is enriched on the fly with methods and properties (see {@link sap.ui.controller}) or as a base class for typed controllers.","!proto":"sap.ui.base.EventProvider","createId":{"!description":"Converts a view local ID to a globally unique one by prepending the view ID.\n\nIf no view is connected, undefined is returned.","!type":"fn(sId: String) -> String","!category":"function","parameters":{"sId":"type: string, description: View-local ID"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.mvc.Controller.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.Icon":{"getAlt":{"!description":"Gets current value of property {@link #getAlt alt}.\n\nThis defines the alternative text which is used for outputting the aria-label attribute on the DOM.","!type":"fn() -> String","!category":"function","!static":false},"setHoverColor":{"!description":"Sets a new value for property {@link #getHoverColor hoverColor}.\n\nThis color is shown when icon is hovered. This property has no visual effect when run on mobile device.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHoverColor: String) -> sap.ui.core.Icon","!category":"function","parameters":{"sHoverColor":"type: string, description: New value for property <code>hoverColor<\/code>"},"!static":false},"getDecorative":{"!description":"Gets current value of property {@link #getDecorative decorative}.\n\nA decorative icon is included for design reasons. Accessibility tools will ignore decorative icons. Tab stop isn't affected by this property anymore and it's now controlled by the existence of press event handler and the noTabStop property.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","!category":"function","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"},"!static":false},"firePress":{"!description":"Fires event {@link #event:press press} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.core.Icon","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getBackgroundColor":{"!description":"Gets current value of property {@link #getBackgroundColor backgroundColor}.\n\nBackground color of the Icon in normal state.","!type":"fn() -> String","!category":"function","!static":false},"!module":"sap/ui/core/Icon","setDecorative":{"!description":"Sets a new value for property {@link #getDecorative decorative}.\n\nA decorative icon is included for design reasons. Accessibility tools will ignore decorative icons. Tab stop isn't affected by this property anymore and it's now controlled by the existence of press event handler and the noTabStop property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bDecorative: Boolean) -> sap.ui.core.Icon","!category":"function","parameters":{"bDecorative":"type: boolean, description: New value for property <code>decorative<\/code>"},"!static":false},"setAlt":{"!description":"Sets a new value for property {@link #getAlt alt}.\n\nThis defines the alternative text which is used for outputting the aria-label attribute on the DOM.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sAlt: String) -> sap.ui.core.Icon","!category":"function","parameters":{"sAlt":"type: string, description: New value for property <code>alt<\/code>"},"!static":false},"setColor":{"!description":"Sets a new value for property {@link #getColor color}.\n\nThe color of the Icon. If color is not defined here, the Icon inherits the color from its DOM parent.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sColor: String) -> sap.ui.core.Icon","!category":"function","parameters":{"sColor":"type: string, description: New value for property <code>color<\/code>"},"!static":false},"getActiveBackgroundColor":{"!description":"Gets current value of property {@link #getActiveBackgroundColor activeBackgroundColor}.\n\nBackground color for Icon in active state.","!type":"fn() -> String","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nThis is the height of the DOM element which contains the Icon. Setting this property doesn't affect the size of the font. If you want to make the font bigger, increase the size property.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setHoverBackgroundColor":{"!description":"Sets a new value for property {@link #getHoverBackgroundColor hoverBackgroundColor}.\n\nBackground color for Icon in hover state. This property has no visual effect when run on mobile device.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHoverBackgroundColor: String) -> sap.ui.core.Icon","!category":"function","parameters":{"sHoverBackgroundColor":"type: string, description: New value for property <code>hoverBackgroundColor<\/code>"},"!static":false},"getUseIconTooltip":{"!description":"Gets current value of property {@link #getUseIconTooltip useIconTooltip}.\n\nDecides whether a default Icon tooltip should be used if no tooltip is set.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getActiveColor":{"!description":"Gets current value of property {@link #getActiveColor activeColor}.\n\nThis color is shown when icon is pressed/activated by the user.","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","setActiveBackgroundColor":{"!description":"Sets a new value for property {@link #getActiveBackgroundColor activeBackgroundColor}.\n\nBackground color for Icon in active state.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sActiveBackgroundColor: String) -> sap.ui.core.Icon","!category":"function","parameters":{"sActiveBackgroundColor":"type: string, description: New value for property <code>activeBackgroundColor<\/code>"},"!static":false},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nThis is the width of the DOM element which contains the Icon. Setting this property doesn't affect the size of the font. If you want to make the font bigger, increase the size property.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getNoTabStop":{"!description":"Gets current value of property {@link #getNoTabStop noTabStop}.\n\nDefines whether the tab stop of icon is controlled by the existence of press event handler. When it's set to false, Icon control has tab stop when press event handler is attached. If it's set to true, Icon control never has tab stop no matter whether press event handler exists or not.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nThis is the width of the DOM element which contains the Icon. Setting this property doesn't affect the size of the font. If you want to make the font bigger, increase the size property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.core.Icon","!category":"function","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"},"!static":false},"setUseIconTooltip":{"!description":"Sets a new value for property {@link #getUseIconTooltip useIconTooltip}.\n\nDecides whether a default Icon tooltip should be used if no tooltip is set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bUseIconTooltip: Boolean) -> sap.ui.core.Icon","!category":"function","parameters":{"bUseIconTooltip":"type: boolean, description: New value for property <code>useIconTooltip<\/code>"},"!static":false},"getSrc":{"!description":"Gets current value of property {@link #getSrc src}.\n\nThis property should be set by the return value of calling sap.ui.core.IconPool.getIconURI with an Icon name parameter and an optional collection parameter which is required when using application extended Icons. A list of standard FontIcon is available here.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"getSize":{"!description":"Gets current value of property {@link #getSize size}.\n\nSince Icon uses font, this property will be applied to the css font-size property on the rendered DOM element.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getAccessibilityInfo":{"!type":"fn()","!category":"function","!static":false},"setSize":{"!description":"Sets a new value for property {@link #getSize size}.\n\nSince Icon uses font, this property will be applied to the css font-size property on the rendered DOM element.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSize: sap.ui.core.CSSSize) -> sap.ui.core.Icon","!category":"function","parameters":{"sSize":"type: sap.ui.core.CSSSize, description: New value for property <code>size<\/code>"},"!static":false},"getColor":{"!description":"Gets current value of property {@link #getColor color}.\n\nThe color of the Icon. If color is not defined here, the Icon inherits the color from its DOM parent.","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.Icon with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setNoTabStop":{"!description":"Sets a new value for property {@link #getNoTabStop noTabStop}.\n\nDefines whether the tab stop of icon is controlled by the existence of press event handler. When it's set to false, Icon control has tab stop when press event handler is attached. If it's set to true, Icon control never has tab stop no matter whether press event handler exists or not.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bNoTabStop: Boolean) -> sap.ui.core.Icon","!category":"function","parameters":{"bNoTabStop":"type: boolean, description: New value for property <code>noTabStop<\/code>"},"!static":false},"setBackgroundColor":{"!description":"Sets a new value for property {@link #getBackgroundColor backgroundColor}.\n\nBackground color of the Icon in normal state.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sBackgroundColor: String) -> sap.ui.core.Icon","!category":"function","parameters":{"sBackgroundColor":"type: string, description: New value for property <code>backgroundColor<\/code>"},"!static":false},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"!constructorDescription":"Constructor for a new Icon.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSrc src} : sap.ui.core.URI<\/li>\n<li>{@link #getSize size} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getColor color} : string<\/li>\n<li>{@link #getHoverColor hoverColor} : string<\/li>\n<li>{@link #getActiveColor activeColor} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getBackgroundColor backgroundColor} : string<\/li>\n<li>{@link #getHoverBackgroundColor hoverBackgroundColor} : string<\/li>\n<li>{@link #getActiveBackgroundColor activeBackgroundColor} : string<\/li>\n<li>{@link #getDecorative decorative} : boolean (default: true)<\/li>\n<li>{@link #getUseIconTooltip useIconTooltip} : boolean (default: true)<\/li>\n<li>{@link #getAlt alt} : string<\/li>\n<li>{@link #getNoTabStop noTabStop} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","attachPress":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:press press} event of this <code>sap.ui.core.Icon<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.core.Icon<\/code> itself.\n\nThis event is fired when icon is pressed/activated by the user. When a handler is attached to this event, the Icon gets tab stop. If you want to disable this behavior, set the noTabStop property to true.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.Icon","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.core.Icon<\/code> itself"},"!static":false},"getHoverColor":{"!description":"Gets current value of property {@link #getHoverColor hoverColor}.\n\nThis color is shown when icon is hovered. This property has no visual effect when run on mobile device.","!type":"fn() -> String","!category":"function","!static":false},"getHoverBackgroundColor":{"!description":"Gets current value of property {@link #getHoverBackgroundColor hoverBackgroundColor}.\n\nBackground color for Icon in hover state. This property has no visual effect when run on mobile device.","!type":"fn() -> String","!category":"function","!static":false},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.Icon","!category":"function","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"},"!static":false},"!description":"Icon uses embedded font instead of pixel image. Comparing to image, Icon is easily scalable, color can be altered live and various effects can be added using css.\n\nA set of built in Icons is available and they can be fetched by calling sap.ui.core.IconPool.getIconURI and set this value to the src property on the Icon.","setSrc":{"!description":"Sets a new value for property {@link #getSrc src}.\n\nThis property should be set by the return value of calling sap.ui.core.IconPool.getIconURI with an Icon name parameter and an optional collection parameter which is required when using application extended Icons. A list of standard FontIcon is available here.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSrc: sap.ui.core.URI) -> sap.ui.core.Icon","!category":"function","parameters":{"sSrc":"type: sap.ui.core.URI, description: New value for property <code>src<\/code>"},"!static":false},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nThis is the height of the DOM element which contains the Icon. Setting this property doesn't affect the size of the font. If you want to make the font bigger, increase the size property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.core.Icon","!category":"function","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"},"!static":false},"setActiveColor":{"!description":"Sets a new value for property {@link #getActiveColor activeColor}.\n\nThis color is shown when icon is pressed/activated by the user.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sActiveColor: String) -> sap.ui.core.Icon","!category":"function","parameters":{"sActiveColor":"type: string, description: New value for property <code>activeColor<\/code>"},"!static":false},"detachPress":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:press press} event of this <code>sap.ui.core.Icon<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.Icon","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"Icon uses embedded font instead of pixel image. Comparing to image, Icon is easily scalable, color can be altered live and various effects can be added using css.\n\nA set of built in Icons is available and they can be fetched by calling sap.ui.core.IconPool.getIconURI and set this value to the src property on the Icon.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.Icon.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.dnd.DragSession":{"setTextData":{"!description":"Sets string data with plain text MIME type. <b>Note:<\/b> This works in all browsers, including Internet Explorer and Microsoft Edge. It also works if you navigate between different windows.","!type":"fn(sData: String)","!category":"function","!static":"true"},"getIndicator":{"!description":"Returns the drop indicator.","!type":"fn() -> HTMLElement","!category":"function","!static":"true"},"!description":"When a user requests to drag some controls that can be dragged, a drag session is started. The drag session can be used to transfer data between applications or between dragged and dropped controls. Please see provided APIs for more details.\n\n<b>Note:<\/b> This object only exists during a drag-and-drop operation.","getData":{"!description":"Returns the data that has been set via <code>setData<\/code> method.","!type":"fn(sKey: String) -> String","!category":"function","!static":"true"},"!category":"namespace","draggedControl":{"!description":"The dragged control, if available within the same UI5 application frame.","!type":"sap.ui.core.Element","!category":"enum"},"dropControl":{"!description":"The valid drop target underneath the dragged control.","!type":"sap.ui.core.Element","!category":"enum"},"getTextData":{"!description":"Returns the data that has been set via <code>setTextData<\/code> method.","!type":"fn() -> String","!category":"function","!static":"true"},"!module":"sap/ui/core/dnd/DragAndDrop","setData":{"!description":"Sets string data with any MIME type. <b>Note:<\/b> This works in all browsers, apart from Internet Explorer and Microsoft Edge. It also works if you navigate between different windows.","!type":"fn(sKey: String, sData: String)","!category":"function","!static":"true"},"getComplexData":{"!description":"Returns the data that has been set via <code>setComplexData<\/code> method.","!type":"fn(sKey: String) -> Object","!category":"function","!static":"true"},"!helpDescription":"When a user requests to drag some controls that can be dragged, a drag session is started. The drag session can be used to transfer data between applications or between dragged and dropped controls. Please see provided APIs for more details.\n\n<b>Note:<\/b> This object only exists during a drag-and-drop operation."},"sap.ui.core.Orientation":{"!description":"Orientation of a UI element","Vertical":{"!description":"Arrange Vertically","!type":"String","!category":"enum"},"!category":"static class","Horizontal":{"!description":"Arrange Horizontally","!type":"String","!category":"enum"},"!module":"sap/ui/core/library"},"sap.ui.model.SimpleType_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.SimpleType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Type.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.SimpleType"},"sap.ui.core.ComponentContainer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.ComponentContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.ComponentContainer"},"sap.ui.model.ParseException":{"!description":"Instances of this exception are thrown when an error occurs while converting a string value to a specific property type in the model.","!category":"class","!constructorDescription":"Create a new ParseException.","!module":"sap/ui/model/ParseException","!proto":"sap.ui.base.Object","!helpDescription":"Instances of this exception are thrown when an error occurs while converting a string value to a specific property type in the model."},"sap.ui.Device.system":{"phone":{"!description":"If this flag is set to <code>true<\/code>, the device is recognized as a phone.\n\nFurthermore, a CSS class <code>sap-phone<\/code> is added to the document root element.","!type":"Boolean","!category":"enum"},"tablet":{"!description":"If this flag is set to <code>true<\/code>, the device is recognized as a tablet.\n\nFurthermore, a CSS class <code>sap-tablet<\/code> is added to the document root element.\n\n<b>Note:<\/b> This flag is also true for some browsers on desktop devices running on Windows 8 or higher. Also see the documentation for {@link sap.ui.Device.system.combi} devices. You can use the following logic to ensure that the current device is a tablet device:\n\n<pre>\nif(sap.ui.Device.system.tablet && !sap.ui.Device.system.desktop){\n\t...tablet related commands...\n}\n<\/pre>","!type":"Boolean","!category":"enum"},"!description":"Provides a basic categorization of the used device based on various indicators.\n\nThese indicators are for example the support of touch events, the screen size, the used operation system or the user agent of the browser.\n\n<b>Note:<\/b> Depending on the capabilities of the device it is also possible that multiple flags are set to <code>true<\/code>.","!category":"namespace","desktop":{"!description":"If this flag is set to <code>true<\/code>, the device is recognized as a desktop system.\n\nFurthermore, a CSS class <code>sap-desktop<\/code> is added to the document root element.","!type":"Boolean","!category":"enum"},"combi":{"!description":"If this flag is set to <code>true<\/code>, the device is recognized as a combination of a desktop system and tablet.\n\nFurthermore, a CSS class <code>sap-combi<\/code> is added to the document root element.\n\n<b>Note:<\/b> This property is mainly for Microsoft Windows 8 (and following) devices where the mouse and touch event may be supported natively by the browser being used. This property is set to <code>true<\/code> only when both mouse and touch event are natively supported.","!type":"Boolean","!category":"enum"},"!module":"sap/ui/Device","!helpDescription":"Provides a basic categorization of the used device based on various indicators.\n\nThese indicators are for example the support of touch events, the screen size, the used operation system or the user agent of the browser.\n\n<b>Note:<\/b> Depending on the capabilities of the device it is also possible that multiple flags are set to <code>true<\/code>."},"sap.ui.model.control":{"!description":"Control-based DataBinding","!category":"namespace","!module":"sap/ui/model/control/ControlModel","!helpDescription":"Control-based DataBinding"},"sap.ui.core.tmpl.HandlebarsTemplate":{"!description":"The class for Handlebars Templates.","extend":{"!description":"Creates a new subclass of class sap.ui.core.tmpl.HandlebarsTemplate with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.tmpl.Template.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Creates and initializes a new handlebars template with the given <code>sId<\/code>\nand settings.\n\nThe set of allowed entries in the <code>mSettings<\/code> object depends on\nthe concrete subclass and is described there.","!module":"sap/ui/core/tmpl/HandlebarsTemplate","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.tmpl.HandlebarsTemplate.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.tmpl.Template","!helpDescription":"The class for Handlebars Templates."},"sap.ui.core.HTML_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.HTML with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.HTML"},"sap.ui.core.CalendarType":{"Japanese":{"!description":"The Japanese emperor calendar","!type":"String","!category":"enum"},"Persian":{"!description":"The Persian Jalali calendar","!type":"String","!category":"enum"},"!description":"The types of Calendar","!category":"static class","Islamic":{"!description":"The Islamic calendar","!type":"String","!category":"enum"},"Gregorian":{"!description":"The Gregorian calendar","!type":"String","!category":"enum"},"!module":"sap/ui/core/library"},"sap.ui.model.analytics.AnalyticalTreeBindingAdapter":{"getNumberOfExpandedLevels":{"!description":"Retrieves the currently set number of expanded levels from the Binding (commonly an AnalyticalBinding).","!type":"fn() -> Number","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","hasTotaledMeasures":{"!description":"Checks if the AnalyticalBinding has totaled measures available. Used for rendering sum rows.","!type":"fn() -> Boolean","!category":"function","!static":false},"!category":"class","setNumberOfExpandedLevels":{"!description":"Sets the number of expanded levels on the TreeBinding (commonly an AnalyticalBinding). This is NOT the same as AnalyticalTreeBindingAdapter#collapse or AnalyticalTreeBindingAdapter#expand. Setting the number of expanded levels leads to different requests. This function is used by the AnalyticalTable for the ungroup/ungroup-all feature.","!type":"fn(iLevels: Number)","!category":"function","parameters":{"iLevels":"type: int, description: the number of levels which should be expanded, minimum is 0"},"!static":false},"!constructorDescription":"Adapter for TreeBindings to add the ListBinding functionality and use the\ntree structure in list based controls.","!module":"sap/ui/model/analytics/AnalyticalTreeBindingAdapter","!proto":"sap.ui.base.Object","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>"},"jQuery.sap.util.Properties":{"!description":"Represents a collection of string properties (key/value pairs).\n\nEach key and its corresponding value in the collection is a string, keys are case-sensitive.\n\nUse {@link jQuery.sap.properties} to create an instance of <code>jQuery.sap.util.Properties<\/code>.\n\nThe {@link #getProperty} method can be used to retrieve a value from the collection, {@link #setProperty} to store or change a value for a key and {@link #getKeys} can be used to retrieve an array of all keys that are currently stored in the collection.","!category":"static class","!module":"jquery.sap.properties"},"sap.ui.model.type.DateInterval_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.type.DateInterval with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.CompositeType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.type.DateInterval"},"sap.ui.model.analytics":{"!description":"Analytical Adapter for ODataModels","AnalyticalBinding":"sap.ui.model.analytics.AnalyticalBinding_obj","AnalyticalTreeBindingAdapter":"sap.ui.model.analytics.AnalyticalTreeBindingAdapter_obj","!category":"namespace","odata4analytics":"sap.ui.model.analytics.odata4analytics","BatchResponseCollector":"sap.ui.model.analytics.BatchResponseCollector_obj","ODataModelAdapter":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"fn()","!category":"function","!static":"true"},"!module":"sap/ui/model/analytics/ODataModelAdapter","!helpDescription":"Analytical Adapter for ODataModels"},"sap.ui.model.ClientModel":{"updateBindings":{"!description":"update all bindings","!type":"fn(bForceUpdate: Boolean)","!category":"function","parameters":{"bForceUpdate":"type: boolean, description: true/false: Default = false. If set to false an update will only be done when the value of a binding changed."},"!static":false},"destroy":{"!type":"fn()","!category":"function","!static":false},"!description":"Model implementation for Client models","getData":{"!description":"Returns the current data of the model. Be aware that the returned object is a reference to the model data so all changes to that data will also change the model data.","!type":"fn()","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.ClientModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","forceNoCache":{"!description":"Force no caching.","!type":"fn(bForceNoCache?: Boolean)","!category":"function","parameters":{"bForceNoCache":"type: boolean, description: whether to force not to cache"},"!static":false},"!constructorDescription":"Constructor for a new ClientModel.","!module":"sap/ui/model/ClientModel","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.ClientModel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.Model","!helpDescription":"Model implementation for Client models"},"sap.ui.core.URI":{"!description":"A string type that represents an RFC 3986 conformant URI.","!category":"namespace","!module":"sap/ui/core/library","!helpDescription":"A string type that represents an RFC 3986 conformant URI."},"sap.ui.model.analytics.odata4analytics.EntityType":{"getRequiredFilterPropertyNames":{"!description":"Get names of properties that must be filtered, that is they must appear in every $filter expression","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getTextPropertyOfProperty":{"!description":"Get the text property related to the property with specified name (identified by property metadata annotation sap:text)","!type":"fn(sPropertyName: String) -> Object","!category":"function","parameters":{"sPropertyName":"type: string, description: Property name"},"!static":false},"getProperties":{"!description":"Get all properties","!type":"fn() -> Object","!category":"function","!static":false},"!constructorDescription":"Create a representation of an OData entity type in the context of an analytic\nquery. Do not create your own instances.","findPropertyByName":{"!description":"Find property by name","!type":"fn(sPropertyName: String) -> Object","!category":"function","parameters":{"sPropertyName":"type: string, description: Property name"},"!static":false},"!module":"sap/ui/model/analytics/odata4analytics","getSuperOrdinatePropertyOfProperty":{"!description":"Get the super-ordinate property related to the property with specified name (identified by property metadata annotation sap:super-ordinate)","!type":"fn(sPropertyName: String) -> Object","!category":"function","parameters":{"sPropertyName":"type: string, description: Property name"},"!static":false},"getAllHierarchyPropertyNames":{"!description":"Get the names of all properties with an associated hierarchy","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getKeyProperties":{"!description":"Get key properties of this type","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getLabelOfProperty":{"!description":"Get label of the property with specified name (identified by property metadata annotation sap:label)","!type":"fn(sPropertyName: String) -> String","!category":"function","parameters":{"sPropertyName":"type: string, description: Property name"},"!static":false},"!description":"Representation of an OData entity type.","getTypeDescription":{"!description":"Get full description for this entity type","!type":"fn() -> Object","!category":"function","!static":false},"getHierarchy":{"!description":"Get the hierarchy associated to a given property Based on the current specification, hierarchies are always recursive. TODO: Extend behavior when leveled hierarchies get in scope","!type":"fn(sName: String) -> sap.ui.model.analytics.odata4analytics.RecursiveHierarchy","!category":"function","parameters":{"sName":"type: string, description: Parameter name"},"!static":false},"getSortablePropertyNames":{"!description":"Get names of properties that can be sorted, that is they can be used in $orderby expressions","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getQuickInfoOfProperty":{"!description":"Get quick info of the property with specified name (identified by property metadata annotation sap:quickinfo)","!type":"fn(sPropertyName: String) -> String","!category":"function","parameters":{"sPropertyName":"type: string, description: Property name"},"!static":false},"!category":"class","getFilterablePropertyNames":{"!description":"Get names of properties that can be filtered, that is they can be used in $filter expressions","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getPropertiesWithFilterRestrictions":{"!description":"Get properties for which filter restrictions have been specified","!type":"fn() -> Object","!category":"function","!static":false},"getHeadingOfProperty":{"!description":"Get heading of the property with specified name (identified by property metadata annotation sap:heading)","!type":"fn(sPropertyName: String) -> String","!category":"function","parameters":{"sPropertyName":"type: string, description: Property name"},"!static":false},"getQName":{"!description":"Get the fully qualified name for this entity type","!type":"fn() -> String","!category":"function","!static":false},"!helpDescription":"Representation of an OData entity type.","!proto":"sap.ui.base.Object"},"sap.ui.model.analytics.odata4analytics.Model":{"!description":"Representation of an OData model with analytical annotations defined by OData4SAP.","!category":"class","!constructorDescription":"Create a representation of the analytical semantics of OData service metadata","!module":"sap/ui/model/analytics/odata4analytics","!proto":"sap.ui.base.Object","!helpDescription":"Representation of an OData model with analytical annotations defined by OData4SAP."},"sap.ui.test.matchers.AggregationLengthEquals":{"extend":{"!description":"Creates a new subclass of class sap.ui.test.matchers.AggregationLengthEquals with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"AggregationLengthEquals - checks if an aggregation contains at least one entry.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getLength length} : int<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.test.matchers.Matcher#constructor sap.ui.test.matchers.Matcher}\ncan be used as well.","!module":"sap/ui/test/matchers/AggregationLengthEquals","isMatching":{"!description":"Checks if the control's aggregation <code>name<\/code> has length <code>length<\/code>.","!type":"fn(oControl: sap.ui.core.Control) -> Boolean","!category":"function","parameters":{"oControl":"type: sap.ui.core.Control, description: the control that is checked by the matcher"},"!static":false},"!description":"AggregationLengthEquals - checks if an aggregation contains at least one entry","getName":{"!description":"Gets current value of property {@link #getName name}.\n\nThe name of the aggregation that is used for matching.","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","getLength":{"!description":"Gets current value of property {@link #getLength length}.\n\nThe length that aggregation <code>name<\/code> should have.","!type":"fn() -> Number","!category":"function","!static":false},"setName":{"!description":"Sets a new value for property {@link #getName name}.\n\nThe name of the aggregation that is used for matching.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sName: String) -> sap.ui.test.matchers.AggregationLengthEquals","!category":"function","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"},"!static":false},"setLength":{"!description":"Sets a new value for property {@link #getLength length}.\n\nThe length that aggregation <code>name<\/code> should have.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(iLength: Number) -> sap.ui.test.matchers.AggregationLengthEquals","!category":"function","parameters":{"iLength":"type: int, description: New value for property <code>length<\/code>"},"!static":false},"!helpDescription":"AggregationLengthEquals - checks if an aggregation contains at least one entry","!proto":"sap.ui.test.matchers.Matcher","getMetadata":{"!description":"Returns a metadata object for class sap.ui.test.matchers.AggregationLengthEquals.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.model.analytics.odata4analytics.ParameterizationRequest":{"!description":"Creation of URIs for query parameterizations.","getURIToParameterizationEntry":{"!description":"Get the URI to locate the parameterization entity for the values assigned to all parameters beforehand. Notice that a value must be supplied for every parameter including those marked as optional. For optional parameters, assign the special value that the service provider uses as an \"omitted\" value. For example, for services based on BW Easy Queries, this would be an empty string.","!type":"fn(sServiceRootURI: String)","!category":"function","parameters":{"sServiceRootURI":"type: String, description: (optional) Identifies the root of the OData service"},"!static":false},"getParameterization":{"!description":"Get the description of the parameterization on which this request operates on","!type":"fn() -> sap.ui.model.analytics.odata4analytics.Parameterization","!category":"function","!static":false},"!category":"class","!constructorDescription":"Create a request object for interaction with a query parameterization.","!module":"sap/ui/model/analytics/odata4analytics","setParameterValue":{"!description":"Assign a value to a parameter","!type":"fn(sParameterName: String, sValue: String, sToValue: String)","!category":"function","parameters":{"sToValue":"type: String, description: Omit it or set it to null for single values. If set, it will be assigned to the upper boundary parameter","sParameterName":"type: String, description: Name of the parameter. In case of a range value, provide the name of the lower boundary parameter.","sValue":"type: String, description: Assigned value. Pass null to remove a value assignment."},"!static":false},"getURIToParameterizationEntitySet":{"!description":"Get the URI to locate the entity set for the query parameterization.","!type":"fn(sServiceRootURI: String)","!category":"function","parameters":{"sServiceRootURI":"type: String, description: (optional) Identifies the root of the OData service"},"!static":false},"!proto":"sap.ui.base.Object","!helpDescription":"Creation of URIs for query parameterizations."},"sap.ui.model.SimpleType":{"!description":"This is an abstract base class for simple types.","validateValue":{"!description":"Validate whether a given value in model representation is valid and meets the defined constraints (if any).","!type":"fn(oValue: Object)","!category":"function","parameters":{"oValue":"type: any, description: the value to be validated"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.SimpleType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Type.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"formatValue":{"!description":"Format the given value in model representation to an output value in the given internal type. This happens according to the format options, if target type is 'string'. If oValue is not defined or null, null will be returned.","!type":"fn(oValue: Object, sInternalType: String) -> Object","!category":"function","parameters":{"oValue":"type: any, description: the value to be formatted","sInternalType":"type: string, description: the target type"},"!static":false},"!category":"class","!constructorDescription":"Constructor for a new SimpleType.","getModelFormat":{"!description":"Returns an object which has <code>format<\/code> and <code>parse<\/code> method. These two methods are used for converting between the raw value which is stored in the model and the related primitive type in JavaScript.\n\nIf a instance of {@link sap.ui.core.format.DateFormat#constructor DateFormat} or {@link sap.ui.core.format.NumberFormat#constructor NumberFormat} fits the needs, they could also be used as return value.\n\nThe default implementation of the <code>format<\/code> and <code>parse<\/code> method simply returns the given parameter. The subclass of {@link sap.ui.model.SimpleType#constructor SimpleType} should override this method if the raw value isn't already a JavaScript primitive type. The overwritten method must return an object which has the <code>format<\/code> and <code>parse<\/code> method implemented.\n\nFor example<br> If the type is related to a JavaScript Date object, but the raw value isn't, this method should return an instance of {@link sap.ui.core.format.DateFormat#constructor DateFormat}, which is able to convert between the raw value and a JavaScript Date object.","!type":"fn() -> Object","!category":"function","!static":false},"!module":"sap/ui/model/SimpleType","parseValue":{"!description":"Parse a value of an internal type to the expected value of the model type.","!type":"fn(oValue: Object, sInternalType: String) -> Object","!category":"function","parameters":{"oValue":"type: any, description: the value to be parsed","sInternalType":"type: string, description: the source type"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.SimpleType.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.Type","!helpDescription":"This is an abstract base class for simple types."},"sap.ui.model.odata":{"CountMode":"sap.ui.model.odata.CountMode","ODataContextBinding":"sap.ui.model.odata.ODataContextBinding_obj","v4":"sap.ui.model.odata.v4","BatchMode":"sap.ui.model.odata.BatchMode","v2":"sap.ui.model.odata.v2","ODataModel":"sap.ui.model.odata.ODataModel_obj","AnnotationHelper":"sap.ui.model.odata.AnnotationHelper","!module":"sap/ui/model/odata/ODataUtils","type":"sap.ui.model.odata.type","OperationMode":"sap.ui.model.odata.OperationMode","ODataPropertyBinding":"sap.ui.model.odata.ODataPropertyBinding_obj","Filter":"sap.ui.model.odata.Filter_obj","ODataMetaModel":"sap.ui.model.odata.ODataMetaModel_obj","!description":"OData-based DataBinding Utility Class","ODataTreeBindingAdapter":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"fn()","!category":"function","!static":"true"},"ODataListBinding":"sap.ui.model.odata.ODataListBinding_obj","ODataMetadata":"sap.ui.model.odata.ODataMetadata_obj","ODataTreeBindingFlat":{"!description":"Adapter for TreeBindings to add the ListBinding functionality and use the tree structure in list based controls.","!type":"fn()","!category":"function","!static":"true"},"!category":"namespace","UpdateMethod":"sap.ui.model.odata.UpdateMethod","ODataAnnotations":"sap.ui.model.odata.ODataAnnotations_obj","ODataMessageParser":"sap.ui.model.odata.ODataMessageParser_obj","ODataUtils":"sap.ui.model.odata.ODataUtils","!helpDescription":"OData-based DataBinding Utility Class"},"sap.ui.core":{"IconColor":"sap.ui.core.IconColor","displayBlock":{"!description":"Whether the CSS display should be set to \"block\".","!type":"Boolean","!category":"enum"},"PopupInterface":"sap.ui.core.PopupInterface","handleValidation":{"!description":"Enable/disable validation handling by MessageManager for this component. The resulting Messages will be propagated to the controls. This property can only be applied initially.","!type":"Boolean","!category":"enum"},"RenderManager":"sap.ui.core.RenderManager_obj","SeparatorItem":"sap.ui.core.SeparatorItem_obj","Scrolling":"sap.ui.core.Scrolling","!module":"sap/ui/core/library","activeBackgroundColor":{"!description":"Background color for Icon in active state.","!type":"String","!category":"enum"},"ScrollBarAction":"sap.ui.core.ScrollBarAction","LocalBusyIndicator":"sap.ui.core.LocalBusyIndicator_obj","BarColor":"sap.ui.core.BarColor","XMLComposite":"sap.ui.core.XMLComposite_obj","Manifest":"sap.ui.core.Manifest_obj","Item":"sap.ui.core.Item_obj","CalendarType":"sap.ui.core.CalendarType","DropEffect":"sap.ui.core.dnd.DropEffect","search":"sap.ui.core.search","lifecycle":{"!description":"Lifecycle behavior for the Component associated by the <code>ComponentContainer<\/code>. The default behavior is <code>Legacy<\/code>. This means that the <code>ComponentContainer<\/code> takes care that the Component is destroyed when the <code>ComponentContainer<\/code> is destroyed, but it is <b>not<\/b> destroyed when a new Component is associated. If you use the <code>usage<\/code> property to create the Component, the default behavior is <code>Container<\/code>. This means that the Component is destroyed when the <code>ComponentContainer<\/code> is destroyed or a new Component is associated. This property must only be applied before a component instance is created.","!type":"sap.ui.core.ComponentLifecycle","!category":"enum"},"HistoryDirection":"sap.ui.core.routing.HistoryDirection","CustomData":"sap.ui.core.CustomData_obj","IconPool":"sap.ui.core.IconPool","AccessibleRole":"sap.ui.core.AccessibleRole","collision":{"!description":"Optional. Collision - when the positioned element overflows the window in some direction, move it to an alternative position.","!type":"sap.ui.core.Collision","!category":"enum"},"scrollPosition":{"!description":"Scroll position in steps or pixels.","!type":"Number","!category":"enum"},"IntervalTrigger":"sap.ui.core.IntervalTrigger_obj","LabelEnablement":"sap.ui.core.LabelEnablement","support":"sap.ui.core.support","EventBus":"sap.ui.core.EventBus_obj","CSSSize":"sap.ui.core.CSSSize","busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!type":"sap.ui.core.BusyIndicatorSize","!category":"enum"},"CSSSizeShortHand":"sap.ui.core.CSSSizeShortHand","steps":{"!description":"Number of steps to scroll. Used if the size of the content is not known as the data is loaded dynamically.","!type":"Number","!category":"enum"},"ws":"sap.ui.core.ws","AnimationMode":"sap.ui.core.Configuration.AnimationMode","Toolbar":"sap.ui.core.Toolbar","TextAlign":"sap.ui.core.TextAlign","textDirection":{"!description":"Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control.","!type":"sap.ui.core.TextDirection","!category":"enum"},"Wrapping":"sap.ui.core.Wrapping","content":{"!description":"HTML content to be displayed, defined as a string.\n\nThe content is converted to DOM nodes with a call to <code>new jQuery(content)<\/code>, so any restrictions for the jQuery constructor apply to the content of the HTML control as well.\n\nSome of these restrictions (there might be others!) are: <ul> <li>the content must be enclosed in tags, pure text is not supported. <\/li> <li>if the content contains script tags, they will be executed but they will not appear in the resulting DOM tree. When the contained code tries to find the corresponding script tag, it will fail.<\/li> <\/ul>\n\nPlease consider to consult the jQuery documentation as well.\n\nThe HTML control currently doesn't prevent the usage of multiple root nodes in its DOM content (e.g. <code>setContent(\"&lt;div/>&lt;div/>\")<\/code>), but this is not a guaranteed feature. The accepted content might be restricted to single root nodes in future versions. To notify applications about this fact, a warning is written in the log when multiple root nodes are used.\n\nWhen changing the content dynamically, ensure that the ID of the root node remains the same as the HTML control's ID. Otherwise it cannot be guaranteed that certain lifecycle events take place.","!type":"String","!category":"enum"},"Dock":"sap.ui.core.Popup.Dock","VariantLayoutData":"sap.ui.core.VariantLayoutData_obj","closeDelay":{"!description":"Closing delay of the tooltip in milliseconds","!type":"Number","!category":"enum"},"ScrollBar":"sap.ui.core.ScrollBar_obj","AppCacheBuster":"sap.ui.core.AppCacheBuster","MessageType":"sap.ui.core.MessageType","!helpDescription":"The SAPUI5 Core Runtime.\n\nContains the UI5 jQuery plugins (jQuery.sap.*), the Core and all its components, base classes for Controls, Components and the Model View Controller classes.","myPosition":{"!description":"Optional. My position defines which position on the extended tooltip being positioned to align with the target control.","!type":"sap.ui.core.Dock","!category":"enum"},"AccessibleLandmarkRole":"sap.ui.core.AccessibleLandmarkRole","manifest":{"!description":"Controls when and from where to load the manifest for the Component. When set to any truthy value, the manifest will be loaded asynchronously by default and evaluated before the Component controller, if it is set to a falsy value other than <code>undefined<\/code>, the manifest will be loaded after the controller. A non-empty string value will be interpreted as the URL location from where to load the manifest. A non-null object value will be interpreted as manifest content. This property can only be applied initially.","!type":"Object","!category":"enum"},"LayoutData":"sap.ui.core.LayoutData_obj","ComponentMetadata":"sap.ui.core.ComponentMetadata_obj","Control":"sap.ui.core.Control_obj","delegate":"sap.ui.core.delegate","timestamp":{"!description":"Message's timestamp. It is just a simple String that will be used without any transformation. So the application that uses messages needs to format the timestamp to its own needs.","!type":"String","!category":"enum"},"useIconTooltip":{"!description":"Decides whether a default Icon tooltip should be used if no tooltip is set.","!type":"Boolean","!category":"enum"},"Renderer":"sap.ui.core.Renderer","activeColor":{"!description":"This color is shown when icon is pressed/activated by the user.","!type":"String","!category":"enum"},"openDuration":{"!description":"Optional. Open Duration in milliseconds.","!type":"Number","!category":"enum"},"TitleLevel":"sap.ui.core.TitleLevel","!category":"namespace","dnd":"sap.ui.core.dnd","ImeMode":"sap.ui.core.ImeMode","src":{"!description":"This property should be set by the return value of calling sap.ui.core.IconPool.getIconURI with an Icon name parameter and an optional collection parameter which is required when using application extended Icons. A list of standard FontIcon is available here.","!type":"sap.ui.core.URI","!category":"enum"},"URI":"sap.ui.core.URI","theming":"sap.ui.core.theming","UIComponent":"sap.ui.core.UIComponent_obj","Orientation":"sap.ui.core.Orientation","contentSize":{"!description":"Size of the scrollable content (in pixels).","!type":"sap.ui.core.CSSSize","!category":"enum"},"Message":"sap.ui.core.Message_obj","sanitizeContent":{"!description":"Whether to run the HTML sanitizer once the content (HTML markup) is applied or not.\n\nTo configure allowed URLs please use the whitelist API via jQuery.sap.addUrlWhitelist.","!type":"Boolean","!category":"enum"},"HorizontalAlign":"sap.ui.core.HorizontalAlign","Locale":"sap.ui.core.Locale_obj","emphasized":{"!description":"If set the title is displayed emphasized. This feature is nor supported by all controls using the Title.control.","!type":"Boolean","!category":"enum"},"Title":"sap.ui.core.Title_obj","Priority":"sap.ui.core.Priority","readOnly":{"!description":"Determines whether the message should be read only. This helps the application to handle a message a different way if the application differentiates between read-only and common messages.","!type":"Boolean","!category":"enum"},"!description":"The SAPUI5 Core Runtime.\n\nContains the UI5 jQuery plugins (jQuery.sap.*), the Core and all its components, base classes for Controls, Components and the Model View Controller classes.","Collision":"sap.ui.core.Collision","Popup":"sap.ui.core.Popup_obj","Label":"sap.ui.core.Label","fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is raised.\n\nSee {@link sap.ui.core.Control#attachValidateFieldGroup}.","!type":"[String]","!category":"enum"},"Element":"sap.ui.core.Element_obj","UIArea":"sap.ui.core.UIArea_obj","vertical":{"!description":"Orientation. Defines if the Scrollbar is vertical or horizontal.","!type":"Boolean","!category":"enum"},"ComponentContainer":"sap.ui.core.ComponentContainer_obj","EnabledPropagator":"sap.ui.core.EnabledPropagator_obj","VerticalAlign":"sap.ui.core.VerticalAlign","visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nSee {@link sap.ui.core.RenderManager#writeInvisiblePlaceholderData RenderManager#writeInvisiblePlaceholderData} for details.","!type":"Boolean","!category":"enum"},"backgroundColor":{"!description":"Background color of the Icon in normal state.","!type":"String","!category":"enum"},"IFormContent":"sap.ui.core.IFormContent","settings":{"!description":"The settings object passed to the component when created. This property can only be applied initially.","!type":"Object","!category":"enum"},"tmpl":"sap.ui.core.tmpl","busy":{"!description":"Whether the control is currently in busy state.","!type":"Boolean","!category":"enum"},"ListItem":"sap.ui.core.ListItem_obj","type":{"!description":"type : String","!type":"String","!category":"enum"},"preferDOM":{"!description":"Whether existing DOM content is preferred over the given content string.\n\nThere are two scenarios where this flag is relevant (when set to true): <ul> <li>for the initial rendering: when an HTML control is added to a UIArea for the first time and if the root node of that UIArea contained DOM content with the same id as the HTML control, then that content will be used for rendering instead of any specified string content<\/li> <li>any follow-up rendering: when an HTML control is rendered for the second or any later time and the preferDOM flag is set, then the DOM from the first rendering is preserved and not replaced by the string content<\/li> <\/ul>\n\nAs preserving the existing DOM is the most common use case of the HTML control, the default value is true.","!type":"Boolean","!category":"enum"},"ValueState":"sap.ui.core.ValueState","level":{"!description":"Defines the level of the title. If set to auto the level of the title is chosen by the control rendering the title.\n\nCurrently not all controls using the Title.control supporting this property.","!type":"sap.ui.core.TitleLevel","!category":"enum"},"height":{"!description":"The height","!type":"sap.ui.core.CSSSize","!category":"enum"},"HTML":"sap.ui.core.HTML_obj","hoverBackgroundColor":{"!description":"Background color for Icon in hover state. This property has no visual effect when run on mobile device.","!type":"String","!category":"enum"},"value":{"!description":"The data stored in this CustomData object. When the data is just stored, it can be any JS type, but when it is to be written to HTML (writeToDom == true) then it must be a string. If this restriction is violated, a warning will be logged and nothing will be written to the DOM.","!type":"Object","!category":"enum"},"ID":"sap.ui.core.ID","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!type":"Number","!category":"enum"},"BusyIndicator":"sap.ui.core.BusyIndicator","Component":"sap.ui.core.Component_obj","BusyIndicatorUtils":"sap.ui.core.BusyIndicatorUtils","key":{"!description":"Can be used as input for subsequent actions.","!type":"String","!category":"enum"},"autoPrefixId":{"!description":"Flag, whether to auto-prefix the ID of the nested Component or not. If this property is set to true the ID of the Component will be prefixed with the ID of the ComponentContainer followed by a single dash. This property can only be applied initially.","!type":"Boolean","!category":"enum"},"closeDuration":{"!description":"Optional. Close Duration in milliseconds.","!type":"Number","!category":"enum"},"enabled":{"!description":"Enabled items can be selected.","!type":"Boolean","!category":"enum"},"CSSColor":"sap.ui.core.CSSColor","text":{"!description":"The text that is shown in the tooltip that extends the TooltipBase class, for example in RichTooltip.","!type":"String","!category":"enum"},"width":{"!description":"The width","!type":"sap.ui.core.CSSSize","!category":"enum"},"format":"sap.ui.core.format","ValueStateSupport":"sap.ui.core.ValueStateSupport","noTabStop":{"!description":"Defines whether the tab stop of icon is controlled by the existence of press event handler. When it's set to false, Icon control has tab stop when press event handler is attached. If it's set to true, Icon control never has tab stop no matter whether press event handler exists or not.","!type":"Boolean","!category":"enum"},"url":{"!description":"The URL of the component. This property can only be applied initially.","!type":"sap.ui.core.URI","!category":"enum"},"size":{"!description":"Size of the Scrollbar (in pixels).","!type":"sap.ui.core.CSSSize","!category":"enum"},"Design":"sap.ui.core.Design","IShrinkable":"sap.ui.core.IShrinkable","AbsoluteCSSSize":"sap.ui.core.AbsoluteCSSSize","ResizeHandler":"sap.ui.core.ResizeHandler","util":"sap.ui.core.util","Fragment":"sap.ui.core.Fragment_obj","ViewType":"sap.ui.core.mvc.ViewType","decorative":{"!description":"A decorative icon is included for design reasons. Accessibility tools will ignore decorative icons. Tab stop isn't affected by this property anymore and it's now controlled by the existence of press event handler and the noTabStop property.","!type":"Boolean","!category":"enum"},"CustomStyleClassSupport":{"!description":"Applies the support for custom style classes on the prototype of a <code>sap.ui.core.Element<\/code>.\n\nAll controls (subclasses of <code>sap.ui.core.Control<\/code>) provide the support custom style classes. The control API provides functions to the application which allow it to add, remove or change style classes for the control. In general, this option is not available for elements because elements do not necessarily have a representation in the DOM.\n\nThis function can be used by a control developer to explicitly enrich the API of his/her element implementation with the API functions for the custom style class support. It must be called on the prototype of the element.\n\n<b>Usage Example:<\/b> <pre>\nsap.ui.define(['sap/ui/core/Element', 'sap/ui/core/CustomStyleClassSupport'], function(Element, CustomStyleClassSupport) {\n   \"use strict\";\n   var MyElement = Element.extend(\"my.MyElement\", {\n      metadata : {\n         //...\n      }\n      //...\n   });\n\n   CustomStyleClassSupport.apply(MyElement.prototype);\n\n   return MyElement;\n}, true);\n<\/pre>\n\nFurthermore, the function <code>oRenderManager.writeClasses(oElement);<\/code> ({@link sap.ui.core.RenderManager#writeClasses}) must be called within the renderer of the control to which the element belongs, when writing the root tag of the element. This ensures the classes are written to the HTML.\n\nThis function adds the following functions to the elements prototype: <ul> <li><code>addStyleClass<\/code>: {@link sap.ui.core.Control#addStyleClass}<\/li> <li><code>removeStyleClass<\/code>: {@link sap.ui.core.Control#removeStyleClass}<\/li> <li><code>toggleStyleClass<\/code>: {@link sap.ui.core.Control#toggleStyleClass}<\/li> <li><code>hasStyleClass<\/code>: {@link sap.ui.core.Control#hasStyleClass}<\/li> <\/ul> In addition the clone function of the element is extended to ensure that the custom style classes are also available on the cloned element.\n\n<b>Note:<\/b> This function can only be used <i>within<\/i> control development. An application cannot add style class support on existing elements by calling this function.","!type":"fn()","!category":"function","!static":"true"},"openDelay":{"!description":"Opening delay of the tooltip in milliseconds","!type":"Number","!category":"enum"},"atPosition":{"!description":"Optional. At position defines which position on the target control to align the positioned tooltip.","!type":"sap.ui.core.Dock","!category":"enum"},"propagateModel":{"!description":"Defines whether binding information is propagated to the component.","!type":"Boolean","!category":"enum"},"routing":"sap.ui.core.routing","additionalText":{"!description":"Some additional text of type string, optionally to be displayed along with this item.","!type":"String","!category":"enum"},"TextDirection":"sap.ui.core.TextDirection","Percentage":"sap.ui.core.Percentage","BusyIndicatorSize":"sap.ui.core.BusyIndicatorSize","DeclarativeSupport":"sap.ui.core.DeclarativeSupport_obj","OpenState":"sap.ui.core.OpenState","History":"sap.ui.core.History_obj","alt":{"!description":"This defines the alternative text which is used for outputting the aria-label attribute on the DOM.","!type":"String","!category":"enum"},"name":{"!description":"Component name, the package where the component is contained. This property can only be applied initially.","!type":"String","!category":"enum"},"_fnOnInstanceCreated":{"!description":"Callback handler which will be executed once a component instance has been created by {#link sap.ui.component}. The component instance and the configuration object will be passed into the registered function. For async scenarios (<code>vConfig.async = true<\/code>) a Promise can be provided as return value from the callback handler to delay resolving the Promise returned by {@link sap.ui.component}. In synchronous scenarios the return value will be ignored.\n\nExample usage: <pre>\nsap.ui.require(['sap/ui/core/Component'], function(Component) {\n  Component._fnOnInstanceCreated = function(oComponent, oConfig) {\n    // do some logic with the config\n\n    // optionally return a Promise\n    return doAsyncStuff();\n  };\n});\n<\/pre> <b>ATTENTION:<\/b> This hook must only be used by UI flexibility (library: sap.ui.fl) and will be replaced with a more generic solution!","!type":"String","!category":"enum"},"InvisibleText":"sap.ui.core.InvisibleText_obj","offset":{"!description":"Optional. Offset adds these left-top values to the calculated position. Example: \"10 3\".","!type":"String","!category":"enum"},"hoverColor":{"!description":"This color is shown when icon is hovered. This property has no visual effect when run on mobile device.","!type":"String","!category":"enum"},"icon":{"!description":"Defines the URL for icon display","!type":"sap.ui.core.URI","!category":"enum"},"LocaleData":"sap.ui.core.LocaleData_obj","Core":"sap.ui.core.Core_obj","DropLayout":"sap.ui.core.dnd.DropLayout","Configuration":"sap.ui.core.Configuration_obj","DropPosition":"sap.ui.core.dnd.DropPosition","async":{"!description":"Flag whether the component should be created sync (default) or async. The default will be async when initially the property <code>manifest<\/code> is set to a truthy value and for the property <code>async<\/code> no value has been specified. This property can only be applied initially.","!type":"Boolean","!category":"enum"},"TooltipBase":"sap.ui.core.TooltipBase_obj","IContextMenu":"sap.ui.core.IContextMenu","message":"sap.ui.core.message","writeToDom":{"!description":"If set to \"true\" and the value is of type \"string\" and the key conforms to the documented restrictions, this custom data is written to the HTML root element of the control as a \"data-*\" attribute. If the key is \"abc\" and the value is \"cde\", the HTML will look as follows: &lt;SomeTag ... data-abc=\"cde\" ... &gt; Thus the application can provide stable attributes by data binding which can be used for styling or identification purposes. ATTENTION: use carefully to not create huge attributes or a large number of them.","!type":"Boolean","!category":"enum"},"mvc":"sap.ui.core.mvc","FormatSettings":"sap.ui.core.Configuration.FormatSettings_obj","color":{"!description":"The color of the Icon. If color is not defined here, the Icon inherits the color from its DOM parent.","!type":"String","!category":"enum"},"service":"sap.ui.core.service","usage":{"!description":"The component usage. If the ComponentContainer is used inside a Component, this Component can define a usage which will be used for creating the Component. This property can only be applied initially.","!type":"String","!category":"enum"},"ComponentLifecycle":"sap.ui.core.ComponentLifecycle","Icon":"sap.ui.core.Icon_obj"},"jQuery.sap.history_obj":{"!type":"fn(mSettings: Object)","prototype":"jQuery.sap.history"},"sap.ui.model.Binding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.Binding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext: sap.ui.model.Context, mParameters?: Object)","prototype":"sap.ui.model.Binding"},"sap.ui.test.gherkin":{"qUnitTestHarness":"sap.ui.test.gherkin.qUnitTestHarness","!category":"namespace","StepDefinitions":"sap.ui.test.gherkin.StepDefinitions_obj","opa5TestHarness":"sap.ui.test.gherkin.opa5TestHarness","dataTableUtils":"sap.ui.test.gherkin.dataTableUtils"},"sap.ui.core.dnd":{"targetAggregation":{"!description":"The aggregation name in the <code>targetElement<\/code> which is the target of this drag and drop action. If undefined, the entire <code>targetElement<\/code> is the target. This can be handy if the target control does not have any aggregations or if the drop position within the target does not matter.","!type":"String","!category":"enum"},"DragDropInfo":"sap.ui.core.dnd.DragDropInfo_obj","IDragInfo":"sap.ui.core.dnd.IDragInfo","dropPosition":{"!description":"Defines the position for the drop action, visualized by a rectangle.","!type":"sap.ui.core.dnd.DropPosition","!category":"enum"},"sourceAggregation":{"!description":"The name of the aggregation from which all children can be dragged. If undefined, the control itself can be dragged.","!type":"String","!category":"enum"},"IDropInfo":"sap.ui.core.dnd.IDropInfo","dropLayout":{"!description":"Defines the layout of the droppable controls if <code>dropPosition<\/code> is set to <code>Between<\/code> or <code>OnOrBetween<\/code>.","!type":"sap.ui.core.dnd.DropLayout","!category":"enum"},"!category":"namespace","dropEffect":{"!description":"Defines the visual drop effect.","!type":"sap.ui.core.dnd.DropEffect","!category":"enum"},"DragSession":"sap.ui.core.dnd.DragSession","DragDropBase":"sap.ui.core.dnd.DragDropBase_obj"},"sap.ui.core.format.NumberFormat":{"getFloatInstance":{"!description":"Get a float instance of the NumberFormat, which can be used for formatting.\n\nIf no locale is given, the currently configured {@link sap.ui.core.Configuration.FormatSettings#getFormatLocale formatLocale} will be used.\n\n<p> This instance has HALF_AWAY_FROM_ZERO set as default rounding mode. Please set the roundingMode property in oFormatOptions to change the default value. <\/p>","!type":"fn(oFormatOptions?: Object, oLocale?: sap.ui.core.Locale) -> sap.ui.core.format.NumberFormat","!category":"function","parameters":{"oFormatOptions":"type: object, description: Object which defines the format options","oLocale":"type: sap.ui.core.Locale, description: Locale to get the formatter for"},"!static":true},"extend":{"!description":"Creates a new subclass of class sap.ui.core.format.NumberFormat with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getIntegerInstance":{"!description":"Get an integer instance of the NumberFormat, which can be used for formatting.\n\nIf no locale is given, the currently configured {@link sap.ui.core.Configuration.FormatSettings#getFormatLocale formatLocale} will be used.\n\n<p> This instance has TOWARDS_ZERO set as default rounding mode. Please set the roundingMode property in oFormatOptions to change the default value. <\/p>","!type":"fn(oFormatOptions?: Object, oLocale?: sap.ui.core.Locale) -> sap.ui.core.format.NumberFormat","!category":"function","parameters":{"oFormatOptions":"type: object, description: Object which defines the format options","oLocale":"type: sap.ui.core.Locale, description: Locale to get the formatter for"},"!static":true},"!constructorDescription":"Constructor for NumberFormat - must not be used: To get a NumberFormat instance, please use getInstance, getFloatInstance or getIntegerInstance.","format":{"!description":"Format a number according to the given format options.","!type":"fn(vValue: Number | Array, sMeasure?: String) -> String","!category":"function","parameters":{"sMeasure":"type: string, description: an optional unit which has an impact on formatting currencies and units","vValue":"type: number|array, description: the number to format or an array which contains the number to format and the sMeasure parameter"},"!static":false},"!module":"sap/ui/core/format/NumberFormat","getCurrencyInstance":{"!description":"Get a currency instance of the NumberFormat, which can be used for formatting.\n\nIf no locale is given, the currently configured {@link sap.ui.core.Configuration.FormatSettings#getFormatLocale formatLocale} will be used.\n\n<p> This instance has HALF_AWAY_FROM_ZERO set as default rounding mode. Please set the roundingMode property in oFormatOptions to change the default value. <\/p>","!type":"fn(oFormatOptions?: Object, oLocale?: sap.ui.core.Locale) -> sap.ui.core.format.NumberFormat","!category":"function","parameters":{"oFormatOptions":"type: object, description: Object which defines the format options","oLocale":"type: sap.ui.core.Locale, description: Locale to get the formatter for"},"!static":true},"!description":"The NumberFormat is a static class for formatting and parsing numeric values according to a set of format options.","getPercentInstance":{"!description":"Get a percent instance of the NumberFormat, which can be used for formatting.\n\nIf no locale is given, the currently configured {@link sap.ui.core.Configuration.FormatSettings#getFormatLocale formatLocale} will be used.\n\n<p> This instance has HALF_AWAY_FROM_ZERO set as default rounding mode. Please set the roundingMode property in oFormatOptions to change the default value. <\/p>","!type":"fn(oFormatOptions?: Object, oLocale?: sap.ui.core.Locale) -> sap.ui.core.format.NumberFormat","!category":"function","parameters":{"oFormatOptions":"type: object, description: Object which defines the format options","oLocale":"type: sap.ui.core.Locale, description: Locale to get the formatter for"},"!static":true},"!category":"class","parse":{"!description":"Parse a string which is formatted according to the given format options.","!type":"fn(sValue: String) -> Number | Array","!category":"function","parameters":{"sValue":"type: string, description: the string containing a formatted numeric value"},"!static":false},"!helpDescription":"The NumberFormat is a static class for formatting and parsing numeric values according to a set of format options.","!proto":"sap.ui.base.Object","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.format.NumberFormat.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.mvc.TemplateView_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.mvc.TemplateView with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.mvc.View.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.mvc.TemplateView"},"sap.ui.core.Locale":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Locale with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getSAPLogonLanguage":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.44 use {@link sap.ui.core.Configuration#getSAPLogonLanguage} instead as that class allows to configure an SAP Logon language.<br>Best guess to get a proper SAP Logon Language for this locale.\n\nConversions taken into account: <ul> <li>use the language part only<\/li> <li>convert old ISO639 codes to newer ones (e.g. 'iw' to 'he')<\/li> <li>for Chinese, map 'Traditional Chinese' to SAP proprietary code 'zf'<\/li> <li>map private extensions x-sap1q and x-sap2q to SAP pseudo languages '1Q' and '2Q'<\/li> <li>remove ext. language sub tags<\/li> <li>convert to uppercase<\/li> <\/ul>\n\nNote that the conversion also returns a result for languages that are not supported by the default set of SAP languages. This method has no knowledge about the concrete languages of any given backend system.","!type":"fn() -> String","!category":"function","!static":false},"getPrivateUseSubtags":{"!description":"Get the locale private use section as an array of tokens.\n\nThe leading singleton and the separating dashes are not part of the result. If there is no private use section in the locale tag, an empty array is returned.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"!constructorDescription":"Creates an instance of the Locale.","!module":"sap/ui/core/Locale","getScript":{"!description":"Get the locale script or <code>null<\/code> if none was specified.\n\nNote that the case might differ from the original language tag (Upper case first letter and lower case reminder enforced as recommended by BCP47/ISO15924)","!type":"fn() -> String","!category":"function","!static":false},"!description":"Locale represents a locale setting, consisting of a language, script, region, variants, extensions and private use section.","getVariantSubtags":{"!description":"Get the locale variants as an array of individual variants.\n\nThe separating dashes are not part of the result. If there is no variant section in the locale tag, an empty array is returned.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getLanguage":{"!description":"Get the locale language.\n\nNote that the case might differ from the original script tag (Lower case is enforced as recommended by BCP47/ISO639).","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","getRegion":{"!description":"Get the locale region or <code>null<\/code> if none was specified.\n\nNote that the case might differ from the original script tag (Upper case is enforced as recommended by BCP47/ISO3166-1).","!type":"fn() -> String","!category":"function","!static":false},"getExtension":{"!description":"Get the locale extension as a single string or <code>null<\/code>.\n\nThe extension always consists of a singleton character (not 'x'), a dash '-' and one or more extension token, each separated again with a dash.\n\nUse {@link #getExtensions} to get the individual extension tokens as an array.","!type":"fn() -> String","!category":"function","!static":false},"getVariant":{"!description":"Get the locale variants as a single string or <code>null<\/code>.\n\nMultiple variants are separated by a dash '-'.","!type":"fn() -> String","!category":"function","!static":false},"getPrivateUse":{"!description":"Get the locale private use section or <code>null<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"getExtensionSubtags":{"!description":"Get the locale extensions as an array of tokens.\n\nThe leading singleton and the separating dashes are not part of the result. If there is no extensions section in the locale tag, an empty array is returned.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"!helpDescription":"Locale represents a locale setting, consisting of a language, script, region, variants, extensions and private use section.","!proto":"sap.ui.base.Object","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.Locale.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"jQuery.Event":{"getOffsetX":{"!description":"Returns OffsetX of Event. In jQuery there is a bug. In IE the value is in offsetX, in FF in layerX","!type":"fn() -> Number","!category":"function","!static":false},"!description":"Check the jQuery.Event class documentation available under \"http://www.jquery.com\"<br/> and \"http://api.jquery.com/category/events/event-object/\" for details.","isPseudoType":{"!description":"Checks whether this instance of {@link jQuery.Event} is of the given <code>sType<\/code> pseudo type.","!type":"fn(sType: String) -> Boolean","!category":"function","parameters":{"sType":"type: string, description: The name of the pseudo type this event should be checked for."},"!static":false},"!category":"class","!constructorDescription":"Constructor for a jQuery.Event object.<br/>\nSee \"http://www.jquery.com\" and \"http://api.jquery.com/category/events/event-object/\".","!module":"jquery.sap.events","getOffsetY":{"!description":"Returns OffsetY of Event. In jQuery there is a bug. in IE the value is in offsetY, in FF in layerY.","!type":"fn() -> Number","!category":"function","!static":false},"getPseudoTypes":{"!description":"Returns an array of names (as strings) identifying {@link jQuery.sap.PseudoEvents} that are fulfilled by this very Event instance.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"!proto":"Object","!helpDescription":"Check the jQuery.Event class documentation available under \"http://www.jquery.com\"<br/> and \"http://api.jquery.com/category/events/event-object/\" for details."},"sap.ui.core.CustomData":{"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nThe data stored in this CustomData object. When the data is just stored, it can be any JS type, but when it is to be written to HTML (writeToDom == true) then it must be a string. If this restriction is violated, a warning will be logged and nothing will be written to the DOM.","!type":"fn() -> Object","!category":"function","!static":false},"setWriteToDom":{"!description":"Sets a new value for property {@link #getWriteToDom writeToDom}.\n\nIf set to \"true\" and the value is of type \"string\" and the key conforms to the documented restrictions, this custom data is written to the HTML root element of the control as a \"data-*\" attribute. If the key is \"abc\" and the value is \"cde\", the HTML will look as follows: &lt;SomeTag ... data-abc=\"cde\" ... &gt; Thus the application can provide stable attributes by data binding which can be used for styling or identification purposes. ATTENTION: use carefully to not create huge attributes or a large number of them.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bWriteToDom: Boolean) -> sap.ui.core.CustomData","!category":"function","parameters":{"bWriteToDom":"type: boolean, description: New value for property <code>writeToDom<\/code>"},"!static":false},"getKey":{"!description":"Gets current value of property {@link #getKey key}.\n\nThe key of the data in this CustomData object. When the data is just stored, it can be any string, but when it is to be written to HTML (writeToDom == true) then it must also be a valid HTML attribute name (it must conform to the sap.ui.core.ID type and may contain no colon) to avoid collisions, it also may not start with \"sap-ui\". When written to HTML, the key is prefixed with \"data-\". If any restriction is violated, a warning will be logged and nothing will be written to the DOM.","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.CustomData with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getWriteToDom":{"!description":"Gets current value of property {@link #getWriteToDom writeToDom}.\n\nIf set to \"true\" and the value is of type \"string\" and the key conforms to the documented restrictions, this custom data is written to the HTML root element of the control as a \"data-*\" attribute. If the key is \"abc\" and the value is \"cde\", the HTML will look as follows: &lt;SomeTag ... data-abc=\"cde\" ... &gt; Thus the application can provide stable attributes by data binding which can be used for styling or identification purposes. ATTENTION: use carefully to not create huge attributes or a large number of them.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!constructorDescription":"Constructor for a new CustomData.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getValue value} : any<\/li>\n<li>{@link #getWriteToDom writeToDom} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nThe data stored in this CustomData object. When the data is just stored, it can be any JS type, but when it is to be written to HTML (writeToDom == true) then it must be a string. If this restriction is violated, a warning will be logged and nothing will be written to the DOM.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(oValue: Object) -> sap.ui.core.CustomData","!category":"function","parameters":{"oValue":"type: any, description: New value for property <code>value<\/code>"},"!static":false},"!module":"sap/ui/core/CustomData","setKey":{"!description":"Sets a new value for property {@link #getKey key}.\n\nThe key of the data in this CustomData object. When the data is just stored, it can be any string, but when it is to be written to HTML (writeToDom == true) then it must also be a valid HTML attribute name (it must conform to the sap.ui.core.ID type and may contain no colon) to avoid collisions, it also may not start with \"sap-ui\". When written to HTML, the key is prefixed with \"data-\". If any restriction is violated, a warning will be logged and nothing will be written to the DOM.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sKey: String) -> sap.ui.core.CustomData","!category":"function","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"},"!static":false},"!description":"Contains a single key/value pair of custom data attached to an Element. See method data().","!category":"class","!helpDescription":"Contains a single key/value pair of custom data attached to an Element. See method data().","!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.CustomData.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.model.odata.type.Double":{"!description":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Double<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>number<\/code>.","validateValue":{"!description":"Validates whether the given value in model representation is valid and meets the defined constraints.","!type":"fn(fValue: Number)","!category":"function","parameters":{"fValue":"type: number, description: the value to be validated"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Double with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function","!static":false},"formatValue":{"!description":"Formats the given value to the given target type. When formatting to \"string\", very large or very small values are formatted to the exponential format (e.g. \"-3.14 E+15\").","!type":"fn(vValue: Number | String, sTargetType: String) -> Number | String","!category":"function","parameters":{"vValue":"type: number|string, description: the value to be formatted, which is represented as a number in the model","sTargetType":"type: string, description: the target type; may be \"any\", \"float\", \"int\", \"string\", or a type with one of these types as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}. See {@link sap.ui.model.odata.type} for more information."},"!static":false},"!category":"class","!constructorDescription":"Constructor for a primitive type <code>Edm.Double<\/code>.","!module":"sap/ui/model/odata/type/Double","parseValue":{"!description":"Parses the given value, which is expected to be of the given type, to an Edm.Double in <code>number<\/code> representation.","!type":"fn(vValue: String | Number, sSourceType: String) -> Number","!category":"function","parameters":{"sSourceType":"type: string, description: the source type (the expected type of <code>vValue<\/code>); may be \"float\", \"int\", \"string\", or a type with one of these types as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}. See {@link sap.ui.model.odata.type} for more information.","vValue":"type: string|number, description: the value to be parsed; the empty string and <code>null<\/code> are parsed to <code>null<\/code>; note that there is no way to enter <code>Infinity<\/code> or <code>NaN<\/code> values"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.Double.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.odata.type.ODataType","!helpDescription":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Double<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>number<\/code>."},"sap.ui.core.VerticalAlign":{"Bottom":{"!description":"Content is aligned at the bottom.","!type":"String","!category":"enum"},"Top":{"!description":"Content is aligned at the top.","!type":"String","!category":"enum"},"Inherit":{"!description":"Content respect the parent's vertical alignment.","!type":"String","!category":"enum"},"!description":"Configuration options for vertical alignments, for example of a layout cell content within the borders.","Middle":{"!description":"Content is centered vertically .","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/ui/core/library"},"sap.ui.core.ws.WebSocket_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.ws.WebSocket with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sUrl: String, aProtocols?: Array)","prototype":"sap.ui.core.ws.WebSocket"},"sap.ui.core.util.serializer.XMLViewSerializer":{"!description":"XMLViewSerializer class.","extend":{"!description":"Creates a new subclass of class sap.ui.core.util.serializer.XMLViewSerializer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"XML view serializer class. Serializes a given view.","!module":"sap/ui/core/util/serializer/XMLViewSerializer","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.serializer.XMLViewSerializer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.base.EventProvider","!helpDescription":"XMLViewSerializer class."},"sap.ui.test.matchers.BindingPath":{"setModelName":{"!description":"Sets a new value for property {@link #getModelName modelName}.\n\nThe name of the binding model that is used for matching.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sModelName: String) -> sap.ui.test.matchers.BindingPath","!category":"function","parameters":{"sModelName":"type: string, description: New value for property <code>modelName<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.test.matchers.BindingPath with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setPath":{"!description":"Sets a new value for property {@link #getPath path}.\n\nThe value of the binding path that is used for matching.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sPath: String) -> sap.ui.test.matchers.BindingPath","!category":"function","parameters":{"sPath":"type: string, description: New value for property <code>path<\/code>"},"!static":false},"!constructorDescription":"BindingPath - checks if a control has a binding context with the exact same binding path.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPath path} : string<\/li>\n<li>{@link #getModelName modelName} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.test.matchers.Matcher#constructor sap.ui.test.matchers.Matcher}\ncan be used as well.","!module":"sap/ui/test/matchers/BindingPath","getModelName":{"!description":"Gets current value of property {@link #getModelName modelName}.\n\nThe name of the binding model that is used for matching.","!type":"fn() -> String","!category":"function","!static":false},"isMatching":{"!description":"Checks if the control has a binding context that matches the path","!type":"fn(oControl: sap.ui.core.Control) -> Boolean","!category":"function","parameters":{"oControl":"type: sap.ui.core.Control, description: the control that is checked by the matcher"},"!static":false},"!description":"BindingPath - checks if a control has a binding context with the exact same binding path","!category":"class","getPath":{"!description":"Gets current value of property {@link #getPath path}.\n\nThe value of the binding path that is used for matching.","!type":"fn() -> String","!category":"function","!static":false},"!helpDescription":"BindingPath - checks if a control has a binding context with the exact same binding path","!proto":"sap.ui.test.matchers.Matcher","getMetadata":{"!description":"Returns a metadata object for class sap.ui.test.matchers.BindingPath.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.model.odata.BatchMode":{"!description":"Different modes for retrieving the count of collections","!category":"static class","None":{"!description":"No batch requests","!type":"String","!category":"enum"},"!module":"sap/ui/model/odata/v2/BatchMode","Group":{"!description":"Batch grouping enabled","!type":"String","!category":"enum"}},"sap.ui.model.FilterType":{"!description":"Types of Filters.","Application":{"!description":"Filters which are changed by the application","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/ui/model/FilterType","Control":{"!description":"Filters which are set by the different controls","!type":"String","!category":"enum"}},"sap.ui.model.odata.type.DateTime_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.DateTime with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.DateTimeBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.DateTime"},"sap.ui.model.FormatException_obj":{"!type":"fn(message: String)","prototype":"sap.ui.model.FormatException"},"sap.ui.core.message.ControlMessageProcessor_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.message.ControlMessageProcessor with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.message.MessageProcessor.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.core.message.ControlMessageProcessor"},"sap.ui.model.type.Boolean_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.type.Boolean with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.type.Boolean"},"sap.ui.core.Element_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Element with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.Element"},"sap.ui.model.analytics.odata4analytics.EntitySet_obj":{"!type":"fn(oModel: Object, oSchema: Object, oContainer: Object, oEntitySet: Object, oEntityType: Object)","prototype":"sap.ui.model.analytics.odata4analytics.EntitySet"},"sap.ui.core.mvc.HTMLView":{"!description":"A view defined/constructed by declarative HTML.","extend":{"!description":"Creates a new subclass of class sap.ui.core.mvc.HTMLView with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.mvc.View.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new mvc/HTMLView.","!module":"sap/ui/core/mvc/HTMLView","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.mvc.HTMLView.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.mvc.View","!helpDescription":"A view defined/constructed by declarative HTML."},"sap.ui.model.TreeBindingUtils":{"!category":"namespace","mergeSections":{"!description":"Merges together oNewSection into a set of other sections (aSections) The array/objects are not modified, the function returns a new section array.","!type":"fn(aSections: [[object Object]], oNewSection: Object) -> [[object Object]]","!category":"function","!static":"true"},"!module":"sap/ui/model/TreeBindingUtils"},"jQuery.os":{"blackberry":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use {@link sap.ui.Device.os.blackberry} instead<br>Whether the current operating system is BlackBerry","!type":"Boolean","!category":"enum"},"os":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use {@link sap.ui.Device.os.name} instead<br>The name of the operating system; currently supported are: \"ios\", \"android\", \"blackberry\"","!type":"String","!category":"enum"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use {@link sap.ui.Device.os} instead<br>Holds information about the current operating system","android":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use {@link sap.ui.Device.os.android} instead<br>Whether the current operating system is Android","!type":"Boolean","!category":"enum"},"ios":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use {@link sap.ui.Device.os.ios} instead<br>Whether the current operating system is Apple iOS","!type":"Boolean","!category":"enum"},"winphone":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use {@link sap.ui.Device.os.winphone} instead<br>Whether the current operating system is Windows Phone","!type":"Boolean","!category":"enum"},"!category":"namespace","!module":"jquery.sap.mobile","fVersion":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use {@link sap.ui.Device.os.version} instead<br>The version of the operating system parsed as a float (major and first minor version)","!type":"Number","!category":"enum"},"version":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use {@link sap.ui.Device.os.versionStr} instead<br>The version of the operating system as a string (including minor versions)","!type":"String","!category":"enum"},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use {@link sap.ui.Device.os} instead<br>Holds information about the current operating system"},"sap.ui.core.routing.HistoryDirection":{"!description":"Enumaration for different HistoryDirections","Unknown":{"!description":"A Navigation took place, but it could be any of the other three states","!type":"String","!category":"enum"},"NewEntry":{"!description":"A new Entry is added to the history","!type":"String","!category":"enum"},"!category":"static class","Forwards":{"!description":"The page has already been navigated to and it was the successor of the previous page","!type":"String","!category":"enum"},"!module":"sap/ui/core/library","Backwards":{"!description":"The page has already been navigated to and it was the precessor of the previous page","!type":"String","!category":"enum"}},"sap.ui.app.MockServer":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.1 The mock server code has been moved to sap.ui.core.util - see {@link sap.ui.core.util.MockServer}<br>Class to mock a server","!category":"class","!constructorDescription":"Creates a mocked server. This helps to mock all or some backend calls, e.g. for OData/JSON Models or simple XHR calls, without\nchanging the application code. This class can also be used for qunit tests.","!module":"sap/ui/app/MockServer","!proto":"sap.ui.base.ManagedObject","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.1 The mock server code has been moved to sap.ui.core.util - see {@link sap.ui.core.util.MockServer}<br>Class to mock a server"},"sap.ui.model.odata.v2.ODataContextBinding":{"!description":"The ContextBinding is a specific binding for a setting context for the model","extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.v2.ODataContextBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.ContextBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for odata.ODataContextBinding","!module":"sap/ui/model/odata/v2/ODataContextBinding","refresh":{"!type":"fn(bForceUpdate?: Boolean, sGroupId?: String)","!category":"function","parameters":{"bForceUpdate":"type: boolean, description: Update the bound control even if no data has been changed","sGroupId":"type: string, description: The group Id for the refresh"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.v2.ODataContextBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.ContextBinding","!helpDescription":"The ContextBinding is a specific binding for a setting context for the model"},"sap.ui.core.format":{"ListFormat":"sap.ui.core.format.ListFormat_obj","FileSizeFormat":"sap.ui.core.format.FileSizeFormat_obj","!description":"Format classes","DateFormat":"sap.ui.core.format.DateFormat_obj","!category":"namespace","NumberFormat":"sap.ui.core.format.NumberFormat_obj","!module":"sap/ui/core/format/NumberFormat","RoundingMode":"sap.ui.core.format.NumberFormat.RoundingMode","!helpDescription":"Format classes"},"sap.ui.model.odata.v4.ODataModel":{"createBindingContext":{"!description":"Creates a binding context for the given path. A relative path can only be resolved if a context is provided. Note: The parameters <code>mParameters<\/code>, <code>fnCallBack<\/code>, and <code>bReload<\/code> from {@link sap.ui.model.Model#createBindingContext} are not supported.\n\nIt is possible to create binding contexts pointing to metadata. A '##' is recognized as separator in the resolved path and splits it into two parts; note that '#' may also be used as separator but is deprecated since 1.51. The part before the separator is transformed into a metadata context (see {@link sap.ui.model.odata.v4.ODataMetaModel#getMetaContext}). The part following the separator is then interpreted relative to this metadata context, even if it starts with a '/'; a trailing '/' is allowed here, see {@link sap.ui.model.odata.v4.ODataMetaModel#requestObject} for the effect it has.\n\nA binding path may also point to an operation advertisement which is addressed with '#<namespace>.<operation>' and is part of the data payload, not the metadata. The metadata of an operation can be addressed via '##' as described above.\n\nExamples: <ul> <li><code>/Products('42')/Name##@com.sap.vocabularies.Common.v1.Label<\/code> points to the \"Label\" annotation of the \"Name\" property of the entity set \"Products\". <li><code>/##Products/Name@com.sap.vocabularies.Common.v1.Label<\/code> has no data path part and thus starts at the metadata root. It also points to the \"Label\" annotation of the \"Name\" property of the entity set \"Products\". <li><code>/Products##/<\/code> points to the entity type (note the trailing '/') of the entity set \"Products\". <li><code>/EMPLOYEES('1')/##com.sap.Action<\/code> points to the metadata of an action bound to the entity set \"EMPLOYEES\". <li><code>/EMPLOYEES('1')/#com.sap.Action<\/code> does not point to metadata, but to the action advertisement. <\/ul>","!type":"fn(sPath: String, oContext?: sap.ui.model.Context) -> sap.ui.model.Context","!category":"function","parameters":{"sPath":"type: string, description: The binding path, may be relative to the provided context","oContext":"type: sap.ui.model.Context, description: The context which is required as base for a relative path"},"!static":false},"setLegacySyntax":{"!description":"Method not supported","!type":"fn()","!category":"function","!static":false},"resetChanges":{"!description":"Resets all property changes and created entities associated with the given group ID which have not been successfully submitted via {@link #submitBatch}. Resets also invalid user input for the same group ID. This function does not reset the deletion of entities (see {@link sap.ui.model.odata.v4.Context#delete}) and the execution of OData operations (see {@link sap.ui.model.odata.v4.ODataContextBinding#execute}).","!type":"fn(sGroupId?: String)","!category":"function","parameters":{"sGroupId":"type: string, description: The application group ID, which is a non-empty string consisting of alphanumeric characters from the basic Latin alphabet, including the underscore. If it is <code>undefined<\/code>, the model's <code>updateGroupId<\/code> is used. Note that the default <code>updateGroupId<\/code> is '$auto', which is invalid here."},"!static":false},"getMetaModel":{"!description":"Returns the meta model for this ODataModel.","!type":"fn() -> sap.ui.model.odata.v4.ODataMetaModel","!category":"function","!static":false},"!module":"sap/ui/model/odata/v4/ODataModel","requestCanonicalPath":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.39.0 Use {@link sap.ui.model.odata.v4.Context#requestCanonicalPath} instead.<br>Returns a promise for the \"canonical path\" of the entity for the given context. According to \"4.3.1 Canonical URL\" of the specification \"OData Version 4.0 Part 2: URL Conventions\", this is the \"name of the entity set associated with the entity followed by the key predicate identifying the entity within the collection\". Use the canonical path in {@link sap.ui.core.Element#bindElement} to create an element binding.","!type":"fn(oEntityContext: sap.ui.model.odata.v4.Context) -> Promise","!category":"function","parameters":{"oEntityContext":"type: sap.ui.model.odata.v4.Context, description: A context in this model which must point to a non-contained OData entity"},"!static":false},"destroy":{"!description":"Destroys this model and its meta model.","!type":"fn()","!category":"function","!static":false},"bindProperty":{"!description":"Creates a new property binding for the given path. This binding is inactive and will not know the property value initially. You have to call {@link sap.ui.model.Binding#initialize} to get it updated asynchronously and register a change listener at the binding to be informed when the value is available.","!type":"fn(sPath: String, oContext?: sap.ui.model.Context, mParameters?: Object) -> sap.ui.model.odata.v4.ODataPropertyBinding","!category":"function","parameters":{"mParameters":"type: object, description: Map of binding parameters which can be OData query options as specified in \"OData Version 4.0 Part 2: URL Conventions\" or the binding-specific parameter \"$$groupId\". Note: The binding creates its own data service request if it is absolute or if it has any parameters or if it is relative and has a context created via {@link #createBindingContext}. All \"5.2 Custom Query Options\" are allowed except for those with a name starting with \"sap-\". All other query options lead to an error. Query options specified for the binding overwrite model query options.","sPath":"type: string, description: The binding path in the model; must not be empty or end with a slash","oContext":"type: sap.ui.model.Context, description: The context which is required as base for a relative path"},"!static":false},"bindTree":{"!description":"Method not supported","!type":"fn()","!category":"function","!static":false},"submitBatch":{"!description":"Submits the requests associated with the given application group ID in one batch request.","!type":"fn(sGroupId: String) -> Promise","!category":"function","parameters":{"sGroupId":"type: string, description: The application group ID, which is a non-empty string consisting of alphanumeric characters from the basic Latin alphabet, including the underscore."},"!static":false},"getOriginalProperty":{"!description":"Method not supported","!type":"fn()","!category":"function","!static":false},"!category":"class","refresh":{"!description":"Refreshes the model by calling refresh on all bindings which have a change event handler attached.\n\nNote: When calling {@link #refresh} multiple times, the result of the request triggered by the last call determines the model's data; it is <b>independent<\/b> of the order of calls to {@link #submitBatch} with the given group ID.\n\nIf there are pending changes, an error is thrown. Use {@link #hasPendingChanges} to check if there are pending changes. If there are changes, call {@link #submitBatch} to submit the changes or {@link #resetChanges} to reset the changes before calling {@link #refresh}.","!type":"fn(sGroupId?: String)","!category":"function","parameters":{"sGroupId":"type: string, description: The group ID to be used for refresh; valid values are <code>undefined<\/code>, '$auto', '$direct' or application group IDs as specified in {@link #submitBatch}"},"!static":false},"getObject":{"!description":"Method not supported","!type":"fn()","!category":"function","!static":false},"destroyBindingContext":{"!description":"Method not supported","!type":"fn()","!category":"function","!static":false},"getUpdateGroupId":{"!description":"Returns the model's update group ID.","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.v4.ODataModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getODataVersion":{"!description":"Returns the version of the OData service.","!type":"fn() -> String","!category":"function","!static":false},"!constructorDescription":"Constructor for a new ODataModel.","bindList":{"!description":"Creates a new list binding for the given path and optional context which must resolve to an absolute OData path for an entity set.","!type":"fn(sPath: String, oContext?: sap.ui.model.Context, vSorters?: [sap.ui.model.Sorter | [object Object]], vFilters?: [sap.ui.model.Filter | [object Object]], mParameters?: Object) -> sap.ui.model.odata.v4.ODataListBinding","!category":"function","parameters":{"mParameters":"type: object, description: Map of binding parameters which can be OData query options as specified in \"OData Version 4.0 Part 2: URL Conventions\" or the binding-specific parameters \"$$groupId\" and \"$$updateGroupId\". Note: The binding creates its own data service request if it is absolute or if it has any parameters or if it is relative and has a context created via {@link #createBindingContext} or if it has sorters or filters. The following OData query options are allowed: <ul> <li> All \"5.2 Custom Query Options\" except for those with a name starting with \"sap-\" <li> The $apply, $count, $expand, $filter, $levels, $orderby, $search, and $select \"5.1 System Query Options\" <\/ul> All other query options lead to an error. Query options specified for the binding overwrite model query options.","vFilters":"type: sap.ui.model.Filter|[object Object][], description: The dynamic application filters to be used initially. Call {@link sap.ui.model.odata.v4.ODataListBinding#filter} to replace them. Static filters, as defined in the '$filter' binding parameter, are always combined with the dynamic filters using a logical <code>AND<\/code>. Supported since 1.39.0.","vSorters":"type: sap.ui.model.Sorter|[object Object][], description: The dynamic sorters to be used initially. Call {@link sap.ui.model.odata.v4.ODataListBinding#sort} to replace them. Static sorters, as defined in the '$orderby' binding parameter, are always executed after the dynamic sorters. Supported since 1.39.0.","sPath":"type: string, description: The binding path in the model; must not be empty or end with a slash","oContext":"type: sap.ui.model.Context, description: The context which is required as base for a relative path"},"!static":false},"getGroupId":{"!description":"Returns the model's group ID.","!type":"fn() -> String","!category":"function","!static":false},"!description":"Model implementation for OData V4.\n\nEvery resource path (relative to the service root URL, no query options) according to \"4 Resource Path\" in specification \"OData Version 4.0 Part 2: URL Conventions\" is a valid data binding path within this model if a leading slash is added; for example \"/\" + \"SalesOrderList('A%2FB%26C')\" to access an entity instance with key \"A/B&C\". Note that appropriate URI encoding is necessary. \"4.5.1 Addressing Actions\" needs an operation binding, see {@link sap.ui.model.odata.v4.ODataContextBinding}.\n\nNote that the OData V4 model has its own {@link sap.ui.model.odata.v4.Context} class. Bindings which are relative to such a V4 context depend on their corresponding parent binding and do not access data with their own service requests unless parameters are provided.\n\nThe model does not support any public events; attaching an event handler leads to an error.","getProperty":{"!description":"Method not supported","!type":"fn()","!category":"function","!static":false},"toString":{"!description":"Returns a string representation of this object including the service URL.","!type":"function toString() { [native code for Array.toString, arity=0] }\n) -> String","!category":"function","!static":false},"hasPendingChanges":{"!description":"Returns <code>true<\/code> if there are pending changes, meaning updates or created entities (see {@link sap.ui.model.odata.v4.ODataListBinding#create}) that have not yet been successfully sent to the server.","!type":"fn() -> Boolean","!category":"function","!static":false},"bindContext":{"!description":"Creates a new context binding for the given path, context and parameters.\n\nThis binding is inactive and will not know the bound context initially. You have to call {@link sap.ui.model.Binding#initialize} to get it updated asynchronously and register a change listener at the binding to be informed when the bound context is available.","!type":"fn(sPath: String, oContext?: sap.ui.model.odata.v4.Context, mParameters?: Object) -> sap.ui.model.odata.v4.ODataContextBinding","!category":"function","parameters":{"mParameters":"type: object, description: Map of binding parameters which can be OData query options as specified in \"OData Version 4.0 Part 2: URL Conventions\" or the binding-specific parameters \"$$groupId\" and \"$$updateGroupId\". Note: The binding creates its own data service request if it is absolute or if it has any parameters or if it is relative and has a context created via {@link #createBindingContext}. The following OData query options are allowed: <ul> <li> All \"5.2 Custom Query Options\" except for those with a name starting with \"sap-\" <li> The $count, $expand, $filter, $levels, $orderby, $search and $select \"5.1 System Query Options\"; OData V4 only allows $count, $filter, $levels, $orderby and $search inside resource paths that identify a collection. In our case here, this means you can only use them inside $expand. <\/ul> All other query options lead to an error. Query options specified for the binding overwrite model query options.","sPath":"type: string, description: The binding path in the model; must not end with a slash","oContext":"type: sap.ui.model.odata.v4.Context, description: The context which is required as base for a relative path"},"!static":false},"!proto":"sap.ui.model.Model","!helpDescription":"Model implementation for OData V4.\n\nEvery resource path (relative to the service root URL, no query options) according to \"4 Resource Path\" in specification \"OData Version 4.0 Part 2: URL Conventions\" is a valid data binding path within this model if a leading slash is added; for example \"/\" + \"SalesOrderList('A%2FB%26C')\" to access an entity instance with key \"A/B&C\". Note that appropriate URI encoding is necessary. \"4.5.1 Addressing Actions\" needs an operation binding, see {@link sap.ui.model.odata.v4.ODataContextBinding}.\n\nNote that the OData V4 model has its own {@link sap.ui.model.odata.v4.Context} class. Bindings which are relative to such a V4 context depend on their corresponding parent binding and do not access data with their own service requests unless parameters are provided.\n\nThe model does not support any public events; attaching an event handler leads to an error.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.v4.ODataModel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.mvc.XMLView_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.mvc.XMLView with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.mvc.View.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.mvc.XMLView"},"sap.ui.core.format.DateFormat_obj":{"!type":"fn()","prototype":"sap.ui.core.format.DateFormat"},"sap.ui.core.util.serializer.delegate.HTML_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.serializer.delegate.HTML with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.util.serializer.delegate.Delegate.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(fnGetControlId?: fn(), fnGetEventHandlerName?: fn())","prototype":"sap.ui.core.util.serializer.delegate.HTML"},"sap.ui.model.odata.type.SByte_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.SByte with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.Int.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.SByte"},"sap.ui.model.ListBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.ListBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Binding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext: sap.ui.model.Context, aSorters?: [sap.ui.model.Sorter | [object Object]], aFilters?: [sap.ui.model.Filter | [object Object]], mParameters?: Object)","prototype":"sap.ui.model.ListBinding"},"sap.ui.core.format.NumberFormat.RoundingMode":{"AWAY_FROM_ZERO":{"!description":"Rounding mode to round away from zero","!type":"String","!category":"enum"},"HALF_FLOOR":{"!description":"Rounding mode to round towards the nearest neighbor unless both neighbors are equidistant, in which case round towards negative infinity.","!type":"String","!category":"enum"},"!description":"Specifies a rounding behavior for numerical operations capable of discarding precision. Each rounding mode in this object indicates how the least significant returned digits of rounded result is to be calculated.","HALF_AWAY_FROM_ZERO":{"!description":"Rounding mode to round towards the nearest neighbor unless both neighbors are equidistant, in which case round away from zero.","!type":"String","!category":"enum"},"TOWARDS_ZERO":{"!description":"Rounding mode to round towards zero","!type":"String","!category":"enum"},"CEILING":{"!description":"Rounding mode to round towards positive infinity","!type":"String","!category":"enum"},"!category":"static class","FLOOR":{"!description":"Rounding mode to round towards negative infinity","!type":"String","!category":"enum"},"HALF_TOWARDS_ZERO":{"!description":"Rounding mode to round towards the nearest neighbor unless both neighbors are equidistant, in which case round towards zero.","!type":"String","!category":"enum"},"!module":"sap/ui/core/format/NumberFormat","HALF_CEILING":{"!description":"Rounding mode to round towards the nearest neighbor unless both neighbors are equidistant, in which case round towards positive infinity.","!type":"String","!category":"enum"}},"sap.ui.core.tmpl.HandlebarsTemplate_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.tmpl.HandlebarsTemplate with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.tmpl.Template.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.tmpl.HandlebarsTemplate"},"sap.ui.model.odata.ODataMetadata_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.ODataMetadata with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sMetadataURI: String, mParams?: Object)","prototype":"sap.ui.model.odata.ODataMetadata"},"sap.ui.model.type.Date":{"getOutputPattern":{"!type":"fn()","!category":"function","!static":false},"!description":"This class represents date simple types.","extend":{"!description":"Creates a new subclass of class sap.ui.model.type.Date with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a Date type.","!module":"sap/ui/model/type/Date","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.type.Date.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.SimpleType","!helpDescription":"This class represents date simple types."},"sap.ui.model.ClientTreeBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.ClientTreeBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.TreeBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext?: sap.ui.model.Context, aApplicationFilters?: [sap.ui.model.Filter | [object Object]], mParameters?: Object, aSorters?: [[object Object]])","prototype":"sap.ui.model.ClientTreeBinding"},"sap.ui.model.ValidateException_obj":{"!type":"fn(message: String, violatedConstraints?: [[object Object]])","prototype":"sap.ui.model.ValidateException"},"sap.ui.core.Collision":{"!description":"Collision behavior: horizontal/vertical.\n\nDefines how the position of an element should be adjusted in case it overflows the window in some direction. For both directions this can be \"flip\", \"fit\" or \"none\". If only one behavior is provided it is applied to both directions. Examples: \"flip\", \"fit none\".","!category":"namespace","!module":"sap/ui/core/library","!helpDescription":"Collision behavior: horizontal/vertical.\n\nDefines how the position of an element should be adjusted in case it overflows the window in some direction. For both directions this can be \"flip\", \"fit\" or \"none\". If only one behavior is provided it is applied to both directions. Examples: \"flip\", \"fit none\"."},"sap.ui.model.Type_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.Type with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.model.Type"},"sap.ui.model.xml.XMLTreeBinding_obj":{"!type":"fn(oModel?: sap.ui.model.xml.XMLModel, Path: String, oContext?: Object, aFilters?: Array, mParameters?: Object)","prototype":"sap.ui.model.xml.XMLTreeBinding"},"sap.ui.core.EnabledPropagator":{"!description":"Helper Class for enhancement of a Control with propagation of enabled property.\n\n<b>This constructor should be applied to the prototype of a control<\/b>\n\nExample: <code> sap.ui.core.EnabledPropagator.call(<i>Some-Control<\/i>.prototype, <i>Default-value, ...<\/i>); <\/code> e.g. <code> sap.ui.core.EnabledPropagator.call(sap.ui.commons.Button.prototype); <\/code>","!category":"class","!module":"sap/ui/core/EnabledPropagator","!proto":"sap.ui.base.Object","!helpDescription":"Helper Class for enhancement of a Control with propagation of enabled property.\n\n<b>This constructor should be applied to the prototype of a control<\/b>\n\nExample: <code> sap.ui.core.EnabledPropagator.call(<i>Some-Control<\/i>.prototype, <i>Default-value, ...<\/i>); <\/code> e.g. <code> sap.ui.core.EnabledPropagator.call(sap.ui.commons.Button.prototype); <\/code>"},"sap.ui.model.odata.type.Time":{"!description":"This class represents the OData V2 primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Time<\/code><\/a>.\n\nIn {@link sap.ui.model.odata.v2.ODataModel ODataModel} this type is represented as an object with two properties: <ul> <li><code>__edmType<\/code> with the value \"Edm.Time\" <li><code>ms<\/code> with the number of milliseconds since midnight <\/ul>","validateValue":{"!description":"Validates whether the given value in model representation is valid and meets the defined constraints.","!type":"fn(oValue: Object)","!category":"function","parameters":{"oValue":"type: object, description: the value to be validated"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Time with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function","!static":false},"formatValue":{"!description":"Formats the given value to the given target type","!type":"fn(oValue: Object, sTargetType: String) -> String","!category":"function","parameters":{"oValue":"type: object, description: the value in model representation to be formatted.","sTargetType":"type: string, description: the target type; may be \"any\", \"string\", or a type with one of these types as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}. See {@link sap.ui.model.odata.type} for more information."},"!static":false},"!category":"class","!constructorDescription":"Constructor for an OData primitive type <code>Edm.Time<\/code>.","!module":"sap/ui/model/odata/type/Time","parseValue":{"!description":"Parses the given value, which is expected to be of the given type, to a time object.","!type":"fn(sValue: String, sSourceType: String) -> Object","!category":"function","parameters":{"sValue":"type: string, description: the value to be parsed, maps <code>\"\"<\/code> to <code>null<\/code>","sSourceType":"type: string, description: the source type (the expected type of <code>sValue<\/code>); must be \"string\", or a type with \"string\" as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}. See {@link sap.ui.model.odata.type} for more information."},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.Time.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.odata.type.ODataType","!helpDescription":"This class represents the OData V2 primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Time<\/code><\/a>.\n\nIn {@link sap.ui.model.odata.v2.ODataModel ODataModel} this type is represented as an object with two properties: <ul> <li><code>__edmType<\/code> with the value \"Edm.Time\" <li><code>ms<\/code> with the number of milliseconds since midnight <\/ul>"},"sap.ui.model.analytics.odata4analytics.Dimension_obj":{"!type":"fn(oQueryResult: sap.ui.model.analytics.odata4analytics.QueryResult, oProperty: Object)","prototype":"sap.ui.model.analytics.odata4analytics.Dimension"},"sap.ui.base.ManagedObject":{"insertAggregation":{"!description":"Inserts managed object <code>oObject<\/code> to the aggregation named <code>sAggregationName<\/code> at position <code>iIndex<\/code>.\n\nIf the given object is not valid with regard to the aggregation (if it is not an instance of the type specified for that aggregation) or when the method is called for an aggregation of cardinality 0..1, then an Error is thrown (see {@link #validateAggregation}.\n\nIf the given index is out of range with respect to the current content of the aggregation, it is clipped to that range (0 for iIndex < 0, n for iIndex > n).\n\nPlease note that this method does not work as expected when an object is added that is already part of the aggregation. In order to change the index of an object inside an aggregation, first remove it, then insert it again.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>. Applications or frameworks must not use this method to generically insert an object into an aggregation. Use the concrete method insert<i>XYZ<\/i> for aggregation 'XYZ' instead.","!type":"fn(sAggregationName: String, oObject: sap.ui.base.ManagedObject, iIndex: Number, bSuppressInvalidate?: Boolean) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"bSuppressInvalidate":"type: boolean, description: if true, this ManagedObject as well as the added child are not marked as changed","sAggregationName":"type: string, description: the string identifying the aggregation the managed object <code>oObject<\/code> should be inserted into.","iIndex":"type: int, description: the <code>0<\/code>-based index the managed object should be inserted at; for a negative value <code>iIndex<\/code>, <code>oObject<\/code> is inserted at position 0; for a value greater than the current size of the aggregation, <code>oObject<\/code> is inserted at the last position","oObject":"type: sap.ui.base.ManagedObject, description: the ManagedObject to add; if empty, nothing is inserted."},"!static":false},"attachValidationSuccess":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:validationSuccess validationSuccess} event of this <code>sap.ui.base.ManagedObject<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.base.ManagedObject<\/code> itself.\n\nFired after a new value for a bound property has been propagated to the model. Only fired, when the binding uses a data type.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.base.ManagedObject<\/code> itself"},"!static":false},"setAssociation":{"!description":"Sets the associated object for the given managed association of cardinality '0..1' and marks this ManagedObject as changed.\n\nThe associated object can either be given by itself or by its id. If <code>null<\/code> or <code>undefined<\/code> is given, the association is cleared.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>. Applications or frameworks must not use this method to generically set an object in an association. Use the concrete method set<i>XYZ<\/i> for association 'XYZ' or the generic {@link #applySettings} instead.","!type":"fn(sAssociationName: String, sId: String | sap.ui.base.ManagedObject, bSuppressInvalidate?: Boolean) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"bSuppressInvalidate":"type: boolean, description: if true, the managed objects invalidate method is not called","sAssociationName":"type: string, description: name of the association","sId":"type: string|sap.ui.base.ManagedObject, description: the ID of the managed object that is set as an association, or the managed object itself or null"},"!static":false},"!module":"sap/ui/base/ManagedObject","setModel":{"!description":"Sets or unsets a model for the given model name for this ManagedObject.\n\nThe <code>sName<\/code> must either be <code>undefined<\/code> (or omitted) or a non-empty string. When the name is omitted, the default model is set/unset. To be compatible with future versions of this API, you must not use the following model names: <ul> <li><code>null<\/code><\/li> <li>empty string <code>\"\"<\/code><\/li> <li>string literals <code>\"null\"<\/code> or <code>\"undefined\"<\/code><\/li> <\/ul>\n\nWhen <code>oModel<\/code> is <code>null<\/code> or <code>undefined<\/code>, a previously set model with that name is removed from this ManagedObject. If an ancestor (parent, UIArea or Core) has a model with that name, this ManagedObject will immediately inherit that model from its ancestor.\n\nAll local bindings that depend on the given model name are updated (created if the model references became complete now; updated, if any model reference has changed; removed if the model references became incomplete now).\n\nAny change (new model, removed model, inherited model) is also applied to all aggregated descendants as long as a descendant doesn't have its own model set for the given name.\n\n<b>Note:<\/b> By design, it is not possible to hide an inherited model by setting a <code>null<\/code> or <code>undefined<\/code> model. Applications can set an empty model to achieve the same.\n\n<b>Note:<\/b> A ManagedObject inherits models from the Core only when it is a descendant of a UIArea.","!type":"fn(oModel: sap.ui.model.Model, sName?: String) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"oModel":"type: sap.ui.model.Model, description: the model to be set or <code>null<\/code> or <code>undefined<\/code>","sName":"type: string, description: the name of the model or <code>undefined<\/code>"},"!static":false},"setBindingContext":{"!description":"Set the binding context for this ManagedObject for the model with the given name.\n\n<b>Note:<\/b> to be compatible with future versions of this API, you must not use the following model names: <ul> <li><code>null<\/code><\/li> <li>empty string <code>\"\"<\/code><\/li> <li>string literals <code>\"null\"<\/code> or <code>\"undefined\"<\/code><\/li> <\/ul> Omitting the model name (or using the value <code>undefined<\/code>) is explicitly allowed and refers to the default model.\n\nA value of<code>null<\/code> for <code>oContext<\/code> hides the parent context. The parent context will no longer be propagated to aggregated child controls. A value of <code>undefined<\/code> removes a currently active context or a <code>null<\/code> context and the parent context gets visible and propagated again.\n\n<b>Note:<\/b> A ManagedObject inherits binding contexts from the Core only when it is a descendant of a UIArea.","!type":"fn(oContext: sap.ui.model.Context, sModelName?: String) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"sModelName":"type: string, description: the name of the model to set the context for or <code>undefined<\/code>","oContext":"type: sap.ui.model.Context, description: the new binding context for this object"},"!static":false},"setAggregation":{"!description":"Sets a new object in the named 0..1 aggregation of this ManagedObject and marks this ManagedObject as changed.\n\nIf the given object is not valid with regard to the aggregation (if it is not an instance of the type specified for that aggregation) or when the method is called for an aggregation of cardinality 0..n, then an Error is thrown (see {@link #validateAggregation}.\n\nIf the new object is the same as the currently aggregated object, then the internal state is not modified and this ManagedObject is not marked as changed.\n\nIf the given object is different, the parent of a previously aggregated object is cleared (it must have been this ManagedObject before), the parent of the given object is set to this ManagedObject and {@link #invalidate} is called for this object.\n\nNote that this method does neither return nor destroy the previously aggregated object. This behavior is inherited by named set methods (see below) in subclasses. To avoid memory leaks, applications therefore should first get the aggregated object, keep a reference to it or destroy it, depending on their needs, and only then set a new object.\n\nNote that ManagedObject only implements a single level of change tracking: if a first call to setAggregation recognizes a change, 'invalidate' is called. If another call to setAggregation reverts that change, invalidate() will be called again, the new status is not recognized as being 'clean' again.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>. Applications or frameworks must not use this method to generically set an object in an aggregation. Use the concrete method set<i>XYZ<\/i> for aggregation 'XYZ' or the generic {@link #applySettings} instead.","!type":"fn(sAggregationName: String, oObject: Object, bSuppressInvalidate?: Boolean) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"bSuppressInvalidate":"type: boolean, description: if true, this ManagedObject is not marked as changed","sAggregationName":"type: string, description: name of an 0..1 aggregation","oObject":"type: object, description: the managed object that is set as aggregated object"},"!static":false},"updateAggregation":{"!description":"Generic method which is called whenever an aggregation binding has changed.\n\nDepending on the type of the list binding and on additional configuration, this method either destroys all elements in the aggregation <code>sName<\/code> and recreates them anew or tries to reuse as many existing objects as possible. It is up to the method which strategy it uses.\n\nIn case a managed object needs special handling for an aggregation binding, it can create a named update method (e.g. <code>update<i>Rows<\/i><\/code> for an aggregation <code>rows<\/code>) which then will be called by the framework instead of this generic method.\n\nSubclasses should call this method only in the implementation of such a named update method and for no other purposes. The framework might change the conditions under which the method is called and the method implementation might rely on those conditions.","!type":"fn(sName: String)","!category":"function","parameters":{"sName":"type: string, description: name of the aggregation to update"},"!static":false},"bindAggregation":{"!description":"Bind an aggregation to the model.\n\nThe bound aggregation will use the given template, clone it for each item which exists in the bound list and set the appropriate binding context. This is a generic method which can be used to bind any aggregation to the model. A managed object may flag aggregations in the metamodel with bindable=\"bindable\" to get typed bind<i>Something<\/i> methods for those aggregations.","!type":"fn(sName: String, oBindingInfo: Object) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"oBindingInfo":"type: object, description: the binding info","sName":"type: string, description: the aggregation to bind"},"!static":false},"hasModel":{"!description":"Check if any model is set to the ManagedObject or to one of its parents (including UIArea and Core).\n\n<b>Note:<\/b> A ManagedObject inherits models from the Core only when it is a descendant of a UIArea.","!type":"fn() -> Boolean","!category":"function","!static":false},"unbindAggregation":{"!description":"Unbind the aggregation from the model","!type":"fn(sName: String, bSuppressReset: Boolean) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"bSuppressReset":"type: boolean, description: whether the reset to empty aggregation when unbinding should be suppressed","sName":"type: string, description: the name of the aggregation"},"!static":false},"removePropagationListener":{"!description":"remove a propagation listener","!type":"fn(listener: fn()) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"listener":"type: function, description: function"},"!static":false},"destroyAggregation":{"!description":"Destroys (all) the managed object(s) in the aggregation named <code>sAggregationName<\/code> and empties the aggregation. If the aggregation did contain any object, this ManagedObject is marked as changed.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>. Applications or frameworks must not use this method to generically destroy all objects in an aggregation. Use the concrete method destroy<i>XYZ<\/i> for aggregation 'XYZ' instead.","!type":"fn(sAggregationName: String, bSuppressInvalidate?: Boolean) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"bSuppressInvalidate":"type: boolean, description: if true, this ManagedObject is not marked as changed","sAggregationName":"type: string, description: the name of the aggregation"},"!static":false},"getId":{"!description":"Returns the object's Id.","!type":"fn() -> String","!category":"function","!static":false},"findAggregatedObjects":{"!description":"Searches and returns all aggregated objects that pass the given check function.\n\nWhen the search is done recursively (<code>bRecursive === true<\/code>), it will be executed depth-first and ancestors will be added to the result array before their descendants.\n\nIf no check function is given, all aggregated objects will pass the check and be added to the result array.\n\n<b>Take care: this operation might be expensive.<\/b>","!type":"fn(bRecursive: Boolean, fnCondition?: Boolean) -> [[object Object]]","!category":"function","parameters":{"bRecursive":"type: boolean, description: Whether the whole aggregation tree should be searched","fnCondition":"type: boolean, description: Objects for which this function returns a falsy value will not be added to the result array"},"!static":false},"clone":{"!description":"Clones a tree of objects starting with the object on which clone is called first (root object).\n\nThe IDs within the newly created clone tree are derived from the original IDs by appending the given <code>sIdSuffix<\/code> (if no suffix is given, one will be created; it will be unique across multiple clone calls).\n\nThe <code>oOptions<\/code> configuration object can have the following properties: <ul> <li>The boolean value <code>cloneChildren<\/code> specifies whether associations/aggregations will be cloned<\/li> <li>The boolean value <code>cloneBindings<\/code> specifies if bindings will be cloned<\/li> <\/ul>\n\nFor each cloned object the following settings are cloned based on the metadata of the object and the defined options: <ul> <li>all properties that are not bound. If <code>cloneBinding<\/code> is <code>false<\/code>, even these properties will be cloned; the values are used by reference, they are not cloned<\/li> <li>all aggregated objects that are not bound. If <code>cloneBinding<\/code> is <code>false<\/code>, even the ones that are bound will be cloned; they are all cloned recursively using the same <code>sIdSuffix<\/code><\/li> <li>all associated controls; when an association points to an object inside the cloned object tree, then the cloned association will be modified to that it points to the clone of the target object. When the association points to a managed object outside of the cloned object tree, then its target won't be changed.<\/li> <li>all models set via <code>setModel()<\/code>; used by reference <\/li> <li>all property and aggregation bindings (if <code>cloneBindings<\/code> is <code>true<\/code>); the pure binding information (path, model name) is cloned, but all other information like template control or factory function, data type or formatter function are copied by reference. The bindings themselves are created anew as they are specific for the combination (object, property, model). As a result, any later changes to a binding of the original object are not reflected in the clone, but changes to e.g the type or template etc. are.<\/li> <\/ul>\n\nEach clone is created by first collecting the above mentioned settings and then creating a new instance with the normal constructor function. As a result, any side effects of mutator methods (<code>setProperty<\/code> etc.) or init hooks are repeated during clone creation. There is no need to override <code>clone()<\/code> just to reproduce these internal settings!\n\nCustom controls however can override <code>clone()<\/code> to implement additional clone steps. They usually will first call <code>clone()<\/code> on the super class and then modify the returned clone accordingly.\n\nApplications <b>must never provide<\/b> the second parameter <code>aLocaleIds<\/code>. It is determined automatically for the root object (and its non-existence also serves as an indicator for the root object). Specifying it will break the implementation of <code>clone()<\/code>.","!type":"fn(sIdSuffix?: String, aLocalIds?: [[object Object]], oOptions?: Object, cloneChildren?: Boolean, cloneBindings?: Boolean) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"aLocalIds":"type: [object Object][], description: an array of local IDs within the cloned hierarchy (internally used)","cloneBindings":"type: boolean, description: Whether bindings will be cloned","cloneChildren":"type: boolean, description: Whether associations and aggregations will be cloned","oOptions":"type: Object, description: configuration object","sIdSuffix":"type: string, description: a suffix to be appended to the cloned object ID"},"!static":false},"attachFormatError":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:formatError formatError} event of this <code>sap.ui.base.ManagedObject<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.base.ManagedObject<\/code> itself.\n\nFired when a new value for a bound property should have been propagated from the model, but formatting the value failed with an exception.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.base.ManagedObject<\/code> itself"},"!static":false},"detachFormatError":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:formatError formatError} event of this <code>sap.ui.base.ManagedObject<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getBindingInfo":{"!description":"Returns the binding info for the given property or aggregation. The binding info contains information about path, binding object, format options, sorter, filter etc. for the property or aggregation. As the binding object is only created when the model becomes available, the binding property may be undefined.","!type":"fn(sName: String) -> Object","!category":"function","parameters":{"sName":"type: string, description: the name of the property or aggregation"},"!static":false},"getParent":{"!description":"Returns the parent managed object or <code>null<\/code> if this object hasn't been added to a parent yet.\n\nThe parent returned by this method is the technical parent used for data binding, invalidation, rendering etc. It might differ from the object on which the application originally added this object (the so called 'API parent'): some composite controls internally use hidden controls or containers to store their children. This method will return the innermost container that technically contains this object as a child.\n\n<b>Example:<\/b>\n\nAssume that a <code>Dialog<\/code> internally uses a (hidden) <code>VerticalLayout<\/code> to store its content:\n\n<pre>\n  Dialog (API parent)\n   \\__ VerticalLayout (hidden composite part)\n      \\__ Text (API child)\n<\/pre>\n\nIf you add some content by calling the <code>Dialog.prototype.addContent<\/code> API, this will lead to the following observations:\n\n<pre>\n  oDialog.addContent(oText);\n  console.log(oText.getParent() === oDialog);  // false\n  console.log(oText.getParent() instanceof VerticalLayout); // true\n  console.log(oText.getParent().getParent() === oDialog); // true now, but might fail with later versions\n<\/pre>\n\nTechnically, from API perspective, <code>oText<\/code> is added as a child to <code>Dialog<\/code>. But internally, the <code>Dialog<\/code> adds the child to the hidden <code>VerticalLayout<\/code> container. If you now call the <code>getParent<\/code> method of the child, you will get the internal <code>VerticalLayout<\/code> object and not the <code>Dialog<\/code> API parent.\n\n<b>Note: <\/b> The internal (hidden) structure of a composite control is not fixed and may be changed (see also our \"Compatibility Rules\"). Therefore, you should <b>never<\/b> rely on a specific structure or object being returned by <code>getParent<\/code>.\n\n<b>Note: <\/b> There is no API to determine the original API parent.","!type":"fn() -> sap.ui.base.ManagedObject","!category":"function","!static":false},"attachValidationError":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:validationError validationError} event of this <code>sap.ui.base.ManagedObject<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.base.ManagedObject<\/code> itself.\n\nFired when a new value for a bound property should have been propagated to the model, but validating the value failed with an exception.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.base.ManagedObject<\/code> itself"},"!static":false},"fireValidationError":{"!description":"Fires event {@link #event:validationError validationError} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"validateAggregation":{"!description":"Checks whether the given value is of the proper type for the given aggregation name.\n\nThis method is already called by {@link #setAggregation}, {@link #addAggregation} and {@link #insertAggregation}. In many cases, subclasses of ManagedObject don't need to call it again in their mutator methods.","!type":"fn(sAggregationName: String, oObject: sap.ui.base.ManagedObject | Object, bMultiple: Boolean) -> sap.ui.base.ManagedObject | Object","!category":"function","parameters":{"sAggregationName":"type: string, description: the name of the aggregation","bMultiple":"type: boolean, description: whether the caller assumes the aggregation to have cardinality 0..n","oObject":"type: sap.ui.base.ManagedObject|any, description: the aggregated object or a primitive value"},"!static":false},"!constructorDescription":"Constructs and initializes a managed object with the given <code>sId<\/code> and settings.\n\nIf the optional <code>mSettings<\/code> are given, they must be a simple object\nthat defines values for properties, aggregations, associations or events keyed by their name.\n\n<b>Valid Names and Value Ranges:<\/b>\n\nThe property (key) names supported in the object literal are exactly the (case sensitive)\nnames documented in the JSDoc for the properties, aggregations, associations and events\nof the current class and its base classes. Note that for 0..n aggregations and associations this\nname usually is the plural name, whereas it is the singular name in case of 0..1 relations.\n\nIf a key name is ambiguous for a specific managed object class (e.g. a property has the same\nname as an event), then this method prefers property, aggregation, association and\nevent in that order. To resolve such ambiguities, the keys can be prefixed with\n<code>aggregation:<\/code>, <code>association:<\/code> or <code>event:<\/code>\n(such keys containing a colon (':') must be quoted to be valid Javascript).\n\nThe possible values for a setting depend on its kind:\n<ul>\n<li>for simple properties, the value has to match the documented type of the property (no type conversion occurs)<\/li>\n<li>for 0..1 aggregations, the value has to be an instance of the aggregated type<\/li>\n<li>for 0..n aggregations, the value has to be an array of instances of the aggregated type or a single instance<\/li>\n<li>for 0..1 associations, an instance of the associated type or an id (string) is accepted<\/li>\n<li>for 0..n associations, an array of instances of the associated type or of IDs is accepted<\/li>\n<li>for events either a function (event handler) is accepted or an array of length 2\n    where the first element is a function and the 2nd element is an object to invoke the method on.<\/li>\n<\/ul>\n\nEach subclass should document the name and type of its supported settings in its constructor documentation.\n\nExample usage:\n<pre>\nnew Dialog({\n   title: \"Some title text\",            // property of type \"string\"\n   showHeader: true,                    // property of type \"boolean\"\n   endButton: new Button(...),          // 0..1 aggregation\n   content: [                           // 0..n aggregation\n      new Input(...),\n      new Input(...)\n   ],\n   afterClose: function(oEvent) { ... } // event handler function\n});\n<\/pre>\n\nInstead of static values and object instances, data binding expressions can be used, either embedded in\na string or as a binding info object as described in {@link #bindProperty} or {@link #bindAggregation}.\n\nExample usage:\n<pre>\nnew Dialog({\n   title: \"{/title}\",       // embedded binding expression, points to a string property in the data model\n   ...\n   content: {               // binding info object\n      path : \"/inputItems\", // points to a collection in the data model\n      template : new Input(...)\n   }\n});\n<\/pre>\n\nNote that when setting string values, any curly braces in those values need to be escaped, so they are not\ninterpreted as binding expressions. Use {@link #escapeSettingsValue} to do so.\n\nBesides the settings documented below, ManagedObject itself supports the following special settings:\n<ul>\n<li><code>id : <i>sap.ui.core.ID<\/i><\/code> an ID for the new instance. Some subclasses (Element, Component) require the id\n  to be unique in a specific scope (e.g. an Element Id must be unique across all Elements, a Component id must\n  be unique across all Components).\n<li><code>models : <i>object<\/i><\/code> a map of {@link sap.ui.model.Model} instances keyed by their model name (alias).\n  Each entry with key <i>k<\/i> in this object has the same effect as a call <code>this.setModel(models[k], k);<\/code>.<\/li>\n<li><code>bindingContexts : <i>object<\/i><\/code> a map of {@link sap.ui.model.Context} instances keyed by their model name.\n  Each entry with key <i>k<\/i> in this object has the same effect as a call <code>this.setBindingContext(bindingContexts[k], k);<\/code><\/li>\n<li><code>objectBindings : <i>object<\/i><\/code>  a map of binding paths keyed by the corresponding model name.\n  Each entry with key <i>k<\/i> in this object has the same effect as a call <code>this.bindObject(objectBindings[k], k);<\/code><\/li>\n<li><code>metadataContexts : <i>object<\/i><\/code>  an array of single binding contexts keyed by the corresponding model or context name.\n  The purpose of the <code>metadataContexts<\/code> special setting is to deduce as much information as possible from the binding context of the control in order\n  to be able to predefine certain standard properties like e.g. <i>visible, enabled, tooltip,...<\/i>\n\n  The structure is an array of single contexts, where a single context is a map containing the following keys:\n  <ul>\n  <li><code>path: <i>string (mandatory)<\/i><\/code> The path to the corresponding model property or object, e.g. '/Customers/Name'. A path can also be relative, e.g. 'Name'<\/li>\n  <li><code>model: <i>string (optional)<\/i><\/code> The name of the model, in case there is no name then the undefined model is taken<\/li>\n  <li><code>name: <i>string (optional)<\/i><\/code> A name for the context to used in templating phase<\/li>\n  <li><code>kind: <i>string (optional)<\/i><\/code> The kind of the adapter, either <code>field<\/code> for single properties or <code>object<\/code> for structured contexts.\n  <li><code>adapter: <i>string (optional)<\/i><\/code> The path to an interpretion class that dilivers control relevant data depending on the context, e.g. enabled, visible.\n  If not supplied the OData meta data is interpreted.<\/li>\n  <\/ul>\n  The syntax for providing the <code>metadataContexts<\/code> is as follows:\n  <code>{SINGLE_CONTEXT1},...,{SINGLE_CONTEXTn}<\/code> or for simplicity in case there is only one context <code>{SINGLE_CONTEXT}<\/code>.\n\n  Examples for such metadataContexts are:\n  <ul>\n  <li><code>{/Customers/Name}<\/code> a single part with an absolute path to the property <i>Name<\/i> of the <i>Customers<\/i> entity set in the default model<\/li>\n  <li><code>{path: 'Customers/Name', model:'json'}<\/code> a single part with an absolute path to the property <i>Name<\/i> of the <i>Customers<\/i> entity set in a named model<\/li>\n  <li><code>{parts: [{path: 'Customers/Name'},{path: 'editable', model: 'viewModel'}]}<\/code> a combination of single binding contexts, one context from the default model and one from the viewModel<\/li>\n  <\/ul><\/li>\n<\/ul>\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Events\n<ul>\n<li>{@link #event:validationSuccess validationSuccess} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:validationError validationError} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:parseError parseError} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:formatError formatError} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:modelContextChange modelContextChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>","create":{"!description":"Creates a new ManagedObject from the given data.\n\nIf <code>vData<\/code> is a managed object already, that object is returned. If <code>vData<\/code> is an object (literal), then a new object is created with <code>vData<\/code> as settings. The type of the object is either determined by a property of name <code>Type<\/code> (capital 'T') in the <code>vData<\/code> or by a property <code>type<\/code> (lower case 't') in the <code>oKeyInfo<\/code> object. In both cases, the type can be specified by name (dot separated name of the class) or by the constructor function of the class.","!type":"fn(vData: sap.ui.base.ManagedObject | Object, oKeyInfo?: Object, oScope?: Object)","!category":"function","parameters":{"oKeyInfo":"type: object, description: undefined","oScope":"type: object, description: Scope object to resolve types and formatters in bindings","vData":"type: sap.ui.base.ManagedObject|object, description: the data to create the object from"},"!static":true},"removeAllAssociation":{"!description":"Removes all the objects in the 0..n-association named <code>sAssociationName<\/code> and returns an array with their IDs. This ManagedObject is marked as changed, if the association contained any objects.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>. Applications or frameworks must not use this method to generically remove all object from an association. Use the concrete method removeAll<i>XYZ<\/i> for association 'XYZ' instead.","!type":"fn(sAssociationName: String, bSuppressInvalidate?: Boolean) -> Array","!category":"function","parameters":{"bSuppressInvalidate":"type: boolean, description: if true, this ManagedObject is not marked as changed","sAssociationName":"type: string, description: the name of the association"},"!static":false},"unbindProperty":{"!description":"Unbind the property from the model","!type":"fn(sName: String, bSuppressReset: Boolean) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"bSuppressReset":"type: boolean, description: whether the reset to the default value when unbinding should be suppressed","sName":"type: string, description: the name of the property"},"!static":false},"resetProperty":{"!description":"Resets the given property to the default value and also restores the \"initial\" state (like it has never been set).","!type":"fn(sPropertyName: String) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"sPropertyName":"type: string, description: the name of the property"},"!static":false},"propagateMessages":{"!description":"Generic method which is called, whenever messages for this object exist.","!type":"fn(sName: String, aMessages: Array)","!category":"function","parameters":{"aMessages":"type: array, description: The messages","sName":"type: string, description: The property name"},"!static":false},"unbindContext":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.11.1 please use unbindElement instead.<br>Removes the defined binding context of this object, all bindings will now resolve relative to the parent context again.","!type":"fn(sModelName?: String) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"sModelName":"type: string, description: name of the model to remove the context for."},"!static":false},"getProperty":{"!description":"Returns the value for the property with the given <code>sPropertyName<\/code>.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>. Applications or frameworks must not use this method to generically retrieve the value of a property. Use the concrete method get<i>XYZ<\/i> for property 'XYZ' instead.","!type":"fn(sPropertyName: String) -> Object","!category":"function","parameters":{"sPropertyName":"type: string, description: the name of the property"},"!static":false},"toString":{"!description":"Returns a simple string representation of this managed object.\n\nMainly useful for tracing purposes.","!type":"function toString() { [native code for Array.toString, arity=0] }\n) -> String","!category":"function","!static":false},"detachModelContextChange":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:modelContextChange modelContextChange} event of this <code>sap.ui.base.ManagedObject<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"detachValidationSuccess":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:validationSuccess validationSuccess} event of this <code>sap.ui.base.ManagedObject<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"validateProperty":{"!description":"Checks whether the given value is of the proper type for the given property name.\n\nIn case <code>null<\/code> or <code>undefined<\/code> is passed, the default value for this property is used as value. If no default value is defined for the property, the default value of the type of the property is used.\n\nIf the property has a data type that is an instance of sap.ui.base.DataType and if a <code>normalize<\/code> function is defined for that type, that function will be called with the resulting value as only argument. The result of the function call is then used instead of the raw value.\n\nThis method is called by {@link #setProperty}. In many cases, subclasses of ManagedObject don't need to call it themselves.","!type":"fn(sPropertyName: String, oValue: Object) -> Object","!category":"function","parameters":{"oValue":"type: any, description: the value","sPropertyName":"type: string, description: the name of the property"},"!static":false},"bindObject":{"!description":"Bind the object to the referenced entity in the model, which is used as the binding context to resolve bound properties or aggregations of the object itself and all of its children relatively to the given path. If a relative binding path is used, this will be applied whenever the parent context changes. There is no difference between {@link sap.ui.core.Element#bindElement} and {@link sap.ui.base.ManagedObject#bindObject}.","!type":"fn(oBindingInfo: Object) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"oBindingInfo":"type: object, description: the binding info object"},"!static":false},"!helpDescription":"Base Class that introduces some basic concepts like state management or databinding.\n\nNew subclasses of ManagedObject are created with a call to {@link #.extend ManagedObject.extend} and can make use of the following managed features:\n\n<h3>Properties<\/h3> Managed properties represent the state of a ManagedObject. They can store a single value of a simple data type (like 'string' or 'int'). They have a <i>name<\/i> (e.g. 'size') and methods to get the current value (<code>getSize<\/code>), or to set a new value (<code>setSize<\/code>). When a property is modified, the ManagedObject is marked as invalidated. A managed property can be bound against a property in a {@link sap.ui.model.Model} by using the {@link #bindProperty} method. Updates to the model property will be automatically reflected in the managed property and - if TwoWay databinding is active, changes to the managed property will be reflected in the model. An existing binding can be removed by calling {@link #unbindProperty}.\n\nIf a ManagedObject is cloned, the clone will have the same values for its managed properties as the source of the clone - if the property wasn't bound. If it is bound, the property in the clone will be bound to the same model property as in the source.\n\nDetails about the declaration of a managed property, the metadata that describes it and the set of methods that are automatically generated to access it, can be found in the documentation of the {@link sap.ui.base.ManagedObject.extend extend } method.\n\n<h3>Aggregations<\/h3> Managed aggregations can store one or more references to other ManagedObjects. They are a mean to control the lifecycle of the aggregated objects: one ManagedObject can be aggregated by at most one parent ManagedObject at any time. When a ManagedObject is destroyed, all aggregated objects are destroyed as well and the object itself is removed from its parent. That is, aggregations won't contain destroyed objects or null/undefined.\n\nAggregations have a <i>name<\/i> ('e.g 'header' or 'items'), a <i>cardinality<\/i> ('0..1' or '0..n') and are of a specific <i>type<\/i> (which must be a subclass of ManagedObject as well or a UI5 interface). A ManagedObject will provide methods to set or get the aggregated object for a specific aggregation of cardinality 0..1 (e.g. <code>setHeader<\/code>, <code>getHeader<\/code> for an aggregation named 'header'). For an aggregation of cardinality 0..n, there are methods to get all aggregated objects (<code>getItems<\/code>), to locate an object in the aggregation (e.g. <code>indexOfItem<\/code>), to add, insert or remove a single aggregated object (<code>addItem<\/code>, <code>insertItem<\/code>, <code>removeItem<\/code>) or to remove or destroy all objects from an aggregation (<code>removeAllItems<\/code>, <code>destroyItems<\/code>).\n\nDetails about the declaration of a managed aggregation, the metadata that describes the aggregation, and the set of methods that are automatically generated to access it, can be found in the documentation of the {@link sap.ui.base.ManagedObject.extend extend} method.\n\nAggregations of cardinality 0..n can be bound to a collection in a model by using {@link #bindAggregation} (and unbound again using {@link #unbindAggregation}). For each context in the model collection, a corresponding object will be created in the managed aggregation, either by cloning a template object or by calling a factory function.\n\nAggregations also control the databinding context of bound objects: by default, aggregated objects inherit all models and binding contexts from their parent object.\n\nWhen a ManagedObject is cloned, all aggregated objects will be cloned as well - but only if they haven't been added by databinding. In that case, the aggregation in the clone will be bound to the same model collection.\n\n<h3>Associations<\/h3> Managed associations also form a relationship between objects, but they don't define a lifecycle for the associated objects. They even can 'break' in the sense that an associated object might have been destroyed already although it is still referenced in an association. For the same reason, the internal storage for associations are not direct object references but only the IDs of the associated target objects.\n\nAssociations have a <i>name<\/i> ('e.g 'initialFocus'), a <i>cardinality<\/i> ('0..1' or '0..n') and are of a specific <i>type<\/i> (which must be a subclass of ManagedObject as well or a UI5 interface). A ManagedObject will provide methods to set or get the associated object for a specific association of cardinality 0..1 (e.g. <code>setInitialFocus<\/code>, <code>getInitialFocus<\/code>). For an association of cardinality 0..n, there are methods to get all associated objects (<code>getRefItems<\/code>), to add, insert or remove a single associated object (<code>addRefItem<\/code>, <code>insertRefItem<\/code>, <code>removeRefItem<\/code>) or to remove all objects from an association (<code>removeAllRefItems<\/code>).\n\nDetails about the declaration of a managed association, the metadata that describes it and the set of methods that are automatically generated to access it, can be found in the documentation of the {@link sap.ui.base.ManagedObject.extend extend} method.\n\nAssociations can't be bound to the model.\n\nWhen a ManagedObject is cloned, the result for an association depends on the relationship between the associated target object and the root of the clone operation. If the associated object is part of the to-be-cloned object tree (reachable via aggregations from the root of the clone operation), then the cloned association will reference the clone of the associated object. Otherwise the association will reference the same object as in the original tree. When a ManagedObject is destroyed, other objects that are only associated, are not affected by the destroy operation.\n\n<h3>Events<\/h3> Managed events provide a mean for communicating important state changes to an arbitrary number of 'interested' listeners. Events have a <i>name<\/i> and (optionally) a set of <i>parameters<\/i>. For each event there will be methods to add or remove an event listener as well as a method to fire the event. (e.g. <code>attachChange<\/code>, <code>detachChange<\/code>, <code>fireChange<\/code> for an event named 'change').\n\nDetails about the declaration of managed events, the metadata that describes the event, and the set of methods that are automatically generated to access it, can be found in the documentation of the {@link sap.ui.base.ManagedObject.extend extend} method.\n\nWhen a ManagedObject is cloned, all listeners registered for any event in the clone source are also registered to the clone. Later changes are not reflected in any direction (neither from source to clone, nor vice versa).\n\n<a name=\"lowlevelapi\"><h3>Low Level APIs:<\/h3><\/a> The prototype of ManagedObject provides several generic, low level APIs to manage properties, aggregations, associations, and events. These generic methods are solely intended for implementing higher level, non-generic methods that manage a single managed property etc. (e.g. a function <code>setSize(value)<\/code> that sets a new value for property 'size'). {@link sap.ui.base.ManagedObject.extend} creates default implementations of those higher level APIs for all managed aspects. The implementation of a subclass then can override those default implementations with a more specific implementation, e.g. to implement a side effect when a specific property is set or retrieved. It is therefore important to understand that the generic low-level methods ARE NOT SUITABLE FOR GENERIC ACCESS to the state of a managed object, as that would bypass the overriding higher level methods and their side effects.","!proto":"sap.ui.base.EventProvider","getBindingContext":{"!description":"Get the binding context of this object for the given model name.\n\nIf the object does not have a binding context set on itself and has no own model set, it will use the first binding context defined in its parent hierarchy.\n\n<b>Note:<\/b> to be compatible with future versions of this API, you must not use the following model names: <ul> <li><code>null<\/code><\/li> <li>empty string <code>\"\"<\/code><\/li> <li>string literals <code>\"null\"<\/code> or <code>\"undefined\"<\/code><\/li> <\/ul> Omitting the model name (or using the value <code>undefined<\/code>) is explicitly allowed and refers to the default model.\n\n<b>Note:<\/b> A ManagedObject inherits binding contexts from the Core only when it is a descendant of a UIArea.","!type":"fn(sModelName?: String) -> sap.ui.model.Context","!category":"function","parameters":{"sModelName":"type: string, description: the name of the model or <code>undefined<\/code>"},"!static":false},"getAssociation":{"!description":"Returns the content of the association with the given name.\n\nFor associations of cardinality 0..1, a single string with the ID of an associated object is returned (if any). For cardinality 0..n, an array with the IDs of the associated objects is returned.\n\nIf the association does not contain any objects(s), the given <code>oDefaultForCreation<\/code> is set as new value of the association and returned to the caller. The only supported values for <code>oDefaultForCreation<\/code> are <code>null<\/code> and <code>undefined<\/code> in the case of cardinality 0..1 and <code>null<\/code>, <code>undefined<\/code> or an empty array (<code>[]<\/code>) in case of cardinality 0..n. If the argument is omitted, <code>null<\/code> is used independently from the cardinality.\n\n<b>Note:<\/b> the need to specify a default value and the fact that it is stored as new value of a so far empty association is recognized as a shortcoming of this API but can no longer be changed for compatibility reasons.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>. Applications or frameworks must not use this method to generically retrieve the content of an association. Use the concrete method get<i>XYZ<\/i> for association 'XYZ' instead.","!type":"fn(sAssociationName: String, oDefaultForCreation: Object) -> [String | [object Object]]","!category":"function","parameters":{"sAssociationName":"type: string, description: the name of the association","oDefaultForCreation":"type: object, description: the object that is used in case the current aggregation is empty (only null or empty array allowed)"},"!static":false},"getModel":{"!description":"Get the model to be used for data bindings with the given model name. If the object does not have a model set on itself, it will use the first model defined in its parent hierarchy.\n\nThe name can be omitted to reference the default model or it must be a non-empty string.\n\n<b>Note:<\/b> to be compatible with future versions of this API, you must not use the following model names: <ul> <li><code>null<\/code><\/li> <li>empty string <code>\"\"<\/code><\/li> <li>string literals <code>\"null\"<\/code> or <code>\"undefined\"<\/code><\/li> <\/ul> Omitting the model name (or using the value <code>undefined<\/code>) is explicitly allowed and refers to the default model.","!type":"fn(sModelName?: String | undefined) -> sap.ui.model.Model","!category":"function","parameters":{"sModelName":"type: string|undefined, description: name of the model to be retrieved"},"!static":false},"getPropagationListeners":{"!description":"get propagation listeners","!type":"fn() -> Array","!category":"function","!static":false},"attachModelContextChange":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:modelContextChange modelContextChange} event of this <code>sap.ui.base.ManagedObject<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.base.ManagedObject<\/code> itself.\n\nFired when models or contexts are changed on this object (either by calling setModel/setBindingContext or due to propagation)","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.base.ManagedObject<\/code> itself"},"!static":false},"runWithPreprocessors":{"!description":"Activates the given ID and settings preprocessors, executes the given function and restores the previously active preprocessors.\n\nWhen a preprocessor is not defined in <code>oPreprocessors<\/code>, then the currently active preprocessor is temporarily deactivated while <code>fn<\/code> is executed.\n\nSee the <code>_fnIdPreprocessor<\/code> and <code>_fnSettingsPreprocessor<\/code> members in this class for a detailed description of the preprocessors.\n\nThis method is intended for internal use in the sap/ui/base and sap/ui/core packages only.","!type":"fn(fn: fn(), oPreprocessors?: Object, oThisArg?: Object) -> Object","!category":"function","parameters":{"oPreprocessors":"type: object, description: Preprocessors to use while executing <code>fn<\/code>","oThisArg":"type: Object, description: Value to use as <code>this<\/code> when executing <code>fn<\/code>","fn":"type: function, description: Function to execute"},"!static":true},"isTreeBinding":{"!description":"This method is used internally and should only be overridden by a tree managed object which utilizes the tree binding. In this case and if the aggregation is a tree node the overridden method should then return true. If true is returned the tree binding will be used instead of the list binding.","!type":"fn(sName: String) -> Boolean","!category":"function","parameters":{"sName":"type: string, description: the aggregation to bind (e.g. nodes for a tree managed object)"},"!static":false},"getEventingParent":{"!description":"Returns the parent managed object as new eventing parent to enable control event bubbling or <code>null<\/code> if this object hasn't been added to a parent yet.","!type":"fn() -> sap.ui.base.EventProvider","!category":"function","!static":false},"indexOfAggregation":{"!description":"Searches for the provided ManagedObject in the named aggregation and returns its 0-based index if found, or -1 otherwise. Returns -2 if the given named aggregation is of cardinality 0..1 and doesn't reference the given object.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>. Applications or frameworks must not use this method to generically determine the position of an object in an aggregation. Use the concrete method indexOf<i>XYZ<\/i> for aggregation 'XYZ' instead.","!type":"fn(sAggregationName: String, oObject: sap.ui.base.ManagedObject) -> Number","!category":"function","parameters":{"sAggregationName":"type: string, description: the name of the aggregation","oObject":"type: sap.ui.base.ManagedObject, description: the ManagedObject whose index is looked for."},"!static":false},"isBound":{"!description":"Find out whether a property or aggregation is bound","!type":"fn(sName: String) -> Boolean","!category":"function","parameters":{"sName":"type: string, description: the name of the property or aggregation"},"!static":false},"addAssociation":{"!description":"Adds some object with the ID <code>sId<\/code> to the association identified by <code>sAssociationName<\/code> and marks this ManagedObject as changed.\n\nThis method does not avoid duplicates.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>. Applications or frameworks must not use this method to generically add an object to an association. Use the concrete method add<i>XYZ<\/i> for association 'XYZ' or the generic {@link #applySettings} instead.","!type":"fn(sAssociationName: String, sId: String | sap.ui.base.ManagedObject, bSuppressInvalidate?: Boolean) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"bSuppressInvalidate":"type: boolean, description: if true, this managed object as well as the newly associated object are not marked as changed","sAssociationName":"type: string, description: the string identifying the association the object should be added to.","sId":"type: string|sap.ui.base.ManagedObject, description: the ID of the ManagedObject object to add; if empty, nothing is added; if a <code>sap.ui.base.ManagedObject<\/code> is given, its ID is added"},"!static":false},"destroy":{"!description":"Cleans up the resources associated with this object and all its aggregated children.\n\nAfter an object has been destroyed, it can no longer be used in!\n\nApplications should call this method if they don't need the object any longer.","!type":"fn(bSuppressInvalidate?: Boolean)","!category":"function","parameters":{"bSuppressInvalidate":"type: boolean, description: if true, this ManagedObject is not marked as changed"},"!static":false},"addPropagationListener":{"!description":"Adds a listener function that will be called during each propagation step on every control","!type":"fn(listener: fn()) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"listener":"type: function, description: function"},"!static":false},"bindProperty":{"!description":"Binds a property to the model.\n\nThe Setter for the given property will be called with the value retrieved from the data model. When the binding mode is <code>OneTime<\/code>, the property will be set only once. When it is <code>OneWay<\/code>, the property will be updated whenever the corresponding data in the model changes. In mode <code>TwoWay<\/code>, changes to the property (not originating in the model) will be reported back to the model (typical use case: user interaction changes the value of a control).\n\nThis is a generic method which can be used to bind any property to the model. A managed object may flag any property in its metadata with <code>bindable=\"bindable\"<\/code> to additionally provide named methods to bind and unbind the corresponding property.\n\n<b>Composite Binding<\/b><br> A composite property binding which combines data from multiple model paths can be declared using the <code>parts<\/code> parameter instead of <code>path<\/code>. The <code>formatter<\/code> function or a {@link sap.ui.model.CompositeType composite type} then can be used to combine the parts, Properties with a composite binding are also known as \"calculated fields\".\n\nExample: <pre>\n  oTxt.bindValue({\n    parts: [\n      {path: \"/firstName\", type: \"sap.ui.model.type.String\"},\n      {path: \"myModel2>/lastName\"}\n    ]\n  });\n<\/pre>\n\nNote that a composite binding will be forced into mode <code>OneWay<\/code> when one of the binding parts is not in mode <code>TwoWay<\/code>.\n\n<b>Formatter Functions<\/b><br> When a formatter function is specified for the binding or for a binding part, it will be called with the value of the bound model property. After setting the initial property value, the formatter function will only be called again when the bound model property changes (simple property binding) or when at least one of the bound model properties changes (formatter function of a composite binding). Note that a binding only monitors the bound model data for changes. Dependencies of the formatter implementation to other model data is not known to the binding and changes won't be detected.\n\nWhen the formatter for a property binding (simple or composite) is called, the managed object will be given as <code>this<\/code> context. For formatters of binding parts in a composite binding, this is not the case.","!type":"fn(sName: String, oBindingInfo: Object) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"oBindingInfo":"type: object, description: Binding information","sName":"type: string, description: Name of the property to bind"},"!static":false},"getBinding":{"!description":"Get the binding object for a specific aggregation/property","!type":"fn(sName: String) -> sap.ui.model.Binding","!category":"function","parameters":{"sName":"type: string, description: the name of the property or aggregation"},"!static":false},"!category":"class","refreshAggregation":{"!description":"Generic method which can be called, when an aggregation needs to be refreshed. This method does not make any change on the aggregation, but just calls the <code>getContexts<\/code> method of the binding to trigger fetching of new data.\n\nSubclasses should call this method only in the implementation of a named refresh method and for no other purposes. The framework might change the conditions under which the method is called and the method implementation might rely on those conditions.","!type":"fn(sName: String)","!category":"function","parameters":{"sName":"type: string, description: name of the aggregation to refresh"},"!static":false},"detachParseError":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:parseError parseError} event of this <code>sap.ui.base.ManagedObject<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"isInvalidateSuppressed":{"!description":"Returns whether rerendering is currently suppressed on this ManagedObject","!type":"fn()","!category":"function","!static":false},"_onContextualSettingsChanged":{"!description":"Hook method to let descendants of ManagedObject know when propagated contextual settings have changed","!type":"fn()","!category":"function","!static":false},"removeAllAggregation":{"!description":"Removes all objects from the 0..n-aggregation named <code>sAggregationName<\/code>.\n\nThe removed objects are not destroyed nor are they marked as changed.\n\nAdditionally, it clears the parent relationship of all removed objects, marks this ManagedObject as changed and returns an array with the removed objects.\n\nIf the aggregation did not contain any objects, an empty array is returned and this ManagedObject is not marked as changed.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>. Applications or frameworks must not use this method to generically remove all objects from an aggregation. Use the concrete method removeAll<i>XYZ<\/i> for aggregation 'XYZ' instead.","!type":"fn(sAggregationName: String, bSuppressInvalidate?: Boolean) -> Array","!category":"function","parameters":{"bSuppressInvalidate":"type: boolean, description: if true, this ManagedObject is not marked as changed","sAggregationName":"type: string, description: the name of the aggregation"},"!static":false},"addAggregation":{"!description":"Adds some entity <code>oObject<\/code> to the aggregation identified by <code>sAggregationName<\/code>.\n\nIf the given object is not valid with regard to the aggregation (if it is not an instance of the type specified for that aggregation) or when the method is called for an aggregation of cardinality 0..1, then an Error is thrown (see {@link #validateAggregation}.\n\nIf the aggregation already has content, the new object will be added after the current content. If the new object was already contained in the aggregation, it will be moved to the end.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>. Applications or frameworks must not use this method to generically add an object to an aggregation. Use the concrete method add<i>XYZ<\/i> for aggregation 'XYZ' or the generic {@link #applySettings} instead.","!type":"fn(sAggregationName: String, oObject: sap.ui.base.ManagedObject, bSuppressInvalidate?: Boolean) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"bSuppressInvalidate":"type: boolean, description: if true, this ManagedObject as well as the added child are not marked as changed","sAggregationName":"type: string, description: the string identifying the aggregation that <code>oObject<\/code> should be added to.","oObject":"type: sap.ui.base.ManagedObject, description: the object to add; if empty, nothing is added"},"!static":false},"removeAssociation":{"!description":"Removes a <code>ManagedObject<\/code> from the association named <code>sAssociationName<\/code>.\n\nIf an object is removed, the ID of that object is returned and this <code>ManagedObject<\/code> is marked as changed. Otherwise <code>null<\/code> is returned.\n\nIf the same object was added multiple times to the same association, only a single occurrence of it will be removed by this method. If the object is not found or if the parameter can't be interpreted neither as a <code>ManagedObject<\/code> (or ID) nor as an index in the association, nothing will be removed. The same is true if an index is given and if that index is out of range for the association.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>. Applications or frameworks must not use this method to generically remove an object from an association. Use the concrete method remove<i>XYZ<\/i> for association 'XYZ' instead.","!type":"fn(sAssociationName: String, vObject: Number | String | sap.ui.base.ManagedObject, bSuppressInvalidate?: Boolean) -> String | null","!category":"function","parameters":{"bSuppressInvalidate":"type: boolean, description: if <code>true<\/code>, the managed object is not marked as changed","sAssociationName":"type: string, description: the string identifying the association the <code>ManagedObject<\/code> should be removed from.","vObject":"type: int|string|sap.ui.base.ManagedObject, description: the position or ID of the <code>ManagedObject<\/code> to remove or the <code>ManagedObject<\/code> itself; if <code>vObject<\/code> is invalid input, a negative value or a value greater or equal than the current size of the association, nothing is removed"},"!static":false},"extend":{"!description":"Defines a new subclass of ManagedObject with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> can contain the same information that {@link sap.ui.base.Object.extend} already accepts, plus the following new properties in the 'metadata' object literal:\n\n<ul> <li><code>library : <i>string<\/i><\/code><\/li> <li><code>properties : <i>object<\/i><\/code><\/li> <li><code>defaultProperty : <i>string<\/i><\/code><\/li> <li><code>aggregations : <i>object<\/i><\/code><\/li> <li><code>defaultAggregation : <i>string<\/i><\/code><\/li> <li><code>associations : <i>object<\/i><\/code><\/li> <li><code>events : <i>object<\/i><\/code><\/li> <li><code>specialSettings : <i>object<\/i><\/code>// this one is still experimental and not for public usage!<\/li> <\/ul>\n\nEach of these properties is explained in more detail lateron.\n\nExample: <pre>\nManagedObect.extend('sap.mylib.MyClass', {\n  metadata : {\n    library: 'sap.mylib',\n    properties : {\n      value: 'string',\n      width: 'sap.ui.core.CSSSize',\n      height: { type: 'sap.ui.core.CSSSize', defaultValue: '100%'}\n      description: { type: 'string', defaultValue: '', selector: '#{id}-desc'}\n    },\n    defaultProperty : 'value',\n    aggregations : {\n      header : { type: 'sap.mylib.FancyHeader', multiple : false }\n      items : 'sap.ui.core.Control',\n      buttons: { type: 'sap.mylib.Button', multiple : true, selector: '#{id} > .sapMLButtonsSection'}\n    },\n    defaultAggregation : 'items',\n    associations : {\n      initiallyFocused : { type: 'sap.ui.core.Control' }\n    },\n    events: {\n      beforeOpen : {\n        parameters : {\n          opener : { type: 'sap.ui.core.Control' }\n        }\n      }\n    },\n  },\n\n  init: function() {\n  }\n\n}); // end of 'extend' call\n<\/pre>\n\nDetailed explanation of properties<br>\n\n<b>'library'<\/b> : <i>string<\/i><br> Name of the library that the new subclass should belong to. If the subclass is a control or element, it will automatically register with that library so that authoring tools can discover it. By convention, the name of the subclass should have the library name as a prefix, e.g. 'sap.ui.commons.Panel' belongs to library 'sap.ui.commons'.\n\n<b>'properties'<\/b> : <i>object<\/i><br> An object literal whose properties each define a new managed property in the ManagedObject subclass. The value can either be a simple string which then will be assumed to be the type of the new property or it can be an object literal with the following properties <ul> <li><code>type: <i>string<\/i><\/code> type of the new property. Must either be one of the built-in types 'string', 'boolean', 'int', 'float', 'object' or 'any', or a type created and registered with {@link sap.ui.base.DataType.createType} or an array type based on one of the previous types.<\/li> <li><code>group:<i>string<\/i><\/code> a semantic grouping of the properties, intended to be used in design time tools. Allowed values are (case sensitive): Accessibility, Appearance, Behavior, Data, Designtime, Dimension, Identification, Misc<\/li> <li><code>defaultValue: <i>any<\/i><\/code> the default value for the property or null if there is no defaultValue.<\/li> <li><code>bindable: <i>boolean|string<\/i><\/code> (either can be omitted or set to the boolean value <code>true<\/code> or the magic string 'bindable') If set to <code>true<\/code> or 'bindable', additional named methods <code>bind<i>Name<\/i><\/code> and <code>unbind<i>Name<\/i><\/code> are generated as convenience. Despite its name, setting this flag is not mandatory to make the managed property bindable. The generic methods {@link #bindProperty} and {@link #unbindProperty} can always be used. <\/li> <li><code>selector: <i>string<\/i><\/code> either can be omitted or set to a valid selector string as defined by the {@link https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector Element.prototype.querySelector} method should locate the DOM element that rendered this property's value. It should only be set for properties that have a visual text representation in the DOM.\n\nIn addition to the CSS selector syntax, the selector string can contain the placeholder <code>{id}<\/code> (multiple times). Before evaluating the selector in the context of an Element or Control, all occurrences of the placeholder have to be replaced by the (potentially escaped) ID of that Element or Control. In fact, any selector should start with <code>#{id}<\/code> to ensure that the query result is limited to the desired Element or Control.\n\n<b>Note<\/b>: there is a convenience method {@link sap.ui.core.Element#getDomRefForSetting} that evaluates the selector in the context of a concrete Element or Control instance. It also handles the placeholder <code>{id}<\/code>. Only selected framework features may use that private method, it is not yet a public API and might be changed or removed in future versions of UI5. However, instead of maintaining the <code>selector<\/code> in the metadata, Element and Control classes can overwrite <code>getDomRefForSetting<\/code> and determine the DOM Element dynamically.<\/li> <\/ul> Property names should use camelCase notation, start with a lowercase letter and only use characters from the set [a-zA-Z0-9_$]. If an aggregation in the literal is preceded by a JSDoc comment (doclet) and if the UI5 plugin and template are used for JSDoc3 generation, the doclet will be used as generic documentation of the aggregation.\n\nFor each public property 'foo', the following methods will be created by the \"extend\" method and will be added to the prototype of the subclass: <ul> <li>getFoo() - returns the current value of property 'foo'. Internally calls {@link #getProperty}<\/li> <li>setFoo(v) - sets 'v' as the new value of property 'foo'. Internally calls {@link #setProperty}<\/li> <li>bindFoo(c) - (only if property was defined to be 'bindable'): convenience function that wraps {@link #bindProperty}<\/li> <li>unbindFoo() - (only if property was defined to be 'bindable'): convenience function that wraps {@link #unbindProperty}<\/li> <\/ul>\n\n<b>'defaultProperty'<\/b> : <i>string<\/i><br> When specified, the default property must match the name of one of the properties defined for the new subclass (either own or inherited). The named property can be used to identify the main property to be used for bound data. E.g. the value property of a field control.\n\n<b>'aggregations'<\/b> : <i>object<\/i><br> An object literal whose properties each define a new aggregation in the ManagedObject subclass. The value can either be a simple string which then will be assumed to be the type of the new aggregation or it can be an object literal with the following properties <ul> <li><code>type: <i>string<\/i><\/code> type of the new aggregation. must be the full global name of a ManagedObject subclass (in dot notation, e.g. 'sap.m.Button')<\/li> <li><code>[multiple]: <i>boolean<\/i><\/code> whether the aggregation is a 0..1 (false) or a 0..n aggregation (true), defaults to true <\/li> <li><code>[singularName]: <i>string<\/i><\/code>. Singular name for 0..n aggregations. For 0..n aggregations the name by convention should be the plural name. Methods affecting multiple objects in an aggregation will use the plural name (e.g. getItems(), whereas methods that deal with a single object will use the singular name (e.g. addItem). The framework knows a set of common rules for building plural form of English nouns and uses these rules to determine a singular name on its own. if that name is wrong, a singluarName can be specified with this property. <\/li> <li><code>[visibility]: <i>string<\/i><\/code> either 'hidden' or 'public', defaults to 'public'. Aggregations that belong to the API of a class must be 'public' whereas 'hidden' aggregations typically are used for the implementation of composite classes (e.g. composite controls) <\/li> <li><code>bindable: <i>boolean|string<\/i><\/code> (either can be omitted or set to the boolean value <code>true<\/code> or the magic string 'bindable') If set to <code>true<\/code> or 'bindable', additional named methods <code>bind<i>Name<\/i><\/code> and <code>unbind<i>Name<\/i><\/code> are generated as convenience. Despite its name, setting this flag is not mandatory to make the managed aggregation bindable. The generic methods {@link #bindAggregation} and {@link #unbindAggregation} can always be used. <\/li> <li><code>forwarding: <i>object<\/i><\/code> If set, this defines a forwarding of objects added to this aggregation into an aggregation of another ManagedObject - typically to an inner control within a composite control. This means that all adding, removal, or other operations happening on the source aggregation are actually called on the target instance. All elements added to the source aggregation will be located at the target aggregation (this means the target instance is their parent). Both, source and target element will return the added elements when asked for the content of the respective aggregation. If present, the named (non-generic) aggregation methods will be called for the target aggregation. Aggregations can only be forwarded to non-hidden aggregations of the same multiplicity (single/multiple). The target aggregation must also be \"compatible\" to the source aggregation in the sense that any items given to the source aggregation must also be valid in the target aggregation (otherwise the target element will throw a validation error). If the forwarded elements use data binding, the target element must be properly aggregated by the source element to make sure all models are available there as well. The aggregation target must remain the same instance across the entire lifetime of the source control. Aggregation forwarding will behave unexpectedly when the content in the target aggregation is modified by other actors (e.g. by the target element or by another forwarding from a different source aggregation). Hence, this is not allowed. The forwarding configuration object defines the target of the forwarding. The available settings are: <ul> <li><code>idSuffix: <i>string<\/i><\/code>A string which is appended to the ID of <i>this<\/i> ManagedObject to construct the ID of the target ManagedObject. This is one of the two options to specify the target. This option requires the target instance to be created in the init() method of this ManagedObject and to be always available.<\/li> <li><code>getter: <i>string<\/i><\/code>The name of the function on instances of this ManagedObject which returns the target instance. This second option to specify the target can be used for lazy instantiation of the target. Note that either idSuffix or getter must be given. Also note that the target instance returned by the getter must remain the same over the entire lifetime of this ManagedObject and the implementation assumes that all instances return the same type of object (at least the target aggregation must always be defined in the same class).<\/li> <li><code>aggregation: <i>string<\/i><\/code>The name of the aggregation on the target into which the objects shall be forwarded. The multiplicity of the target aggregation must be the same as the one of the source aggregation for which forwarding is defined.<\/li> <li><code>[forwardBinding]: <i>boolean<\/i><\/code>Whether any binding should happen on the forwarding target or not. Default if omitted is <code>false<\/code>, which means any bindings happen on the outer ManagedObject. When the binding is forwarded, all binding methods like updateAggregation, getBindingInfo, refreshAggregation etc. are called on the target element of the forwarding instead of being called on this element. The basic aggregation mutator methods (add/remove etc.) are only called on the forwarding target element. Without forwardBinding, they are called on this element, but forwarded to the forwarding target, where they actually modify the aggregation. <\/li> <\/ul> <\/li> <li><code>selector: <i>string<\/i><\/code> either can be omitted or set to a valid selector string as defined by the {@link https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector Element.prototype.querySelector} method. The selector should locate the DOM element that surrounds the aggregation's content. It should only be set for aggregations that have a visual representation in the DOM. A DOM element surrounding the aggregation's rendered content should be available in the DOM, even if the aggregation is empty or not rendered for some reason. In cases where this is not possible or not intended, <code>getDomRefForSetting<\/code> can be overridden, see below.\n\nIn addition to the CSS selector syntax, the selector string can contain the magic token <code>{id}<\/code> (multiple times). Before evaluating the selector in the context of an Element or Control, all occurrences of the token have to be replaced by the (potentially escaped) ID of that Element or Control. In fact, any selector should start with <code>#{id}<\/code> to ensure that the query result is limited to the desired Element or Control.\n\n<b>Note<\/b>: there is a convenience method {@link sap.ui.core.Element#getDomRefForSetting} that evaluates the selector in the context of a concrete Element or Control instance. It also handles the placeholder <code>{id}<\/code>. Only selected framework features may use that private method, it is not yet a public API and might be changed or removed in future versions of UI5. However, instead of maintaining the <code>selector<\/code> in the metadata, Element and Control classes can overwrite <code>getDomRefForSetting<\/code> to calculate or add the appropriate DOM Element dynamically.<\/li> <\/li> <\/ul> Aggregation names should use camelCase notation, start with a lowercase letter and only use characters from the set [a-zA-Z0-9_$]. The name for a hidden aggregations might start with an underscore. If an aggregation in the literal is preceded by a JSDoc comment (doclet) and if the UI5 plugin and template are used for JSDoc3 generation, the doclet will be used as generic documentation of the aggregation.\n\nFor each public aggregation 'item' of cardinality 0..1, the following methods will be created by the \"extend\" method and will be added to the prototype of the subclass: <ul> <li>getItem() - returns the current value of aggregation 'item'. Internally calls {@link #getAggregation} with a default value of <code>undefined<\/code><\/li> <li>setItem(o) - sets 'o' as the new aggregated object in aggregation 'item'. Internally calls {@link #setAggregation}<\/li> <li>destroyItem(o) - destroy a currently aggregated object in aggregation 'item' and clears the aggregation. Internally calls {@link #destroyAggregation}<\/li> <li>bindItem(c) - (only if aggregation was defined to be 'bindable'): convenience function that wraps {@link #bindAggregation}<\/li> <li>unbindItem() - (only if aggregation was defined to be 'bindable'): convenience function that wraps {@link #unbindAggregation}<\/li> <\/ul> For a public aggregation 'items' of cardinality 0..n, the following methods will be created: <ul> <li>getItems() - returns an array with the objects contained in aggregation 'items'. Internally calls {@link #getAggregation} with a default value of <code>[]<\/code><\/li> <li>addItem(o) - adds an object as last element in the aggregation 'items'. Internally calls {@link #addAggregation}<\/li> <li>insertItem(o,p) - inserts an object into the aggregation 'items'. Internally calls {@link #insertAggregation}<\/li> <li>indexOfItem(o) - returns the position of the given object within the aggregation 'items'. Internally calls {@link #indexOfAggregation}<\/li> <li>removeItem(v) - removes an object from the aggregation 'items'. Internally calls {@link #removeAggregation}<\/li> <li>removeItems() - removes all objects from the aggregation 'items'. Internally calls {@link #removeAllAggregation}<\/li> <li>destroyItems() - destroy all currently aggregated objects in aggregation 'items' and clears the aggregation. Internally calls {@link #destroyAggregation}<\/li> <li>bindItems(c) - (only if aggregation was defined to be 'bindable'): convenience function that wraps {@link #bindAggregation}<\/li> <li>unbindItems() - (only if aggregation was defined to be 'bindable'): convenience function that wraps {@link #unbindAggregation}<\/li> <\/ul> For private or hidden aggregations, no methods are generated.\n\n<b>'defaultAggregation'<\/b> : <i>string<\/i><br> When specified, the default aggregation must match the name of one of the aggregations defined for the new subclass (either own or inherited). The named aggregation will be used in contexts where no aggregation is specified. E,g. when an object in an XMLView embeds other objects without naming an aggregation, as in the following example: <pre>\n &lt;!-- assuming the defaultAggregation for Dialog is 'content' -->\n &lt;Dialog>\n   &lt;Text/>\n   &lt;Button/>\n &lt;/Dialog>\n<\/pre>\n\n<b>'associations'<\/b> : <i>object<\/i><br> An object literal whose properties each define a new association of the ManagedObject subclass. The value can either be a simple string which then will be assumed to be the type of the new association or it can be an object literal with the following properties <ul> <li><code>type: <i>string<\/i><\/code> type of the new association<\/li> <li><code>multiple: <i>boolean<\/i><\/code> whether the association is a 0..1 (false) or a 0..n association (true), defaults to false(1) for associations<\/li> <li><code>[singularName]: <i>string<\/i><\/code>. Singular name for 0..n associations. For 0..n associations the name by convention should be the plural name. Methods affecting multiple objects in an association will use the plural name (e.g. getItems(), whereas methods that deal with a single object will use the singular name (e.g. addItem). The framework knows a set of common rules for building plural form of English nouns and uses these rules to determine a singular name on its own. if that name is wrong, a singluarName can be specified with this property.<\/li> <\/ul> Association names should use camelCase notation, start with a lowercase letter and only use characters from the set [a-zA-Z0-9_$]. If an association in the literal is preceded by a JSDoc comment (doclet) and if the UI5 plugin and template are used for JSDoc3 generation, the doclet will be used as generic documentation of the association.\n\nFor each association 'ref' of cardinality 0..1, the following methods will be created by the \"extend\" method and will be added to the prototype of the subclass: <ul> <li>getRef() - returns the current value of association 'item'. Internally calls {@link #getAssociation} with a default value of <code>undefined<\/code><\/li> <li>setRef(o) - sets 'o' as the new associated object in association 'item'. Internally calls {@link #setAssociation}<\/li> <\/ul> For a public association 'refs' of cardinality 0..n, the following methods will be created: <ul> <li>getRefs() - returns an array with the objects contained in association 'items'. Internally calls {@link #getAssociation} with a default value of <code>[]<\/code><\/li> <li>addRef(o) - adds an object as last element in the association 'items'. Internally calls {@link #addAssociation}<\/li> <li>removeRef(v) - removes an object from the association 'items'. Internally calls {@link #removeAssociation}<\/li> <li>removeAllRefs() - removes all objects from the association 'items'. Internally calls {@link #removeAllAssociation}<\/li> <\/ul>\n\n<b>'events'<\/b> : <i>object<\/i><br> An object literal whose properties each define a new event of the ManagedObject subclass. The value can either be a simple string which then will be assumed to be the type of the new association or it can be an object literal with the following properties <ul> <li><code>allowPreventDefault: <i>boolean<\/i><\/code> whether the event allows to prevented the default behavior of the event source<\/li> <li><code>parameters: <i>object<\/i><\/code> an object literal that describes the parameters of this event. <\/li> <\/ul> Event names should use camelCase notation, start with a lowercase letter and only use characters from the set [a-zA-Z0-9_$]. If an event in the literal is preceded by a JSDoc comment (doclet) and if the UI5 plugin and template are used for JSDoc3 generation, the doclet will be used as generic documentation of the event.\n\nFor each event 'Some' the following methods will be created by the \"extend\" method and will be added to the prototype of the subclass: <ul> <li>attachSome(fn,o) - registers a listener for the event. Internally calls {@link #attachEvent}<\/li> <li>detachSome(fn,o) - deregisters a listener for the event. Internally calls {@link #detachEvent}<\/li> <li>fireSome() - fire the event. Internally calls {@link #fireEvent}<\/li> <\/ul>\n\n<b>'specialSettings'<\/b> : <i>object<\/i><br> Special settings are an experimental feature and MUST NOT BE USED by controls or applications outside of the sap.ui.core project.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: constructor function for the metadata object. If not given, it defaults to <code>sap.ui.base.ManagedObjectMetadata<\/code>.","oClassInfo":"type: object, description: object literal with informations about the class","sClassName":"type: string, description: name of the class to be created"},"!static":true},"unbindObject":{"!description":"Removes the defined binding context of this object, all bindings will now resolve relative to the parent context again.","!type":"fn(sModelName?: String) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"sModelName":"type: string, description: name of the model to remove the context for."},"!static":false},"setProperty":{"!description":"Sets the given value for the given property after validating and normalizing it, marks this object as changed.\n\nIf the value is not valid with regard to the declared data type of the property, an Error is thrown. In case <code>null<\/code> or <code>undefined<\/code> is passed, the default value for this property is used (see {@link #validateProperty}). To fully reset the property to initial state, use {@link #resetProperty} instead. If the validated and normalized <code>oValue<\/code> equals the current value of the property, the internal state of this object is not changed (apart from the result of {@link #isPropertyInitial}). If the value changes, it is stored internally and the {@link #invalidate} method is called on this object. In the case of TwoWay databinding, the bound model is informed about the property change.\n\nNote that ManagedObject only implements a single level of change tracking: if a first call to setProperty recognizes a change, 'invalidate' is called. If another call to setProperty reverts that change, invalidate() will be called again, the new status is not recognized as being 'clean' again.\n\n<b>Note:<\/b> This method is a low level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>. Applications or frameworks must not use this method to generically set a property. Use the concrete method set<i>XYZ<\/i> for property 'XYZ' or the generic {@link #applySettings} instead.","!type":"fn(sPropertyName: String, oValue: Object, bSuppressInvalidate?: Boolean) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"bSuppressInvalidate":"type: boolean, description: if true, the managed object is not marked as changed","oValue":"type: any, description: value to set the property to","sPropertyName":"type: string, description: name of the property to set"},"!static":false},"detachValidationError":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:validationError validationError} event of this <code>sap.ui.base.ManagedObject<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"fireFormatError":{"!description":"Fires event {@link #event:formatError formatError} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"invalidate":{"!description":"This triggers rerendering of itself and its children.\n\nAs <code>sap.ui.base.ManagedObject<\/code> \"bubbles up\" the invalidate, changes to child-<code>Elements<\/code> will also result in rerendering of the whole sub tree.","!type":"fn()","!category":"function","!static":false},"getObjectBinding":{"!description":"Get the object binding object for a specific model.\n\n<b>Note:<\/b> to be compatible with future versions of this API, you must not use the following model names: <ul> <li><code>null<\/code><\/li> <li>empty string <code>\"\"<\/code><\/li> <li>string literals <code>\"null\"<\/code> or <code>\"undefined\"<\/code><\/li> <\/ul> Omitting the model name (or using the value <code>undefined<\/code>) is explicitly allowed and refers to the default model.","!type":"fn(sModelName?: String) -> sap.ui.model.ContextBinding","!category":"function","parameters":{"sModelName":"type: string, description: Non-empty name of the model or <code>undefined<\/code>"},"!static":false},"getBindingPath":{"!description":"Get the binding path for a specific aggregation/property","!type":"fn(sName: String) -> String","!category":"function","parameters":{"sName":"type: string, description: the name of the property or aggregation"},"!static":false},"fireParseError":{"!description":"Fires event {@link #event:parseError parseError} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getOriginInfo":{"!description":"Returns the origin info for the value of the given property.\n\nThe origin info might contain additional information for translatable texts. The bookkeeping of this information is not active by default and must be activated by configuration. Even then, it might not be present for all properties and their values depending on where the value came form.","!type":"fn(sPropertyName: String) -> Object","!category":"function","parameters":{"sPropertyName":"type: string, description: the name of the property"},"!static":false},"!description":"Base Class that introduces some basic concepts like state management or databinding.\n\nNew subclasses of ManagedObject are created with a call to {@link #.extend ManagedObject.extend} and can make use of the following managed features:\n\n<h3>Properties<\/h3> Managed properties represent the state of a ManagedObject. They can store a single value of a simple data type (like 'string' or 'int'). They have a <i>name<\/i> (e.g. 'size') and methods to get the current value (<code>getSize<\/code>), or to set a new value (<code>setSize<\/code>). When a property is modified, the ManagedObject is marked as invalidated. A managed property can be bound against a property in a {@link sap.ui.model.Model} by using the {@link #bindProperty} method. Updates to the model property will be automatically reflected in the managed property and - if TwoWay databinding is active, changes to the managed property will be reflected in the model. An existing binding can be removed by calling {@link #unbindProperty}.\n\nIf a ManagedObject is cloned, the clone will have the same values for its managed properties as the source of the clone - if the property wasn't bound. If it is bound, the property in the clone will be bound to the same model property as in the source.\n\nDetails about the declaration of a managed property, the metadata that describes it and the set of methods that are automatically generated to access it, can be found in the documentation of the {@link sap.ui.base.ManagedObject.extend extend } method.\n\n<h3>Aggregations<\/h3> Managed aggregations can store one or more references to other ManagedObjects. They are a mean to control the lifecycle of the aggregated objects: one ManagedObject can be aggregated by at most one parent ManagedObject at any time. When a ManagedObject is destroyed, all aggregated objects are destroyed as well and the object itself is removed from its parent. That is, aggregations won't contain destroyed objects or null/undefined.\n\nAggregations have a <i>name<\/i> ('e.g 'header' or 'items'), a <i>cardinality<\/i> ('0..1' or '0..n') and are of a specific <i>type<\/i> (which must be a subclass of ManagedObject as well or a UI5 interface). A ManagedObject will provide methods to set or get the aggregated object for a specific aggregation of cardinality 0..1 (e.g. <code>setHeader<\/code>, <code>getHeader<\/code> for an aggregation named 'header'). For an aggregation of cardinality 0..n, there are methods to get all aggregated objects (<code>getItems<\/code>), to locate an object in the aggregation (e.g. <code>indexOfItem<\/code>), to add, insert or remove a single aggregated object (<code>addItem<\/code>, <code>insertItem<\/code>, <code>removeItem<\/code>) or to remove or destroy all objects from an aggregation (<code>removeAllItems<\/code>, <code>destroyItems<\/code>).\n\nDetails about the declaration of a managed aggregation, the metadata that describes the aggregation, and the set of methods that are automatically generated to access it, can be found in the documentation of the {@link sap.ui.base.ManagedObject.extend extend} method.\n\nAggregations of cardinality 0..n can be bound to a collection in a model by using {@link #bindAggregation} (and unbound again using {@link #unbindAggregation}). For each context in the model collection, a corresponding object will be created in the managed aggregation, either by cloning a template object or by calling a factory function.\n\nAggregations also control the databinding context of bound objects: by default, aggregated objects inherit all models and binding contexts from their parent object.\n\nWhen a ManagedObject is cloned, all aggregated objects will be cloned as well - but only if they haven't been added by databinding. In that case, the aggregation in the clone will be bound to the same model collection.\n\n<h3>Associations<\/h3> Managed associations also form a relationship between objects, but they don't define a lifecycle for the associated objects. They even can 'break' in the sense that an associated object might have been destroyed already although it is still referenced in an association. For the same reason, the internal storage for associations are not direct object references but only the IDs of the associated target objects.\n\nAssociations have a <i>name<\/i> ('e.g 'initialFocus'), a <i>cardinality<\/i> ('0..1' or '0..n') and are of a specific <i>type<\/i> (which must be a subclass of ManagedObject as well or a UI5 interface). A ManagedObject will provide methods to set or get the associated object for a specific association of cardinality 0..1 (e.g. <code>setInitialFocus<\/code>, <code>getInitialFocus<\/code>). For an association of cardinality 0..n, there are methods to get all associated objects (<code>getRefItems<\/code>), to add, insert or remove a single associated object (<code>addRefItem<\/code>, <code>insertRefItem<\/code>, <code>removeRefItem<\/code>) or to remove all objects from an association (<code>removeAllRefItems<\/code>).\n\nDetails about the declaration of a managed association, the metadata that describes it and the set of methods that are automatically generated to access it, can be found in the documentation of the {@link sap.ui.base.ManagedObject.extend extend} method.\n\nAssociations can't be bound to the model.\n\nWhen a ManagedObject is cloned, the result for an association depends on the relationship between the associated target object and the root of the clone operation. If the associated object is part of the to-be-cloned object tree (reachable via aggregations from the root of the clone operation), then the cloned association will reference the clone of the associated object. Otherwise the association will reference the same object as in the original tree. When a ManagedObject is destroyed, other objects that are only associated, are not affected by the destroy operation.\n\n<h3>Events<\/h3> Managed events provide a mean for communicating important state changes to an arbitrary number of 'interested' listeners. Events have a <i>name<\/i> and (optionally) a set of <i>parameters<\/i>. For each event there will be methods to add or remove an event listener as well as a method to fire the event. (e.g. <code>attachChange<\/code>, <code>detachChange<\/code>, <code>fireChange<\/code> for an event named 'change').\n\nDetails about the declaration of managed events, the metadata that describes the event, and the set of methods that are automatically generated to access it, can be found in the documentation of the {@link sap.ui.base.ManagedObject.extend extend} method.\n\nWhen a ManagedObject is cloned, all listeners registered for any event in the clone source are also registered to the clone. Later changes are not reflected in any direction (neither from source to clone, nor vice versa).\n\n<a name=\"lowlevelapi\"><h3>Low Level APIs:<\/h3><\/a> The prototype of ManagedObject provides several generic, low level APIs to manage properties, aggregations, associations, and events. These generic methods are solely intended for implementing higher level, non-generic methods that manage a single managed property etc. (e.g. a function <code>setSize(value)<\/code> that sets a new value for property 'size'). {@link sap.ui.base.ManagedObject.extend} creates default implementations of those higher level APIs for all managed aspects. The implementation of a subclass then can override those default implementations with a more specific implementation, e.g. to implement a side effect when a specific property is set or retrieved. It is therefore important to understand that the generic low-level methods ARE NOT SUITABLE FOR GENERIC ACCESS to the state of a managed object, as that would bypass the overriding higher level methods and their side effects.","fireValidationSuccess":{"!description":"Fires event {@link #event:validationSuccess validationSuccess} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"removeAggregation":{"!description":"Removes an object from the aggregation named <code>sAggregationName<\/code> with cardinality 0..n.\n\nThe removed object is not destroyed nor is it marked as changed.\n\nIf the given object is found in the aggregation, it is removed, it's parent relationship is unset and this ManagedObject is marked as changed. The removed object is returned as result of this method. If the object could not be found, <code>undefined<\/code> is returned.\n\nThis method must only be called for aggregations of cardinality 0..n. The only way to remove objects from a 0..1 aggregation is to set a <code>null<\/code> value for them.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>. Applications or frameworks must not use this method to generically remove an object from an aggregation. Use the concrete method remove<i>XYZ<\/i> for aggregation 'XYZ' instead.","!type":"fn(sAggregationName: String, vObject: Number | String | sap.ui.base.ManagedObject, bSuppressInvalidate?: Boolean) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"bSuppressInvalidate":"type: boolean, description: if true, this ManagedObject is not marked as changed","sAggregationName":"type: string, description: the string identifying the aggregation that the given object should be removed from","vObject":"type: int|string|sap.ui.base.ManagedObject, description: the position or ID of the ManagedObject that should be removed or that ManagedObject itself; if <code>vObject<\/code> is invalid, a negative value or a value greater or equal than the current size of the aggregation, nothing is removed."},"!static":false},"escapeSettingsValue":{"!description":"Escapes the given value so it can be used in the constructor's settings object. Should be used when property values are initialized with static string values which could contain binding characters (curly braces).","!type":"fn(vValue: Object) -> Object","!category":"function","parameters":{"vValue":"type: any, description: Value to escape; only needs to be done for string values, but the call will work for all types"},"!static":true},"getAggregation":{"!description":"Returns the aggregated object(s) for the named aggregation of this ManagedObject.\n\nIf the aggregation does not contain any objects(s), the given <code>oDefaultForCreation<\/code> (or <code>null<\/code>) is set as new value of the aggregation and returned to the caller.\n\n<b>Note:<\/b> the need to specify a default value and the fact that it is stored as new value of a so far empty aggregation is recognized as a shortcoming of this API but can no longer be changed for compatibility reasons.\n\n<b>Note:<\/b> This method is a low-level API as described in <a href=\"#lowlevelapi\">the class documentation<\/a>. Applications or frameworks must not use this method to generically read the content of an aggregation. Use the concrete method get<i>XYZ<\/i> for aggregation 'XYZ' instead.","!type":"fn(sAggregationName: String, oDefaultForCreation: sap.ui.base.ManagedObject | Array) -> sap.ui.base.ManagedObject | Array","!category":"function","parameters":{"sAggregationName":"type: string, description: the name of the aggregation","oDefaultForCreation":"type: sap.ui.base.ManagedObject|Array, description: the object that is used in case the current aggregation is empty"},"!static":false},"isPropertyInitial":{"!description":"Returns whether the given property value is initial and has not been explicitly set or bound. Even after setting the default value or setting null/undefined (which also causes the default value to be set), the property is no longer initial. A property can be reset to initial state by calling <code>resetProperty(sPropertyName)<\/code>.","!type":"fn(sPropertyName: String) -> Boolean","!category":"function","parameters":{"sPropertyName":"type: string, description: the name of the property"},"!static":false},"attachParseError":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:parseError parseError} event of this <code>sap.ui.base.ManagedObject<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.base.ManagedObject<\/code> itself.\n\nFired when a new value for a bound property should have been propagated to the model, but parsing the value failed with an exception.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.base.ManagedObject<\/code> itself"},"!static":false},"fireModelContextChange":{"!description":"Fires event {@link #event:modelContextChange modelContextChange} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"bindContext":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.11.1 please use bindElement instead.<br>Bind the object to the referenced entity in the model, which is used as the binding context to resolve bound properties or aggregations of the object itself and all of its children relatively to the given path.","!type":"fn(sPath: String) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"sPath":"type: string, description: the binding path"},"!static":false},"applySettings":{"!description":"Sets all the properties, aggregations, associations and event handlers as given in the object literal <code>mSettings<\/code>. If a property, aggregation, etc. is not listed in <code>mSettings<\/code>, then its value is not changed by this method.\n\nFor properties and 0..1 aggregations/associations, any given setting overwrites the current value. For 0..n aggregations, the given values are appended; event listeners are registered in addition to existing ones.\n\nFor the possible keys and values in <code>mSettings<\/code> see the general documentation in {@link sap.ui.base.ManagedObject} or the specific documentation of the constructor of the concrete managed object class.","!type":"fn(mSettings: Object, oScope?: Object) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"oScope":"type: object, description: Scope object to resolve types and formatters","mSettings":"type: object, description: the settings to apply to this managed object"},"!static":false},"getMetadata":{"!description":"Returns the metadata for the ManagedObject class.","!type":"fn() -> sap.ui.base.ManagedObjectMetadata","!category":"function","!static":true}},"sap.ui.core.util.serializer.HTMLViewSerializer":{"!description":"HTMLViewSerializer class.","extend":{"!description":"Creates a new subclass of class sap.ui.core.util.serializer.HTMLViewSerializer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"HTML view serializer class. Serializes a given view.","!module":"sap/ui/core/util/serializer/HTMLViewSerializer","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.serializer.HTMLViewSerializer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.base.EventProvider","!helpDescription":"HTMLViewSerializer class."},"sap.ui.core.mvc.View.Preprocessor":{"!description":"Interface for Preprocessor implementations that can be hooked in the view life cycle.\n\nThere are two possibilities to use the preprocessor. It can be either passed to the view via the mSettings.preprocessors object where it is the executed only for this instance, or by the registerPreprocessor method of the view type. Currently this is available only for XMLViews (as of version 1.30).","!category":"static class","!module":"sap/ui/core/mvc/View"},"sap.ui.model.json.JSONPropertyBinding":{"!description":"Property binding implementation for JSON format.","!category":"class","!constructorDescription":"Creates a new JSONListBinding.\n\nThis constructor should only be called by subclasses or model implementations, not by application or control code.\nSuch code should use {@link sap.ui.model.json.JSONModel#bindProperty JSONModel#bindProperty} on the corresponding model instance instead.","!module":"sap/ui/model/json/JSONPropertyBinding","!proto":"sap.ui.model.ClientPropertyBinding","!helpDescription":"Property binding implementation for JSON format."},"sap.ui.core.dnd.IDragInfo":{"!description":"Marker interface for drag configuration providing information about the source of the drag operation.","!category":"static class","!module":"sap/ui/core/library"},"sap.ui.core.util.XMLPreprocessor":{"IContext":"sap.ui.core.util.XMLPreprocessor.IContext","!description":"The XML pre-processor for template instructions in XML views.","!category":"namespace","!module":"sap/ui/core/util/XMLPreprocessor","!helpDescription":"The XML pre-processor for template instructions in XML views."},"jQuery.device.is":{"phone":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.17.0 use {@link sap.ui.Device.system.phone} instead<br>Whether the running device is a phone. If a desktop browser runs in mobile device simulation mode (with URL parameter sap-ui-xx-fakeOS or sap-ui-xx-test-mobile), this property will also be set according to the simulated platform. This property will be false when runs in desktop browser.","!type":"Boolean","!category":"enum"},"ipad":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 shouldn't do device specific coding; if still needed, use {@link sap.ui.Device.os.ios} &amp;&amp; {@link sap.ui.Device.system.tablet}<br>Whether the application runs on an iPad","!type":"Boolean","!category":"enum"},"desktop":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.17.0 use {@link sap.ui.Device.system.desktop} instead<br>Whether the running device is a desktop browser. If a desktop browser runs in mobile device simulation mode (with URL parameter sap-ui-xx-fakeOS or sap-ui-xx-test-mobile), this property will be false.","!type":"Boolean","!category":"enum"},"!module":"jquery.sap.mobile","iphone":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 shouldn't do device specific coding; if still needed, use {@link sap.ui.Device.os.ios} &amp;&amp; {@link sap.ui.Device.system.phone}<br>Whether the application runs on an iPhone","!type":"Boolean","!category":"enum"},"landscape":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use {@link sap.ui.Device.orientation.landscape} instead<br>Whether the device is in \"landscape\" orientation (also \"true\" when the device does not know about the orientation)","!type":"Boolean","!category":"enum"},"standalone":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use window.navigator.standalone instead<br>Whether the application runs in standalone mode without browser UI (launched from the iOS home screen)","!type":"Boolean","!category":"enum"},"portrait":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use {@link sap.ui.Device.orientation.portrait} instead<br>Whether the device is in portrait orientation","!type":"Boolean","!category":"enum"},"android_tablet":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.17.0 use {@link sap.ui.Device.system.tablet} &amp;&amp; {@link sap.ui.Device.os.android} instead<br>Whether the application runs on an Android tablet - based not on screen size but user-agent (so this is not guaranteed to be equal to jQuery.device.is.tablet on Android) https://developers.google.com/chrome/mobile/docs/user-agent Some device vendors however do not follow this rule","!type":"Boolean","!category":"enum"},"tablet":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.17.0 use {@link sap.ui.Device.system.tablet} instead<br>Whether the running device is a tablet. If a desktop browser runs in mobile device simulation mode (with URL parameter sap-ui-xx-fakeOS or sap-ui-xx-test-mobile), this property will also be set according to the simulated platform. This property will be false when runs in desktop browser.","!type":"Boolean","!category":"enum"},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use the respective functions of {@link sap.ui.Device} instead<br>Holds information about the current device and its state","!category":"namespace","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use the respective functions of {@link sap.ui.Device} instead<br>Holds information about the current device and its state","android_phone":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.17.0 use {@link sap.ui.Device.system.phone} &amp;&amp; {@link sap.ui.Device.os.android} instead<br>Whether the application runs on an Android phone - based not on screen size but user-agent (so this is not guaranteed to be equal to jQuery.device.is.phone on Android) https://developers.google.com/chrome/mobile/docs/user-agent Some device vendors however do not follow this rule","!type":"Boolean","!category":"enum"}},"sap.ui.core.util.ExportColumn":{"getTemplate":{"!description":"Gets content of aggregation {@link #getTemplate template}.\n\nCell template for column.","!type":"fn() -> sap.ui.core.util.ExportCell","!category":"function","!static":false},"destroyTemplate":{"!description":"Destroys the template in the aggregation {@link #getTemplate template}.","!type":"fn() -> sap.ui.core.util.ExportColumn","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.ExportColumn with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new ExportCell.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTemplate template} : sap.ui.core.util.ExportCell<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","!module":"sap/ui/core/util/ExportColumn","!description":"Can have a name and a cell template.","getName":{"!description":"Gets current value of property {@link #getName name}.\n\nColumn name.","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","setName":{"!description":"Sets a new value for property {@link #getName name}.\n\nColumn name.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sName: String) -> sap.ui.core.util.ExportColumn","!category":"function","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"},"!static":false},"setTemplate":{"!description":"Sets the aggregated {@link #getTemplate template}.","!type":"fn(oTemplate: sap.ui.core.util.ExportCell) -> sap.ui.core.util.ExportColumn","!category":"function","parameters":{"oTemplate":"type: sap.ui.core.util.ExportCell, description: The template to set"},"!static":false},"!helpDescription":"Can have a name and a cell template.","!proto":"sap.ui.base.ManagedObject","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.ExportColumn.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.model.xml.XMLModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.xml.XMLModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.ClientModel.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oData: Object)","prototype":"sap.ui.model.xml.XMLModel"},"sap.ui.model.odata.v4.Context":{"getCanonicalPath":{"!description":"Returns the \"canonical path\" of the entity for this context. According to \"4.3.1 Canonical URL\" of the specification \"OData Version 4.0 Part 2: URL Conventions\", this is the \"name of the entity set associated with the entity followed by the key predicate identifying the entity within the collection\". Use the canonical path in {@link sap.ui.core.Element#bindElement} to create an element binding. Note: For a transient context (see {@link #isTransient}) a wrong path is returned unless all key properties are available within the initial data.","!type":"fn() -> String","!category":"function","!static":false},"requestObject":{"!description":"Returns a promise on the value for the given path relative to this context. The function allows access to the complete data the context points to (if <code>sPath<\/code> is \"\") or any part thereof. The data is a JSON structure as described in <a href=\"http://docs.oasis-open.org/odata/odata-json-format/v4.0/odata-json-format-v4.0.html\"> \"OData JSON Format Version 4.0\"<\/a>. Note that the function clones the result. Modify values via {@link sap.ui.model.odata.v4.ODataPropertyBinding#setValue}.\n\nIf you want {@link #requestObject} to read fresh data, call <code>oContext.getBinding().refresh()<\/code> first.","!type":"fn(sPath?: String) -> Promise","!category":"function","parameters":{"sPath":"type: string, description: A relative path within the JSON structure"},"!static":false},"getIndex":{"!description":"Returns the context's index within the binding's collection. The return value changes if a new entity is added via {@link sap.ui.model.odata.v4.ODataListBinding#create} or deleted again.","!type":"fn() -> Number","!category":"function","!static":false},"!constructorDescription":"Do <strong>NOT<\/strong> call this private constructor. In the OData V4 model you cannot\ncreate contexts at will: retrieve them from a binding or a view element instead.","!module":"sap/ui/model/odata/v4/Context","requestCanonicalPath":{"!description":"Returns a promise for the \"canonical path\" of the entity for this context. According to \"4.3.1 Canonical URL\" of the specification \"OData Version 4.0 Part 2: URL Conventions\", this is the \"name of the entity set associated with the entity followed by the key predicate identifying the entity within the collection\". Use the canonical path in {@link sap.ui.core.Element#bindElement} to create an element binding. Note: For a transient context (see {@link #isTransient}) a wrong path is returned unless all key properties are available within the initial data.","!type":"fn() -> Promise","!category":"function","!static":false},"destroy":{"!description":"Destroys this context, that is, it removes this context from all dependent bindings and drops references to binding and model, so that the context cannot be used anymore; it keeps path and index for debugging purposes.","!type":"fn()","!category":"function","!static":false},"!description":"Implementation of an OData V4 model's context.\n\nThe context is a pointer to model data as returned by a query from a {@link sap.ui.model.odata.v4.ODataContextBinding} or a {@link sap.ui.model.odata.v4.ODataListBinding}. Contexts are always and only created by such bindings. A context for a context binding points to the complete query result. A context for a list binding points to one specific entry in the binding's collection. A property binding does not have a context, you can access its value via {@link sap.ui.model.odata.v4.ODataPropertyBinding#getValue}.\n\nApplications can access model data only via a context, either synchronously with the risk that the values are not available yet ({@link #getProperty} and {@link #getObject}) or asynchronously ({@link #requestProperty} and {@link #requestObject}).\n\nContext instances are immutable except for their indexes.","created":{"!description":"Returns a promise that is resolved without data when the entity represented by this context has been created in the backend and all selected properties of this entity are available. Expanded navigation properties are only available if the context's binding is refreshable.\n\nAs long as the promise is not yet resolved or rejected, the entity represented by this context is transient.","!type":"fn() -> Promise","!category":"function","!static":false},"isTransient":{"!description":"Returns <code>true<\/code> if this context is transient, which means that the promise returned by {@link #created} is not yet resolved or rejected.","!type":"fn() -> Boolean","!category":"function","!static":false},"getProperty":{"!description":"Returns the property value for the given path relative to this context. The path is expected to point to a structural property with primitive type. Returns <code>undefined<\/code> if the data is not (yet) available. Use {@link #requestProperty} for asynchronous access.","!type":"fn(sPath: String, bExternalFormat?: Boolean) -> Object","!category":"function","parameters":{"sPath":"type: string, description: A relative path within the JSON structure","bExternalFormat":"type: boolean, description: If <code>true<\/code>, the value is returned in external format using a UI5 type for the given property path that formats corresponding to the property's EDM type and constraints. If the type is not yet available, <code>undefined<\/code> is returned."},"!static":false},"getBinding":{"!description":"Returns the binding this context belongs to.","!type":"fn() -> sap.ui.model.odata.v4.ODataContextBinding | sap.ui.model.odata.v4.ODataListBinding","!category":"function","!static":false},"!category":"class","delete":{"!description":"Deletes the OData entity this context points to.\n\nThe context must not be used anymore after successful deletion.","!type":"fn(sGroupId?: String) -> Promise","!category":"function","parameters":{"sGroupId":"type: string, description: The group ID to be used for the DELETE request; if not specified, the update group ID for the context's binding is used, see {@link sap.ui.model.odata.v4.ODataModel#bindContext} and {@link sap.ui.model.odata.v4.ODataModel#bindList}; the resulting group ID must not have {@link sap.ui.model.odata.v4.SubmitMode.API}."},"!static":false},"toString":{"!description":"Returns a string representation of this object including the binding path.","!type":"function toString() { [native code for Array.toString, arity=0] }\n) -> String","!category":"function","!static":false},"hasPendingChanges":{"!description":"Returns <code>true<\/code> if there are pending changes for the single entity in a {@link sap.ui.model.odata.v4.ODataListBinding} represented by this context or there are pending changes in dependent bindings relative to this context.","!type":"fn() -> Boolean","!category":"function","!static":false},"requestProperty":{"!description":"Returns a promise on the property value for the given path relative to this context. The path is expected to point to a structural property with primitive type.","!type":"fn(sPath?: String, bExternalFormat?: Boolean) -> Promise","!category":"function","parameters":{"sPath":"type: string, description: A relative path within the JSON structure","bExternalFormat":"type: boolean, description: If <code>true<\/code>, the value is returned in external format using a UI5 type for the given property path that formats corresponding to the property's EDM type and constraints."},"!static":false},"refresh":{"!description":"Refreshes the single entity in a {@link sap.ui.model.odata.v4.ODataListBinding} represented by this context.","!type":"fn(sGroupId?: String)","!category":"function","parameters":{"sGroupId":"type: string, description: The group ID to be used for the refresh; if not specified, the group ID for the context's binding is used, see {@link sap.ui.model.odata.v4.ODataModel#bindList}."},"!static":false},"!helpDescription":"Implementation of an OData V4 model's context.\n\nThe context is a pointer to model data as returned by a query from a {@link sap.ui.model.odata.v4.ODataContextBinding} or a {@link sap.ui.model.odata.v4.ODataListBinding}. Contexts are always and only created by such bindings. A context for a context binding points to the complete query result. A context for a list binding points to one specific entry in the binding's collection. A property binding does not have a context, you can access its value via {@link sap.ui.model.odata.v4.ODataPropertyBinding#getValue}.\n\nApplications can access model data only via a context, either synchronously with the risk that the values are not available yet ({@link #getProperty} and {@link #getObject}) or asynchronously ({@link #requestProperty} and {@link #requestObject}).\n\nContext instances are immutable except for their indexes.","!proto":"sap.ui.model.Context","getObject":{"!description":"Returns the value for the given path relative to this context. The function allows access to the complete data the context points to (if <code>sPath<\/code> is \"\") or any part thereof. The data is a JSON structure as described in <a href=\"http://docs.oasis-open.org/odata/odata-json-format/v4.0/odata-json-format-v4.0.html\"> \"OData JSON Format Version 4.0\"<\/a>. Note that the function clones the result. Modify values via {@link sap.ui.model.odata.v4.ODataPropertyBinding#setValue}.\n\nReturns <code>undefined<\/code> if the data is not (yet) available. Use {@link #requestObject} for asynchronous access.","!type":"fn(sPath?: String) -> Object","!category":"function","parameters":{"sPath":"type: string, description: A relative path within the JSON structure"},"!static":false}},"sap.ui.core.support":{"!category":"namespace","Plugin":"sap.ui.core.support.Plugin_obj"},"sap.ui.test.OpaPlugin_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.test.OpaPlugin with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.test.OpaPlugin"},"sap.ui.test.PageObjectFactory_obj":{"!type":"fn()","prototype":"sap.ui.test.PageObjectFactory"},"sap.ui.core.Configuration.AnimationMode":{"!description":"Enumerable list with available animation modes.\n\nThis enumerable is used to validate the animation mode. Animation modes allow to specify different animation scenarios or levels. The implementation of the Control (JavaScript or CSS) has to be done differently for each animation mode.","full":{"!description":"<code>full<\/code> represents a mode with unrestricted animation capabilities.","!type":"String","!category":"enum"},"basic":{"!description":"<code>basic<\/code> can be used for a reduced, more light-weight set of animations.","!type":"String","!category":"enum"},"!category":"static class","none":{"!description":"<code>none<\/code> deactivates the animation completely.","!type":"String","!category":"enum"},"minimal":{"!description":"<code>minimal<\/code> includes animations of fundamental functionality.","!type":"String","!category":"enum"},"!module":"sap/ui/core/Configuration"},"sap.ui.test.matchers.Interactable_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.test.matchers.Interactable with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.test.matchers.Interactable"},"sap.ui.test.matchers.I18NText_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.test.matchers.I18NText with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(mSettings: Object)","prototype":"sap.ui.test.matchers.I18NText"},"sap.ui.model.type.Time":{"!description":"This class represents time simple types.","extend":{"!description":"Creates a new subclass of class sap.ui.model.type.Time with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.type.Date.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a Time type.","!module":"sap/ui/model/type/Time","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.type.Time.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.type.Date","!helpDescription":"This class represents time simple types."},"sap.ui.model.CompositeType_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.CompositeType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.CompositeType"},"sap.ui.model.ClientListBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.ClientListBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.ListBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext: sap.ui.model.Context, aSorters?: [sap.ui.model.Sorter | [object Object]], aFilters?: [sap.ui.model.Filter | [object Object]], mParameters?: Object)","prototype":"sap.ui.model.ClientListBinding"},"sap.ui.model.odata.v2.ODataContextBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.v2.ODataContextBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.ContextBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext: sap.ui.model.Context, mParameters?: map)","prototype":"sap.ui.model.odata.v2.ODataContextBinding"},"sap.ui.model.odata.ODataMetaModel":{"getODataValueLists":{"!description":"Returns a <code>Promise<\/code> which is resolved with a map representing the <code>com.sap.vocabularies.Common.v1.ValueList<\/code> annotations of the given property or rejected with an error. The key in the map provided on successful resolution is the qualifier of the annotation or the empty string if no qualifier is defined. The value in the map is the JSON object for the annotation. The map is empty if the property has no <code>com.sap.vocabularies.Common.v1.ValueList<\/code> annotations.","!type":"fn(oPropertyContext: sap.ui.model.Context) -> Promise","!category":"function","parameters":{"oPropertyContext":"type: sap.ui.model.Context, description: a model context for a structural property of an entity type or a complex type, as returned by {@link #getMetaContext getMetaContext}"},"!static":false},"getODataComplexType":{"!description":"Returns the OData complex type with the given qualified name, either as a path or as an object, as indicated.","!type":"fn(sQualifiedName: String, bAsPath?: Boolean) -> Object | String","!category":"function","parameters":{"bAsPath":"type: boolean, description: determines whether the complex type is returned as a path or as an object","sQualifiedName":"type: string, description: a qualified name, e.g. \"ACME.Address\""},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.ODataMetaModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.MetaModel.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getODataEntitySet":{"!description":"Returns the OData entity set with the given simple name from the default entity container.","!type":"fn(sName: String, bAsPath?: Boolean) -> Object | String","!category":"function","parameters":{"bAsPath":"type: boolean, description: determines whether the entity set is returned as a path or as an object","sName":"type: string, description: a simple name, e.g. \"ProductSet\""},"!static":false},"getODataEntityContainer":{"!description":"Returns the OData default entity container. If there is only a single schema with a single entity container, the entity container does not need to be marked as default explicitly.","!type":"fn(bAsPath?: Boolean) -> Object | String","!category":"function","parameters":{"bAsPath":"type: boolean, description: determines whether the entity container is returned as a path or as an object"},"!static":false},"setLegacySyntax":{"!description":"Legacy syntax not supported by OData meta model!","!type":"fn(bLegacySyntax: Boolean)","!category":"function","parameters":{"bLegacySyntax":"type: boolean, description: must not be true!"},"!static":false},"!constructorDescription":"DO NOT CALL this private constructor for a new <code>ODataMetaModel<\/code>,\nbut rather use {@link sap.ui.model.odata.ODataModel#getMetaModel getMetaModel} instead!","getODataAssociationEnd":{"!description":"Returns the OData association end corresponding to the given entity type's navigation property of given name.","!type":"fn(oEntityType: Object, sName: String) -> Object","!category":"function","parameters":{"sName":"type: string, description: the name of a navigation property within this entity type","oEntityType":"type: object, description: an entity type as returned by {@link #getODataEntityType getODataEntityType}"},"!static":false},"!module":"sap/ui/model/odata/ODataMetaModel","loaded":{"!description":"Returns a promise which is fulfilled once the meta model data is loaded and can be used.","!type":"fn() -> Promise","!category":"function","!static":false},"getODataFunctionImport":{"!description":"Returns the OData function import with the given simple or qualified name from the default entity container or the respective entity container specified in the qualified name.","!type":"fn(sName: String, bAsPath?: Boolean) -> Object | String","!category":"function","parameters":{"bAsPath":"type: boolean, description: determines whether the function import is returned as a path or as an object","sName":"type: string, description: a simple or qualified name, e.g. \"Save\" or \"MyService.Entities/Save\""},"!static":false},"getMetaContext":{"!description":"Returns the OData meta model context corresponding to the given OData model path.","!type":"fn(sPath?: String) -> sap.ui.model.Context","!category":"function","parameters":{"sPath":"type: string, description: an absolute path pointing to an entity or property, e.g. \"/ProductSet(1)/ToSupplier/BusinessPartnerID\"; this equals the <a href=\"http://www.odata.org/documentation/odata-version-2-0/uri-conventions#ResourcePath\"> resource path<\/a> component of a URI according to OData V2 URI conventions"},"!static":false},"getODataEntityType":{"!description":"Returns the OData entity type with the given qualified name, either as a path or as an object, as indicated.","!type":"fn(sQualifiedName: String, bAsPath?: Boolean) -> Object | String","!category":"function","parameters":{"bAsPath":"type: boolean, description: determines whether the entity type is returned as a path or as an object","sQualifiedName":"type: string, description: a qualified name, e.g. \"ACME.Product\""},"!static":false},"getODataProperty":{"!description":"Returns the given OData type's property (not navigation property!) of given name.\n\nIf an array is given instead of a single name, it is consumed (via <code>Array.prototype.shift<\/code>) piece by piece. Each element is interpreted as a property name of the current type, and the current type is replaced by that property's type. This is repeated until an element is encountered which cannot be resolved as a property name of the current type anymore; in this case, the last property found is returned and <code>vName<\/code> contains only the remaining names, with <code>vName[0]<\/code> being the one which was not found.\n\nExamples: <ul> <li> Get address property of business partner: <pre>\nvar oEntityType = oMetaModel.getODataEntityType(\"GWSAMPLE_BASIC.BusinessPartner\"),\n    oAddressProperty = oMetaModel.getODataProperty(oEntityType, \"Address\");\noAddressProperty.name === \"Address\";\noAddressProperty.type === \"GWSAMPLE_BASIC.CT_Address\";\n<\/pre> <\/li> <li> Get street property of address type: <pre>\nvar oComplexType = oMetaModel.getODataComplexType(\"GWSAMPLE_BASIC.CT_Address\"),\n    oStreetProperty = oMetaModel.getODataProperty(oComplexType, \"Street\");\noStreetProperty.name === \"Street\";\noStreetProperty.type === \"Edm.String\";\n<\/pre> <\/li> <li> Get address' street property directly from business partner: <pre>\nvar aParts = [\"Address\", \"Street\"];\noMetaModel.getODataProperty(oEntityType, aParts) === oStreetProperty;\naParts.length === 0;\n<\/pre> <\/li> <li> Trying to get address' foo property directly from business partner: <pre>\naParts = [\"Address\", \"foo\"];\noMetaModel.getODataProperty(oEntityType, aParts) === oAddressProperty;\naParts.length === 1;\naParts[0] === \"foo\";\n<\/pre> <\/li> <\/ul>","!type":"fn(oType: Object, vName: [String | [object Object]], bAsPath?: Boolean) -> Object | String","!category":"function","parameters":{"bAsPath":"type: boolean, description: determines whether the property is returned as a path or as an object","oType":"type: object, description: a complex type as returned by {@link #getODataComplexType getODataComplexType}, or an entity type as returned by {@link #getODataEntityType getODataEntityType}","vName":"type: string|[object Object][], description: the name of a property within this type (e.g. \"Address\"), or an array of such names (e.g. <code>[\"Address\", \"Street\"]<\/code>) in order to drill-down into complex types; <b>BEWARE<\/b> that this array is modified by removing each part which is understood!"},"!static":false},"!description":"Implementation of an OData meta model which offers a unified access to both OData V2 metadata and V4 annotations. It uses the existing {@link sap.ui.model.odata.ODataMetadata} as a foundation and merges V4 annotations from the existing {@link sap.ui.model.odata.ODataAnnotations} directly into the corresponding model element.\n\nAlso, annotations from the \"http://www.sap.com/Protocols/SAPData\" namespace are lifted up from the <code>extensions<\/code> array and transformed from objects into simple properties with an \"sap:\" prefix for their name. Note that this happens in addition, thus the following example shows both representations. This way, such annotations can be addressed via a simple relative path instead of searching an array. <pre>\n\t\t{\n\t\t\t\"name\" : \"BusinessPartnerID\",\n\t\t\t\"extensions\" : [{\n\t\t\t\t\"name\" : \"label\",\n\t\t\t\t\"value\" : \"Bus. Part. ID\",\n\t\t\t\t\"namespace\" : \"http://www.sap.com/Protocols/SAPData\"\n\t\t\t}],\n\t\t\t\"sap:label\" : \"Bus. Part. ID\"\n\t\t}\n<\/pre>\n\nAs of 1.29.0, the corresponding vocabulary-based annotations for the following \"<a href=\"http://www.sap.com/Protocols/SAPData\">SAP Annotations for OData Version 2.0<\/a>\" are added, if they are not yet defined in the V4 annotations: <ul> <li><code>label<\/code>;<\/li> <li><code>schema-version<\/code> (since 1.53.0) on schemas;<\/li> <li><code>creatable<\/code>, <code>deletable<\/code>, <code>deletable-path<\/code>, <code>pageable<\/code>, <code>requires-filter<\/code>, <code>searchable<\/code>, <code>topable<\/code>, <code>updatable<\/code> and <code>updatable-path<\/code> on entity sets; <\/li> <li><code>creatable<\/code> (since 1.41.0), <code>creatable-path<\/code> (since 1.41.0) and <code>filterable<\/code> (since 1.39.0) on navigation properties;<\/li> <li><code>aggregation-role<\/code> (\"dimension\" and \"measure\", both since 1.45.0), <code>creatable<\/code>, <code>display-format<\/code> (\"UpperCase\" and \"NonNegative\"), <code>field-control<\/code>, <code>filterable<\/code>, <code>filter-restriction<\/code>, <code>heading<\/code>, <code>precision<\/code>, <code>quickinfo<\/code>, <code>required-in-filter<\/code>, <code>sortable<\/code>, <code>text<\/code>, <code>unit<\/code>, <code>updatable<\/code> and <code>visible<\/code> on properties;<\/li> <li><code>semantics<\/code>; the following values are supported: <ul> <li>\"bday\", \"city\", \"country\", \"email\" (including support for types, for example \"email;type=home,pref\"), \"familyname\", \"givenname\", \"honorific\", \"middlename\", \"name\", \"nickname\", \"note\", \"org\", \"org-unit\", \"org-role\", \"photo\", \"pobox\", \"region\", \"street\", \"suffix\", \"tel\" (including support for types, for example \"tel;type=cell,pref\"), \"title\" and \"zip\" (mapped to V4 annotation <code>com.sap.vocabularies.Communication.v1.Contact<\/code>); <\/li> <li>\"class\", \"dtend\", \"dtstart\", \"duration\", \"fbtype\", \"location\", \"status\", \"transp\" and \"wholeday\" (mapped to V4 annotation <code>com.sap.vocabularies.Communication.v1.Event<\/code>);<\/li> <li>\"body\", \"from\", \"received\", \"sender\" and \"subject\" (mapped to V4 annotation <code>com.sap.vocabularies.Communication.v1.Message<\/code>);<\/li> <li>\"completed\", \"due\", \"percent-complete\" and \"priority\" (mapped to V4 annotation <code>com.sap.vocabularies.Communication.v1.Task<\/code>);<\/li> <li>\"fiscalyear\", \"fiscalyearperiod\" (mapped to the corresponding V4 annotation <code>com.sap.vocabularies.Common.v1.IsFiscal(Year|YearPeriod)<\/code>);<\/li> <li>\"year\", \"yearmonth\", \"yearmonthday\", \"yearquarter\", \"yearweek\" (mapped to the corresponding V4 annotation <code>com.sap.vocabularies.Common.v1.IsCalendar(Year|YearMonth|Date|YearQuarter|YearWeek)<\/code>); <\/li> <li>\"url\" (mapped to V4 annotation <code>Org.OData.Core.V1.IsURL\"<\/code>).<\/li> <\/ul> <\/ul> For example: <pre>\n\t\t{\n\t\t\t\"name\" : \"BusinessPartnerID\",\n\t\t\t...\n\t\t\t\"sap:label\" : \"Bus. Part. ID\",\n\t\t\t\"com.sap.vocabularies.Common.v1.Label\" : {\n\t\t\t\t\"String\" : \"Bus. Part. ID\"\n\t\t\t}\n\t\t}\n<\/pre>\n\nThis model is read-only and thus only supports {@link sap.ui.model.BindingMode.OneTime OneTime} binding mode. No events ({@link sap.ui.model.Model#event:parseError parseError}, {@link sap.ui.model.Model#event:requestCompleted requestCompleted}, {@link sap.ui.model.Model#event:requestFailed requestFailed}, {@link sap.ui.model.Model#event:requestSent requestSent}) are fired!\n\nWithin the meta model, the objects are arranged in arrays. <code>/dataServices/schema<\/code>, for example, is an array of schemas where each schema has an <code>entityType<\/code> property with an array of entity types, and so on. So, <code>/dataServices/schema/0/entityType/16<\/code> can be the path to the entity type with name \"Order\" in the schema with namespace \"MySchema\". However, these paths are not stable: If an entity type with lower index is removed from the schema, the path to <code>Order<\/code> changes to <code>/dataServices/schema/0/entityType/15<\/code>.\n\nTo avoid problems with changing indexes, {@link sap.ui.model.Model#getObject getObject} and {@link sap.ui.model.Model#getProperty getProperty} support XPath-like queries for the indexes (since 1.29.1). Each index can be replaced by a query in square brackets. You can, for example, address the schema using the path <code>/dataServices/schema/[${namespace}==='MySchema']<\/code> or the entity using <code>/dataServices/schema/[${namespace}==='MySchema']/entityType/[sap.ui.core==='Order']<\/code>.\n\nThe syntax inside the square brackets is the same as in expression binding. The query is executed for each object in the array until the result is true (truthy) for the first time. This object is then chosen.\n\n<b>BEWARE:<\/b> Access to this OData meta model will fail before the promise returned by {@link #loaded loaded} has been resolved!","!category":"class","refresh":{"!description":"Refresh not supported by OData meta model!","!type":"fn()","!category":"function","!static":false},"!helpDescription":"Implementation of an OData meta model which offers a unified access to both OData V2 metadata and V4 annotations. It uses the existing {@link sap.ui.model.odata.ODataMetadata} as a foundation and merges V4 annotations from the existing {@link sap.ui.model.odata.ODataAnnotations} directly into the corresponding model element.\n\nAlso, annotations from the \"http://www.sap.com/Protocols/SAPData\" namespace are lifted up from the <code>extensions<\/code> array and transformed from objects into simple properties with an \"sap:\" prefix for their name. Note that this happens in addition, thus the following example shows both representations. This way, such annotations can be addressed via a simple relative path instead of searching an array. <pre>\n\t\t{\n\t\t\t\"name\" : \"BusinessPartnerID\",\n\t\t\t\"extensions\" : [{\n\t\t\t\t\"name\" : \"label\",\n\t\t\t\t\"value\" : \"Bus. Part. ID\",\n\t\t\t\t\"namespace\" : \"http://www.sap.com/Protocols/SAPData\"\n\t\t\t}],\n\t\t\t\"sap:label\" : \"Bus. Part. ID\"\n\t\t}\n<\/pre>\n\nAs of 1.29.0, the corresponding vocabulary-based annotations for the following \"<a href=\"http://www.sap.com/Protocols/SAPData\">SAP Annotations for OData Version 2.0<\/a>\" are added, if they are not yet defined in the V4 annotations: <ul> <li><code>label<\/code>;<\/li> <li><code>schema-version<\/code> (since 1.53.0) on schemas;<\/li> <li><code>creatable<\/code>, <code>deletable<\/code>, <code>deletable-path<\/code>, <code>pageable<\/code>, <code>requires-filter<\/code>, <code>searchable<\/code>, <code>topable<\/code>, <code>updatable<\/code> and <code>updatable-path<\/code> on entity sets; <\/li> <li><code>creatable<\/code> (since 1.41.0), <code>creatable-path<\/code> (since 1.41.0) and <code>filterable<\/code> (since 1.39.0) on navigation properties;<\/li> <li><code>aggregation-role<\/code> (\"dimension\" and \"measure\", both since 1.45.0), <code>creatable<\/code>, <code>display-format<\/code> (\"UpperCase\" and \"NonNegative\"), <code>field-control<\/code>, <code>filterable<\/code>, <code>filter-restriction<\/code>, <code>heading<\/code>, <code>precision<\/code>, <code>quickinfo<\/code>, <code>required-in-filter<\/code>, <code>sortable<\/code>, <code>text<\/code>, <code>unit<\/code>, <code>updatable<\/code> and <code>visible<\/code> on properties;<\/li> <li><code>semantics<\/code>; the following values are supported: <ul> <li>\"bday\", \"city\", \"country\", \"email\" (including support for types, for example \"email;type=home,pref\"), \"familyname\", \"givenname\", \"honorific\", \"middlename\", \"name\", \"nickname\", \"note\", \"org\", \"org-unit\", \"org-role\", \"photo\", \"pobox\", \"region\", \"street\", \"suffix\", \"tel\" (including support for types, for example \"tel;type=cell,pref\"), \"title\" and \"zip\" (mapped to V4 annotation <code>com.sap.vocabularies.Communication.v1.Contact<\/code>); <\/li> <li>\"class\", \"dtend\", \"dtstart\", \"duration\", \"fbtype\", \"location\", \"status\", \"transp\" and \"wholeday\" (mapped to V4 annotation <code>com.sap.vocabularies.Communication.v1.Event<\/code>);<\/li> <li>\"body\", \"from\", \"received\", \"sender\" and \"subject\" (mapped to V4 annotation <code>com.sap.vocabularies.Communication.v1.Message<\/code>);<\/li> <li>\"completed\", \"due\", \"percent-complete\" and \"priority\" (mapped to V4 annotation <code>com.sap.vocabularies.Communication.v1.Task<\/code>);<\/li> <li>\"fiscalyear\", \"fiscalyearperiod\" (mapped to the corresponding V4 annotation <code>com.sap.vocabularies.Common.v1.IsFiscal(Year|YearPeriod)<\/code>);<\/li> <li>\"year\", \"yearmonth\", \"yearmonthday\", \"yearquarter\", \"yearweek\" (mapped to the corresponding V4 annotation <code>com.sap.vocabularies.Common.v1.IsCalendar(Year|YearMonth|Date|YearQuarter|YearWeek)<\/code>); <\/li> <li>\"url\" (mapped to V4 annotation <code>Org.OData.Core.V1.IsURL\"<\/code>).<\/li> <\/ul> <\/ul> For example: <pre>\n\t\t{\n\t\t\t\"name\" : \"BusinessPartnerID\",\n\t\t\t...\n\t\t\t\"sap:label\" : \"Bus. Part. ID\",\n\t\t\t\"com.sap.vocabularies.Common.v1.Label\" : {\n\t\t\t\t\"String\" : \"Bus. Part. ID\"\n\t\t\t}\n\t\t}\n<\/pre>\n\nThis model is read-only and thus only supports {@link sap.ui.model.BindingMode.OneTime OneTime} binding mode. No events ({@link sap.ui.model.Model#event:parseError parseError}, {@link sap.ui.model.Model#event:requestCompleted requestCompleted}, {@link sap.ui.model.Model#event:requestFailed requestFailed}, {@link sap.ui.model.Model#event:requestSent requestSent}) are fired!\n\nWithin the meta model, the objects are arranged in arrays. <code>/dataServices/schema<\/code>, for example, is an array of schemas where each schema has an <code>entityType<\/code> property with an array of entity types, and so on. So, <code>/dataServices/schema/0/entityType/16<\/code> can be the path to the entity type with name \"Order\" in the schema with namespace \"MySchema\". However, these paths are not stable: If an entity type with lower index is removed from the schema, the path to <code>Order<\/code> changes to <code>/dataServices/schema/0/entityType/15<\/code>.\n\nTo avoid problems with changing indexes, {@link sap.ui.model.Model#getObject getObject} and {@link sap.ui.model.Model#getProperty getProperty} support XPath-like queries for the indexes (since 1.29.1). Each index can be replaced by a query in square brackets. You can, for example, address the schema using the path <code>/dataServices/schema/[${namespace}==='MySchema']<\/code> or the entity using <code>/dataServices/schema/[${namespace}==='MySchema']/entityType/[sap.ui.core==='Order']<\/code>.\n\nThe syntax inside the square brackets is the same as in expression binding. The query is executed for each object in the array until the result is true (truthy) for the first time. This object is then chosen.\n\n<b>BEWARE:<\/b> Access to this OData meta model will fail before the promise returned by {@link #loaded loaded} has been resolved!","!proto":"sap.ui.model.MetaModel","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.ODataMetaModel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"getODataAssociationSetEnd":{"!description":"Returns the OData association <em>set<\/em> end corresponding to the given entity type's navigation property of given name.","!type":"fn(oEntityType: Object, sName: String) -> Object","!category":"function","parameters":{"sName":"type: string, description: the name of a navigation property within this entity type","oEntityType":"type: object, description: an entity type as returned by {@link #getODataEntityType getODataEntityType}"},"!static":false}},"sap.ui.core.message.MessageManager":{"removeMessages":{"!description":"Remove given Messages","!type":"fn(vMessages: [sap.ui.core.message.Message | [object Object]])","!category":"function","parameters":{"vMessages":"type: sap.ui.core.message.Message|[object Object][], description: The message(s) to be removed."},"!static":false},"removeAllMessages":{"!description":"Remove all messages","!type":"fn()","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.message.MessageManager with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new MessageManager.","!module":"sap/ui/core/message/MessageManager","destroy":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined undefined<br>destroy MessageManager","!type":"fn()","!category":"function","!static":false},"!category":"class","getMessageModel":{"!description":"Get the MessageModel","!type":"fn() -> sap.ui.model.message.MessageModel","!category":"function","!static":false},"registerObject":{"!description":"When using the databinding type system, the validation/parsing of a new property value could fail. In this case, a validationError/parseError event is fired. These events bubble up to the core. For registered ManagedObjects, the MessageManager attaches to these events and creates a <code>sap.ui.core.message.Message<\/code> (bHandleValidation=true) for each of these errors and cancels the event bubbling.","!type":"fn(oObject: sap.ui.base.ManagedObject, bHandleValidation: Boolean)","!category":"function","parameters":{"bHandleValidation":"type: boolean, description: Handle validationError/parseError events for this object. If set to true, the MessageManager creates a Message for each validation/parse error. The event bubbling is canceled in every case.","oObject":"type: sap.ui.base.ManagedObject, description: The sap.ui.base.ManagedObject"},"!static":false},"unregisterObject":{"!description":"Unregister ManagedObject","!type":"fn(oObject: sap.ui.base.ManagedObject)","!category":"function","parameters":{"oObject":"type: sap.ui.base.ManagedObject, description: The sap.ui.base.ManagedObject"},"!static":false},"unregisterMessageProcessor":{"!description":"Deregister MessageProcessor","!type":"fn(oProcessor: sap.ui.core.message.MessageProcessor)","!category":"function","parameters":{"oProcessor":"type: sap.ui.core.message.MessageProcessor, description: The MessageProcessor"},"!static":false},"addMessages":{"!description":"Add messages to MessageManager","!type":"fn(vMessages: [sap.ui.core.message.Message | [object Object]])","!category":"function","parameters":{"vMessages":"type: sap.ui.core.message.Message|[object Object][], description: Array of sap.ui.core.message.Message or single sap.ui.core.message.Message"},"!static":false},"registerMessageProcessor":{"!description":"Register MessageProcessor","!type":"fn(oProcessor: sap.ui.core.message.MessageProcessor)","!category":"function","parameters":{"oProcessor":"type: sap.ui.core.message.MessageProcessor, description: The MessageProcessor"},"!static":false},"!proto":"sap.ui.base.EventProvider","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.message.MessageManager.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.base.Metadata_obj":{"!type":"fn(sClassName: String, oClassInfo: Object)","prototype":"sap.ui.base.Metadata"},"sap.ui.model.odata.type.DateTimeOffset":{"!description":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.DateTimeOffset<\/code><\/a>.\n\nIn {@link sap.ui.model.odata.v2.ODataModel} this type is represented as a <code>Date<\/code> instance in local time. In {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>string<\/code> like \"2014-11-27T13:47:26Z\". See parameter <code>oConstraints.V4<\/code> for more information.","validateValue":{"!description":"Validates whether the given value in model representation is valid and meets the defined constraints, depending on the model's OData version.","!type":"fn(vValue: Object)","!category":"function","parameters":{"vValue":"type: any, description: The value to be validated"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.DateTimeOffset with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.DateTimeBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function","!static":false},"formatValue":{"!description":"Formats the given value to the given target type.","!type":"fn(vValue: Date | String, sTargetType: String) -> Date | String","!category":"function","parameters":{"vValue":"type: Date|string, description: The value to be formatted, which is represented in the model as a <code>Date<\/code> instance (OData V2) or as a string like \"2014-11-27T13:47:26Z\" (OData V4); both representations are accepted independent of the model's OData version","sTargetType":"type: string, description: The target type, may be \"any\", \"string\", or a type with one of these types as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}. See {@link sap.ui.model.odata.type} for more information."},"!static":false},"!category":"class","!constructorDescription":"Constructor for a primitive type <code>Edm.DateTimeOffset<\/code>.","!module":"sap/ui/model/odata/type/DateTimeOffset","parseValue":{"!description":"Parses the given value to a <code>Date<\/code> instance (OData V2) or a string like \"2014-11-27T13:47:26Z\" (OData V4), depending on the model's OData version.","!type":"fn(sValue: String, sSourceType: String) -> Date | String","!category":"function","parameters":{"sValue":"type: string, description: The value to be parsed; the empty string and <code>null<\/code> are parsed to <code>null<\/code>","sSourceType":"type: string, description: The source type (the expected type of <code>sValue<\/code>), must be \"string\", or a type with \"string\" as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}. See {@link sap.ui.model.odata.type} for more information."},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.DateTimeOffset.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.odata.type.DateTimeBase","!helpDescription":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.DateTimeOffset<\/code><\/a>.\n\nIn {@link sap.ui.model.odata.v2.ODataModel} this type is represented as a <code>Date<\/code> instance in local time. In {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>string<\/code> like \"2014-11-27T13:47:26Z\". See parameter <code>oConstraints.V4<\/code> for more information."},"sap.ui.model.odata.type.Boolean_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Boolean with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.Boolean"},"sap.ui.test.matchers.AggregationFilled":{"!description":"AggregationFilled - checks if an aggregation contains at least one entry","extend":{"!description":"Creates a new subclass of class sap.ui.test.matchers.AggregationFilled with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getName":{"!description":"Gets current value of property {@link #getName name}.\n\nThe name of the aggregation that is used for matching.","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","setName":{"!description":"Sets a new value for property {@link #getName name}.\n\nThe name of the aggregation that is used for matching.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sName: String) -> sap.ui.test.matchers.AggregationFilled","!category":"function","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"},"!static":false},"!constructorDescription":"AggregationFilled - checks if an aggregation contains at least one entry.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.test.matchers.Matcher#constructor sap.ui.test.matchers.Matcher}\ncan be used as well.","!module":"sap/ui/test/matchers/AggregationFilled","isMatching":{"!description":"Checks if the control has a filled aggregation.","!type":"fn(oControl: sap.ui.core.Control) -> Boolean","!category":"function","parameters":{"oControl":"type: sap.ui.core.Control, description: the control that is checked by the matcher"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.test.matchers.AggregationFilled.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.test.matchers.Matcher","!helpDescription":"AggregationFilled - checks if an aggregation contains at least one entry"},"sap.ui.model.TreeBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.TreeBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Binding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext?: Object, aFilters?: [sap.ui.model.Filter | [object Object]], mParameters?: String, aSorters?: sap.ui.model.Sorter | sap.ui.model.Sorter)","prototype":"sap.ui.model.TreeBinding"},"sap.ui.core.ws.ReadyState":{"OPEN":{"!description":"The WebSocket connection is established and communication is possible.","!type":"Number","!category":"enum"},"CONNECTING":{"!description":"The connection has not yet been established.","!type":"Number","!category":"enum"},"CLOSED":{"!description":"The connection has been closed or could not be opened.","!type":"Number","!category":"enum"},"!description":"Defines the different ready states for a WebSocket connection.","!category":"static class","!module":"sap/ui/core/ws/ReadyState","CLOSING":{"!description":"The connection is going through the closing handshake.","!type":"Number","!category":"enum"}},"sap.ui.model.odata.type.Guid":{"!description":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Guid<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>string<\/code>.","validateValue":{"!description":"Validates whether the given value in model representation is valid and meets the given constraints.","!type":"fn(sValue: String)","!category":"function","parameters":{"sValue":"type: string, description: the value to be validated"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Guid with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function","!static":false},"formatValue":{"!description":"Formats the given value to the given target type.","!type":"fn(sValue: String, sTargetType: String) -> String","!category":"function","parameters":{"sValue":"type: string, description: the value to be formatted","sTargetType":"type: string, description: the target type; may be \"any\", \"string\", or a type with one of these types as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}. See {@link sap.ui.model.odata.type} for more information."},"!static":false},"!category":"class","!constructorDescription":"Constructor for an OData primitive type <code>Edm.Guid<\/code>.","!module":"sap/ui/model/odata/type/Guid","parseValue":{"!description":"Parses the given value to a GUID.","!type":"fn(sValue: String, sSourceType: String) -> String","!category":"function","parameters":{"sValue":"type: string, description: the value to be parsed, maps <code>\"\"<\/code> to <code>null<\/code>","sSourceType":"type: string, description: the source type (the expected type of <code>sValue<\/code>); must be \"string\", or a type with \"string\" as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}. See {@link sap.ui.model.odata.type} for more information."},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.Guid.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.odata.type.ODataType","!helpDescription":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Guid<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>string<\/code>."},"sap.ui.base":{"ManagedObjectMetadata":"sap.ui.base.ManagedObjectMetadata_obj","Poolable":"sap.ui.base.Poolable","ManagedObject":"sap.ui.base.ManagedObject_obj","DataType":"sap.ui.base.DataType_obj","ManagedObjectObserver":"sap.ui.base.ManagedObjectObserver_obj","Event":"sap.ui.base.Event_obj","!module":"sap/ui/base/Object","Interface":"sap.ui.base.Interface_obj","ObjectPool":"sap.ui.base.ObjectPool_obj","!description":"SAPUI5 base classes","EventProvider":"sap.ui.base.EventProvider_obj","!category":"namespace","Metadata":"sap.ui.base.Metadata_obj","Object":"sap.ui.base.Object_obj","!helpDescription":"SAPUI5 base classes"},"sap.ui.core.util.XMLPreprocessor.IContext":{"!description":"Context interface provided by XML template processing as an additional first argument to any formatter function which opts in to this mechanism. Candidates for such formatter functions are all those used in binding expressions which are evaluated during XML template processing, including those used inside template instructions like <code>&lt;template:if><\/code>. The formatter function needs to be marked with a property <code>requiresIContext = true<\/code> to express that it requires this extended signature (compared to ordinary formatter functions). The usual arguments are provided after the first one (currently: the raw value from the model).\n\nThis interface provides callback functions to access the model and path which are needed to process OData V4 annotations. It initially offers a subset of methods from {@link sap.ui.model.Context} so that formatters might also be called with a context object for convenience, e.g. outside of XML template processing (see below for an exception to this rule).\n\n<b>Example:<\/b> Suppose you have a formatter function called \"foo\" like below and it is used within an XML template like <code>&lt;template:if test=\"{path: '...', formatter: 'foo'}\"><\/code>. In this case <code>foo<\/code> is called with arguments <code>oInterface, vRawValue<\/code> such that <code>oInterface.getModel().getObject(oInterface.getPath()) === vRawValue<\/code> holds. <pre>\nwindow.foo = function (oInterface, vRawValue) {\n    //TODO ...\n};\nwindow.foo.requiresIContext = true;\n<\/pre>\n\n<b>Composite Binding Examples:<\/b> Suppose you have the same formatter function and it is used in a composite binding like <code>&lt;Text text=\"{path: 'Label', formatter: 'foo'}: {path: 'Value', formatter: 'foo'}\"/><\/code>. In this case <code>oInterface.getPath()<\/code> refers to \".../Label\" in the 1st call and \".../Value\" in the 2nd call. This means each formatter call knows which part of the composite binding it belongs to and behaves just as if it was an ordinary binding.\n\nSuppose your formatter is not used within a part of the composite binding, but at the root of the composite binding in order to aggregate all parts like <code> &lt;Text text=\"{parts: [{path: 'Label'}, {path: 'Value'}], formatter: 'foo'}\"/> <\/code>. In this case <code>oInterface.getPath(0)<\/code> refers to \".../Label\" and <code>oInterface.getPath(1)<\/code> refers to \".../Value\". This means, the root formatter can access the ith part of the composite binding at will (since 1.31.0); see also {@link #.getInterface getInterface}. The function <code>foo<\/code> is called with arguments such that <code> oInterface.getModel(i).getObject(oInterface.getPath(i)) === arguments[i + 1]<\/code> holds. This use is not supported within an expression binding, that is, <code>&lt;Text text=\"{= ${parts: [{path: 'Label'}, {path: 'Value'}], formatter: 'foo'} }\"/><\/code> does not work as expected because the property <code>requiresIContext = true<\/code> is ignored.\n\nTo distinguish those two use cases, just check whether <code>oInterface.getModel() === undefined<\/code>, in which case the formatter is called on root level of a composite binding. To find out the number of parts, probe for the smallest non-negative integer where <code>oInterface.getModel(i) === undefined<\/code>. This additional functionality is, of course, not available from {@link sap.ui.model.Context}, i.e. such formatters MUST be called with an instance of this context interface.","!category":"static class","!module":"sap/ui/core/util/XMLPreprocessor"},"sap.ui.test.matchers.AggregationEmpty":{"!description":"AggregationEmpty - checks if an aggregation is empty","extend":{"!description":"Creates a new subclass of class sap.ui.test.matchers.AggregationEmpty with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getName":{"!description":"Gets current value of property {@link #getName name}.\n\nThe name of the aggregation that is used for matching.","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","setName":{"!description":"Sets a new value for property {@link #getName name}.\n\nThe name of the aggregation that is used for matching.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sName: String) -> sap.ui.test.matchers.AggregationEmpty","!category":"function","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"},"!static":false},"!constructorDescription":"AggregationEmpty - checks if an aggregation is empty.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.test.matchers.Matcher#constructor sap.ui.test.matchers.Matcher}\ncan be used as well.","!module":"sap/ui/test/matchers/AggregationEmpty","isMatching":{"!description":"Checks if the control has an empty aggregation.","!type":"fn(oControl: sap.ui.core.Control) -> Boolean","!category":"function","parameters":{"oControl":"type: sap.ui.core.Control, description: the control that is checked by the matcher"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.test.matchers.AggregationEmpty.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.test.matchers.Matcher","!helpDescription":"AggregationEmpty - checks if an aggregation is empty"},"sap.ui.model.odata.type.ODataType":{"!description":"This class is an abstract base class for all OData primitive types (see {@link http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part3-csdl/odata-v4.0-errata02-os-part3-csdl-complete.html#_The_edm:Documentation_Element OData V4 Edm Types} and {@link http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem OData V2 Edm Types}). All subtypes implement the interface of {@link sap.ui.model.SimpleType}. That means they implement next to the constructor: <ul> <li>{@link sap.ui.model.SimpleType#getName getName}<\/li> <li>{@link sap.ui.model.SimpleType#formatValue formatValue}<\/li> <li>{@link sap.ui.model.SimpleType#parseValue parseValue}<\/li> <li>{@link sap.ui.model.SimpleType#validateValue validateValue}<\/li> <\/ul>\n\nAll ODataTypes are immutable. All format options and constraints are given to the constructor, they cannot be modified later.\n\nAll ODataTypes use a locale-specific message when throwing an error caused by invalid user input (e.g. if {@link sap.ui.model.odata.type.Double#parseValue Double.parseValue} cannot parse the given value to a number, or if any type's {@link #validateValue validateValue} gets a <code>null<\/code>, but the constraint <code>nullable<\/code> is <code>false<\/code>).","extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.ODataType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new <code>ODataType<\/code>.","!module":"sap/ui/model/odata/type/ODataType","getInterface":{"!type":"fn() -> Object","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.ODataType.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.SimpleType","!helpDescription":"This class is an abstract base class for all OData primitive types (see {@link http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part3-csdl/odata-v4.0-errata02-os-part3-csdl-complete.html#_The_edm:Documentation_Element OData V4 Edm Types} and {@link http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem OData V2 Edm Types}). All subtypes implement the interface of {@link sap.ui.model.SimpleType}. That means they implement next to the constructor: <ul> <li>{@link sap.ui.model.SimpleType#getName getName}<\/li> <li>{@link sap.ui.model.SimpleType#formatValue formatValue}<\/li> <li>{@link sap.ui.model.SimpleType#parseValue parseValue}<\/li> <li>{@link sap.ui.model.SimpleType#validateValue validateValue}<\/li> <\/ul>\n\nAll ODataTypes are immutable. All format options and constraints are given to the constructor, they cannot be modified later.\n\nAll ODataTypes use a locale-specific message when throwing an error caused by invalid user input (e.g. if {@link sap.ui.model.odata.type.Double#parseValue Double.parseValue} cannot parse the given value to a number, or if any type's {@link #validateValue validateValue} gets a <code>null<\/code>, but the constraint <code>nullable<\/code> is <code>false<\/code>)."},"sap.ui.model.analytics.odata4analytics.DimensionAttribute":{"getTextProperty":{"!description":"Get text property related to this dimension attribute","!type":"fn() -> Object","!category":"function","!static":false},"!description":"Representation of a dimension attribute.","getName":{"!description":"Get the name of the dimension attribute","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","!constructorDescription":"Create a representation of a dimension attribute provided by an analytic\nquery. Do not create your own instances.","!module":"sap/ui/model/analytics/odata4analytics","getLabelText":{"!description":"Get label","!type":"fn() -> String","!category":"function","!static":false},"getDimension":{"!description":"Get dimension","!type":"fn() -> sap.ui.model.analytics.odata4analytics.Dimension","!category":"function","!static":false},"getKeyProperty":{"!description":"Get the key property","!type":"fn() -> Object","!category":"function","!static":false},"!proto":"sap.ui.base.Object","!helpDescription":"Representation of a dimension attribute."},"sap.ui.core.ComponentMetadata_obj":{"!type":"fn(sClassName: String, oStaticInfo: Object)","prototype":"sap.ui.core.ComponentMetadata"},"sap.ui.base.Event_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.base.Event with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, oSource: sap.ui.base.EventProvider, mParameters: Object)","prototype":"sap.ui.base.Event"},"sap.ui.model.TreeBinding":{"detachFilter":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined use the change event.<br>Detach event-handler <code>fnFunction<\/code> from the '_filter' event of this <code>sap.ui.model.TreeBinding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: object on which to call the given function."},"!static":false},"hasChildren":{"!description":"Returns if the node has child nodes","!type":"fn(oContext: Object) -> Boolean","!category":"function","parameters":{"oContext":"type: Object, description: the context element of the node"},"!static":false},"sort":{"!description":"Sorts the tree according to the sorter definitions.","!type":"fn(aSorters: [[object Object]])","!category":"function","parameters":{"aSorters":"type: [object Object][], description: Array of sap.ui.model.Sorter objects"},"!static":false},"getRootContexts":{"!description":"Returns the current value of the bound target","!type":"fn(iStartIndex: Number, iLength: Number) -> Array","!category":"function","parameters":{"iLength":"type: int, description: determines how many contexts to retrieve beginning from the start index.","iStartIndex":"type: int, description: the startIndex where to start the retrieval of contexts"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.TreeBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Binding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for TreeBinding.\n\nThis constructor should only be called by subclasses or model implementations, not by application or control code.\nSuch code should use {@link sap.ui.model.Model#bindTree Model#bindTree} on the corresponding model instead.","!module":"sap/ui/model/TreeBinding","attachFilter":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined use the change event. It now contains a parameter (reason : \"filter\") when a filter event is fired.<br>Attach event-handler <code>fnFunction<\/code> to the '_filter' event of this <code>sap.ui.model.TreeBinding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: object on which to call the given function."},"!static":false},"!description":"The TreeBinding is a specific binding for trees in the model, which can be used to populate Trees.","getChildCount":{"!description":"Returns the number of child nodes of a specific context","!type":"fn(oContext: Object) -> Number","!category":"function","parameters":{"oContext":"type: Object, description: the context element of the node"},"!static":false},"!category":"class","getNodeContexts":{"!description":"Returns the current value of the bound target","!type":"fn(oContext: Object, iStartIndex: Number, iLength: Number) -> Array","!category":"function","parameters":{"iLength":"type: int, description: determines how many contexts to retrieve beginning from the start index.","iStartIndex":"type: int, description: the startIndex where to start the retrieval of contexts","oContext":"type: Object, description: the context element of the node"},"!static":false},"filter":{"!description":"Filters the tree according to the filter definitions.","!type":"fn(aFilters: [[object Object]], sFilterType: sap.ui.model.FilterType)","!category":"function","parameters":{"sFilterType":"type: sap.ui.model.FilterType, description: Type of the filter which should be adjusted, if it is not given, the standard behaviour applies","aFilters":"type: [object Object][], description: Array of sap.ui.model.Filter objects"},"!static":false},"!helpDescription":"The TreeBinding is a specific binding for trees in the model, which can be used to populate Trees.","!proto":"sap.ui.model.Binding","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.TreeBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.theming":{"Parameters":"sap.ui.core.theming.Parameters","!category":"namespace","!module":"sap/ui/core/theming/Parameters"},"sap.ui.model.Sorter":{"!description":"Sorter for the list binding This object defines the sort order for the list binding.","extend":{"!description":"Creates a new subclass of class sap.ui.model.Sorter with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","getGroup":{"!description":"Returns a group object, at least containing a key property for group detection. May contain additional properties as provided by a custom group function.","!type":"fn(oContext: sap.ui.model.Context) -> Object","!category":"function","parameters":{"oContext":"type: sap.ui.model.Context, description: the binding context"},"!static":false},"!constructorDescription":"Constructor for Sorter","!module":"sap/ui/model/Sorter","defaultComparator":{"!description":"Compares two values\n\nThis is the default comparator function used for clientside sorting, if no custom comparator is given in the constructor. It does compare just by using equal/less than/greater than with automatic type casting, except for null values, which are last in ascending order, and string values where localeCompare is used.\n\nThe comparator method returns -1, 0 or 1, depending on the order of the two items and is suitable to be used as a comparator method for Array.sort.","!type":"fn(a: Object, b: Object) -> Number","!category":"function","parameters":{"b":"type: any, description: the second value to compare","a":"type: any, description: the first value to compare"},"!static":true},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.Sorter.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"getGroupFunction":{"!description":"Returns the group function of this Sorter. If grouping is not enabled on this Sorter, it will return undefined, if no explicit group function has been defined the default group function is returned. The returned function is bound to its Sorter, so it will group according to its own property path, even if it is used in the context of another Sorter.","!type":"fn() -> fn()","!category":"function","!static":false},"!proto":"sap.ui.base.Object","!helpDescription":"Sorter for the list binding This object defines the sort order for the list binding."},"sap.ui.core.Core_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Core with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.core.Core"},"sap.ui.model.type.Float_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.type.Float with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.type.Float"},"sap.ui.model.DataState":{"getValue":{"!description":"Returns the formatted value of the data state.","!type":"fn() -> Object","!category":"function","!static":false},"getOriginalValue":{"!description":"Returns the formatted original value of the data. The original value is the last confirmed value.","!type":"fn() -> Object","!category":"function","!static":false},"isDirty":{"!description":"Returns whether the data state is dirty. A data state is dirty if the value was changed but is not yet confirmed by a server or the entered value did not yet pass the type validation.","!type":"fn() -> Boolean","!category":"function","!static":false},"getInvalidValue":{"!description":"Returns the dirty value of a binding that was rejected by a type validation. This value was of an incorrect type and could not be applied to the model. If the value was not rejected it will return null. In this case the current model value can be accessed using the <code>getValue<\/code> method.","!type":"fn() -> Object","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.DataState with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getControlMessages":{"!description":"Returns the array of state messages of the control or undefined.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"setValue":{"!description":"Sets the formatted value of the data state,","!type":"fn(vValue: Object) -> sap.ui.model.DataState","!category":"function","parameters":{"vValue":"type: any, description: the value"},"!static":false},"setOriginalValue":{"!description":"Sets the formatted original value of the data.","!type":"fn(vOriginalValue: Boolean) -> sap.ui.model.DataState","!category":"function","parameters":{"vOriginalValue":"type: boolean, description: the original value"},"!static":false},"getChanges":{"!description":"Returns the changes of the data state in a map that the control can use in the <code>refreshDataState<\/code> method. The changed property's name is the key in the map. Each element in the map contains an object of below structure. <pre>\n   {\n       oldValue : The old value of the property,\n       value    : The new value of the property\n   }\n<\/pre> The map only contains the changed properties.","!type":"fn() -> map","!category":"function","!static":false},"!module":"sap/ui/model/DataState","getMessages":{"!description":"Returns the array of all state messages or null. This combines the model and control messages.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"changed":{"!description":"Returns or sets whether the data state is changed. As long as changed was not set to false the data state is dirty and the corresponding binding will fire data state change events.","!type":"fn(bNewState?: Boolean) -> Boolean","!category":"function","parameters":{"bNewState":"type: boolean, description: the optional new state"},"!static":false},"isLaundering":{"!description":"Returns whether the data state is in laundering. If data is sent to the server, the data state becomes laundering until the data was accepted or rejected.","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"Provides and update the status data of a binding. Depending on the models state and controls state changes, the data state is used to propagated changes to a control. The control can react on these changes by implementing the <code>refreshDataState<\/code> method for the control. Here the data state object is passed as a parameter.\n\nUsing the {@link #getChanges getChanges} method the control can determine the changed properties and their old and new value. <pre>\n    //sample implementation to handle message changes\n    myControl.prototype.refreshDataState = function(oDataState) {\n       var aMessages = oDataState.getChanges().messages;\n       if (aMessages) {\n           for (var i = 0; i &lt; aMessages.length; i++) {\n               console.log(aMessages.message);\n           }\n       }\n    }\n\n    //sample implementation to handle laundering state\n    myControl.prototype.refreshDataState = function(oDataState) {\n       var bLaundering = oDataState.getChanges().laundering || false;\n       this.setBusy(bLaundering);\n    }\n\n    //sample implementation to handle dirty state\n    myControl.prototype.refreshDataState = function(oDataState) {\n       if (oDataState.isDirty()) console.log(\"Control \" + this.getId() + \" is now dirty\");\n    }\n<\/pre>\n\nUsing the {@link #getProperty getProperty} method the control can read the properties of the data state. The properties are <ul> <li><code>value<\/code> The value formatted by the formatter of the binding <li><code>originalValue<\/code> The original value of the model formatted by the formatter of the binding <li><code>invalidValue<\/code> The control value that was tried to be applied to the model but was rejected by a type validation <li><code>modelMessages<\/code> The messages that were applied to the binding by the <code>sap.ui.model.MessageModel<\/code> <li><code>controlMessages<\/code> The messages that were applied due to type validation errors <li><code>messages<\/code> All messages of the data state <li><code>dirty<\/code> true if the value was not yet confirmed by the server <\/ul>","isControlDirty":{"!description":"Returns whether the data state is dirty in the UI control. A data state is dirty in the UI control if the entered value did not yet pass the type validation.","!type":"fn() -> Boolean","!category":"function","!static":false},"setControlMessages":{"!description":"Sets an array of control state messages.","!type":"fn(the: [[object Object]]) -> sap.ui.model.DataState","!category":"function","parameters":{"the":"type: [object Object][], description: control messages"},"!static":false},"!category":"class","setInvalidValue":{"!description":"Sets the dirty value that was rejected by the type validation.","!type":"fn(vInvalidValue: Object) -> sap.ui.model.DataState","!category":"function","parameters":{"vInvalidValue":"type: any, description: the value that was rejected by the type validation or null if the value was valid"},"!static":false},"getModelMessages":{"!description":"Returns the array of state messages of the model or undefined","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"setLaundering":{"!description":"Sets the laundering state of the data state.","!type":"fn(bLaundering: Boolean) -> sap.ui.model.DataState","!category":"function","parameters":{"bLaundering":"type: boolean, description: true if the state is laundering"},"!static":false},"setModelMessages":{"!description":"Sets an array of model state messages.","!type":"fn(the: Array) -> sap.ui.model.DataState","!category":"function","parameters":{"the":"type: array, description: model messages for this data state."},"!static":false},"!helpDescription":"Provides and update the status data of a binding. Depending on the models state and controls state changes, the data state is used to propagated changes to a control. The control can react on these changes by implementing the <code>refreshDataState<\/code> method for the control. Here the data state object is passed as a parameter.\n\nUsing the {@link #getChanges getChanges} method the control can determine the changed properties and their old and new value. <pre>\n    //sample implementation to handle message changes\n    myControl.prototype.refreshDataState = function(oDataState) {\n       var aMessages = oDataState.getChanges().messages;\n       if (aMessages) {\n           for (var i = 0; i &lt; aMessages.length; i++) {\n               console.log(aMessages.message);\n           }\n       }\n    }\n\n    //sample implementation to handle laundering state\n    myControl.prototype.refreshDataState = function(oDataState) {\n       var bLaundering = oDataState.getChanges().laundering || false;\n       this.setBusy(bLaundering);\n    }\n\n    //sample implementation to handle dirty state\n    myControl.prototype.refreshDataState = function(oDataState) {\n       if (oDataState.isDirty()) console.log(\"Control \" + this.getId() + \" is now dirty\");\n    }\n<\/pre>\n\nUsing the {@link #getProperty getProperty} method the control can read the properties of the data state. The properties are <ul> <li><code>value<\/code> The value formatted by the formatter of the binding <li><code>originalValue<\/code> The original value of the model formatted by the formatter of the binding <li><code>invalidValue<\/code> The control value that was tried to be applied to the model but was rejected by a type validation <li><code>modelMessages<\/code> The messages that were applied to the binding by the <code>sap.ui.model.MessageModel<\/code> <li><code>controlMessages<\/code> The messages that were applied due to type validation errors <li><code>messages<\/code> All messages of the data state <li><code>dirty<\/code> true if the value was not yet confirmed by the server <\/ul>","!proto":"sap.ui.base.Object","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.DataState.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.model.type.FileSize":{"!description":"This class represents file size simple types.","extend":{"!description":"Creates a new subclass of class sap.ui.model.type.FileSize with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a FileSize type.","!module":"sap/ui/model/type/FileSize","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.type.FileSize.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.SimpleType","!helpDescription":"This class represents file size simple types."},"sap.ui.model.BindingMode":{"Default":{"!description":"BindingMode default means that the binding mode of the model is used","!type":"String","!category":"enum"},"!description":"Binding type definitions.","OneTime":{"!description":"BindingMode one time means value is only read from the model once","!type":"String","!category":"enum"},"!category":"static class","OneWay":{"!description":"BindingMode one way means from model to view","!type":"String","!category":"enum"},"!module":"sap/ui/model/BindingMode","TwoWay":{"!description":"BindingMode two way means from model to view and vice versa","!type":"String","!category":"enum"}},"jQuery.sap.util.UriParameters":{"!description":"Encapsulates all URI parameters of the current windows location (URL).\n\nUse {@link jQuery.sap.getUriParameters} to create an instance of jQuery.sap.util.UriParameters.","!category":"static class","!module":"jquery.sap.script"},"sap.ui.model.type.DateInterval":{"!description":"This class represents the Date interval composite type.","extend":{"!description":"Creates a new subclass of class sap.ui.model.type.DateInterval with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.CompositeType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"formatValue":{"!description":"Format the given array containing two values to an output value of type string. Other internal types than 'string' and 'any' are not supported by the date interval type. If a source format has been defined for this type, the formatValue does also accept an array with string values as input. This will be parsed into an array of Dates using the source format.\n\nIf <code>aValues<\/code> isn't an array, a format exception is thrown. If one of the elements in <code>aValues<\/code> is not defined or null, empty string will be returned.","!type":"fn(aValues: Array, sInternalType: String) -> Object","!category":"function","parameters":{"aValues":"type: array, description: The array of values","sInternalType":"type: string, description: The target type"},"!static":false},"!category":"class","!constructorDescription":"Constructor for a Date interval type.","!module":"sap/ui/model/type/DateInterval","parseValue":{"!description":"Parse a string value to an array containing two values. Parsing of other internal types than 'string' is not supported by the DateInterval type. In case a source format has been defined, the two values are formatted using the source format after parsing the inteval string and an array which contains two string values is returned.","!type":"fn(sValue: Object, sInternalType: String, aCurrentValues: Array) -> Array","!category":"function","parameters":{"aCurrentValues":"type: array, description: The current values of all binding parts","sValue":"type: any, description: The value to be parsed","sInternalType":"type: string, description: The source type"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.type.DateInterval.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.CompositeType","!helpDescription":"This class represents the Date interval composite type."},"sap.ui.model.analytics.odata4analytics.Model.ReferenceWithWorkaround":{"!description":"Representation of an OData model with analytical annotations defined by OData4SAP.","!category":"class","!constructorDescription":"Create a representation of the analytical semantics of OData service metadata","!module":"sap/ui/model/analytics/odata4analytics","!proto":"sap.ui.base.Object","!helpDescription":"Representation of an OData model with analytical annotations defined by OData4SAP."},"sap.ui.test.actions.Press":{"extend":{"!description":"Creates a new subclass of class sap.ui.test.actions.Press with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.test.actions.Action.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","executeOn":{"!description":"Sets focus on given control and triggers a 'tap' event on it (which is internally translated into a 'press' event). Logs an error if control is not visible (i.e. has no dom representation)","!type":"fn(oControl: sap.ui.core.Control)","!category":"function","parameters":{"oControl":"type: sap.ui.core.Control, description: the control on which the 'press' event is triggered"},"!static":false},"!constructorDescription":"The Press action is used to simulate a press interaction on a Control's dom ref.\nThis will work out of the box for most of the controls (even custom controls).\n\nHere is a List of supported controls (some controls will trigger the press on a specific region):\n\n<ul>\n    <li>sap.m.Button<\/li>\n    <li>sap.m.Link<\/li>\n    <li>sap.m.StandardListItem<\/li>\n    <li>sap.m.IconTabFilter<\/li>\n    <li>sap.m.Input - Value help<\/li>\n    <li>sap.m.SearchField - Search Button<\/li>\n    <li>sap.m.Page - Back Button<\/li>\n    <li>sap.m.semantic.FullscreenPage - Back Button<\/li>\n    <li>sap.m.semantic.DetailPage - Back Button<\/li>\n    <li>sap.m.List - More Button<\/li>\n    <li>sap.m.Table - More Button<\/li>\n    <li>sap.m.StandardTile<\/li>\n    <li>sap.m.ComboBox<\/li>\n    <li>sap.m.ObjectIdentifier<\/li>\n    <li>sap.ui.comp.smartfilterbar.SmartFilterBar - Go Button<\/li>\n<\/ul>","!module":"sap/ui/test/actions/Press","getMetadata":{"!description":"Returns a metadata object for class sap.ui.test.actions.Press.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.test.actions.Action"},"sap.ui.model.odata.v2.ODataAnnotations":{"attachFailed":{"!description":"Attaches the given callback to the <code>failed<\/code> event. This event is fired when at least one annotation from a group of sources was not successfully (loaded,) parsed or merged. The parameter <code>result<\/code> will be set on the event argument and contains an array of Errors in the order in which the sources had been added.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.v2.ODataAnnotations","!category":"function","parameters":{"fnFunction":"type: function, description: The event callback. This function will be called in the context of the oListener object if given as the next argument.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object to use as context of the callback. If empty, the global context is used."},"!static":false},"detachSomeLoaded":{"!description":"Detaches the given callback from the <code>someLoaded<\/code> event. The passed function and listener object must match the ones previously used for attaching to the event.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.v2.ODataAnnotations","!category":"function","parameters":{"fnFunction":"type: function, description: The event callback previously used with {@link sap.ui.model.odata.v2.ODataAnnotations#attachSomeLoaded}.","oListener":"type: object, description: The same (if any) context object that was used when attaching to the <code>error<\/code> event."},"!static":false},"attachError":{"!description":"Attaches the given callback to the <code>error<\/code> event, which is fired whenever a source cannot be loaded, parsed or merged into the annotation data. The following parameters will be set on the event object that is given to the callback function: <code>source<\/code> - A map containing the properties <code>type<\/code> - containing either \"url\" or \"xml\" - and <code>data<\/code> containing the data given as source, either a URL or an XML string depending on how the source was added. <code>error<\/code> - An Error object describing the problem that occurred","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.v2.ODataAnnotations","!category":"function","parameters":{"fnFunction":"type: function, description: The event callback. This function will be called in the context of the oListener object if given as the next argument.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object to use as context of the callback. If empty, the global context is used."},"!static":false},"detachError":{"!description":"Detaches the given callback from the <code>error<\/code> event. The passed function and listener object must match the ones previously used for attaching to the event.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.v2.ODataAnnotations","!category":"function","parameters":{"fnFunction":"type: function, description: The event callback previously used with {@link sap.ui.model.odata.v2.ODataAnnotations#attachError}.","oListener":"type: object, description: The same (if any) context object that was used when attaching to the <code>error<\/code> event."},"!static":false},"attachSuccess":{"!description":"Attaches the given callback to the <code>success<\/code> event, which is fired whenever a source has been successfully (loaded,) parsed and merged into the annotation data. The following parameters will be set on the event object that is given to the callback function: <code>source<\/code> - A map containing the properties <code>type<\/code> - containing either \"url\" or \"xml\" - and <code>data<\/code> containing the data given as source, either a URL or an XML string depending on how the source was added.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.v2.ODataAnnotations","!category":"function","parameters":{"fnFunction":"type: function, description: The event callback. This function will be called in the context of the oListener object if given as the next argument.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object to use as context of the callback. If empty, the global context is used."},"!static":false},"attachSomeLoaded":{"!description":"This event exists for compatibility with the old Annotation loader Attaches the given callback to the <code>someLoaded<\/code> event. This event is fired when at least one annotation from a group of sources was successfully (loaded,) parsed and merged. The parameter <code>result<\/code> will be set on the event argument and contains an array of all loaded sources as well as Errors in the order in which they had been added.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.v2.ODataAnnotations","!category":"function","parameters":{"fnFunction":"type: function, description: The event callback. This function will be called in the context of the oListener object if given as the next argument.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object to use as context of the callback. If empty, the global context is used."},"!static":false},"!module":"sap/ui/model/odata/v2/ODataAnnotations","addSource":{"!description":"Adds one or several sources to the annotation loader. Sources will be loaded instantly but merged only after the previously added source has either been successfully merged or failed.","!type":"fn(vSource: [String | [object Object][] | sap.ui.model.odata.v2.ODataAnnotations.Source | [object Object]]) -> Promise","!category":"function","parameters":{"vSource":"type: string|[object Object][]|sap.ui.model.odata.v2.ODataAnnotations.Source|[object Object][], description: One or several annotation source(s). Can be either a string or a map of the type <code>sap.ui.model.odata.v2.ODataAnnotations.Source<\/code> or an array containing several (either strings or source objects)."},"!static":false},"getAnnotationsData":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined undefined<br>V1 API Compatibility method. @see sap.ui.model.odata.v2.ODataAnnotations#getData Returns the parsed and merged annotation data object","!type":"fn() -> Object","!category":"function","!static":false},"!category":"class","detachLoaded":{"!description":"Detaches the given callback from the <code>loaded<\/code> event. The passed function and listener object must match the ones previously used for attaching to the event.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.v2.ODataAnnotations","!category":"function","parameters":{"fnFunction":"type: function, description: The event callback previously used with {@link sap.ui.model.odata.v2.ODataAnnotations#attachLoaded}.","oListener":"type: object, description: The same (if any) context object that was used when attaching to the <code>error<\/code> event."},"!static":false},"detachFailed":{"!description":"Detaches the given callback from the <code>failed<\/code> event. The passed function and listener object must match the ones previously used for attaching to the event.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.v2.ODataAnnotations","!category":"function","parameters":{"fnFunction":"type: function, description: The event callback previously used with {@link sap.ui.model.odata.v2.ODataAnnotations#attachFailed}.","oListener":"type: object, description: The same (if any) context object that was used when attaching to the <code>error<\/code> event."},"!static":false},"detachSuccess":{"!description":"Detaches the given callback from the <code>success<\/code> event. The passed function and listener object must match the ones previously used for attaching to the event.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.v2.ODataAnnotations","!category":"function","parameters":{"fnFunction":"type: function, description: The event callback previously used with {@link sap.ui.model.odata.v2.ODataAnnotations#attachSuccess}.","oListener":"type: object, description: The same (if any) context object that was used when attaching to the <code>success<\/code> event."},"!static":false},"setHeaders":{"!description":"Set custom headers which are provided in a key/value map. These headers are used for all requests. The \"Accept-Language\" header cannot be modified and is set using the core's language setting.\n\nTo remove these headers, simply set the <code>mHeaders<\/code> parameter to <code>{}<\/code>. Please also note that when calling this method again all previous custom headers are removed unless they are specified again in the <code>mCustomHeaders<\/code> parameter.","!type":"fn(mHeaders: map)","!category":"function","parameters":{"mHeaders":"type: map, description: the header name/value map."},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.v2.ODataAnnotations with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Creates a new instance of the ODataAnnotations annotation loader.","attachAllFailed":{"!description":"This event exists for compatibility with the old Annotation loader Attaches the given callback to the <code>allFailed<\/code> event. This event is fired when no annotation from a group of sources was successfully (loaded,) parsed and merged. The parameter <code>result<\/code> will be set on the event argument and contains an array of Errors in the order in which the sources had been added.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.v2.ODataAnnotations","!category":"function","parameters":{"fnFunction":"type: function, description: The event callback. This function will be called in the context of the oListener object if given as the next argument.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object to use as context of the callback. If empty, the global context is used."},"!static":false},"attachLoaded":{"!description":"Attaches the given callback to the <code>loaded<\/code> event. This event is fired when all annotations from a group of sources was successfully (loaded,) parsed and merged. The parameter <code>result<\/code> will be set on the event argument and contains an array of all loaded sources as well as Errors in the order in which they had been added.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.v2.ODataAnnotations","!category":"function","parameters":{"fnFunction":"type: function, description: The event callback. This function will be called in the context of the oListener object if given as the next argument.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object to use as context of the callback. If empty, the global context is used."},"!static":false},"loaded":{"!description":"Returns a promise that resolves when the annotation sources that were added up to this point were successfully (loaded,) parsed and merged","!type":"fn() -> Promise","!category":"function","!static":false},"!description":"Annotation loader for OData V2 services","getData":{"!description":"Returns the parsed and merged annotation data object","!type":"fn() -> Object","!category":"function","!static":false},"detachAllFailed":{"!description":"Detaches the given callback from the <code>allFailed<\/code> event. The passed function and listener object must match the ones previously used for attaching to the event.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.v2.ODataAnnotations","!category":"function","parameters":{"fnFunction":"type: function, description: The event callback previously used with {@link sap.ui.model.odata.v2.ODataAnnotations#attachFailed}.","oListener":"type: object, description: The same (if any) context object that was used when attaching to the <code>error<\/code> event."},"!static":false},"!proto":"sap.ui.base.EventProvider","!helpDescription":"Annotation loader for OData V2 services","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.v2.ODataAnnotations.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"jQuery.sap.Version":{"compareTo":{"!description":"Compares this version with a given one.\n\nThe version with which this version should be compared can be given as a <code>sap.base.Version<\/code> instance, as a string (e.g. <code>v.compareto(\"1.4.5\")<\/code>). Or major, minor, patch and suffix values can be given as separate parameters (e.g. <code>v.compareTo(1, 4, 5)<\/code>) or in an array (e.g. <code>v.compareTo([1, 4, 5])<\/code>).","!type":"fn() -> Number","!category":"function","!static":false},"getMajor":{"!description":"Returns the major version part of this version.","!type":"fn() -> Number","!category":"function","!static":false},"inRange":{"!description":"Checks whether this version is in the range of the given interval (start inclusive, end exclusive).\n\nThe boundaries against which this version should be checked can be given as <code>jQuery.sap.Version<\/code> instances (e.g. <code>v.inRange(v1, v2)<\/code>), as strings (e.g. <code>v.inRange(\"1.4\", \"2.7\")<\/code>) or as arrays (e.g. <code>v.inRange([1,4], [2,7])<\/code>).","!type":"fn(vMin: [String | [object Object]], vMax: [String | [object Object]]) -> Boolean","!category":"function","parameters":{"vMax":"type: string|[object Object][]|jQuery.sap.Version, description: the end of the range (exclusive)","vMin":"type: string|[object Object][]|jQuery.sap.Version, description: the start of the range (inclusive)"},"!static":false},"!constructorDescription":"Returns a Version instance created from the given parameters.\n\nThis function can either be called as a constructor (using <code>new<\/code>) or as a normal function.\nIt always returns an immutable Version instance.\n\nThe parts of the version number (major, minor, patch, suffix) can be provided in several ways:\n<ul>\n<li>Version(\"1.2.3-SNAPSHOT\")    - as a dot-separated string. Any non-numerical char or a dot followed\n                                   by a non-numerical char starts the suffix portion. Any missing major,\n                                   minor or patch versions will be set to 0.<\/li>\n<li>Version(1,2,3,\"-SNAPSHOT\")   - as individual parameters. Major, minor and patch must be integer numbers\n                                   or empty, suffix must be a string not starting with digits.<\/li>\n<li>Version([1,2,3,\"-SNAPSHOT\"]) - as an array with the individual parts. The same type restrictions apply\n                                   as before.<\/li>\n<li>Version(otherVersion)        - as a Version instance (cast operation). Returns the given instance instead\n                                   of creating a new one.<\/li>\n<\/ul>\n\nTo keep the code size small, this implementation mainly validates the single string variant.\nAll other variants are only validated to some degree. It is the responsibility of the caller to\nprovide proper parts.","getMinor":{"!description":"Returns the minor version part of this version.","!type":"fn() -> Number","!category":"function","!static":false},"!module":"jquery.sap.global","!description":"Represents a version consisting of major, minor, patch version and suffix, e.g. '1.2.7-SNAPSHOT'.","getPatch":{"!description":"Returns the patch (or micro) version part of this version.","!type":"fn() -> Number","!category":"function","!static":false},"!category":"class","getSuffix":{"!description":"Returns the version suffix of this version.","!type":"fn() -> String","!category":"function","!static":false},"toString":{"!description":"Returns a string representation of this version.","!type":"function toString() { [native code for Array.toString, arity=0] }\n) -> String","!category":"function","!static":false},"!helpDescription":"Represents a version consisting of major, minor, patch version and suffix, e.g. '1.2.7-SNAPSHOT'.","!proto":"Object"},"sap.ui.model.odata.type.Byte_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Byte with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.Int.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.Byte"},"sap.ui.core.IContextMenu":{"!description":"Marker interface for controls that can serve as a context menu. Implementation of this interface should implement <li><code>openAsContextMenu<\/code><\/li> method.","!category":"static class","!module":"sap/ui/core/library"},"sap.ui.model.odata.ODataMessageParser_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.ODataMessageParser with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.message.MessageParser.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.model.odata.ODataMessageParser"},"sap.ui.model.analytics.odata4analytics.Model.ReferenceByModel":{"!description":"Handle to an already instantiated SAPUI5 OData model.","!category":"class","!constructorDescription":"Create a reference to an OData model already loaded elsewhere with the help\nof SAPUI5.","!module":"sap/ui/model/analytics/odata4analytics","!proto":"sap.ui.base.Object","!helpDescription":"Handle to an already instantiated SAPUI5 OData model."},"sap.ui.core.mvc.JSONView_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.mvc.JSONView with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.mvc.View.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.mvc.JSONView"},"sap.ui.core.Popup.Dock":{"EndBottom":{"!description":"EndBottom : String","!type":"String","!category":"enum"},"RightBottom":{"!description":"RightBottom : String","!type":"String","!category":"enum"},"BeginTop":{"!description":"BeginTop : String","!type":"String","!category":"enum"},"CenterBottom":{"!description":"CenterBottom : String","!type":"String","!category":"enum"},"CenterTop":{"!description":"CenterTop : String","!type":"String","!category":"enum"},"RightTop":{"!description":"RightTop : String","!type":"String","!category":"enum"},"LeftBottom":{"!description":"LeftBottom : String","!type":"String","!category":"enum"},"!module":"sap/ui/core/Popup","RightCenter":{"!description":"RightCenter : String","!type":"String","!category":"enum"},"LeftCenter":{"!description":"LeftCenter : String","!type":"String","!category":"enum"},"CenterCenter":{"!description":"CenterCenter : String","!type":"String","!category":"enum"},"BeginBottom":{"!description":"BeginBottom : String","!type":"String","!category":"enum"},"!description":"Enumeration providing options for docking of some element to another. \"Right\" and \"Left\" will stay the same in RTL mode, but \"Begin\" and \"End\" will flip to the other side (\"Begin\" is \"Right\" in RTL).","!category":"namespace","LeftTop":{"!description":"LeftTop : String","!type":"String","!category":"enum"},"EndTop":{"!description":"EndTop : String","!type":"String","!category":"enum"},"EndCenter":{"!description":"EndCenter : String","!type":"String","!category":"enum"},"BeginCenter":{"!description":"BeginCenter : String","!type":"String","!category":"enum"},"!helpDescription":"Enumeration providing options for docking of some element to another. \"Right\" and \"Left\" will stay the same in RTL mode, but \"Begin\" and \"End\" will flip to the other side (\"Begin\" is \"Right\" in RTL)."},"sap.ui.core.ComponentMetadata":{"getManifest":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.33.0 Please use the sap.ui.core.Component#getManifest<br>Returns the manifest defined in the metadata of the Component. If not specified, the return value is null.","!type":"fn() -> Object","!category":"function","!static":false},"!constructorDescription":"Creates a new metadata object for a Component subclass.","!module":"sap/ui/core/ComponentMetadata","getManifestEntry":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.33.0 Please use the sap.ui.core.Component#getManifest<br>Returns the configuration of a manifest section or the value for a specific path. If no section or key is specified, the return value is null.\n\nExample: <code> { \"sap.ui5\": { \"dependencies\": { \"libs\": { \"sap.m\": {} }, \"components\": { \"my.component.a\": {} } } }); <\/code>\n\nThe configuration above can be accessed in the following ways: <ul> <li><b>By section/namespace<\/b>: <code>oComponent.getMetadata().getManifestEntry(\"sap.ui5\")<\/code><\/li> <li><b>By path<\/b>: <code>oComponent.getMetadata().getManifestEntry(\"/sap.ui5/dependencies/libs\")<\/code><\/li> <\/ul>\n\nBy section/namespace returns the configuration for the specified manifest section and by path allows to specify a concrete path to a dedicated entry inside the manifest. The path syntax always starts with a slash (/).","!type":"fn(sKey: String, bMerged?: Boolean) -> Object | null","!category":"function","parameters":{"bMerged":"type: boolean, description: Indicates whether the custom configuration is merged with the parent custom configuration of the Component.","sKey":"type: string, description: Either the manifest section name (namespace) or a concrete path"},"!static":false},"getManifestObject":{"!description":"Returns the manifest object.","!type":"fn() -> sap.ui.core.Manifest","!category":"function","!static":false},"_applyManifest":{"!description":"Applies the given manifest json to the ComponentMetadata instance if there isn't already a manifest.\n\nThis method is called from - {@link #applySettings} in case there is a manifest object given from the metadata - {@link #getManifestObject} after lazy loading the manifest (sync request) - {@link sap.ui.component} / {@link sap.ui.component.load} with an existing manifest to prevent the sync request","!type":"fn(oManifestJson: Object)","!category":"function","parameters":{"oManifestJson":"type: object, description: manifest object (will be modified internally!)"},"!static":false},"getComponents":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.27.1 Please use {@link sap.ui.core.Component#getManifestEntry}(\"/sap.ui5/dependencies/components\")<br>Returns array of components specified in the metadata of the Component. If not specified or the array is empty, the return value is null. <p> <b>Important:<\/b><\/br> If a Component is loaded using the manifest URL (or according the \"manifest first\" strategy), this function ignores the entries of the manifest file! It returns only the entries which have been defined in the Component metadata or in the proper Component manifest.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getMetadataVersion":{"!description":"Returns the version of the metadata which could be 1 or 2. 1 is for legacy metadata whereas 2 is for the manifest.","!type":"fn() -> Number","!category":"function","!static":false},"getComponentName":{"!description":"Returns the name of the Component (which is the namespace only with the module name)","!type":"fn() -> String","!category":"function","!static":false},"getIncludes":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.27.1 Please use {@link sap.ui.core.Component#getManifestEntry}(\"/sap.ui5/resources\")<br>Returns the array of the included files that the Component requires such as CSS and JavaScript. If not specified or the array is empty, the return value is null. <p> <b>Important:<\/b><\/br> If a Component is loaded using the manifest URL (or according the \"manifest first\" strategy), this function ignores the entries of the manifest file! It returns only the entries which have been defined in the Component metadata or in the proper Component manifest.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getVersion":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.34.2 Please use {@link sap.ui.core.Component#getManifestEntry}(\"/sap.app/applicationVersion/version\")<br>Returns the version of the component. If not specified, the return value is null. <p> <b>Important:<\/b><\/br> If a Component is loaded using the manifest URL (or according the \"manifest first\" strategy), this function ignores the entries of the manifest file! It returns only the entries which have been defined in the Component metadata or in the proper Component manifest.","!type":"fn() -> String","!category":"function","!static":false},"getUI5Version":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.27.1 Please use {@link sap.ui.core.Component#getManifestEntry}(\"/sap.ui5/dependencies/minUI5Version\")<br>Returns the required version of SAPUI5 defined in the metadata of the Component. If returned value is null, then no special UI5 version is required. <p> <b>Important:<\/b><\/br> If a Component is loaded using the manifest URL (or according the \"manifest first\" strategy), this function ignores the entries of the manifest file! It returns only the entries which have been defined in the Component metadata or in the proper Component manifest.","!type":"fn() -> String","!category":"function","!static":false},"getConfig":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.27.1 Please use {@link sap.ui.core.Component#getManifestEntry}(\"/sap.ui5/config\")<br>Returns a copy of the configuration property to disallow modifications. If no key is specified it returns the complete configuration property","!type":"fn(sKey?: String, bDoNotMerge?: Boolean) -> Object","!category":"function","parameters":{"bDoNotMerge":"type: boolean, description: If set to <code>true<\/code>, only the local configuration is returned","sKey":"type: string, description: Key of the configuration property"},"!static":false},"getLibs":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.27.1 Please use {@link sap.ui.core.Component#getManifestEntry}(\"/sap.ui5/dependencies/libs\")<br>Returns array of libraries specified in metadata of the Component, that are automatically loaded when an instance of the component is created. If not specified or the array is empty, the return value is null. <p> <b>Important:<\/b><\/br> If a Component is loaded using the manifest URL (or according the \"manifest first\" strategy), this function ignores the entries of the manifest file! It returns only the entries which have been defined in the Component metadata or in the proper Component manifest.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getCustomEntry":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.27.1 Please use the sap.ui.core.ComponentMetadata#getManifestEntry<br>Returns the custom Component configuration entry with the specified key (this must be a JSON object). If no key is specified, the return value is null.\n\nExample: <code> sap.ui.core.Component.extend(\"sample.Component\", { metadata: { \"my.custom.config\" : { \"property1\" : true, \"property2\" : \"Something else\" } } }); <\/code>\n\nThe configuration above can be accessed via <code>sample.Component.getMetadata().getCustomEntry(\"my.custom.config\")<\/code>.","!type":"fn(sKey: String, bMerged: Boolean) -> Object","!category":"function","parameters":{"bMerged":"type: boolean, description: Indicates whether the custom configuration is merged with the parent custom configuration of the Component.","sKey":"type: string, description: Key of the custom configuration (must be prefixed with a namespace)"},"!static":false},"getRawManifest":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.33.0 Please use the sap.ui.core.Component#getManifest<br>Returns the raw manifest defined in the metadata of the Component. If not specified, the return value is null.","!type":"fn() -> Object","!category":"function","!static":false},"isBaseClass":{"!description":"Returns whether the class of this metadata is a component base class or not.","!type":"fn() -> Boolean","!category":"function","!static":false},"!category":"class","getDependencies":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.27.1 Please use {@link sap.ui.core.Component#getManifestEntry}(\"/sap.ui5/dependencies\")<br>Returns the dependencies defined in the metadata of the Component. If not specified, the return value is null. <p> <b>Important:<\/b><\/br> If a Component is loaded using the manifest URL (or according the \"manifest first\" strategy), this function ignores the entries of the manifest file! It returns only the entries which have been defined in the Component metadata or in the proper Component manifest.","!type":"fn() -> Object","!category":"function","!static":false},"!proto":"sap.ui.base.Object"},"sap.ui.core.tmpl.DOMAttribute_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.tmpl.DOMAttribute with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.tmpl.DOMAttribute"},"sap.ui.app.MockServer_obj":{"!type":"fn(sId: String, mSettings: Object, oScope?: Object)","prototype":"sap.ui.app.MockServer"},"sap.ui.core.ComponentContainer":{"getManifest":{"!description":"Gets current value of property {@link #getManifest manifest}.\n\nControls when and from where to load the manifest for the Component. When set to any truthy value, the manifest will be loaded asynchronously by default and evaluated before the Component controller, if it is set to a falsy value other than <code>undefined<\/code>, the manifest will be loaded after the controller. A non-empty string value will be interpreted as the URL location from where to load the manifest. A non-null object value will be interpreted as manifest content. This property can only be applied initially.","!type":"fn() -> Object","!category":"function","!static":false},"!module":"sap/ui/core/ComponentContainer","detachComponentCreated":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:componentCreated componentCreated} event of this <code>sap.ui.core.ComponentContainer<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.ComponentContainer","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nContainer height in CSS size","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getUsage":{"!description":"Gets current value of property {@link #getUsage usage}.\n\nThe component usage. If the ComponentContainer is used inside a Component, this Component can define a usage which will be used for creating the Component. This property can only be applied initially.","!type":"fn() -> String","!category":"function","!static":false},"setUrl":{"!description":"Sets a new value for property {@link #getUrl url}.\n\nThe URL of the component. This property can only be applied initially.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sUrl: sap.ui.core.URI) -> sap.ui.core.ComponentContainer","!category":"function","parameters":{"sUrl":"type: sap.ui.core.URI, description: New value for property <code>url<\/code>"},"!static":false},"getSettings":{"!description":"Gets current value of property {@link #getSettings settings}.\n\nThe settings object passed to the component when created. This property can only be applied initially.","!type":"fn() -> Object","!category":"function","!static":false},"getAutoPrefixId":{"!description":"Gets current value of property {@link #getAutoPrefixId autoPrefixId}.\n\nFlag, whether to auto-prefix the ID of the nested Component or not. If this property is set to true the ID of the Component will be prefixed with the ID of the ComponentContainer followed by a single dash. This property can only be applied initially.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!category":"class","getPropagateModel":{"!description":"Gets current value of property {@link #getPropagateModel propagateModel}.\n\nDefines whether binding information is propagated to the component.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setLifecycle":{"!description":"Sets a new value for property {@link #getLifecycle lifecycle}.\n\nLifecycle behavior for the Component associated by the <code>ComponentContainer<\/code>. The default behavior is <code>Legacy<\/code>. This means that the <code>ComponentContainer<\/code> takes care that the Component is destroyed when the <code>ComponentContainer<\/code> is destroyed, but it is <b>not<\/b> destroyed when a new Component is associated. If you use the <code>usage<\/code> property to create the Component, the default behavior is <code>Container<\/code>. This means that the Component is destroyed when the <code>ComponentContainer<\/code> is destroyed or a new Component is associated. This property must only be applied before a component instance is created.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Legacy<\/code>.","!type":"fn(sLifecycle: sap.ui.core.ComponentLifecycle) -> sap.ui.core.ComponentContainer","!category":"function","parameters":{"sLifecycle":"type: sap.ui.core.ComponentLifecycle, description: New value for property <code>lifecycle<\/code>"},"!static":false},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nContainer width in CSS size","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setManifest":{"!description":"Sets a new value for property {@link #getManifest manifest}.\n\nControls when and from where to load the manifest for the Component. When set to any truthy value, the manifest will be loaded asynchronously by default and evaluated before the Component controller, if it is set to a falsy value other than <code>undefined<\/code>, the manifest will be loaded after the controller. A non-empty string value will be interpreted as the URL location from where to load the manifest. A non-null object value will be interpreted as manifest content. This property can only be applied initially.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(oManifest: Object) -> sap.ui.core.ComponentContainer","!category":"function","parameters":{"oManifest":"type: any, description: New value for property <code>manifest<\/code>"},"!static":false},"setHandleValidation":{"!description":"Sets a new value for property {@link #getHandleValidation handleValidation}.\n\nEnable/disable validation handling by MessageManager for this component. The resulting Messages will be propagated to the controls. This property can only be applied initially.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bHandleValidation: Boolean) -> sap.ui.core.ComponentContainer","!category":"function","parameters":{"bHandleValidation":"type: boolean, description: New value for property <code>handleValidation<\/code>"},"!static":false},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nContainer width in CSS size\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.core.ComponentContainer","!category":"function","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"},"!static":false},"setComponent":{"!description":"Sets the component of the container. Depending on the ComponentContainer's lifecycle this might destroy the old associated Component.\n\nOnce the component is associated with the container the cross connection to the component will be set and the models will be propagated if defined. If the <code>usage<\/code> property is set the ComponentLifecycle is processed like a \"Container\" lifecycle.","!type":"fn(vComponent: String | sap.ui.core.UIComponent) -> sap.ui.core.ComponentContainer","!category":"function","parameters":{"vComponent":"type: string|sap.ui.core.UIComponent, description: ID of an element which becomes the new target of this component association. Alternatively, an element instance may be given."},"!static":false},"setAsync":{"!description":"Sets a new value for property {@link #getAsync async}.\n\nFlag whether the component should be created sync (default) or async. The default will be async when initially the property <code>manifest<\/code> is set to a truthy value and for the property <code>async<\/code> no value has been specified. This property can only be applied initially.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bAsync: Boolean) -> sap.ui.core.ComponentContainer","!category":"function","parameters":{"bAsync":"type: boolean, description: New value for property <code>async<\/code>"},"!static":false},"fireComponentCreated":{"!description":"Fires event {@link #event:componentCreated componentCreated} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.core.ComponentContainer","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setPropagateModel":{"!description":"Sets a new value for property {@link #getPropagateModel propagateModel}.\n\nDefines whether binding information is propagated to the component.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bPropagateModel: Boolean) -> sap.ui.core.ComponentContainer","!category":"function","parameters":{"bPropagateModel":"type: boolean, description: New value for property <code>propagateModel<\/code>"},"!static":false},"getAsync":{"!description":"Gets current value of property {@link #getAsync async}.\n\nFlag whether the component should be created sync (default) or async. The default will be async when initially the property <code>manifest<\/code> is set to a truthy value and for the property <code>async<\/code> no value has been specified. This property can only be applied initially.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.ComponentContainer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getLifecycle":{"!description":"Gets current value of property {@link #getLifecycle lifecycle}.\n\nLifecycle behavior for the Component associated by the <code>ComponentContainer<\/code>. The default behavior is <code>Legacy<\/code>. This means that the <code>ComponentContainer<\/code> takes care that the Component is destroyed when the <code>ComponentContainer<\/code> is destroyed, but it is <b>not<\/b> destroyed when a new Component is associated. If you use the <code>usage<\/code> property to create the Component, the default behavior is <code>Container<\/code>. This means that the Component is destroyed when the <code>ComponentContainer<\/code> is destroyed or a new Component is associated. This property must only be applied before a component instance is created.\n\nDefault value is <code>Legacy<\/code>.","!type":"fn() -> sap.ui.core.ComponentLifecycle","!category":"function","!static":false},"setUsage":{"!description":"Sets a new value for property {@link #getUsage usage}.\n\nThe component usage. If the ComponentContainer is used inside a Component, this Component can define a usage which will be used for creating the Component. This property can only be applied initially.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sUsage: String) -> sap.ui.core.ComponentContainer","!category":"function","parameters":{"sUsage":"type: string, description: New value for property <code>usage<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new ComponentContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getUrl url} : sap.ui.core.URI<\/li>\n<li>{@link #getAsync async} : boolean (default: false)<\/li>\n<li>{@link #getHandleValidation handleValidation} : boolean (default: false)<\/li>\n<li>{@link #getSettings settings} : object<\/li>\n<li>{@link #getPropagateModel propagateModel} : boolean (default: false)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getLifecycle lifecycle} : sap.ui.core.ComponentLifecycle (default: Legacy)<\/li>\n<li>{@link #getAutoPrefixId autoPrefixId} : boolean (default: false)<\/li>\n<li>{@link #getUsage usage} : string<\/li>\n<li>{@link #getManifest manifest} : any<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getComponent component} : (sap.ui.core.ID | sap.ui.core.UIComponent)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:componentCreated componentCreated} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setSettings":{"!description":"Sets a new value for property {@link #getSettings settings}.\n\nThe settings object passed to the component when created. This property can only be applied initially.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(oSettings: Object) -> sap.ui.core.ComponentContainer","!category":"function","parameters":{"oSettings":"type: object, description: New value for property <code>settings<\/code>"},"!static":false},"getHandleValidation":{"!description":"Gets current value of property {@link #getHandleValidation handleValidation}.\n\nEnable/disable validation handling by MessageManager for this component. The resulting Messages will be propagated to the controls. This property can only be applied initially.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setAutoPrefixId":{"!description":"Sets a new value for property {@link #getAutoPrefixId autoPrefixId}.\n\nFlag, whether to auto-prefix the ID of the nested Component or not. If this property is set to true the ID of the Component will be prefixed with the ID of the ComponentContainer followed by a single dash. This property can only be applied initially.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bAutoPrefixId: Boolean) -> sap.ui.core.ComponentContainer","!category":"function","parameters":{"bAutoPrefixId":"type: boolean, description: New value for property <code>autoPrefixId<\/code>"},"!static":false},"!description":"Container that embeds a UIComponent in a control tree.","getUrl":{"!description":"Gets current value of property {@link #getUrl url}.\n\nThe URL of the component. This property can only be applied initially.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"getComponent":{"!description":"ID of the element which is the current target of the association {@link #getComponent component}, or <code>null<\/code>.","!type":"fn() -> sap.ui.core.ID","!category":"function","!static":false},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nContainer height in CSS size\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.core.ComponentContainer","!category":"function","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"},"!static":false},"getName":{"!description":"Gets current value of property {@link #getName name}.\n\nComponent name, the package where the component is contained. This property can only be applied initially.","!type":"fn() -> String","!category":"function","!static":false},"attachComponentCreated":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:componentCreated componentCreated} event of this <code>sap.ui.core.ComponentContainer<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.core.ComponentContainer<\/code> itself.\n\nFired when the component instance has been created by the ComponentContainer.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.ComponentContainer","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.core.ComponentContainer<\/code> itself"},"!static":false},"setName":{"!description":"Sets a new value for property {@link #getName name}.\n\nComponent name, the package where the component is contained. This property can only be applied initially.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sName: String) -> sap.ui.core.ComponentContainer","!category":"function","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"},"!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"Container that embeds a UIComponent in a control tree.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.ComponentContainer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.mvc.XMLView.PreprocessorType":{"CONTROLS":{"!description":"This preprocessor receives the control tree produced through the view source","!type":"String","!category":"enum"},"!description":"Specifies the available preprocessor types for XMLViews","!category":"static class","XML":{"!description":"This preprocessor receives the plain xml source of the view and should also return a valid xml ready for view creation","!type":"String","!category":"enum"},"VIEWXML":{"!description":"This preprocessor receives a valid xml source for View creation without any template tags but with control declarations. These include their full IDs by which they can also be queried during runtime.","!type":"String","!category":"enum"},"!module":"sap/ui/core/mvc/XMLView"},"sap.ui.base.Metadata":{"getClass":{"!description":"Returns the (constructor of the) described class","!type":"fn() -> fn()","!category":"function","!static":false},"getAllPublicMethods":{"!description":"Returns an array with the names of all public methods declared by the described class and its ancestors.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getParent":{"!description":"Returns the metadata object of the base class of the described class or null if the class has no (documented) base class.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":false},"!constructorDescription":"Creates a new metadata object from the given static infos.\n\nNote: throughout this class documentation, the described subclass of Object\nis referenced as <i>the described class<\/i>.","!module":"sap/ui/base/Metadata","isDeprecated":{"!description":"Whether the described class is deprecated and should not be used any more","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"Metadata for a class.","isAbstract":{"!description":"Returns whether the described class is abstract","!type":"fn() -> Boolean","!category":"function","!static":false},"getPublicMethods":{"!description":"Returns an array with the names of the public methods declared by the described class.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"isInstanceOf":{"!description":"Checks whether the described class or one of its ancestor classes implements the given interface.","!type":"fn(sInterface: String) -> Boolean","!category":"function","parameters":{"sInterface":"type: string, description: name of the interface to test for (in dot notation)"},"!static":false},"getName":{"!description":"Returns the fully qualified name of the described class","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","isFinal":{"!description":"Returns whether the described class is final","!type":"fn() -> Boolean","!category":"function","!static":false},"!helpDescription":"Metadata for a class.","!proto":"sap.ui.base.Object"},"sap.ui.model.type.TimeInterval_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.type.TimeInterval with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.type.DateInterval.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.type.TimeInterval"},"sap.ui.model.analytics.odata4analytics.Measure_obj":{"!type":"fn(oQueryResult: sap.ui.model.analytics.odata4analytics.QueryResult, oProperty: Object)","prototype":"sap.ui.model.analytics.odata4analytics.Measure"},"sap.ui.core.format.FileSizeFormat_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.format.FileSizeFormat with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.core.format.FileSizeFormat"},"sap.ui.model.odata.v4.ODataListBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.v4.ODataListBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.ListBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oModel: sap.ui.model.odata.v4.ODataModel, sPath: String, oContext?: sap.ui.model.Context, vSorters?: [sap.ui.model.Sorter | [object Object]], vFilters?: [sap.ui.model.Filter | [object Object]], mParameters?: Object)","prototype":"sap.ui.model.odata.v4.ODataListBinding"},"sap.ui.model.odata.type.Single":{"!description":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Single<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>number<\/code>.","validateValue":{"!description":"Validates whether the given value in model representation is valid and meets the defined constraints.","!type":"fn(fValue: Number)","!category":"function","parameters":{"fValue":"type: number, description: the value to be validated"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Single with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function","!static":false},"formatValue":{"!description":"Formats the given value to the given target type.","!type":"fn(vValue: String | Number, sTargetType: String) -> Number | String","!category":"function","parameters":{"vValue":"type: string|number, description: the value to be formatted, which is represented as a number in the model","sTargetType":"type: string, description: the target type; may be \"any\", \"float\", \"int\", \"string\", or a type with one of these types as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}. See {@link sap.ui.model.odata.type} for more information."},"!static":false},"!category":"class","!constructorDescription":"Constructor for a primitive type <code>Edm.Single<\/code>.","!module":"sap/ui/model/odata/type/Single","parseValue":{"!description":"Parses the given value, which is expected to be of the given type, to an Edm.Single in <code>number<\/code> representation.","!type":"fn(vValue: String | Number, sSourceType: String) -> Number","!category":"function","parameters":{"sSourceType":"type: string, description: the source type (the expected type of <code>vValue<\/code>); may be \"float\", \"int\", \"string\", or a type with one of these types as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}. See {@link sap.ui.model.odata.type} for more information.","vValue":"type: string|number, description: the value to be parsed; the empty string and <code>null<\/code> are parsed to <code>null<\/code>; note that there is no way to enter <code>Infinity<\/code> or <code>NaN<\/code> values"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.Single.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.odata.type.ODataType","!helpDescription":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Single<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>number<\/code>."},"sap.ui.core.service.Service":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.service.Service with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"init":{"!description":"Initializes the service instance after creation.\n\nApplications must not call this hook method directly, it is called by the framework while the constructor of a service is executed.\n\nSubclasses of service should override this hook to implement any necessary initialization.","!type":"fn()","!category":"function","!static":false},"!constructorDescription":"Creates a service for the given context.","!module":"sap/ui/core/service/Service","exit":{"!description":"Cleans up the service instance before destruction.\n\nApplications must not call this hook method directly, it is called by the framework when the service is {@link #destroy destroyed}.\n\nSubclasses of service should override this hook to implement any necessary clean-up.","!type":"fn()","!category":"function","!static":false},"getContext":{"!description":"Returns the context of the service: <pre>\n{\n  \"scopeObject\": oComponent, // the Component instance\n  \"scopeType\": \"component\",   // the stereotype of the scopeObject\n  \"settings\": {} // the provided service settings\n}\n<\/pre>\n\nThis function is not available on the service interface.","!type":"fn() -> Object","!category":"function","!static":false},"destroy":{"!description":"Lifecycle method to destroy the service instance.\n\nThis function is not available on the service interface.","!type":"fn()","!category":"function","!static":false},"!description":"A service provides a specific functionality. A service instance can be obtained by a {@link sap.ui.core.service.ServiceFactory ServiceFactory} or at a Component via {@link sap.ui.core.Component#getService getService} function.\n\nThis class is the abstract base class for services and needs to be extended: <pre>\nsap.ui.define(\"my/Service\", [\n  \"sap/ui/core/service/Service\"\n], function(Service) {\n\n  return Service.extend(\"my.Service\", {\n\n    init: function() {\n      // handle init lifecycle\n    },\n\n    exit: function() {\n      // handle exit lifecycle\n    },\n\n    doSomething: function() {\n      // some functionality\n    }\n\n });\n\n});\n<\/pre>\n\nA service instance will have a service context: <pre>\n{\n  \"scopeObject\": oComponent, // the Component instance\n  \"scopeType\": \"component\"   // the stereotype of the scopeObject\n}\n<\/pre>\n\nThe service context can be retrieved with the function <code>getContext<\/code>. This function is private to the service instance and will not be exposed via the service interface.\n\nFor consumers of the service it is recommended to provide the service instance only - as e.g. the {@link sap.ui.core.Component#getService getService} function of the Component does. The service interface can be accessed via the <code>getInterface<\/code> function.\n\nOther private functions of the service instance are the lifecycle functions. Currently there are two lifecycle functions: <code>init<\/code> and <code>exit<\/code>. In addition the <code>destroy<\/code> function will also by hidden to avoid the control of the service lifecycle for service interface consumers.","!category":"class","getInterface":{"!description":"Returns the public interface of the service. By default, this filters the internal functions like <code>getInterface<\/code>, <code>getContext<\/code> and all other functions starting with \"_\". Additionally the lifecycle functions <code>init<\/code>, <code>exit<\/code> and <code>destroy<\/code> will be filtered for the service interface. This function can be overridden in order to self-create a service interface.\n\nThis function is not available on the service interface.","!type":"fn() -> Object","!category":"function","!static":false},"!helpDescription":"A service provides a specific functionality. A service instance can be obtained by a {@link sap.ui.core.service.ServiceFactory ServiceFactory} or at a Component via {@link sap.ui.core.Component#getService getService} function.\n\nThis class is the abstract base class for services and needs to be extended: <pre>\nsap.ui.define(\"my/Service\", [\n  \"sap/ui/core/service/Service\"\n], function(Service) {\n\n  return Service.extend(\"my.Service\", {\n\n    init: function() {\n      // handle init lifecycle\n    },\n\n    exit: function() {\n      // handle exit lifecycle\n    },\n\n    doSomething: function() {\n      // some functionality\n    }\n\n });\n\n});\n<\/pre>\n\nA service instance will have a service context: <pre>\n{\n  \"scopeObject\": oComponent, // the Component instance\n  \"scopeType\": \"component\"   // the stereotype of the scopeObject\n}\n<\/pre>\n\nThe service context can be retrieved with the function <code>getContext<\/code>. This function is private to the service instance and will not be exposed via the service interface.\n\nFor consumers of the service it is recommended to provide the service instance only - as e.g. the {@link sap.ui.core.Component#getService getService} function of the Component does. The service interface can be accessed via the <code>getInterface<\/code> function.\n\nOther private functions of the service instance are the lifecycle functions. Currently there are two lifecycle functions: <code>init<\/code> and <code>exit<\/code>. In addition the <code>destroy<\/code> function will also by hidden to avoid the control of the service lifecycle for service interface consumers.","!proto":"sap.ui.base.Object","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.service.Service.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.ListItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.ListItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.ListItem"},"sap.ui.core.util.ExportType":{"generate":{"!description":"Generates the file content.<br> Should be implemented by the individual types!","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.ExportType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setFileExtension":{"!description":"Sets a new value for property {@link #getFileExtension fileExtension}.\n\nFile extension.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sFileExtension: String) -> sap.ui.core.util.ExportType","!category":"function","parameters":{"sFileExtension":"type: string, description: New value for property <code>fileExtension<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new ExportType.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFileExtension fileExtension} : string<\/li>\n<li>{@link #getMimeType mimeType} : string<\/li>\n<li>{@link #getCharset charset} : string<\/li>\n<li>{@link #getByteOrderMark byteOrderMark} : boolean (default: undefined)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","getFileExtension":{"!description":"Gets current value of property {@link #getFileExtension fileExtension}.\n\nFile extension.","!type":"fn() -> String","!category":"function","!static":false},"!module":"sap/ui/core/util/ExportType","getCharset":{"!description":"Gets current value of property {@link #getCharset charset}.\n\nCharset.","!type":"fn() -> String","!category":"function","!static":false},"_generate":{"!description":"Handles the generation process of the file.<br>","!type":"fn(oExport: sap.ui.core.util.Export) -> String","!category":"function","parameters":{"oExport":"type: sap.ui.core.util.Export, description: export instance"},"!static":false},"columnGenerator":{"!description":"Creates a column \"generator\" (inspired by ES6 Generators)","!type":"fn() -> Generator","!category":"function","!static":false},"getColumnCount":{"!description":"Returns the number of columns.","!type":"fn() -> Number","!category":"function","!static":false},"!description":"Base export type. Subclasses can be used for {@link sap.ui.core.util.Export Export}.","setMimeType":{"!description":"Sets a new value for property {@link #getMimeType mimeType}.\n\nMIME type.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sMimeType: String) -> sap.ui.core.util.ExportType","!category":"function","parameters":{"sMimeType":"type: string, description: New value for property <code>mimeType<\/code>"},"!static":false},"getByteOrderMark":{"!description":"Gets current value of property {@link #getByteOrderMark byteOrderMark}.\n\nWhether to prepend an unicode byte order mark when saving as a file (only applies for utf-8 charset).\n\nDefault value is <code>undefined<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"rowGenerator":{"!description":"Creates a row \"generator\" (inspired by ES6 Generators)","!type":"fn() -> Generator","!category":"function","!static":false},"cellGenerator":{"!description":"Creates a cell \"generator\" (inspired by ES6 Generators)","!type":"fn() -> Generator","!category":"function","!static":false},"setByteOrderMark":{"!description":"Sets a new value for property {@link #getByteOrderMark byteOrderMark}.\n\nWhether to prepend an unicode byte order mark when saving as a file (only applies for utf-8 charset).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>undefined<\/code>.","!type":"fn(bByteOrderMark: Boolean) -> sap.ui.core.util.ExportType","!category":"function","parameters":{"bByteOrderMark":"type: boolean, description: New value for property <code>byteOrderMark<\/code>"},"!static":false},"!category":"class","setCharset":{"!description":"Sets a new value for property {@link #getCharset charset}.\n\nCharset.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sCharset: String) -> sap.ui.core.util.ExportType","!category":"function","parameters":{"sCharset":"type: string, description: New value for property <code>charset<\/code>"},"!static":false},"getRowCount":{"!description":"Returns the number of rows.","!type":"fn() -> Number","!category":"function","!static":false},"getMimeType":{"!description":"Gets current value of property {@link #getMimeType mimeType}.\n\nMIME type.","!type":"fn() -> String","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.ExportType.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!helpDescription":"Base export type. Subclasses can be used for {@link sap.ui.core.util.Export Export}.","!proto":"sap.ui.base.ManagedObject"},"sap.ui.test.gherkin.opa5TestHarness":{"!description":"Dynamically generates and executes Opa5 tests based on a Gherkin feature file and step definitions.\n\nLogs activity to Opa5, and some debug information to the console with the prefix \"[GHERKIN]\"","test":{"!description":"Dynamically generates Opa5 tests\n\nIf a test step is missing and args.generateMissingSteps is true then the Gherkin step will be converted into Opa Page Object code and executed. The text will be converted to camelCase and have any non-alphanumeric character removed. Here are two pertinent examples:\n\n(1) The simple step \"Given I start my app\" will be converted into the call \"Given.iStartMyApp();\"\n\n(2) The step \"Then on page 1: I should see the page 1 text\" will become the call \"Then.onPage1.iShouldSeeThePage1Text();\"\n\nChaining function calls, such as \"Then.iStartMyApp().and.iCloseMyApp()\" is not possible at this time.","!type":"fn(args: Object)","!category":"function","!static":"true"},"!category":"namespace","!module":"sap/ui/test/gherkin/opa5TestHarness","!helpDescription":"Dynamically generates and executes Opa5 tests based on a Gherkin feature file and step definitions.\n\nLogs activity to Opa5, and some debug information to the console with the prefix \"[GHERKIN]\""},"sap.ui.model.analytics.odata4analytics.Parameter":{"getTextProperty":{"!description":"Get text property related to this parameter","!type":"fn() -> Object","!category":"function","!static":false},"isLowerIntervalBoundary":{"!description":"Get indicator if the parameter represents the lower boundary of an interval","!type":"fn() -> Boolean","!category":"function","!static":false},"getContainingParameterization":{"!description":"Get parameterization containing this parameter","!type":"fn() -> sap.ui.model.analytics.odata4analytics.Parameterization","!category":"function","!static":false},"!constructorDescription":"Create a representation of a single parameter contained in a parameterization. Do not create your own instances.","!module":"sap/ui/model/analytics/odata4analytics","getURIToValueEntitySet":{"!description":"Get the URI to locate the entity set holding the value set, if it is available.","!type":"fn(sServiceRootURI: String)","!category":"function","parameters":{"sServiceRootURI":"type: String, description: (optional) Identifies the root of the OData service"},"!static":false},"isValueSetAvailable":{"!description":"Get indicator if a set of values is available for this parameter. Typically, this is true for parameters with a finite set of known values such as products, business partners in different roles, organization units, and false for integer or date parameters","!type":"fn() -> Boolean","!category":"function","!static":false},"getLabelText":{"!description":"Get label","!type":"fn() -> String","!category":"function","!static":false},"isOptional":{"!description":"Get indicator whether or not the parameter is optional","!type":"fn() -> Boolean","!category":"function","!static":false},"isIntervalBoundary":{"!description":"Get indicator if the parameter represents an interval boundary","!type":"fn() -> Boolean","!category":"function","!static":false},"getPeerIntervalBoundaryParameter":{"!description":"Get property for the parameter representing the peer boundary of the same interval","!type":"fn() -> sap.ui.model.analytics.odata4analytics.Parameter","!category":"function","!static":false},"!description":"Representation of a property annotated with sap:parameter.","getName":{"!description":"Get the name of the parameter","!type":"fn() -> String","!category":"function","!static":false},"getProperty":{"!description":"Get property","!type":"fn() -> Object","!category":"function","!static":false},"!category":"class","!helpDescription":"Representation of a property annotated with sap:parameter.","!proto":"sap.ui.base.Object"},"sap.ui.model.odata.v4.SubmitMode":{"API":{"!description":"Requests associated with the group ID are sent in a batch request via {@link sap.ui.model.odata.v4.ODataModel#submitBatch}.","!type":"String","!category":"enum"},"Direct":{"!description":"Requests associated with the group ID are sent directly without batch.","!type":"String","!category":"enum"},"!description":"Modes to control the use of batch requests for a group ID.","Auto":{"!description":"Requests associated with the group ID are sent in a batch request which is triggered automatically before rendering.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/ui/model/odata/v4/SubmitMode"},"sap.ui.model.analytics.odata4analytics.EntityType_obj":{"!type":"fn(oModel: Object, oSchema: Object, oEntityType: Object)","prototype":"sap.ui.model.analytics.odata4analytics.EntityType"},"sap.ui.core.Control":{"onAfterRendering":{"!description":"Function is called when the rendering of the control is completed.\n\nApplications must not call this hook method directly, it is called by the framework.\n\nSubclasses of Control should override this hook to implement any necessary actions after the rendering.","!type":"fn()","!category":"function","!static":false},"onBeforeRendering":{"!description":"Function is called before the rendering of the control is started.\n\nApplications must not call this hook method directly, it is called by the framework.\n\nSubclasses of Control should override this hook to implement any necessary actions before the rendering.","!type":"fn()","!category":"function","!static":false},"attachBrowserEvent":{"!description":"Allows binding handlers for any native browser event to the root HTML element of this Control. This internally handles DOM element replacements caused by re-rendering.\n\n<b>IMPORTANT:<\/b><\/br> This should be only used as FALLBACK when the Control events do not cover a specific use-case! Always try using SAPUI5 control events, as e.g. accessibility-related functionality is then provided automatically. E.g. when working with a <code>sap.ui.commons.Button<\/code>, always use the Button's \"press\" event, not the native \"click\" event, because \"press\" is also guaranteed to be fired when certain keyboard activity is supposed to trigger the Button.\n\nIn the event handler, <code>this<\/code> refers to the Control - not to the root DOM element like in jQuery. While the DOM element can be used and modified, the general caveats for working with SAPUI5 control DOM elements apply. In particular the DOM element may be destroyed and replaced by a new one at any time, so modifications that are required to have permanent effect may not be done. E.g. use {@link sap.ui.core.Control.prototype.addStyleClass} instead if the modification is of visual nature.\n\nUse {@link #detachBrowserEvent} to remove the event handler(s) again.","!type":"fn(sEventType?: String, fnHandler?: fn(), oListener?: Object) -> sap.ui.core.Control","!category":"function","parameters":{"sEventType":"type: string, description: A string containing one or more JavaScript event types, such as \"click\" or \"blur\".","fnHandler":"type: function, description: A function to execute each time the event is triggered.","oListener":"type: object, description: The object, that wants to be notified, when the event occurs"},"!static":false},"isBusy":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15 use {@link #getBusy} instead<br>Check if the control is currently in busy state.","!type":"fn()","!category":"function","!static":false},"allowTextSelection":{"!description":"Defines whether the user can select text inside this control. Defaults to <code>true<\/code> as long as this method has not been called.\n\n<b>Note:<\/b>This only works in IE and Safari; for Firefox the element's style must be set to: <pre>\n  -moz-user-select: none;\n<\/pre> in order to prevent text selection.","!type":"fn(bAllow: Boolean) -> sap.ui.core.Control","!category":"function","parameters":{"bAllow":"type: boolean, description: whether to allow text selection or not"},"!static":false},"toggleStyleClass":{"!description":"The string given as \"sStyleClass\" will be be either added to or removed from the \"class\" attribute of this control's root HTML element, depending on the value of \"bAdd\": if bAdd is true, sStyleClass will be added. If bAdd is not given, sStyleClass will be removed if it is currently present and will be added if not present. If sStyleClass is null or empty string, the call is ignored.\n\nSee addStyleClass and removeStyleClass for further documentation.","!type":"fn(sStyleClass: String, bAdd: Boolean) -> sap.ui.core.Control","!category":"function","parameters":{"bAdd":"type: boolean, description: whether sStyleClass should be added (or removed); when this parameter is not given, sStyleClass will be toggled (removed, if present, and added if not present)","sStyleClass":"type: string, description: the CSS class name to be added or removed"},"!static":false},"detachValidateFieldGroup":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:validateFieldGroup validateFieldGroup} event of this <code>sap.ui.core.Control<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.Control","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setFieldGroupIds":{"!description":"Sets a new value for property {@link #getFieldGroupIds fieldGroupIds}.\n\nThe IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is raised.\n\nSee {@link sap.ui.core.Control#attachValidateFieldGroup}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>[]<\/code>.","!type":"fn(sFieldGroupIds: [[object Object]]) -> sap.ui.core.Control","!category":"function","parameters":{"sFieldGroupIds":"type: [object Object][], description: New value for property <code>fieldGroupIds<\/code>"},"!static":false},"hasStyleClass":{"!description":"Returns true if the given style class or all multiple style classes which are generated by splitting the given string with space are already set on the control via previous call(s) to addStyleClass().","!type":"fn(sStyleClass: String) -> Boolean","!category":"function","parameters":{"sStyleClass":"type: string, description: the style to check for"},"!static":false},"!module":"sap/ui/core/Control","getBusyIndicatorSize":{"!description":"Gets current value of property {@link #getBusyIndicatorSize busyIndicatorSize}.\n\nThe size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.\n\nDefault value is <code>Medium<\/code>.","!type":"fn() -> sap.ui.core.BusyIndicatorSize","!category":"function","!static":false},"getBusyIndicatorDelay":{"!description":"Gets current value of property {@link #getBusyIndicatorDelay busyIndicatorDelay}.\n\nThe delay in milliseconds, after which the busy indicator will show up for this control.\n\nDefault value is <code>1000<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"!category":"class","triggerValidateFieldGroup":{"!description":"Triggers the <code>validateFieldGroup<\/code> event for this control.\n\nCalled by <code>sap.ui.core.UIArea<\/code> if a field group should be validated after it lost the focus or when the key combination was pressed that was configured to trigger validation (defined in the UI area member <code>UIArea._oFieldGroupValidationKey<\/code>).\n\nSee {@link #attachValidateFieldGroup}.","!type":"fn()","!category":"function","!static":false},"getControlsByFieldGroupId":{"!description":"Returns a list of all child controls with a field group ID. See {@link #checkFieldGroupIds checkFieldGroupIds} for a description of the <code>vFieldGroupIds<\/code> parameter. Associated controls are not taken into account.","!type":"fn(vFieldGroupIds?: [String | [object Object]]) -> [[object Object]]","!category":"function","parameters":{"vFieldGroupIds":"type: string|[object Object][], description: ID of the field group or an array of field group IDs to match"},"!static":false},"getAccessibilityInfo":{"!description":"This function (if available on the concrete control) provides the current accessibility state of the control.\n\nApplications must not call this hook method directly, it is called by the framework.\n\nSubclasses of Control should implement this hook to provide any necessary accessibility information:\n\n<pre>\nMyControl.prototype.getAccessibilityInfo = function() {\n   return {\n     role: \"textbox\",      // String which represents the WAI-ARIA role which is implemented by the control.\n     type: \"date input\",   // String which represents the control type (Must be a translated text). Might correlate with\n                           // the role.\n     description: \"value\", // String which describes the most relevant control state (e.g. the inputs value). Must be a\n                           // translated text.\n                           // Note: The type and the enabled/editable state must not be handled here.\n     focusable: true,      // Boolean which describes whether the control can get the focus.\n     enabled: true,        // Boolean which describes whether the control is enabled. If not relevant it must not be set or\n                           // <code>null<\/code> can be provided.\n     editable: true,       // Boolean which describes whether the control is editable. If not relevant it must not be set or\n                           // <code>null<\/code> can be provided.\n     children: []          // Aggregations of the given control (e.g. when the control is a layout). Primitive aggregations will be ignored.\n                           // Note: Children should only be provided when it is helpful to understand the accessibility context\n                           //       (e.g. a form control must not provide details of its internals (fields, labels, ...) but a\n                           //       layout should).\n   };\n};\n<\/pre>\n\nNote: The returned object provides the accessibility state of the control at the point in time when this function is called.","!type":"fn() -> Object","!category":"function","!static":false},"clone":{"!description":"Overrides {@link sap.ui.core.Element#clone Element.clone} to clone additional internal state.\n\nThe additionally cloned information contains: <ul> <li>browser event handlers attached with {@link #attachBrowserEvent}<\/li> <li>text selection behavior<\/li> <li>style classes added with {@link #addStyleClass}<\/li> <\/ul>","!type":"fn(sIdSuffix?: String, aLocalIds?: [[object Object]]) -> sap.ui.core.Element","!category":"function","parameters":{"aLocalIds":"type: [object Object][], description: an array of local IDs within the cloned hierarchy (internally used)","sIdSuffix":"type: string, description: a suffix to be appended to the cloned element id"},"!static":false},"getFieldGroupIds":{"!description":"Returns a copy of the field group IDs array. Modification of the field group IDs need to call {@link #setFieldGroupIds setFieldGroupIds} to apply the changes.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"setBusyIndicatorSize":{"!description":"Sets a new value for property {@link #getBusyIndicatorSize busyIndicatorSize}.\n\nThe size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Medium<\/code>.","!type":"fn(sBusyIndicatorSize: sap.ui.core.BusyIndicatorSize) -> sap.ui.core.Control","!category":"function","parameters":{"sBusyIndicatorSize":"type: sap.ui.core.BusyIndicatorSize, description: New value for property <code>busyIndicatorSize<\/code>"},"!static":false},"removeStyleClass":{"!description":"Removes the given string from the list of custom style classes that have been set previously. Regular style classes like \"sapUiBtn\" cannot be removed.","!type":"fn(sStyleClass: String) -> sap.ui.core.Control","!category":"function","parameters":{"sStyleClass":"type: string, description: the style to be removed"},"!static":false},"detachBrowserEvent":{"!description":"Removes event handlers which have been previously attached using {@link #attachBrowserEvent}.\n\nNote: listeners are only removed, if the same combination of event type, callback function and context object is given as in the call to <code>attachBrowserEvent<\/code>.","!type":"fn(sEventType?: String, fnHandler?: fn(), oListener?: Object)","!category":"function","parameters":{"sEventType":"type: string, description: A string containing one or more JavaScript event types, such as \"click\" or \"blur\".","fnHandler":"type: function, description: The function that is to be no longer executed.","oListener":"type: object, description: The context object that was given in the call to <code>attachBrowserEvent<\/code>."},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.Control with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"fireValidateFieldGroup":{"!description":"Fires event {@link #event:validateFieldGroup validateFieldGroup} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.core.Control","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getBusy":{"!description":"Gets current value of property {@link #getBusy busy}.\n\nWhether the control is currently in busy state.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setVisible":{"!description":"Sets a new value for property {@link #getVisible visible}.\n\nWhether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nSee {@link sap.ui.core.RenderManager#writeInvisiblePlaceholderData RenderManager#writeInvisiblePlaceholderData} for details.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisible: Boolean) -> sap.ui.core.Control","!category":"function","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"},"!static":false},"setBusyIndicatorDelay":{"!description":"Define the delay, after which the busy indicator will show up.","!type":"fn(iDelay: Number) -> sap.ui.core.Control","!category":"function","parameters":{"iDelay":"type: int, description: The delay in ms"},"!static":false},"rerender":{"!description":"Tries to replace its DOM reference by re-rendering.","!type":"fn()","!category":"function","!static":false},"!constructorDescription":"Creates and initializes a new control with the given <code>sId<\/code> and settings.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getBusy busy} : boolean (default: false)<\/li>\n<li>{@link #getBusyIndicatorDelay busyIndicatorDelay} : int (default: 1000)<\/li>\n<li>{@link #getBusyIndicatorSize busyIndicatorSize} : sap.ui.core.BusyIndicatorSize (default: Medium)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getFieldGroupIds fieldGroupIds} : string[] (default: [])<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:validateFieldGroup validateFieldGroup} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","invalidate":{"!description":"Triggers rerendering of this element and its children.\n\nAs <code>sap.ui.core.Element<\/code> \"bubbles up\" the invalidate, changes to children potentially result in rerendering of the whole sub tree.\n\nThe <code>oOrigin<\/code> parameter was introduced to allow parent controls to limit their rerendering to certain areas that have been invalidated by their children. As there is no strong guideline for control developers to provide the parameter, it is not a reliable source of information. It is therefore not recommended in general to use it, only in scenarios where a control and its descendants know each other very well (e.g. complex controls where parent and children have the same code owner).","!type":"fn(oOrigin?: sap.ui.base.ManagedObject)","!category":"function","parameters":{"oOrigin":"type: sap.ui.base.ManagedObject, description: Child control for which the method was called"},"!static":false},"checkFieldGroupIds":{"!description":"Returns whether the control has a given field group. If <code>vFieldGroupIds<\/code> is not given it checks whether at least one field group ID is given for this control. If <code>vFieldGroupIds<\/code> is an empty array or empty string, true is returned if there is no field group ID set for this control. If <code>vFieldGroupIds<\/code> is a string array or a string all expected field group IDs are checked and true is returned if all are contained for given for this control. The comma delimiter can be used to separate multiple field group IDs in one string.","!type":"fn(vFieldGroupIds?: [String | [object Object]]) -> Boolean","!category":"function","parameters":{"vFieldGroupIds":"type: string|[object Object][], description: ID of the field group or an array of field group IDs to match"},"!static":false},"getRenderer":{"!description":"Returns a renderer for this control instance.\n\nIt is retrieved using the RenderManager as done during rendering.","!type":"fn() -> Object","!category":"function","!static":false},"placeAt":{"!description":"Puts <code>this<\/code> control into the specified container (<code>oRef<\/code>) at the given position (<code>oPosition<\/code>).\n\nFirst it is checked whether <code>oRef<\/code> is a container element / control (has a multiple aggregation with type <code>sap.ui.core.Control<\/code> and name 'content') or is an Id String of such a container. If this is not the case <code>oRef<\/code> can either be a Dom Reference or Id String of the UIArea (if it does not yet exist implicitly a new UIArea is created),\n\nThe <code>oPosition<\/code> can be one of the following:\n\n<ul> <li>\"first\": The control is added as the first element to the container.<\/li> <li>\"last\": The control is added as the last element to the container (default).<\/li> <li>\"only\": All existing children of the container are removed (not destroyed!) and the control is added as new child.<\/li> <li><i>index<\/i>: The control is added at the specified <i>index<\/i> to the container.<\/li> <\/ul>","!type":"fn(oRef: String | Element | sap.ui.core.Control, vPosition?: String | Number) -> sap.ui.core.Control","!category":"function","parameters":{"vPosition":"type: string|int, description: Describes the position where the control should be put into the container","oRef":"type: string|Element|sap.ui.core.Control, description: container into which the control should be put"},"!static":false},"getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nWhether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nSee {@link sap.ui.core.RenderManager#writeInvisiblePlaceholderData RenderManager#writeInvisiblePlaceholderData} for details.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"Base Class for Controls.\n\nControls provide the following features: <ul> <li><b>Rendering<\/b>: the <code>RenderManager<\/code> only expects instances of class <code>Control<\/code> in its {@link sap.ui.core.RenderManager#renderControl renderControl} method. By convention, each control class has an associated static class that takes care of rendering the control (its 'Renderer').<\/li> <li><b>show / hide<\/b>: a control can be hidden, although it is still part of the control tree, see property {@link #getVisible visible}<\/li> <li><b>local busy indicator<\/b>: marks a control visually as 'busy', see properties {@link #getBusy busy} and {@link #getBusyIndicatorDelay busyIndicatorDelay}<\/li> <li><b>field groups<\/b>: by assigning the same group ID to a set of editable controls, they form a group which can be validated together. See property {@link #getFieldGroupIds fieldGroupIds} and event {@link #event:validateFieldGroup validateFieldGroup}. The term <i>field<\/i> was chosen as most often this feature will be used to group editable fields in a form.<\/li> <li><b>custom style classes<\/b>: all controls allow to add custom CSS classes to their rendered DOM without modifying their renderer code. See methods {@link #addStyleClass addStyleClass}, {@link #removeStyleClass removeStyleClass}, {@link #toggleStyleClass toggleStyleClass} and {@link #hasStyleClass hasStyleClass}.<\/br> The necessary implementation is encapsulated in {@link sap.ui.core.CustomStyleClassSupport CustomStyleClassSupport} and can be applied to selected element classes as well.<\/li> <li><b>browser events<\/b>: by calling the methods {@link #attachBrowserEvent attachBrowserEvent} and {@link #detachBrowserEvent detachBrowserEvent}, consumers can let the control class take care of registering / de-registering a given set of event listeners to the control's root DOM node. The framework will adapt the registration whenever the DOM node changes (e.g. before or after rendering or when the control is destroyed).<\/li> <\/ul>\n\nSee section \"{@link topic:91f1703b6f4d1014b6dd926db0e91070 Developing OpenUI5/SAPUI5 Controls}\" in the documentation for an introduction to control development.","addStyleClass":{"!description":"The string given as \"sStyleClass\" will be added to the \"class\" attribute of this control's root HTML element.\n\nThis method is intended to be used to mark controls as being of a special type for which special styling can be provided using CSS selectors that reference this style class name.\n\n<pre>\nExample:\n   myButton.addStyleClass(\"myRedTextButton\"); // add a CSS class to one button instance\n\n...and in CSS:\n   .myRedTextButton {\n      color: red;\n   }\n<\/pre>\n\nThis will add the CSS class \"myRedTextButton\" to the Button HTML and the CSS code above will then make the text in this particular button red.\n\nOnly characters allowed inside HTML attributes are allowed. Quotes are not allowed and this method will ignore any strings containing quotes. Strings containing spaces are interpreted as multiple custom style classes which are split by space and can be removed individually later by calling removeStyleClass. Multiple calls with the same sStyleClass will have no different effect than calling once. If sStyleClass is null, empty string or it contains quotes, the call is ignored.","!type":"fn(sStyleClass: String) -> sap.ui.core.Control","!category":"function","parameters":{"sStyleClass":"type: string, description: the CSS class name to be added"},"!static":false},"setBusy":{"!description":"Set the controls busy state.","!type":"fn(bBusy: Boolean) -> sap.ui.core.Control","!category":"function","parameters":{"bBusy":"type: boolean, description: The new busy state to be set"},"!static":false},"attachValidateFieldGroup":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:validateFieldGroup validateFieldGroup} event of this <code>sap.ui.core.Control<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.core.Control<\/code> itself.\n\nEvent is fired if a logical field group defined by <code>fieldGroupIds<\/code> of a control was left or the user explicitly pressed a key combination that triggers validation.\n\nListen to this event to validate data of the controls belonging to a field group. See {@link sap.ui.core.Control#setFieldGroupIds}.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.Control","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.core.Control<\/code> itself"},"!static":false},"getIdForLabel":{"!description":"Returns the DOMNode Id to be used for the \"labelFor\" attribute of the label.\n\nBy default, this is the Id of the control itself.","!type":"fn() -> String","!category":"function","!static":false},"!proto":"sap.ui.core.Element","!helpDescription":"Base Class for Controls.\n\nControls provide the following features: <ul> <li><b>Rendering<\/b>: the <code>RenderManager<\/code> only expects instances of class <code>Control<\/code> in its {@link sap.ui.core.RenderManager#renderControl renderControl} method. By convention, each control class has an associated static class that takes care of rendering the control (its 'Renderer').<\/li> <li><b>show / hide<\/b>: a control can be hidden, although it is still part of the control tree, see property {@link #getVisible visible}<\/li> <li><b>local busy indicator<\/b>: marks a control visually as 'busy', see properties {@link #getBusy busy} and {@link #getBusyIndicatorDelay busyIndicatorDelay}<\/li> <li><b>field groups<\/b>: by assigning the same group ID to a set of editable controls, they form a group which can be validated together. See property {@link #getFieldGroupIds fieldGroupIds} and event {@link #event:validateFieldGroup validateFieldGroup}. The term <i>field<\/i> was chosen as most often this feature will be used to group editable fields in a form.<\/li> <li><b>custom style classes<\/b>: all controls allow to add custom CSS classes to their rendered DOM without modifying their renderer code. See methods {@link #addStyleClass addStyleClass}, {@link #removeStyleClass removeStyleClass}, {@link #toggleStyleClass toggleStyleClass} and {@link #hasStyleClass hasStyleClass}.<\/br> The necessary implementation is encapsulated in {@link sap.ui.core.CustomStyleClassSupport CustomStyleClassSupport} and can be applied to selected element classes as well.<\/li> <li><b>browser events<\/b>: by calling the methods {@link #attachBrowserEvent attachBrowserEvent} and {@link #detachBrowserEvent detachBrowserEvent}, consumers can let the control class take care of registering / de-registering a given set of event listeners to the control's root DOM node. The framework will adapt the registration whenever the DOM node changes (e.g. before or after rendering or when the control is destroyed).<\/li> <\/ul>\n\nSee section \"{@link topic:91f1703b6f4d1014b6dd926db0e91070 Developing OpenUI5/SAPUI5 Controls}\" in the documentation for an introduction to control development.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.Control.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.format.ListFormat":{"!description":"The ListFormat is a static class for formatting and parsing an array of strings in a locale-sensitive manner according to a set of format options.","!category":"class","format":{"!description":"Formats a list according to the given format options.","!type":"fn(aList: Array) -> String","!category":"function","parameters":{"aList":"type: array, description: The value to format"},"!static":false},"!constructorDescription":"Constructor for ListFormat - must not be used: To get a ListFormat instance, please use getInstance.","!module":"sap/ui/core/format/ListFormat","!proto":"sap.ui.base.Object","!helpDescription":"The ListFormat is a static class for formatting and parsing an array of strings in a locale-sensitive manner according to a set of format options."},"sap.ui.base.DataType_obj":{"!type":"fn()","prototype":"sap.ui.base.DataType"},"sap.ui.core.search.OpenSearchProvider":{"getSuggestUrl":{"!description":"Gets current value of property {@link #getSuggestUrl suggestUrl}.\n\nThe URL for suggestions of the search provider. As placeholder for the concrete search queries '{searchTerms}' must be used. For cross domain requests maybe a proxy must be used.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.search.OpenSearchProvider with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.search.SearchProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new search/OpenSearchProvider.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSuggestUrl suggestUrl} : sap.ui.core.URI<\/li>\n<li>{@link #getSuggestType suggestType} : string (default: json)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.search.SearchProvider#constructor sap.ui.core.search.SearchProvider}\ncan be used as well.","setSuggestType":{"!description":"Sets a new value for property {@link #getSuggestType suggestType}.\n\nThe type of data which is provided by the given suggestUrl: either 'json' or 'xml'.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>json<\/code>.","!type":"fn(sSuggestType: String) -> sap.ui.core.search.OpenSearchProvider","!category":"function","parameters":{"sSuggestType":"type: string, description: New value for property <code>suggestType<\/code>"},"!static":false},"suggest":{"!description":"Call this function to get suggest values from the search provider. The given callback function is called with the suggest value (type 'string', 1st parameter) and an array of the suggestions (type '[string]', 2nd parameter).","!type":"fn(sValue: String, fCallback: fn())","!category":"function","parameters":{"fCallback":"type: function, description: The callback function which is called when the suggestions are available.","sValue":"type: string, description: The value for which suggestions are requested."},"!static":false},"!module":"sap/ui/core/search/OpenSearchProvider","!description":"A SearchProvider which uses the OpenSearch protocol (either JSON or XML).","!category":"class","getSuggestType":{"!description":"Gets current value of property {@link #getSuggestType suggestType}.\n\nThe type of data which is provided by the given suggestUrl: either 'json' or 'xml'.\n\nDefault value is <code>json<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"setSuggestUrl":{"!description":"Sets a new value for property {@link #getSuggestUrl suggestUrl}.\n\nThe URL for suggestions of the search provider. As placeholder for the concrete search queries '{searchTerms}' must be used. For cross domain requests maybe a proxy must be used.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSuggestUrl: sap.ui.core.URI) -> sap.ui.core.search.OpenSearchProvider","!category":"function","parameters":{"sSuggestUrl":"type: sap.ui.core.URI, description: New value for property <code>suggestUrl<\/code>"},"!static":false},"!helpDescription":"A SearchProvider which uses the OpenSearch protocol (either JSON or XML).","!proto":"sap.ui.core.search.SearchProvider","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.search.OpenSearchProvider.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.PopupInterface":{"!description":"Marker interface for controls that are not rendered \"embedded\" into other controls but need to be opened/closed.\n\nSuch controls are handled differently during rendering.","!category":"static class","!module":"sap/ui/core/library"},"sap.ui.model.type.TimeInterval":{"!description":"This class represents the Time interval composite type.","extend":{"!description":"Creates a new subclass of class sap.ui.model.type.TimeInterval with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.type.DateInterval.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a Time interval type.","!module":"sap/ui/model/type/TimeInterval","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.type.TimeInterval.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.type.DateInterval","!helpDescription":"This class represents the Time interval composite type."},"sap.ui.Device.media.RANGESETS":{"!description":"Enumeration containing the names and settings of predefined screen width media query range sets.","SAP_6STEPS":{"!description":"A 6-step range set (XS-XXL).\n\nThe ranges of this set are: <ul> <li><code>\"XS\"<\/code>: For screens smaller than 241 pixels.<\/li> <li><code>\"S\"<\/code>: For screens greater than or equal to 241 pixels and smaller than 400 pixels.<\/li> <li><code>\"M\"<\/code>: For screens greater than or equal to 400 pixels and smaller than 541 pixels.<\/li> <li><code>\"L\"<\/code>: For screens greater than or equal to 541 pixels and smaller than 768 pixels.<\/li> <li><code>\"XL\"<\/code>: For screens greater than or equal to 768 pixels and smaller than 960 pixels.<\/li> <li><code>\"XXL\"<\/code>: For screens greater than or equal to 960 pixels.<\/li> <\/ul>\n\nTo use this range set, you must initialize it explicitly ({@link sap.ui.Device.media.initRangeSet}).\n\nIf this range set is initialized, a CSS class is added to the page root (<code>html<\/code> tag) which indicates the current screen width range: <code>sapUiMedia-6Step-<i>NAME_OF_THE_INTERVAL<\/i><\/code>.","!type":"String","!category":"enum"},"SAP_4STEPS":{"!description":"A 4-step range set (S-XL).\n\nThe ranges of this set are: <ul> <li><code>\"S\"<\/code>: For screens smaller than 520 pixels.<\/li> <li><code>\"M\"<\/code>: For screens greater than or equal to 520 pixels and smaller than 760 pixels.<\/li> <li><code>\"L\"<\/code>: For screens greater than or equal to 760 pixels and smaller than 960 pixels.<\/li> <li><code>\"XL\"<\/code>: For screens greater than or equal to 960 pixels.<\/li> <\/ul>\n\nTo use this range set, you must initialize it explicitly ({@link sap.ui.Device.media.initRangeSet}).\n\nIf this range set is initialized, a CSS class is added to the page root (<code>html<\/code> tag) which indicates the current screen width range: <code>sapUiMedia-4Step-<i>NAME_OF_THE_INTERVAL<\/i><\/code>.","!type":"String","!category":"enum"},"SAP_3STEPS":{"!description":"A 3-step range set (S-L).\n\nThe ranges of this set are: <ul> <li><code>\"S\"<\/code>: For screens smaller than 520 pixels.<\/li> <li><code>\"M\"<\/code>: For screens greater than or equal to 520 pixels and smaller than 960 pixels.<\/li> <li><code>\"L\"<\/code>: For screens greater than or equal to 960 pixels.<\/li> <\/ul>\n\nTo use this range set, you must initialize it explicitly ({@link sap.ui.Device.media.initRangeSet}).\n\nIf this range set is initialized, a CSS class is added to the page root (<code>html<\/code> tag) which indicates the current screen width range: <code>sapUiMedia-3Step-<i>NAME_OF_THE_INTERVAL<\/i><\/code>.","!type":"String","!category":"enum"},"!category":"namespace","SAP_STANDARD":{"!description":"A 3-step range set (Phone, Tablet, Desktop).\n\nThe ranges of this set are: <ul> <li><code>\"Phone\"<\/code>: For screens smaller than 600 pixels.<\/li> <li><code>\"Tablet\"<\/code>: For screens greater than or equal to 600 pixels and smaller than 1024 pixels.<\/li> <li><code>\"Desktop\"<\/code>: For screens greater than or equal to 1024 pixels.<\/li> <\/ul>\n\nThis range set is initialized by default. An initialization via {@link sap.ui.Device.media.initRangeSet} is not needed.\n\nA CSS class is added to the page root (<code>html<\/code> tag) which indicates the current screen width range: <code>sapUiMedia-Std-<i>NAME_OF_THE_INTERVAL<\/i><\/code>. Furthermore there are 5 additional CSS classes to hide elements based on the width of the screen: <ul> <li><code>sapUiHideOnPhone<\/code>: Will be hidden if the screen has 600px or more<\/li> <li><code>sapUiHideOnTablet<\/code>: Will be hidden if the screen has less than 600px or more than 1023px<\/li> <li><code>sapUiHideOnDesktop<\/code>: Will be hidden if the screen is smaller than 1024px<\/li> <li><code>sapUiVisibleOnlyOnPhone<\/code>: Will be visible if the screen has less than 600px<\/li> <li><code>sapUiVisibleOnlyOnTablet<\/code>: Will be visible if the screen has 600px or more but less than 1024px<\/li> <li><code>sapUiVisibleOnlyOnDesktop<\/code>: Will be visible if the screen has 1024px or more<\/li> <\/ul>","!type":"String","!category":"enum"},"SAP_STANDARD_EXTENDED":{"!description":"A 4-step range set (Phone, Tablet, Desktop, LargeDesktop).\n\nThe ranges of this set are: <ul> <li><code>\"Phone\"<\/code>: For screens smaller than 600 pixels.<\/li> <li><code>\"Tablet\"<\/code>: For screens greater than or equal to 600 pixels and smaller than 1024 pixels.<\/li> <li><code>\"Desktop\"<\/code>: For screens greater than or equal to 1024 pixels and smaller than 1440 pixels.<\/li> <li><code>\"LargeDesktop\"<\/code>: For screens greater than or equal to 1440 pixels.<\/li> <\/ul>\n\nThis range set is initialized by default. An initialization via {@link sap.ui.Device.media.initRangeSet} is not needed.\n\nA CSS class is added to the page root (<code>html<\/code> tag) which indicates the current screen width range: <code>sapUiMedia-StdExt-<i>NAME_OF_THE_INTERVAL<\/i><\/code>.","!type":"String","!category":"enum"},"!module":"sap/ui/Device","!helpDescription":"Enumeration containing the names and settings of predefined screen width media query range sets."},"sap.ui.core.dnd.DropLayout":{"!description":"Configuration options for the layout of the droppable controls.","Vertical":{"!description":"Droppable controls are arranged vertically.","!type":"String","!category":"enum"},"!category":"static class","Horizontal":{"!description":"Droppable controls are arranged horizontally.","!type":"String","!category":"enum"},"!module":"sap/ui/core/library"},"sap.ui.model.json.JSONModel":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.json.JSONModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.ClientModel.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setJSON":{"!description":"Sets the JSON encoded string data to the model.","!type":"fn(sJSONText: String, bMerge?: Boolean)","!category":"function","parameters":{"bMerge":"type: boolean, description: whether to merge the data instead of replacing it","sJSONText":"type: string, description: the string data to set on the model"},"!static":false},"setProperty":{"!description":"Sets a new value for the given property <code>sPropertyName<\/code> in the model. If the model value changed all interested parties are informed.","!type":"fn(sPath: String, oValue: Object, oContext?: Object, bAsyncUpdate?: Boolean) -> Boolean","!category":"function","parameters":{"oValue":"type: any, description: value to set the property to","bAsyncUpdate":"type: boolean, description: whether to update other bindings dependent on this property asynchronously","sPath":"type: string, description: path of the property to set","oContext":"type: object, description: the context which will be used to set the property"},"!static":false},"!constructorDescription":"Constructor for a new JSONModel.\n\nThe observation feature is experimental! When observation is activated, the application can directly change the\nJS objects without the need to call setData, setProperty or refresh. Observation does only work for existing\nproperties in the JSON, it cannot detect new properties or new array entries.","!module":"sap/ui/model/json/JSONModel","setData":{"!description":"Sets the JSON encoded data to the model.","!type":"fn(oData: Object, bMerge?: Boolean)","!category":"function","parameters":{"bMerge":"type: boolean, description: whether to merge the data instead of replacing it","oData":"type: object, description: the data to set on the model"},"!static":false},"!description":"Model implementation for JSON format","getProperty":{"!description":"Returns the value for the property with the given <code>sPropertyName<\/code>","!type":"fn(sPath: String, oContext?: sap.ui.model.Context) -> Object","!category":"function","parameters":{"sPath":"type: string, description: the path to the property","oContext":"type: sap.ui.model.Context, description: the context which will be used to retrieve the property"},"!static":false},"!category":"class","getJSON":{"!description":"Serializes the current JSON data of the model into a string. Note: May not work in Internet Explorer 8 because of lacking JSON support (works only if IE 8 mode is enabled)","!type":"fn() -> String","!category":"function","!static":false},"loadData":{"!description":"Load JSON-encoded data from the server using a GET HTTP request and store the resulting JSON data in the model. Note: Due to browser security restrictions, most \"Ajax\" requests are subject to the same origin policy, the request can not successfully retrieve data from a different domain, subdomain, or protocol.","!type":"fn(sURL: String, oParameters?: Object | String, bAsync?: Boolean, sType?: String, bMerge?: Boolean, bCache?: String, mHeaders?: Object)","!category":"function","parameters":{"bCache":"type: string, description: force no caching if false. Default is false","bAsync":"type: boolean, description: By default, all requests are sent asynchronous (i.e. this is set to true by default). If you need synchronous requests, set this option to false. Cross-domain requests do not support synchronous operation. Note that synchronous requests may temporarily lock the browser, disabling any actions while the request is active.","sURL":"type: string, description: A string containing the URL to which the request is sent.","bMerge":"type: boolean, description: whether the data should be merged instead of replaced","oParameters":"type: object|string, description: A map or string that is sent to the server with the request. Data that is sent to the server is appended to the URL as a query string. If the value of the data parameter is an object (map), it is converted to a string and url-encoded before it is appended to the URL.","mHeaders":"type: object, description: An object of additional header key/value pairs to send along with the request","sType":"type: string, description: The type of request to make (\"POST\" or \"GET\"), default is \"GET\". Note: Other HTTP request methods, such as PUT and DELETE, can also be used here, but they are not supported by all browsers."},"!static":false},"!helpDescription":"Model implementation for JSON format","!proto":"sap.ui.model.ClientModel","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.json.JSONModel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.model.TreeBindingAdapter_obj":{"!type":"fn()","prototype":"sap.ui.model.TreeBindingAdapter"},"sap.ui.core.Message":{"setReadOnly":{"!description":"Sets a new value for property {@link #getReadOnly readOnly}.\n\nDetermines whether the message should be read only. This helps the application to handle a message a different way if the application differentiates between read-only and common messages.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bReadOnly: Boolean) -> sap.ui.core.Message","!category":"function","parameters":{"bReadOnly":"type: boolean, description: New value for property <code>readOnly<\/code>"},"!static":false},"setLevel":{"!description":"Sets a new value for property {@link #getLevel level}.\n\nSetting the message's level.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>None<\/code>.","!type":"fn(sLevel: sap.ui.core.MessageType) -> sap.ui.core.Message","!category":"function","parameters":{"sLevel":"type: sap.ui.core.MessageType, description: New value for property <code>level<\/code>"},"!static":false},"setTimestamp":{"!description":"Sets a new value for property {@link #getTimestamp timestamp}.\n\nMessage's timestamp. It is just a simple String that will be used without any transformation. So the application that uses messages needs to format the timestamp to its own needs.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTimestamp: String) -> sap.ui.core.Message","!category":"function","parameters":{"sTimestamp":"type: string, description: New value for property <code>timestamp<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.Message with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getDefaultIcon":{"!description":"Returns the icon's default URI depending on given size.\n\nThere are default icons for messages available that can be used this way. If no parameter is given, the size will be 16x16 per default. If larger icons are needed, the parameter \"32x32\" might be given.","!type":"fn(sSize: String) -> sap.ui.core.URI","!category":"function","parameters":{"sSize":"type: string, description: If parameter is not set the default icon's size will be 16x16. If parameter is set to \"32x32\" the icon size will be 32x32."},"!static":false},"!constructorDescription":"Constructor for a new Message.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getTimestamp timestamp} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getLevel level} : sap.ui.core.MessageType (default: None)<\/li>\n<li>{@link #getReadOnly readOnly} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nMessage text\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sText: String) -> sap.ui.core.Message","!category":"function","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"},"!static":false},"!module":"sap/ui/core/Message","getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nA possible icon URI of the message","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nMessage text","!type":"fn() -> String","!category":"function","!static":false},"getTimestamp":{"!description":"Gets current value of property {@link #getTimestamp timestamp}.\n\nMessage's timestamp. It is just a simple String that will be used without any transformation. So the application that uses messages needs to format the timestamp to its own needs.","!type":"fn() -> String","!category":"function","!static":false},"!description":"This element used to provide messages. Rendering must be done within the control that uses this kind of element.\n\nIts default level is none.","compareByType":{"!description":"Compares two given messages with each other.\n\nThe types of {@link sap.ui.core.MessageType} are ordered from \"Error\" > \"Warning\" > \"Success\" > \"Information\" > \"None\".","!type":"fn(oOther: sap.ui.core.Message, oMessage1: sap.ui.core.Message, oMessage2: sap.ui.core.Message) -> Number","!category":"function","parameters":{"oMessage1":"type: sap.ui.core.Message, description: first message to compare","oMessage2":"type: sap.ui.core.Message, description: second message to compare"},"!static":true},"!category":"class","getReadOnly":{"!description":"Gets current value of property {@link #getReadOnly readOnly}.\n\nDetermines whether the message should be read only. This helps the application to handle a message a different way if the application differentiates between read-only and common messages.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nA possible icon URI of the message\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.core.Message","!category":"function","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"},"!static":false},"getLevel":{"!description":"Gets current value of property {@link #getLevel level}.\n\nSetting the message's level.\n\nDefault value is <code>None<\/code>.","!type":"fn() -> sap.ui.core.MessageType","!category":"function","!static":false},"!helpDescription":"This element used to provide messages. Rendering must be done within the control that uses this kind of element.\n\nIts default level is none.","!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.Message.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.routing.HashChanger":{"getHash":{"!description":"Gets the current hash","!type":"fn() -> String","!category":"function","!static":false},"replaceHashChanger":{"!description":"Sets the hashChanger to a new instance, destroys the old one and copies all its event listeners to the new one","!type":"fn(oHashChanger: sap.ui.core.routing.HashChanger)","!category":"function","parameters":{"oHashChanger":"type: sap.ui.core.routing.HashChanger, description: the new instance for the global singleton"},"!static":true},"extend":{"!description":"Creates a new subclass of class sap.ui.core.routing.HashChanger with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setHash":{"!description":"Sets the hash to a certain value. When using the set function a browser history entry is written. If you do not want to have an entry in the browser history, please use set replaceHash function.","!type":"fn(sHash: String)","!category":"function","parameters":{"sHash":"type: string, description: the hash"},"!static":false},"init":{"!description":"Will start listening to hashChanges with the parseHash function. This will also fire a hashchanged event with the initial hash.","!type":"fn()","!category":"function","!static":false},"!module":"sap/ui/core/routing/HashChanger","getInstance":{"!description":"Gets a global singleton of the HashChanger. The singleton will get created when this function is invoked for the first time.","!type":"fn()","!category":"function","!static":true},"replaceHash":{"!description":"Replaces the hash to a certain value. When using the replace function no browser history is written. If you want to have an entry in the browser history, please use set setHash function.","!type":"fn(sHash: String)","!category":"function","parameters":{"sHash":"type: string, description: the hash"},"!static":false},"destroy":{"!description":"Cleans the event registration","!type":"fn()","!category":"function","!static":false},"!description":"Class for manipulating and receiving changes of the browserhash with the hasher framework. Fires a \"hashChanged\" event if the browser hash changes.","fireHashChanged":{"!description":"Fires the hashchanged event, may be extended to modify the hash before fireing the event","!type":"fn(newHash: String, oldHash: String)","!category":"function","parameters":{"newHash":"type: string, description: the new hash of the browser","oldHash":"type: string, description: the previous hash"},"!static":false},"!category":"class","!helpDescription":"Class for manipulating and receiving changes of the browserhash with the hasher framework. Fires a \"hashChanged\" event if the browser hash changes.","!proto":"sap.ui.base.EventProvider","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.routing.HashChanger.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.model.odata.ODataListBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.ODataListBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.ListBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oModel: sap.ui.model.odata.ODataModel, sPath: String, oContext: sap.ui.model.Context, aSorters?: Array, aFilters?: Array, mParameters?: Object)","prototype":"sap.ui.model.odata.ODataListBinding"},"sap.ui.model.odata.type.Raw":{"!description":"This class represents a placeholder for all unsupported OData primitive types. It can only be used to retrieve raw values \"as is\" (i.e. <code>formatValue(vValue, \"any\")<\/code>), but not to actually convert to or from any other representation or to validate.","validateValue":{"!description":"Method not supported","!type":"fn()","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Raw with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function","!static":false},"formatValue":{"!description":"Formats the given value to the given target type.","!type":"fn(vValue: Object, sTargetType: String) -> Object","!category":"function","parameters":{"vValue":"type: any, description: The raw value to be retrieved \"as is\"","sTargetType":"type: string, description: The target type; must be \"any\""},"!static":false},"!category":"class","!constructorDescription":"Constructor for a placeholder for all unsupported OData primitive types.","!module":"sap/ui/model/odata/type/Raw","parseValue":{"!description":"Method not supported","!type":"fn()","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.Raw.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.odata.type.ODataType","!helpDescription":"This class represents a placeholder for all unsupported OData primitive types. It can only be used to retrieve raw values \"as is\" (i.e. <code>formatValue(vValue, \"any\")<\/code>), but not to actually convert to or from any other representation or to validate."},"jQuery.sap.storage.Type":{"!description":"Enumeration of the storage types supported by {@link jQuery.sap.storage.Storage}","session":{"!description":"Indicates usage of the browser's sessionStorage feature","!type":"String","!category":"enum"},"global":{"!description":"Indicates usage of the browser's globalStorage feature","!type":"String","!category":"enum"},"!category":"static class","local":{"!description":"Indicates usage of the browser's localStorage feature","!type":"String","!category":"enum"},"!module":"jquery.sap.storage"},"sap.ui.core.mvc.JSONView":{"!description":"A View defined using JSON.","extend":{"!description":"Creates a new subclass of class sap.ui.core.mvc.JSONView with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.mvc.View.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new mvc/JSONView.","!module":"sap/ui/core/mvc/JSONView","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.mvc.JSONView.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.mvc.View","!helpDescription":"A View defined using JSON."},"sap.ui.model.type.Float":{"!description":"This class represents float simple types.","extend":{"!description":"Creates a new subclass of class sap.ui.model.type.Float with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a Float type.","!module":"sap/ui/model/type/Float","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.type.Float.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.SimpleType","!helpDescription":"This class represents float simple types."},"sap.ui.model.ValidateException":{"!description":"Instances of this exception are thrown when a validation error occurs while checking the defined constraints for a type.","!category":"class","!constructorDescription":"Creates a new ValidateException.","!module":"sap/ui/model/ValidateException","!proto":"sap.ui.base.Object","!helpDescription":"Instances of this exception are thrown when a validation error occurs while checking the defined constraints for a type."},"sap.ui.test.matchers.Matcher_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.test.matchers.Matcher with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.test.matchers.Matcher"},"sap.ui.core.message.Message_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.message.Message with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(mParameters?: Object)","prototype":"sap.ui.core.message.Message"},"sap.ui.core.dnd.DragDropBase":{"!description":"Provides the base class for all drag-and-drop configurations. This feature enables a native HTML5 drag-and-drop API for the controls, therefore it is limited to browser support. <h3>Limitations<\/h3> <ul> <li>There is no mobile device that supports drag and drop.<\/li> <li>There is no accessible alternative for drag and drop. Applications which use the drag-and-drop functionality must provide an accessible alternative UI (for example, action buttons or menus) to perform the same operations.<\/li> <li>A custom dragging ghost element is not possible in Internet Explorer.<\/li> <li>Transparency of the drag ghost element depends on the browser implementation.<\/li> <li>Internet Explorer does only support plain text MIME type for the DataTransfer Object.<\/li> <li>Constraining a drag position is not possible, therefore there is no snap-to-grid or snap-to-element feature possible.<\/li> <li>For controls which do not provide an aggregation <code>dragDropConfig<\/code> drag and drop might not work correctly if they are configured as target via {@link sap.ui.core.dnd.DragDropInfo}.<\/li> <\/ul>","extend":{"!description":"Creates a new subclass of class sap.ui.core.dnd.DragDropBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new DragDropBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.Element#constructor sap.ui.core.Element} can be used.","!module":"sap/ui/core/dnd/DragDropBase","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.dnd.DragDropBase.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Element","!helpDescription":"Provides the base class for all drag-and-drop configurations. This feature enables a native HTML5 drag-and-drop API for the controls, therefore it is limited to browser support. <h3>Limitations<\/h3> <ul> <li>There is no mobile device that supports drag and drop.<\/li> <li>There is no accessible alternative for drag and drop. Applications which use the drag-and-drop functionality must provide an accessible alternative UI (for example, action buttons or menus) to perform the same operations.<\/li> <li>A custom dragging ghost element is not possible in Internet Explorer.<\/li> <li>Transparency of the drag ghost element depends on the browser implementation.<\/li> <li>Internet Explorer does only support plain text MIME type for the DataTransfer Object.<\/li> <li>Constraining a drag position is not possible, therefore there is no snap-to-grid or snap-to-element feature possible.<\/li> <li>For controls which do not provide an aggregation <code>dragDropConfig<\/code> drag and drop might not work correctly if they are configured as target via {@link sap.ui.core.dnd.DragDropInfo}.<\/li> <\/ul>"},"sap.ui.test.actions.Action_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.test.actions.Action with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.test.actions.Action"},"sap.ui.model.type.FileSize_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.type.FileSize with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.type.FileSize"},"sap.ui.core.ValueState":{"!description":"Marker for the correctness of the current value.","!category":"static class","Warning":{"!description":"State is valid but with a warning.","!type":"String","!category":"enum"},"None":{"!description":"State is not specified.","!type":"String","!category":"enum"},"Success":{"!description":"State is valid.","!type":"String","!category":"enum"},"!module":"sap/ui/core/library","Error":{"!description":"State is not valid.","!type":"String","!category":"enum"}},"sap.ui.model.message.MessageModel":{"!description":"Model implementation for Messages","extend":{"!description":"Creates a new subclass of class sap.ui.model.message.MessageModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.ClientModel.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getProperty":{"!description":"Returns the value for the property with the given <code>sPropertyName<\/code>","!type":"fn(sPath: String, oContext?: Object) -> Object","!category":"function","parameters":{"sPath":"type: string, description: the path to the property","oContext":"type: object, description: the context which will be used to retrieve the property"},"!static":false},"!category":"class","setProperty":{"!description":"Sets a new value for the given property <code>sPropertyName<\/code> in the model. If the model value changed all interested parties are informed.","!type":"fn(sPath: String, oValue: Object, oContext?: Object)","!category":"function","parameters":{"oValue":"type: any, description: value to set the property to","sPath":"type: string, description: path of the property to set","oContext":"type: object, description: the context which will be used to set the property"},"!static":false},"!constructorDescription":"Constructor for a new JSONModel.","!module":"sap/ui/model/message/MessageModel","setData":{"!description":"Sets the message data to the model.","!type":"fn(oData: Object)","!category":"function","parameters":{"oData":"type: object, description: the data to set on the model"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.message.MessageModel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.ClientModel","!helpDescription":"Model implementation for Messages"},"sap.ui.core.Component":{"getManifest":{"!description":"Returns the manifest defined in the metadata of the component. If not specified, the return value is null.","!type":"fn() -> Object","!category":"function","!static":false},"createComponent":{"!description":"Creates a nested component that is declared in the <code>sap.ui5/componentUsages<\/code> section of the descriptor (manifest.json). The following snippet shows the declaration: <pre>\n{\n  [...]\n  \"sap.ui5\": {\n    \"componentUsages\": {\n      \"myUsage\": {\n        \"name\": \"my.useful.Component\"\n      }\n    }\n  }\n  [...]\n}\n<\/pre> The syntax of the configuration object of the component usage matches the configuration object of the {#link sap.ui.component} factory function.\n\nThis is an example of how the <code>createComponent<\/code> function can be used for asynchronous scenarios: <pre>\noComponent.createComponent(\"myUsage\").then(function(oComponent) {\n  oComponent.doSomething();\n}).catch(function(oError) {\n  jQuery.sap.log.error(oError);\n});\n<\/pre>\n\nThe following example shows how <code>createComponent<\/code> can be used to create a nested component by providing specific properties like <code>id<\/code>, <code>async<\/code>, <code>settings<\/code>, or <code>componentData<\/code>: <pre>\nvar oComponent = oComponent.createComponent({\n  usage: \"myUsage\",\n  id: \"myId\",\n  settings: { ... },\n  componentData: { ... }\n});\n<\/pre> The allowed list of properties are defined in the parameter documentation of this function.\n\nThe properties can also be defined in the descriptor. These properties can be overwritten by the local properties of that function.","!type":"fn(vUsage: String | Object) -> sap.ui.core.Component | Promise","!category":"function","parameters":{"vUsage":"type: string|object, description: ID of the component usage or the configuration object that creates the component"},"!static":false},"getComponentData":{"!description":"Returns user specific data object","!type":"fn() -> Object","!category":"function","!static":false},"!module":"sap/ui/core/Component","getManifestEntry":{"!description":"Returns the configuration of a manifest section or the value for a specific path. If no section or key is specified, the return value is null.\n\nExample: <code> { \"sap.ui5\": { \"dependencies\": { \"libs\": { \"sap.m\": {} }, \"components\": { \"my.component.a\": {} } } }); <\/code>\n\nThe configuration above can be accessed in the following ways: <ul> <li><b>By section/namespace<\/b>: <code>oComponent.getManifestEntry(\"sap.ui5\")<\/code><\/li> <li><b>By path<\/b>: <code>oComponent.getManifestEntry(\"/sap.ui5/dependencies/libs\")<\/code><\/li> <\/ul>\n\nBy section/namespace returns the configuration for the specified manifest section and by path allows to specify a concrete path to a dedicated entry inside the manifest. The path syntax always starts with a slash (/).","!type":"fn(sKey: String) -> Object | null","!category":"function","parameters":{"sKey":"type: string, description: Either the manifest section name (namespace) or a concrete path"},"!static":false},"getManifestObject":{"!description":"Returns the manifest object.","!type":"fn() -> sap.ui.core.Manifest","!category":"function","!static":false},"onWindowUnload":{"!description":"The window unload hook. Override this method in your Component class implementation, to handle cleanup of the component once the window will be unloaded (e.g. closed).","!type":"fn()","!category":"function","!static":false},"getEventBus":{"!description":"Returns the event bus of this component.","!type":"fn() -> sap.ui.core.EventBus","!category":"function","!static":false},"runAsOwner":{"!description":"Calls the function <code>fn<\/code> once and marks all ManagedObjects created during that call as \"owned\" by this Component.\n\nNested calls of this method are supported (e.g. inside a newly created, nested component). The currently active owner Component will be remembered before executing <code>fn<\/code> and restored afterwards.","!type":"fn(fn: fn()) -> Object","!category":"function","parameters":{"fn":"type: function, description: Function to execute"},"!static":false},"getOwnerIdFor":{"!description":"Returns the ID of the object in whose \"context\" the given ManagedObject has been created.\n\nFor objects that are not ManagedObjects or for which the owner is unknown, <code>undefined<\/code> will be returned as owner ID.\n\n<strong>Note<\/strong>: Ownership for objects is only checked by the framework at the time when they are created. It is not checked or updated afterwards. And it can only be detected while the {@link sap.ui.core.Component#runAsOwner Component.runAsOwner} function is executing. Without further action, this is only the case while the content of a UIComponent is {@link sap.ui.core.UIComponent#createContent constructed} or when a {@link sap.ui.core.routing.Router Router} creates a new View and its content.\n\n<strong>Note<\/strong>: This method does not guarantee that the returned owner ID belongs to a Component. Currently, it always does. But future versions of UI5 might introduce a more fine grained ownership concept, e.g. taking Views into account. Callers that want to deal only with components as owners, should use the following method: {@link sap.ui.core.Component.getOwnerComponentFor Component.getOwnerComponentFor}. It guarantees that the returned object (if any) will be a Component.\n\n<strong>Further note<\/strong> that only the ID of the owner is recorded. In rare cases, when the lifecycle of a ManagedObject is not bound to the lifecycle of its owner, (e.g. by the means of aggregations), then the owner might have been destroyed already whereas the ManagedObject is still alive. So even the existence of an owner ID is not a guarantee for the existence of the corresponding owner.","!type":"fn(oObject: sap.ui.base.ManagedObject) -> String","!category":"function","parameters":{"oObject":"type: sap.ui.base.ManagedObject, description: Object to retrieve the owner ID for"},"!static":true},"!category":"class","extend":{"!description":"Creates a new subclass of class sap.ui.core.Component with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"init":{"!description":"Initializes the Component instance after creation.\n\nApplications must not call this hook method directly, it is called by the framework while the constructor of a Component is executed.\n\nSubclasses of Component should override this hook to implement any necessary initialization.","!type":"fn()","!category":"function","!static":false},"!constructorDescription":"Creates and initializes a new Component with the given <code>sId<\/code> and\nsettings.\n\nThe set of allowed entries in the <code>mSettings<\/code> object depends on\nthe concrete subclass and is described there. See {@link sap.ui.core.Component}\nfor a general description of this argument.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject} can be used.","onWindowBeforeUnload":{"!description":"The window before unload hook. Override this method in your Component class implementation, to handle cleanup before the real unload or to prompt a question to the user, if the component should be exited.","!type":"fn() -> String","!category":"function","!static":false},"exit":{"!description":"Cleans up the Component instance before destruction.\n\nApplications must not call this hook method directly, it is called by the framework when the element is {@link #destroy destroyed}.\n\nSubclasses of Component should override this hook to implement any necessary cleanup.","!type":"fn()","!category":"function","!static":false},"onConfigChange":{"!description":"The hook which gets called when the static configuration of the component has been changed by some configuration extension.","!type":"fn(sConfigKey: String)","!category":"function","parameters":{"sConfigKey":"type: string, description: Error message."},"!static":false},"onWindowError":{"!description":"The window error hook. Override this method in your Component class implementation to listen to unhandled errors.","!type":"fn(sMessage: String, sFile: String, iLine: Number)","!category":"function","parameters":{"sMessage":"type: string, description: The error message.","sFile":"type: string, description: File where the error occurred","iLine":"type: int, description: Line number of the error"},"!static":false},"!description":"Base Class for Component.","getService":{"!description":"Returns a service interface for the {@link sap.ui.core.service.Service Service} declared in the descriptor for components (manifest.json). The declaration needs to be done in the <code>sap.ui5/services<\/code> section as follows: <pre>\n{\n  [...]\n  \"sap.ui5\": {\n    \"services\": {\n      \"myLocalServiceAlias\": {\n        \"factoryName\": \"my.ServiceFactory\",\n        [\"optional\": true]\n      }\n    }\n  }\n  [...]\n}\n<\/pre> The service declaration is used to define a mapping between the local alias for the service that can be used in the Component and the name of the service factory which will be used to create a service instance.\n\nThe <code>getService<\/code> function will look up the service factory and will create a new instance by using the service factory function {@link sap.ui.core.service.ServiceFactory#createInstance createInstance} The optional property defines that the service is not mandatory and the usage will not depend on the availability of this service. When requesting an optional service the <code>getService<\/code> function will reject but there will be no error logged in the console.\n\nWhen creating a new instance of the service the Component context will be passed as <code>oServiceContext<\/code> as follows: <pre>\n{\n  \"scopeObject\": this,     // the Component instance\n  \"scopeType\": \"component\" // the stereotype of the scopeObject\n}\n<\/pre>\n\nThe service will be created only once per Component and reused in future calls to the <code>getService<\/code> function. <p> This function will return a <code>Promise<\/code> which provides the service interface when resolved. If the <code>factoryName<\/code> could not be found in the {@link sap.ui.core.service.ServiceFactoryRegistry Service Factory Registry} or the service declaration in the descriptor for components (manifest.json) is missing the Promise will reject.\n\nThis is an example of how the <code>getService<\/code> function can be used: <pre>\noComponent.getService(\"myLocalServiceAlias\").then(function(oService) {\n  oService.doSomething();\n}).catch(function(oError) {\n  jQuery.sap.log.error(oError);\n});\n<\/pre>","!type":"fn(sLocalServiceAlias: String) -> Promise","!category":"function","parameters":{"sLocalServiceAlias":"type: string, description: Local service alias as defined in the manifest.json"},"!static":false},"getInterface":{"!type":"fn()","!category":"function","!static":false},"getOwnerComponentFor":{"!description":"Returns the Component instance in whose \"context\" the given ManagedObject has been created or <code>undefined<\/code>.\n\nThis is a convenience wrapper around {@link sap.ui.core.Component.getOwnerIdFor Component.getOwnerIdFor}. If the owner ID cannot be determined for reasons documented on <code>getOwnerForId<\/code> or when the Component for the determined ID no longer exists, <code>undefined<\/code> will be returned.","!type":"fn(oObject: sap.ui.base.ManagedObject) -> sap.ui.core.Component","!category":"function","parameters":{"oObject":"type: sap.ui.base.ManagedObject, description: Object to retrieve the owner Component for"},"!static":true},"!proto":"sap.ui.base.ManagedObject","!helpDescription":"Base Class for Component.","getMetadata":{"!description":"Returns the metadata for the Component class.","!type":"fn() -> sap.ui.core.ComponentMetadata","!category":"function","!static":true}},"sap.ui.model.json.JSONListBinding_obj":{"!type":"fn(oModel: sap.ui.model.json.JSONModel, sPath: String, oContext: sap.ui.model.Context, aSorters?: [sap.ui.model.Sorter | [object Object]], aFilters?: [sap.ui.model.Filter | [object Object]], mParameters?: Object)","prototype":"sap.ui.model.json.JSONListBinding"},"sap.ui.core.Title":{"setLevel":{"!description":"Sets a new value for property {@link #getLevel level}.\n\nDefines the level of the title. If set to auto the level of the title is chosen by the control rendering the title.\n\nCurrently not all controls using the Title.control supporting this property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Auto<\/code>.","!type":"fn(sLevel: sap.ui.core.TitleLevel) -> sap.ui.core.Title","!category":"function","parameters":{"sLevel":"type: sap.ui.core.TitleLevel, description: New value for property <code>level<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.Title with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new Title.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getLevel level} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getEmphasized emphasized} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nDefines the title text\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sText: String) -> sap.ui.core.Title","!category":"function","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"},"!static":false},"!module":"sap/ui/core/Title","getEmphasized":{"!description":"Gets current value of property {@link #getEmphasized emphasized}.\n\nIf set the title is displayed emphasized. This feature is nor supported by all controls using the Title.control.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nDefines the URL for icon display","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nDefines the title text","!type":"fn() -> String","!category":"function","!static":false},"!description":"Represents a title element that can be used for aggregation with other controls","setEmphasized":{"!description":"Sets a new value for property {@link #getEmphasized emphasized}.\n\nIf set the title is displayed emphasized. This feature is nor supported by all controls using the Title.control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bEmphasized: Boolean) -> sap.ui.core.Title","!category":"function","parameters":{"bEmphasized":"type: boolean, description: New value for property <code>emphasized<\/code>"},"!static":false},"!category":"class","setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nDefines the URL for icon display\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: sap.ui.core.URI) -> sap.ui.core.Title","!category":"function","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"},"!static":false},"getLevel":{"!description":"Gets current value of property {@link #getLevel level}.\n\nDefines the level of the title. If set to auto the level of the title is chosen by the control rendering the title.\n\nCurrently not all controls using the Title.control supporting this property.\n\nDefault value is <code>Auto<\/code>.","!type":"fn() -> sap.ui.core.TitleLevel","!category":"function","!static":false},"!helpDescription":"Represents a title element that can be used for aggregation with other controls","!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.Title.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.model.odata.type.Double_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Double with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.Double"},"sap.ui.model.type.Currency":{"!description":"This class represents the currency composite type.","extend":{"!description":"Creates a new subclass of class sap.ui.model.type.Currency with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.CompositeType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"formatValue":{"!description":"Format the given array containing amount and currency code to an output value of type string. Other internal types than 'string' are not supported by the Currency type. If a source format has been defined for this type, the formatValue does also accept a string value as input, which will be parsed into an array using the source format. If aValues is not defined or null, null will be returned.","!type":"fn(vValue: Array | String, sInternalType: String) -> Object","!category":"function","parameters":{"sInternalType":"type: string, description: the target type","vValue":"type: array|string, description: the array of values or string value to be formatted"},"!static":false},"!category":"class","!constructorDescription":"Constructor for a Currency type.","!module":"sap/ui/model/type/Currency","parseValue":{"!description":"Parse a string value to an array containing amount and currency. Parsing of other internal types than 'string' is not supported by the Currency type. In case a source format has been defined, after parsing the currency is formatted using the source format and a string value is returned instead.","!type":"fn(vValue: Object, sInternalType: String, aCurrentValues: Array) -> Array | String","!category":"function","parameters":{"aCurrentValues":"type: array, description: the current values of all binding parts","sInternalType":"type: string, description: the source type","vValue":"type: any, description: the value to be parsed"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.type.Currency.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.CompositeType","!helpDescription":"This class represents the currency composite type."},"sap.ui.core.Design":{"Standard":{"!description":"Standard font","!type":"String","!category":"enum"},"!description":"Font design for texts","Monospace":{"!description":"Mono space font","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/ui/core/library"},"sap.ui.core.message.ControlMessageProcessor":{"setMessages":{"!description":"Set Messages to check","!type":"fn(vMessages: map)","!category":"function","parameters":{"vMessages":"type: map, description: map of messages: {'target': [array of messages],...}"},"!static":false},"!description":"The ControlMessageProcessor implementation. This MessageProcessor is able to handle Messages with the following target syntax: 'ControlID/PropertyName'. Creating an instance of this class using the \"new\" keyword always results in the same instance (Singleton).","extend":{"!description":"Creates a new subclass of class sap.ui.core.message.ControlMessageProcessor with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.message.MessageProcessor.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","checkMessages":{"!description":"Check Messages and update controls with messages","!type":"fn()","!category":"function","!static":false},"!constructorDescription":"Constructor for a new ControlMessageProcessor","!module":"sap/ui/core/message/ControlMessageProcessor","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.message.ControlMessageProcessor.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.message.MessageProcessor","!helpDescription":"The ControlMessageProcessor implementation. This MessageProcessor is able to handle Messages with the following target syntax: 'ControlID/PropertyName'. Creating an instance of this class using the \"new\" keyword always results in the same instance (Singleton)."},"sap.ui.model.analytics.odata4analytics.DimensionMemberSetRequest":{"setSortExpression":{"!description":"Set the sort expression for this request.\n\nExpressions are represented by separate objects. Calling this method replaces the sort object maintained by this request.","!type":"fn(oSorter: sap.ui.model.analytics.odata4analytics.SortExpression)","!category":"function","parameters":{"oSorter":"type: sap.ui.model.analytics.odata4analytics.SortExpression, description: The sort object to be associated with this request."},"!static":false},"getURIQueryOptionValue":{"!description":"Get the value of a query option for the OData request URI corresponding to this request.","!type":"fn(sQueryOptionName: String) -> String","!category":"function","parameters":{"sQueryOptionName":"type: String, description: Identifies the query option: $select, $filter,... or any custom query option"},"!static":false},"!constructorDescription":"Create a request object for interaction with a dimension value help. Such a\nvalue help is served by either the query result entity set, in which case the\nreturned dimension members are limited to those also used in the query result\ndata. Or, the value help is populated by a master data entity set, if made\navailable by the service. In this case, the result will include all valid\nmembers for that dimension.","!module":"sap/ui/model/analytics/odata4analytics","setParameterizationRequest":{"!description":"Set the parameterization request required for retrieving dimension members directly from the query result, if it is parameterized.","!type":"fn(oParameterizationRequest: undefined)","!category":"function","parameters":{"oParameterizationRequest":"type: undefined, description: Request object for interactions with the parameterization of this query result"},"!static":false},"getResultPageBoundaries":{"!description":"Returns the current page boundaries as object with properties <code>start<\/code> and <code>end<\/code>. If the end of the page is unbounded, <code>end<\/code> is null.","!type":"fn() -> Object","!category":"function","!static":false},"setResultPageBoundaries":{"!description":"Specify that only a page of the query result shall be returned. A page is described by its boundaries, that are row numbers for the first and last rows in the query result to be returned.","!type":"fn(start: Number, end: Number)","!category":"function","parameters":{"start":"type: Number, description: The first row of the query result to be returned. Numbering starts at 1. Passing null is equivalent to start with the first row.","end":"type: Number, description: The last row of the query result to be returned. Passing null is equivalent to get all rows up to the end of the query result."},"!static":false},"!description":"Creation of URIs for fetching a query dimension value set.","getSortExpression":{"!description":"Get the sort expression for this request.\n\nExpressions are represented by separate objects. If none exists so far, a new expression object gets created.","!type":"fn() -> sap.ui.model.analytics.odata4analytics.SortExpression","!category":"function","!static":false},"getURIToDimensionMemberEntries":{"!description":"Get the unescaped URI to fetch the dimension members, optionally augmented by text and attributes.","!type":"fn(sServiceRootURI: String) -> String","!category":"function","parameters":{"sServiceRootURI":"type: String, description: (optional) Identifies the root of the OData service"},"!static":false},"setFilterExpression":{"!description":"Set the filter expression for this request.\n\nExpressions are represented by separate objects. Calling this method replaces the filter object maintained by this request.","!type":"fn(oFilter: sap.ui.model.analytics.odata4analytics.FilterExpression)","!category":"function","parameters":{"oFilter":"type: sap.ui.model.analytics.odata4analytics.FilterExpression, description: The filter object to be associated with this request."},"!static":false},"!category":"class","getFilterExpression":{"!description":"Get the filter expression for this request.\n\nExpressions are represented by separate objects. If none exists so far, a new expression object gets created.","!type":"fn() -> sap.ui.model.analytics.odata4analytics.FilterExpression","!category":"function","!static":false},"getURIToDimensionMemberEntitySet":{"!description":"Get the URI to locate the entity set for the dimension memebers.","!type":"fn(sServiceRootURI: String) -> String","!category":"function","parameters":{"sServiceRootURI":"type: String, description: (optional) Identifies the root of the OData service"},"!static":false},"setRequestOptions":{"!description":"Set further options to be applied for the OData request","!type":"fn(bIncludeCount: Boolean)","!category":"function","parameters":{"bIncludeCount":"type: Boolean, description: Indicates whether or not the result shall include a count for the returned entities. Default is not to include it. Pass null to keep current setting."},"!static":false},"!helpDescription":"Creation of URIs for fetching a query dimension value set.","!proto":"sap.ui.base.Object"},"jQuery.sap.storage.Storage":{"!description":"A Storage API for JavaScript.\n\nProvides methods to store data on the client using Web Storage API support by the browser. The data received by this API must be already serialized, in string format. Similarly, the API returns the retrieved data in serialized string format, so it is the responsibility of the caller to de-serialize it, if applicable.\n\nAttention: The Web Storage API stores the data on the client. Therefore do not use this API for confidential information.\n\nOne can get access to the 'default' storage by using {@link jQuery.sap.storage} directly or alternatively via factory functionality available as <code>jQuery.sap.storage(jQuery.sap.storage.Type.session)<\/code> returning an object implementing this interface.\n\nA typical intended usage of this API is the storage of a string representing the state of a control. In such usage, the data is stored in the browser session, and the methods to be used are {@link #put} and {@link #get}. The method {@link #remove} can be used to delete the previously saved state.\n\nIn sake of completeness, the method {@link #clear} is available. However, it should be called only in very particular situations, when a global erasing of data is required. If only keys with certain prefix should be deleted the method {@link #removeAll} should be used.","!category":"static class","!module":"jquery.sap.storage"},"sap.ui.model.odata.ODataAnnotations":{"setHeaders":{"!description":"Set custom headers which are provided in a key/value map. These headers are used for all requests. The Accept-Language header cannot be modified and is set using the Core's language setting.\n\nTo remove these headers simply set the mHeaders parameter to {}. Please also note that when calling this method again all previous custom headers are removed unless they are specified again in the mCustomHeaders parameter.","!type":"fn(mHeaders: map)","!category":"function","parameters":{"mHeaders":"type: map, description: the header name/value map."},"!static":false},"fireFailed":{"!description":"Fire event failed to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.odata.ODataAnnotations","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"setXML":{"!description":"Sets an XML document.","!type":"fn(oXMLDocument: Object, sXMLContent: String, mOptions?: map) -> Boolean","!category":"function","parameters":{"sXMLContent":"type: string, description: The XML content as string to parse for annotations","mOptions":"type: map, description: Additional options","oXMLDocument":"type: object, description: The XML document to parse for annotations"},"!static":false},"attachFailed":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'failed' event of this <code>sap.ui.model.odata.ODataAnnotations<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.ODataAnnotations","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, the global context (window) is used."},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.ODataAnnotations with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"addUrl":{"!description":"Adds either one URL or an array of URLs to be loaded and parsed. The result will be merged into the annotations data which can be retrieved using the getAnnotations-method.","!type":"fn(vUrl: [String | [object Object]]) -> Promise","!category":"function","parameters":{"vUrl":"type: string|[object Object][], description: Either one URL as string or an array of URL strings"},"!static":false},"!module":"sap/ui/model/odata/ODataAnnotations","attachLoaded":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'loaded' event of this <code>sap.ui.model.odata.ODataAnnotations<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.ODataAnnotations","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, the global context (window) is used."},"!static":false},"fireLoaded":{"!description":"Fire event loaded to attached listeners.","!type":"fn(mArguments?: map) -> sap.ui.model.odata.ODataAnnotations","!category":"function","parameters":{"mArguments":"type: map, description: Map of arguments that will be given as parameters to the event handler"},"!static":false},"!description":"Implementation to access oData Annotations","isFailed":{"!description":"Checks whether annotations loading of at least one of the given URLs has already failed. Note: For asynchronous annotations {@link #attachFailed} has to be used.","!type":"fn() -> Boolean","!category":"function","!static":false},"getAnnotationsData":{"!description":"returns the raw annotation data","!type":"fn() -> Object","!category":"function","!static":false},"!category":"class","detachLoaded":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'loaded' event of this <code>sap.ui.model.odata.ODataAnnotations<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.ODataAnnotations","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"isLoaded":{"!description":"Checks whether annotations from at least one source are available","!type":"fn() -> Boolean","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.ODataAnnotations.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!helpDescription":"Implementation to access oData Annotations","!proto":"sap.ui.base.EventProvider","detachFailed":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'failed' event of this <code>sap.ui.model.odata.ODataAnnotations<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.ODataAnnotations","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false}},"jQuery.sap.act":{"isActive":{"!description":"Checks whether recently an activity was detected.","!type":"fn()","!category":"function","!static":"true"},"detachActivate":{"!description":"Deregisters a previously registered handler from the activity event.","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","!static":"true"},"!category":"namespace","attachActivate":{"!description":"Registers the given handler to the activity event, which is fired when an activity was detected after a certain period of inactivity.\n\nThe Event is not fired for Internet Explorer 8.","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","!static":"true"},"!module":"jquery.sap.act","refresh":{"!description":"Reports an activity.","!type":"fn()","!category":"function","!static":"true"}},"sap.ui.model.odata.type.Byte":{"!description":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Byte<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>number<\/code>.","getRange":{"!description":"Returns the type's supported range as object with properties <code>minimum<\/code> and <code>maximum<\/code>.","!type":"fn() -> Object","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Byte with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.Int.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","!constructorDescription":"Constructor for a primitive type <code>Edm.Byte<\/code>.","!module":"sap/ui/model/odata/type/Byte","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.Byte.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.odata.type.Int","!helpDescription":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Byte<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>number<\/code>."},"sap.ui.test.matchers.Ancestor_obj":{"!type":"fn(oAncestorControl: Object, bDirect?: Boolean)","prototype":"sap.ui.test.matchers.Ancestor"},"sap.ui.app.Application_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.app.Application with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Component.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.app.Application"},"sap.ui.model.odata.v4.ValueListType":{"Standard":{"!description":"There is a dynamic value list with multiple queries including selection criteria.","!type":"String","!category":"enum"},"!description":"Specifies the value list type of a property.","!category":"static class","None":{"!description":"There is no value list.","!type":"String","!category":"enum"},"!module":"sap/ui/model/odata/v4/ValueListType","Fixed":{"!description":"There is one enumeration of fixed values.","!type":"String","!category":"enum"}},"sap.ui.model.odata.v2.ODataAnnotations_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.v2.ODataAnnotations with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oMetadata: sap.ui.model.odata.ODataMetadata, mOptions: map)","prototype":"sap.ui.model.odata.v2.ODataAnnotations"},"sap.ui.model.analytics.odata4analytics.SortExpression_obj":{"!type":"fn(oModel: Object, oSchema: Object, oEntityType: sap.ui.model.analytics.odata4analytics.EntityType)","prototype":"sap.ui.model.analytics.odata4analytics.SortExpression"},"sap.ui.model.SelectionModel":{"attachSelectionChanged":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'selectionChanged' event of this <code>sap.ui.model.SelectionModel<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.SelectionModel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, this Model is used."},"!static":false},"getLeadSelectedIndex":{"!description":"Return the second index argument from the most recent call to setSelectionInterval(), addSelectionInterval() or removeSelectionInterval().","!type":"fn() -> Number","!category":"function","!static":false},"setSelectionInterval":{"!description":"Changes the selection to be equal to the range <code>iFromIndex<\/code> and <code>iToIndex<\/code> inclusive. If <code>iFromIndex<\/code> is smaller than <code>iToIndex<\/code>, both parameters are swapped.\n\nIn <code>SINGLE_SELECTION<\/code> selection mode, only <code>iToIndex<\/iToIndex> is used.\n\nIf this call results in a change to the current selection, then a <code>SelectionChanged<\/code> event is fired.","!type":"fn(iFromIndex: Number, iToIndex: Number) -> sap.ui.model.SelectionModel","!category":"function","parameters":{"iFromIndex":"type: int, description: one end of the interval.","iToIndex":"type: int, description: other end of the interval"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.SelectionModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"clearSelection":{"!description":"Change the selection to the empty set and clears the lead selection.\n\nIf this call results in a change to the current selection or lead selection, then a <code>SelectionChanged<\/code> event is fired.","!type":"fn() -> sap.ui.model.SelectionModel","!category":"function","!static":false},"getSelectedIndices":{"!description":"Returns the selected indices as array.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"!constructorDescription":"Constructs an instance of an sap.ui.model.SelectionModel.","!module":"sap/ui/model/SelectionModel","fireSelectionChanged":{"!description":"Fire event 'selectionChanged' to attached listeners.\n\nExpects following event parameters: <ul> <li>'leadIndex' of type <code>int<\/code> Lead selection index.<\/li> <li>'rowIndices' of type <code>int[]<\/code> Other selected indices (if available)<\/li> <\/ul>","!type":"fn(mArguments: Object) -> sap.ui.model.SelectionModel","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"selectAll":{"!description":"Selects all rows up to the <code>iToIndex<\/iToIndex>.\n\nIf this call results in a change to the current selection, then a <code>SelectionChanged<\/code> event is fired.","!type":"fn(iToIndex: Number) -> sap.ui.model.SelectionModel","!category":"function","parameters":{"iToIndex":"type: int, description: end of the interval"},"!static":false},"setSelectionMode":{"!description":"Sets the selection mode. The following list describes the accepted selection modes: <ul> <li><code>sap.ui.model.SelectionModel.SINGLE_SELECTION<\/code> - Only one list index can be selected at a time. In this mode, <code>setSelectionInterval<\/code> and <code>addSelectionInterval<\/code> are equivalent, both replacing the current selection with the index represented by the second argument (the \"lead\"). <li><code>sap.ui.model.SelectionModel.MULTI_SELECTION<\/code> - In this mode, there's no restriction on what can be selected. <\/ul>","!type":"fn(iSelectionMode: Number)","!category":"function","parameters":{"iSelectionMode":"type: int, description: selection mode"},"!static":false},"getSelectionMode":{"!description":"Returns the current selection mode.","!type":"fn() -> Number","!category":"function","!static":false},"!category":"class","detachSelectionChanged":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'selectionChanged' event of this <code>sap.ui.model.SelectionModel<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.SelectionModel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"sliceSelectionInterval":{"!description":"Slices a the indices between the two indices from the selection. If <code>iFromIndex<\/code> is smaller than <code>iToIndex<\/code>, both parameters are swapped.\n\nIf the range of removed selection indices includes the current lead selection, then the lead selection will be unset (set to -1).\n\nIf this call results in a change to the current selection or lead selection, then a <code>SelectionChanged<\/code> event is fired.","!type":"fn(iFromIndex: Number, iToIndex: Number) -> sap.ui.model.SelectionModel","!category":"function","parameters":{"iFromIndex":"type: int, description: one end of the interval.","iToIndex":"type: int, description: other end of the interval"},"!static":false},"isSelectedIndex":{"!description":"Returns true if the specified index is selected.","!type":"fn(iIndex: Number) -> Boolean","!category":"function","parameters":{"iIndex":"type: int, description: undefined"},"!static":false},"addSelectionInterval":{"!description":"Changes the selection to be the union of the current selection and the range between <code>iFromIndex<\/code> and <code>iToIndex<\/code> inclusive. If <code>iFromIndex<\/code> is smaller than <code>iToIndex<\/code>, both parameters are swapped.\n\nIn <code>SINGLE_SELECTION<\/code> selection mode, this is equivalent to calling <code>setSelectionInterval<\/code>, and only the second index is used.\n\nIf this call results in a change to the current selection or lead selection, then a <code>SelectionChanged<\/code> event is fired.","!type":"fn(iFromIndex: Number, iToIndex: Number) -> sap.ui.model.SelectionModel","!category":"function","parameters":{"iFromIndex":"type: int, description: one end of the interval.","iToIndex":"type: int, description: other end of the interval"},"!static":false},"removeSelectionInterval":{"!description":"Changes the selection to be the set difference of the current selection and the indices between <code>iFromIndex<\/code> and <code>iToIndex<\/code> inclusive. If <code>iFromIndex<\/code> is smaller than <code>iToIndex<\/code>, both parameters are swapped.\n\nIf the range of removed selection indices includes the current lead selection, then the lead selection will be unset (set to -1).\n\nIf this call results in a change to the current selection or lead selection, then a <code>SelectionChanged<\/code> event is fired.","!type":"fn(iFromIndex: Number, iToIndex: Number) -> sap.ui.model.SelectionModel","!category":"function","parameters":{"iFromIndex":"type: int, description: one end of the interval.","iToIndex":"type: int, description: other end of the interval"},"!static":false},"moveSelectionInterval":{"!description":"Moves all selected indices starting at the position <code>iStartIndex<\/code> <code>iMove<\/code> items.\n\nThis can be used if new items are inserted to the item set and you want to keep the selection. To handle a deletion of items use <code>sliceSelectionInterval<\/code>.\n\nIf this call results in a change to the current selection or lead selection, then a <code>SelectionChanged<\/code> event is fired.","!type":"fn(iStartIndex: Number, iMove: Number) -> sap.ui.model.SelectionModel","!category":"function","parameters":{"iStartIndex":"type: int, description: start at this position","iMove":"type: int, description: undefined"},"!static":false},"!proto":"sap.ui.base.EventProvider","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.SelectionModel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.model.SelectionModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.SelectionModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(iSelectionMode: Number)","prototype":"sap.ui.model.SelectionModel"},"sap.ui.core.XMLComposite":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.XMLComposite with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setDisplayBlock":{"!description":"Sets a new value for property {@link #getDisplayBlock displayBlock}.\n\nWhether the CSS display should be set to \"block\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bDisplayBlock: Boolean) -> sap.ui.core.XMLComposite","!category":"function","parameters":{"bDisplayBlock":"type: boolean, description: New value for property <code>displayBlock<\/code>"},"!static":false},"!constructorDescription":"XMLComposite is the base class for composite controls that use a XML fragment representation\nfor their visual parts. From a user perspective such controls appear as any other control, but internally the\nrendering part is added as a fragment.\nThe fragment that is used should appear in the same folder as the control's JS implementation with the file extension\n<code>.control.xml<\/code>.\nThe fragment's content can access the interface data from the XMLComposite control via bindings. Currently only aggregations and properties\ncan be used with bindings inside a fragment.\nThe exposed model that is used for internal bindings in the fragment has the default name <code>$this<\/code>. The name will always start\nwith an <code>$<\/code>. The metadata of the derived control can define the alias with its metadata. A code example can be found below.\n\nAs XMLComposites compose other controls, they are only invalidated and re-rendered if explicitly defined. Additional metadata\nfor invalidation can be given for properties and aggregation. The default invalidation is <code>\"none\"<\/code>.\nSetting invalidate to <code>true<\/code> for properties and aggregations sets the complete XMLComposite\nto invalidate and rerender. For templating scenarios the XMLComposite can also be forced to re-template completely. In such case set invalidate\nof the corresponding property to <code>\"template\"<\/code>\n\nExample:\n<pre>\nXMLComposite.extend(\"sap.mylib.MyXMLComposite\", {\n  metadata : {\n    library: \"sap.mylib\",\n    properties : {\n      text: { //changing this property will not re-render the XMLComposite\n         type: \"string\",\n         defaultValue: \"\"\n      },\n      title: { //changing this property will re-render the XMLComposite as it defines invalidate: true\n         type: \"string\",\n         defaultValue: \"\",\n         invalidate: true\n      },\n      value: { //changing this property will re-render the XMLComposite as it defines invalidate: true\n         type: \"string\",\n         defaultValue: \"\",\n         invalidate: true\n      },\n      progress: { //changing this property will re-template the XMLComposite as it defines invalidate: true\n         type: \"int\",\n         defaultValue: \"\",\n         invalidate: \"template\"\n      }\n    },\n    defaultProperty : \"text\",\n    aggregations : {\n      items : {\n         type: \"sap.ui.core.Control\",\n         invalidate: true\n      },\n      header : {\n         type: \"sap.mylib.FancyHeader\",\n         multiple : false\n      }\n    },\n    defaultAggregation : \"items\"\n    events: {\n      outerEvent : {\n        parameters : {\n          opener : \"sap.ui.core.Control\"\n        }\n      }\n    }\n  },\n  //alias defaults to \"this\"\n  alias: \"mycontrolroot\" //inner bindings will use model name $mycontrolroot\n  //fragment defaults to {control name}.control.xml in this case sap.mylib.MyXMLComposite.control.xml\n  fragment: \"sap.mylib.MyXMLCompositeOther.control.xml\" //the name of the fragment\n});\n<\/pre>\n\nInternally the XMLComposite instantiates and initializes the given fragment and stores the resulting control in a hidden\naggregation named <code>_content<\/code>. The fragment should only include one root element.\n\nBindings of inner controls to the interface of the XMLComposite can be done with normal binding syntax.\nHere properties are used as property bindings and aggregations are used as list bindings.\nCurrently it is not possible to bind associations in a fragment.\n\nExample:\n<pre>\n   &lt;core:FragmentDefinition xmlns:m=\"sap.m\" xmlns:core=\"sap.ui.core\"&gt;\n      &lt;m:Text text=\"{$this&gt;text}\" visible=\"{= ${$this&gt;text} !== \"\"}\" /&gt;\n   &lt;/core:FragmentDefinition&gt;\n<\/pre>\n<pre>\n   &lt;core:FragmentDefinition xmlns:m=\"sap.m\" xmlns:core=\"sap.ui.core\"&gt;\n      &lt;m:VBox items=\"{path:\"$this&gt;texts\", filters:{path:\"text\", operator:\"Contains\", value1:\"Text\"}, sorter:{path:\"text\", descending:true}}\"&gt;\n          &lt;m:Text text=\"{$this&gt;text}\" /&gt;\n      &lt;/m:VBox&gt;\n   &lt;/core:FragmentDefinition&gt;\n<\/pre>\n<pre>\n   &lt;core:FragmentDefinition xmlns:m=\"sap.m\" xmlns:core=\"sap.ui.core\"&gt;\n      &lt;m:Button text=\"Press Me\" press=\"handlePress\"/&gt;\n   &lt;/core:FragmentDefinition&gt;\n<\/pre>\n\nAll events handled within the fragment will be dispatched to the XMLComposite control. It is recommended to follow this paradigm to allow\nreuse of a XMLComposite without any dependency to controller code of the current embedding view.\n\n<pre>\n   MyXMLComposite.prototype.handlePress = function() {\n       this.fireOuterEvent(); // passing on the event to the outer view\n   }\n<\/pre>\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getDisplayBlock displayBlock} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!module":"sap/ui/core/XMLComposite","getDisplayBlock":{"!description":"Gets current value of property {@link #getDisplayBlock displayBlock}.\n\nWhether the CSS display should be set to \"block\".\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nThe height","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"!description":"Base Class for XMLComposite controls.","byId":{"!description":"Returns an element by its ID in the context of the XMLComposite.\n\nMay only be used by the implementation of a specific XMLComposite, not by an application using a XMLComposite.","!type":"fn(sId: String) -> sap.ui.core.Element","!category":"function","parameters":{"sId":"type: string, description: XMLComposite-local ID of the inner element"},"!static":false},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nThe height\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.core.XMLComposite","!category":"function","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"},"!static":false},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nThe width\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nThe width\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.core.XMLComposite","!category":"function","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"},"!static":false},"!helpDescription":"Base Class for XMLComposite controls.","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.XMLComposite.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.message.Message":{"setAdditionalText":{"!description":"Sets the additionaltext for the message or merge different additionaltext strings","!type":"fn(sAdditionalText: String)","!category":"function","parameters":{"sAdditionalText":"type: string, description: The additionaltext."},"!static":false},"getMessageProcessor":{"!description":"Returns the message processor","!type":"fn() -> sap.ui.core.message.MessageProcessor","!category":"function","!static":false},"getTarget":{"!description":"Returns the message target","!type":"fn() -> String","!category":"function","!static":false},"getCode":{"!description":"Returns the message code","!type":"fn() -> String","!category":"function","!static":false},"setPersistent":{"!description":"Set message persistent","!type":"fn(bPersistent: Boolean)","!category":"function","parameters":{"bPersistent":"type: boolean, description: Set Message persistent: If persisten is set true the message lifecycle controlled by Application"},"!static":false},"!module":"sap/ui/core/message/Message","setTarget":{"!description":"Set message target: The syntax is MessageProcessor dependent. See the documentation of the respective MessageProcessor.","!type":"fn(sTarget: String)","!category":"function","parameters":{"sTarget":"type: string, description: The Message target"},"!static":false},"getDescriptionUrl":{"!description":"Returns the message description URL which should be used to download the description content","!type":"fn() -> String","!category":"function","!static":false},"getType":{"!description":"Returns the message type","!type":"fn() -> sap.ui.core.MessageType","!category":"function","!static":false},"setCode":{"!description":"Set message code","!type":"fn(sCode: String)","!category":"function","parameters":{"sCode":"type: string, description: The Message code"},"!static":false},"!category":"class","setDescriptionUrl":{"!description":"Set message description URL which should be used to download the description content","!type":"fn(sDescription: String)","!category":"function","parameters":{"sDescription":"type: string, description: The URL pointing to the description long text"},"!static":false},"getId":{"!description":"Returns the Message Id","!type":"fn() -> String","!category":"function","!static":false},"setMessage":{"!description":"Set message text","!type":"fn(sMessage: String)","!category":"function","parameters":{"sMessage":"type: string, description: The Message as text"},"!static":false},"getMessage":{"!description":"Returns message text","!type":"fn() -> String","!category":"function","!static":false},"getDescription":{"!description":"Returns the message description","!type":"fn() -> String","!category":"function","!static":false},"setType":{"!description":"Set message type","!type":"fn(sType: sap.ui.core.MessageType)","!category":"function","parameters":{"sType":"type: sap.ui.core.MessageType, description: The Message type"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.message.Message with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new Message.","setMessageProcessor":{"!description":"Set message processor","!type":"fn(oMessageProcessor: sap.ui.core.message.MessageProcessor)","!category":"function","parameters":{"oMessageProcessor":"type: sap.ui.core.message.MessageProcessor, description: The Message processor"},"!static":false},"getTechnical":{"!description":"Returns the if Message set as technical message","!type":"fn() -> Boolean","!category":"function","!static":false},"setTechnical":{"!description":"Set message as technical message","!type":"fn(bTechnical: Boolean)","!category":"function","parameters":{"bTechnical":"type: boolean, description: Set Message as technical message lifecycle controlled by Application"},"!static":false},"setDate":{"!description":"Set the date of the message, this will automatically be set on message creation","!type":"fn(iDate: Number)","!category":"function","parameters":{"iDate":"type: int, description: The message date in number of milliseconds elapsed since 1 January 1970 00:00:00 UTC. As returned by Date.now()."},"!static":false},"getDate":{"!description":"Set the date of the message","!type":"fn() -> Number","!category":"function","!static":false},"getAdditionalText":{"!description":"Returns the messages additional text.","!type":"fn() -> String","!category":"function","!static":false},"setDescription":{"!description":"Set message description","!type":"fn(sDescription: String)","!category":"function","parameters":{"sDescription":"type: string, description: The Message description"},"!static":false},"getPersistent":{"!description":"Returns the if Message is persistent","!type":"fn() -> Boolean","!category":"function","!static":false},"!proto":"sap.ui.base.Object","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.message.Message.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.model.type.Unit_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.type.Unit with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.CompositeType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object, aDynamicFormatOptionNames?: Array)","prototype":"sap.ui.model.type.Unit"},"sap.ui.core.search.SearchProvider_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.search.SearchProvider with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.search.SearchProvider"},"sap.ui.core.ws":{"SUPPORTED_PROTOCOLS":"sap.ui.core.ws.SapPcpWebSocket.SUPPORTED_PROTOCOLS","!category":"namespace","WebSocket":"sap.ui.core.ws.WebSocket_obj","ReadyState":"sap.ui.core.ws.ReadyState","SapPcpWebSocket":"sap.ui.core.ws.SapPcpWebSocket_obj"},"sap.ui.core.TextAlign":{"Right":{"!description":"Hard option for right alignment.","!type":"String","!category":"enum"},"End":{"!description":"Locale-specific positioning at the end of the line.","!type":"String","!category":"enum"},"!description":"Configuration options for text alignments.","!category":"static class","Center":{"!description":"Centered text alignment.","!type":"String","!category":"enum"},"Initial":{"!description":"Sets no text align, so the browser default is used.","!type":"String","!category":"enum"},"!module":"sap/ui/core/library","Begin":{"!description":"Locale-specific positioning at the beginning of the line.","!type":"String","!category":"enum"},"Left":{"!description":"Hard option for left alignment.","!type":"String","!category":"enum"}},"sap.ui.core.Element":{"removeDependent":{"!description":"Removes a dependent from the aggregation {@link #getDependents dependents}.","!type":"fn(vDependent: Number | String | sap.ui.core.Element) -> sap.ui.core.Element","!category":"function","parameters":{"vDependent":"type: int|string|sap.ui.core.Element, description: The dependent to remove or its index or id"},"!static":false},"destroyDependents":{"!description":"Destroys all the dependents in the aggregation {@link #getDependents dependents}.","!type":"fn() -> sap.ui.core.Element","!category":"function","!static":false},"unbindElement":{"!description":"Removes the defined binding context of this object, all bindings will now resolve relative to the parent context again.","!type":"fn(sModelName: String) -> sap.ui.base.ManagedObject","!category":"function","parameters":{"sModelName":"type: string, description: undefined"},"!static":false},"indexOfDependent":{"!description":"Checks for the provided <code>sap.ui.core.Element<\/code> in the aggregation {@link #getDependents dependents}. and returns its index if found or -1 otherwise.","!type":"fn(oDependent: sap.ui.core.Element) -> Number","!category":"function","parameters":{"oDependent":"type: sap.ui.core.Element, description: The dependent whose index is looked for"},"!static":false},"!module":"sap/ui/core/Element","bindElement":{"!description":"Bind the object to the referenced entity in the model, which is used as the binding context to resolve bound properties or aggregations of the object itself and all of its children relatively to the given path. If a relative binding path is used, this will be applied whenever the parent context changes. There is no difference between {@link sap.ui.core.Element#bindElement} and {@link sap.ui.base.ManagedObject#bindObject}.","!type":"fn(vPath: String | Object, mParameters?: Object) -> sap.ui.core.Element","!category":"function","parameters":{"mParameters":"type: object, description: map of additional parameters for this binding (only taken into account when vPath is a string in that case the properties described for vPath above are valid here). The supported parameters are listed in the corresponding model-specific implementation of <code>sap.ui.model.ContextBinding<\/code>.","vPath":"type: string|object, description: the binding path or an object with more detailed binding options"},"!static":false},"getCustomData":{"!description":"Gets content of aggregation {@link #getCustomData customData}.\n\nCustom Data, a data structure like a map containing arbitrary key value pairs.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getFocusInfo":{"!description":"Returns an object representing the serialized focus information To be overwritten by the specific control method","!type":"fn() -> Object","!category":"function","!static":false},"insertDependent":{"!description":"Inserts a dependent into the aggregation {@link #getDependents dependents}.","!type":"fn(oDependent: sap.ui.core.Element, iIndex: Number) -> sap.ui.core.Element","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the dependent should be inserted at; for a negative value of <code>iIndex<\/code>, the dependent is inserted at position 0; for a value greater than the current size of the aggregation, the dependent is inserted at the last position","oDependent":"type: sap.ui.core.Element, description: The dependent to insert; if empty, nothing is inserted"},"!static":false},"addEventDelegate":{"!description":"Adds a delegate that listens to the events that are fired on this element (as opposed to events which are fired BY this element).\n\nWhen this element is cloned, the same delegate will be added to all clones. This behavior is well-suited for applications which want to add delegates that also work with templates in aggregation bindings. For control development the internal \"addDelegate\" method which does not clone delegates by default may be more suitable, as typically each control instance takes care of its own delegates.\n\nTo avoid double registrations, all registrations of the given delegate are first removed and then the delegate is added.\n\n<strong>Important:<\/strong> If event delegates were added the delegate will still be called even if the event was processed and/or cancelled via <code>preventDefault<\/code> by the Element or another event delegate. <code>preventDefault<\/code> only prevents the event from bubbling. It should be checked e.g. in the event delegate's listener whether an Element is still enabled via <code>getEnabled<\/code>. Additionally there might be other things that delegates need to check depending on the event (e.g. not adding a key twice to an output string etc.).","!type":"fn(oDelegate: Object, oThis?: Object) -> sap.ui.core.Element","!category":"function","parameters":{"oThis":"type: object, description: if given, this object will be the \"this\" context in the listener methods; default is the delegate object itself","oDelegate":"type: object, description: the delegate object"},"!static":false},"setTooltip":{"!description":"Sets a new tooltip for this object. The tooltip can either be a simple string (which in most cases will be rendered as the <code>title<\/code> attribute of this Element) or an instance of {@link sap.ui.core.TooltipBase}.\n\nIf a new tooltip is set, any previously set tooltip is deactivated.","!type":"fn(vTooltip: String | sap.ui.core.TooltipBase)","!category":"function","parameters":{"vTooltip":"type: string|sap.ui.core.TooltipBase, description: undefined"},"!static":false},"_detachMediaContainerWidthChange":{"!description":"Removes a previously attached event handler from the change events of the screen width/closest media container width.","!type":"fn(fnFunction: fn(), oListener: Object, sName: String)","!category":"function","parameters":{"fnFunction":"type: function, description: undefined","sName":"type: string, description: undefined","oListener":"type: object, description: undefined"},"!static":false},"focus":{"!description":"Sets the focus to the stored focus DOM reference","!type":"fn()","!category":"function","!static":false},"getLayoutData":{"!description":"Gets content of aggregation {@link #getLayoutData layoutData}.\n\nDefines the layout constraints for this control when it is used inside a Layout. LayoutData classes are typed classes and must match the embedding Layout. See VariantLayoutData for aggregating multiple alternative LayoutData instances to a single Element.","!type":"fn() -> sap.ui.core.LayoutData","!category":"function","!static":false},"insertCustomData":{"!description":"Inserts a customData into the aggregation {@link #getCustomData customData}.","!type":"fn(oCustomData: sap.ui.core.CustomData, iIndex: Number) -> sap.ui.core.Element","!category":"function","parameters":{"oCustomData":"type: sap.ui.core.CustomData, description: The customData to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the customData should be inserted at; for a negative value of <code>iIndex<\/code>, the customData is inserted at position 0; for a value greater than the current size of the aggregation, the customData is inserted at the last position"},"!static":false},"clone":{"!description":"Create a clone of this Element.\n\nCalls {@link sap.ui.base.ManagedObject#clone} and additionally clones event delegates.","!type":"fn(sIdSuffix?: String, aLocalIds?: [[object Object]]) -> sap.ui.core.Element","!category":"function","parameters":{"aLocalIds":"type: [object Object][], description: Array of local IDs within the cloned hierarchy (internally used)","sIdSuffix":"type: string, description: Suffix to be appended to the cloned element ID"},"!static":false},"defineClass":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.3.1 Use the static <code>extend<\/code> method of the desired base class (e.g. {@link sap.ui.core.Element.extend})<br>Creates metadata for a UI Element by extending the Object Metadata.","!type":"fn(sClassName: String, oStaticInfo: Object, fnMetaImpl?: fn()) -> Object","!category":"function","parameters":{"sClassName":"type: string, description: name of the class to build the metadata for","fnMetaImpl":"type: function, description: constructor to be used for the metadata","oStaticInfo":"type: object, description: static information used to build the metadata"},"!static":true},"destroyTooltip":{"!description":"Destroys the tooltip in the aggregation named <code>tooltip<\/code>.","!type":"fn() -> sap.ui.core.Element","!category":"function","!static":false},"$":{"!description":"Returns the best suitable DOM node that represents this Element wrapped as jQuery object. I.e. the element returned by {@link sap.ui.core.Element#getDomRef} is wrapped and returned.\n\nIf an ID suffix is given, the ID of this Element is concatenated with the suffix (separated by a single dash) and the DOM node with that compound ID will be wrapped by jQuery. This matches the UI5 naming convention for named inner DOM nodes of a control.","!type":"fn(sSuffix?: String) -> jQuery","!category":"function","parameters":{"sSuffix":"type: string, description: ID suffix to get a jQuery object for"},"!static":false},"init":{"!description":"Initializes the element instance after creation.\n\nApplications must not call this hook method directly, it is called by the framework while the constructor of an element is executed.\n\nSubclasses of Element should override this hook to implement any necessary initialization.","!type":"fn()","!category":"function","!static":false},"rerender":{"!description":"This triggers immediate rerendering of its parent and thus of itself and its children.\n\nAs <code>sap.ui.core.Element<\/code> \"bubbles up\" the rerender, changes to child-<code>Elements<\/code> will also result in immediate rerendering of the whole sub tree.","!type":"fn()","!category":"function","!static":false},"!constructorDescription":"Constructs and initializes a UI Element with the given <code>sId<\/code> and settings.\n\nIf the optional <code>mSettings<\/code> are given, they must be a JSON-like object (object literal)\nthat defines values for properties, aggregations, associations or events keyed by their name.\n\n<b>Valid Names:<\/b>\n\nThe property (key) names supported in the object literal are exactly the (case sensitive)\nnames documented in the JSDoc for the properties, aggregations, associations and events\nof the control and its base classes. Note that for  0..n aggregations and associations this\nusually is the plural name, whereas it is the singular name in case of 0..1 relations.\n\nIf a key name is ambiguous for a specific control class (e.g. a property has the same\nname as an event), then this method prefers property, aggregation, association and\nevent in that order. To resolve such ambiguities, the keys can be prefixed with\n<code>aggregation:<\/code>, <code>association:<\/code> or <code>event:<\/code>.\nIn that case the keys must be quoted due to the ':'.\n\nEach subclass should document the set of supported names in its constructor documentation.\n\n<b>Valid Values:<\/b>\n\n<ul>\n<li>for normal properties, the value has to be of the correct simple type (no type conversion occurs)<\/li>\n<li>for 0..1 aggregations, the value has to be an instance of the aggregated control or element type<\/li>\n<li>for 0..n aggregations, the value has to be an array of instances of the aggregated type<\/li>\n<li>for 0..1 associations, an instance of the associated type or an id (string) is accepted<\/li>\n<li>0..n associations are not supported yet<\/li>\n<li>for events either a function (event handler) is accepted or an array of length 2\n    where the first element is a function and the 2nd element is an object to invoke the method on.<\/li>\n<\/ul>\n\nSpecial aggregation <code>dependents<\/code> is connected to the lifecycle management and databinding,\nbut not rendered automatically and can be used for popups or other dependent controls or elements.\nThis allows the definition of popup controls in declarative views and enables propagation of model\nand context information to them.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getTooltip tooltip} : sap.ui.core.TooltipBase|string<\/li>\n<li>{@link #getCustomData customData} : sap.ui.core.CustomData[]<\/li>\n<li>{@link #getLayoutData layoutData} : sap.ui.core.LayoutData<\/li>\n<li>{@link #getDependents dependents} : sap.ui.core.Element[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","create":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.44 use the more flexible {@link sap.ui.base.ManagedObject.create}.<br>Creates a new Element from the given data.\n\nIf <code>vData<\/code> is an Element already, that element is returned. If <code>vData<\/code> is an object (literal), then a new element is created with <code>vData<\/code> as settings. The type of the element is either determined by a property named <code>Type<\/code> in the <code>vData<\/code> or by a type information in the <code>oKeyInfo<\/code> object","!type":"fn(vData: sap.ui.core.Element | Object, oKeyInfo?: Object)","!category":"function","parameters":{"oKeyInfo":"type: object, description: An entity information (e.g. aggregation info)","vData":"type: sap.ui.core.Element|object, description: Data to create the element from"},"!static":true},"fireEvent":{"!description":"Fires the given event and notifies all listeners. Listeners must not change the content of the event.","!type":"fn(sEventId: String, mParameters: Object) -> sap.ui.core.Element","!category":"function","parameters":{"sEventId":"type: string, description: the event id","mParameters":"type: object, description: the parameter map"},"!static":false},"exit":{"!description":"Cleans up the element instance before destruction.\n\nApplications must not call this hook method directly, it is called by the framework when the element is {@link #destroy destroyed}.\n\nSubclasses of Element should override this hook to implement any necessary cleanup.","!type":"fn()","!category":"function","!static":false},"getFocusDomRef":{"!description":"Returns the DOM Element that should get the focus.\n\nTo be overwritten by the specific control method.","!type":"fn() -> Element","!category":"function","!static":false},"toString":{"!description":"Returns a simple string representation of this element.\n\nMainly useful for tracing purposes.","!type":"function toString() { [native code for Array.toString, arity=0] }\n) -> String","!category":"function","!static":false},"destroyLayoutData":{"!description":"Destroys the layoutData in the aggregation {@link #getLayoutData layoutData}.","!type":"fn() -> sap.ui.core.Element","!category":"function","!static":false},"!helpDescription":"Base Class for Elements.","!proto":"sap.ui.base.ManagedObject","indexOfCustomData":{"!description":"Checks for the provided <code>sap.ui.core.CustomData<\/code> in the aggregation {@link #getCustomData customData}. and returns its index if found or -1 otherwise.","!type":"fn(oCustomData: sap.ui.core.CustomData) -> Number","!category":"function","parameters":{"oCustomData":"type: sap.ui.core.CustomData, description: The customData whose index is looked for"},"!static":false},"addDependent":{"!description":"Adds some dependent to the aggregation {@link #getDependents dependents}.","!type":"fn(oDependent: sap.ui.core.Element) -> sap.ui.core.Element","!category":"function","parameters":{"oDependent":"type: sap.ui.core.Element, description: The dependent to add; if empty, nothing is inserted"},"!static":false},"getDomRefForSetting":{"!description":"Returns a DOM Element representing the given property or aggregation of this <code>Element<\/code>.\n\nCheck the documentation for the <code>selector<\/code> metadata setting in {@link sap.ui.base.ManagedObject.extend} for details about its syntax or its expected result.\n\nThe default implementation of this method will return <code>null<\/code> in any of the following cases: <ul> <li>no setting (property or aggregation) with the given name exists in the class of this <code>Element<\/code><\/li> <li>the setting has no selector defined in its metadata<\/li> <li>{@link #getDomRef this.getDomRef()} returns no DOM Element for this <code>Element<\/code> or the returned DOM Element has no parentNode<\/li> <li>the selector does not match anything in the context of <code>this.getDomRef().parentNode<\/code><\/li> <\/ul> If more than one DOM Element within the element matches the selector, the first occurrence is returned.\n\nSubclasses can override this method to handle more complex cases which can't be described by a CSS selector.","!type":"fn(sSettingsName: String) -> Element","!category":"function","parameters":{"sSettingsName":"type: string, description: Name of the property or aggregation"},"!static":false},"data":{"!description":"Attaches custom data to an <code>Element<\/code> or retrieves attached data.\n\nUsage: <pre>\n   data(\"myKey\", myData)\n<\/pre> Attaches <code>myData<\/code> (which can be any JS data type, e.g. a number, a string, an object, or a function) to this element, under the given key \"myKey\". If the key already exists,the value will be updated.\n\n<pre>\n   data(\"myKey\", myData, writeToDom)\n<\/pre> Attaches <code>myData<\/code> to this element, under the given key \"myKey\" and (if <code>writeToDom<\/code> is true) writes key and value to the HTML. If the key already exists,the value will be updated. While <code>oValue<\/code> can be any JS data type to be attached, it must be a string to be also written to DOM. The key must also be a valid HTML attribute name (it must conform to <code>sap.ui.core.ID<\/code> and may contain no colon) and may not start with \"sap-ui\". When written to HTML, the key is prefixed with \"data-\".\n\n<pre>\n   data(\"myKey\")\n<\/pre> Retrieves whatever data has been attached to this element (using the key \"myKey\") before\n\n<pre>\n   data(\"myKey\", null)\n<\/pre> Removes whatever data has been attached to this element (using the key \"myKey\") before\n\n<pre>\n   data(null)\n<\/pre> Removes all data\n\n<pre>\n   data()\n<\/pre> Returns all data, as a map","!type":"fn()","!category":"function","!static":false},"_getMediaContainerWidth":{"!description":"Returns the contextual width of an element, if set, or <code>undefined<\/code> otherwise","!type":"fn() -> *","!category":"function","!static":false},"setLayoutData":{"!description":"Sets the {@link sap.ui.core.LayoutData} defining the layout constraints for this control when it is used inside a layout.","!type":"fn(oLayoutData: sap.ui.core.LayoutData) -> sap.ui.core.Element","!category":"function","parameters":{"oLayoutData":"type: sap.ui.core.LayoutData, description: which should be set"},"!static":false},"enhanceAccessibilityState":{"!description":"Allows the parent of a control to enhance the aria information during rendering.\n\nThis function is called by the RenderManager's writeAccessibilityState method for the parent of the currently rendered control - if the parent implements it.","!type":"fn(oElement: sap.ui.core.Element, mAriaProps: Object) -> Object","!category":"function","parameters":{"mAriaProps":"type: object, description: map of aria properties keyed by there name (without prefix \"aria-\")","oElement":"type: sap.ui.core.Element, description: the Control/Element for which aria properties are rendered"},"!static":false},"removeCustomData":{"!description":"Removes a customData from the aggregation {@link #getCustomData customData}.","!type":"fn(vCustomData: Number | String | sap.ui.core.CustomData) -> sap.ui.core.CustomData","!category":"function","parameters":{"vCustomData":"type: int|string|sap.ui.core.CustomData, description: The customData to remove or its index or id"},"!static":false},"destroy":{"!description":"Cleans up the resources associated with this element and all its children.\n\nAfter an element has been destroyed, it can no longer be used in the UI!\n\nApplications should call this method if they don't need the element any longer.","!type":"fn(bSuppressInvalidate?: Boolean)","!category":"function","parameters":{"bSuppressInvalidate":"type: boolean, description: if true, the UI element is not marked for redraw"},"!static":false},"!category":"class","addCustomData":{"!description":"Adds some customData to the aggregation {@link #getCustomData customData}.","!type":"fn(oCustomData: sap.ui.core.CustomData) -> sap.ui.core.Element","!category":"function","parameters":{"oCustomData":"type: sap.ui.core.CustomData, description: The customData to add; if empty, nothing is inserted"},"!static":false},"getDomRef":{"!description":"Returns the best suitable DOM Element that represents this UI5 Element. By default the DOM Element with the same ID as this Element is returned. Subclasses should override this method if the lookup via id is not sufficient.\n\nNote that such a DOM Element does not necessarily exist in all cases. Some elements or controls might not have a DOM representation at all (e.g. a naive FlowLayout) while others might not have one due to their current state (e.g. an initial, not yet rendered control).\n\nIf an ID suffix is given, the ID of this Element is concatenated with the suffix (separated by a single dash) and the DOM node with that compound ID will be returned. This matches the UI5 naming convention for named inner DOM nodes of a control.","!type":"fn(sSuffix?: String) -> Element","!category":"function","parameters":{"sSuffix":"type: string, description: ID suffix to get the DOMRef for"},"!static":false},"removeAllDependents":{"!description":"Removes all the controls from the aggregation {@link #getDependents dependents}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"removeEventDelegate":{"!description":"Removes the given delegate from this element.\n\nThis method will remove all registrations of the given delegate, not only one.","!type":"fn(oDelegate: Object) -> sap.ui.core.Element","!category":"function","parameters":{"oDelegate":"type: object, description: the delegate object"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.Element with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"_attachMediaContainerWidthChange":{"!description":"Registers the given event handler to change events of the screen width/closest media container width, based on the range set with the specified name.","!type":"fn(fnFunction: fn(), oListener: Object, sName: String)","!category":"function","parameters":{"fnFunction":"type: function, description: undefined","sName":"type: string, description: undefined","oListener":"type: object, description: undefined"},"!static":false},"prop":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28.0 The contract of this method is not fully defined and its write capabilities overlap with applySettings<br>This function either calls set[sPropertyName] or get[sPropertyName] with the specified property name depending if an <code>oValue<\/code> is provided or not.","!type":"fn(sPropertyName: String, oValue?: Object) -> Object | sap.ui.core.Element","!category":"function","parameters":{"oValue":"type: any, description: value to set the property to","sPropertyName":"type: string, description: name of the property to set"},"!static":false},"getTooltip":{"!description":"Returns the tooltip for this element if any or an undefined value. The tooltip can either be a simple string or a subclass of {@link sap.ui.core.TooltipBase}.\n\nCallers that are only interested in tooltips of type string (e.g. to render them as a <code>title<\/code> attribute), should call the convenience method {@link #getTooltip_AsString} instead. If they want to get a tooltip text no matter where it comes from (be it a string tooltip or the text from a TooltipBase instance) then they could call {@link #getTooltip_Text} instead.","!type":"fn() -> String | sap.ui.core.TooltipBase","!category":"function","!static":false},"removeAllCustomData":{"!description":"Removes all the controls from the aggregation {@link #getCustomData customData}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"!description":"Base Class for Elements.","getTooltip_AsString":{"!description":"Returns the tooltip for this element but only if it is a simple string. Otherwise an undefined value is returned.","!type":"fn() -> String","!category":"function","!static":false},"getTooltip_Text":{"!description":"Returns the main text for the current tooltip or undefined if there is no such text. If the tooltip is an object derived from sap.ui.core.Tooltip, then the text property of that object is returned. Otherwise the object itself is returned (either a string or undefined or null).","!type":"fn() -> String","!category":"function","!static":false},"destroyCustomData":{"!description":"Destroys all the customData in the aggregation {@link #getCustomData customData}.","!type":"fn() -> sap.ui.core.Element","!category":"function","!static":false},"applyFocusInfo":{"!description":"Applies the focus info.\n\nTo be overwritten by the specific control method.","!type":"fn(oFocusInfo: Object)","!category":"function","parameters":{"oFocusInfo":"type: object, description: undefined"},"!static":false},"findElements":{"!description":"Searches and returns an array of child elements and controls which are referenced within an aggregation or aggregations of child elements/controls. This can be either done recursive or not.\n\n<b>Take care: this operation might be expensive.<\/b>","!type":"fn(bRecursive: Boolean) -> [[object Object]]","!category":"function","parameters":{"bRecursive":"type: boolean, description: true, if all nested children should be returned."},"!static":false},"getElementBinding":{"!description":"Get the context binding object for a specific model name.\n\n<b>Note:<\/b> to be compatible with future versions of this API, you must not use the following model names: <ul> <li><code>null<\/code><\/li> <li>empty string <code>\"\"<\/code><\/li> <li>string literals <code>\"null\"<\/code> or <code>\"undefined\"<\/code><\/li> <\/ul> Omitting the model name (or using the value <code>undefined<\/code>) is explicitly allowed and refers to the default model.","!type":"fn(sModelName?: String) -> sap.ui.model.ContextBinding","!category":"function","parameters":{"sModelName":"type: string, description: Name of the model or <code>undefined<\/code>"},"!static":false},"getDependents":{"!description":"Gets content of aggregation {@link #getDependents dependents}.\n\nDependents are not rendered, but their databinding context and lifecycle are bound to the aggregating Element.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getInterface":{"!type":"fn()","!category":"function","!static":false},"_getCurrentMediaContainerRange":{"!description":"Returns the current media range of the Device or the closest media container","!type":"fn(sName: String) -> map","!category":"function","parameters":{"sName":"type: string, description: undefined"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.Element.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.IconColor":{"Default":{"!description":"Default color (brand color)","!type":"String","!category":"enum"},"!description":"Semantic Colors of an icon.","Neutral":{"!description":"Neutral color.","!type":"String","!category":"enum"},"!category":"static class","Critical":{"!description":"Critical color","!type":"String","!category":"enum"},"Positive":{"!description":"Positive color","!type":"String","!category":"enum"},"!module":"sap/ui/core/library","Negative":{"!description":"Negative color","!type":"String","!category":"enum"}},"jQuery":{"zIndex":{"!description":"Get the z-index for an element.","!type":"fn(zIndex: Integer) -> Number","!category":"function"},"removeAriaLabelledBy":{"!description":"Removes the given ID reference from the aria-labelledby attribute.","!type":"fn(sId: String) -> jQuery","!category":"function"},"root":{"!type":"fn(oRootControl: Object) -> jQuery","!category":"function"},"lastFocusableDomRef":{"!description":"Returns the last focusable domRef in a given container","!type":"fn() -> Element","!category":"function"},"outerHTML":{"!description":"Returns the outer HTML of the given HTML element.","!type":"fn() -> String","!category":"function"},"!module":"jquery.sap.global","removeAriaDescribedBy":{"!description":"Removes the given ID reference from the aria-describedby attribute.","!type":"fn(sId: String) -> jQuery","!category":"function"},"selectText":{"!description":"Sets the text selection in the first element of the collection.\n\n<b>Note<\/b>: This feature is only supported for input element\u2019s type of text, search, url, tel and password.","!type":"fn(iStart: Number, iEnd: Number) -> jQuery","!category":"function"},"addAriaDescribedBy":{"!description":"Adds the given ID reference to the aria-describedby attribute.","!type":"fn(sId: String, bPrepend?: Boolean) -> jQuery","!category":"function"},"!category":"namespace","disableSelection":{"!description":"Disable HTML elements selection.","!type":"fn() -> jQuery","!category":"function"},"scrollRightRTL":{"!description":"Returns the MIRRORED scrollLeft value of the first element in the given jQuery collection in right-to-left mode. Precondition: The element is rendered in RTL mode.\n\nReason for this method is that the major browsers return three different values for the same scroll position when in RTL mode. This method hides those differences and returns the value that would be returned in LTR mode if the UI would be mirrored horizontally: The distance in px how far the given container is scrolled away from the rightmost scroll position.\n\nReturns \"undefined\" if no element is given.","!type":"fn() -> Number","!category":"function"},"enableSelection":{"!description":"Enable HTML elements to get selected.","!type":"fn() -> jQuery","!category":"function"},"control":{"!description":"Extension function to the jQuery.fn which identifies SAPUI5 controls in the given jQuery context.","!type":"fn(iIndex?: Number) -> [[object Object]]","!category":"function"},"os":"jQuery.os","getSelectedText":{"!description":"Retrieve the selected text in the first element of the collection.\n\n<b>Note<\/b>: This feature is only supported for input element\u2019s type of text, search, url, tel and password.","!type":"fn() -> String","!category":"function"},"cursorPos":{"!description":"Sets or gets the position of the cursor in an element that supports cursor positioning.","!type":"fn(iPos: Number) -> Number | jQuery","!category":"function"},"Event":"jQuery.Event_obj","rect":{"!description":"Returns a rectangle describing the current visual positioning of the first DOM object in the collection (or <code>null<\/code> if no element was given).","!type":"fn() -> Object","!category":"function"},"hasTabIndex":{"!description":"Returns <code>true<\/code> if the first element has a set tabindex.","!type":"fn() -> Boolean","!category":"function"},"sap":"jQuery.sap","scrollLeftRTL":{"!description":"Sets or returns the scrollLeft value of the first element in the given jQuery collection in right-to-left mode. Precondition: The element is rendered in RTL mode.\n\nReason for this method is that the major browsers use three different values for the same scroll position when in RTL mode. This method hides those differences and returns/applies the same value that would be returned in LTR mode: The distance in px how far the given container is scrolled away from the leftmost scroll position.\n\nReturns \"undefined\" if no element and no iPos is given.","!type":"fn(iPos: Number) -> jQuery | Number","!category":"function"},"addAriaLabelledBy":{"!description":"Adds the given ID reference to the the aria-labelledby attribute.","!type":"fn(sId: String, bPrepend?: Boolean) -> jQuery","!category":"function"},"!description":"Provides base functionality of the SAP jQuery plugin as extension of the jQuery framework.<br/> See also <a href=\"http://api.jquery.com/jQuery/\">jQuery<\/a> for details.<br/> Although these functions appear as static ones, they are meant to be used on jQuery instances.<br/> If not stated differently, the functions follow the fluent interface paradigm and return the jQuery instance for chaining of statements.\n\nExample for usage of an instance method: <pre>\n  var oRect = jQuery(\"#myDiv\").rect();\n  alert(\"Top Position: \" + oRect.top);\n<\/pre>","device":"jQuery.device","parentByAttribute":{"!description":"Gets the next parent DOM element with a given attribute and attribute value starting above the first given element","!type":"fn(sAttribute: String, sValue: String) -> Element","!category":"function"},"jQuery":"jQuery","uiarea":{"!description":"Returns a single UIArea if an index is provided or an array of UIAreas.","!type":"fn(iIdx: Number) -> Object | Array","!category":"function"},"firstFocusableDomRef":{"!description":"Returns the first focusable domRef in a given container (the first element of the collection)","!type":"fn() -> Element","!category":"function"},"!helpDescription":"Provides base functionality of the SAP jQuery plugin as extension of the jQuery framework.<br/> See also <a href=\"http://api.jquery.com/jQuery/\">jQuery<\/a> for details.<br/> Although these functions appear as static ones, they are meant to be used on jQuery instances.<br/> If not stated differently, the functions follow the fluent interface paradigm and return the jQuery instance for chaining of statements.\n\nExample for usage of an instance method: <pre>\n  var oRect = jQuery(\"#myDiv\").rect();\n  alert(\"Top Position: \" + oRect.top);\n<\/pre>"},"sap.ui.model.odata.type.Int16_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Int16 with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.Int.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.Int16"},"jQuery.sap.storage":{"isSupported":{"!description":"Returns whether the given storage is suppported.","!type":"fn() -> Boolean","!category":"function","!static":"true"},"put":{"!description":"Stores the passed state string in the session, under the key sStorageKeyPrefix + sId.\n\nsStorageKeyPrefix is the id prefix defined for the storage instance (@see jQuery.sap#storage)","!type":"fn(sId: String, sStateToStore: String) -> Boolean","!category":"function","!static":"true"},"get":{"!description":"Retrieves the state string stored in the session under the key sStorageKeyPrefix + sId.\n\nsStorageKeyPrefix is the id prefix defined for the storage instance (@see jQuery.sap#storage)","!type":"fn(sId: String) -> String","!category":"function","!static":"true"},"remove":{"!description":"Deletes the state string stored in the session under the key sStorageKeyPrefix + sId.s\n\nsStorageKeyPrefix is the id prefix defined for the storage instance (@see jQuery.sap#storage)","!type":"fn(sId: String) -> Boolean","!category":"function","!static":"true"},"Type":"jQuery.sap.storage.Type","!module":"jquery.sap.storage","clear":{"!description":"Deletes all the entries saved in the session (Independent of the current Storage instance!).\n\nCAUTION: This method should be called only in very particular situations, when a global erasing of data is required. Given that the method deletes the data saved under any ID, it should not be called when managing data for specific controls.","!type":"fn() -> Boolean","!category":"function","!static":"true"},"Storage":"jQuery.sap.storage.Storage","getType":{"!description":"Returns the type of the storage.","!type":"fn() -> jQuery.sap.storage.Type | String","!category":"function","!static":"true"},"!description":"Returns a {@link jQuery.sap.storage.Storage Storage} object for a given HTML5 storage (type) and, as a convenience, provides static functions to access the default (session) storage.\n\nWhen called as a function, it returns an instance of {@link jQuery.sap.storage.Storage}, providing access to the storage of the given {@link jQuery.sap.storage.Type} or to the given HTML5 Storage object.\n\nThe default session storage can be easily accessed with methods {@link jQuery.sap.storage.get}, {@link jQuery.sap.storage.put}, {@link jQuery.sap.storage.remove}, {@link jQuery.sap.storage.clear}, {@link jQuery.sap.storage.getType} and {@link jQuery.sap.storage.removeAll}","!category":"namespace","!helpDescription":"Returns a {@link jQuery.sap.storage.Storage Storage} object for a given HTML5 storage (type) and, as a convenience, provides static functions to access the default (session) storage.\n\nWhen called as a function, it returns an instance of {@link jQuery.sap.storage.Storage}, providing access to the storage of the given {@link jQuery.sap.storage.Type} or to the given HTML5 Storage object.\n\nThe default session storage can be easily accessed with methods {@link jQuery.sap.storage.get}, {@link jQuery.sap.storage.put}, {@link jQuery.sap.storage.remove}, {@link jQuery.sap.storage.clear}, {@link jQuery.sap.storage.getType} and {@link jQuery.sap.storage.removeAll}","removeAll":{"!description":"Deletes all state strings stored in the session under the key prefix sStorageKeyPrefix + sIdPrefix.\n\nsStorageKeyPrefix is the id prefix defined for the storage instance (@see jQuery.sap#storage)","!type":"fn(sIdPrefix: String) -> Boolean","!category":"function","!static":"true"}},"sap.ui.model.analytics.odata4analytics.ParameterizationRequest_obj":{"!type":"fn(oParameterization: sap.ui.model.analytics.odata4analytics.Parameterization)","prototype":"sap.ui.model.analytics.odata4analytics.ParameterizationRequest"},"sap.ui.core.service.ServiceFactory":{"destroy":{"!description":"Lifecycle method to destroy the service factory instance.","!type":"fn()","!category":"function","!static":false},"!description":"A service factory is used to create service instances for a specific context. The service factory needs to be registered in a central {@link sap.ui.core.service.ServiceFactoryRegistry service factory registry}. Consumers of services require the service factory to create service instances.\n\nThe service factory base class can be used in a generic way to act as a factory for any service: <pre>\nsap.ui.require([\n  \"sap/ui/core/service/ServiceFactoryRegistry\",\n  \"sap/ui/core/service/ServiceFactory\",\n  \"my/Service\"\n], function(ServiceFactoryRegistry, ServiceFactory, MyService) {\n\n  ServiceFactoryRegistry.register(new ServiceFactory(MService));\n\n});\n<\/pre>\n\nAdditionally a concrete service factory can be implemented by extending the service factory base class if additional functionality is needed when creating new instances for a specific context: <pre>\nsap.ui.define(\"my/ServiceFactory\", [\n  \"sap/ui/core/service/ServiceFactoryRegistry\",\n  \"sap/ui/core/service/ServiceFactory\",\n  \"my/Service\"\n], function(ServiceFactoryRegistry, ServiceFactory, MyService) {\n\n  return ServiceFactory.extend(\"my.ServiceFactory\", {\n    createInstance: function(oServiceContext) {\n      return Promise.resolve(new MyService(oServiceContext));\n    }\n  });\n\n});\n<\/pre>\n\nAnother option for the usage of the service factory is to provide a structured object with information about the service which will create an anonymous service internally: <pre>\nsap.ui.define(\"my/ServiceFactory\", [\n  \"sap/ui/core/service/ServiceFactoryRegistry\",\n  \"sap/ui/core/service/ServiceFactory\",\n  \"my/Service\"\n], function(ServiceFactoryRegistry, ServiceFactory, MyService) {\n\n  return new ServiceFactory({\n\n    init: function() { ... },\n    exit: function() { ... },\n\n    doSomething: function() { ... }\n\n  });\n\n});\n<\/pre>\n\nAs <code>createInstance<\/code> returns a <code>Promise<\/code> e.g. the service module can also be loaded asynchronously and resolve once the module has been loaded and instantiated.","extend":{"!description":"Creates a new subclass of class sap.ui.core.service.ServiceFactory with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Creates a service factory.","!module":"sap/ui/core/service/ServiceFactory","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.service.ServiceFactory.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"createInstance":{"!description":"Creates a new instance of a service. When used as a generic service factory by providing a service constructor function it will create a new service instance otherwise the function will fail. For custom service factories this function has to be overridden and should return a <code>Promise<\/code>.","!type":"fn(oServiceContext: Object) -> Promise","!category":"function","parameters":{"oServiceContext":"type: object, description: Context for which the service is created"},"!static":false},"!proto":"sap.ui.base.Object","!helpDescription":"A service factory is used to create service instances for a specific context. The service factory needs to be registered in a central {@link sap.ui.core.service.ServiceFactoryRegistry service factory registry}. Consumers of services require the service factory to create service instances.\n\nThe service factory base class can be used in a generic way to act as a factory for any service: <pre>\nsap.ui.require([\n  \"sap/ui/core/service/ServiceFactoryRegistry\",\n  \"sap/ui/core/service/ServiceFactory\",\n  \"my/Service\"\n], function(ServiceFactoryRegistry, ServiceFactory, MyService) {\n\n  ServiceFactoryRegistry.register(new ServiceFactory(MService));\n\n});\n<\/pre>\n\nAdditionally a concrete service factory can be implemented by extending the service factory base class if additional functionality is needed when creating new instances for a specific context: <pre>\nsap.ui.define(\"my/ServiceFactory\", [\n  \"sap/ui/core/service/ServiceFactoryRegistry\",\n  \"sap/ui/core/service/ServiceFactory\",\n  \"my/Service\"\n], function(ServiceFactoryRegistry, ServiceFactory, MyService) {\n\n  return ServiceFactory.extend(\"my.ServiceFactory\", {\n    createInstance: function(oServiceContext) {\n      return Promise.resolve(new MyService(oServiceContext));\n    }\n  });\n\n});\n<\/pre>\n\nAnother option for the usage of the service factory is to provide a structured object with information about the service which will create an anonymous service internally: <pre>\nsap.ui.define(\"my/ServiceFactory\", [\n  \"sap/ui/core/service/ServiceFactoryRegistry\",\n  \"sap/ui/core/service/ServiceFactory\",\n  \"my/Service\"\n], function(ServiceFactoryRegistry, ServiceFactory, MyService) {\n\n  return new ServiceFactory({\n\n    init: function() { ... },\n    exit: function() { ... },\n\n    doSomething: function() { ... }\n\n  });\n\n});\n<\/pre>\n\nAs <code>createInstance<\/code> returns a <code>Promise<\/code> e.g. the service module can also be loaded asynchronously and resolve once the module has been loaded and instantiated."},"sap.ui.core.Popup_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Popup with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oContent: sap.ui.core.Control | sap.ui.core.Element | DOMNode, bModal?: Boolean, bShadow?: Boolean, bAutoClose?: Boolean)","prototype":"sap.ui.core.Popup"},"sap.ui.core.mvc":{"asyncSupport":{"!description":"Flag for feature detection of asynchronous loading/rendering","!type":"String","!category":"enum"},"displayBlock":{"!description":"Whether the CSS display should be set to \"block\". Set this to \"true\" if the default display \"inline-block\" causes a vertical scrollbar with Views that are set to 100% height. Do not set this to \"true\" if you want to display other content in the same HTML parent on either side of the View (setting to \"true\" may push that other content to the next/previous line).","!type":"Boolean","!category":"enum"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nSee {@link sap.ui.core.RenderManager#writeInvisiblePlaceholderData RenderManager#writeInvisiblePlaceholderData} for details.","!type":"Boolean","!category":"enum"},"JSONView":"sap.ui.core.mvc.JSONView_obj","TemplateView":"sap.ui.core.mvc.TemplateView_obj","width":{"!description":"The width","!type":"sap.ui.core.CSSSize","!category":"enum"},"busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!type":"sap.ui.core.BusyIndicatorSize","!category":"enum"},"busy":{"!description":"Whether the control is currently in busy state.","!type":"Boolean","!category":"enum"},"JSView":"sap.ui.core.mvc.JSView_obj","!module":"sap/ui/core/mvc/View","HTMLView":"sap.ui.core.mvc.HTMLView_obj","XMLView":"sap.ui.core.mvc.XMLView_obj","View":"sap.ui.core.mvc.View_obj","viewName":{"!description":"Name of the View","!type":"String","!category":"enum"},"height":{"!description":"The height","!type":"sap.ui.core.CSSSize","!category":"enum"},"Controller":"sap.ui.core.mvc.Controller_obj","Preprocessor":"sap.ui.core.mvc.View.Preprocessor","!category":"namespace","fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is raised.\n\nSee {@link sap.ui.core.Control#attachValidateFieldGroup}.","!type":"[String]","!category":"enum"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!type":"Number","!category":"enum"},"PreprocessorType":"sap.ui.core.mvc.XMLView.PreprocessorType"},"sap.ui.model.odata.ODataAnnotations_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.ODataAnnotations with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(aAnnotationURI: [String | [object Object]], oMetadata: sap.ui.model.odata.ODataMetadata, mParams: Object)","prototype":"sap.ui.model.odata.ODataAnnotations"},"sap.ui.core.IntervalTrigger":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.IntervalTrigger with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Creates an instance of EventBus.","removeListener":{"!description":"Removes corresponding listener from list.","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: is the previously registered function","oListener":"type: object, description: that should be removed"},"!static":false},"!module":"sap/ui/core/IntervalTrigger","addListener":{"!description":"Adds a listener to the list that should be triggered.","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: is the called function that should be called when the trigger want to trigger the listener.","oListener":"type: object, description: that should be triggered."},"!static":false},"destroy":{"!description":"Destructor method for objects.","!type":"fn()","!category":"function","!static":false},"!description":"Provides a trigger that triggers in a set interval and calls all registered listeners. If the interval is <= 0 the trigger is switched off and won't trigger at all.","!category":"class","getInterface":{"!type":"fn()","!category":"function","!static":false},"!helpDescription":"Provides a trigger that triggers in a set interval and calls all registered listeners. If the interval is <= 0 the trigger is switched off and won't trigger at all.","!proto":"sap.ui.base.Object","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.IntervalTrigger.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"setInterval":{"!description":"Sets the trigger interval. If the value is >0 triggering will start if there are any registered listeners. If the interval is set to <=0 triggering will stop.","!type":"fn(iInterval: Number)","!category":"function","parameters":{"iInterval":"type: int, description: sets the interval in milliseconds when a new triggering should occur."},"!static":false}},"sap.ui.model.analytics.AnalyticalTreeBindingAdapter_obj":{"!type":"fn()","prototype":"sap.ui.model.analytics.AnalyticalTreeBindingAdapter"},"sap.ui.test.matchers.LabelFor_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.test.matchers.LabelFor with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(mSettings: Object)","prototype":"sap.ui.test.matchers.LabelFor"},"sap.ui.model.Model_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.Model with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.message.MessageProcessor.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.model.Model"},"sap.ui.model.odata.ODataPropertyBinding":{"getValue":{"!description":"Returns the current value of the bound target","!type":"fn() -> Object","!category":"function","!static":false},"!description":"Property binding implementation for oData format","extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.ODataPropertyBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.PropertyBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!module":"sap/ui/model/odata/ODataPropertyBinding","initialize":{"!description":"Initialize the binding. The message should be called when creating a binding. If metadata is not yet available, do nothing, method will be called again when metadata is loaded.","!type":"fn()","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.ODataPropertyBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.PropertyBinding","!helpDescription":"Property binding implementation for oData format"},"sap.ui.core.Message_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Message with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.Message"},"sap.ui.test.gherkin.StepDefinitions":{"register":{"!description":"Registers a step definition.","!type":"fn(rRegex: RegExp, fnFunc: fn())","!category":"function","parameters":{"rRegex":"type: RegExp, description: the regular expression that matches the feature file step (with leading \"Given\", \"When\", \"Then\", \"But\" or \"*\" removed). E.g. if the feature file has the step \"Then I should be served a coffee\" it will be truncated to \"I should be served a coffee\" and tested against \"rRegex\" to check for a match. The simple regular expression /^I should be served a coffee$/i would match this text. The regular expression can specify capturing groups, which will be passed as parameters to \"fnFunc\".","fnFunc":"type: function, description: the function to execute in the event that the regular expression matches. Receives regular expression capturing groups as parameters in the same order that they are specified in the regular expression. If a data table is specified for the step, it will be passed as an additional final parameter. At execution time, all functions within a particular scenario will execute within the same \"this\" context."},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.test.gherkin.StepDefinitions with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","init":{"!description":"Registers the step definitions by calling the method \"register\".","!type":"fn()","!category":"function","!static":false},"closeApplication":{"!description":"Closes the application and cleans up any mess made by the tests. To avoid erroneous exceptions during test execution, make sure that it is safe to run this method even if the application was never started.","!type":"fn()","!category":"function","!static":false},"!constructorDescription":"A Gherkin feature file is human-readable, and the computer does not know how to execute its steps. This\nStepDefinitions class provides the interface between human and machine. It defines what each step in the Gherkin\nfeature file will actually do when it is executed.\n\nMeant to be implemented/overridden by a child object. Specifically, the functions \"init\" and \"closeApplication\"\nneed to be overridden.","!module":"sap/ui/test/gherkin/StepDefinitions","getMetadata":{"!description":"Returns a metadata object for class sap.ui.test.gherkin.StepDefinitions.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.base.Object"},"sap.ui.test.matchers.Ancestor":{"!description":"Ancestor - checks if a control has a defined ancestor","!category":"class","!module":"sap/ui/test/matchers/Ancestor","!proto":"sap.ui.base.Object","!helpDescription":"Ancestor - checks if a control has a defined ancestor"},"sap.ui.model.json.JSONTreeBinding_obj":{"!type":"fn(oModel: sap.ui.model.json.JSONModel, sPath: String, oContext?: Object, aFilters?: [sap.ui.model.Filter | [object Object]], mParameters?: Object)","prototype":"sap.ui.model.json.JSONTreeBinding"},"sap.ui.model.type.Unit":{"!description":"This class represents the Unit composite type.","extend":{"!description":"Creates a new subclass of class sap.ui.model.type.Unit with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.CompositeType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"formatValue":{"!description":"Format the given array containing amount and Unit code to an output value of type string. Other internal types than 'string' are not supported by the Unit type. If a source format has been defined for this type, the formatValue does also accept a string value as input, which will be parsed into an array using the source format. If aValues is not defined or null, null will be returned.","!type":"fn(vValue: Array | String, sInternalType: String) -> Object","!category":"function","parameters":{"sInternalType":"type: string, description: the target type","vValue":"type: array|string, description: the array of values or string value to be formatted"},"!static":false},"!category":"class","!constructorDescription":"Constructor for a Unit type.","!module":"sap/ui/model/type/Unit","parseValue":{"!description":"Parse a string value to an array containing amount and Unit. Parsing of other internal types than 'string' is not supported by the Unit type. In case a source format has been defined, after parsing the Unit is formatted using the source format and a string value is returned instead.","!type":"fn(vValue: Object, sInternalType: String, aCurrentValues: Array) -> Array | String","!category":"function","parameters":{"aCurrentValues":"type: array, description: the current values of all binding parts","sInternalType":"type: string, description: the source type","vValue":"type: any, description: the value to be parsed"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.type.Unit.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.CompositeType","!helpDescription":"This class represents the Unit composite type."},"sap.ui.core.ScrollBarAction":{"Step":{"!description":"Single step scrolling caused by clicking an arrow button or arrow key.","!type":"String","!category":"enum"},"MouseWheel":{"!description":"Scrolling done by mouse wheel","!type":"String","!category":"enum"},"!description":"Actions are: Click on track, button, drag of thumb, or mouse wheel click","Page":{"!description":"Range scrolling caused by clicking track area or using page up or page down key.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/ui/core/library","Drag":{"!description":"Scrolling done by dragging the scroll bar's paint thumb","!type":"String","!category":"enum"}},"sap.ui.model.odata.type.TimeOfDay_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.TimeOfDay with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.TimeOfDay"},"sap.ui.app.Application":{"onError":{"!description":"On error hook. Override this method in your Application class implementation to listen to unhandled errors.","!type":"fn(sMessage: String, sFile: String, iLine: Number)","!category":"function","parameters":{"sMessage":"type: string, description: The error message.","sFile":"type: string, description: The file where the error occurred","iLine":"type: number, description: The line number of the error"},"!static":false},"setRoot":{"!description":"Sets a new value for property {@link #getRoot root}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sRoot: String) -> sap.ui.app.Application","!category":"function","parameters":{"sRoot":"type: string, description: New value for property <code>root<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.app.Application with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Component.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setRootComponent":{"!description":"Sets the aggregated {@link #getRootComponent rootComponent}.","!type":"fn(oRootComponent: sap.ui.core.UIComponent) -> sap.ui.app.Application","!category":"function","parameters":{"oRootComponent":"type: sap.ui.core.UIComponent, description: The rootComponent to set"},"!static":false},"!constructorDescription":"Abstract application class. Extend this class to create a central application class.\n\nOnly one instance is allowed.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getRoot root} : string<\/li>\n<li>{@link #getConfig config} : any<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getRootComponent rootComponent} : sap.ui.core.UIComponent<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Component#constructor sap.ui.core.Component}\ncan be used as well.","setConfig":{"!description":"Sets the configuration model.","!type":"fn(vConfig: String | Object | sap.ui.model.Model)","!category":"function","parameters":{"vConfig":"type: string|object|sap.ui.model.Model, description: the configuration model, the configuration object or a URI string to load a JSON configuration file."},"!static":false},"getView":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined undefined<br>Returns the application root component.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"!module":"sap/ui/app/Application","destroyRootComponent":{"!description":"Destroys the rootComponent in the aggregation {@link #getRootComponent rootComponent}.","!type":"fn() -> sap.ui.app.Application","!category":"function","!static":false},"main":{"!description":"The main method is called when the DOM and UI5 is completely loaded. Override this method in your Application class implementation to execute code which relies on a loaded DOM / UI5.","!type":"fn()","!category":"function","!static":false},"destroy":{"!type":"fn()","!category":"function","!static":false},"getConfig":{"!description":"Gets current value of property {@link #getConfig config}.","!type":"fn() -> Object","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.1 The Component class is enhanced to take care about the Application code.<br>Base class for application classes","onExit":{"!description":"On exit application hook. Override this method in your Application class implementation, to handle cleanup of the application.","!type":"fn()","!category":"function","!static":false},"!category":"class","getRoot":{"!description":"Gets current value of property {@link #getRoot root}.","!type":"fn() -> String","!category":"function","!static":false},"getRootComponent":{"!description":"Gets content of aggregation {@link #getRootComponent rootComponent}.","!type":"fn() -> sap.ui.core.UIComponent","!category":"function","!static":false},"onBeforeExit":{"!description":"On before exit application hook. Override this method in your Application class implementation, to handle cleanup before the real exit or to prompt a question to the user, if the application should be exited.","!type":"fn() -> String","!category":"function","!static":false},"createRootComponent":{"!description":"Creates and returns the root component. Override this method in your application implementation, if you want to override the default creation by metadata.","!type":"fn() -> sap.ui.core.UIComponent","!category":"function","!static":false},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.1 The Component class is enhanced to take care about the Application code.<br>Base class for application classes","!proto":"sap.ui.core.Component","getMetadata":{"!description":"Returns a metadata object for class sap.ui.app.Application.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.tmpl.TemplateControl_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.tmpl.TemplateControl with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.tmpl.TemplateControl"},"sap.ui.core.util.ExportRow_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.ExportRow with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.util.ExportRow"},"sap.ui.core.util.serializer.delegate":{"HTML":"sap.ui.core.util.serializer.delegate.HTML_obj","Delegate":"sap.ui.core.util.serializer.delegate.Delegate_obj","!category":"namespace","XML":"sap.ui.core.util.serializer.delegate.XML_obj"},"sap.ui.base.Event":{"getParameter":{"!description":"Returns the value of the parameter with the given sName.","!type":"fn(sName: String) -> Object","!category":"function","parameters":{"sName":"type: string, description: The name of the parameter to return"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.base.Event with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Creates an event with the given <code>sId<\/code>, linked to the provided <code>oSource<\/code> and enriched with the <code>mParameters<\/code>.","!module":"sap/ui/base/Event","getSource":{"!description":"Returns the event provider on which the event was fired.","!type":"fn() -> sap.ui.base.EventProvider","!category":"function","!static":false},"getParameters":{"!description":"Returns all parameter values of the event keyed by their names.","!type":"fn() -> map","!category":"function","!static":false},"!description":"An Event object consisting of an ID, a source and a map of parameters. Implements {@link sap.ui.base.Poolable} and therefore an event object in the event handler will be reset by {@link sap.ui.base.ObjectPool} after the event handler is done.","cancelBubble":{"!description":"Cancel bubbling of the event.\n\n<b>Note:<\/b> This function only has an effect if the bubbling of the event is supported by the event source.","!type":"fn()","!category":"function","!static":false},"!category":"class","preventDefault":{"!description":"Prevent the default action of this event.\n\n<b>Note:<\/b> This function only has an effect if preventing the default action of the event is supported by the event source.","!type":"fn()","!category":"function","!static":false},"!helpDescription":"An Event object consisting of an ID, a source and a map of parameters. Implements {@link sap.ui.base.Poolable} and therefore an event object in the event handler will be reset by {@link sap.ui.base.ObjectPool} after the event handler is done.","!proto":"sap.ui.base.Object","getId":{"!description":"Returns the id of the event.","!type":"fn() -> String","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.base.Event.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.test.actions":{"Press":"sap.ui.test.actions.Press_obj","clearTextFirst":{"!description":"clearTextFirst : Boolean","!type":"Boolean","!category":"enum"},"text":{"!description":"The Text that is going to be typed to the control. If you are entering an empty string, the value will be cleared.","!type":"String","!category":"enum"},"Action":"sap.ui.test.actions.Action_obj","!category":"namespace","idSuffix":{"!description":"idSuffix : String","!type":"String","!category":"enum"},"EnterText":"sap.ui.test.actions.EnterText_obj"},"jQuery.sap":{"getter":{"!description":"Returns a new function that returns the given <code>oValue<\/code> (using its closure).\n\nAvoids the need for a dedicated member for the value.\n\nAs closures don't come for free, this function should only be used when polluting the enclosing object is an absolute \"must-not\" (as it is the case in public base classes).","!type":"fn(oValue: Object) -> fn()","!category":"function","!static":"true"},"encodeURL":{"!description":"Encode the string for inclusion into a URL parameter","!type":"fn(sString: String) -> String","!category":"function","!static":"true"},"getUriParameters":{"!description":"Creates and returns a new instance of {@link jQuery.sap.util.UriParameters}.\n\nExample for reading a single URI parameter (or the value of the first occurrence of the URI parameter): <pre>\n\tvar sValue = jQuery.sap.getUriParameters().get(\"myUriParam\");\n<\/pre>\n\nExample for reading the values of the first of the URI parameter (with multiple occurrences): <pre>\n\tvar aValues = jQuery.sap.getUriParameters().get(\"myUriParam\", true);\n\tfor(i in aValues){\n\tvar sValue = aValues[i];\n\t}\n<\/pre>","!type":"fn(sUri: String) -> jQuery.sap.util.UriParameters","!category":"function","!static":"true"},"hashCode":{"!description":"This function generates a hash-code from a string","!type":"fn(sString: String) -> Number","!category":"function","!static":"true"},"arraySymbolDiff":{"!description":"Calculate delta of old list and new list.\n\nThis function implements the algorithm described in \"A Technique for Isolating Differences Between Files\" (Commun. ACM, April 1978, Volume 21, Number 4, Pages 264-268).\n\nItems in the arrays are not compared directly. Instead, a substitute symbol is determined for each item by applying the provided function <code>fnSymbol<\/code> to it. Items with strictly equal symbols are assumed to represent the same logical item: <pre>\n  fnSymbol(a) === fnSymbol(b)   <=>   a 'is logically the same as' b\n<\/pre> As an additional constraint, casting the symbols to string should not modify the comparison result. If this second constraint is not met, this method might report more diffs than necessary.\n\nIf no symbol function is provided, a default implementation is used which applies <code>JSON.stringify<\/code> to non-string items and reduces the strings to a hash code. It is not guaranteed that this default implementation fulfills the above constraint in all cases, but it is a compromise between implementation effort, generality and performance. If items are known to be non-stringifiable (e.g. because they may contain cyclic references) or when hash collisions are likely, an own <code>fnSymbol<\/code> function must be provided.\n\nThe result of the diff is a sequence of update operations, each consisting of a <code>type<\/code> (either <code>\"insert\"<\/code> or <code>\"delete\"<\/code>) and an <code>index<\/code>. By applying the operations one after the other to the old array, it can be transformed to an array whose items are equal to the new array.\n\nSample implementation of the update <pre>\n\n function update(aOldArray, aNewArray) {\n\n   // calculate the diff\n   var aDiff = jQuery.sap.arraySymbolDiff(aOldArray, aNewArray, __provide_your_symbol_function_here__);\n\n   // apply update operations\n   aDiff.forEach( function(op) {\n\n     // invariant: aOldArray and aNewArray now are equal up to (excluding) op.index\n\n     switch ( op.type ) {\n     case 'insert':\n       // new array contains a new (or otherwise unmapped) item, add it here\n       aOldArray.splice(op.index, 0, aNewArray[op.index]);\n       break;\n     case 'delete':\n       // an item is no longer part of the array (or has been moved to another position), remove it\n       aOldArray.splice(op.index, 1);\n       break;\n     default:\n       throw new Error('unexpected diff operation type');\n     }\n\n   });\n }\n\n<\/pre>","!type":"fn(aOld: Array, aNew: Array, fnSymbol?: fn()) -> [[object Object]]","!category":"function","!static":"true"},"!module":"jquery.sap.global","byId":{"!description":"Shortcut for jQuery(\"#\" + id) with additionally the id being escaped properly. I.e.: returns the jQuery object for the DOM element with the given id\n\nUse this method instead of jQuery(...) if you know the argument is exactly one id and the id is not known in advance because it is in a variable (as opposed to a string constant with known content).","!type":"fn(sId: String, oContext: Element) -> Object","!category":"function","!static":"true"},"unbindAnyEvent":{"!description":"Unbinds all events for listening with the given callback function.","!type":"fn(fnCallback: fn())","!category":"function","!static":"true"},"removeUrlWhitelist":{"!description":"Removes a whitelist entry for URL validation.","!type":"fn(iIndex: Number)","!category":"function","!static":"true"},"syncPost":{"!description":"Convenience wrapper for {@link jQuery.sap.sjax} that enforces the Http method POST and defaults the data type of the result to 'text'.","!type":"fn(sUrl: String, data: String | Object, sDataType?: String)","!category":"function","!static":"true"},"focus":{"!description":"Calls focus() on the given DOM element.","!type":"fn(oDomRef: Element) -> Boolean","!category":"function","!static":"true"},"getResourceName":{"!description":"Converts a UI5 module name to a unified resource name.\n\nUsed by View and Fragment APIs to convert a given module name into a unified resource name. When the <code>sSuffix<\/code> is not given, the suffix '.js' is added. This fits the most common use case of converting a module name to the Javascript resource that contains the module. Note that an empty <code>sSuffix<\/code> is not replaced by '.js'. This allows to convert UI5 module names to requireJS module names with a call to this method.","!type":"fn(sModuleName: String, sSuffix?: String)","!category":"function","!static":"true"},"getObject":{"!description":"Returns a JavaScript object which is identified by a sequence of names.\n\nA call to <code>getObject(\"a.b.C\")<\/code> has essentially the same effect as accessing <code>window.a.b.C<\/code> but with the difference that missing intermediate objects (a or b in the example above) don't lead to an exception.\n\nWhen the addressed object exists, it is simply returned. If it doesn't exists, the behavior depends on the value of the second, optional parameter <code>iNoCreates<\/code> (assuming 'n' to be the number of names in the name sequence): <ul> <li>NaN: if iNoCreates is not a number and the addressed object doesn't exist, then <code>getObject()<\/code> returns <code>undefined<\/code>. <li>0 &lt; iNoCreates &lt; n: any non-existing intermediate object is created, except the <i>last<\/i> <code>iNoCreates<\/code> ones. <\/ul>\n\nExample: <pre>\n  getObject()            -- returns the context object (either param or window)\n  getObject(\"a.b.C\")     -- will only try to get a.b.C and return undefined if not found.\n  getObject(\"a.b.C\", 0)  -- will create a, b, and C in that order if they don't exists\n  getObject(\"a.b.c\", 1)  -- will create a and b, but not C.\n<\/pre>\n\nWhen a <code>oContext<\/code> is given, the search starts in that object. Otherwise it starts in the <code>window<\/code> object that this plugin has been created in.\n\nNote: Although this method internally uses <code>object[\"key\"]<\/code> to address object properties, it does not support all possible characters in a name. Especially the dot ('.') is not supported in the individual name segments, as it is always interpreted as a name separator.","!type":"fn(sName: String, iNoCreates?: Number, oContext?: Object) -> fn()","!category":"function","!static":"true"},"syncStyleClass":{"!description":"Search ancestors of the given source DOM element for the specified CSS class name. If the class name is found, set it to the root DOM element of the target control. If the class name is not found, it is also removed from the target DOM element.","!type":"fn(sStyleClass: String, vSource: jQuery | sap.ui.core.Control | String, vDestination: jQuery | sap.ui.core.Control) -> jQuery | Element","!category":"function","!static":"true"},"clearUrlWhitelist":{"!description":"Clears the whitelist for URL validation","!type":"fn()","!category":"function","!static":"true"},"endsWithIgnoreCase":{"!description":"Checks whether a given <code>sString<\/code> ends with <code>sEndString<\/code> ignoring the case of the strings.","!type":"fn(sString: String, sEndString: String) -> Boolean","!category":"function","!static":"true"},"interaction":"jQuery.sap.interaction","log":"jQuery.sap.log","declare":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.52 UI5 modules and their dependencies should be defined using {@link sap.ui.define}. For more details see {@link topic:91f23a736f4d1014b6dd926db0e91070 Modules and Dependencies} in the documentation.<br>Declares a module as existing.\n\nBy default, this function assumes that the module will create a JavaScript object with the same name as the module. As a convenience it ensures that the parent namespace for that object exists (by calling jQuery.sap.getObject). If such an object creation is not desired, <code>bCreateNamespace<\/code> must be set to false.","!type":"fn(sModuleName: String | Object, bCreateNamespace?: Boolean)","!category":"function","!static":"true"},"validateUrl":{"!description":"Validates a URL. Check if it's not a script or other security issue.\n\nSplit URL into components and check for allowed characters according to RFC 3986:\n\n<pre>\nauthority     = [ userinfo \"@\" ] host [ \":\" port ]\nuserinfo      = *( unreserved / pct-encoded / sub-delims / \":\" )\nhost          = IP-literal / IPv4address / reg-name\n\nIP-literal    = \"[\" ( IPv6address / IPvFuture  ) \"]\"\nIPvFuture     = \"v\" 1*HEXDIG \".\" 1*( unreserved / sub-delims / \":\" )\nIPv6address   =                            6( h16 \":\" ) ls32\n              /                       \"::\" 5( h16 \":\" ) ls32\n              / [               h16 ] \"::\" 4( h16 \":\" ) ls32\n              / [ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n              / [ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n              / [ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n              / [ *4( h16 \":\" ) h16 ] \"::\"              ls32\n              / [ *5( h16 \":\" ) h16 ] \"::\"              h16\n              / [ *6( h16 \":\" ) h16 ] \"::\"\nls32          = ( h16 \":\" h16 ) / IPv4address\n              ; least-significant 32 bits of address\nh16           = 1*4HEXDIG\n              ; 16 bits of address represented in hexadecimal\n\nIPv4address   = dec-octet \".\" dec-octet \".\" dec-octet \".\" dec-octet\ndec-octet     = DIGIT                 ; 0-9\n              / %x31-39 DIGIT         ; 10-99\n              / \"1\" 2DIGIT            ; 100-199\n              / \"2\" %x30-34 DIGIT     ; 200-249\n              / \"25\" %x30-35          ; 250-255\n\nreg-name      = *( unreserved / pct-encoded / sub-delims )\n\npct-encoded   = \"%\" HEXDIG HEXDIG\nreserved      = gen-delims / sub-delims\ngen-delims    = \":\" / \"/\" / \"?\" / \"#\" / \"[\" / \"]\" / \"@\"\nsub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n              / \"*\" / \"+\" / \",\" / \";\" / \"=\"\nunreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\npchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n\npath          = path-abempty    ; begins with \"/\" or is empty\n              / path-absolute   ; begins with \"/\" but not \"//\"\n              / path-noscheme   ; begins with a non-colon segment\n              / path-rootless   ; begins with a segment\n              / path-empty      ; zero characters\n\npath-abempty  = *( \"/\" segment )\npath-absolute = \"/\" [ segment-nz *( \"/\" segment ) ]\npath-noscheme = segment-nz-nc *( \"/\" segment )\npath-rootless = segment-nz *( \"/\" segment )\npath-empty    = 0<pchar>\nsegment       = *pchar\nsegment-nz    = 1*pchar\nsegment-nz-nc = 1*( unreserved / pct-encoded / sub-delims / \"@\" )\n              ; non-zero-length segment without any colon \":\"\n\nquery         = *( pchar / \"/\" / \"?\" )\n\nfragment      = *( pchar / \"/\" / \"?\" )\n<\/pre>\n\nFor the hostname component, we are checking for valid DNS hostnames according to RFC 952 / RFC 1123:\n\n<pre>\nhname         = name *(\".\" name)\nname          = let-or-digit ( *( let-or-digit-or-hyphen ) let-or-digit )\n<\/pre>\n\nWhen the URI uses the protocol 'mailto:', the address part is additionally checked against the most commonly used parts of RFC 6068:\n\n<pre>\nmailtoURI     = \"mailto:\" [ to ] [ hfields ]\nto            = addr-spec *(\",\" addr-spec )\nhfields       = \"?\" hfield *( \"&\" hfield )\nhfield        = hfname \"=\" hfvalue\nhfname        = *qchar\nhfvalue       = *qchar\naddr-spec     = local-part \"@\" domain\nlocal-part    = dot-atom-text              // not accepted: quoted-string\ndomain        = dot-atom-text              // not accepted: \"[\" *dtext-no-obs \"]\"\ndtext-no-obs  = %d33-90 / ; Printable US-ASCII\n                %d94-126  ; characters not including\n                          ; \"[\", \"]\", or \"\\\"\nqchar         = unreserved / pct-encoded / some-delims\nsome-delims   = \"!\" / \"$\" / \"'\" / \"(\" / \")\" / \"*\"\n              / \"+\" / \",\" / \";\" / \":\" / \"@\"\n\nNote:\nA number of characters that can appear in &lt;addr-spec> MUST be\npercent-encoded.  These are the characters that cannot appear in\na URI according to [STD66] as well as \"%\" (because it is used for\npercent-encoding) and all the characters in gen-delims except \"@\"\nand \":\" (i.e., \"/\", \"?\", \"#\", \"[\", and \"]\").  Of the characters\nin sub-delims, at least the following also have to be percent-\nencoded: \"&\", \";\", and \"=\".  Care has to be taken both when\nencoding as well as when decoding to make sure these operations\nare applied only once.\n\n<\/pre>\n\nWhen a whitelist has been configured using {@link #.addUrlWhitelist addUrlWhitelist}, any URL that passes the syntactic checks above, additionally will be tested against the content of the whitelist.","!type":"fn(sUrl: String)","!category":"function","!static":"true"},"isResourceLoaded":{"!description":"Whether the given resource has been loaded (or preloaded).","!type":"fn(sResourceName: String) -> Boolean","!category":"function","!static":"true"},"now":{"!description":"Returns a high resolution timestamp in microseconds if supported by the environment, otherwise in milliseconds. The timestamp is based on 01/01/1970 00:00:00 (UNIX epoch) as float with microsecond precision or with millisecond precision, if high resolution timestamps are not available. The fractional part of the timestamp represents fractions of a millisecond. Converting to a <code>Date<\/code> is possible by using <code>require([\"sap/base/util/now\"], function(now){new Date(now());}<\/code>","!type":"fn() -> Number","!category":"function","!static":"true"},"charToUpperCase":{"!description":"Converts one character of the string to upper case, at a given position.\n\nIf no position is given or when it is negative or beyond the last character of <code>sString<\/code>, then the first character will be converted to upper case. The first character position is 0.","!type":"fn(sString: String, iPos: Number) -> String","!category":"function","!static":"true"},"!helpDescription":"Root Namespace for the jQuery plug-in provided by SAP SE.","unique":{"!description":"Sorts the given array in-place and removes any duplicates (identified by \"===\").\n\nUse <code>jQuery.unique()<\/code> for arrays of DOMElements.","!type":"fn(a: Array) -> Array","!category":"function","!static":"true"},"isDeclared":{"!description":"Check whether a given module has been loaded / declared already.\n\nReturns true as soon as a module has been required the first time, even when loading/executing it has not finished yet. So the main assertion of a return value of <code>true<\/code> is that the necessary actions have been taken to make the module available in the near future. It does not mean, that the content of the module is already available!\n\nThis fuzzy behavior is necessary to avoid multiple requests for the same module. As a consequence of the assertion above, a <i>preloaded<\/i> module does not count as <i>declared<\/i>. For preloaded modules, an explicit call to <code>jQuery.sap.require<\/code> is necessary to make them available.\n\nIf a caller wants to know whether a module needs to be loaded from the server, it can set <code>bIncludePreloaded<\/code> to true. Then, preloaded modules will be reported as 'declared' as well by this method.","!type":"fn(sModuleName: String, bIncludePreloaded?: Boolean) -> Boolean","!category":"function","!static":"true"},"checkMouseEnterOrLeave":{"!description":"Checks a given mouseover or mouseout event whether it is equivalent to a mouseenter or mousleave event regarding the given DOM reference.","!type":"fn(oEvent: jQuery.Event, oDomRef: Element)","!category":"function","!static":"true"},"escapeHTML":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Has been renamed, use {@link jQuery.sap.encodeHTML} instead.<br>Encode the string for inclusion into HTML content/attribute. Old name \"escapeHTML\" kept for backward compatibility","!type":"fn(sString: String) -> String","!category":"function","!static":"true"},"setMobileWebAppCapable":{"!description":"Sets the \"apple-mobile-web-app-capable\" and \"mobile-web-app-capable\" meta information which defines whether the application is loaded in full screen mode (browser address bar and toolbar are hidden) after the user does \"add to home screen\" on mobile devices. Currently this meta tag is only supported by iOS Safari and mobile Chrome from version 31.\n\nIf the application opens new tabs because of attachments, url and so on, setting this to false will let the user be able to go from the new tab back to the application tab after the application is added to home screen.\n\nNote: this function only has effect when the application runs on iOS Safari and mobile Chrome from version 31.","!type":"fn(bValue: Boolean)","!category":"function","!static":"true"},"domById":{"!description":"Shortcut for document.getElementById(), including a bug fix for older IE versions.","!type":"fn(sId: String, oWindow?: Window) -> Element","!category":"function","!static":"true"},"registerModuleShims":{"!description":"Register information about third party modules that are not UI5 modules.\n\nThe information maps the name of the module (without extension '.js') to an info object. Instead of a complete info object, only the value of the <code>deps<\/code> property can be given as an array.","!type":"fn(mShims: Object)","!category":"function","!static":"true"},"isSpecialKey":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"fn(oEvent: jQuery.Event) -> Boolean","!category":"function","!static":"true"},"clearIntervalCall":{"!description":"Stops the interval call.\n\nThe function given when calling intervalCall is not called anymore.","!type":"fn(sIntervalCallId: String)","!category":"function","!static":"true"},"setObject":{"!description":"Sets an object property to a given value, where the property is identified by a sequence of names (path).\n\nWhen a <code>oContext<\/code> is given, the path starts in that object. Otherwise it starts in the <code>window<\/code> object that this plugin has been created for.\n\nNote: Although this method internally uses <code>object[\"key\"]<\/code> to address object properties, it does not support all possible characters in a name. Especially the dot ('.') is not supported in the individual name segments, as it is always interpreted as a name separator.","!type":"fn(sName: String, vValue: Object, oContext?: Object)","!category":"function","!static":"true"},"!category":"namespace","initMobile":{"!description":"Does some basic modifications to the HTML page that make it more suitable for mobile apps. Only the first call to this method is executed, subsequent calls are ignored. Note that this method is also called by the constructor of toplevel controls like sap.m.App, sap.m.SplitApp and sap.m.Shell. Exception: if no homeIcon was set, subsequent calls have the chance to set it.\n\nThe \"options\" parameter configures what exactly should be done.\n\nIt can have the following properties: <ul> <li>viewport: whether to set the viewport in a way that disables zooming (default: true)<\/li> <li>statusBar: the iOS status bar color, \"default\", \"black\" or \"black-translucent\" (default: \"default\")<\/li> <li>hideBrowser: whether the browser UI should be hidden as far as possible to make the app feel more native (default: true)<\/li> <li>preventScroll: whether native scrolling should be disabled in order to prevent the \"rubber-band\" effect where the whole window is moved (default: true)<\/li> <li>preventPhoneNumberDetection: whether Safari Mobile should be prevented from transforming any numbers that look like phone numbers into clickable links; this should be left as \"true\", otherwise it might break controls because Safari actually changes the DOM. This only affects all page content which is created after initMobile is called.<\/li> <li>rootId: the ID of the root element that should be made fullscreen; only used when hideBrowser is set (default: the document.body)<\/li> <li>useFullScreenHeight: a boolean that defines whether the height of the html root element should be set to 100%, which is required for other elements to cover the full height (default: true)<\/li> <li>homeIcon: deprecated since 1.12, use jQuery.sap.setIcons instead. <\/ul>","!type":"fn(options?: Object)","!category":"function","!static":"true"},"KeyCodes":"jQuery.sap.KeyCodes","getUrlWhitelist":{"!description":"Gets the whitelist for URL validation.","!type":"fn() -> [[object Object]]","!category":"function","!static":"true"},"registerModulePath":{"!description":"Registers a URL prefix for a module name prefix.\n\nBefore a module is loaded, the longest registered prefix of its module name is searched for and the associated URL prefix is used as a prefix for the request URL. The remainder of the module name is attached to the request URL by replacing dots ('.') with slashes ('/').\n\nThe registration and search operates on full name segments only. So when a prefix\n\n'sap.com' -> 'http://www.sap.com/ui5/resources/'\n\nis registered, then it will match the name\n\n'sap.com.Button'\n\nbut not\n\n'sap.commons.Button'\n\nNote that the empty prefix ('') will always match and thus serves as a fallback for any search.\n\nThe prefix can either be given as string or as object which contains the url and a 'final' property. If 'final' is set to true, overwriting a module prefix is not possible anymore.","!type":"fn(sModuleName: String, vUrlPrefix: String | Object)","!category":"function","!static":"true"},"PseudoEvents":"jQuery.sap.PseudoEvents","sjax":{"!description":"Convenience wrapper around <code>jQuery.ajax()<\/code> that avoids the need for callback functions when synchronous calls are made. If the setting <code>complexResult<\/code> is true (default), then the return value is an object with the following properties <ul> <li><code>success<\/code> boolean whether the call succeeded or not <li><code>data<\/code> any the data returned by the call. For dataType 'text' this is a string, for JSON it is an object, for XML it is a document. When the call failed, then data is not defined <li><code>status<\/code> string a textual status ('success,', 'error', 'timeout',...) <li><code>statusCode<\/code> string the HTTP status code of the request <li><code>error<\/code> Error an error object (exception) in case an error occurred <li><code>errorText<\/code> string an error message in case an error occurred <\/ul>\n\nWhen <code>complexResult<\/code> is false, then in the case of success, only 'data' is returned, in case of an error the 'fallback' setting is returned (defaults to undefined).\n\nNote that async=false is always enforced by this method.","!type":"fn(oOrigSettings: String)","!category":"function","!static":"true"},"history":"jQuery.sap.history_obj","getAllDeclaredModules":{"!description":"Returns the names of all declared modules.","!type":"fn() -> [[object Object]]","!category":"function","!static":"true"},"!description":"Root Namespace for the jQuery plug-in provided by SAP SE.","assert":{"!description":"A simple assertion mechanism that logs a message when a given condition is not met.\n\n<b>Note:<\/b> Calls to this method might be removed when the JavaScript code is optimized during build. Therefore, callers should not rely on any side effects of this method.","!type":"fn(bResult: Boolean, vMessage: String | fn())","!category":"function","!static":"true"},"intervalCall":{"!description":"Calls a method after a given interval and returns an id for this interval.","!type":"fn(iInterval: Number, oObject: Object, method: String | Object, aParameters?: Array) -> String","!category":"function","!static":"true"},"registerResourcePath":{"!description":"Registers a URL prefix for a resource name prefix.\n\nBefore a resource is loaded, the longest registered prefix of its unified resource name is searched for and the associated URL prefix is used as a prefix for the request URL. The remainder of the resource name is attached to the request URL 1:1.\n\nThe registration and search operates on full name segments only. So when a prefix\n\n'sap/com' -> 'http://www.sap.com/ui5/resources/'\n\nis registered, then it will match the name\n\n'sap/com/Button'\n\nbut not\n\n'sap/commons/Button'\n\nNote that the empty prefix ('') will always match and thus serves as a fallback for any search.\n\nThe url prefix can either be given as string or as object which contains the url and a final flag. If final is set to true, overwriting a resource name prefix is not possible anymore.","!type":"fn(sResourceNamePrefix: String, vUrlPrefix: String | Object)","!category":"function","!static":"true"},"serializeXML":{"!description":"Serializes the specified XML document into a string representation.","!type":"fn(oXMLDocument: String) -> Object","!category":"function","!static":"true"},"includeScript":{"!description":"Includes the script (via &lt;script&gt;-tag) into the head for the specified <code>sUrl<\/code> and optional <code>sId<\/code>.","!type":"fn(vUrl: String | Object, vId?: String | Object, fnLoadCallback?: fn(), fnErrorCallback?: fn()) -> undefined | Promise","!category":"function","!static":"true"},"uid":{"!description":"Creates and returns a pseudo-unique id.\n\nNo means for detection of overlap with already present or future UIDs.","!type":"fn() -> String","!category":"function","!static":"true"},"resources":{"!description":"Creates and returns a new instance of {@link jQuery.sap.util.ResourceBundle} using the given URL and locale to determine what to load.","!type":"fn(mParams?: Object) -> jQuery.sap.util.ResourceBundle | Promise","!category":"function","!static":"true"},"bindAnyEvent":{"!description":"Binds all events for listening with the given callback function.","!type":"fn(fnCallback: fn())","!category":"function","!static":"true"},"denormalizeScrollLeftRTL":{"!description":"For the given scrollLeft value this method returns the scrollLeft value as understood by the current browser in RTL mode. This value is specific to the given DOM element, as the computation may involve its dimensions.\n\nSo when oDomRef should be scrolled 2px from the leftmost position, the number \"2\" must be given as iNormalizedScrollLeft and the result of this method (which may be a large or even negative number, depending on the browser) can then be set as oDomRef.scrollLeft to achieve the desired (cross-browser-consistent) scrolling position.\n\nThis method does no scrolling on its own, it only calculates the value to set (so it can also be used for animations).","!type":"fn(iNormalizedScrollLeft: Number, oDomRef: Element) -> Number","!category":"function","!static":"true"},"ControlEvents":"jQuery.sap.ControlEvents","encodeHTML":{"!description":"Encode the string for inclusion into HTML content/attribute","!type":"fn(sString: String) -> String","!category":"function","!static":"true"},"getResourcePath":{"!description":"Determines the URL for a resource given its unified resource name.\n\nSearches the longest prefix of the given resource name for which a registration exists (see {@link jQuery.sap.registerResourcePath}) and replaces that prefix by the registered URL prefix.\n\nThe remainder of the resource name is appended to the URL.\n\n<b>Unified Resource Names<\/b><br> Several UI5 APIs use <i>Unified Resource Names (URNs)<\/i> as naming scheme for resources that they deal with (e.h. Javascript, CSS, JSON, XML, ...). URNs are similar to the path component of a URL: <ul> <li>they consist of a non-empty sequence of name segments<\/li> <li>segments are separated by a forward slash '/'<\/li> <li>name segments consist of URL path segment characters only. It is recommended to use only ASCII letters (upper or lower case), digits and the special characters '$', '_', '-', '.')<\/li> <li>the empty name segment is not supported<\/li> <li>names consisting of dots only, are reserved and must not be used for resources<\/li> <li>names are case sensitive although the underlying server might be case-insensitive<\/li> <li>the behavior with regard to URL encoded characters is not specified, %ddd notation should be avoided<\/li> <li>the meaning of a leading slash is undefined, but might be defined in future. It therefore should be avoided<\/li> <\/ul>\n\nUI5 APIs that only deal with Javascript resources, use a slight variation of this scheme, where the extension '.js' is always omitted (see {@link sap.ui.define}, {@link sap.ui.require}).\n\n<b>Relationship to old Module Name Syntax<\/b><br>\n\nOlder UI5 APIs that deal with resources (like {@link jQuery.sap.registerModulePath}, {@link jQuery.sap.require} and {@link jQuery.sap.declare}) used a dot-separated naming scheme (called 'module names') which was motivated by object names in the global namespace in Javascript.\n\nThe new URN scheme better matches the names of the corresponding resources (files) as stored in a server and the dot ('.') is no longer a forbidden character in a resource name. This finally allows to handle resources with different types (extensions) with the same API, not only JS files.\n\nLast but not least does the URN scheme better match the naming conventions used by AMD loaders (like <code>requireJS<\/code>).","!type":"fn(sResourceName: String) -> String","!category":"function","!static":"true"},"syncGetJSON":{"!description":"Convenience wrapper for {@link jQuery.sap.sjax} that enforces the Http method GET and the data type 'json'. If a fallback value is given, the function simply returns the response as an object or - if some error occurred - the fallback value. This is useful for applications that don't require detailed error diagnostics.\n\nIf applications need to know about occurring errors, they can either call <code>sjax()<\/code> directly or they can omit the fallback value (providing only two parameters to syncGetJSON()). They then receive the same complex result object as for the sjax() call.\n\nNote that providing \"undefined\" or \"null\" as a fallback is different from omitting the fallback (complex result).","!type":"fn(sUrl: String, data: String | Object, fallback?: Object)","!category":"function","!static":"true"},"ownerWindow":{"!description":"Returns the window reference for a DomRef.","!type":"fn(oDomRef: Element) -> Window","!category":"function","!static":"true"},"syncGetText":{"!description":"Convenience wrapper for {@link jQuery.sap.sjax} that enforces the Http method GET and the data type 'text'. If a fallback value is given, the function simply returns the response as a text or - if some error occurred - the fallback value. This is useful for applications that don't require detailed error diagnostics.\n\nIf applications need to know about occurring errors, they can either call <code>sjax()<\/code> directly or they can omit the fallback value (providing only two parameters to syncGetText()). They then receive the same complex result object as for the sjax() call.","!type":"fn(sUrl: String, data: String | Object, fallback?: String)","!category":"function","!static":"true"},"encodeURLParameters":{"!description":"Encode a map of parameters into a combined URL parameter string","!type":"fn(mParams: Object) -> String","!category":"function","!static":"true"},"startsWithIgnoreCase":{"!description":"Checks whether a given <code>sString<\/code> starts with <code>sStartString<\/code> ignoring the case of both strings.","!type":"fn(sString: String, sStartString: String) -> Boolean","!category":"function","!static":"true"},"Version":"jQuery.sap.Version_obj","parseXML":{"!description":"Parses the specified XML formatted string text using native parsing function of the browser and returns a valid XML document. If an error occurred during parsing a parse error object is returned as property (parseError) of the returned XML document object. The parse error object has the following error information parameters: errorCode, url, reason, srcText, line, linepos, filepos","!type":"fn(sXMLText: String) -> Object","!category":"function","!static":"true"},"properties":{"!description":"Creates and returns a new instance of {@link jQuery.sap.util.Properties}.\n\nIf option 'url' is passed, immediately a load request for the given target is triggered. A property file that is loaded can contain comments with a leading ! or #. The loaded property list does not contain any comments.\n\n<b>Example for loading a property file:<\/b> <pre>\n jQuery.sap.properties({url : \"../myProperty.properties\"});\n<\/pre>\n\n<b>Example for creating an empty properties instance:<\/b> <pre>\n jQuery.sap.properties();\n<\/pre>\n\n<b>Examples for getting and setting properties:<\/b> <pre>\n\tvar oProperties = jQuery.sap.properties();\n\toProperties.setProperty(\"KEY_1\",\"Test Key\");\n\tvar sValue1 = oProperties.getProperty(\"KEY_1\");\n\tvar sValue2 = oProperties.getProperty(\"KEY_2\",\"Default\");\n<\/pre>","!type":"fn(mParams?: Object) -> jQuery.sap.util.Properties | null | Promise","!category":"function","!static":"true"},"containsOrEquals":{"!description":"Returns whether <code>oDomRefChild<\/code> is contained in or equal to <code>oDomRefContainer<\/code>.\n\nThis is a browser-independent version of the .contains method of Internet Explorer. For compatibility reasons it returns <code>true<\/code> if <code>oDomRefContainer<\/code> and <code>oDomRefChild<\/code> are equal.\n\nThis method intentionally does not operate on the jQuery object, as the original <code>jQuery.contains()<\/code> method also does not do so.","!type":"fn(oDomRefContainer: Element, oDomRefChild: Element) -> Boolean","!category":"function","!static":"true"},"factory":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.45.0 define your own function and assign <code>oPrototype<\/code> to its <code>prototype<\/code> property instead.<br>Returns a new constructor function that creates objects with the given prototype.\n\nAs of 1.45.0, this method has been deprecated. Use the following code pattern instead: <pre>\n  function MyFunction() {\n  };\n  MyFunction.prototype = oPrototype;\n<\/pre>","!type":"fn(oPrototype: Object) -> fn()","!category":"function","!static":"true"},"require":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.52 UI5 modules and their dependencies should be defined using {@link sap.ui.define}. When additional modules have to be loaded dynamically at a later point in time, the asynchronous API {@link sap.ui.require} should be used. For more details, see {@link topic:91f23a736f4d1014b6dd926db0e91070 Modules and Dependencies} in the documentation.<br>Ensures that the given module is loaded and executed before execution of the current script continues.\n\nBy issuing a call to this method, the caller declares a dependency to the listed modules.\n\nAny required and not yet loaded script will be loaded and execute synchronously. Already loaded modules will be skipped.","!type":"fn(vModuleName: String | Object)","!category":"function","!static":"true"},"delayedCall":{"!description":"Calls a method after a given delay and returns an id for this timer","!type":"fn(iDelay: Number, oObject: Object, method: String | Object, aParameters?: Array) -> String","!category":"function","!static":"true"},"encodeXML":{"!description":"Encode the string for inclusion into XML content/attribute","!type":"fn(sString: String) -> String","!category":"function","!static":"true"},"util":"jQuery.sap.util","hyphen":{"!description":"Transforms a camel case string into a hyphen separated string.","!type":"fn(sString: String) -> String","!category":"function","!static":"true"},"includeStyleSheet":{"!description":"Includes the specified stylesheet via a &lt;link&gt;-tag in the head of the current document. If there is call to <code>includeStylesheet<\/code> providing the sId of an already included stylesheet, the existing element will be replaced.","!type":"fn(vUrl: String | Object, vId?: String | Object, fnLoadCallback?: fn(), fnErrorCallback?: fn()) -> undefined | Promise","!category":"function","!static":"true"},"NavType":"jQuery.sap.history.NavType","measure":"jQuery.sap.measure","encodeCSS":{"!description":"Encode the string for inclusion into CSS string literals or identifiers","!type":"fn(sString: String) -> String","!category":"function","!static":"true"},"camelCase":{"!description":"Transforms a hyphen separated string to a camel case string.","!type":"fn(sString: String) -> String","!category":"function","!static":"true"},"registerPreloadedModules":{"!description":"Adds all resources from a preload bundle to the preload cache.\n\nWhen a resource exists already in the cache, the new content is ignored.","!type":"fn(oData: Object)","!category":"function","!static":"true"},"padRight":{"!description":"Pads a string on the right side until is has at least the given length.\n\nThe method always adds full copies of <code>sPadChar<\/code> to the given string. When <code>sPadChar<\/code> has a length > 1, the length of the returned string actually might be greater than <code>iLength<\/code>.","!type":"fn(sString: String, sPadChar: String, iLength: Number) -> String","!category":"function","!static":"true"},"setIcons":{"!description":"Sets the bookmark icon for desktop browsers and the icon to be displayed on the home screen of iOS devices after the user does \"add to home screen\".\n\nOnly call this method once and call it early when the page is loading: browsers behave differently when the favicon is modified while the page is alive. Some update the displayed icon inside the browser but use an old icon for bookmarks. When a favicon is given, any other existing favicon in the document will be removed. When at least one home icon is given, all existing home icons will be removed and new home icon tags for all four resolutions will be created.\n\nThe home icons must be in PNG format and given in different sizes for iPad/iPhone with and without retina display. The favicon is used in the browser and for desktop shortcuts and should optimally be in ICO format: PNG does not seem to be supported by Internet Explorer and ICO files can contain different image sizes for different usage locations. E.g. a 16x16px version is used inside browsers.\n\nAll icons are given in an an object holding icon URLs and other settings. The properties of this object are: <ul> <li>phone: a 60x60 pixel version for non-retina iPhones<\/li> <li>tablet: a 76x76 pixel version for non-retina iPads<\/li> <li>phone@2: a 120x120 pixel version for retina iPhones<\/li> <li>tablet@2: a 152x152 pixel version for retina iPads<\/li> <li>precomposed: whether the home icons already have some glare effect (otherwise iOS will add it) (default: false)<\/li> <li>favicon: the ICO file to be used inside the browser and for desktop shortcuts<\/li> <\/ul>\n\nOne example is: <pre>\n{\n   'phone':'phone-icon_60x60.png',\n   'phone@2':'phone-retina_120x120.png',\n   'tablet':'tablet-icon_76x76.png',\n   'tablet@2':'tablet-retina_152x152.png',\n   'precomposed':true,\n   'favicon':'desktop.ico'\n}\n<\/pre> If one of the sizes is not given, the largest available alternative image will be used instead for this size. On Android these icons may or may not be used by the device. Apparently chances can be improved by using icons with glare effect, so the \"precomposed\" property can be set to \"true\". Some Android devices may also use the favicon for bookmarks instead of the home icons.<\/li>","!type":"fn(oIcons: Object)","!category":"function","!static":"true"},"newObject":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.45.0 use <code>Object.create(oPrototype)<\/code> instead.<br>Returns a new object which has the given <code>oPrototype<\/code> as its prototype.\n\nIf several objects with the same prototype are to be created, {@link jQuery.sap.factory} should be used instead.","!type":"fn(oPrototype: Object) -> Object","!category":"function","!static":"true"},"disableTouchToMouseHandling":{"!description":"Disable touch to mouse handling","!type":"fn()","!category":"function","!static":"true"},"formatMessage":{"!description":"Creates a string from a pattern by replacing placeholders with concrete values.\n\nThe syntax of the pattern is inspired by (but not fully equivalent to) the java.util.MessageFormat.\n\nPlaceholders have the form <code>{ integer }<\/code>, where any occurrence of <code>{0}<\/code> is replaced by the value with index 0 in <code>aValues<\/code>, <code>{1}<\/code> by the value with index 1 in <code>aValues<\/code> etc.\n\nTo avoid interpretation of curly braces as placeholders, any non-placeholder fragment of the pattern can be enclosed in single quotes. The surrounding single quotes will be omitted from the result. Single quotes that are not meant to escape a fragment and that should appear in the result, need to be doubled. In the result, only a single single quote will occur.\n\nExample Pattern Strings: <pre>\n  jQuery.sap.formatMessage(\"Say {0}\",     [\"Hello\"]) -> \"Say Hello\"    // normal use case\n  jQuery.sap.formatMessage(\"Say '{0}'\",   [\"Hello\"]) -> \"Say {0}\"      // escaped placeholder\n  jQuery.sap.formatMessage(\"Say ''{0}''\", [\"Hello\"]) -> \"Say 'Hello'\"  // doubled single quote\n  jQuery.sap.formatMessage(\"Say '{0}'''\", [\"Hello\"]) -> \"Say {0}'\"     // doubled single quote in quoted fragment\n<\/pre>\n\nIn contrast to java.util.MessageFormat, format types or format styles are not supported. Everything after the argument index and up to the first closing curly brace is ignored. Nested placeholders (as supported by java.lang.MessageFormat for the format type choice) are not ignored but reported as a parse error.\n\nThis method throws an Error when the pattern syntax is not fulfilled (e.g. unbalanced curly braces, nested placeholders or a non-numerical argument index).\n\nThis method can also be used as a formatter within a binding. The first part of a composite binding will be used as pattern, the following parts as aValues. If there is only one value and this value is an array it will be handled like the default described above.","!type":"fn(sPattern: String, aValues?: [[object Object]]) -> String","!category":"function","!static":"true"},"getModulePath":{"!description":"Constructs a URL to load the module with the given name and file type (suffix).\n\nSearches the longest prefix of the given module name for which a registration exists (see {@link jQuery.sap.registerModulePath}) and replaces that prefix by the registered URL prefix.\n\nThe remainder of the module name is appended to the URL, replacing any dot with a slash.\n\nFinally, the given suffix (typically a file name extension) is added (unconverted).\n\nThe returned name (without the suffix) doesn't end with a slash.","!type":"fn(sModuleName: String, sSuffix: String) -> String","!category":"function","!static":"true"},"denormalizeScrollBeginRTL":{"!description":"For the given scroll position measured from the \"beginning\" of a container (the right edge in RTL mode) this method returns the scrollLeft value as understood by the current browser in RTL mode. This value is specific to the given DOM element, as the computation may involve its dimensions.\n\nSo when oDomRef should be scrolled 2px from the beginning, the number \"2\" must be given as iNormalizedScrollBegin and the result of this method (which may be a large or even negative number, depending on the browser) can then be set as oDomRef.scrollLeft to achieve the desired (cross-browser-consistent) scrolling position. Low values make the right part of the content visible, high values the left part.\n\nThis method does no scrolling on its own, it only calculates the value to set (so it can also be used for animations).\n\nOnly use this method in RTL mode, as the behavior in LTR mode is undefined and may change!","!type":"fn(iNormalizedScrollBegin: Number, oDomRef: Element) -> Number","!category":"function","!static":"true"},"escapeJS":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.3.0 Has been renamed, use {@link jQuery.sap.encodeJS} instead.<br>Encode the string for inclusion into a JS string literal. Old name \"escapeJS\" kept for backward compatibility","!type":"fn(sString: String) -> String","!category":"function","!static":"true"},"arrayDiff":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.38 use {@link jQuery.sap.arraySymbolDiff} instead if applicable<br>Calculate delta of old list and new list.\n\nThis partly implements the algorithm described in \"A Technique for Isolating Differences Between Files\" but instead of working with hashes, it does compare each entry of the old list with each entry of the new list, which causes terrible performance on large datasets.","!type":"fn(aOld: Array, aNew: Array, fnCompare?: fn(), bUniqueEntries?: Boolean) -> Array","!category":"function","!static":"true"},"globalEval":{"!description":"Executes an 'eval' for its arguments in the global context (without closure variables).\n\nThis is a synchronous replacement for <code>jQuery.globalEval<\/code> which in some browsers (e.g. FireFox) behaves asynchronously.","!type":"fn()","!category":"function","!static":"true"},"startsWith":{"!description":"Checks whether a given <code>sString<\/code> starts with <code>sStartString<\/code> respecting the case of the strings.","!type":"fn(sString: String, sStartString: String) -> Boolean","!category":"function","!static":"true"},"syncGet":{"!description":"Convenience wrapper for {@link jQuery.sap.sjax} that enforeces the Http method GET and defaults the data type of the result to 'text'.","!type":"fn(sUrl: String, data: String | Object, sDataType?: String)","!category":"function","!static":"true"},"equal":{"!description":"Compares the two given values for equality, especially takes care not to compare arrays and objects by reference, but compares their content. Note: function does not work with comparing XML objects","!type":"fn(a: Object, b: Object, maxDepth?: Number, contains?: Boolean) -> Boolean","!category":"function","!static":"true"},"padLeft":{"!description":"Pads a string on the left side until is has at least the given length.\n\nThe method always adds full copies of <code>sPadChar<\/code> to the given string. When <code>sPadChar<\/code> has a length > 1, the length of the returned string actually might be greater than <code>iLength<\/code>.","!type":"fn(sString: String, sPadChar: String, iLength: Number) -> String","!category":"function","!static":"true"},"addUrlWhitelist":{"!description":"Adds a whitelist entry for URL validation.","!type":"fn(protocol: String, host: String, port: String, path: String)","!category":"function","!static":"true"},"clearDelayedCall":{"!description":"Stops the delayed call.\n\nThe function given when calling delayedCall is not called anymore.","!type":"fn(sDelayedCallId: String)","!category":"function","!static":"true"},"_loadJSResourceAsync":{"!description":"Loads the given Javascript resource (URN) asynchronously via as script tag. Returns a promise that will be resolved when the load event is fired or reject when the error event is fired.\n\nNote: execution errors of the script are not reported as 'error'.\n\nThis method is not a full implementation of require. It is intended only for loading \"preload\" files that do not define an own module / module value.\n\nFunctionality might be removed/renamed in future, so no code outside the sap.ui.core library must use it.","!type":"String","!category":"enum"},"encodeJS":{"!description":"Encode the string for inclusion into a JS string literal","!type":"fn(sString: String) -> String","!category":"function","!static":"true"},"scrollbarSize":{"!description":"Returns the size (width of the vertical / height of the horizontal) native browser scrollbars.\n\nThis function must only be used when the DOM is ready.","!type":"fn(sClasses?: String, bForce?: Boolean) -> Object","!category":"function","!static":"true"},"escapeRegExp":{"!description":"Escapes all characters that would have a special meaning in a regular expression.\n\nThis method can be used when a string with arbitrary content has to be integrated into a regular expression and when the whole string should match literally.\n\nExample: <pre>\n  var text = \"E=m*c^2\"; // text to search\n  var search = \"m*c\";   // text to search for\n\n  text.match( new RegExp(                         search  ) ); // [ \"c\" ]\n  text.match( new RegExp( jQuery.sap.escapeRegExp(search) ) ); // [ \"m*c\" ]\n<\/pre>","!type":"fn(sString: String) -> String","!category":"function","!static":"true"},"endsWith":{"!description":"Checks whether a given <code>sString<\/code> ends with <code>sEndString<\/code> respecting the case of the strings.","!type":"fn(sString: String, sEndString: String) -> Boolean","!category":"function","!static":"true"},"act":"jQuery.sap.act","storage":"jQuery.sap.storage"},"sap.ui.core.ws.SapPcpWebSocket.SUPPORTED_PROTOCOLS":{"!description":"Protocol versions.\n\nOne (or more) of these have to be selected to create an SapPcpWebSocket connection (or no protocol at all).","!category":"static class","v10":{"!type":"String","!category":"enum"},"!module":"sap/ui/core/ws/SapPcpWebSocket"},"sap.ui.core.mvc.Controller_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.mvc.Controller with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sName: [String | [object Object]])","prototype":"sap.ui.core.mvc.Controller"},"sap.ui.core.Icon_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Icon with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.Icon"},"sap.ui.model.odata.type.TimeOfDay":{"!description":"This class represents the OData V4 primitive type {@link http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part3-csdl/odata-v4.0-errata02-os-part3-csdl-complete.html#_The_edm:Documentation_Element <code>Edm.TimeOfDay<\/code>}. In {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>string<\/code>.","validateValue":{"!description":"Validates the given value in model representation and meets the type's constraints.","!type":"fn(sValue: String)","!category":"function","parameters":{"sValue":"type: string, description: The value to be validated"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.TimeOfDay with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function","!static":false},"formatValue":{"!description":"Formats the given value to the given target type.","!type":"fn(sValue: String, sTargetType: String) -> String","!category":"function","parameters":{"sValue":"type: string, description: The value to be formatted, which is represented as a string in the model","sTargetType":"type: string, description: The target type, may be \"any\", \"string\", or a type with one of these types as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}. See {@link sap.ui.model.odata.type} for more information"},"!static":false},"!category":"class","!constructorDescription":"Constructor for an OData primitive type <code>Edm.TimeOfDay<\/code>.","!module":"sap/ui/model/odata/type/TimeOfDay","parseValue":{"!description":"Parses the given value, which is expected to be of the given type, to a string with an OData V4 Edm.TimeOfDay value.","!type":"fn(sValue: String, sSourceType: String) -> String","!category":"function","parameters":{"sValue":"type: string, description: The value to be parsed, maps <code>\"\"<\/code> to <code>null<\/code>","sSourceType":"type: string, description: The source type (the expected type of <code>sValue<\/code>), must be \"string\", or a type with \"string\" as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}. See {@link sap.ui.model.odata.type} for more information."},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.TimeOfDay.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.odata.type.ODataType","!helpDescription":"This class represents the OData V4 primitive type {@link http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part3-csdl/odata-v4.0-errata02-os-part3-csdl-complete.html#_The_edm:Documentation_Element <code>Edm.TimeOfDay<\/code>}. In {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>string<\/code>."},"sap.ui.core.Core":{"createUIArea":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Use <code>setRoot()<\/code> instead!<br>Creates a new sap.ui.core.UIArea.","!type":"fn(oDomRef: String | Element) -> sap.ui.core.UIArea","!category":"function","parameters":{"oDomRef":"type: string|Element, description: a DOM Element or ID string of the UIArea"},"!static":false},"attachValidationSuccess":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'validationSuccess' event of <code>sap.ui.core.Core<\/code>.\n\nPlease note that this event is a bubbling event and may already be canceled before reaching the core.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.Core","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event","oListener":"type: object, description: Object on which to call the given function. If empty, an unspecified context object is used (listeners cannot expect this to be the <code>Core<\/code>)."},"!static":false},"attachLocalizationChanged":{"!description":"Register a listener for the <code>localizationChanged<\/code> event.","!type":"fn(fnFunction: fn(), oListener: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: callback to be called","oListener":"type: object, description: context object to cal lthe function on."},"!static":false},"getApplication":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.15.1 The Component class is enhanced to take care about the Application code.<br>Returns the instance of the application (if exists).","!type":"fn() -> sap.ui.app.Application","!category":"function","!static":false},"detachIntervalTimer":{"!description":"Unregisters a listener for the central interval timer.\n\nA listener will only be unregistered if the same function/context combination is given as in the attachIntervalTimer call.","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: function to unregister","oListener":"type: object, description: context object given during registration"},"!static":false},"getUIArea":{"!description":"Returns a UIArea if the given ID/Element belongs to one.","!type":"fn(o: String | Element) -> sap.ui.core.UIArea","!category":"function","parameters":{"o":"type: string|Element, description: a DOM Element or ID string of the UIArea"},"!static":false},"!module":"sap/ui/core/Core","setModel":{"!description":"Sets or unsets a model for the given model name.\n\nThe <code>sName<\/code> must either be <code>undefined<\/code> (or omitted) or a non-empty string. When the name is omitted, the default model is set/unset.\n\nWhen <code>oModel<\/code> is <code>null<\/code> or <code>undefined<\/code>, a previously set model with that name is removed from the Core.\n\nAny change (new model, removed model) is propagated to all existing UIAreas and their descendants as long as a descendant doesn't have its own model set for the given name.\n\nNote: to be compatible with future versions of this API, applications must not use the value <code>null<\/code>, the empty string <code>\"\"<\/code> or the string literals <code>\"null\"<\/code> or <code>\"undefined\"<\/code> as model name.","!type":"fn(oModel: sap.ui.model.Model, sName?: String) -> sap.ui.core.Core","!category":"function","parameters":{"oModel":"type: sap.ui.model.Model, description: the model to be set or <code>null<\/code> or <code>undefined<\/code>","sName":"type: string, description: the name of the model or <code>undefined<\/code>"},"!static":false},"notifyContentDensityChanged":{"!description":"This method can be called to trigger realignment of controls after changing the cozy/compact CSS class of a DOM element, for example, the <code>&lt;body&gt;<\/code> tag.","!type":"fn()","!category":"function","!static":false},"loadLibraries":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"fn(aLibraries: [[object Object]], mOptions?: Object) -> Promise | undefined","!category":"function","parameters":{"aLibraries":"type: [object Object][], description: set of libraries that should be loaded","mOptions":"type: object, description: configuration options"},"!static":false},"detachThemeChanged":{"!description":"Detach event-handler <code>fnFunction<\/code> from the <code>ThemeChanged<\/code> event of this <code>sap.ui.core.Core<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"byId":{"!description":"Returns the registered element for the given id, if any.","!type":"fn(sId: String) -> sap.ui.core.Element","!category":"function","parameters":{"sId":"type: string, description: undefined"},"!static":false},"getEventBus":{"!description":"Returns the event bus.","!type":"fn() -> sap.ui.core.EventBus","!category":"function","!static":false},"detachLocalizationChanged":{"!description":"Unregister a listener from the <code>localizationChanged<\/code> event.\n\nThe listener will only be unregistered if the same function/context combination is given as in the call to <code>attachLocalizationListener<\/code>.","!type":"fn(fnFunction: fn(), oListener: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: callback to be deregistered","oListener":"type: object, description: context object given in a previous call to attachLocalizationChanged."},"!static":false},"includeLibraryTheme":{"!description":"Includes a library theme into the current page (if a variant is specified it will include the variant library theme)","!type":"fn(sLibName: String, sVariant?: String, sQuery?: String)","!category":"function","parameters":{"sLibName":"type: string, description: the name of the UI library","sQuery":"type: string, description: to be used only by the Core","sVariant":"type: string, description: the variant to include (optional)"},"!static":false},"hasModel":{"!description":"Check if a Model is set to the core","!type":"fn() -> Boolean","!category":"function","!static":false},"isThemeApplied":{"!description":"Returns true, if the styles of the current theme are already applied, false otherwise.\n\nThis function must not be used before the init event of the Core. If the styles are not yet applied a theme changed event will follow when the styles will be applied.","!type":"fn() -> Boolean","!category":"function","!static":false},"getElementById":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined use <code>sap.ui.core.Core.byId<\/code> instead!<br>Returns the registered element for the given ID, if any.","!type":"fn(sId: String) -> sap.ui.core.Element","!category":"function","parameters":{"sId":"type: string, description: undefined"},"!static":false},"unlock":{"!description":"Unlocks the Core.\n\nBrowser events are dispatched to the controls again after this method is called.","!type":"fn()","!category":"function","!static":false},"detachControlEvent":{"!description":"Unregisters a listener for control events.\n\nA listener will only be unregistered if the same function/context combination is given as in the attachControlEvent call.","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: function to unregister","oListener":"type: object, description: context object given during registration"},"!static":false},"attachFormatError":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'formatError' event of <code>sap.ui.core.Core<\/code>.\n\nPlease note that this event is a bubbling event and may already be canceled before reaching the core.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.core.Core","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oListener":"type: object, description: Object on which to call the given function. If empty, an unspecified context object is used (listeners cannot expect this to be the <code>Core<\/code>)."},"!static":false},"isStaticAreaRef":{"!description":"Used to find out whether a certain DOM element is the static area","!type":"fn(oDomRef: Object) -> Boolean","!category":"function","parameters":{"oDomRef":"type: object, description: undefined"},"!static":false},"detachFormatError":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'formatError' event of <code>sap.ui.core.Core<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.Core","!category":"function","parameters":{"fnFunction":"type: function, description: The callback function to unregister","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"attachInitEvent":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.13.2 Register with the more convenient {@link #attachInit} function instead<br>Registers a given function that is executed after the framework has been initialized.\n\nThe method is executed only once and only if the framework has not been initialized already. This could be checked by calling {@link #isInitialized}, but in most cases it is more convenient to use {@link #attachInit} instead. This guarantees that the given function is executed exactly once, independent of the state of the framework.","!type":"fn(fnFunction: fn())","!category":"function","parameters":{"fnFunction":"type: function, description: Function that is called after initialization of the framework"},"!static":false},"attachValidationError":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'validationError' event of <code>sap.ui.core.Core<\/code>.\n\nPlease note that this event is a bubbling event and may already be canceled before reaching the core.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.Core","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event","oListener":"type: object, description: Object on which to call the given function. If empty, an unspecified context object is used (listeners cannot expect this to be the <code>Core<\/code>)."},"!static":false},"fireValidationError":{"!description":"Fire event validationError to attached listeners.\n\nExpects following event parameters: <ul> <li>'element' of type <code>sap.ui.core.Element<\/code> <\/li> <li>'property' of type <code>string<\/code> <\/li> <li>'type' of type <code>string<\/code> <\/li> <li>'newValue' of type <code>object<\/code> <\/li> <li>'oldValue' of type <code>object<\/code> <\/li> <li>'exception' of type <code>object<\/code> <\/li> <\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.core.Core","!category":"function","parameters":{"mArguments":"type: Map, description: the arguments to pass along with the event."},"!static":false},"applyTheme":{"!description":"Applies the theme with the given name (by loading the respective style sheets, which does not disrupt the application).\n\nBy default, the theme files are expected to be located at path relative to the respective control library ([libraryLocation]/themes/[themeName]). Different locations can be configured by using the method setThemePath() or by using the second parameter \"sThemeBaseUrl\" of applyTheme(). Usage of this second parameter is a shorthand for setThemePath and internally calls setThemePath, so the theme location is then known.\n\nsThemeBaseUrl is a single URL to specify the default location of all theme files. This URL is the base folder below which the control library folders are located. E.g. if the CSS files are not located relative to the root location of UI5, but instead they are at locations like http://my.server/myapp/resources/sap/ui/core/themes/my_theme/library.css then the URL that needs to be given is: http://my.server/myapp/resources All theme resources are then loaded from below this folder - except if for a certain library a different location has been registered.\n\nIf the theme resources are not all either below this base location or with their respective libraries, then setThemePath must be used to configure individual locations.","!type":"fn(sThemeName: String, sThemeBaseUrl?: String)","!category":"function","parameters":{"sThemeName":"type: string, description: the name of the theme to be loaded","sThemeBaseUrl":"type: string, description: the (optional) base location of the theme"},"!static":false},"registerPlugin":{"!description":"Registers a Plugin to the <code>sap.ui.core.Core<\/code>, which lifecycle will be managed (start and stop).\n\nPlugin object need to implement two methods: <ul> <li><code>startPlugin(oCore)<\/code>: will be invoked, when the Plugin should start (as parameter the reference to the Core will be provided<\/li> <li><code>stopPlugin()<\/code>: will be invoked, when the Plugin should stop<\/li> <\/ul>","!type":"fn(oPlugin: Object)","!category":"function","parameters":{"oPlugin":"type: object, description: reference to a Plugin object"},"!static":false},"getRenderManager":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 0.15.0 Replaced by <code>createRenderManager()<\/code><br>undefined","!type":"fn()","!category":"function","!static":false},"getMessageManager":{"!description":"Returns the active <code>MessageManager<\/code> instance.","!type":"fn() -> sap.ui.core.message.MessageManager","!category":"function","!static":false},"getConfiguration":{"!description":"Returns the Configuration of the Core.","!type":"fn() -> sap.ui.core.Configuration","!category":"function","!static":false},"detachValidationSuccess":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'validationSuccess' event of <code>sap.ui.core.Core<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.Core","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"isMobile":{"!description":"Check if the script is running on mobile","!type":"fn() -> Boolean","!category":"function","!static":false},"!helpDescription":"Core Class of the SAP UI Library.\n\nThis class boots the Core framework and makes it available for the application via method <code>sap.ui.getCore()<\/code>.\n\nExample: <pre>\n\n  var oCore = sap.ui.getCore();\n\n<\/pre>\n\nWith methods of the Core framework you can {@link #attachInit execute code} after the framework has been initialized. It provides access to the {@link #getConfiguration configuration} and exposes events that an application or a control can register to (e.g. {@link #event:localizationChanged localizationChanged}, {@link #event:parseError parseError}, {@link #event:validationError validationError}, {@link #event:formatError formatError}, {@link #event:validationSuccess validationSuccess}).\n\nExample: <pre>\n\n  oCore.attachInit(function() {\n    if ( oCore.getConfiguration().getRTL() ) {\n      ...\n    }\n  });\n\n  oCore.attachLocalizationChanged(function(oEvent) {\n    ...\n  });\n\n<\/pre>","!proto":"sap.ui.base.Object","attachThemeChanged":{"!description":"Attach event-handler <code>fnFunction<\/code> to the <code>ThemeChanged<\/code> event of this <code>sap.ui.core.Core<\/code>.","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oListener":"type: object, description: Object on which to call the given function."},"!static":false},"getModel":{"!description":"Get the model with the given model name.\n\nThe name can be omitted to reference the default model or it must be a non-empty string.\n\nNote: to be compatible with future versions of this API, applications must not use the value <code>null<\/code>, the empty string <code>\"\"<\/code> or the string literals <code>\"null\"<\/code> or <code>\"undefined\"<\/code> as model name.","!type":"fn(sName?: String | undefined) -> sap.ui.model.Model","!category":"function","parameters":{"sName":"type: string|undefined, description: name of the model to be retrieved"},"!static":false},"getStaticAreaRef":{"!description":"Returns the static, hidden area DOM element belonging to this core instance.\n\nIt can be used e.g. for hiding elements like Popups, Shadow, Blocklayer etc.\n\nIf it is not yet available, a DIV is created and appended to the body.","!type":"fn() -> Element","!category":"function","!static":false},"getUIDirty":{"!description":"Returns <code>true<\/code> if there are any pending rendering tasks or when such rendering tasks are currently being executed.","!type":"fn() -> Boolean","!category":"function","!static":false},"createComponent":{"!description":"Creates a component with the provided id and settings.\n\nWhen the optional parameter <code>sUrl<\/code> is given, then all request for resources of the library will be redirected to the given URL. This is convenience for a call to <pre>\n  jQuery.sap.registerModulePath(sName, sUrl);\n<\/pre>","!type":"fn(vComponent: String | Object, sUrl?: String, sId: String, mSettings: Object)","!category":"function","parameters":{"vComponent":"type: string|object, description: name of the component to import or object containing all needed parameters","mSettings":"type: object, description: the settings object for the component","sId":"type: string, description: the ID for the component instance","sUrl":"type: string, description: the URL to load the component from"},"!static":false},"byFieldGroupId":{"!description":"Returns a list of all controls with a field group ID. See {@link sap.ui.core.Control#checkFieldGroupIds Control.prototype.checkFieldGroupIds} for a description of the <code>vFieldGroupIds<\/code> parameter.","!type":"fn(vFieldGroupIds?: [String | [object Object]]) -> [[object Object]]","!category":"function","parameters":{"vFieldGroupIds":"type: string|[object Object][], description: ID of the field group or an array of field group IDs to match"},"!static":false},"applyChanges":{"!description":"Enforces an immediate update of the visible UI (aka \"rendering\").\n\nIn general, applications should avoid calling this method and instead let the framework manage any necessary rendering.","!type":"fn()","!category":"function","!static":false},"getLoadedLibraries":{"!description":"Returns a map of library info objects for all currently loaded libraries, keyed by their names.\n\nThe structure of the library info objects matches the structure of the info object that the {@link #initLibrary} method expects. Only property names documented with <code>initLibrary<\/code> should be accessed, any additional properties might change or disappear in future. When a property does not exists, its default value (as documented with <code>initLibrary<\/code>) should be assumed.\n\n<b>Note:<\/b> The returned info objects must not be modified. They might be a living copy of the internal data (for efficiency reasons) and the framework is not prepared to handle modifications to these objects.","!type":"fn() -> map","!category":"function","!static":false},"!category":"class","detachParseError":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'parseError' event of <code>sap.ui.core.Core<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.Core","!category":"function","parameters":{"fnFunction":"type: function, description: The callback function to unregister.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"isInitialized":{"!description":"Returns true if the Core has already been initialized. This means that instances of RenderManager etc. do already exist and the init event has already been fired (and will not be fired again).","!type":"fn() -> Boolean","!category":"function","!static":false},"getTemplate":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.29.1 Require 'sap/ui/core/tmpl/Template' and use {@link sap.ui.core.tmpl.Template.byId Template.byId} instead.<br>Returns the registered template for the given id, if any.","!type":"fn(sId: String) -> sap.ui.core.Component","!category":"function","parameters":{"sId":"type: string, description: undefined"},"!static":false},"setRoot":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Use function <code>oControl.placeAt(oDomRef, \"only\")<\/code> of <code>sap.ui.core.Control<\/code> instead.<br>Implicitly creates a new <code>UIArea<\/code> (or reuses an exiting one) for the given DOM reference and adds the given control reference to the UIAreas content (existing content will be removed).","!type":"fn(oDomRef: String | Element, oControl: sap.ui.base.Interface | sap.ui.core.Control)","!category":"function","parameters":{"oDomRef":"type: string|Element, description: a DOM Element or Id (string) of the UIArea","oControl":"type: sap.ui.base.Interface|sap.ui.core.Control, description: the Control that should be the added to the <code>UIArea<\/code>."},"!static":false},"unregisterPlugin":{"!description":"Unregisters a Plugin out of the <code>sap.ui.core.Core<\/code>","!type":"fn(oPlugin: Object)","!category":"function","parameters":{"oPlugin":"type: object, description: reference to a Plugin object"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.Core with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"lock":{"!description":"Locks the Core. No browser events are dispatched to the controls.\n\nLock should be called before and after the DOM is modified for rendering, roundtrips... Exceptions might be the case for asynchronous UI behavior","!type":"fn()","!category":"function","!static":false},"getCurrentFocusedControlId":{"!description":"Returns the Id of the control/element currently in focus.","!type":"fn() -> String","!category":"function","!static":false},"loadLibrary":{"!description":"Loads the given library and its dependencies and makes it available to the application.\n\nWhen library preloads are not suppressed for the given library, then a library-preload bundle will be loaded for it. By default, the bundle will be loaded synchronously (for compatibility reasons). Only when the optional parameter <code>vUrl<\/code> is given as <code>true<\/code> or as a configuration object with a property of <code>async:true<\/code>, then the bundle will be loaded asynchronously and a <code>Promise<\/code> will be returned (preferred usage).\n\nAfter preloading the bundle, dependency information from the bundle is evaluated and any missing libraries are also preloaded.\n\nOnly then the library entry module (named <code><i>your/lib<\/i>/library.js<\/code>) will be required and executed. The module is supposed to call <code>sap.ui.getCore().initLibrary(...)<\/code> providing the framework with additional metadata about the library, e.g. its version, the set of contained enums, types, interfaces, controls and elements and whether the library requires CSS. If the library requires CSS, a &lt;link&gt; will be added to the page referring to the corresponding <code>library.css<\/code> stylesheet for the library and the current theme.\n\nWhen the optional parameter <code>vUrl<\/code> is given as a string or when a configuration object is given with a non-empty, string-valued property <code>url<\/code>, then that URL will be registered for the namespace of the library and all resources will be loaded from that location. This is convenience for a call like <pre>\n  jQuery.sap.registerModulePath(sLibrary, vUrl); // or vUrl.url resp.\n<\/pre>\n\nWhen the given library has been loaded already, no further action will be taken, especially, a given URL will not be registered! In the case of asynchronous loading, a Promise will be returned, but will be resolved immediately.","!type":"fn(sLibrary: String, vUrl?: String | Boolean | Object) -> Object | Promise","!category":"function","parameters":{"vUrl":"type: string|boolean|object, description: URL to load the library from or the async flag or a complex configuration object","sLibrary":"type: string, description: name of the library to load"},"!static":false},"detachValidationError":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'validationError' event of <code>sap.ui.core.Core<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.Core","!category":"function","parameters":{"fnFunction":"type: function, description: The callback function to unregister","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"fireFormatError":{"!description":"Fire event formatError to attached listeners.\n\nExpects following event parameters: <ul> <li>'element' of type <code>sap.ui.core.Element<\/code> <\/li> <li>'property' of type <code>string<\/code> <\/li> <li>'type' of type <code>string<\/code> <\/li> <li>'newValue' of type <code>object<\/code> <\/li> <li>'oldValue' of type <code>object<\/code> <\/li> <li>'exception' of type <code>object<\/code> <\/li> <\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.core.Core","!category":"function","parameters":{"mArguments":"type: Map, description: the arguments to pass along with the event."},"!static":false},"initLibrary":{"!description":"Provides the framework with information about a library.\n\nThis method is intended to be called exactly once while the main module of a library (its <code>library.js<\/code> module) is executing, typically at its begin. The single parameter <code>oLibInfo<\/code> is an info object that describes the content of the library.\n\nWhen the <code>oLibInfo<\/code> has been processed, a normalized version of it will be kept and will be returned as library information in later calls to {@link #getLoadedLibraries}. Finally, <code>initLibrary<\/code> fires (the currently private) {@link #event:LibraryChanged} event with operation 'add' for the newly loaded library.\n\n<h3>Side Effects<\/h3>\n\nWhile analyzing the <code>oLibInfo<\/code>, the framework takes some additional actions:\n\n<ul> <li>If the info object contains a list of <code>interfaces<\/code>, they will be registered with the {@link sap.ui.base.DataType} class to make them available as aggregation types in managed objects.<\/li>\n\n<li>If the object contains a list of <code>controls<\/code> or <code>elements<\/code>, {@link sap.ui.lazyRequire lazy stubs} will be created for their constructor as well as for their static <code>extend<\/code> and <code>getMetadata<\/code> methods.<br> <b>Note:<\/b> Future versions might abandon the concept of lazy stubs as it requires synchronous XMLHttpRequests which have been deprecated (see {@link http://xhr.spec.whatwg.org}). To be on the safe side, productive applications should always require any modules that they directly depend on.<\/li>\n\n<li>With the <code>noLibraryCSS<\/code> property, the library can be marked as 'theming-free'. Otherwise, the framework will add a &lt;link&gt; tag to the page's head, pointing to the library's theme-specific stylesheet. The creation of such a &lt;link&gt; tag can be suppressed with the {@link sap.ui.core.Configuration global configuration option} <code>preloadLibCss<\/code>. It can contain a list of library names for which no stylesheet should be included. This is e.g. useful when an application merges the CSS for multiple libraries and already loaded the resulting stylesheet.<\/li>\n\n<li>If a list of library <code>dependencies<\/code> is specified in the info object, those libraries will be loaded synchronously by <code>initLibrary<\/code>.<br> <b>Note:<\/b> Dependencies between libraries don't have to be modeled as AMD dependencies. Only when enums or types from an additional library are used in the coding of the <code>library.js<\/code> module, the library should be additionally listed in the AMD dependencies.<\/li> <\/ul>\n\nLast but not least, higher layer frameworks might want to include their own metadata for libraries. The property <code>extensions<\/code> might contain such additional metadata. Its structure is not defined by the framework, but it is strongly suggested that each extension only occupies a single property in the <code>extensions<\/code> object and that the name of that property contains some namespace information (e.g. library name that introduces the feature) to avoid conflicts with other extensions. The framework won't touch the content of <code>extensions<\/code> but will make it available in the library info objects returned by {@link #getLoadedLibraries}.\n\n<h3>Relationship to Descriptor for Libraries (manifest.json)<\/h3>\n\nThe information contained in <code>oLibInfo<\/code> is partially redundant to the content of the descriptor for the same library (its <code>manifest.json<\/code> file). Future versions of UI5 might ignore the information provided in <code>oLibInfo<\/code> and might evaluate the descriptor file instead. Library developers therefore should keep the information in both files in sync.\n\nWhen the <code>manifest.json<\/code> is generated from the <code>.library<\/code> file (which is the default for UI5 libraries built with Maven), then the content of the <code>.library<\/code> and <code>library.js<\/code> files must be kept in sync.","!type":"fn(oLibInfo: Object)","!category":"function","parameters":{"oLibInfo":"type: object, description: Info object for the library"},"!static":false},"isLocked":{"!description":"Returns the locked state of the <code>sap.ui.core.Core<\/code>","!type":"fn() -> Boolean","!category":"function","!static":false},"attachIntervalTimer":{"!description":"Registers a listener to the central interval timer.","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: callback to be called periodically","oListener":"type: object, description: optional context object to call the callback on."},"!static":false},"fireParseError":{"!description":"Fire event parseError to attached listeners.\n\nExpects following event parameters: <ul> <li>'element' of type <code>sap.ui.core.Element<\/code> <\/li> <li>'property' of type <code>string<\/code> <\/li> <li>'type' of type <code>string<\/code> <\/li> <li>'newValue' of type <code>object<\/code> <\/li> <li>'oldValue' of type <code>object<\/code> <\/li> <li>'exception' of type <code>object<\/code> <\/li> <\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.core.Core","!category":"function","parameters":{"mArguments":"type: Map, description: the arguments to pass along with the event."},"!static":false},"!description":"Core Class of the SAP UI Library.\n\nThis class boots the Core framework and makes it available for the application via method <code>sap.ui.getCore()<\/code>.\n\nExample: <pre>\n\n  var oCore = sap.ui.getCore();\n\n<\/pre>\n\nWith methods of the Core framework you can {@link #attachInit execute code} after the framework has been initialized. It provides access to the {@link #getConfiguration configuration} and exposes events that an application or a control can register to (e.g. {@link #event:localizationChanged localizationChanged}, {@link #event:parseError parseError}, {@link #event:validationError validationError}, {@link #event:formatError formatError}, {@link #event:validationSuccess validationSuccess}).\n\nExample: <pre>\n\n  oCore.attachInit(function() {\n    if ( oCore.getConfiguration().getRTL() ) {\n      ...\n    }\n  });\n\n  oCore.attachLocalizationChanged(function(oEvent) {\n    ...\n  });\n\n<\/pre>","fireValidationSuccess":{"!description":"Fire event validationSuccess to attached listeners.\n\nExpects following event parameters: <ul> <li>'element' of type <code>sap.ui.core.Element<\/code> <\/li> <li>'property' of type <code>string<\/code> <\/li> <li>'type' of type <code>string<\/code> <\/li> <li>'newValue' of type <code>object<\/code> <\/li> <li>'oldValue' of type <code>object<\/code> <\/li> <\/ul>","!type":"fn(mArguments?: Map) -> sap.ui.core.Core","!category":"function","parameters":{"mArguments":"type: Map, description: the arguments to pass along with the event."},"!static":false},"attachControlEvent":{"!description":"Registers a listener for control events.","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: callback to be called for each control event","oListener":"type: object, description: optional context object to call the callback on."},"!static":false},"getComponent":{"!description":"Returns the registered component for the given id, if any.","!type":"fn(sId: String) -> sap.ui.core.Component","!category":"function","parameters":{"sId":"type: string, description: undefined"},"!static":false},"attachParseError":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'parseError' event of <code>sap.ui.core.Core<\/code>.\n\nPlease note that this event is a bubbling event and may already be canceled before reaching the core.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.Core","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event","oListener":"type: object, description: Object on which to call the given function. If empty, an unspecified context object is used (listeners cannot expect this to be the <code>Core<\/code>)."},"!static":false},"getControl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined use <code>sap.ui.core.Core.byId<\/code> instead!<br>Returns the registered element for the given ID, if any.","!type":"fn(sId: String) -> sap.ui.core.Element","!category":"function","parameters":{"sId":"type: string, description: undefined"},"!static":false},"getRootComponent":{"!description":"Returns the instance of the root component (if exists).","!type":"fn() -> sap.ui.core.Component","!category":"function","!static":false},"setThemeRoot":{"!description":"Defines the root directory from below which UI5 should load the theme with the given name. Optionally allows restricting the setting to parts of a theme covering specific control libraries.\n\nExample: <pre>\n  sap.ui.getCore().setThemeRoot(\"my_theme\", \"https://mythemeserver.com/allThemes\");\n  sap.ui.getCore().applyTheme(\"my_theme\");\n<\/pre>\n\nwill cause the following file to be loaded (assuming that the bootstrap is configured to load libraries <code>sap.m<\/code> and <code>sap.ui.layout<\/code>): <pre>\n  https://mythemeserver.com/allThemes/sap/ui/core/themes/my_theme/library.css\n  https://mythemeserver.com/allThemes/sap/ui/layout/themes/my_theme/library.css\n  https://mythemeserver.com/allThemes/sap/m/themes/my_theme/library.css\n<\/pre>\n\nIf parts of the theme are at different locations (e.g. because you provide a standard theme like \"sap_belize\" for a custom control library and this self-made part of the standard theme is at a different location than the UI5 resources), you can also specify for which control libraries the setting should be used, by giving an array with the names of the respective control libraries as second parameter: <pre>\n  sap.ui.getCore().setThemeRoot(\"sap_belize\", [\"my.own.library\"], \"https://mythemeserver.com/allThemes\");\n<\/pre>\n\nThis will cause the Belize theme to be loaded from the UI5 location for all standard libraries. Resources for styling the <code>my.own.library<\/code> controls will be loaded from the configured location: <pre>\n  https://openui5.hana.ondemand.com/resources/sap/ui/core/themes/sap_belize/library.css\n  https://openui5.hana.ondemand.com/resources/sap/ui/layout/themes/sap_belize/library.css\n  https://openui5.hana.ondemand.com/resources/sap/m/themes/sap_belize/library.css\n  https://mythemeserver.com/allThemes/my/own/library/themes/sap_belize/library.css\n<\/pre>\n\nIf the custom theme should be loaded initially (via bootstrap attribute), the <code>themeRoots<\/code> property of the <code>window[\"sap-ui-config\"]<\/code> object must be used instead of calling <code>sap.ui.getCore().setThemeRoot(...)<\/code> in order to configure the theme location early enough.","!type":"fn(sThemeName: String, aLibraryNames?: [[object Object]], sThemeBaseUrl: String) -> sap.ui.core.Core","!category":"function","parameters":{"aLibraryNames":"type: [object Object][], description: Optional library names to which the configuration should be restricted","sThemeName":"type: string, description: Name of the theme for which to configure the location","sThemeBaseUrl":"type: string, description: Base URL below which the CSS file(s) will be loaded from"},"!static":false},"createRenderManager":{"!description":"Returns a new instance of the RenderManager for exclusive use by the caller.\n\nThe caller must take care to destroy the render manager when it is no longer needed. Calling this method before the Core has been {@link #isInitialized initialized}, is not recommended.","!type":"fn() -> sap.ui.core.RenderManager","!category":"function","!static":false},"attachInit":{"!description":"Registers a given function that is executed after the framework has been initialized.\n\nThe given function will either be called as soon as the framework has been initialized or, if it has been initialized already, it will be called immediately.","!type":"fn(fnFunction: fn())","!category":"function","parameters":{"fnFunction":"type: function, description: Function to be after initialization of the framework"},"!static":false},"getLibraryResourceBundle":{"!description":"Retrieves a resource bundle for the given library and locale.\n\nIf only one argument is given, it is assumed to be the libraryName. The locale then falls back to the current {@link sap.ui.core.Configuration#getLanguage session locale}. If no argument is given, the library also falls back to a default: \"sap.ui.core\".\n\n<h3>Configuration via App Descriptor<h3> When the App Descriptor for the library is available without further request (manifest.json has been preloaded) and when the App Descriptor is at least of version 1.9.0 or higher, then this method will evaluate the App Descriptor entry <code>\"sap.ui5\" / \"library\" / \"i18n\"<\/code>. <ul> <li>When the entry is <code>true<\/code>, a bundle with the default name \"messagebundle.properties\" will be loaded<\/li> <li>If it is a string, then that string will be used as name of the bundle<\/li> <li>If it is <code>false<\/code>, no bundle will be loaded and the result will be <code>undefined<\/code><\/li> <\/ul>\n\n<h3>Caching<\/h3> Once a resource bundle for a library has been loaded, it will be cached by this method. Further calls for the same library and locale won't create new requests, but return the already loaded bundle. There's therefore no need for control code to cache the returned bundle for a longer period of time. Not further caching the result also prevents stale texts after a locale change.\n\n<h3>Asynchronous Loading<\/h3> The asynchronous variant of {@link #loadLibrary} will evaluate the same descriptor entry as described above. If it is not <code>false<\/code>, loading the main resource bundle of the library will become a subtask of the asynchronous loading of the library.\n\nDue to this preload of the main bundle and the caching behavior of this method, controls in such a library still can use the synchronous variant of <code>getLibraryResourceBundle<\/code> in their API, behavior and rendering code. Only when the bundle is needed at module execution time (by top level code in a control module), then the asynchronous variant of this method should be preferred.","!type":"fn(sLibraryName?: String, sLocale?: String, bAsync?: Boolean) -> jQuery.sap.util.ResourceBundle | Promise","!category":"function","parameters":{"sLocale":"type: string, description: Locale to retrieve the resource bundle for","bAsync":"type: boolean, description: Whether the resource bundle is loaded asynchronously","sLibraryName":"type: string, description: Name of the library to retrieve the bundle for"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.Core.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.XMLComposite_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.XMLComposite with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.core.XMLComposite"},"jQuery.sap.log.Logger":{"setLevel":{"!description":"Defines the maximum <code>jQuery.sap.log.Level<\/code> of log entries that will be recorded. Log entries with a higher (less important) log level will be omitted from the log. When a component name is given, the log level will be configured for that component only, otherwise the log level for the default component of this logger is set. For the global logger, the global default level is set.\n\n<b>Note<\/b>: Setting a global default log level has no impact on already defined component log levels. They always override the global default log level.","!type":"fn(iLogLevel: jQuery.sap.log.Level, sComponent?: String) -> jQuery.sap.log.Logger","!category":"function","parameters":{"iLogLevel":"type: jQuery.sap.log.Level, description: The new log level","sComponent":"type: string, description: The log component to set the log level for"},"!static":false},"error":{"!description":"Creates a new error-level entry in the log with the given message, details and calling component.","!type":"fn(sMessage: String, sDetails?: String, sComponent?: String, fnSupportInfo?: fn()) -> jQuery.sap.log.Logger","!category":"function","parameters":{"sMessage":"type: string, description: Message text to display","fnSupportInfo":"type: function, description: Callback that returns an additional support object to be logged in support mode. This function is only called if support info mode is turned on with <code>logSupportInfo(true)<\/code>. To avoid negative effects regarding execution times and memory consumption, the returned object should be a simple immutable JSON object with mostly static and stable content.","sComponent":"type: string, description: Name of the component that produced the log entry","sDetails":"type: string, description: Details about the message, might be omitted"},"!static":false},"trace":{"!description":"Creates a new trace-level entry in the log with the given message, details and calling component.","!type":"fn(sMessage: String, sDetails?: String, sComponent?: String, fnSupportInfo?: fn()) -> jQuery.sap.log.Logger","!category":"function","parameters":{"sMessage":"type: string, description: Message text to display","fnSupportInfo":"type: function, description: Callback that returns an additional support object to be logged in support mode. This function is only called if support info mode is turned on with <code>logSupportInfo(true)<\/code>. To avoid negative effects regarding execution times and memory consumption, the returned object should be a simple immutable JSON object with mostly static and stable content.","sComponent":"type: string, description: Name of the component that produced the log entry","sDetails":"type: string, description: Details about the message, might be omitted"},"!static":false},"fatal":{"!description":"Creates a new fatal-level entry in the log with the given message, details and calling component.","!type":"fn(sMessage: String, sDetails?: String, sComponent?: String, fnSupportInfo?: fn()) -> jQuery.sap.log.Logger","!category":"function","parameters":{"sMessage":"type: string, description: Message text to display","fnSupportInfo":"type: function, description: Callback that returns an additional support object to be logged in support mode. This function is only called if support info mode is turned on with <code>logSupportInfo(true)<\/code>. To avoid negative effects regarding execution times and memory consumption, the returned object should be a simple immutable JSON object with mostly static and stable content.","sComponent":"type: string, description: Name of the component that produced the log entry","sDetails":"type: string, description: Details about the message, might be omitted"},"!static":false},"!constructorDescription":"Creates a new Logger instance which will use the given component string\nfor all logged messages without a specific component.","debug":{"!description":"Creates a new debug-level entry in the log with the given message, details and calling component.","!type":"fn(sMessage: String, sDetails?: String, sComponent?: String, fnSupportInfo?: fn()) -> jQuery.sap.log.Logger","!category":"function","parameters":{"sMessage":"type: string, description: Message text to display","fnSupportInfo":"type: function, description: Callback that returns an additional support object to be logged in support mode. This function is only called if support info mode is turned on with <code>logSupportInfo(true)<\/code>. To avoid negative effects regarding execution times and memory consumption, the returned object should be a simple immutable JSON object with mostly static and stable content.","sComponent":"type: string, description: Name of the component that produced the log entry","sDetails":"type: string, description: Details about the message, might be omitted"},"!static":false},"!module":"jquery.sap.global","isLoggable":{"!description":"Checks whether logging is enabled for the given log level, depending on the currently effective log level for the given component.\n\nIf no component is given, the default component of this logger will be taken into account.","!type":"fn(iLevel?: Number, sComponent?: String) -> Boolean","!category":"function","parameters":{"iLevel":"type: int, description: The log level in question","sComponent":"type: string, description: Name of the component to check the log level for"},"!static":false},"info":{"!description":"Creates a new info-level entry in the log with the given message, details and calling component.","!type":"fn(sMessage: String, sDetails?: String, sComponent?: String, fnSupportInfo?: fn()) -> jQuery.sap.log.Logger","!category":"function","parameters":{"sMessage":"type: string, description: Message text to display","fnSupportInfo":"type: function, description: Callback that returns an additional support object to be logged in support mode. This function is only called if support info mode is turned on with <code>logSupportInfo(true)<\/code>. To avoid negative effects regarding execution times and memory consumption, the returned object should be a simple immutable JSON object with mostly static and stable content.","sComponent":"type: string, description: Name of the component that produced the log entry","sDetails":"type: string, description: Details about the message, might be omitted"},"!static":false},"!description":"A Logger class","!category":"class","getLevel":{"!description":"Returns the log level currently effective for the given component. If no component is given or when no level has been configured for a given component, the log level for the default component of this logger is returned.","!type":"fn(sComponent?: String) -> Number","!category":"function","parameters":{"sComponent":"type: string, description: Name of the component to retrieve the log level for"},"!static":false},"warning":{"!description":"Creates a new warning-level entry in the log with the given message, details and calling component.","!type":"fn(sMessage: String, sDetails?: String, sComponent?: String, fnSupportInfo?: fn()) -> jQuery.sap.log.Logger","!category":"function","parameters":{"sMessage":"type: string, description: Message text to display","fnSupportInfo":"type: function, description: Callback that returns an additional support object to be logged in support mode. This function is only called if support info mode is turned on with <code>logSupportInfo(true)<\/code>. To avoid negative effects regarding execution times and memory consumption, the returned object should be a simple immutable JSON object with mostly static and stable content.","sComponent":"type: string, description: Name of the component that produced the log entry","sDetails":"type: string, description: Details about the message, might be omitted"},"!static":false},"!helpDescription":"A Logger class","!proto":"Object"},"sap.ui.core.AccessibleRole":{"SpinButton":{"!description":"Allows users to select a value from a list of given entries where exactly one value is displayed at runtime, and the other ones can be displayed by scrolling using the arrow up and arrow down key.","!type":"String","!category":"enum"},"Search":{"!description":"A search section of a web document. In many cases, this is a form used to submit search requests about the site, or a more general Internet wide search service.","!type":"String","!category":"enum"},"Option":{"!description":"A selectable item in a list represented by a select.","!type":"String","!category":"enum"},"ListItem":{"!description":"A single item in a list.","!type":"String","!category":"enum"},"!module":"sap/ui/core/library","Checkbox":{"!description":"A control that has three possible values: true, false, mixed.","!type":"String","!category":"enum"},"Group":{"!description":"A section of user interface objects.","!type":"String","!category":"enum"},"Menu":{"!description":"Offers a list of choices to the user.","!type":"String","!category":"enum"},"Button":{"!description":"Allows user-triggered actions.","!type":"String","!category":"enum"},"ContentInfo":{"!description":"Information about the content on the page. Examples are footnotes, copyrights, or links to privacy statements.","!type":"String","!category":"enum"},"RadioGroup":{"!description":"A group of radio controls.","!type":"String","!category":"enum"},"ColumnHeader":{"!description":"A table cell containing header information for a column.","!type":"String","!category":"enum"},"Tab":{"!description":"A header for a tab panel.","!type":"String","!category":"enum"},"Separator":{"!description":"A line or bar that separates sections of content.","!type":"String","!category":"enum"},"Marquee":{"!description":"Is used to scroll text across the page.","!type":"String","!category":"enum"},"Tablist":{"!description":"A list of tabs which are references to tab panels.","!type":"String","!category":"enum"},"Textbox":{"!description":"Inputs that allow free-form text as their value.","!type":"String","!category":"enum"},"Tabpanel":{"!description":"A container for the resources associated with a tab.","!type":"String","!category":"enum"},"MenuItemRadio":{"!description":"A menu item which is part of a group of menuitemradio roles.","!type":"String","!category":"enum"},"Navigation":{"!description":"A collection of links suitable for use when navigating the document or related documents.","!type":"String","!category":"enum"},"TreeGrid":{"!description":"A grid whose rows are expandable and collapsable in the same manner as the ones of trees.","!type":"String","!category":"enum"},"Toolbar":{"!description":"A collection of commonly used functions represented in compact visual form.","!type":"String","!category":"enum"},"Application":{"!description":"A software unit executing a set of tasks for the user.","!type":"String","!category":"enum"},"Row":{"!description":"A row of table cells.","!type":"String","!category":"enum"},"Menubar":{"!description":"A container for menu items where each item may activate a submenu.","!type":"String","!category":"enum"},"ProgressBar":{"!description":"Shows the execution progress in applications providing functions that take a long time.","!type":"String","!category":"enum"},"Combobox":{"!description":"Allows selecting an item from a list, or to enter data directly in the input field.","!type":"String","!category":"enum"},"Heading":{"!description":"A heading for a section of the page.","!type":"String","!category":"enum"},"TreeItem":{"!description":"A tree node","!type":"String","!category":"enum"},"Slider":{"!description":"A user input where the user selects an input in a given range. This form of range expects an analogous keyboard interface.","!type":"String","!category":"enum"},"Secondary":{"!description":"A unique section of the document. In the case of a portal, this may include time display, weather forecast, or stock price.","!type":"String","!category":"enum"},"Tooltip":{"!description":"A popup that displays a description for an element when the user passes over or rests on that element. Supplement to the normal tooltip processing of the user agent.","!type":"String","!category":"enum"},"Main":{"!description":"Defines the main content of a document.","!type":"String","!category":"enum"},"Log":{"!description":"An area where new information is added, or old information disappears. Information types are chat logs, messaging, or error logs, for example. The log contains a sequence: New information is always added to the end of the log.","!type":"String","!category":"enum"},"Region":{"!description":"A large section on the web page.","!type":"String","!category":"enum"},"Tree":{"!description":"A form of a list (tree) having groups (subtrees) inside groups (subtrees), where the sub trees can be collapsed and expanded.","!type":"String","!category":"enum"},"SeeAlso":{"!description":"Indicates that the element contains content that is related to the main content of the page.","!type":"String","!category":"enum"},"Grid":{"!description":"Contains cells of tabular data arranged in rows and columns, for example in a table.","!type":"String","!category":"enum"},"AlertDialog":{"!description":"A separate window with an alert or error information.","!type":"String","!category":"enum"},"!category":"static class","Radio":{"!description":"An option in single-select list. Only one radio control in a radiogroup can be selected at the same time.","!type":"String","!category":"enum"},"RowHeader":{"!description":"A table cell containing header information for a row.","!type":"String","!category":"enum"},"List":{"!description":"A container for non-interactive list items which are the children of the list.","!type":"String","!category":"enum"},"GridCell":{"!description":"A table cell in a grid where the cells can be active, editable, and selectable. Cells may have functional relationships to controls, for example.","!type":"String","!category":"enum"},"Document":{"!description":"Content that contains related information, such as a book.","!type":"String","!category":"enum"},"Description":{"!description":"Descriptive content for a page element.","!type":"String","!category":"enum"},"Timer":{"!description":"A numerical counter which indicates an amount of elapsed time from a start point, or of the time remaining until a certain end point.","!type":"String","!category":"enum"},"Dialog":{"!description":"A small window that is designed to interrupt the current application processing in order to inform the user and to get some response.","!type":"String","!category":"enum"},"Note":{"!description":"The content is parenthetic or ancillary to the main content of the resource.","!type":"String","!category":"enum"},"Status":{"!description":"A container for processing advisory information.","!type":"String","!category":"enum"},"Link":{"!description":"An interactive reference to a resource.","!type":"String","!category":"enum"},"!description":"Defines the accessible roles for ARIA support. This enumeration is used with the AccessibleRole control property. For more information, goto \"Roles for Accessible Rich Internet Applications (WAI-ARIA Roles)\" at the www.w3.org homepage.","MenuItem":{"!description":"A child in a menu.","!type":"String","!category":"enum"},"Alert":{"!description":"A message with an alert or error information.","!type":"String","!category":"enum"},"Img":{"!description":"A container for a collection of elements that form an image.","!type":"String","!category":"enum"},"Presentation":{"!description":"An element whose role is presentational does not need to be mapped to the accessibility API.","!type":"String","!category":"enum"},"Listbox":{"!description":"A widget that allows the user to select one or more items from a list. The items within the list are static and can contain images.","!type":"String","!category":"enum"},"Banner":{"!description":"Usually defined as the advertisement at the top of a web page. The banner content typically contains the site or company logo, or other key advertisements.","!type":"String","!category":"enum"},"Directory":{"!description":"A list of references to members of a single group.","!type":"String","!category":"enum"},"MenuItemCheckbox":{"!description":"A checkable menu item (tri-state).","!type":"String","!category":"enum"},"Definition":{"!description":"The content of the associated element represents a definition. If there is a definition element within the content, this one represents the term being defined.","!type":"String","!category":"enum"}},"sap.ui.app":{"root":{"!description":"root : String","!type":"String","!category":"enum"},"Application":"sap.ui.app.Application_obj","!category":"namespace","config":{"!description":"config : Object","!type":"Object","!category":"enum"},"MockServer":"sap.ui.app.MockServer_obj"},"sap.ui.test.matchers.Properties_obj":{"!type":"fn(oProperties: Object)","prototype":"sap.ui.test.matchers.Properties"},"sap.ui.core.routing.Router_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.routing.Router with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oRoutes?: [Object | [object Object]], oConfig?: Object, oOwner?: sap.ui.core.UIComponent, oTargetsConfig?: Object)","prototype":"sap.ui.core.routing.Router"},"sap.ui.model.analytics.odata4analytics.Model.ReferenceWithWorkaround_obj":{"!type":"fn(oModel: Object, aWorkaroundID: [[object Object]])","prototype":"sap.ui.model.analytics.odata4analytics.Model.ReferenceWithWorkaround"},"sap.ui.model.odata.type.DateTimeOffset_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.DateTimeOffset with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.DateTimeBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.DateTimeOffset"},"sap.ui.model.odata.type.String":{"!description":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.String<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>string<\/code>.","validateValue":{"!description":"Validates whether the given value in model representation is valid and meets the defined constraints.","!type":"fn(sValue: String)","!category":"function","parameters":{"sValue":"type: string, description: the value to be validated"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.String with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function","!static":false},"formatValue":{"!description":"Formats the given value to the given target type. If <code>isDigitSequence<\/code> constraint of this type is set to <code>true<\/code> and the target type is any or string and the given value contains only digits, the leading zeros are truncated.","!type":"fn(sValue: String, sTargetType: String) -> String | Number | Boolean","!category":"function","parameters":{"sValue":"type: string, description: the value to be formatted","sTargetType":"type: string, description: the target type; may be \"any\", \"boolean\", \"float\", \"int\" or \"string\". See {@link sap.ui.model.odata.type} for more information."},"!static":false},"!category":"class","!constructorDescription":"Constructor for an OData primitive type <code>Edm.String<\/code>.","!module":"sap/ui/model/odata/type/String","parseValue":{"!description":"Parses the given value which is expected to be of the given type to a string. If <code>isDigitSequence<\/code> constraint of this type is set to <code>true<\/code> and the parsed string is a sequence of digits, then the parsed string is either enhanced with leading zeros, if <code>maxLength<\/code> constraint is given, or leading zeros are removed from parsed string.\n\nNote: An empty input string (<code>\"\"<\/code>) is parsed to <code>null<\/code>. This value will be rejected with a {@link sap.ui.model.ValidateException ValidateException} by {@link #validateValue} if the constraint <code>nullable<\/code> is <code>false<\/code>.","!type":"fn(vValue: String | Number | Boolean, sSourceType: String) -> String","!category":"function","parameters":{"sSourceType":"type: string, description: the source type (the expected type of <code>vValue<\/code>). See {@link sap.ui.model.odata.type} for more information.","vValue":"type: string|number|boolean, description: the value to be parsed"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.String.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.odata.type.ODataType","!helpDescription":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.String<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>string<\/code>."},"sap.ui.core.mvc.View_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.mvc.View with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.mvc.View"},"sap.ui.core.util.File":{"!description":"Utility class to handle files.","save":{"!description":"<p>Triggers a download / save action of the given file.<\/p>\n\n<p>There are limitations for this feature in some browsers:<p>\n\n<p><b>macOS Safari < 10.1 / iOS Safari<\/b><br> A new window or tab is opened. In macOS, the user has to save the file manually (by using key combination \"CMD + S\", choosing the page source format, and specifying a file name). In iOS, the content can be opened in another app (Mail, Notes, ...) or can be copied to the clipboard. If a pop-up blocker prevents this action, an error will be thrown which can be used to notify the user that the pop-up blocker needs to be disabled.<\/p>\n\n<p><b>Android Browser<\/b><br> Not supported<\/p>\n\n<p><b>Windows Phone 10 Edge<\/b><br> Not supported<\/p>","!type":"fn(sData: String, sFileName: String, sFileExtension: String, sMimeType: String, sCharset: String, bByteOrderMark?: Boolean)","!category":"function","!static":"true"},"!category":"namespace","!module":"sap/ui/core/util/File","!helpDescription":"Utility class to handle files."},"sap.ui.model.analytics.odata4analytics.SortOrder":{"!description":"Sort order of a property.","Descending":{"!description":"Sort Order: descending.","!type":"String","!category":"enum"},"!category":"static class","Ascending":{"!description":"Sort Order: ascending.","!type":"String","!category":"enum"},"!module":"sap/ui/model/analytics/odata4analytics"},"sap.ui.core.RenderManager_obj":{"!type":"fn()","prototype":"sap.ui.core.RenderManager"},"sap.ui.test.matchers":{"propertyName":{"!description":"The name of the control property to match the I18N text with.","!type":"String","!category":"enum"},"text":{"!description":"The text of the {@link sap.m.Label} which have the labelFor property.","!type":"String","!category":"enum"},"Ancestor":"sap.ui.test.matchers.Ancestor_obj","BindingPath":"sap.ui.test.matchers.BindingPath_obj","Interactable":"sap.ui.test.matchers.Interactable_obj","AggregationFilled":"sap.ui.test.matchers.AggregationFilled_obj","propertyValue":{"!description":"The value of the Property that is used for matching.","!type":"Object","!category":"enum"},"AggregationLengthEquals":"sap.ui.test.matchers.AggregationLengthEquals_obj","aggregationName":{"!description":"The Name of the aggregation that is used for matching.","!type":"String","!category":"enum"},"Properties":"sap.ui.test.matchers.Properties_obj","modelName":{"!description":"The name of the {@link sap.ui.model.resource.ResourceModel} assigned to the control.","!type":"String","!category":"enum"},"name":{"!description":"The Name of the property that is used for matching.","!type":"String","!category":"enum"},"LabelFor":"sap.ui.test.matchers.LabelFor_obj","value":{"!description":"The value of the property that is used for matching.","!type":"Object","!category":"enum"},"path":{"!description":"The value of the binding path that is used for matching.","!type":"String","!category":"enum"},"length":{"!description":"The length that aggregation <code>name<\/code> should have.","!type":"Number","!category":"enum"},"I18NText":"sap.ui.test.matchers.I18NText_obj","!category":"namespace","parameters":{"!description":"The parameters for replacing the placeholders of the I18N text. See {@link jQuery.sap.util.ResourceBundle#getText}.","!type":"Object","!category":"enum"},"AggregationEmpty":"sap.ui.test.matchers.AggregationEmpty_obj","Matcher":"sap.ui.test.matchers.Matcher_obj","AggregationContainsPropertyEqual":"sap.ui.test.matchers.AggregationContainsPropertyEqual_obj","key":{"!description":"The key of the I18N text in the containing {@link jQuery.sap.util.ResourceBundle}.","!type":"String","!category":"enum"},"PropertyStrictEquals":"sap.ui.test.matchers.PropertyStrictEquals_obj"},"sap.ui.core.ResizeHandler":{"register":{"!description":"Registers the given event handler for resize events on the given DOM element or control.\n\n<b>Note:<\/b> This function must not be used before the UI5 framework is initialized. Please use the {@link sap.ui.core.Core#attachInit init event} of UI5 if you are not sure whether this is the case.\n\nThe resize handler periodically checks the dimensions of the registered reference. Whenever it detects changes, an event is fired. Be careful when changing dimensions within the event handler which might cause another resize event and so on.\n\nThe available parameters of the resize event are: <ul> <li><code>oEvent.target<\/code>: The DOM element of which the dimensions were checked<\/li> <li><code>oEvent.size.width<\/code>: The current width of the DOM element in pixels<\/li> <li><code>oEvent.size.height<\/code>: The current height of the DOM element in pixels<\/li> <li><code>oEvent.oldSize.width<\/code>: The previous width of the DOM element in pixels<\/li> <li><code>oEvent.oldSize.height<\/code>: The previous height of the DOM element in pixels<\/li> <li><code>oEvent.control<\/code>: The control which was given during registration of the event handler (if present)<\/li> <\/ul>","!type":"fn(oRef: DOMRef | sap.ui.core.Control, fHandler: fn()) -> String","!category":"function","!static":"true"},"!description":"The resize handling API provides firing of resize events on all browsers by regularly checking the width and height of registered DOM elements or controls and firing events accordingly.","extend":{"!description":"Creates a new subclass of class sap.ui.core.ResizeHandler with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(vName: String | Object, oRendererInfo?: Object, sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","!static":"true"},"!category":"namespace","!module":"sap/ui/core/ResizeHandler","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.ResizeHandler.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":"true"},"deregister":{"!description":"Deregisters a previously registered handler for resize events with the given registration ID.","!type":"fn(sId: String)","!category":"function","!static":"true"},"!helpDescription":"The resize handling API provides firing of resize events on all browsers by regularly checking the width and height of registered DOM elements or controls and firing events accordingly."},"sap.ui.model.analytics.odata4analytics.QueryResultRequest":{"getMeasureNames":{"!description":"Get the names of the measures included in the query result request","!type":"fn() -> Array","!category":"function","!static":false},"addToAggregationLevel":{"!description":"Add one or more dimensions to the aggregation level","!type":"fn(aDimensionName: undefined)","!category":"function","parameters":{"aDimensionName":"type: undefined, description: Array of dimension names to be added to the already defined aggregation level."},"!static":false},"getURIQueryOptionValue":{"!description":"Get the value of a query option for the OData request URI corresponding to this request.","!type":"fn(sQueryOptionName: String) -> String","!category":"function","parameters":{"sQueryOptionName":"type: String, description: Identifies the query option: $select, $filter,$orderby ... or any custom query option"},"!static":false},"removeFromAggregationLevel":{"!description":"Remove one or more dimensions from the aggregation level. The method also removed a potential sort expression on the dimension.","!type":"fn(aDimensionName: undefined)","!category":"function","parameters":{"aDimensionName":"type: undefined, description: Array of dimension names to be removed from the already defined aggregation level."},"!static":false},"!module":"sap/ui/model/analytics/odata4analytics","setParameterizationRequest":{"!description":"Set the parameterization request required for interactions with the query result of parameterized queries. This method provides an alternative way to assign a parameterization request to a query result request.","!type":"fn(oParameterizationRequest: undefined)","!category":"function","parameters":{"oParameterizationRequest":"type: undefined, description: Request object for interactions with the parameterization of this query"},"!static":false},"getResultPageBoundaries":{"!description":"Returns the current page boundaries as object with properties <code>start<\/code> and <code>end<\/code>. If the end of the page is unbounded, <code>end<\/code> is null.","!type":"fn() -> Object","!category":"function","!static":false},"getQueryResult":{"!description":"Get the description of the query result on which this request operates on","!type":"fn() -> sap.ui.model.analytics.odata4analytics.QueryResult","!category":"function","!static":false},"setResultPageBoundaries":{"!description":"Specify that only a page of the query result shall be returned. A page is described by its boundaries, that are row numbers for the first and last rows in the query result to be returned.","!type":"fn(start: Number, end: Number)","!category":"function","parameters":{"start":"type: Number, description: The first row of the query result to be returned. Numbering starts at 1. Passing null is equivalent to start with the first row.","end":"type: Number, description: The last row of the query result to be returned. Passing null is equivalent to get all rows up to the end of the query result."},"!static":false},"getSortExpression":{"!description":"Get the sort expression for this request.\n\nExpressions are represented by separate objects. If none exists so far, a new expression object gets created.","!type":"fn() -> sap.ui.model.analytics.odata4analytics.SortExpression","!category":"function","!static":false},"setResourcePath":{"!description":"Set the resource path to be considered for the OData request URI of this query request object. This method provides an alternative way to assign a path comprising a parameterization. If a path is provided, it overwrites any parameterization object that might have been specified separately.","!type":"fn(sResourcePath: String)","!category":"function","parameters":{"sResourcePath":"type: string, description: Resource path pointing to the entity set of the query result. Must include a valid parameterization if query contains parameters."},"!static":false},"setFilterExpression":{"!description":"Set the filter expression for this request.\n\nExpressions are represented by separate objects. Calling this method replaces the filter object maintained by this request.","!type":"fn(oFilter: sap.ui.model.analytics.odata4analytics.FilterExpression)","!category":"function","parameters":{"oFilter":"type: sap.ui.model.analytics.odata4analytics.FilterExpression, description: The filter object to be associated with this request."},"!static":false},"!category":"class","setRequestOptions":{"!description":"Set further options to be applied for the OData request to fetch the query result","!type":"fn(bIncludeEntityKey: Boolean, bIncludeCount: Boolean, bReturnNoEntities: Boolean)","!category":"function","parameters":{"bIncludeCount":"type: Boolean, description: Indicates whether or not the result shall include a count for the returned entities. Default is not to include it. Pass null to keep current setting.","bReturnNoEntities":"type: Boolean, description: Indicates whether or not the result shall be empty. This will translate to $top=0 in the OData request and override any setting done with setResultPageBoundaries. The default is not to suppress entities in the result. Pass null to keep current setting. The main use case for this option is to create a request with $inlinecount returning an entity count.","bIncludeEntityKey":"type: Boolean, description: Indicates whether or not the entity key should be returned for every entry in the query result. Default is not to include it. Pass null to keep current setting."},"!static":false},"setSortExpression":{"!description":"Set the sort expression for this request.\n\nExpressions are represented by separate objects. Calling this method replaces the sort object maintained by this request.","!type":"fn(oSorter: sap.ui.model.analytics.odata4analytics.SortExpression)","!category":"function","parameters":{"oSorter":"type: sap.ui.model.analytics.odata4analytics.SortExpression, description: The sort object to be associated with this request."},"!static":false},"getURIToQueryResultEntitySet":{"!description":"Get the URI to locate the entity set for the query result.","!type":"fn(sServiceRootURI: String) -> String","!category":"function","parameters":{"sServiceRootURI":"type: String, description: (optional) Identifies the root of the OData service"},"!static":false},"getURIToQueryResultEntries":{"!description":"Get the unescaped URI to fetch the query result.","!type":"fn(sServiceRootURI: String, sResourcePath: String) -> String","!category":"function","parameters":{"sServiceRootURI":"type: String, description: (optional) Identifies the root of the OData service","sResourcePath":"type: String, description: (optional) OData resource path to be considered. If provided, it overwrites any parameterization object that might have been specified separately."},"!static":false},"getAggregationLevel":{"!description":"Get the names of the dimensions included in the aggregation level","!type":"fn() -> Array","!category":"function","!static":false},"getParameterizationRequest":{"!description":"Retrieves the current parametrization request","!type":"fn() -> sap.ui.model.analytics.odata4analytics.ParameterizationRequest","!category":"function","!static":false},"!constructorDescription":"Create a request object for interaction with a query result.","getAggregationLevelDetails":{"!description":"Get details about a dimensions included in the aggregation level","!type":"fn(sDImensionName: undefined) -> Object","!category":"function","parameters":{"sDImensionName":"type: undefined, description: Name of a dimension included in the aggregation level of this request, for which details shall be returned"},"!static":false},"addRecursiveHierarchy":{"!description":"Adds a recursive hierarchy to the aggregation level.","!type":"fn(sHierarchyDimensionName: String, bIncludeExternalKey: Boolean, bIncludeText: Boolean)","!category":"function","parameters":{"bIncludeText":"type: boolean, description: Indicator whether or not to include the node text (if available) in the query result","sHierarchyDimensionName":"type: string, description: Name of dimension whose hierarchy shall be part of the aggregation level","bIncludeExternalKey":"type: boolean, description: Indicator whether or not to include the external node key (if available) in the query result"},"!static":false},"!description":"Creation of URIs for fetching query results.","includeDimensionKeyTextAttributes":{"!description":"Specify which dimension components shall be included in the query result. The settings get applied to the currently defined aggregation level.","!type":"fn(sDimensionName: String, bIncludeKey: Boolean, bIncludeText: Boolean, aAttributeName: undefined)","!category":"function","parameters":{"aAttributeName":"type: undefined, description: Array of dimension attribute names to be included in the result. Pass null to keep current setting. This argument is ignored if sDimensionName is null.","bIncludeText":"type: boolean, description: Indicator whether or not to include the dimension text (if available) in the query result. Pass null to keep current setting.","sDimensionName":"type: string, description: Name of the dimension for which the settings get applied. Specify null to apply the settings to all dimensions in the aggregation level.","bIncludeKey":"type: boolean, description: Indicator whether or not to include the dimension key in the query result. Pass null to keep current setting."},"!static":false},"includeMeasureRawFormattedValueUnit":{"!description":"Specify which measure components shall be included in the query result. The settings get applied to the currently set measures.","!type":"fn(sMeasureName: String, bIncludeRawValue: Boolean, bIncludeFormattedValue: Boolean, bIncludeUnit: Boolean)","!category":"function","parameters":{"sMeasureName":"type: string, description: Name of the measure for which the settings get applied. Specify null to apply the settings to all currently set measures.","bIncludeRawValue":"type: boolean, description: Indicator whether or not to include the raw value in the query result. Pass null to keep current setting.","bIncludeUnit":"type: boolean, description: Indicator whether or not to include the unit (if available) in the query result. Pass null to keep current setting.","bIncludeFormattedValue":"type: boolean, description: Indicator whether or not to include the formatted value (if available) in the query result. Pass null to keep current setting."},"!static":false},"getFilterExpression":{"!description":"Get the filter expression for this request.\n\nExpressions are represented by separate objects. If none exists so far, a new expression object gets created.","!type":"fn() -> sap.ui.model.analytics.odata4analytics.FilterExpression","!category":"function","!static":false},"setMeasures":{"!description":"Set the measures to be included in the query result request. By default, the query result will include the properties holding the raw values of the given measures. This setting can be changed using includeMeasureRawFormattedValueUnit.","!type":"fn(aMeasureName: undefined)","!category":"function","parameters":{"aMeasureName":"type: undefined, description: Array of measure names to be part of the query result request. If null, the request includes all measures, if empty, no measure is included."},"!static":false},"!proto":"sap.ui.base.Object","!helpDescription":"Creation of URIs for fetching query results.","setAggregationLevel":{"!description":"Set the aggregation level for the query result request. By default, the query result will include the properties holding the keys of the given dimensions. This setting can be changed using includeDimensionKeyTextAttributes.","!type":"fn(aDimensionName: undefined)","!category":"function","parameters":{"aDimensionName":"type: undefined, description: Array of dimension names to be part of the aggregation level. If null, the aggregation level includes all dimensions, if empty, no dimension is included."},"!static":false}},"sap.ui.model.type.Integer":{"!description":"This class represents integer simple types.","extend":{"!description":"Creates a new subclass of class sap.ui.model.type.Integer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for an Integer type.","!module":"sap/ui/model/type/Integer","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.type.Integer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.SimpleType","!helpDescription":"This class represents integer simple types."},"sap.ui.model.odata.ODataMessageParser":{"setHeaderField":{"!description":"Sets the header field name that should be used for parsing the JSON messages","!type":"fn(sFieldName: String) -> sap.ui.model.odata.ODataMessageParser","!category":"function","parameters":{"sFieldName":"type: string, description: The name of the header field that should be used as source of the message object"},"!static":false},"!description":"OData implementation of the sap.ui.core.message.MessageParser class. Parses message responses from the back-end.","extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.ODataMessageParser with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.message.MessageParser.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"OData implementation of the sap.ui.core.message.MessageParser class. Parses message responses from the back-end.","parse":{"!description":"Parses the given response for messages, calculates the delta and fires the messageChange-event on the MessageProcessor if messages are found.","!type":"fn(oResponse: Object, oRequest: Object, mGetEntities: map, mChangeEntities: map)","!category":"function","parameters":{"oResponse":"type: object, description: The response from the server containing body and headers","mChangeEntities":"type: map, description: A map containing the entities changed on the back-end as keys","oRequest":"type: object, description: The original request that lead to this response","mGetEntities":"type: map, description: A map containing the entities requested from the back-end as keys"},"!static":false},"!module":"sap/ui/model/odata/ODataMessageParser","getHeaderField":{"!description":"Returns the name of the header field that is used to parse the server messages","!type":"fn() -> String","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.ODataMessageParser.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.message.MessageParser","!helpDescription":"OData implementation of the sap.ui.core.message.MessageParser class. Parses message responses from the back-end."},"sap.ui.model.MetaModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.MetaModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.model.MetaModel"},"sap.ui.model.Filter_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.Filter with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(vFilterInfo: [Object | String | [object Object]], vOperator?: sap.ui.model.FilterOperator | fn() | Boolean, vValue1?: Object, vValue2?: Object)","prototype":"sap.ui.model.Filter"},"sap.ui.test.PageObjectFactory":{"!description":"Page Object Factory","!category":"class","!module":"sap/ui/test/PageObjectFactory","create":{"!description":"Create a page object configured as arrangement, action and assertion to the Opa.config. Use it to structure your arrangement, action and assertion based on parts of the screen to avoid name clashes and help structuring your tests.","!type":"fn()","!category":"function","!static":true},"!proto":"sap.ui.base.Object","!helpDescription":"Page Object Factory"},"sap.ui.core.delegate.ItemNavigation":{"setTableMode":{"!description":"Sets whether the <code>ItemNavigation<\/code> should use the table mode to navigate through the items (navigation in a grid).","!type":"fn(bTableMode: Boolean, bTableList?: Boolean) -> sap.ui.core.delegate.ItemNavigation","!category":"function","parameters":{"bTableList":"type: boolean, description: This sets a different behavior for table mode. In this mode we keep using table navigation but there are some differences. e.g. <ul> <li>Page-up moves focus to the first row, not to the first cell like in table mode<\/li> <li>Page-down moves focus to the last row, not to the last cell like in table mode<\/li> <\/ul>","bTableMode":"type: boolean, description: Set to true if table mode should be used, else false"},"!static":false},"setHomeEndColumnMode":{"!description":"Sets behavior of HOME and END keys if columns are used.","!type":"fn(bStayInRow: Boolean, bCtrlEnabled: Boolean) -> sap.ui.core.delegate.ItemNavigation","!category":"function","parameters":{"bCtrlEnabled":"type: boolean, description: HOME/END with CTRL -> go to first/last item of all","bStayInRow":"type: boolean, description: HOME -> go to first item in row; END -> go to last item in row"},"!static":false},"setColumns":{"!description":"Sets whether the items are displayed in columns.\n\nIf columns are used, the Arrow Up and Arrow Down keys navigate to the next or previous item of the column. If the first or last item of the column is reached, the next focused item is then in the next or previous column.","!type":"fn(iColumns: Number, bNoColumnChange: Boolean) -> sap.ui.core.delegate.ItemNavigation","!category":"function","parameters":{"iColumns":"type: int, description: Count of columns for the table mode or cycling mode","bNoColumnChange":"type: boolean, description: Forbids jumping to an other column with Arrow Up and Arrow Down keys"},"!static":false},"setRootDomRef":{"!description":"Sets the root DOM reference surrounding the items","!type":"fn(oDomRef: Object) -> sap.ui.core.delegate.ItemNavigation","!category":"function","parameters":{"oDomRef":"type: object, description: Root DOM reference"},"!static":false},"setDisabledModifiers":{"!description":"Sets the disabled modifiers These modifiers will not be handled by the <code>ItemNavigation<\/code>\n\n<pre>\nExample: Disable shift + up handling of the <code>ItemNavigation<\/code>\n\noItemNavigation.setDisabledModifiers({\n    sapnext : [\"shift\"]\n});\n\nPossible keys are : \"shift\", \"alt\", \"ctrl\", \"meta\"\nPossible events are : \"sapnext\", \"sapprevious\", \"saphome\", \"sapend\"\n<\/pre>","!type":"fn(oDisabledModifiers: Object) -> sap.ui.core.delegate.ItemNavigation","!category":"function","parameters":{"oDisabledModifiers":"type: Object, description: Object that includes event type with disabled keys as an array"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.delegate.ItemNavigation with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Creates an <code>ItemNavigation<\/code> delegate that can be attached to controls requiring\ncapabilities for keyboard navigation between items.","!module":"sap/ui/core/delegate/ItemNavigation","getRootDomRef":{"!description":"Returns the root DOM reference surrounding the items","!type":"fn() -> Element","!category":"function","!static":false},"setPageSize":{"!description":"Sets the page size of the item navigation to allow Page Up and Page Down keys.","!type":"fn(iPageSize: Number) -> sap.ui.core.delegate.ItemNavigation","!category":"function","parameters":{"iPageSize":"type: int, description: The page size, needs to be at least 1"},"!static":false},"!description":"Delegate for the navigation between DOM nodes with the keyboard.\n\nThe <code>ItemNavigation<\/code> provides keyboard and mouse navigation between DOM nodes representing items. This means that controls rendering a list of items can attach this delegate to get a common keyboard and mouse support to navigate between these items. It is possible to navigate between the items via the arrow keys. If needed, paging using the Page Up and Page Down keys is possible. (To activate call <code>setPageSize<\/code> with a value &gt; 0.) HOME and END keys are also supported. Focusing an item via mouse also is also supported. For mouse navigation, the <code>mousedown<\/code> event is used.\n\nAs the <code>ItemNavigation<\/code> works with DOM nodes, the items and the control area must be provided as DOM references. There is one root DOM reference (set via <code>setRootDomRef<\/code>). All item DOM references (set via <code>setItemDomRefs<\/code>) must be places somewhere inside of this root DOM reference. Only focusable items are used for the navigation, meaning disabled items or separator items are just ignored by navigating through the items. In some cases however, it makes sense to put the non-focusable items in the array of the DOM references to keep the indexes stable or like in the calling control. <b>Hint:<\/b> To make a DOM reference focusable a <code>tabindex<\/code> of -1 can be set.\n\n<b>Note<\/b> After re-rendering of the control or changing the DOM nodes of the control, the DOM references of the <code>ItemNavigation<\/code> must be updated. Then the same item (corresponding to the index) will get the focus.\n\nThe <code>ItemNavigation<\/code> adjusts the <code>tabindex<\/code> of all DOM references relating to the current focused item. So if the control containing the items gets the focus (e.g. via tab navigation), it is always the focused items which will be focused.\n\n<b>Note:<\/b> If the <code>ItemNavigation<\/code> is nested in another <code>ItemNavigation<\/code> (e.g. <code>SegmentedButton<\/code> in <code>Toolbar<\/code>), the <code>RootDomRef<\/code> will always have <code>tabindex<\/code> -1.\n\nPer default the <code>ItemNavigation<\/code> cycles over the items. It navigates again to the first item if the Arrow Down or Arrow Right key is pressed while the last item has the focus. It navigates to the last item if arrow up or arrow left is pressed while the first item has the focus. If you want to stop the navigation at the first and last item, call the <code>setCycling<\/code> method with a value of <code>false<\/code>.\n\nIt is possible to have multiple columns in the item navigation. If multiple columns are used, the keyboard navigation changes. The Arrow Right and Arrow Left keys will take the user to the next or previous item, and the Arrow Up and Arrow Down keys will navigate the same way but in a vertical direction.\n\nThe <code>ItemNavigation<\/code> also allows setting a selected index that is used to identify the selected item. Initially, if no other focus is set, the selected item will be the focused one. Note that navigating through the items will not change the selected item, only the focus. (For example a radio group has one selected item.)","getDisabledModifiers":{"!description":"Returns disabled modifiers These modifiers will not be handled by the <code>ItemNavigation<\/code>","!type":"fn(oDisabledModifiers: Object) -> Object","!category":"function","parameters":{"oDisabledModifiers":"type: object, description: Object that includes event type with disabled keys as an array"},"!static":false},"!category":"class","setSelectedIndex":{"!description":"Sets the selected index if the used control supports selection.","!type":"fn(iIndex: Number) -> sap.ui.core.delegate.ItemNavigation","!category":"function","parameters":{"iIndex":"type: int, description: Index of the first selected item"},"!static":false},"getItemDomRefs":{"!description":"Returns the array of item DOM references","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"setCycling":{"!description":"Sets whether the <code>ItemNavigation<\/code> should cycle through the items.\n\nIf cycling is disabled the navigation stops at the first and last item, if the corresponding arrow keys are used.","!type":"fn(bCycling: Boolean) -> sap.ui.core.delegate.ItemNavigation","!category":"function","parameters":{"bCycling":"type: boolean, description: Set to true if cycling should be done, else false"},"!static":false},"setItemDomRefs":{"!description":"Sets the item DOM references as an array for the items","!type":"fn(aItemDomRefs: [[object Object]]) -> sap.ui.core.delegate.ItemNavigation","!category":"function","parameters":{"aItemDomRefs":"type: [object Object][], description: Array of DOM references or DOM node list object, representing the items"},"!static":false},"hasDisabledModifier":{"!description":"Check whether given event has disabled modifier or not","!type":"fn(oEvent: jQuery.Event) -> Boolean","!category":"function","parameters":{"oEvent":"type: jQuery.Event, description: jQuery event"},"!static":false},"!helpDescription":"Delegate for the navigation between DOM nodes with the keyboard.\n\nThe <code>ItemNavigation<\/code> provides keyboard and mouse navigation between DOM nodes representing items. This means that controls rendering a list of items can attach this delegate to get a common keyboard and mouse support to navigate between these items. It is possible to navigate between the items via the arrow keys. If needed, paging using the Page Up and Page Down keys is possible. (To activate call <code>setPageSize<\/code> with a value &gt; 0.) HOME and END keys are also supported. Focusing an item via mouse also is also supported. For mouse navigation, the <code>mousedown<\/code> event is used.\n\nAs the <code>ItemNavigation<\/code> works with DOM nodes, the items and the control area must be provided as DOM references. There is one root DOM reference (set via <code>setRootDomRef<\/code>). All item DOM references (set via <code>setItemDomRefs<\/code>) must be places somewhere inside of this root DOM reference. Only focusable items are used for the navigation, meaning disabled items or separator items are just ignored by navigating through the items. In some cases however, it makes sense to put the non-focusable items in the array of the DOM references to keep the indexes stable or like in the calling control. <b>Hint:<\/b> To make a DOM reference focusable a <code>tabindex<\/code> of -1 can be set.\n\n<b>Note<\/b> After re-rendering of the control or changing the DOM nodes of the control, the DOM references of the <code>ItemNavigation<\/code> must be updated. Then the same item (corresponding to the index) will get the focus.\n\nThe <code>ItemNavigation<\/code> adjusts the <code>tabindex<\/code> of all DOM references relating to the current focused item. So if the control containing the items gets the focus (e.g. via tab navigation), it is always the focused items which will be focused.\n\n<b>Note:<\/b> If the <code>ItemNavigation<\/code> is nested in another <code>ItemNavigation<\/code> (e.g. <code>SegmentedButton<\/code> in <code>Toolbar<\/code>), the <code>RootDomRef<\/code> will always have <code>tabindex<\/code> -1.\n\nPer default the <code>ItemNavigation<\/code> cycles over the items. It navigates again to the first item if the Arrow Down or Arrow Right key is pressed while the last item has the focus. It navigates to the last item if arrow up or arrow left is pressed while the first item has the focus. If you want to stop the navigation at the first and last item, call the <code>setCycling<\/code> method with a value of <code>false<\/code>.\n\nIt is possible to have multiple columns in the item navigation. If multiple columns are used, the keyboard navigation changes. The Arrow Right and Arrow Left keys will take the user to the next or previous item, and the Arrow Up and Arrow Down keys will navigate the same way but in a vertical direction.\n\nThe <code>ItemNavigation<\/code> also allows setting a selected index that is used to identify the selected item. Initially, if no other focus is set, the selected item will be the focused one. Note that navigating through the items will not change the selected item, only the focus. (For example a radio group has one selected item.)","!proto":"sap.ui.base.EventProvider","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.delegate.ItemNavigation.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.util.serializer.XMLViewSerializer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.serializer.XMLViewSerializer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oView: sap.ui.core.mvc.XMLView, oWindow?: Object, sDefaultXmlNamespace?: String, fnGetControlId: fn(), fnGetEventHandlerName: fn())","prototype":"sap.ui.core.util.serializer.XMLViewSerializer"},"sap.ui.core.mvc.ViewType":{"!description":"Specifies possible view types","Template":{"!description":"Template View","!type":"String","!category":"enum"},"JSON":{"!description":"JSON View","!type":"String","!category":"enum"},"HTML":{"!description":"HTML view","!type":"String","!category":"enum"},"!category":"static class","XML":{"!description":"XML view","!type":"String","!category":"enum"},"!module":"sap/ui/core/library","JS":{"!description":"JS View","!type":"String","!category":"enum"}},"sap.ui.model.odata.ODataUtils":{"setOrigin":{"!description":"Adds an origin to the given service URL. If an origin is already present, it will only be replaced if the parameters object contains the flag \"force: true\". In case the URL already contains URL parameters, these will be kept. As a parameter, a sole alias is sufficient. The parameters vParameters.system and vParameters.client however have to be given in pairs. In case all three origin specifying parameters are given (system/client/alias), the alias has precedence.\n\nExamples: setOrigin(\"/backend/service/url/\", \"DEMO_123\"); - result: /backend/service/url;o=DEMO_123/\n\nsetOrigin(\"/backend/service/url;o=OTHERSYS8?myUrlParam=true&x=4\", {alias: \"DEMO_123\", force: true}); - result /backend/service/url;o=DEMO_123?myUrlParam=true&x=4\n\nsetOrigin(\"/backend/service;o=NOT_TOUCHED/url;v=2;o=OTHERSYS8;srv=XVC\", {alias: \"DEMO_123\", force: true}); - result /backend/service;o=NOT_TOUCHED/url;v=2;o=DEMO_123;srv=XVC\n\nsetOrigin(\"/backend/service/url/\", {system: \"DEMO\", client: 134}); - result /backend/service/url;o=sid(DEMO.134)/","!type":"fn(sServiceURL: String, vParameters: Object | String) -> String","!category":"function","!static":"true"},"compare":{"!description":"Compares the given OData values based on their type. All date and time types can also be compared with a number. This number is then interpreted as the number of milliseconds that the corresponding date or time object should hold.","!type":"fn(vValue1: Object, vValue2: Object, bAsDecimal?: String) -> Number","!category":"function","!static":"true"},"formatValue":{"!description":"Formats a JavaScript value according to the given <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> EDM type<\/a>.","!type":"fn(vValue: Object, sType: String) -> String","!category":"function","!static":"true"},"!category":"namespace","!module":"sap/ui/model/odata/ODataUtils","getComparator":{"!description":"Returns a comparator function optimized for the given EDM type.","!type":"fn(sEdmType: String) -> fn()","!category":"function","!static":"true"}},"sap.ui.core.message.MessageManager_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.message.MessageManager with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.core.message.MessageManager"},"sap.ui.core.util.serializer.delegate.Delegate_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.serializer.delegate.Delegate with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.core.util.serializer.delegate.Delegate"},"sap.ui.model.odata.v4.ODataListBinding":{"suspend":{"!description":"Suspends this binding. A suspended binding does not fire change events nor does it trigger data service requests. Call {@link #resume} to resume the binding. Before 1.53.0, this method was not supported and threw an error.","!type":"fn()","!category":"function","!static":false},"sort":{"!description":"Sort the entries represented by this list binding according to the given sorters. The sorters are stored at this list binding and they are used for each following data request.\n\nIf there are pending changes an error is thrown. Use {@link #hasPendingChanges} to check if there are pending changes. If there are changes, call {@link sap.ui.model.odata.v4.ODataModel#submitBatch} to submit the changes or {@link sap.ui.model.odata.v4.ODataModel#resetChanges} to reset the changes before calling {@link #sort}.","!type":"fn(vSorters?: [sap.ui.model.Sorter | [object Object]]) -> sap.ui.model.odata.v4.ODataListBinding","!category":"function","parameters":{"vSorters":"type: sap.ui.model.Sorter|[object Object][], description: The dynamic sorters to be used; they replace the dynamic sorters given in {@link sap.ui.model.odata.v4.ODataModel#bindList}. Static sorters, as defined in the '$orderby' binding parameter, are always executed after the dynamic sorters."},"!static":false},"changeParameters":{"!description":"Changes this binding's parameters and refreshes the binding.\n\nIf there are pending changes an error is thrown. Use {@link #hasPendingChanges} to check if there are pending changes. If there are changes, call {@link sap.ui.model.odata.v4.ODataModel#submitBatch} to submit the changes or {@link sap.ui.model.odata.v4.ODataModel#resetChanges} to reset the changes before calling {@link #changeParameters}.\n\nThe parameters are changed according to the given map of parameters: Parameters with an <code>undefined<\/code> value are removed, the other parameters are set, and missing parameters remain unchanged.","!type":"fn(mParameters: Object)","!category":"function","parameters":{"mParameters":"type: object, description: Map of binding parameters, see {@link sap.ui.model.odata.v4.ODataModel#bindList} and {@link sap.ui.model.odata.v4.ODataModel#bindContext}"},"!static":false},"resetChanges":{"!description":"Resets all pending changes of this binding, see {@link #hasPendingChanges}. Resets also invalid user input.","!type":"fn()","!category":"function","!static":false},"!module":"sap/ui/model/odata/v4/ODataListBinding","destroy":{"!description":"Destroys the object. The object must not be used anymore after this function was called.","!type":"fn()","!category":"function","!static":false},"!category":"class","getDistinctValues":{"!description":"Method not supported","!type":"fn()","!category":"function","!static":false},"getHeaderContext":{"!description":"Returns the header context which allows binding to <code>$count<\/code>. If known, the value of such a binding is the element count of the collection on the server. Otherwise it is <code>undefined<\/code>. The value is a number and its type is <code>Edm.Int64<\/code>.\n\nThe count is known to the binding in the following situations: <ul> <li>It has been requested from the server via the system query option <code>$count<\/code>. <li>A \"short read\" in a paged collection (the server delivered less elements than requested) indicated that the server has no more unread elements. <li>It has been read completely in one request, for example an embedded collection via <code>$expand<\/code>. <\/ul>\n\nThe <code>$count<\/code> is unknown, if the binding is relative, but has no context.","!type":"fn() -> sap.ui.model.odata.v4.Context","!category":"function","!static":false},"refresh":{"!description":"Refreshes the binding. Prompts the model to retrieve data from the server using the given group ID and notifies the control that new data is available.\n\nRefresh is supported for bindings which are not relative to a {@link sap.ui.model.odata.v4.Context} and whose root binding is not suspended.\n\nNote: When calling {@link #refresh} multiple times, the result of the request triggered by the last call determines the binding's data; it is <b>independent<\/b> of the order of calls to {@link sap.ui.model.odata.v4.ODataModel#submitBatch} with the given group ID.\n\nIf there are pending changes, an error is thrown. Use {@link #hasPendingChanges} to check if there are pending changes. If there are changes, call {@link sap.ui.model.odata.v4.ODataModel#submitBatch} to submit the changes or {@link sap.ui.model.odata.v4.ODataModel#resetChanges} to reset the changes before calling {@link #refresh}.","!type":"fn(sGroupId?: String)","!category":"function","parameters":{"sGroupId":"type: string, description: The group ID to be used for refresh; if not specified, the group ID for this binding is used.\n\nValid values are <code>undefined<\/code>, '$auto', '$direct' or application group IDs as specified in {@link sap.ui.model.odata.v4.ODataModel#submitBatch}."},"!static":false},"updateAnalyticalInfo":{"!description":"Updates the binding's \"$apply\" parameter based on the given analytical information as \"groupby((&lt;dimension_1,...,dimension_N,unit_or_text_1,...,unit_or_text_K>), aggregate(&lt;measure_1,...,measure_M>))\" where the \"aggregate\" part is only present if measures are given.\n\nAnalytical information is the mapping of UI columns to properties in the bound OData entity set. Every column object contains at least the <code>name<\/code> of the bound property. <ol> <li>A column bound to a dimension property has further boolean properties: <ul> <li><code>grouped<\/code>: its presence is used to detect a dimension<\/li> <li><code>inResult<\/code> and <code>visible<\/code>: the dimension is ignored unless at least one of these is <code>true<\/code><\/li> <\/ul> <\/li> <li>A column bound to a measure property has further boolean properties: <ul> <li><code>total<\/code>: its presence is used to detect a measure<\/li> <\/ul> <\/li> <li>A column bound to neither a dimension nor a measure property, but for instance bound to a text property or in some cases to a unit property, has no further boolean properties<\/li> <\/ol>","!type":"fn(aColumns: [[object Object]])","!category":"function","parameters":{"aColumns":"type: [object Object][], description: An array with objects holding the analytical information for every column, from left to right"},"!static":false},"initialize":{"!description":"Initializes the OData list binding: Fires a 'change' event in case the binding has a resolved path and its root binding is not suspended.","!type":"fn()","!category":"function","!static":false},"getContexts":{"!description":"Returns already created binding contexts for all entities in this list binding for the range determined by the given start index <code>iStart<\/code> and <code>iLength<\/code>. If at least one of the entities in the given range has not yet been loaded, fires a {@link #event:change} event on this list binding once these entities have been loaded <b>asynchronously<\/b>. A further call to this method in the 'change' event handler with the same index range then yields the updated array of contexts.","!type":"fn(iStart?: Number, iLength?: Number, iMaximumPrefetchSize?: Number) -> [[object Object]]","!category":"function","parameters":{"iMaximumPrefetchSize":"type: number, description: The maximum number of contexts to read before and after the given range; with this, controls can prefetch data that is likely to be needed soon, e.g. when scrolling down in a table. Negative values will be treated as 0. Supported since 1.39.0; <code>Infinity<\/code> may be used since 1.53.0 to prefetch all data and thus disable paging.","iLength":"type: number, description: The number of contexts to retrieve beginning from the start index; defaults to the model's size limit, see {@link sap.ui.model.Model#setSizeLimit}; <code>Infinity<\/code> may be used since 1.53.0 to retrieve all data","iStart":"type: number, description: The index where to start the retrieval of contexts"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.v4.ODataListBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.ListBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"isInitial":{"!description":"Method not supported","!type":"fn()","!category":"function","!static":false},"!constructorDescription":"Do <strong>NOT<\/strong> call this private constructor, but rather use\n{@link sap.ui.model.odata.v4.ODataModel#bindList} instead!","create":{"!description":"Creates a new entity and inserts it at the beginning of the list. As long as the binding contains an entity created via this function, you cannot create another entity. This is only possible after the creation of the entity has been successfully sent to the server and you have called {@link #refresh} at the (parent) binding, which is absolute or not relative to a {@link sap.ui.model.odata.v4.Context}, or the new entity is deleted in between.\n\nFor creating the new entity, the binding's update group ID is used, see binding parameter $$updateGroupId of {@link sap.ui.model.odata.v4.ODataModel#bindList}.\n\nYou can call {@link sap.ui.model.odata.v4.Context#delete} to delete the created context again. As long as the context is transient (see {@link sap.ui.model.odata.v4.Context#isTransient}), {@link #resetChanges} and a call to {@link sap.ui.model.odata.v4.ODataModel#resetChanges} with the update group ID as parameter also delete the created context together with other changes.\n\nIf the creation of the entity on the server failed, the creation is repeated automatically. If the binding's update group ID has {@link sap.ui.model.odata.v4.SubmitMode.API}, it is repeated with the next call of {@link sap.ui.model.odata.v4.ODataModel#submitBatch}. Otherwise it is repeated with the next update for the entity.","!type":"fn(oInitialData?: Object) -> sap.ui.model.odata.v4.Context","!category":"function","parameters":{"oInitialData":"type: object, description: The initial data for the created entity"},"!static":false},"getRootBinding":{"!description":"Returns the root binding of this binding's hierarchy, see binding {@link topic:54e0ddf695af4a6c978472cecb01c64d Initialization and Read Requests}.","!type":"fn() -> sap.ui.model.odata.v4.ODataContextBinding | sap.ui.model.odata.v4.ODataListBinding | sap.ui.model.odata.v4.ODataPropertyBinding","!category":"function","!static":false},"resume":{"!description":"Resumes this binding. The binding can again fire change events and trigger data service requests. Before 1.53.0, this method was not supported and threw an error.","!type":"fn()","!category":"function","!static":false},"!description":"List binding for an OData V4 model. An event handler can only be attached to this binding for the following events: 'change', 'dataReceived', 'dataRequested', and 'refresh'. For other events, an error is thrown.","isLengthFinal":{"!description":"Returns <code>true<\/code> if the length has been determined by the data returned from server. If the length is a client side estimation <code>false<\/code> is returned.","!type":"fn() -> Boolean","!category":"function","!static":false},"toString":{"!description":"Returns a string representation of this object including the binding path. If the binding is relative, the parent path is also given, separated by a '|'.","!type":"function toString() { [native code for Array.toString, arity=0] }\n) -> String","!category":"function","!static":false},"getLength":{"!description":"Returns the number of entries in the list. As long as the client does not know the size on the server an estimated length is returned.","!type":"fn() -> Number","!category":"function","!static":false},"hasPendingChanges":{"!description":"Returns <code>true<\/code> if this binding or its dependent bindings have pending changes, meaning updates that have not yet been successfully sent to the server.","!type":"fn() -> Boolean","!category":"function","!static":false},"getCurrentContexts":{"!description":"Returns the contexts that were requested by a control last time. Does not trigger a data request. In the time between the {@link #event:dataRequested} event and the {@link #event:dataReceived} event, the resulting array contains <code>undefined<\/code> at those indexes where the data is not yet available.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"filter":{"!description":"Filters the list with the given filters.\n\nIf there are pending changes an error is thrown. Use {@link #hasPendingChanges} to check if there are pending changes. If there are changes, call {@link sap.ui.model.odata.v4.ODataModel#submitBatch} to submit the changes or {@link sap.ui.model.odata.v4.ODataModel#resetChanges} to reset the changes before calling {@link #filter}.","!type":"fn(vFilters?: [sap.ui.model.Filter | [object Object]], sFilterType?: sap.ui.model.FilterType) -> sap.ui.model.odata.v4.ODataListBinding","!category":"function","parameters":{"sFilterType":"type: sap.ui.model.FilterType, description: The filter type to be used","vFilters":"type: sap.ui.model.Filter|[object Object][], description: The dynamic filters to be used; replaces the dynamic filters given in {@link sap.ui.model.odata.v4.ODataModel#bindList}. The filter executed on the list is created from the following parts, which are combined with a logical 'and': <ul> <li> Dynamic filters of type {@link sap.ui.model.FilterType.Application} <li> Dynamic filters of type {@link sap.ui.model.FilterType.Control} <li> The static filters, as defined in the '$filter' binding parameter <\/ul>"},"!static":false},"!proto":"sap.ui.model.ListBinding","!helpDescription":"List binding for an OData V4 model. An event handler can only be attached to this binding for the following events: 'change', 'dataReceived', 'dataRequested', and 'refresh'. For other events, an error is thrown.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.v4.ODataListBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.model.odata.v4.AnnotationHelper":{"getNavigationPath":{"!description":"A function that helps to interpret OData V4 annotations. It knows about the syntax of the path value used by the following dynamic expressions: <ul> <li>\"14.5.2 Expression edm:AnnotationPath\"<\/li> <li>\"14.5.11 Expression edm:NavigationPropertyPath\"<\/li> <li>\"14.5.12 Expression edm:Path\"<\/li> <li>\"14.5.13 Expression edm:PropertyPath\"<\/li> <\/ul> It returns the path of structural and navigation properties from the given path value, but removes \"$count\", types casts, term casts, and annotations of navigation properties.","!type":"fn(sPath: String) -> String","!category":"function","!static":"true"},"!description":"A collection of methods which help to consume <a href=\"http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part3-csdl.html\"> OData V4 annotations<\/a> in XML template views. Every context argument must belong to a {@link sap.ui.model.odata.v4.ODataMetaModel} instance.","isMultiple":{"!description":"A function that helps to interpret OData V4 annotations. It knows about the syntax of the path value used by the following dynamic expressions: <ul> <li>\"14.5.2 Expression edm:AnnotationPath\"<\/li> <li>\"14.5.11 Expression edm:NavigationPropertyPath\"<\/li> <li>\"14.5.12 Expression edm:Path\"<\/li> <li>\"14.5.13 Expression edm:PropertyPath\"<\/li> <\/ul> It returns the information whether the given path ends with \"$count\" or with a multi-valued structural or navigation property. Term casts and annotations of navigation properties are ignored.\n\nExamples: <pre>\n&lt;template:if test=\"{facet>Target/$AnnotationPath@@sap.ui.model.odata.v4.AnnotationHelper.isMultiple}\">\n<\/pre>","!type":"fn(sPath: String, oDetails: Object) -> Boolean","!category":"function","!static":"true"},"value":{"!description":"A function that helps to interpret OData V4 annotations. It knows about <ul> <li> the \"14.4 Constant Expressions\" for \"edm:Bool\", \"edm:Date\", \"edm:DateTimeOffset\", \"edm:Decimal\", \"edm:Float\", \"edm:Guid\", \"edm:Int\", \"edm:TimeOfDay\". <li> the constant \"14.4.11 Expression edm:String\": This is turned into a fixed text (e.g. <code>\"Width\"<\/code>). String constants that contain a simple binding <code>\"{@i18n>...}\"<\/code> to the hard-coded model name \"@i18n\" with arbitrary path are not turned into a fixed text, but kept as a data binding expression; this allows local annotation files to refer to a resource bundle for internationalization. <li> the dynamic \"14.5.1 Comparison and Logical Operators\": These are turned into expression bindings to perform the operations at run-time. <li> the dynamic \"14.5.3 Expression edm:Apply\": <ul> <li> \"14.5.3.1.1 Function odata.concat\": This is turned into a data binding expression. <li> \"14.5.3.1.2 Function odata.fillUriTemplate\": This is turned into an expression binding to fill the template at run-time. <li> \"14.5.3.1.3 Function odata.uriEncode\": This is turned into an expression binding to encode the parameter at run-time. <li> Apply functions may be nested arbitrarily. <\/ul> <li> the dynamic \"14.5.6 Expression edm:If\": This is turned into an expression binding to be evaluated at run-time. The expression is a conditional expression like <code>\"{=condition ? expression1 : expression2}\"<\/code>. <li> the dynamic \"14.5.10 Expression edm:Null\": This is turned into a <code>null<\/code> value. In <code>odata.concat<\/code> it is ignored. <li> the dynamic \"14.5.12 Expression edm:Path\" and \"14.5.13 Expression edm:PropertyPath\": This is turned into a simple data binding, e.g. <code>\"{Name}\"<\/code>. <\/ul> Unsupported or incorrect values are turned into a string nevertheless, but indicated as such. An error describing the problem is logged to the console in such a case.\n\nExample: <pre>\n&lt;Text text=\"{meta>Value/@@sap.ui.model.odata.v4.AnnotationHelper.value}\" />\n<\/pre>","!type":"fn(vRawValue: Object, oDetails: Object) -> String","!category":"function","!static":"true"},"getNavigationBinding":{"!description":"Returns a data binding according to the result of {@link #getNavigationPath}.","!type":"fn(sPath: String) -> String","!category":"function","!static":"true"},"!category":"namespace","label":{"!description":"Returns the value for the label of a <code>com.sap.vocabularies.UI.v1.DataFieldAbstract<\/code> from the meta model. If no <code>Label<\/code> property is available, but the data field has a <code>Value<\/code> property with an <code>edm:Path<\/code> expression as value, the label will be taken from the <code>com.sap.vocabularies.Common.v1.Label<\/code> annotation of the path's target property.\n\nExample: <pre>\n&lt;Label text=\"{meta>@@sap.ui.model.odata.v4.AnnotationHelper.label}\" />\n<\/pre>","!type":"fn(vRawValue: Object, oDetails: Object) -> String","!category":"function","!static":"true"},"!module":"sap/ui/model/odata/v4/AnnotationHelper","getValueListType":{"!description":"Determines which type of value list exists for the given property.","!type":"fn(vRawValue: Object, oDetails: Object) -> sap.ui.model.odata.v4.ValueListType","!category":"function","!static":"true"},"!helpDescription":"A collection of methods which help to consume <a href=\"http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part3-csdl.html\"> OData V4 annotations<\/a> in XML template views. Every context argument must belong to a {@link sap.ui.model.odata.v4.ODataMetaModel} instance."},"sap.ui.core.ValueStateSupport":{"getAdditionalText":{"!description":"Returns a generic success, warning or error message if the given Element has a property \"valueState\" with one of these three states or the given ValueState represents one of these states.","!type":"fn(vValue: sap.ui.core.Element | sap.ui.core.ValueState) -> String","!category":"function","!static":"true"},"!description":"Helper functionality for value state support.","enrichTooltip":{"!description":"Appends a generic success, warning or error message to the given tooltip text if the given Element has a property \"valueState\" with one of these three states.","!type":"fn(oElement: sap.ui.core.Element, sTooltipText: String) -> String","!category":"function","!static":"true"},"!category":"namespace","formatValueState":{"!description":"Returns a ValueState object based on the given integer value\n\n0 : ValueState.None 1 : ValueState.Warning 2 : ValueState.Success 3 : ValueState.Error","!type":"fn(iState: Number) -> sap.ui.core.ValueState","!category":"function","!static":"true"},"!module":"sap/ui/core/ValueStateSupport","!helpDescription":"Helper functionality for value state support."},"sap.ui.core.ListItem":{"setAdditionalText":{"!description":"Sets a new value for property {@link #getAdditionalText additionalText}.\n\nSome additional text of type string, optionally to be displayed along with this item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sAdditionalText: String) -> sap.ui.core.ListItem","!category":"function","parameters":{"sAdditionalText":"type: string, description: New value for property <code>additionalText<\/code>"},"!static":false},"getAdditionalText":{"!description":"Gets current value of property {@link #getAdditionalText additionalText}.\n\nSome additional text of type string, optionally to be displayed along with this item.","!type":"fn() -> String","!category":"function","!static":false},"!description":"An item that is used in lists or list-similar controls such as DropdownBox, for example. The element foresees the usage of additional texts displayed in a second column.","extend":{"!description":"Creates a new subclass of class sap.ui.core.ListItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nThe icon belonging to this list item instance. This can be a URI to an image or an icon font URI.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: String) -> sap.ui.core.ListItem","!category":"function","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new ListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : string<\/li>\n<li>{@link #getAdditionalText additionalText} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","!module":"sap/ui/core/ListItem","getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nThe icon belonging to this list item instance. This can be a URI to an image or an icon font URI.","!type":"fn() -> String","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.ListItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Item","!helpDescription":"An item that is used in lists or list-similar controls such as DropdownBox, for example. The element foresees the usage of additional texts displayed in a second column."},"sap.ui.model.odata.v4.ODataMetaModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.v4.ODataMetaModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.MetaModel.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oRequestor: Object, sUrl: String, vAnnotationUri?: [String | [object Object]], oModel: sap.ui.model.odata.v4.ODataModel, bSupportReferences?: Boolean)","prototype":"sap.ui.model.odata.v4.ODataMetaModel"},"sap.ui.core.Label":{"!description":"Marker interface for controls which are suitable for use as label.","!category":"static class","!module":"sap/ui/core/library"},"sap.ui.test.matchers.BindingPath_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.test.matchers.BindingPath with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(mSettings: Object)","prototype":"sap.ui.test.matchers.BindingPath"},"sap.ui.core.Configuration.FormatSettings":{"getNumberSymbol":{"!description":"Returns the currently set number symbol of the given type or undefined if no symbol has been defined.","!type":"fn()","!category":"function","!static":false},"getLegacyTimeFormat":{"!description":"Returns the currently set legacy ABAP time format (its id) or undefined if none has been set.","!type":"fn()","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.Configuration.FormatSettings with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setLegacyNumberFormat":{"!description":"Allows to specify one of the legacy ABAP number format.\n\nThis method will modify the 'group' and 'decimal' symbols. When called with a null or undefined format id, any previously applied format will be removed.\n\nAfter changing the legacy number format, the framework tries to update localization specific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage} for details and restrictions.","!type":"fn(sFormatId: String) -> sap.ui.core.Configuration.FormatSettings","!category":"function","parameters":{"sFormatId":"type: string, description: id of the ABAP number format set (one of ' ','X','Y')"},"!static":false},"setLegacyDateFormat":{"!description":"Allows to specify one of the legacy ABAP date formats.\n\nThis method modifies the date patterns for 'short' and 'medium' style with the corresponding ABAP format. When called with a null or undefined format id, any previously applied format will be removed.\n\nAfter changing the legacy date format, the framework tries to update localization specific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage} for details and restrictions.\n\nNote: Iranian date format 'C' is NOT yet supported by UI5. It's accepted by this method for convenience (user settings from ABAP system can be used without filtering), but it's ignored. Instead, the formats from the current format locale will be used and a warning will be logged.","!type":"fn(sFormatId: String) -> sap.ui.core.Configuration.FormatSettings","!category":"function","parameters":{"sFormatId":"type: string, description: id of the ABAP data format (one of '1','2','3','4','5','6','7','8','9','A','B','C')"},"!static":false},"!constructorDescription":"Creates a new Configuration object.","!module":"sap/ui/core/Configuration","getFormatLocale":{"!description":"Returns the locale to be used for formatting.\n\nIf no such locale has been defined, this method falls back to the language, see {@link sap.ui.core.Configuration#getLanguage Configuration.getLanguage()}.\n\nIf any user preferences for date, time or number formatting have been set, and if no format locale has been specified, then a special private use subtag is added to the locale, indicating to the framework that these user preferences should be applied.","!type":"fn() -> sap.ui.core.Locale","!category":"function","!static":false},"getLegacyDateFormat":{"!description":"Returns the currently set legacy ABAP date format (its id) or undefined if none has been set.","!type":"fn()","!category":"function","!static":false},"getLegacyNumberFormat":{"!description":"Returns the currently set legacy ABAP number format (its id) or undefined if none has been set.","!type":"fn()","!category":"function","!static":false},"setLegacyTimeFormat":{"!description":"Allows to specify one of the legacy ABAP time formats.\n\nThis method sets the time patterns for 'short' and 'medium' style to the corresponding ABAP formats and sets the day period texts to \"AM\"/\"PM\" or \"am\"/\"pm\" respectively. When called with a null or undefined format id, any previously applied format will be removed.\n\nAfter changing the legacy time format, the framework tries to update localization specific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage} for details and restrictions.","!type":"fn(sFormatId: String) -> sap.ui.core.Configuration.FormatSettings","!category":"function","parameters":{"sFormatId":"type: string, description: id of the ABAP time format (one of '0','1','2','3','4')"},"!static":false},"!description":"Collects and stores the configuration of the current environment.\n\nThe Configuration is initialized once when the {@link sap.ui.core.Core} is created. There are different ways to set the environment configuration (in ascending priority): <ol> <li>System defined defaults<\/li> <li>Server wide defaults, read from /sap-ui-config.json<\/li> <li>Properties of the global configuration object window[\"sap-ui-config\"]<\/li> <li>A configuration string in the data-sap-ui-config attribute of the bootstrap tag<\/li> <li>Individual data-sap-ui-<i>xyz<\/i> attributes of the bootstrap tag<\/li> <li>Using URL parameters<\/li> <li>Setters in this Configuration object (only for some parameters)<\/li> <\/ol>\n\nThat is, attributes of the DOM reference override the system defaults, URL parameters override the DOM attributes (where empty URL parameters set the parameter back to its system default). Calling setters at runtime will override any previous settings calculated during object creation.\n\nThe naming convention for parameters is: <ul> <li>in the URL : sap-ui-<i>PARAMETER-NAME<\/i>=\"value\"<\/li> <li>in the DOM : data-sap-ui-<i>PARAMETER-NAME<\/i>=\"value\"<\/li> <\/ul> where <i>PARAMETER-NAME<\/i> is the name of the parameter in lower case.\n\nValues of boolean parameters are case insensitive where \"true\" and \"x\" are interpreted as true.","setLegacyDateCalendarCustomizing":{"!description":"Allows to specify the customizing data for Islamic calendar support","!type":"fn(aMappings: [[object Object]]) -> sap.ui.core.Configuration.FormatSettings","!category":"function","parameters":{"aMappings":"type: [object Object][], description: contains the customizing data for the support of Islamic calendar."},"!static":false},"getDatePattern":{"!description":"Returns the currently set date pattern or undefined if no pattern has been defined.","!type":"fn()","!category":"function","!static":false},"setNumberSymbol":{"!description":"Defines the string to be used for the given number symbol.\n\nCalling this method with a null or undefined symbol removes a previously set symbol string. Note that an empty string is explicitly allowed.\n\nIf a symbol is defined, it will be preferred over symbols derived from the current locale.\n\nSee class {@link sap.ui.core.format.NumberFormat} for details about the symbols.\n\nAfter changing the number symbol, the framework tries to update localization specific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage} for details and restrictions.","!type":"fn(sStyle: String, sSymbol: String) -> sap.ui.core.Configuration.FormatSettings","!category":"function","parameters":{"sSymbol":"type: string, description: will be used to represent the given symbol type","sStyle":"type: string, description: must be one of decimal, group, plusSign, minusSign."},"!static":false},"!category":"class","setTimePattern":{"!description":"Defines the preferred format pattern for the given time format style.\n\nCalling this method with a null or undefined pattern removes a previously set pattern.\n\nIf a pattern is defined, it will be preferred over patterns derived from the current locale.\n\nSee class {@link sap.ui.core.format.DateFormat} for details about the pattern syntax.\n\nAfter changing the time pattern, the framework tries to update localization specific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage} for details and restrictions.","!type":"fn(sStyle: String, sPattern: String) -> sap.ui.core.Configuration.FormatSettings","!category":"function","parameters":{"sPattern":"type: string, description: the format pattern to be used in LDML syntax.","sStyle":"type: string, description: must be one of short, medium, long or full."},"!static":false},"getLegacyDateCalendarCustomizing":{"!description":"Returns the currently set customizing data for Islamic calendar support","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getTimePattern":{"!description":"Returns the currently set time pattern or undefined if no pattern has been defined.","!type":"fn()","!category":"function","!static":false},"setDatePattern":{"!description":"Defines the preferred format pattern for the given date format style.\n\nCalling this method with a null or undefined pattern removes a previously set pattern.\n\nIf a pattern is defined, it will be preferred over patterns derived from the current locale.\n\nSee class {@link sap.ui.core.format.DateFormat} for details about the pattern syntax.\n\nAfter changing the date pattern, the framework tries to update localization specific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage} for details and restrictions.","!type":"fn(sStyle: String, sPattern: String) -> sap.ui.core.Configuration.FormatSettings","!category":"function","parameters":{"sPattern":"type: string, description: the format pattern to be used in LDML syntax.","sStyle":"type: string, description: must be one of short, medium, long or full."},"!static":false},"setFirstDayOfWeek":{"!description":"Defines the day used as the first day of the week.\n\nThe day is set as an integer value between 0 (Sunday) and 6 (Saturday). Calling this method with a null or undefined symbol removes a previously set value.\n\nIf a value is defined, it will be preferred over values derived from the current locale.\n\nUsually in the US the week starts on Sunday while in most European countries on Monday. There are special cases where you want to have the first day of week set independent of the user locale.\n\nAfter changing the first day of week, the framework tries to update localization specific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage} for details and restrictions.","!type":"fn(iValue: Number) -> sap.ui.core.Configuration.FormatSettings","!category":"function","parameters":{"iValue":"type: int, description: must be an integer value between 0 and 6"},"!static":false},"!helpDescription":"Collects and stores the configuration of the current environment.\n\nThe Configuration is initialized once when the {@link sap.ui.core.Core} is created. There are different ways to set the environment configuration (in ascending priority): <ol> <li>System defined defaults<\/li> <li>Server wide defaults, read from /sap-ui-config.json<\/li> <li>Properties of the global configuration object window[\"sap-ui-config\"]<\/li> <li>A configuration string in the data-sap-ui-config attribute of the bootstrap tag<\/li> <li>Individual data-sap-ui-<i>xyz<\/i> attributes of the bootstrap tag<\/li> <li>Using URL parameters<\/li> <li>Setters in this Configuration object (only for some parameters)<\/li> <\/ol>\n\nThat is, attributes of the DOM reference override the system defaults, URL parameters override the DOM attributes (where empty URL parameters set the parameter back to its system default). Calling setters at runtime will override any previous settings calculated during object creation.\n\nThe naming convention for parameters is: <ul> <li>in the URL : sap-ui-<i>PARAMETER-NAME<\/i>=\"value\"<\/li> <li>in the DOM : data-sap-ui-<i>PARAMETER-NAME<\/i>=\"value\"<\/li> <\/ul> where <i>PARAMETER-NAME<\/i> is the name of the parameter in lower case.\n\nValues of boolean parameters are case insensitive where \"true\" and \"x\" are interpreted as true.","!proto":"sap.ui.base.Object","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.Configuration.FormatSettings.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.model.odata.v2.ODataModel":{"createBindingContext":{"!description":"Creates a binding context for the given path.\n\nIf the data of the context is not yet available, it can not be created, but first the entity needs to be fetched from the server asynchronously. In case no callback function is provided, the request will not be triggered.\n\nIf a callback function is given, the created binding context for a fetched entity is passed as argument to the given callback function.","!type":"fn(sPath: String, oContext?: Object, mParameters?: map, fnCallBack?: fn(), bReload?: Boolean) -> sap.ui.model.Context","!category":"function","parameters":{"mParameters":"type: map, description: Map which contains additional parameters for the binding","bReload":"type: boolean, description: Whether to reload data","sPath":"type: string, description: Binding path","fnCallBack":"type: function, description: Function to be called when context has been created. The parameter of the callback function is the newly created binding context.","oContext":"type: object, description: Binding context"},"!static":false},"getKey":{"!description":"Returns the key part for the given the canonical entry URI, model context or data object or <code>undefined<\/code> when the <code>vValue<\/code> can't be interpreted.","!type":"fn(vValue: String | Object | sap.ui.model.Context) -> String","!category":"function","parameters":{"vValue":"type: string|object|sap.ui.model.Context, description: The canonical entry URI, the context or entry object"},"!static":false},"getSecurityToken":{"!description":"Returns the current security token.\n\nIf the token has not been requested from the server it will be requested first (synchronously).","!type":"fn() -> String","!category":"function","!static":false},"resetChanges":{"!description":"Resets the changes that have been collected by the {@link #setProperty} method.","!type":"fn(aPath?: Array)","!category":"function","parameters":{"aPath":"type: array, description: Array of paths that should be reset. If no array is passed, all changes will be reset."},"!static":false},"getMetaModel":{"!description":"Returns an instance of an OData meta model which offers a unified access to both OData V2 metadata and V4 annotations. It uses the existing {@link sap.ui.model.odata.ODataMetadata} as a foundation and merges V4 annotations from the existing {@link sap.ui.model.odata.v2.ODataAnnotations} directly into the corresponding model element.\n\n<b>BEWARE:<\/b> Access to this OData meta model will fail before the promise returned by {@link sap.ui.model.odata.ODataMetaModel#loaded loaded} has been resolved!","!type":"fn() -> sap.ui.model.odata.ODataMetaModel","!category":"function","!static":false},"addAnnotationXML":{"!description":"Adds new XML content to be parsed for OData annotations, which are then merged into the annotations object which can be retrieved by calling the {@link #getServiceAnnotations}-method.","!type":"fn(sXMLContent: String, bSuppressEvents?: Boolean) -> Promise","!category":"function","parameters":{"bSuppressEvents":"type: boolean, description: Whether not to fire annotationsLoaded event on the annotationParser","sXMLContent":"type: string, description: The string that should be parsed as annotation XML"},"!static":false},"securityTokenAvailable":{"!description":"Returns a promise, which will resolve with the security token as soon as it is available.","!type":"fn() -> Promise","!category":"function","!static":false},"!module":"sap/ui/model/odata/v2/ODataModel","deleteCreatedEntry":{"!description":"Deletes a created entry from the request queue and from the model.","!type":"fn(oContext: sap.ui.model.Context)","!category":"function","parameters":{"oContext":"type: sap.ui.model.Context, description: The context object pointing to the created entry"},"!static":false},"detachMetadataFailed":{"!description":"Detach event-handler <code>fnFunction<\/code> from the <code>metadataFailed<\/code> event of this <code>sap.ui.model.odata.v2.ODataModel<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"setDefaultCountMode":{"!description":"Sets the default mode how to retrieve the item count for a collection in this model.\n\nThe count can be determined in the following ways <ul> <li>by sending a separate <code>$count<\/code> request<\/li> <li>by adding parameter <code>$inlinecount=allpages<\/code> to one or all data requests<\/li> <li>a combination of the previous two<\/li> <li>not at all (questions about the size of the collection can't be answered then)<\/li> <\/ul> See {@link sap.ui.model.odata.CountMode} for all enumeration values and more details.\n\nNote that a call to this method does not modify the count mode for existing list bindings, only bindings that are created afterwards will use the new mode when no mode is defined at their creation.\n\nIf no default count mode is set for an <code>ODataModel<\/code> (v2), the mode <code>Request<\/code> will be used.","!type":"fn(sCountMode: sap.ui.model.odata.CountMode)","!category":"function","parameters":{"sCountMode":"type: sap.ui.model.odata.CountMode, description: The new default count mode for this model"},"!static":false},"setUseBatch":{"!description":"Enable or disable batch mode for future requests.","!type":"fn(bUseBatch?: Boolean)","!category":"function","parameters":{"bUseBatch":"type: boolean, description: Whether the requests should be encapsulated in a batch request"},"!static":false},"getServiceMetadata":{"!description":"Return the parsed XML metadata as a Javascript object.\n\nPlease note that the metadata is loaded asynchronously and this function might return undefined because the metadata has not been loaded yet. In this case attach to the <code>metadataLoaded<\/code> event to get notified when the metadata is available and then call this function.","!type":"fn() -> Object","!category":"function","!static":false},"detachBatchRequestCompleted":{"!description":"Detach event-handler <code>fnFunction<\/code> from the <code>batchRequestCompleted<\/code> event of this <code>sap.ui.model.odata.v2.ODataModel<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"getOriginalProperty":{"!description":"Returns the original value for the property with the given path and context. The original value is the value that was last responded by the server.","!type":"fn(sPath: String, oContext?: Object) -> Object","!category":"function","parameters":{"sPath":"type: string, description: The path/name of the property","oContext":"type: object, description: The context if available to access the property value"},"!static":false},"getChangeBatchGroups":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.36 use {@link #getChangeGroups} instead<br>Returns the definition of batch groups per entity type for two-way binding changes","!type":"fn() -> map","!category":"function","!static":false},"refresh":{"!description":"Refresh the model.\n\nThis will check all bindings for updated data and update the controls if data has been changed.","!type":"fn(bForceUpdate?: Boolean, bRemoveData?: Boolean, sGroupId?: String)","!category":"function","parameters":{"bForceUpdate":"type: boolean, description: Force update of controls","bRemoveData":"type: boolean, description: If set to <code>true<\/code> then the model data will be removed/cleared. Please note that the data might not be there when calling e.g. <code>getProperty<\/code> too early before the refresh call returned.","sGroupId":"type: string, description: ID of a request group; requests belonging to the same group will be bundled in one batch request"},"!static":false},"setTokenHandlingEnabled":{"!description":"Enable/Disable XCSRF-Token handling.","!type":"fn(bTokenHandling?: Boolean)","!category":"function","parameters":{"bTokenHandling":"type: boolean, description: Whether to use token handling or not"},"!static":false},"invalidateEntityType":{"!description":"Invalidate all entries of the given entity type in the model data.\n\nMark entries of the provided entity type in the model cache as invalid. Next time a context binding or list binding is done, the entry will be detected as invalid and will be refreshed from the server.","!type":"fn(sEntityType: String)","!category":"function","parameters":{"sEntityType":"type: string, description: the qualified name of the entity type"},"!static":false},"getObject":{"!description":"Returns the JSON object for an entity with the given <code>sPath<\/code> and optional <code>oContext<\/code>.\n\nWith the <code>mParameters.select<\/code> parameter it is possible to specify comma-separated property or navigation property names which should be included in the result object. This works like the OData <code>$select<\/code> parameter. With the <code>mParameters.expand<\/code> parameter it is possible to specify comma-separated navigation property names which should be included inline in the result object. This works like the OData <code>$expand<\/code> parameter.\n\nThis method will return a copy and not a reference of the entity. It does not load any data and may not return all requested data if it is not available/loaded. If select entries are contained in the parameters and not all selected properties are available, this method will return <code>undefined<\/code> instead of incomplete data. If no select entries are defined, all properties available on the client will be returned.\n\nExample:<br> <code>{select: \"Products/ProductName, Products\", expand:\"Products\"}<\/code> will return no properties of the entity itself, but only the ProductName property of the Products navigation property. If Products/ProductName has not been loaded before, so is not available on the client, it will return <code>undefined<\/code>.","!type":"fn(sPath: String, oContext?: Object, mParameters?: map) -> Object","!category":"function","parameters":{"mParameters":"type: map, description: Map of parameters","sPath":"type: string, description: Path referencing the object","oContext":"type: object, description: Context the path should be resolved with, in case it is relative"},"!static":false},"detachBatchRequestSent":{"!description":"Detach event-handler <code>fnFunction<\/code> from the <code>batchRequestSent<\/code> event of this <code>sap.ui.model.odata.v2.ODataModel<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"getRefreshAfterChange":{"!type":"fn() -> Boolean","!category":"function","!static":false},"setHeaders":{"!description":"Set custom headers which are provided in a key/value map.\n\nThese headers are used for requests against the OData backend. Private headers which are set in the ODataModel cannot be modified. These private headers are: <code>accept, accept-language, x-csrf-token, MaxDataServiceVersion, DataServiceVersion<\/code>.\n\nTo remove these custom headers simply set the <code>mCustomHeaders<\/code> parameter to null. Please also note that when calling this method again all previous custom headers are removed unless they are specified again in the <code>mCustomHeaders<\/code> parameter.","!type":"fn(mHeaders: Object)","!category":"function","parameters":{"mHeaders":"type: object, description: The header name/value map."},"!static":false},"createEntry":{"!description":"Creates a new entry object which is described by the metadata of the entity type of the specified <code>sPath<\/code> Name. A context object is returned which can be used to bind against the newly created object.\n\nFor each created entry a request is created and stored in a request queue. The request queue can be submitted by calling {@link #submitChanges}. To delete a created entry from the request queue call {@link #deleteCreatedEntry}.\n\nThe optional parameter <code>mParameters.properties<\/code> can be used as follows: <ul> <li><code>properties<\/code> could be an array containing the property names which should be included in the new entry. Other properties defined in the entity type won't be included. <\/li> <li><code>properties<\/code> could be an object which includes the desired properties and the corresponding values which should be used for the created entry. <\/li> <\/ul> If <code>properties<\/code> is not specified, all properties in the entity type will be included in the created entry.\n\nIf there are no values specified, the properties will have <code>undefined<\/code> values.\n\nPlease note that deep creates (including data defined by navigation properties) are not supported.","!type":"fn(sPath: String, mParameters: map) -> sap.ui.model.Context","!category":"function","parameters":{"mParameters":"type: map, description: A map of the following parameters:","sPath":"type: string, description: Name of the path to the EntitySet"},"!static":false},"attachAnnotationsLoaded":{"!description":"Attach event-handler <code>fnFunction<\/code> to the <code>annotationsLoaded<\/code> event of this <code>sap.ui.model.odata.v2.ODataModel<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, the global context (window) is used."},"!static":false},"metadataLoaded":{"!description":"Returns a promise for the loaded state of the metadata.\n\nThe promise won't get rejected in case the metadata loading failed but is only resolved if the metadata is loaded successfully. If <code>refreshMetadata<\/code> function is called after this promise is already resolved you should rely on the promise returned by <code>refreshMetadata<\/code> to get information about the refreshed metadata loaded state.","!type":"fn() -> Promise","!category":"function","!static":false},"attachMetadataLoaded":{"!description":"Attach event-handler <code>fnFunction<\/code> to the <code>metadataLoaded<\/code> event of this <code>sap.ui.model.odata.v2.ODataModel<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, the global context (window) is used."},"!static":false},"!constructorDescription":"Constructor for a new ODataModel.","attachBatchRequestFailed":{"!description":"Attach event-handler <code>fnFunction<\/code> to the <code>batchRequestFailed<\/code> event of this <code>sap.ui.model.odata.v2.ODataModel<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, this Model is used."},"!static":false},"fireMetadataLoaded":{"!description":"Fire event <code>metadataLoaded<\/code> to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"forceEntityUpdate":{"!description":"Force the update on the server of an entity by setting its ETag to '*'.\n\nETag handling must be active so the force update will work.","!type":"fn(sKey: String)","!category":"function","parameters":{"sKey":"type: string, description: The key to an Entity e.g.: Customer(4711)"},"!static":false},"setChangeBatchGroups":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 Use {@link #setChangeGroups} instead<br>Definition of batch groups per entity type for two-way binding changes.","!type":"fn(mGroups: map)","!category":"function","parameters":{"mGroups":"type: map, description: A map containing the definition of batch groups for two-way binding changes. The map has the following format: <pre>\n{\n  \"EntityTypeName\": {\n    batchGroupId: \"ID\",\n    [changeSetId: \"ID\",]\n    [single: true/false,]\n  }\n}\n<\/pre> <ul> <li><code>batchGroupId<\/code>: Defines the batch group for changes of the defined <i>EntityTypeName<\/i><\/li> <li><code>changeSetId<\/code>: ID of a <code>ChangeSet<\/code> which bundles the changes for the entity type.<\/li> <li><code>single<\/code>: Defines if every change will get an own change set (defaults to <code>true<\/code>)<\/li> <\/ul>"},"!static":false},"create":{"!description":"Trigger a <code>POST<\/code> request to the OData service that was specified in the model constructor.\n\nPlease note that deep creates are not supported and may not work.","!type":"fn(sPath: String, oData: Object, mParameters?: map) -> Object","!category":"function","parameters":{"mParameters":"type: map, description: Optional parameter map containing any of the following properties:","sPath":"type: string, description: A string containing the path to the collection where an entry should be created. The path is concatenated to the service URL which was specified in the model constructor.","oData":"type: object, description: Data of the entry that should be created."},"!static":false},"fireBatchRequestFailed":{"!description":"Fire event <code>batchRequestFailed<\/code> to attached listeners.","!type":"fn(mArguments: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"setRefreshAfterChange":{"!description":"Defines whether all bindings are updated after a change operation.\n\nThis flag can be overruled on request level by providing the <code>refreshAfterChange<\/code> parameter to the corresponding function (for example {@link #update}).","!type":"fn(bRefreshAfterChange: Boolean)","!category":"function","parameters":{"bRefreshAfterChange":"type: boolean, description: Whether to automatically refresh after changes"},"!static":false},"addAnnotationUrl":{"!description":"Adds (a) new URL(s) whose content should be parsed as OData annotations, which are then merged into the annotations object which can be retrieved by calling the {@link #getServiceAnnotations}-method. If a <code>$metadata<\/code> URL is passed, the data will also be merged into the metadata object, which can be reached by calling the {@link #getServiceMetadata} method.","!type":"fn(vUrl: [String | [object Object]]) -> Promise","!category":"function","parameters":{"vUrl":"type: string|[object Object][], description: Either one URL as string or an array of URL strings"},"!static":false},"detachAnnotationsLoaded":{"!description":"Detach event-handler <code>fnFunction<\/code> from the <code>annotationsLoaded<\/code> event of this <code>sap.ui.model.odata.v2.ODataModel<\/code>.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"getData":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined please use {@link #getProperty} instead<br>Return requested data as object if the data has already been loaded and stored in the model.","!type":"fn(sPath: String, oContext?: Object, bIncludeExpandEntries?: Boolean) -> Object","!category":"function","parameters":{"sPath":"type: string, description: A string containing the path to the data object that should be returned.","bIncludeExpandEntries":"type: boolean, description: This parameter should be set when a URI or custom parameter with a <code>$expand<\/code> system query option was used to retrieve associated entries embedded. If set to <code>true<\/code> then the <code>getProperty<\/code> function returns a desired property value or entry and includes the associated expand entries (if any). If set to <code>false<\/code> the associated/expanded entry properties are removed and not included in the desired entry as properties at all. This is useful for performing updates on the base entry only. Note: A copy, not a reference of the entry will be returned.","oContext":"type: object, description: The optional context which is used with the <code>sPath<\/code> to retrieve the requested data."},"!static":false},"getDefaultCountMode":{"!description":"Returns the default count mode for retrieving the count of collections","!type":"fn() -> sap.ui.model.odata.CountMode","!category":"function","!static":false},"getProperty":{"!description":"Returns the value for the property with the given <code>sPath<\/code>.\n\nIf the path points to a navigation property which has been loaded via <code>$expand<\/code> then the <code>bIncludeExpandEntries<\/code> parameter determines if the navigation property should be included in the returned value or not. Please note that this currently works for 1..1 navigation properties only.","!type":"fn(sPath: String, oContext?: Object, bIncludeExpandEntries?: Boolean) -> Object","!category":"function","parameters":{"sPath":"type: string, description: Path/name of the property","bIncludeExpandEntries":"type: boolean, description: @deprecated Please use {@link #getObject} function with select/expand parameters instead. This parameter should be set when a URI or custom parameter with a <code>$expand<\/code> system query option was used to retrieve associated entries embedded/inline. If true then the <code>getProperty<\/code> function returns a desired property value/entry and includes the associated expand entries (if any). Note: A copy and not a reference of the entry will be returned.","oContext":"type: object, description: Context if available to access the property value"},"!static":false},"hasPendingChanges":{"!description":"Checks if there exist pending changes in the model created by the {@link #setProperty} method.","!type":"fn() -> Boolean","!category":"function","!static":false},"createKey":{"!description":"Creates the key from the given collection name and property map.\n\nPlease make sure that the metadata document is loaded before using this function.","!type":"fn(sCollection: String, oKeyProperties: Object) -> String","!category":"function","parameters":{"oKeyProperties":"type: object, description: Object containing at least all the key properties of the entity type","sCollection":"type: string, description: Name of the collection"},"!static":false},"getDeferredBatchGroups":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 use {@link #getDeferredGroups} instead<br>Returns the array of batch group IDs that are set as deferred","!type":"fn() -> Array","!category":"function","!static":false},"!helpDescription":"Model implementation based on the OData protocol.","!proto":"sap.ui.model.Model","update":{"!description":"Trigger a <code>PUT/MERGE<\/code> request to the OData service that was specified in the model constructor.\n\nThe update method used is defined by the global <code>defaultUpdateMethod<\/code> parameter which is <code>sap.ui.model.odata.UpdateMethod.Merge<\/code> by default. Please note that deep updates are not supported and may not work. These should be done separately and directly on the corresponding entry.","!type":"fn(sPath: String, oData: Object, mParameters?: map) -> Object","!category":"function","parameters":{"mParameters":"type: map, description: Optional, can contain the following attributes:","sPath":"type: string, description: A string containing the path to the data that should be updated. The path is concatenated to the sServiceUrl which was specified in the model constructor.","oData":"type: object, description: Data of the entry that should be updated."},"!static":false},"submitChanges":{"!description":"Submits the collected changes which were collected by the {@link #setProperty} method.\n\nThe update method is defined by the global <code>defaultUpdateMethod<\/code> parameter which is <code>sap.ui.model.odata.UpdateMethod.Merge<\/code> by default. In case of a <code>sap.ui.model.odata.UpdateMethod.Merge<\/code> request only the changed properties will be updated. If a URI with a <code>$expand<\/code> query option was used then the expand entries will be removed from the collected changes. Changes to this entries should be done on the entry itself. So no deep updates are supported.\n\n<b>Important<\/b>: The success/error handler will only be called if batch support is enabled. If multiple batch groups are submitted the handlers will be called for every batch group.","!type":"fn(mParameters?: Object) -> Object","!category":"function","parameters":{"mParameters":"type: object, description: A map which contains the following parameter properties:"},"!static":false},"remove":{"!description":"Trigger a <code>DELETE<\/code> request to the OData service that was specified in the model constructor.","!type":"fn(sPath: String, mParameters?: Object) -> Object","!category":"function","parameters":{"mParameters":"type: object, description: Optional, can contain the following attributes:","sPath":"type: string, description: A string containing the path to the data that should be removed. The path is concatenated to the service URL which was specified in the model constructor."},"!static":false},"fireAnnotationsLoaded":{"!description":"Fire event <code>annotationsLoaded<\/code> to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function","parameters":{"mArguments":"type: object, description: The arguments to pass along with the event"},"!static":false},"setDeferredBatchGroups":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32 use {@link #setDeferredGroups} instead<br>Setting batch groups as deferred.\n\nRequests that belong to a deferred batch group have to be sent by explicitly calling {@link #submitChanges}.","!type":"fn(aGroupIds: Array)","!category":"function","parameters":{"aGroupIds":"type: array, description: Array of batch group IDs that should be set as deferred"},"!static":false},"getChangeGroups":{"!description":"Returns the definition of groups per entity type for two-way binding changes","!type":"fn() -> map","!category":"function","!static":false},"getServiceAnnotations":{"!description":"Return the annotation object. Please note that the metadata is loaded asynchronously and this function might return undefined because the metadata has not been loaded yet. In this case attach to the <code>annotationsLoaded<\/code> event to get notified when the annotations are available and then call this function.","!type":"fn() -> Object","!category":"function","!static":false},"setChangeGroups":{"!description":"Definition of groups per entity type for two-way binding changes.","!type":"fn(mGroups: map)","!category":"function","parameters":{"mGroups":"type: map, description: A map containing the definition of batch groups for two-way binding changes. The map has the following format: <pre>\n{\n  \"EntityTypeName\": {\n    groupId: \"ID\",\n    [changeSetId: \"ID\",]\n    [single: true/false,]\n  }\n}\n<\/pre> <ul> <li><code>groupId<\/code>: Defines the group for changes of the defined <i>EntityTypeName<\/i><\/li> <li><code>changeSetId<\/code>: ID of a <code>ChangeSet<\/code> which bundles the changes for the entity type.<\/li> <li><code>single<\/code>: Defines if every change will get an own change set (defaults to <code>true<\/code>)<\/li> <\/ul>"},"!static":false},"attachAnnotationsFailed":{"!description":"Attach event-handler <code>fnFunction<\/code> to the <code>annotationsFailed<\/code> event of this <code>sap.ui.model.odata.v2.ODataModel<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, the global context (window) is used."},"!static":false},"destroy":{"!type":"fn()","!category":"function","!static":false},"bindProperty":{"!description":"Creates a new property binding for this model.","!type":"fn(sPath: String, oContext?: Object, mParameters?: map) -> sap.ui.model.PropertyBinding","!category":"function","parameters":{"mParameters":"type: map, description: Map of optional parameters for the binding; the ODataModel (v2) currently supports no additional parameters","sPath":"type: string, description: Path pointing to the property that should be bound; either an absolute path or a path relative to a given <code>oContext<\/code>","oContext":"type: object, description: A context object for the new binding"},"!static":false},"bindTree":{"!description":"Creates a new tree binding for this model.","!type":"fn(sPath: String, oContext?: sap.ui.model.Context, aFilters?: [sap.ui.model.Filter | [object Object]], mParameters?: map, aSorters?: [[object Object]]) -> sap.ui.model.TreeBinding","!category":"function","parameters":{"mParameters":"type: map, description: Map of parameters for the tree binding","aSorters":"type: [object Object][], description: An array of predefined sorters","sPath":"type: string, description: Binding path, either absolute or relative to a given <code>oContext<\/code>","aFilters":"type: sap.ui.model.Filter|[object Object][], description: Predefined filters, can be either a filter or an array of filters","oContext":"type: sap.ui.model.Context, description: Binding context referring to this model"},"!static":false},"isMetadataLoadingFailed":{"!description":"Checks whether metadata loading has failed in the past.","!type":"fn() -> Boolean","!category":"function","!static":false},"getHeaders":{"!description":"Returns all headers and custom headers which are stored in this OData model.","!type":"fn() -> Object","!category":"function","!static":false},"!category":"class","read":{"!description":"Trigger a <code>GET<\/code> request to the OData service that was specified in the model constructor.\n\nThe data will be stored in the model. The requested data is returned with the response.","!type":"fn(sPath: String, mParameters?: map) -> Object","!category":"function","parameters":{"mParameters":"type: map, description: Optional parameter map containing any of the following properties:","sPath":"type: string, description: A string containing the path to the data which should be retrieved. The path is concatenated to the service URL which was specified in the model constructor."},"!static":false},"attachMetadataFailed":{"!description":"Attach event-handler <code>fnFunction<\/code> to the <code>metadataFailed<\/code> event of this <code>sap.ui.model.odata.v2.ODataModel<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, the global context (window) is used."},"!static":false},"detachBatchRequestFailed":{"!description":"Detach event-handler <code>fnFunction<\/code> from the <code>batchRequestFailed<\/code> event of this <code>sap.ui.model.odata.v2.ODataModel<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"fireMetadataFailed":{"!description":"Fire event <code>metadataFailed<\/code> to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"detachAnnotationsFailed":{"!description":"Detach event-handler <code>fnFunction<\/code> from the <code>annotationsFailed<\/code> event of this <code>sap.ui.model.odata.v2.ODataModel<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"getPendingChanges":{"!description":"Returns the changed properties of all changed entities in a map which are still pending. The key is the string name of the entity and the value is an object which contains the changed properties.","!type":"fn() -> map","!category":"function","!static":false},"invalidateEntry":{"!description":"Invalidate a single entry in the model data.\n\nMark the selected entry in the model cache as invalid. Next time a context binding or list binding is done, the entry will be detected as invalid and will be refreshed from the server.","!type":"fn(vEntry: String | sap.ui.model.Context)","!category":"function","parameters":{"vEntry":"type: string|sap.ui.model.Context, description: the reference to the entry, either by key, absolute path or context object"},"!static":false},"setDeferredGroups":{"!description":"Setting request groups as deferred.\n\nRequests that belong to a deferred group will be sent by explicitly calling {@link #submitChanges}.","!type":"fn(aGroupIds: Array)","!category":"function","parameters":{"aGroupIds":"type: array, description: Array of group IDs that should be set as deferred"},"!static":false},"hasPendingRequests":{"!description":"Checks if there are pending requests, either ongoing or sequential.","!type":"fn() -> Boolean","!category":"function","!static":false},"attachBatchRequestCompleted":{"!description":"Attach event-handler <code>fnFunction<\/code> to the <code>batchRequestCompleted<\/code> event of this <code>sap.ui.model.odata.v2.ODataModel<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, the global context (window) is used."},"!static":false},"getETag":{"!description":"Returns the ETag for a given binding path/context or data object.","!type":"fn(sPath?: String, oContext?: sap.ui.model.Context, oEntity?: Object) -> String","!category":"function","parameters":{"sPath":"type: string, description: The binding path","oEntity":"type: object, description: The entity data","oContext":"type: sap.ui.model.Context, description: The binding context"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.v2.ODataModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"callFunction":{"!description":"Trigger a request to the function import OData service that was specified in the model constructor.\n\nIf the return type of the function import is either an entity type or a collection of an entity type, then the changes are reflected in the model. Otherwise they are ignored, and the <code>response<\/code> can be processed in the <code>success<\/code> callback.","!type":"fn(sFunctionName: String, mParameters?: map) -> Object","!category":"function","parameters":{"mParameters":"type: map, description: Optional parameter map containing any of the following properties:","sFunctionName":"type: string, description: A string containing the name of the function to call. The name is concatenated to the service URL which was specified in the model constructor."},"!static":false},"annotationsLoaded":{"!description":"Returns a promise that resolves with an array containing information about the initially loaded annotations.\n\n<b>Important<\/b>: This covers the annotations that were given to the model constructor, not the ones that might have been added later on using the protected API method {@link #addAnnotationUrl}. In order to get information about those, the event <code>annotationsLoaded<\/code> can be used.","!type":"fn() -> Promise","!category":"function","!static":false},"setProperty":{"!description":"Sets a new value for the given property <code>sPath<\/code> in the model.\n\nIf the <code>changeBatchGroup<\/code> for the changed entity type is set to deferred changes could be submitted with {@link #submitChanges}. Otherwise the change will be submitted directly.","!type":"fn(sPath: String, oValue: Object, oContext?: sap.ui.model.Context, bAsyncUpdate?: Boolean) -> Boolean","!category":"function","parameters":{"oValue":"type: any, description: Value to set the property to","bAsyncUpdate":"type: boolean, description: Whether to update other bindings dependent on this property asynchronously","sPath":"type: string, description: Path of the property to set","oContext":"type: sap.ui.model.Context, description: The context which will be used to set the property"},"!static":false},"refreshMetadata":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined undefined<br>Refreshes the metadata for this model, for example when the request for metadata has failed.\n\n<b>Note<\/b>: Do not use <code>refreshMetadata<\/code> if the metadata is outdated or should be updated. This will lead to inconsistent data in the application.\n\nReturns a new promise which can be resolved or rejected depending on the metadata loading state.","!type":"fn() -> Promise","!category":"function","!static":false},"getDeferredGroups":{"!description":"Returns the array of group IDs that are set as deferred.","!type":"fn() -> Array","!category":"function","!static":false},"bindList":{"!description":"Creates a new list binding for this model.","!type":"fn(sPath: String, oContext?: sap.ui.model.Context, aSorters?: [sap.ui.model.Sorter | [object Object]], aFilters?: [sap.ui.model.Filter | [object Object]], mParameters?: map) -> sap.ui.model.ListBinding","!category":"function","parameters":{"mParameters":"type: map, description: Map which contains additional parameters for the binding","aSorters":"type: sap.ui.model.Sorter|[object Object][], description: Initial sort order, can be either a sorter or an array of sorters","sPath":"type: string, description: Binding path, either absolute or relative to a given <code>oContext<\/code>","aFilters":"type: sap.ui.model.Filter|[object Object][], description: Predefined filters, can be either a filter or an array of filters","oContext":"type: sap.ui.model.Context, description: Binding context referring to this model"},"!static":false},"invalidate":{"!description":"Invalidate the model data.\n\nMark all entries in the model cache as invalid. Next time a context binding or list binding is done, the entry will be detected as invalid and will be refreshed from the server.","!type":"fn(fnCheckEntry?: fn())","!category":"function","parameters":{"fnCheckEntry":"type: function, description: A function which can be used to restrict invalidation to specific entries, gets the entity key and object as parameters and should return true for entities to invalidate."},"!static":false},"updateBindings":{"!description":"Update all bindings.","!type":"fn(bForceUpdate?: Boolean)","!category":"function","parameters":{"bForceUpdate":"type: boolean, description: If set to <code>false<\/code>, an update will only be done when the value of a binding changed."},"!static":false},"refreshSecurityToken":{"!description":"Refresh XSRF token by performing a GET request against the service root URL.","!type":"fn(fnSuccess?: fn(), fnError?: fn(), bAsync?: Boolean) -> Object","!category":"function","parameters":{"bAsync":"type: boolean, description: Whether the request should be sent asynchronously","fnSuccess":"type: function, description: Callback function which is called when the data has been successfully retrieved.","fnError":"type: function, description: Callback function which is called when the request failed. The handler can have the parameter: oError which contains additional error information."},"!static":false},"!description":"Model implementation based on the OData protocol.","fireAnnotationsFailed":{"!description":"Fire event <code>annotationsFailed<\/code> to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function","parameters":{"mArguments":"type: object, description: The arguments to pass along with the event"},"!static":false},"detachMetadataLoaded":{"!description":"Detach event-handler <code>fnFunction<\/code> from the <code>metadataLoaded<\/code> event of this <code>sap.ui.model.odata.v2.ODataModel<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"bindContext":{"!description":"Creates new context binding for this model.","!type":"fn(sPath: String, oContext: sap.ui.model.Context, mParameters?: map) -> sap.ui.model.ContextBinding","!category":"function","parameters":{"mParameters":"type: map, description: Map of parameters","sPath":"type: string, description: Resolved path","oContext":"type: sap.ui.model.Context, description: Context object"},"!static":false},"fireBatchRequestSent":{"!description":"Fire event <code>batchRequestSent<\/code> to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.v2.ODataModel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"attachBatchRequestSent":{"!description":"Attach event-handler <code>fnFunction<\/code> to the <code>requestSent<\/code> event of this <code>sap.ui.model.odata.v2.ODataModel<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, the global context (window) is used."},"!static":false},"fireBatchRequestCompleted":{"!description":"Fire event <code>batchRequestCompleted<\/code> to attached listeners.","!type":"fn(mArguments: Object) -> sap.ui.model.odata.v2.ODataModel","!category":"function","parameters":{"mArguments":"type: object, description: parameters to add to the fired event"},"!static":false}},"sap.ui.core.search":{"suggestUrl":{"!description":"The URL for suggestions of the search provider. As placeholder for the concrete search queries '{searchTerms}' must be used. For cross domain requests maybe a proxy must be used.","!type":"sap.ui.core.URI","!category":"enum"},"icon":{"!description":"Icon of the Search Provider","!type":"String","!category":"enum"},"!category":"namespace","OpenSearchProvider":"sap.ui.core.search.OpenSearchProvider_obj","SearchProvider":"sap.ui.core.search.SearchProvider_obj","suggestType":{"!description":"The type of data which is provided by the given suggestUrl: either 'json' or 'xml'.","!type":"String","!category":"enum"}},"sap.ui.core.util.serializer.Serializer":{"!description":"Serializer class.","extend":{"!description":"Creates a new subclass of class sap.ui.core.util.serializer.Serializer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Serializer class. Iterates over all controls and call a given serializer delegate.","!module":"sap/ui/core/util/serializer/Serializer","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.serializer.Serializer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.base.EventProvider","!helpDescription":"Serializer class."},"sap.ui.base.Interface_obj":{"!type":"fn(oObject: sap.ui.base.Object, aMethods: [[object Object]])","prototype":"sap.ui.base.Interface"},"sap.ui.Device.browser.BROWSER":{"ANDROID":{"!description":"Android stock browser name.","!type":"String","!category":"enum"},"!description":"Enumeration containing the names of known browsers.","SAFARI":{"!description":"Safari browser name.","!type":"String","!category":"enum"},"FIREFOX":{"!description":"Firefox browser name.","!type":"String","!category":"enum"},"!category":"namespace","!module":"sap/ui/Device","EDGE":{"!description":"Edge browser name.","!type":"String","!category":"enum"},"CHROME":{"!description":"Chrome browser name.","!type":"String","!category":"enum"},"INTERNET_EXPLORER":{"!description":"Internet Explorer browser name.","!type":"String","!category":"enum"},"!helpDescription":"Enumeration containing the names of known browsers."},"sap.ui.core.EventBus":{"subscribeOnce":{"!description":"Attaches an event handler, called one time only, to the event with the given identifier on the given event channel.\n\nWhen the event occurs, the handler function is called and the handler registration is automatically removed afterwards.","!type":"fn(sChannelId?: String, sEventId: String, fnFunction: fn(), oListener?: Object) -> sap.ui.core.EventBus","!category":"function","parameters":{"sEventId":"type: string, description: The identifier of the event to listen for","fnFunction":"type: function, description: The handler function to call when the event occurs. This function will be called in the context of the <code>oListener<\/code> instance (if present) or on the event bus instance. The channel is provided as first argument of the handler, and the event identifier is provided as the second argument. The parameter map carried by the event is provided as the third argument (if present). Handlers must not change the content of this map.","oListener":"type: object, description: The object that wants to be notified when the event occurs (<code>this<\/code> context within the handler function). If it is not specified, the handler function is called in the context of the event bus.","sChannelId":"type: string, description: The channel of the event to subscribe to. If not given, the default channel is used. The channel <code>\"sap.ui\"<\/code> is reserved by the UI5 framework. An application might listen to events on this channel but is not allowed to publish its own events there."},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.EventBus with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Creates an instance of EventBus.","!module":"sap/ui/core/EventBus","destroy":{"!description":"Cleans up the internal structures and removes all event handlers.\n\nThe object must not be used anymore after destroy was called.","!type":"fn()","!category":"function","!static":false},"!description":"Provides eventing capabilities for applications like firing events and attaching or detaching event handlers for events which are notified when events are fired.","subscribe":{"!description":"Attaches an event handler to the event with the given identifier on the given event channel.","!type":"fn(sChannelId?: String, sEventId: String, fnFunction: fn(), oListener?: Object) -> sap.ui.core.EventBus","!category":"function","parameters":{"sEventId":"type: string, description: The identifier of the event to listen for","fnFunction":"type: function, description: The handler function to call when the event occurs. This function will be called in the context of the <code>oListener<\/code> instance (if present) or on the event bus instance. The channel is provided as first argument of the handler, and the event identifier is provided as the second argument. The parameter map carried by the event is provided as the third argument (if present). Handlers must not change the content of this map.","oListener":"type: object, description: The object that wants to be notified when the event occurs (<code>this<\/code> context within the handler function). If it is not specified, the handler function is called in the context of the event bus.","sChannelId":"type: string, description: The channel of the event to subscribe to. If not given, the default channel is used. The channel <code>\"sap.ui\"<\/code> is reserved by the UI5 framework. An application might listen to events on this channel but is not allowed to publish its own events there."},"!static":false},"!category":"class","publish":{"!description":"Fires an event using the specified settings and notifies all attached event handlers.","!type":"fn(sChannelId?: String, sEventId: String, oData?: Object)","!category":"function","parameters":{"sEventId":"type: string, description: The identifier of the event to fire","oData":"type: object, description: The parameters which should be carried by the event","sChannelId":"type: string, description: The channel of the event to fire. If not given, the default channel is used. The channel <code>\"sap.ui\"<\/code> is reserved by the UI5 framework. An application might listen to events on this channel but is not allowed to publish its own events there."},"!static":false},"unsubscribe":{"!description":"Removes a previously subscribed event handler from the event with the given identifier on the given event channel.\n\nThe passed parameters must match those used for registration with {@link #subscribe } beforehand!","!type":"fn(sChannelId?: String, sEventId: String, fnFunction: fn(), oListener?: Object) -> sap.ui.core.EventBus","!category":"function","parameters":{"sEventId":"type: string, description: The identifier of the event to unsubscribe from","fnFunction":"type: function, description: The handler function to unsubscribe from the event","oListener":"type: object, description: The object that wanted to be notified when the event occurred","sChannelId":"type: string, description: The channel of the event to unsubscribe from. If not given, the default channel is used."},"!static":false},"!helpDescription":"Provides eventing capabilities for applications like firing events and attaching or detaching event handlers for events which are notified when events are fired.","!proto":"sap.ui.base.Object","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.EventBus.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.support.Plugin":{"isToolPlugin":{"!description":"Returns whether a plugin instance can run in the diagnostics tool window, default is <code>true<\/code>. Plugins that are <b>only<\/b> available on the application window should return <code>false<\/code> and overwrite the method for this matter.\n\nThe method is also used in a static manner (called on the prototype) and therefore must not rely on any instance specific members.","!type":"fn() -> Boolean","!category":"function","!static":false},"$":{"!description":"Returns the DOM node that represents this plugin wrapped as jQuery object.\n\nIf an ID suffix is given, the ID of this Element is concatenated with the suffix (separated by a single dash) and the DOM node with that compound ID will be wrapped by jQuery. This matches the naming convention for named inner DOM nodes of a plugin.\n\nIf no suffix is given and if no DOM exists, a DIV with the ID of this plugin will be created and appended to the support popup content section (identified by class .sapUiSupportCntnt).","!type":"fn(sSuffix?: String) -> jQuery","!category":"function","parameters":{"sSuffix":"type: string, description: ID suffix to get a jQuery object for"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.support.Plugin with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"runsAsToolPlugin":{"!description":"Returns true if the plugin instance currently runs in tool window, otherwise false","!type":"fn() -> Boolean","!category":"function","!static":false},"addStylesheet":{"!description":"Adds the given stylesheet to the Support Tool's HTML page.\n\nA &lt;link&gt; tag will be added to the head of the HTML page, referring to the given CSS resource. The URL of the resource is determined from the given resource name by calling {@link jQuery.sap.getResourcePath}.\n\nA plugin should call this method only when it is {@link #runsAsToolPlugin running inside the tool window}.","!type":"fn(sCssResourcePath: String)","!category":"function","parameters":{"sCssResourcePath":"type: string, description: Resource name of a CSS file, but without the '.css' extension"},"!static":false},"init":{"!description":"Initialization function called each time the support mode is started (diagnostics popup is opened). For Plugins that are for diagnostics tool window and application window, the init method is called twice, with the <code>oSupportStub<\/code>","!type":"fn(oSupportStub: sap.ui.core.support.Support)","!category":"function","parameters":{"oSupportStub":"type: sap.ui.core.support.Support, description: the support stub"},"!static":false},"!constructorDescription":"Creates an instance of sap.ui.core.support.Plugin.","!module":"sap/ui/core/support/Plugin","exit":{"!description":"Finalization function called each time the support mode is ended (support popup is closed).","!type":"fn(oSupportStub: sap.ui.core.support.Support)","!category":"function","parameters":{"oSupportStub":"type: sap.ui.core.support.Support, description: the support stub"},"!static":false},"isActive":{"!description":"Returns whether the plugin is currently active or not.","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"This class represents a plugin for the support tool functionality of UI5. This class is internal and all its functions must not be used by an application.","!category":"class","isAppPlugin":{"!description":"Returns whether this plugin instance can run in the application window, default is <code>true<\/code>. Plugins that are <b>only<\/b> available on the diagnostics tool window should return <code>false<\/code> and overwrite the method for this matter.\n\nThe method is also used in a static manner (called on the prototype) and therefore must not rely on any instance specific members.","!type":"fn() -> Boolean","!category":"function","!static":false},"getTitle":{"!description":"Returns the title of this plugin instance.","!type":"fn() -> String","!category":"function","!static":false},"!helpDescription":"This class represents a plugin for the support tool functionality of UI5. This class is internal and all its functions must not be used by an application.","!proto":"sap.ui.base.Object","getId":{"!description":"Returns the id of this plugin instance.","!type":"fn() -> String","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.support.Plugin.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.support.Plugin_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.support.Plugin with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.core.support.Plugin"},"sap.ui.core.message.MessageProcessor_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.message.MessageProcessor with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.core.message.MessageProcessor"},"sap.ui.model.ClientTreeBindingAdapter":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!category":"class","!constructorDescription":"Adapter for TreeBindings to add the ListBinding functionality and use the\ntree structure in list based controls.","!module":"sap/ui/model/ClientTreeBindingAdapter","!proto":"sap.ui.base.Object","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>"},"sap.ui.Device.media":{"!description":"Event API for screen width changes.\n\nThis API is based on media queries but can also be used if media queries are not natively supported by the used browser. In this case, the behavior of media queries is simulated by this API.\n\nThere are several predefined {@link sap.ui.Device.media.RANGESETS range sets} available. Each of them defines a set of intervals for the screen width (from small to large). Whenever the screen width changes and the current screen width is in a different interval to the one before the change, the registered event handlers for the range set are called.\n\nIf needed, it is also possible to define a custom set of intervals.\n\nThe following example shows a typical use case: <pre>\nfunction sizeChanged(mParams) {\n    switch(mParams.name) {\n        case \"Phone\":\n            // Do what is needed for a little screen\n            break;\n        case \"Tablet\":\n            // Do what is needed for a medium sized screen\n            break;\n        case \"Desktop\":\n            // Do what is needed for a large screen\n    }\n}\n\n// Register an event handler to changes of the screen size\nsap.ui.Device.media.attachHandler(sizeChanged, null, sap.ui.Device.media.RANGESETS.SAP_STANDARD);\n// Do some initialization work based on the current size\nsizeChanged(sap.ui.Device.media.getCurrentRange(sap.ui.Device.media.RANGESETS.SAP_STANDARD));\n<\/pre>","detachHandler":{"!description":"Removes a previously attached event handler from the change events of the screen width.\n\nThe passed parameters must match those used for registration with {@link #.attachHandler} beforehand.","!type":"fn(fnFunction: fn(), oListener?: Object, sName: String)","!category":"function","!static":"true"},"RANGESETS":"sap.ui.Device.media.RANGESETS","removeRangeSet":{"!description":"Removes a previously initialized range set and detaches all registered handlers.\n\nOnly custom range sets can be removed via this function. Initialized predefined range sets ({@link sap.ui.Device.media.RANGESETS}) cannot be removed.","!type":"fn(sName: String)","!category":"function","!static":"true"},"!category":"namespace","initRangeSet":{"!description":"Initializes a screen width media query range set.\n\nThis initialization step makes the range set ready to be used for one of the other functions in namespace <code>sap.ui.Device.media<\/code>. The most important {@link sap.ui.Device.media.RANGESETS predefined range sets} are initialized automatically.\n\nTo make a not yet initialized {@link sap.ui.Device.media.RANGESETS predefined range set} ready to be used, call this function with the name of the range set to be initialized: <pre>\nsap.ui.Device.media.initRangeSet(sap.ui.Device.media.RANGESETS.SAP_3STEPS);\n<\/pre>\n\nAlternatively it is possible to define custom range sets as shown in the following example: <pre>\nsap.ui.Device.media.initRangeSet(\"MyRangeSet\", [200, 400], \"px\", [\"Small\", \"Medium\", \"Large\"]);\n<\/pre> This example defines the following named ranges: <ul> <li><code>\"Small\"<\/code>: For screens smaller than 200 pixels.<\/li> <li><code>\"Medium\"<\/code>: For screens greater than or equal to 200 pixels and smaller than 400 pixels.<\/li> <li><code>\"Large\"<\/code>: For screens greater than or equal to 400 pixels.<\/li> <\/ul> The range names are optional. If they are specified a CSS class (e.g. <code>sapUiMedia-MyRangeSet-Small<\/code>) is also added to the document root depending on the current active range. This can be suppressed via parameter <code>bSuppressClasses<\/code>.","!type":"fn(sName: String, aRangeBorders?: [[object Object]], sUnit?: String, aRangeNames?: [[object Object]], bSuppressClasses?: Boolean)","!category":"function","!static":"true"},"hasRangeSet":{"!description":"Returns <code>true<\/code> if a range set with the given name is already initialized.","!type":"fn(sName: String) -> Boolean","!category":"function","!static":"true"},"attachHandler":{"!description":"Registers the given event handler to change events of the screen width based on the range set with the specified name.\n\nThe event is fired whenever the screen width changes and the current screen width is in a different interval of the given range set than before the width change.\n\nThe event handler is called with a single argument: a map <code>mParams<\/code> which provides the following information about the entered interval: <ul> <li><code>mParams.from<\/code>: The start value (inclusive) of the entered interval as a number<\/li> <li><code>mParams.to<\/code>: The end value (exclusive) range of the entered interval as a number or undefined for the last interval (infinity)<\/li> <li><code>mParams.unit<\/code>: The unit used for the values above, e.g. <code>\"px\"<\/code><\/li> <li><code>mParams.name<\/code>: The name of the entered interval, if available<\/li> <\/ul>","!type":"fn(fnFunction: fn(), oListener?: Object, sName: String)","!category":"function","!static":"true"},"!module":"sap/ui/Device","getCurrentRange":{"!description":"Returns information about the current active range of the range set with the given name.\n\nIf the optional parameter <code>iWidth<\/iWidth> is given, the active range will be determined for that width, otherwise it is determined for the current window size.","!type":"fn(sName: String, iWidth?: Number) -> map","!category":"function","!static":"true"},"!helpDescription":"Event API for screen width changes.\n\nThis API is based on media queries but can also be used if media queries are not natively supported by the used browser. In this case, the behavior of media queries is simulated by this API.\n\nThere are several predefined {@link sap.ui.Device.media.RANGESETS range sets} available. Each of them defines a set of intervals for the screen width (from small to large). Whenever the screen width changes and the current screen width is in a different interval to the one before the change, the registered event handlers for the range set are called.\n\nIf needed, it is also possible to define a custom set of intervals.\n\nThe following example shows a typical use case: <pre>\nfunction sizeChanged(mParams) {\n    switch(mParams.name) {\n        case \"Phone\":\n            // Do what is needed for a little screen\n            break;\n        case \"Tablet\":\n            // Do what is needed for a medium sized screen\n            break;\n        case \"Desktop\":\n            // Do what is needed for a large screen\n    }\n}\n\n// Register an event handler to changes of the screen size\nsap.ui.Device.media.attachHandler(sizeChanged, null, sap.ui.Device.media.RANGESETS.SAP_STANDARD);\n// Do some initialization work based on the current size\nsizeChanged(sap.ui.Device.media.getCurrentRange(sap.ui.Device.media.RANGESETS.SAP_STANDARD));\n<\/pre>"},"sap.ui.model.analytics.odata4analytics.Measure":{"getUnitProperty":{"!description":"Get the unit property related to this measure","!type":"fn() -> Object","!category":"function","!static":false},"getFormattedValueProperty":{"!description":"Get the text property associated to the raw value property holding the formatted value related to this measure","!type":"fn() -> Object","!category":"function","!static":false},"!description":"Representation of a property annotated with sap:aggregation-role=\"measure\".","isUpdatable":{"!description":"Get indicator whether or not the measure is updatable","!type":"fn() -> Boolean","!category":"function","!static":false},"getName":{"!description":"Get the name of the measure","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","getRawValueProperty":{"!description":"Get the raw value property","!type":"fn() -> Object","!category":"function","!static":false},"!constructorDescription":"Create a representation of a measure provided by an analytic query. Do not create your own instances.","!module":"sap/ui/model/analytics/odata4analytics","getLabelText":{"!description":"Get label","!type":"fn() -> String","!category":"function","!static":false},"!proto":"sap.ui.base.Object","!helpDescription":"Representation of a property annotated with sap:aggregation-role=\"measure\"."},"sap.ui.model.message.MessageModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.message.MessageModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.ClientModel.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oMessageManager: sap.ui.core.message.MessageManager)","prototype":"sap.ui.model.message.MessageModel"},"sap.ui.core.util.ExportColumn_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.ExportColumn with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.util.ExportColumn"},"sap.ui.core.HorizontalAlign":{"Right":{"!description":"Hard option for right alignment","!type":"String","!category":"enum"},"End":{"!description":"Locale-specific positioning at the end of the line","!type":"String","!category":"enum"},"!description":"Configuration options for horizontal alignments of controls","!category":"static class","Center":{"!description":"Centered alignment of text","!type":"String","!category":"enum"},"!module":"sap/ui/core/library","Begin":{"!description":"Locale-specific positioning at the beginning of the line","!type":"String","!category":"enum"},"Left":{"!description":"Hard option for left alignment","!type":"String","!category":"enum"}},"sap.ui.core.Component_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Component with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.Component"},"sap.ui.model.odata.UpdateMethod":{"!description":"Different methods for update operations.","Put":{"!description":"Update requests will be send with HTTP method <code>PUT<\/code>.","!type":"String","!category":"enum"},"!category":"static class","Merge":{"!description":"Update requests will be send with HTTP method <code>MERGE<\/code>.","!type":"String","!category":"enum"},"!module":"sap/ui/model/odata/UpdateMethod"},"sap.ui.core.Dock":{"!description":"Docking position: horizontal/vertical.\n\nDefines a position on the element which is used for aligned positioning of another element (e.g. the left top corner of a popup is positioned at the left bottom corner of the input field). For the horizontal position possible values are \"begin\", \"left\", \"center\", \"right\" and \"end\", where left/right always are left and right, or begin/end which are dependent on the text direction. For the vertical position possible values are \"top\", \"center\" and \"bottom\". Examples: \"left top\", \"end bottom\", \"center center\".","!category":"namespace","!module":"sap/ui/core/library","!helpDescription":"Docking position: horizontal/vertical.\n\nDefines a position on the element which is used for aligned positioning of another element (e.g. the left top corner of a popup is positioned at the left bottom corner of the input field). For the horizontal position possible values are \"begin\", \"left\", \"center\", \"right\" and \"end\", where left/right always are left and right, or begin/end which are dependent on the text direction. For the vertical position possible values are \"top\", \"center\" and \"bottom\". Examples: \"left top\", \"end bottom\", \"center center\"."},"sap.ui.core.TextDirection":{"RTL":{"!description":"Specifies right-to-left text direction.","!type":"String","!category":"enum"},"Inherit":{"!description":"Inherits the direction from its parent control/container.","!type":"String","!category":"enum"},"!description":"Configuration options for the direction of texts.","!category":"static class","LTR":{"!description":"Specifies left-to-right text direction.","!type":"String","!category":"enum"},"!module":"sap/ui/core/library"},"sap.ui.core.dnd.DropEffect":{"Link":{"!description":"A link is established to the source at the new location.","!type":"String","!category":"enum"},"!description":"Configuration options for visual drop effects that are given during a drag and drop operation.","!category":"static class","Move":{"!description":"An item is moved to a new location.","!type":"String","!category":"enum"},"None":{"!description":"The item cannot be dropped.","!type":"String","!category":"enum"},"!module":"sap/ui/core/library","Copy":{"!description":"A copy of the source item is made at the new location.","!type":"String","!category":"enum"}},"sap.ui.core.UIComponent":{"onAfterRendering":{"!description":"Function is called when the rendering of the ComponentContainer is completed.\n\nApplications must not call this hook method directly, it is called from ComponentContainer.\n\nSubclasses of UIComponent override this hook to implement any necessary actions after the rendering.","!type":"fn()","!category":"function","!static":false},"onBeforeRendering":{"!description":"Function is called when the rendering of the ComponentContainer is started.\n\nApplications must not call this hook method directly, it is called from ComponentContainer.\n\nSubclasses of UIComponent override this hook to implement any necessary actions before the rendering.","!type":"fn()","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.UIComponent with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Component.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"createContent":{"!description":"Hook method to create the content (UI Control Tree) of this component.\n\nThe default implementation in this class reads the name (and optionally type) of a root view from the descriptor for this component (path <code>/sap.ui5/rootView<\/code>) or, for backward compatibility, just the name from static component metadata (property <code>rootView<\/code>). When no type is specified, it defaults to XML. The method then calls the {@link sap.ui.view view factory} to instantiate the root view and returns the result.\n\nWhen there is no root view configuration, <code>null<\/code> will be returned.\n\nThis method can be overwritten by subclasses if the default implementation doesn't fit their needs. Subclasses are not limited to views as return type but may return any control, but only a single control (can be the root of a larger control tree, however).","!type":"fn() -> sap.ui.core.mvc.View | sap.ui.core.Control","!category":"function","!static":false},"init":{"!description":"Initializes the Component instance after creation.\n\nApplications must not call this hook method directly, it is called by the framework while the constructor of a Component is executed.\n\nSubclasses of Component should override this hook to implement any necessary initialization. <b>When overriding this function make sure to invoke the init function of the UIComponent as well!<\/b>","!type":"fn()","!category":"function","!static":false},"getUIArea":{"!description":"Returns the reference to the UIArea of the container.","!type":"fn() -> sap.ui.core.UIArea","!category":"function","!static":false},"getEventingParent":{"!type":"fn()","!category":"function","!static":false},"!constructorDescription":"Creates and initializes a new UIComponent with the given <code>sId<\/code> and\nsettings.\n\nThe set of allowed entries in the <code>mSettings<\/code> object depends on\nthe concrete subclass and is described there. See {@link sap.ui.core.Component}\nfor a general description of this argument.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Component#constructor sap.ui.core.Component}\ncan be used as well.","!module":"sap/ui/core/UIComponent","getLocalId":{"!description":"Returns the local ID of an element by removing the component ID prefix or <code>null<\/code> if the ID does not contain a prefix.","!type":"fn(sId: String) -> String","!category":"function","parameters":{"sId":"type: string, description: Prefixed ID"},"!static":false},"render":{"!description":"Renders the root control of the UIComponent.","!type":"fn(oRenderManager: sap.ui.core.RenderManager)","!category":"function","parameters":{"oRenderManager":"type: sap.ui.core.RenderManager, description: a RenderManager instance"},"!static":false},"setContainer":{"!description":"Sets the reference to the ComponentContainer - later required for the determination of the UIArea for the UIComponent.","!type":"fn(oContainer: sap.ui.core.ComponentContainer) -> sap.ui.core.UIComponent","!category":"function","parameters":{"oContainer":"type: sap.ui.core.ComponentContainer, description: reference to a ComponentContainer"},"!static":false},"!description":"Base Class for UIComponent.\n\nIf you are extending a UIComponent make sure you read the {@link #.extend} documentation since the metadata is special.","byId":{"!description":"Returns an element by its ID in the context of the component.","!type":"fn(sId: String) -> sap.ui.core.Element","!category":"function","parameters":{"sId":"type: string, description: Component local ID of the element"},"!static":false},"getRouterFor":{"!description":"Returns the reference to the router instance. The passed controller or view has to be created in the context of a UIComponent to return the router instance. Otherwise this function will return undefined. You may define the routerClass property in the config section of the routing to make the Component create your router extension. Example: routing: { config: { routerClass : myAppNamespace.MyRouterClass ... } ...","!type":"fn(oControllerOrView: sap.ui.core.mvc.View | sap.ui.core.mvc.Controller) -> sap.ui.core.routing.Router","!category":"function","parameters":{"oControllerOrView":"type: sap.ui.core.mvc.View|sap.ui.core.mvc.Controller, description: either a view or controller"},"!static":true},"getTargets":{"!description":"Returns the reference to the Targets instance which has been created by the UIComponent once the targets in the routing metadata has been defined. If routes have been defined, it will be the Targets instance created and used by the router.","!type":"fn() -> sap.ui.core.routing.Targets","!category":"function","!static":false},"getAutoPrefixId":{"!description":"A method to be implemented by UIComponents, returning the flag whether to prefix the IDs of controls automatically or not if the controls are created inside the {@link sap.ui.core.UIComponent#createContent} function. By default this feature is not activated.\n\nYou can overwrite this function and return <code>true<\/code> to activate the automatic prefixing. In addition the default behavior can be configured in the manifest by specifying the entry <code>sap.ui5/autoPrefixId<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getRouter":{"!description":"Returns the reference to the router instance which has been created by the UIComponent once the routes in the routing metadata has been defined.","!type":"fn() -> sap.ui.core.routing.Router","!category":"function","!static":false},"!category":"class","getRootControl":{"!description":"Returns the content of {@link sap.ui.core.UIComponent#createContent}. If you specified a <code>rootView<\/code> in your metadata or in the descriptor file (manifest.json), you will get the instance of the root view. This getter will only return something if the {@link sap.ui.core.UIComponent#init} function was invoked. If <code>createContent<\/code> is not implemented, and there is no root view, it will return <code>null<\/code>. Here is an example: <code> <pre>\n         var MyExtension = UIComponent.extend(\"my.Component\", {\n              metadata: {\n                   rootView: \"my.View\"\n              },\n              init: function () {\n                   this.getRootControl(); // returns null\n                   UIComponent.prototype.init.apply(this, arguments);\n                   this.getRootControl(); // returns the view \"my.View\"\n              }\n         });\n    <\/pre> <\/code>","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.UIComponent.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!helpDescription":"Base Class for UIComponent.\n\nIf you are extending a UIComponent make sure you read the {@link #.extend} documentation since the metadata is special.","!proto":"sap.ui.core.Component","createId":{"!description":"Convert the given component local element ID to a globally unique ID by prefixing it with the component ID.","!type":"fn(sId: String) -> String","!category":"function","parameters":{"sId":"type: string, description: Component local ID of the element"},"!static":false}},"sap.ui.model.FilterOperator":{"Any":{"!description":"Used to filter a list based on filter criteria that are defined in a nested filter for dependent subitems. <code>Any<\/code> returns a list of those items for which <b>at least one<\/b> dependent subitem matches the filter criteria of the nested filter. For example, a list of customers can be filtered by filter criteria that are applied to the list of orders the customer placed in the past. The filter returns a list of those customers that <b>at least once<\/b> ordered a specific product.\n\nThis filter operator is only supported in OData V4 models.","!type":"String","!category":"enum"},"GE":{"!description":"FilterOperator greater or equals","!type":"String","!category":"enum"},"LT":{"!description":"FilterOperator less than","!type":"String","!category":"enum"},"BT":{"!description":"FilterOperator between When used on strings, the BT operator might not behave intuitively. For example, when filtering a list of Names with BT \"A\", \"B\", all Names starting with \"A\" will be included as well as the name \"B\" itself, but no other name starting with \"B\".","!type":"String","!category":"enum"},"StartsWith":{"!description":"FilterOperator starts with","!type":"String","!category":"enum"},"All":{"!description":"Used to filter a list based on filter criteria that are defined in a nested filter for dependent subitems. <code>All<\/code> returns a list of those items for which <b>all<\/b> dependent subitems match the filter criteria of the nested filter. For example, a list of customers can be filtered by filter criteria that are applied to the list of orders the customer placed in the past. The filter returns a list of those customers that <b>always<\/b> ordered a specific product.\n\nThis filter operator is only supported in OData V4 models.","!type":"String","!category":"enum"},"!module":"sap/ui/model/FilterOperator","Contains":{"!description":"FilterOperator contains","!type":"String","!category":"enum"},"EndsWith":{"!description":"FilterOperator ends with","!type":"String","!category":"enum"},"GT":{"!description":"FilterOperator greater than","!type":"String","!category":"enum"},"!description":"Operators for the Filter.","EQ":{"!description":"FilterOperator equals","!type":"String","!category":"enum"},"!category":"static class","LE":{"!description":"FilterOperator less or equals","!type":"String","!category":"enum"},"NE":{"!description":"FilterOperator not equals","!type":"String","!category":"enum"}},"sap.ui.core.util.ExportType_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.ExportType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.util.ExportType"},"sap.ui.core.ws.SapPcpWebSocket":{"fireMessage":{"!description":"Fire event 'message' to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.core.ws.SapPcpWebSocket","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"send":{"!description":"Sends a message and optional pcp-header-fields using the pcp-protocol.<br> <br> If the connection is not yet opened, the message will be queued and sent when the connection is established.","!type":"fn(message: String | Blob | ArrayBuffer, oPcpFields?: Object) -> sap.ui.core.ws.SapPcpWebSocket","!category":"function","parameters":{"message":"type: string|Blob|ArrayBuffer, description: message to send","oPcpFields":"type: object, description: additional pcp-fields as key-value map"},"!static":false},"!description":"WebSocket class implementing the pcp-protocol","extend":{"!description":"Creates a new subclass of class sap.ui.core.ws.SapPcpWebSocket with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.ws.WebSocket.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Creates a new WebSocket connection and uses the pcp-protocol for communication.","!module":"sap/ui/core/ws/SapPcpWebSocket","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.ws.SapPcpWebSocket.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.ws.WebSocket","!helpDescription":"WebSocket class implementing the pcp-protocol"},"jQuery.sap.interaction":{"!category":"namespace","setActive":{"!description":"Enables the interaction tracking.","!type":"fn(bActive: Boolean)","!category":"function","!static":"true"},"!module":"jquery.sap.trace"},"sap.ui.core.CSSSizeShortHand":{"!description":"This type checks the short hand form of a margin or padding definition.\n\nE.g. \"1px 1px\" or up to four CSSSize values are allowed or tHe special keyword <code>inherit<\/code>.","!category":"namespace","!module":"sap/ui/core/library","!helpDescription":"This type checks the short hand form of a margin or padding definition.\n\nE.g. \"1px 1px\" or up to four CSSSize values are allowed or tHe special keyword <code>inherit<\/code>."},"sap.ui.model.odata.v4.ODataContextBinding":{"suspend":{"!description":"Suspends this binding. A suspended binding does not fire change events nor does it trigger data service requests. Call {@link #resume} to resume the binding. Before 1.53.0, this method was not supported and threw an error.","!type":"fn()","!category":"function","!static":false},"execute":{"!description":"Calls the OData operation that corresponds to this operation binding.\n\nParameters for the operation must be set via {@link #setParameter} beforehand.\n\nThe value of this binding is the result of the operation. To access a result of primitive type, bind a control to the path \"value\", for example <code>&lt;Text text=\"{value}\"/><\/code>. If the result has a complex or entity type, you can bind properties as usual, for example <code>&lt;Text text=\"{street}\"/><\/code>.","!type":"fn(sGroupId?: String) -> Promise","!category":"function","parameters":{"sGroupId":"type: string, description: The group ID to be used for the request; if not specified, the group ID for this binding is used, see {@link sap.ui.model.odata.v4.ODataContextBinding#constructor}. Valid values are <code>undefined<\/code>, '$auto', '$direct' or application group IDs as specified in {@link sap.ui.model.odata.v4.ODataModel#submitBatch}."},"!static":false},"changeParameters":{"!description":"Changes this binding's parameters and refreshes the binding.\n\nIf there are pending changes an error is thrown. Use {@link #hasPendingChanges} to check if there are pending changes. If there are changes, call {@link sap.ui.model.odata.v4.ODataModel#submitBatch} to submit the changes or {@link sap.ui.model.odata.v4.ODataModel#resetChanges} to reset the changes before calling {@link #changeParameters}.\n\nThe parameters are changed according to the given map of parameters: Parameters with an <code>undefined<\/code> value are removed, the other parameters are set, and missing parameters remain unchanged.","!type":"fn(mParameters: Object)","!category":"function","parameters":{"mParameters":"type: object, description: Map of binding parameters, see {@link sap.ui.model.odata.v4.ODataModel#bindList} and {@link sap.ui.model.odata.v4.ODataModel#bindContext}"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.v4.ODataContextBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.ContextBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"isInitial":{"!description":"Method not supported","!type":"fn()","!category":"function","!static":false},"resetChanges":{"!description":"Resets all pending changes of this binding, see {@link #hasPendingChanges}. Resets also invalid user input.","!type":"fn()","!category":"function","!static":false},"getBoundContext":{"!description":"Returns the bound context.","!type":"fn() -> sap.ui.model.odata.v4.Context","!category":"function","!static":false},"!constructorDescription":"Do <strong>NOT<\/strong> call this private constructor, but rather use\n{@link sap.ui.model.odata.v4.ODataModel#bindContext} instead!","!module":"sap/ui/model/odata/v4/ODataContextBinding","getRootBinding":{"!description":"Returns the root binding of this binding's hierarchy, see binding {@link topic:54e0ddf695af4a6c978472cecb01c64d Initialization and Read Requests}.","!type":"fn() -> sap.ui.model.odata.v4.ODataContextBinding | sap.ui.model.odata.v4.ODataListBinding | sap.ui.model.odata.v4.ODataPropertyBinding","!category":"function","!static":false},"destroy":{"!description":"Destroys the object. The object must not be used anymore after this function was called.","!type":"fn()","!category":"function","!static":false},"resume":{"!description":"Resumes this binding. The binding can again fire change events and trigger data service requests. Before 1.53.0, this method was not supported and threw an error.","!type":"fn()","!category":"function","!static":false},"!description":"Context binding for an OData V4 model. An event handler can only be attached to this binding for the following events: 'change', 'dataReceived', and 'dataRequested'. For other events, an error is thrown.\n\nA context binding can also be used as an <i>operation binding<\/i> to support bound actions, action imports, bound functions and function imports. If you want to control the execution time of an operation, for example a function import named \"GetNumberOfAvailableItems\", create a context binding for the path \"/GetNumberOfAvailableItems(...)\" (as specified here, including the three dots). Such an operation binding is <i>deferred<\/i>, meaning that it does not request automatically, but only when you call {@link #execute}. {@link #refresh} is always ignored for actions and action imports. For bound functions and function imports, it is ignored if {@link #execute} has not yet been called. Afterwards it results in another call of the function with the parameter values of the last execute.\n\nThe binding parameter for bound actions or bound functions may be given in the binding path, for example \"/SalesOrderList('42')/name.space.SalesOrder_Confirm\". This can be used if the exact entity for the binding parameter is known in advance. If you use a relative binding instead, the operation path is a concatenation of the parent context's canonical path and the deferred binding's path.\n\n<b>Example<\/b>: You have a table with a list binding to \"/SalesOrderList\". In each row you have a button to confirm the sales order, with the relative binding \"name.space.SalesOrder_Confirm(...)\". Then the parent context for such a button refers to an entity in \"SalesOrderList\", so its canonical path is \"/SalesOrderList('<i>SalesOrderID<\/i>')\" and the resulting path for the action is \"/SalesOrderList('<i>SalesOrderID<\/i>')/name.space.SalesOrder_Confirm\".\n\nThis also works if the relative path of the deferred operation binding starts with a navigation property. Then this navigation property will be part of the operation's resource path, which is still valid.\n\nA deferred operation binding is not allowed to have another deferred operation binding as parent.","setParameter":{"!description":"Sets a parameter for an operation call.","!type":"fn(sParameterName: String, vValue: Object) -> sap.ui.model.odata.v4.ODataContextBinding","!category":"function","parameters":{"sParameterName":"type: string, description: The parameter name","vValue":"type: any, description: The parameter value"},"!static":false},"!category":"class","toString":{"!description":"Returns a string representation of this object including the binding path. If the binding is relative, the parent path is also given, separated by a '|'.","!type":"function toString() { [native code for Array.toString, arity=0] }\n) -> String","!category":"function","!static":false},"hasPendingChanges":{"!description":"Returns <code>true<\/code> if this binding or its dependent bindings have pending changes, meaning updates that have not yet been successfully sent to the server.","!type":"fn() -> Boolean","!category":"function","!static":false},"refresh":{"!description":"Refreshes the binding. Prompts the model to retrieve data from the server using the given group ID and notifies the control that new data is available.\n\nRefresh is supported for bindings which are not relative to a {@link sap.ui.model.odata.v4.Context} and whose root binding is not suspended.\n\nNote: When calling {@link #refresh} multiple times, the result of the request triggered by the last call determines the binding's data; it is <b>independent<\/b> of the order of calls to {@link sap.ui.model.odata.v4.ODataModel#submitBatch} with the given group ID.\n\nIf there are pending changes, an error is thrown. Use {@link #hasPendingChanges} to check if there are pending changes. If there are changes, call {@link sap.ui.model.odata.v4.ODataModel#submitBatch} to submit the changes or {@link sap.ui.model.odata.v4.ODataModel#resetChanges} to reset the changes before calling {@link #refresh}.","!type":"fn(sGroupId?: String)","!category":"function","parameters":{"sGroupId":"type: string, description: The group ID to be used for refresh; if not specified, the group ID for this binding is used.\n\nValid values are <code>undefined<\/code>, '$auto', '$direct' or application group IDs as specified in {@link sap.ui.model.odata.v4.ODataModel#submitBatch}."},"!static":false},"initialize":{"!description":"Initializes the OData list binding: Fires a 'change' event in case the binding has a resolved path and its root binding is not suspended.","!type":"fn()","!category":"function","!static":false},"!helpDescription":"Context binding for an OData V4 model. An event handler can only be attached to this binding for the following events: 'change', 'dataReceived', and 'dataRequested'. For other events, an error is thrown.\n\nA context binding can also be used as an <i>operation binding<\/i> to support bound actions, action imports, bound functions and function imports. If you want to control the execution time of an operation, for example a function import named \"GetNumberOfAvailableItems\", create a context binding for the path \"/GetNumberOfAvailableItems(...)\" (as specified here, including the three dots). Such an operation binding is <i>deferred<\/i>, meaning that it does not request automatically, but only when you call {@link #execute}. {@link #refresh} is always ignored for actions and action imports. For bound functions and function imports, it is ignored if {@link #execute} has not yet been called. Afterwards it results in another call of the function with the parameter values of the last execute.\n\nThe binding parameter for bound actions or bound functions may be given in the binding path, for example \"/SalesOrderList('42')/name.space.SalesOrder_Confirm\". This can be used if the exact entity for the binding parameter is known in advance. If you use a relative binding instead, the operation path is a concatenation of the parent context's canonical path and the deferred binding's path.\n\n<b>Example<\/b>: You have a table with a list binding to \"/SalesOrderList\". In each row you have a button to confirm the sales order, with the relative binding \"name.space.SalesOrder_Confirm(...)\". Then the parent context for such a button refers to an entity in \"SalesOrderList\", so its canonical path is \"/SalesOrderList('<i>SalesOrderID<\/i>')\" and the resulting path for the action is \"/SalesOrderList('<i>SalesOrderID<\/i>')/name.space.SalesOrder_Confirm\".\n\nThis also works if the relative path of the deferred operation binding starts with a navigation property. Then this navigation property will be part of the operation's resource path, which is still valid.\n\nA deferred operation binding is not allowed to have another deferred operation binding as parent.","!proto":"sap.ui.model.ContextBinding","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.v4.ODataContextBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.dnd.DropPosition":{"OnOrBetween":{"!description":"Drop on the control or between the controls.","!type":"String","!category":"enum"},"On":{"!description":"Drop on the control.","!type":"String","!category":"enum"},"!description":"Configuration options for drop positions.","!category":"static class","!module":"sap/ui/core/library","Between":{"!description":"Drop between the controls.","!type":"String","!category":"enum"}},"sap.ui.model.odata.ODataModel":{"getKey":{"!description":"Returns the key part from the entry URI or the given context or object","!type":"fn(oObject: Object | sap.ui.model.Context, bDecode: Boolean)","!category":"function","parameters":{"bDecode":"type: boolean, description: Whether the URI decoding should be applied on the key","oObject":"type: object|sap.ui.model.Context, description: The context or object"},"!static":false},"getSecurityToken":{"!description":"Returns the current security token. If the token has not been requested from the server it will be requested first.","!type":"fn() -> String","!category":"function","!static":false},"resetChanges":{"!description":"Resets the collected changes by the setProperty method and reloads the data from the server.","!type":"fn(fnSuccess?: fn(), fnError?: fn())","!category":"function","parameters":{"fnSuccess":"type: function, description: a callback function which is called when the data has been successfully resetted. The handler can have the following parameters: oData and response.","fnError":"type: function, description: a callback function which is called when the request failed"},"!static":false},"addAnnotationXML":{"!description":"Adds new xml content to be parsed for OData annotations, which are then merged into the annotations object which can be retrieved by calling the getServiceAnnotations()-method.","!type":"fn(sXMLContent: String, bSuppressEvents?: Boolean) -> Promise","!category":"function","parameters":{"bSuppressEvents":"type: boolean, description: Whether not to fire annotationsLoaded event on the annotationParser","sXMLContent":"type: string, description: The string that should be parsed as annotation XML"},"!static":false},"getMetaModel":{"!description":"Returns an instance of an OData meta model which offers a unified access to both OData V2 metadata and V4 annotations. It uses the existing {@link sap.ui.model.odata.ODataMetadata} as a foundation and merges V4 annotations from the existing {@link sap.ui.model.odata.ODataAnnotations} directly into the corresponding model element.\n\n<b>BEWARE:<\/b> Access to this OData meta model will fail before the promise returned by {@link sap.ui.model.odata.ODataMetaModel#loaded loaded} has been resolved!","!type":"fn() -> sap.ui.model.odata.ODataMetaModel","!category":"function","!static":false},"forceNoCache":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined The caching should be controlled by the backend by setting the correct cache control header<br>Force no caching","!type":"fn(bForceNoCache?: Boolean)","!category":"function","parameters":{"bForceNoCache":"type: boolean, description: whether to force no caching"},"!static":false},"!module":"sap/ui/model/odata/ODataModel","deleteCreatedEntry":{"!description":"Deletes a created entry from the request queue and the model.","!type":"fn(oContext: sap.ui.model.Context)","!category":"function","parameters":{"oContext":"type: sap.ui.model.Context, description: The context object pointing to the created entry"},"!static":false},"detachMetadataFailed":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'metadataFailed' event of this <code>sap.ui.model.odata.ODataModel<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.ODataModel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"setDefaultCountMode":{"!description":"Sets the default mode how to retrieve the item count for a collection in this model.\n\nThe count can be determined in the following ways <ul> <li>by sending a separate <code>$count<\/code> request<\/li> <li>by adding parameter <code>$inlinecount=allpages<\/code> to one or all data requests<\/li> <li>a combination of the previous two<\/li> <li>not at all (questions about the size of the collection can't be answered then)<\/li> <\/ul> See {@link sap.ui.model.odata.CountMode} for all enumeration values and more details.\n\nNote that a call to this method does not modify the count mode for existing list bindings, only bindings that are created afterwards will use the new mode when no mode is defined at their creation.\n\nIf no default count mode is set for an <code>ODataModel<\/code> (v1), the mode <code>Both<\/code> will be used for compatibility reasons.","!type":"fn(sCountMode: sap.ui.model.odata.CountMode)","!category":"function","parameters":{"sCountMode":"type: sap.ui.model.odata.CountMode, description: The new default count mode for this model"},"!static":false},"setUseBatch":{"!description":"Enable/Disable batch for all requests","!type":"fn(bUseBatch?: Boolean)","!category":"function","parameters":{"bUseBatch":"type: boolean, description: whether the requests should be encapsulated in a batch request"},"!static":false},"getServiceMetadata":{"!description":"Return the metadata object. Please note that when using the model with bLoadMetadataAsync = true then this function might return undefined because the metadata has not been loaded yet. In this case attach to the <code>metadataLoaded<\/code> event to get notified when the metadata is available and then call this function.","!type":"fn() -> Object","!category":"function","!static":false},"refresh":{"!description":"Refresh the model. This will check all bindings for updated data and update the controls if data has been changed.","!type":"fn(bForceUpdate?: Boolean, bRemoveData?: Boolean)","!category":"function","parameters":{"bForceUpdate":"type: boolean, description: Force update of controls","bRemoveData":"type: boolean, description: If set to true then the model data will be removed/cleared. Please note that the data might not be there when calling e.g. getProperty too early before the refresh call returned."},"!static":false},"setTokenHandlingEnabled":{"!description":"Enable/Disable XCSRF-Token handling","!type":"fn(bTokenHandling?: Boolean)","!category":"function","parameters":{"bTokenHandling":"type: boolean, description: whether to use token handling or not"},"!static":false},"setHeaders":{"!description":"Set custom headers which are provided in a key/value map. These headers are used for requests against the OData backend. Private headers which are set in the ODataModel cannot be modified. These private headers are: accept, accept-language, x-csrf-token, MaxDataServiceVersion, DataServiceVersion.\n\nTo remove these headers simply set the mCustomHeaders parameter to null. Please also note that when calling this method again all previous custom headers are removed unless they are specified again in the mCustomHeaders parameter.","!type":"fn(mHeaders: Object)","!category":"function","parameters":{"mHeaders":"type: object, description: the header name/value map."},"!static":false},"createEntry":{"!description":"Creates a new entry object which is described by the metadata of the entity type of the specified sPath Name. A context object is returned which can be used to bind against the newly created object.\n\nFor each created entry a request is created and stored in a request queue. The request queue can be submitted by calling submitChanges. To delete a created entry from the request queue call deleteCreateEntry.\n\nThe optional vProperties parameter can be used as follows:\n\n- vProperties could be an array containing the property names which should be included in the new entry. Other properties defined in the entity type are not included. - vProperties could be an object which includes the desired properties and the values which should be used for the created entry.\n\nIf vProperties is not specified, all properties in the entity type will be included in the created entry.\n\nIf there are no values specified the properties will have undefined values.\n\nPlease note that deep creates (including data defined by navigationproperties) are not supported","!type":"fn(sPath: String, vProperties: Array | Object) -> sap.ui.model.Context","!category":"function","parameters":{"sPath":"type: string, description: Name of the path to the collection","vProperties":"type: array|object, description: An array that specifies a set of properties or the entry"},"!static":false},"attachAnnotationsLoaded":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'annotationsLoaded' event of this <code>sap.ui.model.odata.ODataModel<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.ODataModel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, the global context (window) is used."},"!static":false},"attachMetadataLoaded":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'metadataLoaded' event of this <code>sap.ui.model.odata.ODataModel<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.ODataModel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, the global context (window) is used."},"!static":false},"!constructorDescription":"Constructor for a new ODataModel.","fireMetadataLoaded":{"!description":"Fire event metadataLoaded to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.odata.ODataModel","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"create":{"!description":"Trigger a POST request to the odata service that was specified in the model constructor. Please note that deep creates are not supported and may not work.","!type":"fn(sPath: String, oData: Object, mParameters?: map) -> Object","!category":"function","parameters":{"mParameters":"type: map, description: Optional parameter map containing any of the following properties:","sPath":"type: string, description: A string containing the path to the collection where an entry should be created. The path is concatenated to the sServiceUrl which was specified in the model constructor.","oData":"type: object, description: data of the entry that should be created."},"!static":false},"setRefreshAfterChange":{"!description":"Enable/Disable automatic updates of all Bindings after change operations","!type":"fn(bRefreshAfterChange: Boolean)","!category":"function","parameters":{"bRefreshAfterChange":"type: boolean, description: undefined"},"!static":false},"addAnnotationUrl":{"!description":"Adds (a) new URL(s) to the be parsed for OData annotations, which are then merged into the annotations object which can be retrieved by calling the getServiceAnnotations()-method. If a $metadata url is passed the data will also be merged into the metadata object, which can be reached by calling the getServiceMetadata() method.","!type":"fn(vUrl: [String | [object Object]]) -> Promise","!category":"function","parameters":{"vUrl":"type: string|[object Object][], description: Either one URL as string or an array or URL strings"},"!static":false},"detachAnnotationsLoaded":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'annotationsLoaded' event of this <code>sap.ui.model.odata.ODataModel<\/code>.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.ODataModel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"getData":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined please use {@link #getProperty} instead<br>Return requested data as object if the data has already been loaded and stored in the model.","!type":"fn(sPath: String, oContext?: Object, bIncludeExpandEntries?: Boolean) -> Object","!category":"function","parameters":{"sPath":"type: string, description: A string containing the path to the data object that should be returned.","bIncludeExpandEntries":"type: boolean, description: This parameter should be set when a URI or custom parameter with a $expand System Query Option was used to retrieve associated entries embedded/inline. If true then the getProperty function returns a desired property value/entry and includes the associated expand entries (if any). If false the associated/expanded entry properties are removed and not included in the desired entry as properties at all. This is useful for performing updates on the base entry only. Note: A copy and not a reference of the entry will be returned.","oContext":"type: object, description: the optional context which is used with the sPath to retrieve the requested data."},"!static":false},"getDefaultCountMode":{"!description":"Returns the default count mode for retrieving the count of collections","!type":"fn() -> sap.ui.model.odata.CountMode","!category":"function","!static":false},"getProperty":{"!description":"Returns the value for the property with the given <code>sPath<\/code>. If the path points to a navigation property which has been loaded via $expand then the <code>bIncludeExpandEntries<\/code> parameter determines if the navigation property should be included in the returned value or not. Please note that this currently works for 1..1 navigation properties only.","!type":"fn(sPath: String, oContext?: Object, bIncludeExpandEntries?: Boolean) -> Object","!category":"function","parameters":{"sPath":"type: string, description: the path/name of the property","bIncludeExpandEntries":"type: boolean, description: This parameter should be set when a URI or custom parameter with a $expand System Query Option was used to retrieve associated entries embedded/inline. If true then the getProperty function returns a desired property value/entry and includes the associated expand entries (if any). If false the associated/expanded entry properties are removed and not included in the desired entry as properties at all. This is useful for performing updates on the base entry only. Note: A copy and not a reference of the entry will be returned.","oContext":"type: object, description: the context if available to access the property value"},"!static":false},"createKey":{"!description":"Creates the key from the given collection name and property map","!type":"fn(sCollection: String, oKeyParameters: Object, bDecode: Boolean)","!category":"function","parameters":{"bDecode":"type: boolean, description: Whether the URI decoding should be applied on the key","oKeyParameters":"type: object, description: The object containing at least all the key properties of the entity type","sCollection":"type: string, description: The name of the collection"},"!static":false},"hasPendingChanges":{"!description":"Checks if there exist pending changes in the model created by the setProperty method.","!type":"fn() -> Boolean","!category":"function","!static":false},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Please use {@link sap.ui.model.odata.v2.ODataModel} instead.<br>Model implementation for oData format","!proto":"sap.ui.model.Model","update":{"!description":"Trigger a PUT/MERGE request to the odata service that was specified in the model constructor. Please note that deep updates are not supported and may not work. These should be done seperate on the entry directly.","!type":"fn(sPath: String, oData: Object, mParameters?: map) -> Object","!category":"function","parameters":{"mParameters":"type: map, description: Optional, can contain the following attributes:","sPath":"type: string, description: A string containing the path to the data that should be updated. The path is concatenated to the sServiceUrl which was specified in the model constructor.","oData":"type: object, description: data of the entry that should be updated."},"!static":false},"submitChanges":{"!description":"Submits the collected changes which were collected by the setProperty method. A MERGE request will be triggered to only update the changed properties. If a URI with a $expand System Query Option was used then the expand entries will be removed from the collected changes. Changes to this entries should be done on the entry itself. So no deep updates are supported.","!type":"fn(fnSuccess?: fn(), fnError?: fn(), oParameters?: Object) -> Object","!category":"function","parameters":{"oParameters":"type: object, description: optional parameter for additional information introduced in SAPUI5 1.9.1","fnSuccess":"type: function, description: a callback function which is called when the data has been successfully updated. The handler can have the following parameters: oData and response.","fnError":"type: function, description: a callback function which is called when the request failed. The handler can have the parameter: oError which contains additional error information"},"!static":false},"remove":{"!description":"Trigger a DELETE request to the odata service that was specified in the model constructor.","!type":"fn(sPath: String, mParameters?: Object) -> Object","!category":"function","parameters":{"mParameters":"type: object, description: Optional, can contain the following attributes: oContext, fnSuccess, fnError, sETag:","sPath":"type: string, description: A string containing the path to the data that should be removed. The path is concatenated to the sServiceUrl which was specified in the model constructor."},"!static":false},"fireAnnotationsLoaded":{"!description":"Fire event annotationsLoaded to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.odata.ODataModel","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"clearBatch":{"!description":"Removes all operations in the current batch.","!type":"fn()","!category":"function","!static":false},"getServiceAnnotations":{"!description":"Return the annotation object. Please note that when using the model with bLoadMetadataAsync = true then this function might return undefined because the metadata has not been loaded yet. In this case attach to the <code>annotationsLoaded<\/code> event to get notified when the annotations are available and then call this function.","!type":"fn() -> Object","!category":"function","!static":false},"destroy":{"!type":"fn()","!category":"function","!static":false},"attachAnnotationsFailed":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'annotationsFailed' event of this <code>sap.ui.model.odata.ODataModel<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.ODataModel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, the global context (window) is used."},"!static":false},"submitBatch":{"!description":"Submits the collected changes in the batch which were collected via <code>addBatchReadOperations<\/code> or <code>addBatchChangeOperations<\/code>. The batch will be cleared afterwards. If the batch is empty no request will be performed and false will be returned. Note: No data will be stored in the model.","!type":"fn(fnSuccess?: fn(), fnError?: fn(), bAsync?: Boolean, bImportData: Boolean) -> Object","!category":"function","parameters":{"bAsync":"type: boolean, description: true for asynchronous request. Default is true.","fnSuccess":"type: function, description: a callback function which is called when the batch request has been successfully sent. Note: There might have errors occured in the single batch operations. These errors can be accessed in the aErrorResponses parameter in the callback handler. The handler can have the following parameters: oData, oResponse and aErrorResponses.","bImportData":"type: boolean, description: undefined","fnError":"type: function, description: a callback function which is called when the batch request failed. The handler can have the parameter: oError which contains additional error information."},"!static":false},"!category":"class","getHeaders":{"!description":"Returns all headers and custom headers which are stored in the OData model.","!type":"fn() -> Object","!category":"function","!static":false},"read":{"!description":"Trigger a GET request to the odata service that was specified in the model constructor. The data will not be stored in the model. The requested data is returned with the response.","!type":"fn(sPath: String, mParameters?: map) -> Object","!category":"function","parameters":{"mParameters":"type: map, description: Optional parameter map containing any of the following properties:","sPath":"type: string, description: A string containing the path to the data which should be retrieved. The path is concatenated to the sServiceUrl which was specified in the model constructor."},"!static":false},"addBatchReadOperations":{"!description":"Appends the read batch operations to the end of the batch stack. Only GET batch operations should be included in the specified array. If an illegal batch operation is added to the batch nothing will be performed and false will be returned.","!type":"fn(aReadOperations: [[object Object]])","!category":"function","parameters":{"aReadOperations":"type: [object Object][], description: an array of read batch operations created via <code>createBatchOperation<\/code> and <code>sMethod<\/code> = GET"},"!static":false},"attachMetadataFailed":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'metadataFailed' event of this <code>sap.ui.model.odata.ODataModel<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.ODataModel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, the global context (window) is used."},"!static":false},"fireMetadataFailed":{"!description":"Fire event metadataFailed to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.odata.ODataModel","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"detachAnnotationsFailed":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'annotationsFailed' event of this <code>sap.ui.model.odata.ODataModel<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.ODataModel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"isCountSupported":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined undefined<br>Returns whether this model supports the $count on its collections This method is deprecated, please use getDefaultCountMode instead.","!type":"fn() -> Boolean","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.ODataModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"callFunction":{"!description":"Trigger a request to the function import odata service that was specified in the model constructor.","!type":"fn(sFunctionName: String, mParameters?: map) -> Object","!category":"function","parameters":{"mParameters":"type: map, description: Optional parameter map containing any of the following properties:","sFunctionName":"type: string, description: A string containing the name of the function to call. The name is concatenated to the sServiceUrl which was specified in the model constructor."},"!static":false},"setProperty":{"!description":"Sets a new value for the given property <code>sPropertyName<\/code> in the model without triggering a server request. This can be done by the submitChanges method.\n\nNote: Only one entry of one collection can be updated at once. Otherwise a fireRejectChange event is fired.\n\nBefore updating a different entry the existing changes of the current entry have to be submitted or resetted by the corresponding methods: submitChanges, resetChanges.\n\nIMPORTANT: All pending changes are resetted in the model if the application triggeres any kind of refresh on that entry. Make sure to submit the pending changes first. To determine if there are any pending changes call the hasPendingChanges method.","!type":"fn(sPath: String, oValue: Object, oContext?: Object, bAsyncUpdate?: Boolean) -> Boolean","!category":"function","parameters":{"oValue":"type: any, description: value to set the property to","bAsyncUpdate":"type: boolean, description: whether to update other bindings dependent on this property asynchronously","sPath":"type: string, description: path of the property to set","oContext":"type: object, description: the context which will be used to set the property"},"!static":false},"refreshMetadata":{"!description":"refreshes the metadata for model, e.g. in case the first request for metadata has failed","!type":"fn()","!category":"function","!static":false},"bindList":{"!description":"Creates a new list binding for this model.","!type":"fn(sPath: String, oContext?: sap.ui.model.Context, aSorters?: [sap.ui.model.Sorter | [object Object]], aFilters?: [sap.ui.model.Filter | [object Object]], mParameters?: map) -> sap.ui.model.ListBinding","!category":"function","parameters":{"mParameters":"type: map, description: Map which contains additional parameters for the binding","aSorters":"type: sap.ui.model.Sorter|[object Object][], description: Initial sort order, can be either a sorter or an array of sorters","sPath":"type: string, description: Binding path, either absolute or relative to a given <code>oContext<\/code>","aFilters":"type: sap.ui.model.Filter|[object Object][], description: Predefined filter/s, can be either a filter or an array of filters","oContext":"type: sap.ui.model.Context, description: Binding context referring to this model"},"!static":false},"updateBindings":{"!description":"update all bindings","!type":"fn(bForceUpdate?: Boolean)","!category":"function","parameters":{"bForceUpdate":"type: boolean, description: If set to false an update will only be done when the value of a binding changed."},"!static":false},"addBatchChangeOperations":{"!description":"Appends the change batch operations to the end of the batch stack. Only PUT, POST or DELETE batch operations should be included in the specified array. The operations in the array will be included in a single changeset. To embed change operations in different change sets call this method with the corresponding change operations again. If an illegal batch operation is added to the change set nothing will be performed and false will be returned.","!type":"fn(aChangeOperations: [[object Object]])","!category":"function","parameters":{"aChangeOperations":"type: [object Object][], description: an array of change batch operations created via <code>createBatchOperation<\/code> and <code>sMethod<\/code> = POST, PUT, MERGE or DELETE"},"!static":false},"refreshSecurityToken":{"!description":"refresh XSRF token by performing a GET request against the service root URL.","!type":"fn(fnSuccess?: fn(), fnError?: fn(), bAsync?: Boolean) -> Object","!category":"function","parameters":{"bAsync":"type: boolean, description: true for asynchronous requests.","fnSuccess":"type: function, description: a callback function which is called when the data has been successfully retrieved.","fnError":"type: function, description: a callback function which is called when the request failed. The handler can have the parameter: oError which contains additional error information."},"!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Please use {@link sap.ui.model.odata.v2.ODataModel} instead.<br>Model implementation for oData format","createBatchOperation":{"!description":"Creates a single batch operation (read or change operation) which can be used in a batch request.","!type":"fn(sPath: String, sMethod: String, oData?: Object, oParameters?: Object)","!category":"function","parameters":{"oParameters":"type: object, description: optional parameter for additional information introduced in SAPUI5 1.9.1,","sPath":"type: string, description: A string containing the path to the collection or entry where the batch operation should be performed. The path is concatenated to the sServiceUrl which was specified in the model constructor.","oData":"type: object, description: optional data payload which should be created, updated, deleted in a change batch operation.","sMethod":"type: string, description: for the batch operation. Possible values are GET, PUT, MERGE, POST, DELETE"},"!static":false},"fireAnnotationsFailed":{"!description":"Fire event annotationsFailed to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.odata.ODataModel","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"detachMetadataLoaded":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'metadataLoaded' event of this <code>sap.ui.model.odata.ODataModel<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.ODataModel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"setCountSupported":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined undefined<br>Sets whether this OData service supports $count on its collections. This method is deprecated, please use setDefaultCountMode instead.","!type":"fn(bCountSupported: Boolean)","!category":"function","parameters":{"bCountSupported":"type: boolean, description: undefined"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.ODataModel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.model.odata.ODataModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.ODataModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sServiceUrl?: String, mParameters?: Object)","prototype":"sap.ui.model.odata.ODataModel"},"sap.ui.model.xml.XMLModel":{"setXML":{"!description":"Sets the specified XML formatted string text to the model","!type":"fn(sXMLText: String)","!category":"function","parameters":{"sXMLText":"type: string, description: the XML data as string"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.xml.XMLModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.ClientModel.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setProperty":{"!description":"Sets a new value for the given property <code>sPropertyName<\/code> in the model. If the model value changed all interested parties are informed.","!type":"fn(sPath: String, oValue: Object, oContext?: Object, bAsyncUpdate?: Boolean) -> Boolean","!category":"function","parameters":{"oValue":"type: any, description: value to set the property to","bAsyncUpdate":"type: boolean, description: whether to update other bindings dependent on this property asynchronously","sPath":"type: string, description: path of the property to set","oContext":"type: object, description: the context which will be used to set the property"},"!static":false},"!constructorDescription":"Constructor for a new XMLModel.","!module":"sap/ui/model/xml/XMLModel","setNameSpace":{"!description":"Sets an XML namespace to use in the binding path","!type":"fn(sNameSpace: String, sPrefix?: String)","!category":"function","parameters":{"sPrefix":"type: string, description: the prefix for the namespace (optional)","sNameSpace":"type: string, description: the namespace URI"},"!static":false},"setData":{"!description":"Sets the provided XML encoded data object to the model","!type":"fn(oData: Object)","!category":"function","parameters":{"oData":"type: object, description: the data to set to the model"},"!static":false},"!description":"Model implementation for XML format","getXML":{"!description":"Serializes the current XML data of the model into a string.","!type":"fn()","!category":"function","!static":false},"getProperty":{"!description":"Returns the value for the property with the given <code>sPropertyName<\/code>","!type":"fn(sPath: String, oContext?: Object) -> Object","!category":"function","parameters":{"sPath":"type: string, description: the path to the property","oContext":"type: object, description: the context which will be used to retrieve the property"},"!static":false},"!category":"class","loadData":{"!description":"Load XML-encoded data from the server using a GET HTTP request and store the resulting XML data in the model. Note: Due to browser security restrictions, most \"Ajax\" requests are subject to the same origin policy, the request can not successfully retrieve data from a different domain, subdomain, or protocol.","!type":"fn(sURL: String, oParameters?: Object | String, bAsync?: Boolean, sType?: String, bCache?: String, mHeaders: Object)","!category":"function","parameters":{"bCache":"type: string, description: force no caching if false. Default is false","bAsync":"type: boolean, description: if the request should be asynchron or not. Default is true.","sURL":"type: string, description: A string containing the URL to which the request is sent.","oParameters":"type: object|string, description: A map or string that is sent to the server with the request.","mHeaders":"type: object, description: An object of additional header key/value pairs to send along with the request","sType":"type: string, description: of request. Default is 'GET'"},"!static":false},"!helpDescription":"Model implementation for XML format","!proto":"sap.ui.model.ClientModel","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.xml.XMLModel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"getObject":{"!description":"Returns the object for the given <code>path<\/code>","!type":"fn(sPath: String, oContext?: Object) -> Object","!category":"function","parameters":{"sPath":"type: string, description: the path to the object","oContext":"type: object, description: the context which will be used to retrieve the object"},"!static":false}},"sap.ui.model.odata.ODataPropertyBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.ODataPropertyBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.PropertyBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext: sap.ui.model.Context, mParameters?: Object)","prototype":"sap.ui.model.odata.ODataPropertyBinding"},"sap.ui.model.odata.AnnotationHelper":{"getNavigationPath":{"!description":"A formatter function to be used in a complex binding inside an XML template view in order to interpret OData V4 annotations. It knows about the following dynamic expressions: <ul> <li>\"14.5.2 Expression edm:AnnotationPath\"<\/li> <li>\"14.5.11 Expression edm:NavigationPropertyPath\"<\/li> <li>\"14.5.12 Expression edm:Path\"<\/li> <li>\"14.5.13 Expression edm:PropertyPath\"<\/li> <\/ul> It returns a binding expression for a navigation path in an OData model, starting at an entity. Currently supports navigation properties. Term casts and annotations of navigation properties terminate the navigation path.\n\nExamples: <pre>\n&lt;template:if test=\"{path: 'facet>Target', formatter: 'sap.ui.model.odata.AnnotationHelper.getNavigationPath'}\">\n    &lt;form:SimpleForm binding=\"{path: 'facet>Target', formatter: 'sap.ui.model.odata.AnnotationHelper.getNavigationPath'}\" />\n&lt;/template:if>\n<\/pre>","!type":"fn(oInterface: sap.ui.core.util.XMLPreprocessor.IContext | sap.ui.model.Context, vRawValue?: Object) -> String","!category":"function","!static":"true"},"gotoFunctionImport":{"!description":"Helper function for a <code>template:with<\/code> instruction that goes to the function import with the name which <code>oContext<\/code> points at.\n\nExample: Assume that \"dataField\" refers to a DataFieldForAction within an OData meta model; the helper function is then called on the \"Action\" property of that data field (which holds an object with the qualified name of the function import in the <code>String<\/code> property) and in turn the path of that function import is assigned to the variable \"function\". <pre>\n  &lt;template:with path=\"dataField>Action\"\n  helper=\"sap.ui.model.odata.AnnotationHelper.gotoFunctionImport\" var=\"function\">\n<\/pre>","!type":"fn(oContext: sap.ui.model.Context) -> String","!category":"function","!static":"true"},"isMultiple":{"!description":"A formatter function to be used in a complex binding inside an XML template view in order to interpret OData V4 annotations. It knows about the following dynamic expressions: <ul> <li>\"14.5.2 Expression edm:AnnotationPath\"<\/li> <li>\"14.5.11 Expression edm:NavigationPropertyPath\"<\/li> <li>\"14.5.12 Expression edm:Path\"<\/li> <li>\"14.5.13 Expression edm:PropertyPath\"<\/li> <\/ul> It returns the information whether the navigation path ends with an association end with multiplicity \"*\". It throws an error if the navigation path has an association end with multiplicity \"*\" which is not the last one. Currently supports navigation properties. Term casts and annotations of navigation properties terminate the navigation path.\n\nExamples: <pre>\n&lt;template:if test=\"{path: 'facet>Target', formatter: 'sap.ui.model.odata.AnnotationHelper.isMultiple'}\">\n<\/pre>","!type":"fn(oInterface: sap.ui.core.util.XMLPreprocessor.IContext | sap.ui.model.Context, vRawValue?: Object) -> String","!category":"function","!static":"true"},"format":{"!description":"A formatter function to be used in a complex binding inside an XML template view in order to interpret OData V4 annotations. It knows about <ul> <li> the \"14.4 Constant Expressions\" for \"edm:Bool\", \"edm:Date\", \"edm:DateTimeOffset\", \"edm:Decimal\", \"edm:Float\", \"edm:Guid\", \"edm:Int\", \"edm:TimeOfDay\". <li> the constant \"14.4.11 Expression edm:String\": This is turned into a fixed text (e.g. <code>\"Width\"<\/code>) or into a data binding expression (e.g. <code> \"{/##/dataServices/schema/0/entityType/1/com.sap.vocabularies.UI.v1.FieldGroup#Dimensions/Data/0/Label/String}\" <\/code>). Data binding expressions are used in case XML template processing has been started with the setting <code>bindTexts : true<\/code>. The purpose is to reference translatable texts from OData V4 annotations, especially for XML template processing at design time. Since 1.31.0, string constants that contain a simple binding <code>\"{@i18n>...}\"<\/code> to the hard-coded model name \"@i18n\" with arbitrary path are not turned into a fixed text, but kept as a data binding expression; this allows local annotation files to refer to a resource bundle for internationalization. <li> the dynamic \"14.5.1 Comparison and Logical Operators\": These are turned into expression bindings to perform the operations at run-time. <li> the dynamic \"14.5.3 Expression edm:Apply\": <ul> <li> \"14.5.3.1.1 Function odata.concat\": This is turned into a data binding expression relative to an entity. <li> \"14.5.3.1.2 Function odata.fillUriTemplate\": This is turned into an expression binding to fill the template at run-time. <li> \"14.5.3.1.3 Function odata.uriEncode\": This is turned into an expression binding to encode the parameter at run-time. <li> Apply functions may be nested arbitrarily. <\/ul> <li> the dynamic \"14.5.6 Expression edm:If\": This is turned into an expression binding to be evaluated at run-time. The expression is a conditional expression like <code>\"{=condition ? expression1 : expression2}\"<\/code>. <li> the dynamic \"14.5.10 Expression edm:Null\": This is turned into a <code>null<\/code> value. In <code>odata.concat<\/code> it is ignored. <li> the dynamic \"14.5.12 Expression edm:Path\" and \"14.5.13 Expression edm:PropertyPath\": This is turned into a data binding relative to an entity, including type information and constraints as available from metadata, e.g. <code>\"{path : 'Name', type : 'sap.ui.model.odata.type.String', constraints : {'maxLength':'255'}}\"<\/code>. Depending on the used type, some additional constraints of this type are set: <ul> <li>Edm.DateTime: The \"displayFormat\" constraint is set to the value of the \"sap:display-format\" annotation of the referenced property. <li>Edm.Decimal: The \"precision\" and \"scale\" constraints are set to the values of the corresponding attributes of the referenced property. The \"minimum\", \"maximum\", \"minimumExclusive\" and \"maximumExlusive\" constraints are set to the values of the corresponding \"Org.OData.Validation.V1\" annotation of the referenced property; note that in this case only constant expressions are supported to determine the annotation value. <li>Edm.String: The \"maxLength\" constraint is set to the value of the corresponding attribute of the referenced property and the \"isDigitSequence\" constraint is set to the value of the \"com.sap.vocabularies.Common.v1.IsDigitSequence\" annotation of the referenced property; note that in this case only constant expressions are supported to determine the annotation value. <\/ul> <\/ul> Unsupported or incorrect values are turned into a string nevertheless, but indicated as such. Proper escaping is used to make sure that data binding syntax is not corrupted. An error describing the problem is logged to the console in such a case.\n\nExample: <pre>\n&lt;Text text=\"{path: 'meta>Value', formatter: 'sap.ui.model.odata.AnnotationHelper.format'}\" />\n<\/pre>","!type":"fn(oInterface: sap.ui.core.util.XMLPreprocessor.IContext | sap.ui.model.Context, vRawValue?: Object) -> String","!category":"function","!static":"true"},"!module":"sap/ui/model/odata/AnnotationHelper","createPropertySetting":{"!description":"Creates a property setting (which is either a constant value or a binding info object) from the given parts and from the optional root formatter function. Each part can have one of the following types: <ul> <li><code>boolean<\/code>, <code>number<\/code>, <code>undefined<\/code>: The part is a constant value.\n\n<li><code>string<\/code>: The part is a data binding expression with complex binding syntax (for example, as created by {@link #.format format}) and is parsed accordingly to create either a constant value or a binding info object. Proper backslash escaping must be used for constant values with curly braces.\n\n<li><code>object<\/code>: The part is a binding info object if it has a \"path\" or \"parts\" property, otherwise it is a constant value. <\/ul> If a binding info object is not the only part and has a \"parts\" property itself, then it must have no other properties except \"formatter\"; this is the case for expression bindings and data binding expressions created by {@link #.format format}.\n\nIf all parts are constant values, the resulting property setting is also a constant value computed by applying the root formatter function to the constant parts once. If at least one part is a binding info object, the resulting property setting is also a binding info object and the root formatter function will be applied again and again to the current values of all parts, no matter whether constant or variable.\n\nNote: The root formatter function should not rely on its <code>this<\/code> value because it depends on how the function is called.\n\nNote: A single data binding expression can be given directly to {@link sap.ui.base.ManagedObject#applySettings applySettings}, no need to call this function first.\n\nExample: <pre>\nfunction myRootFormatter(oValue1, oValue2, sFullName, sGreeting, iAnswer) {\n    return ...; //TODO compute something useful from the given values\n}\n\noSupplierContext = oMetaModel.getMetaContext(\"/ProductSet('HT-1021')/ToSupplier\");\noValueContext = oMetaModel.createBindingContext(\"com.sap.vocabularies.UI.v1.DataPoint/Value\", oSupplierContext);\n\nvPropertySetting =  sap.ui.model.odata.AnnotationHelper.createPropertySetting([\n    sap.ui.model.odata.AnnotationHelper.format(oValueContext),\n    \"{path : 'meta>Value', formatter : 'sap.ui.model.odata.AnnotationHelper.simplePath'}\",\n    \"{:= 'Mr. ' + ${/FirstName} + ' ' + ${/LastName}}\",\n    \"hello, world!\",\n    42\n], myRootFormatter);\n\noControl.applySettings({\"someProperty\" : vPropertySetting});\n<\/pre>","!type":"fn(vParts: [[object Object]], fnRootFormatter?: fn()) -> Object | Object","!category":"function","!static":"true"},"gotoEntitySet":{"!description":"Helper function for a <code>template:with<\/code> instruction that depending on how it is called goes to the entity set with the given name or to the one determined by the last navigation property. Supports the following dynamic expressions: <ul> <li>\"14.5.2 Expression edm:AnnotationPath\"<\/li> <li>\"14.5.11 Expression edm:NavigationPropertyPath\"<\/li> <li>\"14.5.12 Expression edm:Path\"<\/li> <li>\"14.5.13 Expression edm:PropertyPath\"<\/li> <\/ul>\n\nExample: <pre>\n  &lt;template:with path=\"facet>Target\" helper=\"sap.ui.model.odata.AnnotationHelper.gotoEntitySet\" var=\"entitySet\"/>\n  &lt;template:with path=\"associationSetEnd>entitySet\" helper=\"sap.ui.model.odata.AnnotationHelper.gotoEntitySet\" var=\"entitySet\"/>\n<\/pre>","!type":"fn(oContext: sap.ui.model.Context) -> String","!category":"function","!static":"true"},"simplePath":{"!description":"Formatter function that is used in a complex binding inside an XML template view. The function is used to interpret OData V4 annotations, supporting the same annotations as {@link #.format format} but with a simplified output aimed at design-time templating with smart controls.\n\nIn contrast to <code>format<\/code>, \"14.5.12 Expression edm:Path\" or \"14.5.13 Expression edm:PropertyPath\" is turned into a simple binding path without type or constraint information. In certain cases, a complex binding is required to allow for proper escaping of the path.\n\nExample: <pre>\n  &lt;sfi:SmartField value=\"{path: 'meta>Value', formatter: 'sap.ui.model.odata.AnnotationHelper.simplePath'}\"/>\n<\/pre>","!type":"fn(oInterface: sap.ui.core.util.XMLPreprocessor.IContext | sap.ui.model.Context, vRawValue?: Object) -> String","!category":"function","!static":"true"},"resolvePath":{"!description":"Helper function for a <code>template:with<\/code> instruction that resolves a dynamic \"14.5.2 Expression edm:AnnotationPath\", \"14.5.11 Expression edm:NavigationPropertyPath\", \"14.5.12 Expression edm:Path\" or \"14.5.13 Expression edm:PropertyPath\". Currently supports navigation properties and term casts.\n\nExample: <pre>\n  &lt;template:with path=\"meta>Value\" helper=\"sap.ui.model.odata.AnnotationHelper.resolvePath\" var=\"target\">\n<\/pre>","!type":"fn(oContext: sap.ui.model.Context) -> String","!category":"function","!static":"true"},"!description":"A collection of methods which help to consume <a href=\"http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part3-csdl.html\"> OData V4 annotations<\/a> in XML template views. Every context argument must belong to a <code>sap.ui.model.odata.ODataMetaModel<\/code> instance.\n\nFormatter functions like {@link #.format format} and {@link #.simplePath simplePath} can be used in complex bindings to turn OData V4 annotations into texts or data bindings, e.g. <code>&lt;sfi:SmartField value=\"{path : 'meta>Value', formatter : 'sap.ui.model.odata.AnnotationHelper.simplePath'}\"/><\/code>.\n\nHelper functions like {@link #.resolvePath resolvePath} can be used by template instructions in XML template views, e.g. <code>&lt;template:with path=\"meta>Value\" helper=\"sap.ui.model.odata.AnnotationHelper.resolvePath\" var=\"target\"><\/code>.\n\nSince 1.31.0, you DO NOT need to {@link jQuery.sap.require} this module before use.","gotoEntityType":{"!description":"Helper function for a <code>template:with<\/code> instruction that goes to the entity type with the qualified name which <code>oContext<\/code> points at.\n\nExample: Assume that \"entitySet\" refers to an entity set within an OData meta model; the helper function is then called on the \"entityType\" property of that entity set (which holds the qualified name of the entity type) and in turn the path of that entity type is assigned to the variable \"entityType\". <pre>\n  &lt;template:with path=\"entitySet>entityType\" helper=\"sap.ui.model.odata.AnnotationHelper.gotoEntityType\" var=\"entityType\">\n<\/pre>","!type":"fn(oContext: sap.ui.model.Context) -> String","!category":"function","!static":"true"},"!category":"namespace","!helpDescription":"A collection of methods which help to consume <a href=\"http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part3-csdl.html\"> OData V4 annotations<\/a> in XML template views. Every context argument must belong to a <code>sap.ui.model.odata.ODataMetaModel<\/code> instance.\n\nFormatter functions like {@link #.format format} and {@link #.simplePath simplePath} can be used in complex bindings to turn OData V4 annotations into texts or data bindings, e.g. <code>&lt;sfi:SmartField value=\"{path : 'meta>Value', formatter : 'sap.ui.model.odata.AnnotationHelper.simplePath'}\"/><\/code>.\n\nHelper functions like {@link #.resolvePath resolvePath} can be used by template instructions in XML template views, e.g. <code>&lt;template:with path=\"meta>Value\" helper=\"sap.ui.model.odata.AnnotationHelper.resolvePath\" var=\"target\"><\/code>.\n\nSince 1.31.0, you DO NOT need to {@link jQuery.sap.require} this module before use."},"sap.ui.core.BusyIndicatorUtils":{"!category":"namespace","!module":"sap/ui/core/BusyIndicatorUtils"},"jQuery.sap.log.Logger_obj":{"!type":"fn(sDefaultComponent: String)","prototype":"jQuery.sap.log.Logger"},"sap.ui.model.TreeAutoExpandMode":{"Bundled":{"!description":"If supported by a backend provider with analytical capabilities, the requests needed for an automatic node expansion are bundled.","!type":"String","!category":"enum"},"!description":"Different modes for setting the auto expand mode on tree or analytical bindings.","!category":"static class","!module":"sap/ui/model/TreeAutoExpandMode","Sequential":{"!description":"Tree nodes will be expanded in sequence, level by level (Single requests are sent).","!type":"String","!category":"enum"}},"sap.ui.core.Locale_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Locale with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sLocaleId: String)","prototype":"sap.ui.core.Locale"},"sap.ui.model.analytics.odata4analytics.QueryResult_obj":{"!type":"fn(oModel: sap.ui.model.analytics.odata4analytics.Model, oEntityType: sap.ui.model.analytics.odata4analytics.EntityType, oEntitySet: sap.ui.model.analytics.odata4analytics.EntitySet, oParameterization: sap.ui.model.analytics.odata4analytics.Parameterization)","prototype":"sap.ui.model.analytics.odata4analytics.QueryResult"},"sap.ui.model.json.JSONTreeBinding":{"!description":"Tree binding implementation for JSON format.\n\nThe bound data can contain JSON objects and arrays. Both will be used to build the tree structure. You can optionally define a set of arrays to be used for the tree structure in the parameter <code>arrayNames<\/code>. If this parameter is set, all other objects and arrays will be ignored.","!category":"class","!constructorDescription":"Creates a new JSONListBinding.\n\nThis constructor should only be called by subclasses or model implementations, not by application or control code.\nSuch code should use {@link sap.ui.model.json.JSONModel#bindTree JSONModel#bindTree} on the corresponding model instance instead.","!module":"sap/ui/model/json/JSONTreeBinding","!proto":"sap.ui.model.ClientTreeBinding","!helpDescription":"Tree binding implementation for JSON format.\n\nThe bound data can contain JSON objects and arrays. Both will be used to build the tree structure. You can optionally define a set of arrays to be used for the tree structure in the parameter <code>arrayNames<\/code>. If this parameter is set, all other objects and arrays will be ignored."},"sap.ui.model.Binding":{"suspend":{"!description":"Suspends the binding update. No change events will be fired.\n\nA refresh call with bForceUpdate set to true will also update the binding and fire a change in suspended mode. Special operations on bindings, which require updates to work properly (as paging or filtering in list bindings) will also update and cause a change event although the binding is suspended.","!type":"fn()","!category":"function","!static":false},"attachEvents":{"!description":"Attach multiple events.","!type":"fn(oEvents: Object.<string,function()>)","!category":"function","parameters":{"oEvents":"type: Object.<string,function()>, description: undefined"},"!static":false},"isSuspended":{"!description":"Returns true if the binding is suspended or false if not.","!type":"fn() -> Boolean","!category":"function","!static":false},"attachAggregatedDataStateChange":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'AggregatedDataStateChange' event of this <code>sap.ui.model.Binding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: object on which to call the given function."},"!static":false},"!module":"sap/ui/model/Binding","detachDataReceived":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'dataReceived' event of this <code>sap.ui.model.Binding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: object on which to call the given function."},"!static":false},"destroy":{"!description":"Removes all control messages for this binding from the MessageManager in addition to the standard clean-up tasks.","!type":"fn()","!category":"function","!static":false},"fireDataRequested":{"!description":"Fire event dataRequested to attached listeners.","!type":"fn(mArguments: Map)","!category":"function","parameters":{"mArguments":"type: Map, description: the arguments to pass along with the event."},"!static":false},"isRelative":{"!description":"Returns whether the binding is relative, which means it did not start with a /","!type":"fn() -> Boolean","!category":"function","!static":false},"attachDataRequested":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'dataRequested' event of this <code>sap.ui.model.Binding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: object on which to call the given function."},"!static":false},"!category":"class","fireDataReceived":{"!description":"Fire event dataReceived to attached listeners. This event may also be fired when an error occured.","!type":"fn(mArguments: Map)","!category":"function","parameters":{"mArguments":"type: Map, description: the arguments to pass along with the event."},"!static":false},"refresh":{"!description":"Refreshes the binding, check whether the model data has been changed and fire change event if this is the case. For server side models this should refetch the data from the server. To update a control, even if no data has been changed, e.g. to reset a control after failed validation, please use the parameter bForceUpdate.","!type":"fn(bForceUpdate: Boolean)","!category":"function","parameters":{"bForceUpdate":"type: boolean, description: Update the bound control even if no data has been changed"},"!static":false},"detachRefresh":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'refresh' event of this <code>sap.ui.model.Binding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: object on which to call the given function."},"!static":false},"initialize":{"!description":"Initialize the binding. The message should be called when creating a binding. The default implementation calls checkUpdate(true).","!type":"fn()","!category":"function","!static":false},"detachAggregatedDataStateChange":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'AggregatedDataStateChange' event of this <code>sap.ui.model.Binding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: object on which to call the given function."},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.Binding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"isInitial":{"!description":"Returns whether the binding is initial, which means it did not get an initial value yet","!type":"fn() -> Boolean","!category":"function","!static":false},"!constructorDescription":"Constructor for Binding class.","detachChange":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'change' event of this <code>sap.ui.model.Model<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: object on which to call the given function."},"!static":false},"detachDataRequested":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'dataRequested' event of this <code>sap.ui.model.Binding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: object on which to call the given function."},"!static":false},"detachDataStateChange":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'DataStateChange' event of this <code>sap.ui.model.Binding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: object on which to call the given function."},"!static":false},"resume":{"!description":"Resumes the binding update. Change events will be fired again.\n\nWhen the binding is resumed, a change event will be fired immediately, if the data has changed while the binding was suspended. For serverside models, a request to the server will be triggered, if a refresh was requested while the binding was suspended.","!type":"fn()","!category":"function","!static":false},"!description":"The Binding is the object, which holds the necessary information for a data binding, like the binding path and the binding context, and acts like an interface to the model for the control, so it is the event provider for changes in the data model and provides getters for accessing properties or lists.","attachRefresh":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'refresh' event of this <code>sap.ui.model.Binding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: object on which to call the given function."},"!static":false},"attachDataStateChange":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'DataStateChange' event of this <code>sap.ui.model.Binding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: object on which to call the given function."},"!static":false},"attachDataReceived":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'dataReceived' event of this <code>sap.ui.model.Binding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: object on which to call the given function."},"!static":false},"attachChange":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'change' event of this <code>sap.ui.model.Model<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: object on which to call the given function."},"!static":false},"updateRequired":{"!description":"Determines if the binding should be updated by comparing the current model against a specified model.","!type":"fn(oModel: Object) -> Boolean","!category":"function","parameters":{"oModel":"type: object, description: The model instance to compare against"},"!static":false},"detachEvents":{"!description":"Detach multiple events.","!type":"fn(oEvents: Object.<string,function()>)","!category":"function","parameters":{"oEvents":"type: Object.<string,function()>, description: undefined"},"!static":false},"!proto":"sap.ui.base.EventProvider","!helpDescription":"The Binding is the object, which holds the necessary information for a data binding, like the binding path and the binding context, and acts like an interface to the model for the control, so it is the event provider for changes in the data model and provides getters for accessing properties or lists.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.Binding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.test":{"OpaPlugin":"sap.ui.test.OpaPlugin_obj","gherkin":"sap.ui.test.gherkin","PageObjectFactory":"sap.ui.test.PageObjectFactory_obj","matchers":"sap.ui.test.matchers","Opa5":"sap.ui.test.Opa5_obj","Opa":"sap.ui.test.Opa_obj","!category":"namespace","config":{"!description":"the global configuration of Opa. All of the global values can be overwritten in an individual waitFor call. The default values are: <ul> <li>arrangements: A new Opa instance<\/li> <li>actions: A new Opa instance<\/li> <li>assertions: A new Opa instance<\/li> <li>timeout : 15 seconds, 0 for infinite timeout<\/li> <li>pollingInterval: 400 milliseconds<\/li> <li>debugTimeout: 0 seconds, infinite timeout by default. This will be used instead of timeout if running in debug mode.<\/li> <\/ul> You can either directly manipulate the config, or extend it using {@link sap.ui.test.Opa.extendConfig}","!type":"String","!category":"enum"},"opaQunit":{"!description":"QUnit test adapter for opa.js has the same signature as a test of QUnit. Suggested usage: <pre><code>\nsap.ui.require([\"sap/ui/test/Opa5\", \"sap/ui/test/opaQunit\"], function (Opa5, opaTest) {\n\n   Opa5.extendConfig({\n       assertions: new Opa5({\n           checkIfSomethingIsOk : function () {\n               this.waitFor({\n                   success: function () {\n                       Opa5.assert.ok(true, \"Everything is fine\");\n                   }\n               });\n           }\n       })\n   });\n\n   opaTest(\"Should test something\", function (Given, When, Then) {\n      // Implementation of the test\n      Then.checkIfSomethingIsOk();\n   });\n\n});\n<\/code><\/pre>\n\nWhen you require this file, it will also introduce a global variable: opaTest. It will also alter some settings of QUnit.config - testTimout will be increased to 90 if you do not specify your own. QUnit.reorder will be set to false, because OPA tests are often depending on each other.","!type":"fn(testName: String, expected: Number | fn(), callback: fn()) -> QUnit.test","!category":"function","!static":"true"},"actions":"sap.ui.test.actions","OpaExtension":"sap.ui.test.OpaExtension_obj"},"sap.ui.model.odata.v2.ODataListBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.v2.ODataListBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.ListBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oModel: sap.ui.model.odata.v2.ODataModel, sPath: String, oContext: sap.ui.model.Context, aSorters?: [sap.ui.model.Sorter | [object Object]], aFilters?: [sap.ui.model.Filter | [object Object]], mParameters?: map)","prototype":"sap.ui.model.odata.v2.ODataListBinding"},"sap.ui.core.theming.Parameters":{"!description":"A helper used for (read-only) access to CSS parameters at runtime.","get":{"!description":"Returns the current value for one or more theming parameters, depending on the given arguments. <ul> <li>If no parameter is given a key-value map containing all parameters is returned<\/li> <li>If a <code>string<\/code> is given as first parameter the value is returned as a <code>string<\/code><\/li> <li>If an <code>array<\/code> is given as first parameter a key-value map containing all parameters from the <code>array<\/code> is returned<\/li> <\/ul> <p>The returned key-value maps are a copy so changing values in the map does not have any effect<\/p>","!type":"fn(vName: [String | [object Object]], oElement?: sap.ui.core.Element) -> String | Object | undefined","!category":"function","!static":"true"},"!category":"namespace","reset":{"!description":"Resets the CSS parameters which finally will reload the parameters the next time they are queried via the method <code>get<\/code>.","!type":"fn()","!category":"function","!static":"true"},"getActiveScopesFor":{"!description":"Returns the active scope(s) for a given control by looking up the hierarchy.\n\nThe lookup navigates the DOM hierarchy if it's available. Otherwise if controls aren't rendered yet, it navigates the control hierarchy. By navigating the control hierarchy, inner-html elements with the respective scope classes can't get recognized as the Custom Style Class API does only for root elements.","!type":"fn(oElement: Object) -> [[object Object]]","!category":"function","!static":"true"},"!module":"sap/ui/core/theming/Parameters","_getScopes":{"!description":"Returns the scopes from current theming parameters.","!type":"fn(bAvoidLoading?: Boolean) -> Array","!category":"function","!static":"true"},"!helpDescription":"A helper used for (read-only) access to CSS parameters at runtime."},"sap.ui.core.service":{"Service":"sap.ui.core.service.Service_obj","ServiceFactory":"sap.ui.core.service.ServiceFactory_obj","ServiceFactoryRegistry":{"!description":"The service factory registry.","!type":"String","!category":"enum","!module":"sap/ui/core/service/ServiceFactoryRegistry"},"!category":"namespace"},"sap.ui.model.json.JSONModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.json.JSONModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.ClientModel.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oData: Object | String, bObserve: Boolean)","prototype":"sap.ui.model.json.JSONModel"},"sap.ui.core.util.serializer.delegate.XML":{"!description":"XML serializer delegate class.","extend":{"!description":"Creates a new subclass of class sap.ui.core.util.serializer.delegate.XML with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.util.serializer.delegate.Delegate.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"XML serializer delegate class. Called by the serializer instance.","!module":"sap/ui/core/util/serializer/delegate/XML","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.serializer.delegate.XML.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.util.serializer.delegate.Delegate","!helpDescription":"XML serializer delegate class."},"sap.ui.core.mvc.HTMLView_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.mvc.HTMLView with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.mvc.View.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.mvc.HTMLView"},"sap.ui.model.MetaModel":{"!description":"Model implementation for meta models","extend":{"!description":"Creates a new subclass of class sap.ui.model.MetaModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new MetaModel.","!module":"sap/ui/model/MetaModel","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.MetaModel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.Model","!helpDescription":"Model implementation for meta models"},"sap.ui.test.actions.EnterText":{"getClearTextFirst":{"!description":"Gets current value of property {@link #getClearTextFirst clearTextFirst}.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nThe Text that is going to be typed to the control. If you are entering an empty string, the value will be cleared.","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.test.actions.EnterText with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.test.actions.Action.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setClearTextFirst":{"!description":"Sets a new value for property {@link #getClearTextFirst clearTextFirst}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bClearTextFirst: Boolean) -> sap.ui.test.actions.EnterText","!category":"function","parameters":{"bClearTextFirst":"type: boolean, description: New value for property <code>clearTextFirst<\/code>"},"!static":false},"!category":"class","executeOn":{"!description":"Sets focus on given control and triggers Multiple keyboard events on it, one event for every character in the text. Logs an error if control has no focusable dom ref or is not visible.","!type":"fn(oControl: sap.ui.core.Control)","!category":"function","parameters":{"oControl":"type: sap.ui.core.Control, description: the control on which the text event should be entered in."},"!static":false},"!constructorDescription":"The EnterText action is used to simulate a user entering texts to inputs.\nEnterText will be executed on a control's focus dom ref.\nSupported controls are (for other controls this action still might work):\n<ul>\n    <li>sap.m.Input<\/li>\n    <li>sap.m.SearchField<\/li>\n    <li>sap.m.TextArea<\/li>\n<\/ul>\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getClearTextFirst clearTextFirst} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.test.actions.Action#constructor sap.ui.test.actions.Action}\ncan be used as well.","setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nThe Text that is going to be typed to the control. If you are entering an empty string, the value will be cleared.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sText: String) -> sap.ui.test.actions.EnterText","!category":"function","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"},"!static":false},"!module":"sap/ui/test/actions/EnterText","getMetadata":{"!description":"Returns a metadata object for class sap.ui.test.actions.EnterText.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.test.actions.Action"},"sap.ui.core.InvisibleText_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.InvisibleText with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.InvisibleText"},"sap.ui.model.analytics.odata4analytics.SortExpression":{"removeSorter":{"!description":"Removes the order by expression for the given property name from the list of order by expression. If no order by expression with this property name exists the method does nothing.","!type":"fn(sPropertyName: String)","!category":"function","parameters":{"sPropertyName":"type: string, description: The name of the property to be removed from the condition"},"!static":false},"getExpressionsAsUI5SorterArray":{"!description":"Get an array of SAPUI5 Sorter objects corresponding to this expression.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getEntityType":{"!description":"Get description for this entity type","!type":"fn() -> sap.ui.model.analytics.odata4analytics.EntityType","!category":"function","!static":false},"!constructorDescription":"Create a representation of an order by expression for a given entity type. It\ncan be rendered as value for the $orderby system query option.","!module":"sap/ui/model/analytics/odata4analytics","getURIOrderByOptionValue":{"!description":"Get the value for the OData system query option $orderby corresponding to this expression.","!type":"fn(oSelectedPropertyNames: Object) -> String","!category":"function","parameters":{"oSelectedPropertyNames":"type: object, description: Object with properties requested for $select"},"!static":false},"getExpressionAsUI5Sorter":{"!description":"Get the first SAPUI5 Sorter object.","!type":"fn() -> sap.ui.model.Sorter","!category":"function","!static":false},"clear":{"!description":"Clear expression from any sort conditions that may have been set previously","!type":"fn()","!category":"function","!static":false},"!description":"Representation of a $orderby expression for an OData entity type.","!category":"class","addSorter":{"!description":"Add a condition to the order by expression. It replaces any previously specified sort order for the property.","!type":"fn(sPropertyName: String, sSortOrder: sap.ui.model.analytics.odata4analytics.SortOrder) -> sap.ui.model.analytics.odata4analytics.SortExpression","!category":"function","parameters":{"sSortOrder":"type: sap.ui.model.analytics.odata4analytics.SortOrder, description: sorting order used for the condition","sPropertyName":"type: string, description: The name of the property bound in the condition"},"!static":false},"!helpDescription":"Representation of a $orderby expression for an OData entity type.","!proto":"sap.ui.base.Object"},"sap.ui.model.odata.v2.ODataTreeBinding":{"setRootLevel":{"!description":"Sets the rootLevel The root level is the level of the topmost tree nodes, which will be used as an entry point for OData services. This is only possible (and necessary) for OData services implementing the hierarchy annotation specification, or when providing the annotation information locally as a binding parameter. See the constructor for API documentation on this.","!type":"fn(iRootLevel: Number)","!category":"function","parameters":{"iRootLevel":"type: int, description: undefined"},"!static":false},"hasChildren":{"!description":"Returns if the node has child nodes. If the ODataTreeBinding is running with hierarchy annotations, a context with the property values \"expanded\" or \"collapsed\" for the drilldown state property, returns true. Entities with drilldown state \"leaf\" return false.\n\nThis function is not available when the annotation \"hierarchy-node-descendant-count-for\" is exposed on the service.","!type":"fn(oContext: sap.ui.model.Context) -> Boolean","!category":"function","parameters":{"oContext":"type: sap.ui.model.Context, description: the context element of the node"},"!static":false},"sort":{"!description":"Sorts the Tree according to the given Sorter(s). In OperationMode.Client or OperationMode.Auto (if the given threshold is satisfied), the sorters are applied locally on the client.","!type":"fn(aSorters: [[object Object]]) -> sap.ui.model.odata.v2.ODataTreeBinding","!category":"function","parameters":{"aSorters":"type: [object Object][]|sap.ui.model.Sorter, description: the Sorter or an Array of sap.ui.model.Sorter instances"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.v2.ODataTreeBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.TreeBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getRootContexts":{"!description":"Returns root contexts for the tree. You can specify the start index and the length for paging requests. This function is not available when the annotation \"hierarchy-node-descendant-count-for\" is exposed on the service.","!type":"fn(iStartIndex?: Number, iLength?: Number, iThreshold?: Number) -> [[object Object]]","!category":"function","parameters":{"iLength":"type: int, description: the requested amount of contexts. If none given, the default value is the size limit of the underlying sap.ui.model.odata.v2.ODataModel instance.","iStartIndex":"type: int, description: the start index of the requested contexts","iThreshold":"type: int, description: the number of entities which should be retrieved in addition to the given length. A higher threshold reduces the number of backend requests, yet these request blow up in size, since more data is loaded."},"!static":false},"!module":"sap/ui/model/odata/v2/ODataTreeBinding","getRootLevel":{"!description":"Returns the rootLevel","!type":"fn() -> Number","!category":"function","!static":false},"!description":"Tree binding implementation for OData models.\n\n<h3>Hierarchy Annotations<\/h3> To use the v2.ODataTreeBinding with an OData service, which exposes hierarchy annotations, please see the <b>\"SAP Annotations for OData Version 2.0\"<\/b> Specification. The required property annotations, as well as accepted/default values are documented in the specification.\n\nServices which include the <code>hierarchy-node-descendant-count-for<\/code> annotation and expose the data points in a depth-first pre-order sorted manner, can use an optimized auto-expand feature by specifying the <code>numberOfExpandedLevels<\/code> in the binding parameters. This will pre-expand the hierarchy to the given number of levels, with one single initial OData request.\n\nFor services without the <code>hierarchy-node-descendant-count-for<\/code> annotation, the <code>numberOfExpandedLevels<\/code> property is deprecated.\n\n<h3>Navigation Properties<\/h3> <i>Important: The use of navigation properties to build up the hierarchy structure is deprecated and it is recommended to use the hierarchy annotations mentioned above instead.<\/i> In addition to these hierarchy annotations, the ODataTreeBinding also supports (cyclic) references between entities based on navigation properties. To do this you have to specify the binding parameter \"navigation\". The pattern for this is as follows: { entitySetName: \"navigationPropertyName\" }. Example: { \"Employees\": \"toColleagues\" }\n\n<h3>OperationModes<\/h3> For a full definition and explanation of all OData binding OperationModes please see {@link sap.ui.model.odata.OperationMode}.\n\n<h4>In OperationMode.Server<\/h4> Filtering on the ODataTreeBinding is only supported with application filters. However please be aware that this applies only to filters which do not prevent the creation of a hierarchy. So filtering on a property (e.g. a \"Customer\") is fine, as long as the application can ensure that the responses from the backend are sufficient to create a valid hierarchy on the client. Subsequent paging requests for sibiling and child nodes must also return responses since the filters will be sent with every request. Using Control-Filters ({@link sap.ui.model.FilterType}) via the filter() function is not supported for the OperationMode.Server.\n\n<\/h4>OperationMode.Client and OperationMode.Auto<\/h4> The ODataTreeBinding supports Control-Filters only in OperationModes <code>Client<\/code> and <code>Auto<\/code>.\n\nIn these OperationModes, the filters and sorters will be applied on the client, same as for the v2.ODataListBinding.\n\nThe OperationModes <code>Client<\/code> and <code>Auto<\/code> are only supported for services. which expose the hierarchy annotations mentioned above, but do <b>not<\/b> expose the <code>hierarchy-node-descendant-count-for<\/code> annotation. Services with hierarchy annotations including the <code>hierarchy-node-descendant-count-for<\/code> annotation, do NOT support the OperationModes Client and Auto.","getChildCount":{"!description":"Returns the number of child nodes. This function is not available when the annotation \"hierarchy-node-descendant-count-for\" is exposed on the service.","!type":"fn(oContext: Object) -> Number","!category":"function","parameters":{"oContext":"type: Object, description: the context element of the node"},"!static":false},"getDownloadUrl":{"!description":"Get a download URL with the specified format considering the sort/filter/custom parameters.","!type":"fn(sFormat: String) -> String","!category":"function","parameters":{"sFormat":"type: string, description: Value for the $format Parameter"},"!static":false},"!category":"class","getNodeContexts":{"!description":"Returns the contexts of the child nodes for the given context. This function is not available when the annotation \"hierarchy-node-descendant-count-for\" is exposed on the service.","!type":"fn(oContext: sap.ui.model.Context, iStartIndex: Number, iLength: Number, iThreshold: Number) -> [[object Object]]","!category":"function","parameters":{"iLength":"type: int, description: the requested amount of contexts","iStartIndex":"type: int, description: the start index of the requested contexts","iThreshold":"type: int, description: undefined","oContext":"type: sap.ui.model.Context, description: the context for which the child nodes should be retrieved"},"!static":false},"refresh":{"!description":"Refreshes the binding, check whether the model data has been changed and fire change event if this is the case. For server side models this should refetch the data from the server. To update a control, even if no data has been changed, e.g. to reset a control after failed validation, please use the parameter bForceUpdate.","!type":"fn(bForceUpdate?: Boolean, sGroupId?: String)","!category":"function","parameters":{"bForceUpdate":"type: boolean, description: Update the bound control even if no data has been changed","sGroupId":"type: string, description: The group Id for the refresh"},"!static":false},"filter":{"!description":"Applies the given filters to the ODataTreeBinding. Please note that \"Control\" filters are not supported for OperationMode.Server, here only \"Application\" filters are allowed. Filters given via the constructor are always Application filters and will be send with every backend-request. Please see the constructor documentation for more information.\n\nSince 1.34.0 complete clientside filtering is supported for OperationMode.Client and in OperationMode.Auto, in case the backend-count is lower than the threshold. In this case all control and application filters will be applied on the client. See also: {@link sap.ui.model.odata.OperationMode.Auto}, {@link sap.ui.model.FilterType}.\n\nFor the OperationMode.Client and OperationMode.Auto, you may also specify the \"useServersideApplicationFilters\" constructor binding parameter. If this is set, the Application filters will always be applied on the backend, and thus trigger an OData request. Please see the constructor documentation for more information.","!type":"fn(aFilters: [[object Object]], sFilterType: sap.ui.model.FilterType) -> sap.ui.model.odata.v2.ODataTreeBinding","!category":"function","parameters":{"sFilterType":"type: sap.ui.model.FilterType, description: Type of the filter which should be adjusted, if it is not given, the standard behaviour FilterType.Client applies","aFilters":"type: [object Object][]|sap.ui.model.Filter, description: undefined"},"!static":false},"initialize":{"!description":"Initialize binding. Fires a change if data is already available ($expand) or a refresh. If metadata is not yet available, do nothing, method will be called again when metadata is loaded.","!type":"fn() -> sap.ui.model.odata.v2.ODataTreeBinding","!category":"function","!static":false},"!helpDescription":"Tree binding implementation for OData models.\n\n<h3>Hierarchy Annotations<\/h3> To use the v2.ODataTreeBinding with an OData service, which exposes hierarchy annotations, please see the <b>\"SAP Annotations for OData Version 2.0\"<\/b> Specification. The required property annotations, as well as accepted/default values are documented in the specification.\n\nServices which include the <code>hierarchy-node-descendant-count-for<\/code> annotation and expose the data points in a depth-first pre-order sorted manner, can use an optimized auto-expand feature by specifying the <code>numberOfExpandedLevels<\/code> in the binding parameters. This will pre-expand the hierarchy to the given number of levels, with one single initial OData request.\n\nFor services without the <code>hierarchy-node-descendant-count-for<\/code> annotation, the <code>numberOfExpandedLevels<\/code> property is deprecated.\n\n<h3>Navigation Properties<\/h3> <i>Important: The use of navigation properties to build up the hierarchy structure is deprecated and it is recommended to use the hierarchy annotations mentioned above instead.<\/i> In addition to these hierarchy annotations, the ODataTreeBinding also supports (cyclic) references between entities based on navigation properties. To do this you have to specify the binding parameter \"navigation\". The pattern for this is as follows: { entitySetName: \"navigationPropertyName\" }. Example: { \"Employees\": \"toColleagues\" }\n\n<h3>OperationModes<\/h3> For a full definition and explanation of all OData binding OperationModes please see {@link sap.ui.model.odata.OperationMode}.\n\n<h4>In OperationMode.Server<\/h4> Filtering on the ODataTreeBinding is only supported with application filters. However please be aware that this applies only to filters which do not prevent the creation of a hierarchy. So filtering on a property (e.g. a \"Customer\") is fine, as long as the application can ensure that the responses from the backend are sufficient to create a valid hierarchy on the client. Subsequent paging requests for sibiling and child nodes must also return responses since the filters will be sent with every request. Using Control-Filters ({@link sap.ui.model.FilterType}) via the filter() function is not supported for the OperationMode.Server.\n\n<\/h4>OperationMode.Client and OperationMode.Auto<\/h4> The ODataTreeBinding supports Control-Filters only in OperationModes <code>Client<\/code> and <code>Auto<\/code>.\n\nIn these OperationModes, the filters and sorters will be applied on the client, same as for the v2.ODataListBinding.\n\nThe OperationModes <code>Client<\/code> and <code>Auto<\/code> are only supported for services. which expose the hierarchy annotations mentioned above, but do <b>not<\/b> expose the <code>hierarchy-node-descendant-count-for<\/code> annotation. Services with hierarchy annotations including the <code>hierarchy-node-descendant-count-for<\/code> annotation, do NOT support the OperationModes Client and Auto.","!proto":"sap.ui.model.TreeBinding","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.v2.ODataTreeBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.CSSSize":{"!description":"A string type that represents CSS size values.\n\nThe CSS specifications calls this the <code>'&lt;length&gt; type'<\/code>. Allowed values are CSS sizes like \"1px\" or \"2em\" or \"50%\". The special values <code>auto<\/code> and <code>inherit<\/code> are also accepted as well as mathematical expressions using the CSS3 <code>calc(<i>expression<\/i>)<\/code> operator.\n\nNote that CSS does not allow all these values for every CSS property representing a size. E.g. <code>padding-left<\/code> doesn't allow the value <code>auto<\/code>. So even if a value is accepted by <code>sap.ui.core.CSSSize<\/code>, it still might have no effect in a specific context. In other words: UI5 controls usually don't extend the range of allowed values in CSS.\n\n<b>Units<\/b>\n\nValid font-relative units are <code>em, ex<\/code> and <code>rem<\/code>. Supported absolute units are <code>cm, mm, in, pc, pt<\/code> and <code>px<\/code>. Other units are not supported yet.\n\n<b>Mathematical Expressions<\/b>\n\nExpressions inside the <code>calc()<\/code> operator are only roughly checked for validity. Not every value that this type accepts might be a valid expression in the sense of the CSS spec. But vice versa, any expression that is valid according to the spec should be accepted by this type. The current implementation is based on the {@link http://dev.w3.org/csswg/css-values-3/#calc-syntax CSS3 Draft specification from 22 April 2015}.\n\nNoteworthy details: <ul> <li>whitespace is mandatory around a '-' or '+' operator and optional otherwise<\/li> <li>parentheses are accepted but not checked for being balanced (a limitation of regexp based checks)<\/li> <li>semantic constraints like type restrictions are not checked<\/li> <\/ul>\n\nFuture versions of UI5 might check <code>calc()<\/code> expressions in more detail, so applications should not assume that a value, that is invalid according to the CSS spec but currently accepted by this type still will be accepted by future versions of this type.","!category":"namespace","!module":"sap/ui/core/library","!helpDescription":"A string type that represents CSS size values.\n\nThe CSS specifications calls this the <code>'&lt;length&gt; type'<\/code>. Allowed values are CSS sizes like \"1px\" or \"2em\" or \"50%\". The special values <code>auto<\/code> and <code>inherit<\/code> are also accepted as well as mathematical expressions using the CSS3 <code>calc(<i>expression<\/i>)<\/code> operator.\n\nNote that CSS does not allow all these values for every CSS property representing a size. E.g. <code>padding-left<\/code> doesn't allow the value <code>auto<\/code>. So even if a value is accepted by <code>sap.ui.core.CSSSize<\/code>, it still might have no effect in a specific context. In other words: UI5 controls usually don't extend the range of allowed values in CSS.\n\n<b>Units<\/b>\n\nValid font-relative units are <code>em, ex<\/code> and <code>rem<\/code>. Supported absolute units are <code>cm, mm, in, pc, pt<\/code> and <code>px<\/code>. Other units are not supported yet.\n\n<b>Mathematical Expressions<\/b>\n\nExpressions inside the <code>calc()<\/code> operator are only roughly checked for validity. Not every value that this type accepts might be a valid expression in the sense of the CSS spec. But vice versa, any expression that is valid according to the spec should be accepted by this type. The current implementation is based on the {@link http://dev.w3.org/csswg/css-values-3/#calc-syntax CSS3 Draft specification from 22 April 2015}.\n\nNoteworthy details: <ul> <li>whitespace is mandatory around a '-' or '+' operator and optional otherwise<\/li> <li>parentheses are accepted but not checked for being balanced (a limitation of regexp based checks)<\/li> <li>semantic constraints like type restrictions are not checked<\/li> <\/ul>\n\nFuture versions of UI5 might check <code>calc()<\/code> expressions in more detail, so applications should not assume that a value, that is invalid according to the CSS spec but currently accepted by this type still will be accepted by future versions of this type."},"sap.ui.model.type.Currency_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.type.Currency with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.CompositeType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.type.Currency"},"sap.ui.model.analytics.odata4analytics.EntitySet":{"!description":"Representation of an OData entity set.","getEntityType":{"!description":"Get entity type used for this entity set","!type":"fn() -> Object","!category":"function","!static":false},"!category":"class","getSetDescription":{"!description":"Get full description for this entity set","!type":"fn() -> Object","!category":"function","!static":false},"!constructorDescription":"Create a representation of an OData entity set in the context of an analytic\nquery. Do not create your own instances.","!module":"sap/ui/model/analytics/odata4analytics","getUpdatablePropertyNameSet":{"!description":"Get names of properties in this entity set that can be updated","!type":"fn() -> Object","!category":"function","!static":false},"getQName":{"!description":"Get the fully qualified name for this entity type","!type":"fn() -> String","!category":"function","!static":false},"!proto":"sap.ui.base.Object","!helpDescription":"Representation of an OData entity set."},"sap.ui.core.message":{"MessageParser":"sap.ui.core.message.MessageParser_obj","MessageManager":"sap.ui.core.message.MessageManager_obj","Message":"sap.ui.core.message.Message_obj","ControlMessageProcessor":"sap.ui.core.message.ControlMessageProcessor_obj","!category":"namespace","!module":"sap/ui/core/message/MessageProcessor","MessageProcessor":"sap.ui.core.message.MessageProcessor_obj"},"sap.ui.core.Item":{"setTextDirection":{"!description":"Sets a new value for property {@link #getTextDirection textDirection}.\n\nOptions are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Inherit<\/code>.","!type":"fn(sTextDirection: sap.ui.core.TextDirection) -> sap.ui.core.Item","!category":"function","parameters":{"sTextDirection":"type: sap.ui.core.TextDirection, description: New value for property <code>textDirection<\/code>"},"!static":false},"getKey":{"!description":"Gets current value of property {@link #getKey key}.\n\nCan be used as input for subsequent actions.","!type":"fn() -> String","!category":"function","!static":false},"getTextDirection":{"!description":"Gets current value of property {@link #getTextDirection textDirection}.\n\nOptions are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control.\n\nDefault value is <code>Inherit<\/code>.","!type":"fn() -> sap.ui.core.TextDirection","!category":"function","!static":false},"getEnabled":{"!description":"Gets current value of property {@link #getEnabled enabled}.\n\nEnabled items can be selected.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.Item with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new Item.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getKey key} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nThe text to be displayed for the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!type":"fn(sText: String) -> sap.ui.core.Item","!category":"function","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"},"!static":false},"!module":"sap/ui/core/Item","setKey":{"!description":"Sets a new value for property {@link #getKey key}.\n\nCan be used as input for subsequent actions.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sKey: String) -> sap.ui.core.Item","!category":"function","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"},"!static":false},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nThe text to be displayed for the item.\n\nDefault value is <code>empty string<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"!description":"A control base type.","!category":"class","setEnabled":{"!description":"Sets a new value for property {@link #getEnabled enabled}.\n\nEnabled items can be selected.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bEnabled: Boolean) -> sap.ui.core.Item","!category":"function","parameters":{"bEnabled":"type: boolean, description: New value for property <code>enabled<\/code>"},"!static":false},"!helpDescription":"A control base type.","!proto":"sap.ui.core.Element","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.Item.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.model.odata.type.Int_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Int with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.Int"},"sap.ui.model.odata.v4.ODataPropertyBinding":{"suspend":{"!description":"Method not supported","!type":"fn()","!category":"function","!static":false},"requestValueListInfo":{"!description":"Requests information to retrieve a value list for this property.","!type":"fn() -> Promise","!category":"function","!static":false},"getValue":{"!description":"Returns the current value.","!type":"fn() -> Object","!category":"function","!static":false},"setType":{"!description":"Sets the optional type and internal type for this binding; used for formatting and parsing. Fires a change event if the type has changed.","!type":"fn(oType: sap.ui.model.Type, sInternalType: String)","!category":"function","parameters":{"oType":"type: sap.ui.model.Type, description: The type for this binding","sInternalType":"type: string, description: The internal type of the element property which owns this binding, for example \"any\", \"boolean\", \"float\", \"int\", \"string\"; see {@link sap.ui.model.odata.type} for more information"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.v4.ODataPropertyBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.PropertyBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"isInitial":{"!description":"Method not supported","!type":"fn()","!category":"function","!static":false},"resetChanges":{"!description":"Resets all pending changes of this binding, see {@link #hasPendingChanges}. Resets also invalid user input.","!type":"fn()","!category":"function","!static":false},"requestValueListType":{"!description":"Determines which type of value list exists for this property.","!type":"fn() -> Promise","!category":"function","!static":false},"setValue":{"!description":"Sets the new current value and updates the cache. If the value cannot be accepted or cannot be updated on the server, an error is logged to the console and added to the message manager as a technical message.","!type":"fn(vValue: Object, sGroupId?: String)","!category":"function","parameters":{"sGroupId":"type: string, description: The group ID to be used for this update call; if not specified, the update group ID for this binding (or its relevant parent binding) is used, see {@link sap.ui.model.odata.v4.ODataPropertyBinding#constructor}. Valid values are <code>undefined<\/code>, '$auto', '$direct' or application group IDs as specified in {@link sap.ui.model.odata.v4.ODataModel#submitBatch}.","vValue":"type: any, description: The new value which must be primitive"},"!static":false},"!constructorDescription":"Do <strong>NOT<\/strong> call this private constructor, but rather use\n{@link sap.ui.model.odata.v4.ODataModel#bindProperty} instead!","!module":"sap/ui/model/odata/v4/ODataPropertyBinding","getRootBinding":{"!description":"Returns the root binding of this binding's hierarchy, see binding {@link topic:54e0ddf695af4a6c978472cecb01c64d Initialization and Read Requests}.","!type":"fn() -> sap.ui.model.odata.v4.ODataContextBinding | sap.ui.model.odata.v4.ODataListBinding | sap.ui.model.odata.v4.ODataPropertyBinding","!category":"function","!static":false},"destroy":{"!description":"Destroys the object. The object must not be used anymore after this function was called.","!type":"fn()","!category":"function","!static":false},"resume":{"!description":"Method not supported","!type":"fn()","!category":"function","!static":false},"!description":"Property binding for an OData V4 model. An event handler can only be attached to this binding for the following events: 'change', 'dataReceived', and 'dataRequested'. For unsupported events, an error is thrown.","!category":"class","toString":{"!description":"Returns a string representation of this object including the binding path. If the binding is relative, the parent path is also given, separated by a '|'.","!type":"function toString() { [native code for Array.toString, arity=0] }\n) -> String","!category":"function","!static":false},"hasPendingChanges":{"!description":"Returns <code>true<\/code> if this binding or its dependent bindings have pending changes, meaning updates that have not yet been successfully sent to the server.","!type":"fn() -> Boolean","!category":"function","!static":false},"refresh":{"!description":"Refreshes the binding. Prompts the model to retrieve data from the server using the given group ID and notifies the control that new data is available.\n\nRefresh is supported for bindings which are not relative to a {@link sap.ui.model.odata.v4.Context} and whose root binding is not suspended.\n\nNote: When calling {@link #refresh} multiple times, the result of the request triggered by the last call determines the binding's data; it is <b>independent<\/b> of the order of calls to {@link sap.ui.model.odata.v4.ODataModel#submitBatch} with the given group ID.\n\nIf there are pending changes, an error is thrown. Use {@link #hasPendingChanges} to check if there are pending changes. If there are changes, call {@link sap.ui.model.odata.v4.ODataModel#submitBatch} to submit the changes or {@link sap.ui.model.odata.v4.ODataModel#resetChanges} to reset the changes before calling {@link #refresh}.","!type":"fn(sGroupId?: String)","!category":"function","parameters":{"sGroupId":"type: string, description: The group ID to be used for refresh; if not specified, the group ID for this binding is used.\n\nValid values are <code>undefined<\/code>, '$auto', '$direct' or application group IDs as specified in {@link sap.ui.model.odata.v4.ODataModel#submitBatch}."},"!static":false},"getValueListType":{"!description":"Determines which type of value list exists for this property.","!type":"fn() -> sap.ui.model.odata.v4.ValueListType","!category":"function","!static":false},"!helpDescription":"Property binding for an OData V4 model. An event handler can only be attached to this binding for the following events: 'change', 'dataReceived', and 'dataRequested'. For unsupported events, an error is thrown.","!proto":"sap.ui.model.PropertyBinding","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.v4.ODataPropertyBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.Manifest_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Manifest with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oManifest: Object, mOptions?: Object)","prototype":"sap.ui.core.Manifest"},"sap.ui.core.SeparatorItem":{"!description":"An item that provides a visual separation. It borrows all its methods from the classes sap.ui.core.Item, sap.ui.core.Element, sap.ui.base.EventProvider, and sap.ui.base.Object.","extend":{"!description":"Creates a new subclass of class sap.ui.core.SeparatorItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new SeparatorItem.","!module":"sap/ui/core/SeparatorItem","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.SeparatorItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Item","!helpDescription":"An item that provides a visual separation. It borrows all its methods from the classes sap.ui.core.Item, sap.ui.core.Element, sap.ui.base.EventProvider, and sap.ui.base.Object."},"sap.ui.test.Opa5_obj":{"!type":"fn()","prototype":"sap.ui.test.Opa5"},"sap.ui.model.type.DateTimeInterval":{"!description":"This class represents the DateTime interval composite type.","extend":{"!description":"Creates a new subclass of class sap.ui.model.type.DateTimeInterval with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.type.DateInterval.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a DateTime interval type.","!module":"sap/ui/model/type/DateTimeInterval","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.type.DateTimeInterval.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.type.DateInterval","!helpDescription":"This class represents the DateTime interval composite type."},"sap.ui.core.util.serializer":{"ViewSerializer":"sap.ui.core.util.serializer.ViewSerializer_obj","HTMLViewSerializer":"sap.ui.core.util.serializer.HTMLViewSerializer_obj","!category":"namespace","XMLViewSerializer":"sap.ui.core.util.serializer.XMLViewSerializer_obj","Serializer":"sap.ui.core.util.serializer.Serializer_obj","delegate":"sap.ui.core.util.serializer.delegate"},"sap.ui.core.History_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.History with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.History"},"sap.ui.model.odata.type.Int":{"!description":"This is an abstract base class for integer-based <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> OData primitive types<\/a> like <code>Edm.Int16<\/code> or <code>Edm.Int32<\/code>.","validateValue":{"!description":"Validates whether the given value in model representation is valid and meets the defined constraints.","!type":"fn(iValue: Number)","!category":"function","parameters":{"iValue":"type: number, description: the value to be validated"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Int with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"formatValue":{"!description":"Formats the given value to the given target type. When formatting to <code>string<\/code> the format options are used.","!type":"fn(iValue: Number, sTargetType: String) -> Number | String","!category":"function","parameters":{"iValue":"type: number, description: the value in model representation to be formatted","sTargetType":"type: string, description: the target type; may be \"any\", \"int\", \"float\", \"string\", or a type with one of these types as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}. See {@link sap.ui.model.odata.type} for more information."},"!static":false},"!category":"class","!constructorDescription":"Constructor for a new <code>Int<\/code>.","!module":"sap/ui/model/odata/type/Int","parseValue":{"!description":"Parses the given value, which is expected to be of the given source type, to an Int in number representation.","!type":"fn(vValue: Number | String, sSourceType: String) -> Number","!category":"function","parameters":{"sSourceType":"type: string, description: the source type (the expected type of <code>vValue<\/code>); may be \"float\", \"int\", \"string\", or a type with one of these types as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}. See {@link sap.ui.model.odata.type} for more information.","vValue":"type: number|string, description: the value to be parsed. The empty string and <code>null<\/code> are parsed to <code>null<\/code>."},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.Int.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.odata.type.ODataType","!helpDescription":"This is an abstract base class for integer-based <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> OData primitive types<\/a> like <code>Edm.Int16<\/code> or <code>Edm.Int32<\/code>."},"sap.ui.model.odata.type.Date":{"!description":"This class represents the OData V4 primitive type <code>Edm.Date<\/code>.\n\nIn {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>string<\/code> in the format \"yyyy-mm-dd\".","validateValue":{"!description":"Validates whether the given value in model representation is valid and meets the given constraints.","!type":"fn(sValue: String)","!category":"function","parameters":{"sValue":"type: string, description: the value to be validated"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Date with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function","!static":false},"formatValue":{"!description":"Formats the given value to the given target type.","!type":"fn(sValue: String, sTargetType: String) -> String","!category":"function","parameters":{"sValue":"type: string, description: the value to be formatted","sTargetType":"type: string, description: the target type; may be \"any\", \"string\", or a type with one of these types as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}. See {@link sap.ui.model.odata.type} for more information."},"!static":false},"!category":"class","!constructorDescription":"Constructor for an OData primitive type <code>Edm.Date<\/code>.","!module":"sap/ui/model/odata/type/Date","parseValue":{"!description":"Parses the given value to a date.","!type":"fn(sValue: String, sSourceType: String) -> String","!category":"function","parameters":{"sValue":"type: string, description: the value to be parsed, maps <code>\"\"<\/code> to <code>null<\/code>","sSourceType":"type: string, description: the source type (the expected type of <code>sValue<\/code>); must be \"string\", or a type with \"string\" as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}. See {@link sap.ui.model.odata.type} for more information."},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.Date.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.odata.type.ODataType","!helpDescription":"This class represents the OData V4 primitive type <code>Edm.Date<\/code>.\n\nIn {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>string<\/code> in the format \"yyyy-mm-dd\"."},"sap.ui.Device":{"os":"sap.ui.Device.os","orientation":"sap.ui.Device.orientation","system":"sap.ui.Device.system","!description":"Device and Feature Detection API: Provides information about the used browser / device and cross platform support for certain events like media queries, orientation change or resizing.\n\nThis API is independent from any other part of the UI5 framework. This allows it to be loaded beforehand, if it is needed, to create the UI5 bootstrap dynamically depending on the capabilities of the browser or device.","support":"sap.ui.Device.support","!category":"namespace","browser":"sap.ui.Device.browser","!module":"sap/ui/Device","media":"sap.ui.Device.media","resize":"sap.ui.Device.resize","!helpDescription":"Device and Feature Detection API: Provides information about the used browser / device and cross platform support for certain events like media queries, orientation change or resizing.\n\nThis API is independent from any other part of the UI5 framework. This allows it to be loaded beforehand, if it is needed, to create the UI5 bootstrap dynamically depending on the capabilities of the browser or device."},"sap.ui.core.Control_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Control with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.Control"},"sap.ui.core.ScrollBar_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.ScrollBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.ScrollBar"},"sap.ui.core.ws.SapPcpWebSocket_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.ws.SapPcpWebSocket with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.ws.WebSocket.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sUrl: String, aProtocols?: Array)","prototype":"sap.ui.core.ws.SapPcpWebSocket"},"sap.ui.model.odata.type.Int32_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Int32 with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.Int.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.Int32"},"sap.ui.model.odata.type.DateTimeBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.DateTimeBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.DateTimeBase"},"sap.ui.core.service.Service_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.service.Service with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oServiceContext: Object)","prototype":"sap.ui.core.service.Service"},"sap.ui.model.analytics.BatchResponseCollector":{"!description":"Simple Response Collection Component, collects the responses for each sub-request inside a bigger batch request.\n\nAlso handles clean-up after all responses (either success or error) have been collected. Instantiated in AnalyticalBinding.prototype._executeBatchRequest()","error":{"!description":"Convenience function to collect an error response.\n\nInternally BatchResponseCollector#collect is called, the second parameter is set to BatchResponseCollector.TYPE_ERROR","!type":"fn(oResponse: Object)","!category":"function","parameters":{"oResponse":"type: object, description: the erroneous response object"},"!static":false},"setup":{"!description":"Setup-Function to initialize/reset the BatchResponseCollector.","!type":"fn(mParams?: Object)","!category":"function","parameters":{"mParams":"type: object, description: optional Setup-Parameter"},"!static":false},"!category":"class","!constructorDescription":"Constructor for a batch response collecting component.","!module":"sap/ui/model/analytics/BatchResponseCollector","success":{"!description":"Convenience function to collect a success response.\n\nInternally BatchResponseCollector#collect is called with second parameter BatchResponseCollector.TYPE_SUCCESS","!type":"fn(oResponse: Object)","!category":"function","parameters":{"oResponse":"type: object, description: the successful response, which should be collected"},"!static":false},"collect":{"!description":"Collects responses of type BatchResponseCollector.TYPE_SUCCESS and BatchResponseCollector.TYPE_ERROR.\n\nKeeps track of all collected responses and fires the necessary events after all responses for the requests, given in the constructor, have returned.","!type":"fn(oResponse: Object, sResponseType?: String)","!category":"function","parameters":{"oResponse":"type: object, description: the response which should be collected","sResponseType":"type: string, description: the type of the response, either BatchResponseCollector.TYPE_SUCCESS or BatchResponseCollector.TYPE_ERROR"},"!static":false},"!proto":"sap.ui.base.Object","!helpDescription":"Simple Response Collection Component, collects the responses for each sub-request inside a bigger batch request.\n\nAlso handles clean-up after all responses (either success or error) have been collected. Instantiated in AnalyticalBinding.prototype._executeBatchRequest()"},"sap.ui.base.ObjectPool_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.base.ObjectPool with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oObjectClass: fn())","prototype":"sap.ui.base.ObjectPool"},"sap.ui.test.matchers.PropertyStrictEquals_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.test.matchers.PropertyStrictEquals with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(mSettings: Object)","prototype":"sap.ui.test.matchers.PropertyStrictEquals"},"sap.ui.core.util.MockServer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.MockServer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object, oScope?: Object)","prototype":"sap.ui.core.util.MockServer"},"sap.ui.model.type.DateTime":{"!description":"This class represents datetime simple types.","extend":{"!description":"Creates a new subclass of class sap.ui.model.type.DateTime with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.type.Date.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a DateTime type.","!module":"sap/ui/model/type/DateTime","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.type.DateTime.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.type.Date","!helpDescription":"This class represents datetime simple types."},"sap.ui.core.service.ServiceFactory_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.service.ServiceFactory with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(vService?: fn() | Object)","prototype":"sap.ui.core.service.ServiceFactory"},"sap.ui.model.PropertyBinding":{"getValue":{"!description":"Returns the current value of the bound target","!type":"fn() -> Object","!category":"function","!static":false},"setBindingMode":{"!description":"Sets the binding mode","!type":"fn(sBindingMode: sap.ui.model.BindingMode)","!category":"function","parameters":{"sBindingMode":"type: sap.ui.model.BindingMode, description: the binding mode"},"!static":false},"setType":{"!description":"Sets the optional type and internal type for the binding. The type and internal type are used to do the parsing/formatting correctly. The internal type is the property type of the element which the value is formatted to.","!type":"fn(oType: sap.ui.model.Type, sInternalType: String)","!category":"function","parameters":{"oType":"type: sap.ui.model.Type, description: the type for the binding","sInternalType":"type: string, description: the internal type of the element property which this binding is bound against."},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.PropertyBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Binding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getFormatter":{"!description":"Returns the formatter function","!type":"fn() -> fn()","!category":"function","!static":false},"setValue":{"!description":"Sets the value for this binding. A model implementation should check if the current default binding mode permits setting the binding value and if so set the new value also in the model.","!type":"fn(oValue: Object)","!category":"function","parameters":{"oValue":"type: object, description: the value to set for this binding"},"!static":false},"!constructorDescription":"Constructor for PropertyBinding","!module":"sap/ui/model/PropertyBinding","getExternalValue":{"!description":"Returns the current external value of the bound target which is formatted via a type or formatter function.","!type":"fn() -> Object","!category":"function","!static":false},"resume":{"!description":"Resumes the binding update. Change events will be fired again.\n\nWhen the binding is resumed and the control value was changed in the meantime, the control value will be set to the current value from the model and a change event will be fired.","!type":"fn()","!category":"function","!static":false},"getType":{"!description":"Returns the type if any for the binding.","!type":"fn() -> sap.ui.model.Type","!category":"function","!static":false},"setFormatter":{"!description":"Sets the optional formatter function for the binding.","!type":"fn(fnFormatter: fn())","!category":"function","parameters":{"fnFormatter":"type: function, description: the formatter function for the binding"},"!static":false},"setExternalValue":{"!description":"Sets the value for this binding. The value is parsed and validated against its type and then set to the binding. A model implementation should check if the current default binding mode permits setting the binding value and if so set the new value also in the model.","!type":"fn(oValue: Object)","!category":"function","parameters":{"oValue":"type: object, description: the value to set for this binding"},"!static":false},"!description":"The PropertyBinding is used to access single data values in the data model.","getBindingMode":{"!description":"Returns the binding mode","!type":"fn() -> sap.ui.model.BindingMode","!category":"function","!static":false},"setInternalValue":{"!description":"Sets the value for this binding with the related JavaScript primitive type. The value is formatted with the {@link sap.ui.model.SimpleType#getModelFormat model format} and validated against its type and then set to the model.","!type":"fn(oValue: Object)","!category":"function","parameters":{"oValue":"type: object, description: the value to set for this binding"},"!static":false},"getInternalValue":{"!description":"Returns the related JavaScript primitive value of the bound target which is parsed by the {@link sap.ui.model.SimpleType#getModelFormat model format} of this binding's type. If this binding doesn't have a type, the original value which is stored in the model is returned.\n\nThis method will be used when it's included in a {@link sap.ui.model.CompositeBinding CompositeBinding} and the CompositeBinding needs to have the related JavaScript primitive values for its type or formatter.","!type":"fn() -> Object","!category":"function","!static":false},"!category":"class","!helpDescription":"The PropertyBinding is used to access single data values in the data model.","!proto":"sap.ui.model.Binding","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.PropertyBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.message.MessageProcessor":{"checkMessage":{"!description":"Implement in inheriting classes","!type":"fn() -> sap.ui.model.ListBinding","!category":"function","!static":false},"detachMessageChange":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'sap.ui.core.message.MessageProcessor' event of this <code>sap.ui.core.message.MessageProcessor<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.message.MessageProcessor","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.message.MessageProcessor with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new MessageProcessor","!module":"sap/ui/core/message/MessageProcessor","destroy":{"!description":"Destroys the MessageProcessor Instance","!type":"fn()","!category":"function","!static":false},"fireMessageChange":{"!description":"Fire event messageChange to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.core.message.MessageProcessor","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"attachMessageChange":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'messageChange' event of this <code>sap.ui.core.message.MessageProcessor<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.message.MessageProcessor","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, this MessageProcessor is used."},"!static":false},"setMessages":{"!description":"Implement in inheriting classes","!type":"fn(vMessages: map)","!category":"function","parameters":{"vMessages":"type: map, description: map of messages: {'target': [array of messages],...}"},"!static":false},"!description":"This is an abstract base class for MessageProcessor objects.","!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.message.MessageProcessor.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!helpDescription":"This is an abstract base class for MessageProcessor objects.","!proto":"sap.ui.base.EventProvider","getId":{"!description":"Returns the ID of the MessageProcessor instance","!type":"fn() -> String","!category":"function","!static":false}},"sap.ui.core.format.FileSizeFormat":{"!description":"The FileSizeFormat is a static class for formatting and parsing numeric file size values according to a set of format options.\n\nSupports the same options as {@link sap.ui.core.format.NumberFormat.getFloatInstance NumberFormat.getFloatInstance} For format options which are not specified default values according to the type and locale settings are used.\n\nSupported format options (additional to NumberFormat): <ul> <li>binaryFilesize: if true, base 2 is used: 1 Kibibyte = 1024 Byte, ... , otherwise base 10 is used: 1 Kilobyte = 1000 Byte (Default is false)<\/li> <\/ul>","extend":{"!description":"Creates a new subclass of class sap.ui.core.format.FileSizeFormat with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","format":{"!description":"Format a filesize (in bytes) according to the given format options.","!type":"fn(oValue: Number | String) -> String","!category":"function","parameters":{"oValue":"type: number|string, description: the number (or hex string) to format"},"!static":false},"!constructorDescription":"Constructor for FileSizeFormat - must not be used: To get a FileSizeFormat instance, please use getInstance.","parse":{"!description":"Parse a string which is formatted according to the given format options.","!type":"fn(sValue: String) -> Number","!category":"function","parameters":{"sValue":"type: string, description: the string containing a formatted filesize value"},"!static":false},"getInstance":{"!description":"Get an instance of the FileSizeFormat, which can be used for formatting.\n\nIf no locale is given, the currently configured {@link sap.ui.core.Configuration.FormatSettings#getFormatLocale formatLocale} will be used.","!type":"fn(oFormatOptions?: Object, oLocale?: sap.ui.core.Locale) -> sap.ui.core.format.FileSizeFormat","!category":"function","parameters":{"oFormatOptions":"type: object, description: Object which defines the format options","oLocale":"type: sap.ui.core.Locale, description: Locale to get the formatter for"},"!static":true},"!module":"sap/ui/core/format/FileSizeFormat","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.format.FileSizeFormat.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.base.Object","!helpDescription":"The FileSizeFormat is a static class for formatting and parsing numeric file size values according to a set of format options.\n\nSupports the same options as {@link sap.ui.core.format.NumberFormat.getFloatInstance NumberFormat.getFloatInstance} For format options which are not specified default values according to the type and locale settings are used.\n\nSupported format options (additional to NumberFormat): <ul> <li>binaryFilesize: if true, base 2 is used: 1 Kibibyte = 1024 Byte, ... , otherwise base 10 is used: 1 Kilobyte = 1000 Byte (Default is false)<\/li> <\/ul>"},"sap.ui.Device.orientation":{"!description":"Common API for orientation change notifications across all platforms.\n\nFor browsers or devices that do not provide native support for orientation change events the API simulates them based on the ratio of the document's width and height.","detachHandler":{"!description":"Removes a previously attached event handler from the orientation change events.\n\nThe passed parameters must match those used for registration with {@link #.attachHandler} beforehand.","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","!static":"true"},"!category":"namespace","landscape":{"!description":"If this flag is set to <code>true<\/code>, the screen is currently in landscape mode (the width is greater than the height).","!type":"Boolean","!category":"enum"},"attachHandler":{"!description":"Registers the given event handler to orientation change events of the document's window.\n\nThe event is fired whenever the screen orientation changes and the width of the document's window becomes greater than its height or the other way round.\n\nThe event handler is called with a single argument: a map <code>mParams<\/code> which provides the following information: <ul> <li><code>mParams.landscape<\/code>: If this flag is set to <code>true<\/code>, the screen is currently in landscape mode, otherwise in portrait mode.<\/li> <\/ul>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","!static":"true"},"!module":"sap/ui/Device","portrait":{"!description":"If this flag is set to <code>true<\/code>, the screen is currently in portrait mode (the height is greater than the width).","!type":"Boolean","!category":"enum"},"!helpDescription":"Common API for orientation change notifications across all platforms.\n\nFor browsers or devices that do not provide native support for orientation change events the API simulates them based on the ratio of the document's width and height."},"sap.ui.model.ContextBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.ContextBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Binding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext: sap.ui.model.Context, mParameters?: Object, oEvents?: Object)","prototype":"sap.ui.model.ContextBinding"},"sap.ui.core.TooltipBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.TooltipBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.TooltipBase"},"sap.ui.model.odata.ODataListBinding":{"sort":{"!description":"Sorts the list.","!type":"fn(aSorters: sap.ui.model.Sorter | Array) -> sap.ui.model.ListBinding","!category":"function","parameters":{"aSorters":"type: sap.ui.model.Sorter|Array, description: the Sorter or an array of sorter objects object which define the sort order"},"!static":false},"getContexts":{"!description":"Return contexts for the list","!type":"fn(iStartIndex?: Number, iLength?: Number, iThreshold?: Number) -> [[object Object]]","!category":"function","parameters":{"iLength":"type: int, description: the requested amount of contexts","iStartIndex":"type: int, description: the start index of the requested contexts","iThreshold":"type: int, description: undefined"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.ODataListBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.ListBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!module":"sap/ui/model/odata/ODataListBinding","!description":"List binding implementation for oData format.","getDownloadUrl":{"!description":"Get a download URL with the specified format considering the sort/filter/custom parameters.","!type":"fn(sFormat: String) -> String","!category":"function","parameters":{"sFormat":"type: string, description: Value for the $format Parameter"},"!static":false},"!category":"class","refresh":{"!description":"Refreshes the binding, check whether the model data has been changed and fire change event if this is the case. For server side models this should refetch the data from the server. To update a control, even if no data has been changed, e.g. to reset a control after failed validation, please use the parameter bForceUpdate.","!type":"fn(bForceUpdate?: Boolean)","!category":"function","parameters":{"bForceUpdate":"type: boolean, description: Update the bound control even if no data has been changed"},"!static":false},"filter":{"!description":"Filters the list.\n\nWhen using sap.ui.model.Filter the filters are first grouped according to their binding path. All filters belonging to a group are combined with OR and after that the results of all groups are combined with AND. Usually this means, all filters applied to a single table column are combined with OR, while filters on different table columns are combined with AND. Please note that a custom filter function is not supported.","!type":"fn(aFilters: [[object Object][] | [object Object]], sFilterType: sap.ui.model.FilterType) -> sap.ui.model.ListBinding","!category":"function","parameters":{"sFilterType":"type: sap.ui.model.FilterType, description: Type of the filter which should be adjusted, if it is not given, the standard behaviour applies","aFilters":"type: [object Object][]|[object Object][], description: Array of filter objects"},"!static":false},"!helpDescription":"List binding implementation for oData format.","!proto":"sap.ui.model.ListBinding","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.ODataListBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"initialize":{"!description":"Initialize binding. Fires a change if data is already available ($expand) or a refresh. If metadata is not yet available, do nothing, method will be called again when metadata is loaded.","!type":"fn()","!category":"function","!static":false}},"sap.ui.model.odata.v4.ODataContextBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.v4.ODataContextBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.ContextBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oModel: sap.ui.model.odata.v4.ODataModel, sPath: String, oContext?: sap.ui.model.Context, mParameters?: Object)","prototype":"sap.ui.model.odata.v4.ODataContextBinding"},"jQuery.sap.history.NavType":{"Unknown":{"!description":"This indicates that the new hash is achieved by some unknown direction. This happens when the user navigates out of the application and then click on the forward button in the browser to navigate back to the application.","!type":"String","!category":"enum"},"!category":"static class","!module":"jquery.sap.history","Bookmark":{"!description":"This indicates that the new hash is restored from the bookmark.","!type":"String","!category":"enum"},"Forward":{"!description":"This indicates that the new hash is achieved by pressing the forward button.","!type":"String","!category":"enum"},"Back":{"!description":"This indicates that the new hash is achieved by pressing the back button.","!type":"String","!category":"enum"}},"sap.ui.core.LocalBusyIndicator_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.LocalBusyIndicator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.LocalBusyIndicator"},"sap.ui.core.EnabledPropagator_obj":{"!type":"fn(bDefault?: Boolean, bLegacy?: Boolean)","prototype":"sap.ui.core.EnabledPropagator"},"sap.ui.core.util.serializer.HTMLViewSerializer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.serializer.HTMLViewSerializer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oView: sap.ui.core.mvc.HTMLView, oWindow?: Object, fnGetControlId: fn(), fnGetEventHandlerName: fn())","prototype":"sap.ui.core.util.serializer.HTMLViewSerializer"},"jQuery.sap.PseudoEvents":{"sapleftmodifiers":{"!description":"Pseudo event for keyboard arrow left with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapdelete":{"!description":"Pseudo event for keyboard delete without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapdecrease":{"!description":"Pseudo event for pseudo 'decrease' event without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"saptabprevious":{"!description":"Pseudo event for keyboard tab (TAB + shift modifier)","!type":"String","!category":"enum"},"sapendmodifiers":{"!description":"Pseudo event for keyboard End with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"!module":"jquery.sap.events","saphome":{"!description":"Pseudo event for keyboard Home/Pos1 with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapselect":{"!description":"Pseudo event for pseudo 'select' event... space, enter, ... without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapbackspace":{"!description":"Pseudo event for keyboard backspace without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapexpand":{"!description":"Pseudo event for pseudo expand event (keyboard numpad +) without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapdelayeddoubleclick":{"!description":"Pseudo event indicating delayed double click (e.g. for inline edit)","!type":"String","!category":"enum"},"sapexpandmodifiers":{"!description":"Pseudo event for pseudo expand event (keyboard numpad +) with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapnext":{"!description":"Pseudo event for pseudo 'next' event without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapdeletemodifiers":{"!description":"Pseudo event for keyboard delete with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapshow":{"!description":"Pseudo event for pseudo 'show' event (F4, Alt + down-Arrow)","!type":"String","!category":"enum"},"sapdownmodifiers":{"!description":"Pseudo event for keyboard arrow down with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapdown":{"!description":"Pseudo event for keyboard arrow down without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sappageupmodifiers":{"!description":"Pseudo event for keyboard page up with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sappageup":{"!description":"Pseudo event for keyboard page up without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"saphomemodifiers":{"!description":"Pseudo event for keyboard Home/Pos1 without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapnextmodifiers":{"!description":"Pseudo event for pseudo 'next' event with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapleft":{"!description":"Pseudo event for keyboard arrow left without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"!helpDescription":"Enumeration of all so called \"pseudo events\", a useful classification of standard browser events as implied by SAP product standards.\n\nWhenever a browser event is recognized as one or more pseudo events, then this classification is attached to the original {@link jQuery.Event} object and thereby delivered to any jQuery-style listeners registered for that browser event.\n\nPure JavaScript listeners can evaluate the classification information using the {@link jQuery.Event#isPseudoType} method.\n\nInstead of using the procedure as described above, the SAPUI5 controls and elements should simply implement an <code>on<i>pseudo-event<\/i>(oEvent)<\/code> method. It will be invoked only when that specific pseudo event has been recognized. This simplifies event dispatching even further.","sapspacemodifiers":{"!description":"Pseudo event for keyboard space with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapcollapsemodifiers":{"!description":"Pseudo event for pseudo collapse event (keyboard numpad -) with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"saprightmodifiers":{"!description":"Pseudo event for keyboard arrow right with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapbottom":{"!description":"Pseudo event for pseudo bottom event","!type":"String","!category":"enum"},"sapend":{"!description":"Pseudo event for keyboard End without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapminus":{"!description":"Pseudo event for pressing the '-' (minus) sign.","!type":"String","!category":"enum"},"sapskipback":{"!description":"Pseudo event for pseudo skip back (F6 + shift modifier)","!type":"String","!category":"enum"},"sapup":{"!description":"Pseudo event for keyboard arrow up without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapcollapseall":{"!description":"Pseudo event for pseudo collapse event (keyboard numpad *)","!type":"String","!category":"enum"},"sapbackspacemodifiers":{"!description":"Pseudo event for keyboard backspace with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapdecreasemodifiers":{"!description":"Pseudo event for pseudo 'decrease' event with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapincreasemodifiers":{"!description":"Pseudo event for pseudo 'increase' event with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapright":{"!description":"Pseudo event for keyboard arrow right without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapskipforward":{"!description":"Pseudo event for pseudo skip forward (F6 + no modifier)","!type":"String","!category":"enum"},"!category":"namespace","sapcollapse":{"!description":"Pseudo event for pseudo collapse event (keyboard numpad -) without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapentermodifiers":{"!description":"Pseudo event for keyboard enter with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapplus":{"!description":"Pseudo event for pressing the '+' (plus) sign.","!type":"String","!category":"enum"},"sapupmodifiers":{"!description":"Pseudo event for keyboard arrow up with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"saptop":{"!description":"Pseudo event for pseudo top event","!type":"String","!category":"enum"},"sappreviousmodifiers":{"!description":"Pseudo event for pseudo 'previous' event with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapselectmodifiers":{"!description":"Pseudo event for pseudo 'select' event... space, enter, ... with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapenter":{"!description":"Pseudo event for keyboard enter without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapincrease":{"!description":"Pseudo event for pseudo 'increase' event without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapprevious":{"!description":"Pseudo event for pseudo 'previous' event without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapescape":{"!description":"Pseudo event for keyboard escape","!type":"String","!category":"enum"},"!description":"Enumeration of all so called \"pseudo events\", a useful classification of standard browser events as implied by SAP product standards.\n\nWhenever a browser event is recognized as one or more pseudo events, then this classification is attached to the original {@link jQuery.Event} object and thereby delivered to any jQuery-style listeners registered for that browser event.\n\nPure JavaScript listeners can evaluate the classification information using the {@link jQuery.Event#isPseudoType} method.\n\nInstead of using the procedure as described above, the SAPUI5 controls and elements should simply implement an <code>on<i>pseudo-event<\/i>(oEvent)<\/code> method. It will be invoked only when that specific pseudo event has been recognized. This simplifies event dispatching even further.","saptabnext":{"!description":"Pseudo event for keyboard tab (TAB + no modifier)","!type":"String","!category":"enum"},"saphide":{"!description":"Pseudo event for pseudo 'hide' event (Alt + up-Arrow)","!type":"String","!category":"enum"},"sappagedown":{"!description":"Pseudo event for keyboard page down without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sapspace":{"!description":"Pseudo event for keyboard space without modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"},"sappagedownmodifiers":{"!description":"Pseudo event for keyboard page down with modifiers (Ctrl, Alt or Shift)","!type":"String","!category":"enum"}},"sap.ui.test.matchers.I18NText":{"setModelName":{"!description":"Sets a new value for property {@link #getModelName modelName}.\n\nThe name of the {@link sap.ui.model.resource.ResourceModel} assigned to the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>i18n<\/code>.","!type":"fn(sModelName: String) -> sap.ui.test.matchers.I18NText","!category":"function","parameters":{"sModelName":"type: string, description: New value for property <code>modelName<\/code>"},"!static":false},"getKey":{"!description":"Gets current value of property {@link #getKey key}.\n\nThe key of the I18N text in the containing {@link jQuery.sap.util.ResourceBundle}.","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.test.matchers.I18NText with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPropertyName propertyName} : string<\/li>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getParameters parameters} : any<\/li>\n<li>{@link #getModelName modelName} : string (default: i18n)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.test.matchers.Matcher#constructor sap.ui.test.matchers.Matcher}\ncan be used as well.","!module":"sap/ui/test/matchers/I18NText","getModelName":{"!description":"Gets current value of property {@link #getModelName modelName}.\n\nThe name of the {@link sap.ui.model.resource.ResourceModel} assigned to the control.\n\nDefault value is <code>i18n<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"setKey":{"!description":"Sets a new value for property {@link #getKey key}.\n\nThe key of the I18N text in the containing {@link jQuery.sap.util.ResourceBundle}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sKey: String) -> sap.ui.test.matchers.I18NText","!category":"function","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"},"!static":false},"isMatching":{"!description":"Checks if the control has a property that matches the I18N text","!type":"fn(oControl: sap.ui.core.Control) -> Boolean","!category":"function","parameters":{"oControl":"type: sap.ui.core.Control, description: the control that is checked by the matcher"},"!static":false},"setPropertyName":{"!description":"Sets a new value for property {@link #getPropertyName propertyName}.\n\nThe name of the control property to match the I18N text with.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sPropertyName: String) -> sap.ui.test.matchers.I18NText","!category":"function","parameters":{"sPropertyName":"type: string, description: New value for property <code>propertyName<\/code>"},"!static":false},"setParameters":{"!description":"Sets a new value for property {@link #getParameters parameters}.\n\nThe parameters for replacing the placeholders of the I18N text. See {@link jQuery.sap.util.ResourceBundle#getText}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(oParameters: Object) -> sap.ui.test.matchers.I18NText","!category":"function","parameters":{"oParameters":"type: any, description: New value for property <code>parameters<\/code>"},"!static":false},"getParameters":{"!description":"Gets current value of property {@link #getParameters parameters}.\n\nThe parameters for replacing the placeholders of the I18N text. See {@link jQuery.sap.util.ResourceBundle#getText}.","!type":"fn() -> Object","!category":"function","!static":false},"!description":"The I18NText matcher checks if a control property has the same value as a text from an I18N file. The matcher does automatically <ul> <li> retrieve the text from the assigned 'i18n' model (name can be changed) <\/li> <li> check that the I18N key does actually exist in the file <\/li> <li> check if asynchronously loaded I18N have actually been loaded <\/li> <\/ul>","getPropertyName":{"!description":"Gets current value of property {@link #getPropertyName propertyName}.\n\nThe name of the control property to match the I18N text with.","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","!helpDescription":"The I18NText matcher checks if a control property has the same value as a text from an I18N file. The matcher does automatically <ul> <li> retrieve the text from the assigned 'i18n' model (name can be changed) <\/li> <li> check that the I18N key does actually exist in the file <\/li> <li> check if asynchronously loaded I18N have actually been loaded <\/li> <\/ul>","!proto":"sap.ui.test.matchers.Matcher","getMetadata":{"!description":"Returns a metadata object for class sap.ui.test.matchers.I18NText.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.util.Export_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.Export with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.util.Export"},"sap.ui.Device.os.OS":{"WINDOWS":{"!description":"Windows operating system name.","!type":"String","!category":"enum"},"ANDROID":{"!description":"Android operating system name.","!type":"String","!category":"enum"},"!description":"Enumeration containing the names of known operating systems.","IOS":{"!description":"iOS operating system name.","!type":"String","!category":"enum"},"WINDOWS_PHONE":{"!description":"Windows Phone operating system name.","!type":"String","!category":"enum"},"BLACKBERRY":{"!description":"Blackberry operating system name.","!type":"String","!category":"enum"},"LINUX":{"!description":"Linux operating system name.","!type":"String","!category":"enum"},"!category":"namespace","!module":"sap/ui/Device","MACINTOSH":{"!description":"MAC operating system name.","!type":"String","!category":"enum"},"!helpDescription":"Enumeration containing the names of known operating systems."},"sap.ui.core.tmpl":{"text":{"!description":"The text content of the DOM element","!type":"String","!category":"enum"},"Template":"sap.ui.core.tmpl.Template_obj","visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nSee {@link sap.ui.core.RenderManager#writeInvisiblePlaceholderData RenderManager#writeInvisiblePlaceholderData} for details.","!type":"Boolean","!category":"enum"},"tag":{"!description":"The HTML-tag of the DOM element which contains the text","!type":"String","!category":"enum"},"HandlebarsTemplate":"sap.ui.core.tmpl.HandlebarsTemplate_obj","busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!type":"sap.ui.core.BusyIndicatorSize","!category":"enum"},"busy":{"!description":"Whether the control is currently in busy state.","!type":"Boolean","!category":"enum"},"TemplateControl":"sap.ui.core.tmpl.TemplateControl_obj","DOMAttribute":"sap.ui.core.tmpl.DOMAttribute_obj","content":{"!description":"The Template definition as a String.","!type":"String","!category":"enum"},"DOMElement":"sap.ui.core.tmpl.DOMElement_obj","name":{"!description":"Name of the DOM attribute","!type":"String","!category":"enum"},"context":{"!description":"The context is a data object. It can be used for default template expressions. A change of the context object leads to a re-rendering whereas a change of a nested property of the context object doesn't. By default the context is an empty object.","!type":"Object","!category":"enum"},"!category":"namespace","value":{"!description":"Value of the DOM attribute","!type":"String","!category":"enum"},"busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!type":"Number","!category":"enum"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is raised.\n\nSee {@link sap.ui.core.Control#attachValidateFieldGroup}.","!type":"[String]","!category":"enum"}},"sap.ui.model.analytics.AnalyticalBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.analytics.AnalyticalBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.TreeBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext?: Object, aSorter?: Array, aFilters?: Array, mParameters?: Object)","prototype":"sap.ui.model.analytics.AnalyticalBinding"},"jQuery.sap.ControlEvents":{"!description":"List of DOM events that a UIArea automatically takes care of.\n\nA control/element doesn't have to bind listeners for these events. It instead can implement an <code>on<i>event<\/i>(oEvent)<\/code> method for any of the following events that it wants to be notified about:\n\nclick, dblclick, contextmenu, focusin, focusout, keydown, keypress, keyup, mousedown, mouseout, mouseover, mouseup, select, selectstart, dragstart, dragenter, dragover, dragleave, dragend, drop, paste, cut, input, touchstart, touchend, touchmove, touchcancel, tap, swipe, swipeleft, swiperight, scrollstart, scrollstop\n\nThe mouse events and touch events are supported simultaneously on both desktop and mobile browsers. Do NOT create both onmouse* and ontouch* functions to avoid one event being handled twice on the same control.","!category":"namespace","!module":"jquery.sap.events","!helpDescription":"List of DOM events that a UIArea automatically takes care of.\n\nA control/element doesn't have to bind listeners for these events. It instead can implement an <code>on<i>event<\/i>(oEvent)<\/code> method for any of the following events that it wants to be notified about:\n\nclick, dblclick, contextmenu, focusin, focusout, keydown, keypress, keyup, mousedown, mouseout, mouseover, mouseup, select, selectstart, dragstart, dragenter, dragover, dragleave, dragend, drop, paste, cut, input, touchstart, touchend, touchmove, touchcancel, tap, swipe, swipeleft, swiperight, scrollstart, scrollstop\n\nThe mouse events and touch events are supported simultaneously on both desktop and mobile browsers. Do NOT create both onmouse* and ontouch* functions to avoid one event being handled twice on the same control."},"sap.ui.model.PropertyBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.PropertyBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Binding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext: sap.ui.model.Context, mParameters?: Object)","prototype":"sap.ui.model.PropertyBinding"},"sap.ui.core.AccessibleLandmarkRole":{"Search":{"!description":"Represents the ARIA role <code>search<\/code>.\n\nA region that contains a collection of items and objects that, as a whole, combine to create a search facility.","!type":"String","!category":"enum"},"Main":{"!description":"Represents the ARIA role <code>main<\/code>.\n\nThe main content of a page.","!type":"String","!category":"enum"},"Complementary":{"!description":"Represents the ARIA role <code>complementary<\/code>.\n\nA section of the page, designed to be complementary to the main content at a similar level in the DOM hierarchy.","!type":"String","!category":"enum"},"Region":{"!description":"Represents the ARIA role <code>region<\/code>.\n\nA section of a page, that is important enough to be included in a page summary or table of contents.","!type":"String","!category":"enum"},"!description":"Defines the accessible landmark roles for ARIA support. This enumeration is used with the AccessibleRole control property. For more information, goto \"Roles for Accessible Rich Internet Applications (WAI-ARIA Roles)\" at the www.w3.org homepage.","!category":"static class","None":{"!description":"No explicit role is applicable.\n\nThe interpretation of this value depends on the control / element which defines a property with this type. Normally this value means that no accessible landmark should be written.","!type":"String","!category":"enum"},"Navigation":{"!description":"Represents the ARIA role <code>navigation<\/code>.\n\nA region that contains a collection of items and objects that, as a whole, combine to create a navigation facility.","!type":"String","!category":"enum"},"!module":"sap/ui/core/library","Banner":{"!description":"Represents the ARIA role <code>banner<\/code>.\n\nA banner usually appears at the top of the page and typically spans the full width.","!type":"String","!category":"enum"}},"sap.ui.model.type.Time_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.type.Time with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.type.Date.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.type.Time"},"sap.ui.core.util.serializer.delegate.Delegate":{"!description":"Abstract serializer delegate class.","extend":{"!description":"Creates a new subclass of class sap.ui.core.util.serializer.delegate.Delegate with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Abstract serializer delegate class. All delegates must extend from this class and implement the abstract methods.","!module":"sap/ui/core/util/serializer/delegate/Delegate","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.serializer.delegate.Delegate.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.base.EventProvider","!helpDescription":"Abstract serializer delegate class."},"sap.ui.core.util.serializer.delegate.HTML":{"!description":"HTML serializer delegate class.","extend":{"!description":"Creates a new subclass of class sap.ui.core.util.serializer.delegate.HTML with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.util.serializer.delegate.Delegate.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"HTML serializer delegate class. Called by the serializer instance.","!module":"sap/ui/core/util/serializer/delegate/HTML","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.serializer.delegate.HTML.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.util.serializer.delegate.Delegate","!helpDescription":"HTML serializer delegate class."},"sap.ui.model.ClientContextBinding":{"!description":"The ContextBinding is a specific binding for setting a context for the model.","extend":{"!description":"Creates a new subclass of class sap.ui.model.ClientContextBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.ContextBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Creates a new ClientContextBinding.\n\nThis constructor should only be called by subclasses or model implementations, not by application or control code.\nSuch code should use {@link sap.ui.model.Model#bindContext Model#bindContext} on the corresponding model implementation instead.","!module":"sap/ui/model/ClientContextBinding","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.ClientContextBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.ContextBinding","!helpDescription":"The ContextBinding is a specific binding for setting a context for the model."},"sap.ui.test.gherkin.dataTableUtils.normalization":{"!description":"A simple object containing a series of normalization functions that change a string according to a particular strategy. All strategies do the following normalization as a minimum:\n\n<ul> <li>Trim spaces off the string on both sides. For example: <code>\" hello \"<\/code> becomes <code>\"hello\"<\/code>.<\/li> <li>Assume that dashes and underscores are analogs for a space. For example: <code>\"sold-to party\"<\/code> and <code>\"sold to party\"<\/code> are equivalent, and would both convert to the camelCase <code>\"soldToParty\"<\/code>.<\/li> <li>Trim multiple spaces between words. For example: <code>\"hello____world\"<\/code> becomes <code>\"hello world\"<\/code>.<\/li> <li>Remove any characters that are not alphanumeric or whitespace. For example: <code>\"(hello)\"<\/code> becomes <code>\"hello\"<\/code>.<\/li> <\/ul>","hyphenated":{"!description":"For example: \"First Name\" -> \"first-name\"","!type":"fn(sString: String) -> String","!category":"function","!static":"true"},"!category":"namespace","none":{"!description":"For example: \"First Name\" -> \"First Name\"","!type":"fn(sString: String) -> String","!category":"function","!static":"true"},"camelCase":{"!description":"For example: \"First Name\" -> \"firstName\"","!type":"fn(sString: String) -> String","!category":"function","!static":"true"},"!module":"sap/ui/test/gherkin/dataTableUtils","pascalCase":{"!description":"For example: \"first name\" -> \"FirstName\"","!type":"fn(sString: String) -> String","!category":"function","!static":"true"},"titleCase":{"!description":"For example: \"first name\" -> \"First Name\"","!type":"fn(sString: String) -> String","!category":"function","!static":"true"},"!helpDescription":"A simple object containing a series of normalization functions that change a string according to a particular strategy. All strategies do the following normalization as a minimum:\n\n<ul> <li>Trim spaces off the string on both sides. For example: <code>\" hello \"<\/code> becomes <code>\"hello\"<\/code>.<\/li> <li>Assume that dashes and underscores are analogs for a space. For example: <code>\"sold-to party\"<\/code> and <code>\"sold to party\"<\/code> are equivalent, and would both convert to the camelCase <code>\"soldToParty\"<\/code>.<\/li> <li>Trim multiple spaces between words. For example: <code>\"hello____world\"<\/code> becomes <code>\"hello world\"<\/code>.<\/li> <li>Remove any characters that are not alphanumeric or whitespace. For example: <code>\"(hello)\"<\/code> becomes <code>\"hello\"<\/code>.<\/li> <\/ul>"},"sap.ui.model.analytics.odata4analytics.ParameterValueSetRequest_obj":{"!type":"fn(oParameter: sap.ui.model.analytics.odata4analytics.Parameter)","prototype":"sap.ui.model.analytics.odata4analytics.ParameterValueSetRequest"},"sap.ui.test.actions.EnterText_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.test.actions.EnterText with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.test.actions.Action.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.test.actions.EnterText"},"sap.ui.core.Configuration_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Configuration.FormatSettings with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.core.Configuration"},"sap.ui.model.odata.type.String_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.String with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.String"},"sap.ui.core.ws.WebSocket":{"send":{"!description":"Sends a message.<br> <br> If the connection is not yet opened, the message will be queued and sent when the connection is established.","!type":"fn(sMessage: String) -> sap.ui.core.ws.WebSocket","!category":"function","parameters":{"sMessage":"type: string, description: Message to send"},"!static":false},"detachClose":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'close' event of this <code>sap.ui.core.ws.WebSocket<\/code>.<br>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.ws.WebSocket","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"fireOpen":{"!description":"Fire event 'open' to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.core.ws.WebSocket","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"getReadyState":{"!description":"Getter for WebSocket readyState.","!type":"fn() -> sap.ui.core.ws.ReadyState","!category":"function","!static":false},"detachOpen":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'open' event of this <code>sap.ui.core.ws.WebSocket<\/code>.<br>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.ws.WebSocket","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"detachError":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'error' event of this <code>sap.ui.core.ws.WebSocket<\/code>.<br>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.ws.WebSocket","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"attachError":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'error' event of this <code>sap.ui.core.ws.WebSocket<\/code>.<br>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.ws.WebSocket","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, this WebSocket is used."},"!static":false},"!module":"sap/ui/core/ws/WebSocket","close":{"!description":"Closes the connection.","!type":"fn(iCode?: Number, sReason?: String) -> sap.ui.core.ws.WebSocket","!category":"function","parameters":{"sReason":"type: string, description: Closing reason as a string","iCode":"type: int, description: Status code that explains why the connection is closed. Must be either 1000, or between 3000 and 4999 (default 1000)"},"!static":false},"attachMessage":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'message' event of this <code>sap.ui.core.ws.WebSocket<\/code>.<br>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.ws.WebSocket","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, this WebSocket is used."},"!static":false},"detachMessage":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'message' event of this <code>sap.ui.core.ws.WebSocket<\/code>.<br>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.ws.WebSocket","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"fireError":{"!description":"Fire event 'error' to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.core.ws.WebSocket","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"!category":"class","getProtocol":{"!description":"Getter for the protocol selected by the server once the connection is open.","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.ws.WebSocket with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"fireClose":{"!description":"Fire event 'close' to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.core.ws.WebSocket","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"!constructorDescription":"Creates a new WebSocket connection.","attachOpen":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'open' event of this <code>sap.ui.core.ws.WebSocket<\/code>.<br>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.ws.WebSocket","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, this WebSocket is used."},"!static":false},"attachClose":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'close' event of this <code>sap.ui.core.ws.WebSocket<\/code>.<br>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.ws.WebSocket","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, this WebSocket is used."},"!static":false},"fireMessage":{"!description":"Fire event 'message' to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.core.ws.WebSocket","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"!description":"Basic WebSocket class","getInterface":{"!type":"fn()","!category":"function","!static":false},"!proto":"sap.ui.base.EventProvider","!helpDescription":"Basic WebSocket class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.ws.WebSocket.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.model.TreeBindingAdapter":{"attachSelectionChanged":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'selectionChanged' event of this <code>sap.ui.model.SelectionModel<\/code>.<br/> Event is fired if the selection of tree nodes is changed in any way.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.SelectionModel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, this <code>TreeBindingAdapter<\/code> is used."},"!static":false},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","_calculateRequestLength":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.52 This method is marked as 'protected' which was meant to be overwritten by its subclasses. It may be renamed or deleted and should only be called from this class or its subclasses.<br>Calculate the request length based on the given information","!type":"fn(iMaxGroupSize: Number, oSection: Object)","!category":"function","parameters":{"oSection":"type: object, description: the information of the current section","iMaxGroupSize":"type: int, description: the maximum group size"},"!static":false},"detachSelectionChanged":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'selectionChanged' event of this <code>sap.ui.model.SelectionModel<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.SelectionModel","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"!category":"class","!constructorDescription":"Adapter for TreeBindings to add the ListBinding functionality and use the\ntree structure in list based controls.","fireSelectionChanged":{"!description":"Fire event 'selectionChanged' to attached listeners.\n\nExpects following event parameters: <ul> <li>'leadIndex' of type <code>int<\/code> Lead selection index.<\/li> <li>'rowIndices' of type <code>int[]<\/code> Other selected indices (if available)<\/li> <\/ul>","!type":"fn(mArguments: Object) -> sap.ui.model.SelectionModel","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"!module":"sap/ui/model/TreeBindingAdapter","getNodes":{"!description":"Retrieves the requested part from the tree and returns node objects.","!type":"fn(iStartIndex: Number, iLength: Number, iThreshold: Number) -> Object","!category":"function","parameters":{"iLength":"type: int, description: undefined","iStartIndex":"type: int, description: undefined","iThreshold":"type: int, description: undefined"},"!static":false},"!proto":"sap.ui.base.Object","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>"},"sap.ui.model.analytics.odata4analytics.FilterExpression":{"getEntityType":{"!description":"Get description for this entity type","!type":"fn() -> sap.ui.model.analytics.odata4analytics.EntityType","!category":"function","!static":false},"getExpressionAsUI5FilterArray":{"!description":"Get an array of SAPUI5 Filter objects corresponding to this expression.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"addCondition":{"!description":"Add a condition to the filter expression.\n\nMultiple conditions on the same property are combined with a logical OR first, and in a second step conditions for different properties are combined with a logical AND.","!type":"fn(sPropertyName: String, sOperator: sap.ui.model.FilterOperator, oValue: Object, oValue2: Object) -> sap.ui.model.analytics.odata4analytics.FilterExpression","!category":"function","parameters":{"sOperator":"type: sap.ui.model.FilterOperator, description: operator used for the condition","oValue2":"type: object, description: (optional) as second value to be used for this condition","oValue":"type: object, description: value to be used for this condition","sPropertyName":"type: string, description: The name of the property bound in the condition"},"!static":false},"addSetCondition":{"!description":"Add a set condition to the filter expression.\n\nA set condition tests if the value of a property is included in a set of given values. It is a convenience method for this particular use case eliminating the need for multiple API calls.","!type":"fn(sPropertyName: String, aValues: Array) -> sap.ui.model.analytics.odata4analytics.FilterExpression","!category":"function","parameters":{"aValues":"type: array, description: values defining the set","sPropertyName":"type: string, description: The name of the property bound in the condition"},"!static":false},"!constructorDescription":"Create a representation of a filter expression for a given entity type. It can be rendered as value for the $filter system\nquery option.","!module":"sap/ui/model/analytics/odata4analytics","checkValidity":{"!description":"Check if request is compliant with basic filter constraints expressed in metadata:\n\n(a) all properties required in the filter expression have been referenced (b) the single-value filter restrictions have been obeyed","!type":"fn() -> Boolean","!category":"function","!static":false},"addUI5FilterConditions":{"!description":"Add an array of UI5 filter conditions to the filter expression.\n\nThe UI5 filter condition is combined with the other given conditions using a logical AND. This method is particularly useful for passing forward already created UI5 filter arrays.","!type":"fn(aUI5Filter: [[object Object]]) -> sap.ui.model.analytics.odata4analytics.FilterExpression","!category":"function","parameters":{"aUI5Filter":"type: [object Object][], description: Array of UI5 filter objects"},"!static":false},"clear":{"!description":"Clear expression from any conditions that may have been set previously","!type":"fn()","!category":"function","!static":false},"removeConditions":{"!description":"Remove all conditions for some property from the filter expression.\n\nAll previously set conditions for some property are removed from the filter expression.","!type":"fn(sPropertyName: String) -> sap.ui.model.analytics.odata4analytics.FilterExpression","!category":"function","parameters":{"sPropertyName":"type: string, description: The name of the property bound in the condition"},"!static":false},"!description":"Representation of a $filter expression for an OData entity type.","getURIFilterOptionValue":{"!description":"Get the value for the OData system query option $filter corresponding to this expression.","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","!helpDescription":"Representation of a $filter expression for an OData entity type.","!proto":"sap.ui.base.Object"},"sap.ui.core.format.ListFormat_obj":{"!type":"fn()","prototype":"sap.ui.core.format.ListFormat"},"sap.ui.core.Renderer":{"!description":"Base Class for a Renderer.","extend":{"!description":"Creates a new static renderer class that extends a given renderer.\n\nThis method can be used with two signatures that are explained below. In both variants, the returned renderer class inherits all properties (methods, fields) from the given parent renderer class. Both variants also add an 'extend' method to the created renderer class that behaves like the new signature of this <code>Renderer.extend<\/code> method, but creates subclasses of the new class, not of <code>sap.ui.core.Renderer<\/code>.\n\n<b>New Signature<\/b><br> In the new signature variant, two parameters must be given: a qualified name for the new renderer (its class name), and an optional object literal that contains methods or fields to be added to the new renderer class.\n\nThis signature has been designed to resemble the class extension mechanism as provided by {@link sap.ui.base.Object.extend Object.extend}.\n\n<pre>\nsap.ui.define(['sap/ui/core/Renderer'],\n    function(Renderer) {\n    \"use strict\";\n\n    var LabelRenderer = Renderer.extend('sap.m.LabelRenderer', {\n        render: function(oRM, oControl) {\n\n            renderPreamble(oRM, oControl);\n\n            // implementation core renderer logic here\n\n            renderPostamble(oRM, oControl);\n\n        },\n\n        renderPreamble : function(oRM, oControl) {\n        ...\n        },\n\n        renderPostamble : function(oRM, oControl) {\n        ...\n        }\n\n    });\n\n    return LabelRenderer;\n});\n<\/pre>\n\nThe extension of Renderers works across multiple levels. A FancyLabelRenderer can extend the above LabelRenderer:\n\n<pre>\nsap.ui.define(['sap/m/LabelRenderer'],\n    function(LabelRenderer) {\n    \"use strict\";\n\n    var FancyLabelRenderer = LabelRenderer.extend('sap.mylib.FancyLabelRenderer', {\n        render: function(oRM, oControl) {\n\n            // call base renderer\n            LabelRenderer.renderPreamble(oRM, oControl);\n\n            // ... do your own fancy rendering here\n\n            // call base renderer again\n            LabelRenderer.renderPostamble(oRM, oControl);\n        }\n    });\n\n    return FancyLabelRenderer;\n});\n<\/pre>\n\n<b>Note:<\/b> the new signature no longer requires the <code>bExport<\/code> flag to be set for the enclosing {@link sap.ui.define} call. The Renderer base class takes care of the necessary global export of the renderer. This allows Non-SAP developers to write a renderer that complies with the documented restriction for <code>sap.ui.define<\/code> (no use of bExport = true outside sap.ui.core projects).\n\n<b>Deprecated Signature<\/b><br> The deprecated old signature expects just one parameter: a renderer that should be extended. With that signature the renderer can't be exported globally as the name of the renderer class is not known.\n\nFor compatibility reasons, the class created by the deprecated signature contains a property <code>_super<\/code> that references the parent class. It shouldn't be used by applications / control developers as it doesn't work reliably for deeper inheritance chains: if the old variant of <code>Renderer.extend<\/code> is used on two or more levels of the inheritance hierarchy, the <code>_super<\/code> property of the resulting renderer class will always point to the implementation of the base renderer of the last call to extend. Instead of using <code>this._super<\/code>, renderer implementations should use the new signature variant and access the base implementation of a method via the AMD reference to the base renderer (as shown in the FancyLabelRenderer example above).","!type":"fn(vName: String | Object, oRendererInfo?: Object) -> Object","!category":"function","!static":"true"},"!category":"namespace","!module":"sap/ui/core/Renderer","getTextAlign":{"!description":"Returns the TextAlignment for the provided configuration.","!type":"fn(oTextAlign: sap.ui.core.TextAlign, oTextDirection: sap.ui.core.TextDirection) -> String","!category":"function","!static":"true"},"!helpDescription":"Base Class for a Renderer."},"sap.ui.model.type.Date_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.type.Date with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.type.Date"},"sap.ui.core.IconPool":{"isIconURI":{"!description":"Returns whether the given <code>uri<\/code> is an icon URI.\n\nA string is an icon URI when it can be parsed as a URI and when it has one of the two forms <ul> <li>sap-icon://collectionName/iconName<\/li> <li>sap-icon://iconName<\/li> <\/ul> where collectionName and iconName must be non-empty.","!type":"fn(uri: String) -> Boolean","!category":"function","!static":"true"},"getIconNames":{"!description":"Returns all name of icons that are registered under the given collection.","!type":"fn(collectionName: String) -> Array","!category":"function","!static":"true"},"getIconURI":{"!description":"Returns the URI of the icon in the pool which has the given <code>iconName<\/code> and <code>collectionName<\/code>.","!type":"fn(iconName: String, collectionName?: String) -> String","!category":"function","!static":"true"},"!description":"The IconPool is a static class for retrieving or registering icons. It also provides helping methods for easier consumption of icons. There are already icons registered in IconPool, please use the Demo App named \"Icon Explorer\" to find the name of the icon.\n\nIn order to use the icon inside an existing control, please call {@link sap.ui.core.IconPool.getIconURI} and assign the URI to the control's property which supports icons. If you want to support both, icons and standard images in your own control, please use the static method {@link sap.ui.core.IconPool.createControlByURI} to either create an Icon in case the first argument is an icon-URL or another control which you define by providing it as the second argument.","createControlByURI":{"!description":"Creates an instance of {@link sap.ui.core.Icon} if the given URI is an icon URI, otherwise the given constructor is called. The given URI is set to the src property of the control.","!type":"fn(setting: String | Object, constructor: fn()) -> sap.ui.core.Control","!category":"function","!static":"true"},"getIconForMimeType":{"!description":"Returns the icon url based on the given mime type","!type":"fn(sMimeType: String) -> String","!category":"function","!static":"true"},"getIconCollectionNames":{"!description":"Returns all names of registered collections in IconPool","!type":"fn() -> Array","!category":"function","!static":"true"},"!category":"namespace","!module":"sap/ui/core/IconPool","getIconInfo":{"!description":"Returns an info object for the icon with the given <code>iconName<\/code> and <code>collectionName<\/code>.\n\nInstead of giving name and collection, a complete icon-URI can be provided as <code>iconName<\/code>. The method will determine name and collection from the URI, see {@link #.isIconURI IconPool.isIconURI} for details.\n\nThe returned info object has the following properties: <ul> <li><code>string: name<\/code> Name of the icon<\/li> <li><code>string: collection<\/code> Name of the collection that contains the icon or <code>undefined<\/code> in case of the default collection<\/li> <li><code>string: uri<\/code> Icon URI that identifies the icon<\/li> <li><code>string: fontFamily<\/code> CSS font family to use for this icon<\/li> <li><code>string: content<\/code> Character sequence that represents the icon in the icon font<\/li> <li><code>string: text<\/code> Alternative text describing the icon (optional, might be empty)<\/li> <li><code>boolean: suppressMirroring<\/code> Whether the icon needs no mirroring in right-to-left mode<\/li> <\/ul>","!type":"fn(iconName: String, collectionName?: String) -> Object","!category":"function","!static":"true"},"addIcon":{"!description":"Register an additional icon to the sap.ui.core.IconPool.","!type":"fn(iconName: String, collectionName: String, iconInfo: Object) -> Object","!category":"function","!static":"true"},"!helpDescription":"The IconPool is a static class for retrieving or registering icons. It also provides helping methods for easier consumption of icons. There are already icons registered in IconPool, please use the Demo App named \"Icon Explorer\" to find the name of the icon.\n\nIn order to use the icon inside an existing control, please call {@link sap.ui.core.IconPool.getIconURI} and assign the URI to the control's property which supports icons. If you want to support both, icons and standard images in your own control, please use the static method {@link sap.ui.core.IconPool.createControlByURI} to either create an Icon in case the first argument is an icon-URL or another control which you define by providing it as the second argument."},"sap.ui.core.AbsoluteCSSSize":{"!description":"A string type that represents non-relative CSS size values.\n\nThis is a subtype of the <code>'&lt;length&gt; type'<\/code> defined in the CSS specifications. Allowed values are only absolute CSS sizes like &quot;1px&quot; or &quot;2em&quot;. Percentage sizes like &quot;50%&quot; and the special values &quot;auto&quot; and &quot;inherit&quot; are NOT allowed. Mathematical expressions using the CSS3 <code>calc(<i>expression<\/i>)<\/code> operator are allowed as long as they do not use percentage sizes.\n\nNote that CSS might not allow all these values for every CSS property representing a size. So even if a value is accepted by <code>sap.ui.core.AbsoluteCSSSize<\/code>, it still might have no effect in a specific context. In other words: UI5 controls usually don't extend the range of allowed values in CSS.\n\n<b>Units<\/b>\n\nValid font-relative units are <code>em, ex<\/code> and <code>rem<\/code>. Supported absolute units are <code>cm, mm, in, pc, pt<\/code> and <code>px<\/code>. Other units are not supported.\n\n<b>Mathematical Expressions<\/b>\n\nExpressions inside the <code>calc()<\/code> operator are only roughly checked for validity. Not every value that this type accepts is a valid expression in the sense of the CSS spec. But vice versa, any expression that is valid according to the spec should be accepted by this type. The current implementation is based on the {@link http://dev.w3.org/csswg/css-values-3/#calc-syntax CSS3 Draft specification from 22 April 2015}.\n\nNoteworthy details: <ul> <li>whitespace is mandatory around a '-' or '+' operator and optional otherwise<\/li> <li>parentheses are accepted but not checked for being balanced (a limitation of regexp based checks)<\/li> <li>semantic constraints like type restrictions are not checked<\/li> <\/ul>\n\nFuture versions of UI5 might check <code>calc()<\/code> expressions in more detail, so applications should not assume that a value, that is invalid according to the CSS spec but currently accepted by this type still will be accepted by future versions of this type.","!category":"namespace","!module":"sap/ui/core/library","!helpDescription":"A string type that represents non-relative CSS size values.\n\nThis is a subtype of the <code>'&lt;length&gt; type'<\/code> defined in the CSS specifications. Allowed values are only absolute CSS sizes like &quot;1px&quot; or &quot;2em&quot;. Percentage sizes like &quot;50%&quot; and the special values &quot;auto&quot; and &quot;inherit&quot; are NOT allowed. Mathematical expressions using the CSS3 <code>calc(<i>expression<\/i>)<\/code> operator are allowed as long as they do not use percentage sizes.\n\nNote that CSS might not allow all these values for every CSS property representing a size. So even if a value is accepted by <code>sap.ui.core.AbsoluteCSSSize<\/code>, it still might have no effect in a specific context. In other words: UI5 controls usually don't extend the range of allowed values in CSS.\n\n<b>Units<\/b>\n\nValid font-relative units are <code>em, ex<\/code> and <code>rem<\/code>. Supported absolute units are <code>cm, mm, in, pc, pt<\/code> and <code>px<\/code>. Other units are not supported.\n\n<b>Mathematical Expressions<\/b>\n\nExpressions inside the <code>calc()<\/code> operator are only roughly checked for validity. Not every value that this type accepts is a valid expression in the sense of the CSS spec. But vice versa, any expression that is valid according to the spec should be accepted by this type. The current implementation is based on the {@link http://dev.w3.org/csswg/css-values-3/#calc-syntax CSS3 Draft specification from 22 April 2015}.\n\nNoteworthy details: <ul> <li>whitespace is mandatory around a '-' or '+' operator and optional otherwise<\/li> <li>parentheses are accepted but not checked for being balanced (a limitation of regexp based checks)<\/li> <li>semantic constraints like type restrictions are not checked<\/li> <\/ul>\n\nFuture versions of UI5 might check <code>calc()<\/code> expressions in more detail, so applications should not assume that a value, that is invalid according to the CSS spec but currently accepted by this type still will be accepted by future versions of this type."},"sap.ui.model.ParseException_obj":{"!type":"fn(message: String)","prototype":"sap.ui.model.ParseException"},"sap.ui.model.odata.type.Stream_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Stream with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.Stream"},"sap.ui.core.DeclarativeSupport":{"!description":"Static class for enabling declarative UI support.","compile":{"!description":"Enhances the given DOM element by parsing the Control and Elements info and creating the SAPUI5 controls for them.","!type":"fn(oElement: Element, oView?: sap.ui.core.mvc.HTMLView, isRecursive?: Boolean)","!category":"function","parameters":{"isRecursive":"type: boolean, description: Whether the call of the function is recursive.","oView":"type: sap.ui.core.mvc.HTMLView, description: The view instance to use","oElement":"type: Element, description: the DOM element to compile"},"!static":true},"!category":"class","!module":"sap/ui/core/DeclarativeSupport","!proto":"sap.ui.base.Object","!helpDescription":"Static class for enabling declarative UI support."},"sap.ui.model.ClientListBinding":{"!description":"List binding implementation for client models.","extend":{"!description":"Creates a new subclass of class sap.ui.model.ClientListBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.ListBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Creates a new ClientListBinding.\n\nThis constructor should only be called by subclasses or model implementations, not by application or control code.\nSuch code should use {@link sap.ui.model.Model#bindList Model#bindList} on the corresponding model implementation instead.","!module":"sap/ui/model/ClientListBinding","filter":{"!description":"Applies a new set of filters to the list represented by this binding.\n\nSee {@link sap.ui.model.ListBinding#filter ListBinding#filter} for a more detailed description of list filtering.\n\nWhen no <code>sFilterType<\/code> is given, any previously configured application filters are cleared and the given filters are used as control filters","!type":"fn(aFilters: [[object Object]], sFilterType?: sap.ui.model.FilterType) -> sap.ui.model.ListBinding","!category":"function","parameters":{"sFilterType":"type: sap.ui.model.FilterType, description: Type of the filter which should be adjusted; if no type is given, then any previously configured application filters are cleared and the given filters are used as control filters","aFilters":"type: [object Object][], description: Array of filter objects"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.ClientListBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.ListBinding","!helpDescription":"List binding implementation for client models."},"sap.ui.Device.os":{"android":{"!description":"If this flag is set to <code>true<\/code>, an Android operating system is used.","!type":"Boolean","!category":"enum"},"ios":{"!description":"If this flag is set to <code>true<\/code>, an iOS operating system is used.","!type":"Boolean","!category":"enum"},"OS":"sap.ui.Device.os.OS","versionStr":{"!description":"The version of the operating system as <code>string<\/code>.\n\nMight be empty if no version can be determined.","!type":"String","!category":"enum"},"windows":{"!description":"If this flag is set to <code>true<\/code>, a Windows operating system is used.","!type":"Boolean","!category":"enum"},"!module":"sap/ui/Device","linux":{"!description":"If this flag is set to <code>true<\/code>, a Linux operating system is used.","!type":"Boolean","!category":"enum"},"version":{"!description":"The version of the operating system as <code>float<\/code>.\n\nMight be <code>-1<\/code> if no version can be determined.","!type":"Number","!category":"enum"},"blackberry":{"!description":"If this flag is set to <code>true<\/code>, a Blackberry operating system is used.","!type":"Boolean","!category":"enum"},"!description":"Contains information about the operating system of the device.","windows_phone":{"!description":"If this flag is set to <code>true<\/code>, a Windows Phone operating system is used.","!type":"Boolean","!category":"enum"},"macintosh":{"!description":"If this flag is set to <code>true<\/code>, a Mac operating system is used.","!type":"Boolean","!category":"enum"},"name":{"!description":"The name of the operating system.","!type":"String","!category":"enum"},"!category":"namespace","!helpDescription":"Contains information about the operating system of the device."},"sap.ui.core.util.ExportTypeCSV":{"!description":"CSV export type. Can be used for {@link sap.ui.core.util.Export Export}.\n\nPlease note that there could be an issue with the separator char depending on the user's system language in some programs such as Microsoft Excel. To prevent those issues use the data-import functionality which enables the possibility to explicitly set the separator char that should be used. This way the content will be displayed correctly.\n\nPotential formulas (cell data starts with one of = + - @) will be escaped by prepending a single quote. As the export functionality is intended to be used with actual (user) data there is no reason to allow formulas.","generate":{"!description":"Generates the file content.","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.ExportTypeCSV with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.util.ExportType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setSeparatorChar":{"!description":"Setter for property <code>separatorChar<\/code>.\n\nValue needs to be exactly one character or empty for default. Default value is ','.","!type":"fn(sSeparatorChar: String) -> sap.ui.core.util.ExportTypeCSV","!category":"function","parameters":{"sSeparatorChar":"type: string, description: new value for property <code>separatorChar<\/code>"},"!static":false},"getSeparatorChar":{"!description":"Gets current value of property {@link #getSeparatorChar separatorChar}.\n\nSeparator char.\n\nValue needs to be exactly one character or empty for default.\n\nDefault value is <code>,<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","!constructorDescription":"Constructor for a new ExportTypeCSV.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSeparatorChar separatorChar} : string (default: ,)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.util.ExportType#constructor sap.ui.core.util.ExportType}\ncan be used as well.","!module":"sap/ui/core/util/ExportTypeCSV","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.ExportTypeCSV.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.util.ExportType","!helpDescription":"CSV export type. Can be used for {@link sap.ui.core.util.Export Export}.\n\nPlease note that there could be an issue with the separator char depending on the user's system language in some programs such as Microsoft Excel. To prevent those issues use the data-import functionality which enables the possibility to explicitly set the separator char that should be used. This way the content will be displayed correctly.\n\nPotential formulas (cell data starts with one of = + - @) will be escaped by prepending a single quote. As the export functionality is intended to be used with actual (user) data there is no reason to allow formulas."},"sap.ui.base.DataType":{"registerInterfaceTypes":{"!description":"Registers the given array of type names as known interface types. Only purpose is to enable the {@link #isInterfaceType} check.","!type":"fn(aTypes: [[object Object]])","!category":"function","parameters":{"aTypes":"type: [object Object][], description: interface types to be registered"},"!static":true},"getBaseType":{"!description":"The base type of this type or undefined if this is a primitive type.","!type":"fn() -> sap.ui.base.DataType | undefined","!category":"function","!static":false},"!constructorDescription":"Pseudo-Constructor for class <code>DataType<\/code>, never to be used.","!module":"sap/ui/base/DataType","getComponentType":{"!description":"Returns the component type of this type or <code>undefined<\/code> if this is not an array type.","!type":"fn() -> sap.ui.base.DataType | undefined","!category":"function","!static":false},"getPrimitiveType":{"!description":"Returns the most basic (primitive) type that this type has been derived from.\n\nIf the type is a primitive type by itself, <code>this<\/code> is returned.","!type":"fn() -> sap.ui.base.DataType","!category":"function","!static":false},"isArrayType":{"!description":"Whether this type is an array type.","!type":"fn() -> Boolean","!category":"function","!static":false},"normalize":{"!description":"Normalizes the given value using the specified normalizer for this data type.\n\nIf no normalizer has been set, the original value is returned.","!type":"fn(oValue: Object) -> Object","!category":"function","parameters":{"oValue":"type: any, description: Value to be normalized"},"!static":false},"getDefaultValue":{"!description":"The default value for this type. Each type must define a default value.","!type":"fn() -> Object","!category":"function","!static":false},"isInterfaceType":{"!type":"fn(sType: String) -> Boolean","!category":"function","parameters":{"sType":"type: string, description: name of type to check"},"!static":true},"getType":{"!description":"Looks up the type with the given name and returns it.\n\nSee {@link topic:ac56d92162ed47ff858fdf1ce26c18c4 Defining Control Properties} for a list of the built-in primitive types and their semantics.\n\nThe lookup consists of the following steps: <ul> <li>When a type with the given name is already known, it will be returned<\/li> <li>When the name ends with a pair of brackets (<code>[]<\/code>), a type with the name in front of the brackets (<code>name.slice(0,-2)<\/code>) will be looked up and an array type will be created with the looked-up type as its component type. If the component type is <code>undefined<\/code>, <code>undefined<\/code> will be returned<\/li> <li>When a global property exists with the same name as the type and when the value of that property is an instance of <code>DataType<\/code>, that instance will be returned<\/li> <li>When a global property exists with the same name as the type and when the value of that property is a plain object (its prototype is <code>Object<\/code>), then an enum type will be created, based on the keys and values in that object. The <code>parseValue<\/code> method of the type will accept any of the keys in the plain object and convert them to the corresponding value; <code>isValid<\/code> will accept any of the values from the plain object's keys. The <code>defaultValue<\/code> will be the value of the first key found in the plain object<\/li> <li>When a global property exist with any other, non-falsy value, a warning is logged and the primitive type 'any' is returned<\/li> <li>If no such global property exist, an error is logged and <code>undefined<\/code> is returned<\/li> <\/ul>\n\n<b<Note:<\/b> UI Libraries and even components can introduce additional types. This method only checks for types that either have been defined already, or that describe arrays of values of an already defined type or types whose name matches the global name of a plain object (containing enum keys and values). This method doesn't try to load modules that might contain type definitions. So before being able to lookup and use a specific type, the module containing its definition has to be loaded. For that reason it is suggested that controls (or <code>ManagedObject<\/code> classes in general) declare a dependency to all modules (typically <code>some/lib/library.js<\/code> modules) that contain the type definitions needed by the specific control or class definition.","!type":"fn(sTypeName: String) -> sap.ui.base.DataType | undefined","!category":"function","parameters":{"sTypeName":"type: string, description: Qualified name of the type to retrieve"},"!static":true},"!description":"Represents the type of properties in a <code>ManagedObject<\/code> class.\n\nEach type provides some metadata like its {@link #getName qualified name} or its {@link #getBaseType base type} in case of a derived type. Array types provide information about the allowed {@link #getComponentType type of components} in an array, enumeration types inform about the set of their allowed {@link #getEnumValues keys and values}.\n\nEach type has a method to {@link #isValid check whether a value is valid} for a property of that type.\n\nAlready defined types can be looked up by calling {@link #.getType DataType.getType}, new types can only be created by calling the factory method {@link #.createType DataType.createType}, calling the constructor will throw an error.","getName":{"!description":"The qualified name of the data type.","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","setNormalizer":{"!description":"Set or unset a normalizer function to be used for values of this data type.\n\nWhen a normalizer function has been set, it will be applied to values of this type whenever {@link #normalize} is called. <code>ManagedObject.prototype.setProperty<\/code> calls the <code>normalize<\/code> method before setting a new value to a property (normalization is applied on-write, not on-read).\n\nThe <code>fnNormalize<\/code> function has the signature <pre>\n  fnNormalize(value:any) : any\n<\/pre> It will be called with a value for this type and should return a normalized value (which also must be valid for the this type). There's no mean to reject a value. The <code>this<\/code> context of the function will be this type.\n\nThis method allows applications or application frameworks to plug-in a generic value normalization for a type, e.g. to convert all URLs in some app-specific way before they are applied to controls. It is not intended to break-out of the value range defined by a type.","!type":"fn(fnNormalizer: fn())","!category":"function","parameters":{"fnNormalizer":"type: function, description: Function to apply for normalizing"},"!static":false},"isEnumType":{"!description":"Whether this type is an enumeration type.","!type":"fn() -> Boolean","!category":"function","!static":false},"isValid":{"!description":"Checks whether the given value is valid for this type.\n\nTo be implemented by concrete types.","!type":"fn(vValue: Object) -> Boolean","!category":"function","parameters":{"vValue":"type: any, description: Value to be checked"},"!static":false},"getEnumValues":{"!description":"Returns the object with keys and values from which this enum type was created or <code>undefined<\/code> if this is not an enum type.","!type":"fn() -> Object","!category":"function","!static":false},"parseValue":{"!description":"Parses the given string value and converts it into the specific data type.","!type":"fn(sValue: String) -> Object","!category":"function","parameters":{"sValue":"type: string, description: String representation for a value of this type"},"!static":false},"createType":{"!description":"Derives a new type from a given base type.\n\nExample:<br> <pre>\n\n  var fooType = DataType.createType('foo', {\n      isValid : function(vValue) {\n          return /^(foo(bar)?)$/.test(vValue);\n      }\n  }, DataType.getType('string'));\n\n  fooType.isValid('foo'); // true\n  fooType.isValid('foobar'); // true\n  fooType.isValid('==foobar=='); // false\n\n<\/pre>\n\nIf <code>mSettings<\/code> contains an implementation for <code>isValid<\/code>, then the validity check of the newly created type will first execute the check of the base type and then call the given <code>isValid<\/code> function.\n\nArray types and enumeration types cannot be created with this method. They're created on-the-fly by {@link #.getType DataType.getType} when such a type is looked up.\n\n<b>Note:<\/b> The creation of new primitive types is not supported. When a type is created without a base type, it is automatically derived from the primitive type <code>any<\/code>.\n\n<b>Note:<\/b> If a type has to be used in classes tagged with <code>@ui5-metamodel<\/code>, then the implementation of <code>isValid<\/code> must exactly have the structure shown in the example above (single return statement, regular expression literal of the form <code>/^(...)$/<\/code>, calling <code>/regex/.test()<\/code> on the given value). Only the inner part of the regular expression literal can be different.","!type":"fn(sName: String, mSettings: Object, base?: sap.ui.base.DataType | String) -> sap.ui.base.DataType","!category":"function","parameters":{"mSettings":"type: object, description: Settings for the new type","base":"type: sap.ui.base.DataType|string, description: Base type for the new type","sName":"type: string, description: Unique qualified name of the new type"},"!static":true},"!helpDescription":"Represents the type of properties in a <code>ManagedObject<\/code> class.\n\nEach type provides some metadata like its {@link #getName qualified name} or its {@link #getBaseType base type} in case of a derived type. Array types provide information about the allowed {@link #getComponentType type of components} in an array, enumeration types inform about the set of their allowed {@link #getEnumValues keys and values}.\n\nEach type has a method to {@link #isValid check whether a value is valid} for a property of that type.\n\nAlready defined types can be looked up by calling {@link #.getType DataType.getType}, new types can only be created by calling the factory method {@link #.createType DataType.createType}, calling the constructor will throw an error.","!proto":"sap.ui.base.Object"},"sap.ui.model.CompositeBinding":{"suspend":{"!description":"Suspends the binding update. No change events will be fired.\n\nA refresh call with bForceUpdate set to true will also update the binding and fire a change in suspended mode. Special operations on bindings, which require updates to work properly (as paging or filtering in list bindings) will also update and cause a change event although the binding is suspended.","!type":"fn()","!category":"function","!static":false},"getValue":{"!description":"Returns the raw values of the property bindings in an array.","!type":"fn() -> Object","!category":"function","!static":false},"detachAggregatedDataStateChange":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'AggregatedDataStateChange' event of this <code>sap.ui.model.CompositeBinding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: object on which to call the given function."},"!static":false},"setType":{"!description":"Sets the optional type and internal type for the binding. The type and internal type are used to do the parsing/formatting correctly. The internal type is the property type of the element which the value is formatted to.","!type":"fn(oType: sap.ui.model.CompositeType, sInternalType: String)","!category":"function","parameters":{"oType":"type: sap.ui.model.CompositeType, description: the type for the binding","sInternalType":"type: string, description: the internal type of the element property which this binding is bound against."},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.CompositeBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.PropertyBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"attachAggregatedDataStateChange":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'AggregatedDataStateChange' event of this <code>sap.ui.model.CompositeBinding<\/code>. The AggregatedDataStateChange event is fired asynchronously, meaning that the datastate object given as parameter of the event contains all changes that were applied to the datastate in the running thread.","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: object on which to call the given function."},"!static":false},"setValue":{"!description":"Sets the values. This will cause the setValue to be called for each nested binding, except for undefined values in the array.","!type":"fn(aValues: Array)","!category":"function","parameters":{"aValues":"type: array, description: the values to set for this binding"},"!static":false},"!constructorDescription":"Constructor for CompositeBinding","getExternalValue":{"!description":"Returns the current external value of the bound target which is formatted via a type or formatter function.","!type":"fn() -> Object","!category":"function","!static":false},"!module":"sap/ui/model/CompositeBinding","detachChange":{"!description":"Detach event-handler <code>fnFunction<\/code> from the '_change' event of this <code>sap.ui.model.CompositeBinding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: object on which to call the given function."},"!static":false},"detachDataStateChange":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'DataStateChange' event of this <code>sap.ui.model.CompositeBinding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: object on which to call the given function."},"!static":false},"resume":{"!description":"Suspends the binding update. No change events will be fired.\n\nA refresh call with bForceUpdate set to true will also update the binding and fire a change in suspended mode. Special operations on bindings, which require updates to work properly (as paging or filtering in list bindings) will also update and cause a change event although the binding is suspended.","!type":"fn()","!category":"function","!static":false},"setExternalValue":{"!description":"Sets the external value of a composite binding. If no CompositeType is assigned to the binding, the default implementation assumes a space separated list of values. This will cause the setValue to be called for each nested binding, except for undefined values in the array.","!type":"fn(oValue: Object)","!category":"function","parameters":{"oValue":"type: object, description: the value to set for this binding"},"!static":false},"!description":"The CompositeBinding is used to bundle multiple property bindings which are be used to provide a single binding against these property bindings.","getBindings":{"!description":"Returns the property bindings contained in this composite binding.","!type":"fn() -> Array","!category":"function","!static":false},"attachDataStateChange":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'DataStateChange' event of this <code>sap.ui.model.CompositeBinding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: object on which to call the given function."},"!static":false},"!category":"class","attachChange":{"!description":"Attach event-handler <code>fnFunction<\/code> to the '_change' event of this <code>sap.ui.model.CompositeBinding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: object on which to call the given function."},"!static":false},"updateRequired":{"!description":"Determines if the property bindings in the composite binding should be updated by calling updateRequired on all property bindings with the specified model.","!type":"fn(oModel: Object) -> Boolean","!category":"function","parameters":{"oModel":"type: object, description: The model instance to compare against"},"!static":false},"initialize":{"!description":"Initialize the binding. The message should be called when creating a binding. The default implementation calls checkUpdate(true). Prevent checkUpdate to be triggered while initializing nestend bindings, it is sufficient to call checkUpdate when all nested bindings are initialized.","!type":"fn()","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.CompositeBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!helpDescription":"The CompositeBinding is used to bundle multiple property bindings which are be used to provide a single binding against these property bindings.","!proto":"sap.ui.model.PropertyBinding"},"sap.ui.core.util.MockServer":{"getRequests":{"!description":"Getter for property <code>requests<\/code>.\n\nDefault value is <code>[]<\/code>","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"stop":{"!description":"Stops the server.","!type":"fn()","!category":"function","!static":false},"simulate":{"!description":"Simulates an existing OData service by sepcifiying the metadata URL and the base URL for the mockdata. The server configures the request handlers depending on the service metadata. The mockdata needs to be stored individually for each entity type in a separate JSON file. The name of the JSON file needs to match the name of the entity type. If no base url for the mockdata is specified then the mockdata are generated from the metadata","!type":"fn(sMetadataUrl: String, vMockdataSettings?: String | Object)","!category":"function","parameters":{"sMetadataUrl":"type: string, description: url to the service metadata document","vMockdataSettings":"type: string|object, description: (optional) base url which contains the path to the mockdata, or an object which contains the following properties: sMockdataBaseUrl, bGenerateMissingMockData, aEntitySetsNames. See below for descriptions of these parameters. Ommit this parameter to produce random mock data based on the service metadata."},"!static":false},"attachBefore":{"!description":"Attaches an event handler to be called before the built-in request processing of the mock server","!type":"fn(event: String, fnCallback: fn(), sEntitySet: String)","!category":"function","parameters":{"fnCallback":"type: function, description: the name of the function that will be called at this exit. The callback function exposes an event with parameters, depending on the type of the request. oEvent.getParameters() lists the parameters as per the request. Examples are: oXhr : the request object; sUrlParams : the URL parameters of the request; sKeys : key properties of the requested entry; sNavProp/sNavName : name of navigation","event":"type: string, description: type according to HTTP Method","sEntitySet":"type: string, description: (optional) the name of the entity set"},"!static":false},"getRootUri":{"!description":"Getter for property <code>rootUri<\/code>. Has to be relative and requires a trailing '/'. It also needs to match the URI set in OData/JSON models or simple XHR calls in order for the mock server to intercept them.\n\nDefault value is empty/<code>undefined<\/code>. Must end with a a trailing slash (\"/\").","!type":"fn() -> String","!category":"function","!static":false},"attachAfter":{"!description":"Attaches an event handler to be called after the built-in request processing of the mock server","!type":"fn(event: String, fnCallback: fn(), sEntitySet: String)","!category":"function","parameters":{"fnCallback":"type: function, description: the name of the function that will be called at this exit The callback function exposes an event with parameters, depending on the type of the request. oEvent.getParameters() lists the parameters as per the request. Examples are: oXhr : the request object; oFilteredData : the mock data entries that are about to be returned in the response; oEntry : the mock data entry that is about to be returned in the response;","event":"type: string, description: type according to HTTP Method","sEntitySet":"type: string, description: (optional) the name of the entity set"},"!static":false},"startAll":{"!description":"Starts all registered servers.","!type":"fn()","!category":"function","!static":true},"setEntitySetData":{"!description":"Sets the data of the given EntitySet name with the given array.","!type":"fn(sEntitySetName: String, aData: Array)","!category":"function","parameters":{"aData":"type: array, description: undefined","sEntitySetName":"type: string, description: EntitySet name"},"!static":false},"stopAll":{"!description":"Stops all registered servers.","!type":"fn()","!category":"function","!static":true},"!module":"sap/ui/core/util/MockServer","getEntitySetData":{"!description":"Returns the data model of the given EntitySet name.","!type":"fn(sEntitySetName: String) -> Array","!category":"function","parameters":{"sEntitySetName":"type: string, description: EntitySet name"},"!static":false},"_getPseudoRandomNumber":{"!description":"Generates a floating-point, pseudo-random number in the range [0, 1[ using a linear congruential generator with drand48 parameters the seed is fixed, so the generated random sequence is always the same each property type has a own seed. Valid types are: String, DateTime, Int, Decimal, Boolean, Byte, Double, Single, SByte, Time, Guid, Binary, DateTimeOffset","!type":"fn(specific: String)","!category":"function","parameters":{"specific":"type: string, description: property type of random mock value to be generated"},"!static":false},"destroy":{"!description":"Cleans up the resources associated with this object and all its aggregated children.\n\nAfter an object has been destroyed, it can no longer be used in!\n\nApplications should call this method if they don't need the object any longer.","!type":"fn(bSuppressInvalidate?: Boolean)","!category":"function","parameters":{"bSuppressInvalidate":"type: boolean, description: if true, this ManagedObject is not marked as changed"},"!static":false},"respond":{"!description":"Respond to a request, when the servers are configured not to automatically respond.","!type":"fn()","!category":"function","!static":true},"!category":"class","config":{"!description":"Global configuration of all mock servers.","!type":"fn(mConfig: Object)","!category":"function","parameters":{"mConfig":"type: object, description: the configuration object."},"!static":true},"getRecordRequests":{"!description":"Getter for property <code>recordRequests<\/code>. Returns whether or not the requests performed should be recorded (stored).\n\nDefault value is <code>true<\/code>","!type":"fn() -> Boolean","!category":"function","!static":false},"destroyAll":{"!description":"Stops and calls destroy on all registered servers. Use this method for cleaning up.","!type":"fn()","!category":"function","!static":true},"detachBefore":{"!description":"Removes a previously attached event handler","!type":"fn(event: String, fnCallback: fn(), sEntitySet: String)","!category":"function","parameters":{"fnCallback":"type: function, description: the name of the function that will be called at this exit","event":"type: string, description: type according to HTTP Method","sEntitySet":"type: string, description: (optional) the name of the entity set"},"!static":false},"setRequests":{"!description":"Setter for property <code>requests<\/code>.\n\nDefault value is is <code>[]<\/code>\n\nEach array entry should consist of an array with the following properties / values:\n\n<ul> <li><b>method <string>: \"GET\"|\"POST\"|\"DELETE|\"PUT\"<\/b> <br> (any HTTP verb) <\/li> <li><b>path <string>: \"/path/to/resource\"<\/b> <br> The path is converted to a regular expression, so it can contain normal regular expression syntax. All regular expression groups are forwarded as arguments to the <code>response<\/code> function. In addition to this, parameters can be written in this notation: <code>:param<\/code>. These placeholder will be replaced by regular expression groups. <\/li> <li><b>response <function>: function(xhr, param1, param2, ...) { }<\/b> <br> The xhr object can be used to respond on the request. Supported methods are: <br> <code>xhr.respond(iStatusCode, mHeaders, sBody)<\/code> <br> <code>xhr.respondJSON(iStatusCode, mHeaders, oJsonObjectOrString)<\/code>. By default a JSON header is set for response header <br> <code>xhr.respondXML(iStatusCode, mHeaders, sXmlString)<\/code>. By default an XML header is set for response header <br> <code>xhr.respondFile(iStatusCode, mHeaders, sFileUrl)<\/code>. By default the mime type of the file is set for response header <\/li> <\/ul>","!type":"fn(requests: [[object Object]])","!category":"function","parameters":{"requests":"type: [object Object][], description: new value for property <code>requests<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.MockServer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Creates a mocked server. This helps to mock all or some backend calls, e.g. for OData/JSON Models or simple XHR calls, without\nchanging the application code. This class can also be used for qunit tests.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getRootUri rootUri} : string<\/li>\n<li>{@link #getRecordRequests recordRequests} : boolean (default: true)<\/li>\n<li>{@link #getRequests requests} : object[] (default: [])<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","setRecordRequests":{"!description":"Setter for property <code>recordRequests<\/code>. Defines whether or not the requests performed should be recorded (stored).\n\nDefault value is <code>true<\/code>","!type":"fn(recordRequests: Boolean)","!category":"function","parameters":{"recordRequests":"type: boolean, description: new value for property <code>recordRequests<\/code>"},"!static":false},"setRootUri":{"!description":"Setter for property <code>rootUri<\/code>. All request path URI are prefixed with this root URI if set.\n\nDefault value is empty/<code>undefined<\/code>","!type":"fn(rootUri: String)","!category":"function","parameters":{"rootUri":"type: string, description: new value for property <code>rootUri<\/code>"},"!static":false},"detachAfter":{"!description":"Removes a previously attached event handler","!type":"fn(event: String, fnCallback: fn(), sEntitySet: String)","!category":"function","parameters":{"fnCallback":"type: function, description: the name of the function that will be called at this exit","event":"type: string, description: type according to HTTP Method","sEntitySet":"type: string, description: (optional) the name of the entity set"},"!static":false},"!description":"Class to mock http requests made to a remote server","start":{"!description":"Starts the server.","!type":"fn()","!category":"function","!static":false},"isStarted":{"!description":"Returns whether the server is started or not.","!type":"fn() -> Boolean","!category":"function","!static":false},"!proto":"sap.ui.base.ManagedObject","!helpDescription":"Class to mock http requests made to a remote server","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.MockServer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.model.odata.v4.Context_obj":{"!type":"fn(oModel: sap.ui.model.odata.v4.ODataModel, oBinding: sap.ui.model.odata.v4.ODataContextBinding | sap.ui.model.odata.v4.ODataListBinding, sPath: String, iIndex?: Number, oCreatePromise?: Promise)","prototype":"sap.ui.model.odata.v4.Context"},"sap.ui.core.tmpl.DOMElement":{"getTag":{"!description":"Gets current value of property {@link #getTag tag}.\n\nThe HTML-tag of the DOM element which contains the text\n\nDefault value is <code>span<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nThe text content of the DOM element\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sText: String) -> sap.ui.core.tmpl.DOMElement","!category":"function","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"},"!static":false},"!module":"sap/ui/core/tmpl/DOMElement","getText":{"!description":"Gets current value of property {@link #getText text}.\n\nThe text content of the DOM element","!type":"fn() -> String","!category":"function","!static":false},"setTag":{"!description":"Sets a new value for property {@link #getTag tag}.\n\nThe HTML-tag of the DOM element which contains the text\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>span<\/code>.","!type":"fn(sTag: String) -> sap.ui.core.tmpl.DOMElement","!category":"function","parameters":{"sTag":"type: string, description: New value for property <code>tag<\/code>"},"!static":false},"removeElement":{"!description":"Removes a element from the aggregation {@link #getElements elements}.","!type":"fn(vElement: Number | String | sap.ui.core.tmpl.DOMElement) -> sap.ui.core.tmpl.DOMElement","!category":"function","parameters":{"vElement":"type: int|string|sap.ui.core.tmpl.DOMElement, description: The element to remove or its index or id"},"!static":false},"addElement":{"!description":"Adds some element to the aggregation {@link #getElements elements}.","!type":"fn(oElement: sap.ui.core.tmpl.DOMElement) -> sap.ui.core.tmpl.DOMElement","!category":"function","parameters":{"oElement":"type: sap.ui.core.tmpl.DOMElement, description: The element to add; if empty, nothing is inserted"},"!static":false},"insertAttribute":{"!description":"Inserts a attribute into the aggregation {@link #getAttributes attributes}.","!type":"fn(oAttribute: sap.ui.core.tmpl.DOMAttribute, iIndex: Number) -> sap.ui.core.tmpl.DOMElement","!category":"function","parameters":{"oAttribute":"type: sap.ui.core.tmpl.DOMAttribute, description: The attribute to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the attribute should be inserted at; for a negative value of <code>iIndex<\/code>, the attribute is inserted at position 0; for a value greater than the current size of the aggregation, the attribute is inserted at the last position"},"!static":false},"!category":"class","destroyAttributes":{"!description":"Destroys all the attributes in the aggregation {@link #getAttributes attributes}.","!type":"fn() -> sap.ui.core.tmpl.DOMElement","!category":"function","!static":false},"removeAllAttributes":{"!description":"Removes all the controls from the aggregation {@link #getAttributes attributes}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"indexOfElement":{"!description":"Checks for the provided <code>sap.ui.core.tmpl.DOMElement<\/code> in the aggregation {@link #getElements elements}. and returns its index if found or -1 otherwise.","!type":"fn(oElement: sap.ui.core.tmpl.DOMElement) -> Number","!category":"function","parameters":{"oElement":"type: sap.ui.core.tmpl.DOMElement, description: The element whose index is looked for"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.tmpl.DOMElement with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getElements":{"!description":"Gets content of aggregation {@link #getElements elements}.\n\nNested DOM elements to support nested bindable structures","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"attr":{"!description":"Returns the value of a DOM attribute if available or undefined if the DOM attribute is not available when using this method with the parameter name only. When using the method with the parameter name and value the method acts as a setter and sets the value of a DOM attribute. In this case the return value is the reference to this DOM element to support method chaining. If you pass null as value of the attribute the attribute will be removed.","!type":"fn(sName: String, sValue: String) -> Object","!category":"function","parameters":{"sValue":"type: string, description: The value of the DOM attribute. If the value is undefined the DOM attribute will be removed.","sName":"type: string, description: The name of the DOM attribute."},"!static":false},"!constructorDescription":"Constructor for a new tmpl/DOMElement.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getTag tag} : string (default: span)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAttributes attributes} : sap.ui.core.tmpl.DOMAttribute[] (default)<\/li>\n<li>{@link #getElements elements} : sap.ui.core.tmpl.DOMElement[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","removeAttr":{"!description":"Removes the DOM attribute for the given name and returns the reference to this DOM element to support method chaining.","!type":"fn(sName: String) -> sap.ui.core.tmpl.DOMElement","!category":"function","parameters":{"sName":"type: string, description: The name of the DOM attribute."},"!static":false},"!description":"Represents a DOM element. It allows to use databinding for the properties and nested DOM attributes.","insertElement":{"!description":"Inserts a element into the aggregation {@link #getElements elements}.","!type":"fn(oElement: sap.ui.core.tmpl.DOMElement, iIndex: Number) -> sap.ui.core.tmpl.DOMElement","!category":"function","parameters":{"oElement":"type: sap.ui.core.tmpl.DOMElement, description: The element to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the element should be inserted at; for a negative value of <code>iIndex<\/code>, the element is inserted at position 0; for a value greater than the current size of the aggregation, the element is inserted at the last position"},"!static":false},"indexOfAttribute":{"!description":"Checks for the provided <code>sap.ui.core.tmpl.DOMAttribute<\/code> in the aggregation {@link #getAttributes attributes}. and returns its index if found or -1 otherwise.","!type":"fn(oAttribute: sap.ui.core.tmpl.DOMAttribute) -> Number","!category":"function","parameters":{"oAttribute":"type: sap.ui.core.tmpl.DOMAttribute, description: The attribute whose index is looked for"},"!static":false},"removeAttribute":{"!description":"Removes a attribute from the aggregation {@link #getAttributes attributes}.","!type":"fn(vAttribute: Number | String | sap.ui.core.tmpl.DOMAttribute) -> sap.ui.core.tmpl.DOMAttribute","!category":"function","parameters":{"vAttribute":"type: int|string|sap.ui.core.tmpl.DOMAttribute, description: The attribute to remove or its index or id"},"!static":false},"destroyElements":{"!description":"Destroys all the elements in the aggregation {@link #getElements elements}.","!type":"fn() -> sap.ui.core.tmpl.DOMElement","!category":"function","!static":false},"getAttributes":{"!description":"Gets content of aggregation {@link #getAttributes attributes}.\n\nDOM attributes which are rendered as part of the DOM element and bindable","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"addAttribute":{"!description":"Adds some attribute to the aggregation {@link #getAttributes attributes}.","!type":"fn(oAttribute: sap.ui.core.tmpl.DOMAttribute) -> sap.ui.core.tmpl.DOMElement","!category":"function","parameters":{"oAttribute":"type: sap.ui.core.tmpl.DOMAttribute, description: The attribute to add; if empty, nothing is inserted"},"!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"Represents a DOM element. It allows to use databinding for the properties and nested DOM attributes.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.tmpl.DOMElement.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"removeAllElements":{"!description":"Removes all the controls from the aggregation {@link #getElements elements}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false}},"sap.ui.model.DataState_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.DataState with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.model.DataState"},"sap.ui.model.odata.v4":{"SubmitMode":"sap.ui.model.odata.v4.SubmitMode","ODataContextBinding":"sap.ui.model.odata.v4.ODataContextBinding_obj","ODataModel":"sap.ui.model.odata.v4.ODataModel_obj","AnnotationHelper":"sap.ui.model.odata.v4.AnnotationHelper","!module":"sap/ui/model/odata/v4/ODataModel","ODataPropertyBinding":"sap.ui.model.odata.v4.ODataPropertyBinding_obj","ODataMetaModel":"sap.ui.model.odata.v4.ODataMetaModel_obj","!description":"Model and related classes like bindings for OData V4.","Context":"sap.ui.model.odata.v4.Context_obj","ValueListType":"sap.ui.model.odata.v4.ValueListType","ODataListBinding":"sap.ui.model.odata.v4.ODataListBinding_obj","!category":"namespace","ODataUtils":"sap.ui.model.odata.v4.ODataUtils","!helpDescription":"Model and related classes like bindings for OData V4."},"jQuery.device":{"is":"jQuery.device.is","!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use the respective functions of {@link sap.ui.Device} instead<br>undefined","!category":"namespace","!module":"jquery.sap.mobile","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use the respective functions of {@link sap.ui.Device} instead<br>undefined"},"sap.ui.model.odata.type.Single_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Single with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.Single"},"sap.ui.model.odata.v2":{"!description":"OData-based DataBinding","ODataContextBinding":"sap.ui.model.odata.v2.ODataContextBinding_obj","ODataListBinding":"sap.ui.model.odata.v2.ODataListBinding_obj","ODataTreeBinding":"sap.ui.model.odata.v2.ODataTreeBinding_obj","!category":"namespace","ODataModel":"sap.ui.model.odata.v2.ODataModel_obj","ODataAnnotations":"sap.ui.model.odata.v2.ODataAnnotations_obj","!module":"sap/ui/model/odata/v2/ODataModel","!helpDescription":"OData-based DataBinding"},"sap.ui.model.TreeBindingCompatibilityAdapter":{"!category":"class","!constructorDescription":"Adapter for TreeBindings to add the ListBinding functionality and use the\ntree structure in list based controls.\n\nThis module is only for experimental and internal use!","!module":"sap/ui/model/TreeBindingCompatibilityAdapter","!proto":"sap.ui.base.Object"},"sap.ui.core.util":{"ExportTypeCSV":"sap.ui.core.util.ExportTypeCSV_obj","ExportRow":"sap.ui.core.util.ExportRow_obj","separatorChar":{"!description":"Separator char.\n\nValue needs to be exactly one character or empty for default.","!type":"String","!category":"enum"},"visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nSee {@link sap.ui.core.RenderManager#writeInvisiblePlaceholderData RenderManager#writeInvisiblePlaceholderData} for details.","!type":"Boolean","!category":"enum"},"serializer":"sap.ui.core.util.serializer","busy":{"!description":"Whether the control is currently in busy state.","!type":"Boolean","!category":"enum"},"requests":{"!description":"Getter for property <code>requests<\/code>.\n\nDefault value is <code>[]<\/code>","!type":"[Object]","!category":"enum"},"ExportCell":"sap.ui.core.util.ExportCell_obj","HTTPMETHOD":{"!description":"Enum for the method.","!type":"String","!category":"enum"},"ExportType":"sap.ui.core.util.ExportType_obj","name":{"!description":"Column name.","!type":"String","!category":"enum"},"!category":"namespace","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!type":"Number","!category":"enum"},"recordRequests":{"!description":"Whether or not the requests performed should be recorded (stored). This could be memory intense if each request is recorded. For unit testing purposes it should be set to <code>true<\/code> to compare requests performed otherwise this flag should be set to <code>false<\/code> e.g. for demonstration/app purposes.","!type":"Boolean","!category":"enum"},"mimeType":{"!description":"MIME type.","!type":"String","!category":"enum"},"fileExtension":{"!description":"File extension.","!type":"String","!category":"enum"},"XMLPreprocessor":"sap.ui.core.util.XMLPreprocessor","File":"sap.ui.core.util.File","busyIndicatorSize":{"!description":"The size of the BusyIndicator. For controls with a width smaller 3rem a <code>sap.ui.core.BusyIndicatorSize.Small<\/code> should be used. If the size could vary in width and the width could get smaller than 3rem, the <code>sap.ui.core.BusyIndicatorSize.Auto<\/code> option could be used. The default is set to <code>sap.ui.core.BusyIndicatorSize.Medium<\/code> For a full screen BusyIndicator use <code>sap.ui.core.BusyIndicatorSize.Large<\/code>.","!type":"sap.ui.core.BusyIndicatorSize","!category":"enum"},"charset":{"!description":"Charset.","!type":"String","!category":"enum"},"MockServer":"sap.ui.core.util.MockServer_obj","Export":"sap.ui.core.util.Export_obj","content":{"!description":"Cell content.","!type":"String","!category":"enum"},"rootUri":{"!description":"Getter for property <code>rootUri<\/code>. Has to be relative and requires a trailing '/'. It also needs to match the URI set in OData/JSON models or simple XHR calls in order for the mock server to intercept them.\n\nDefault value is empty/<code>undefined<\/code>. Must end with a a trailing slash (\"/\").","!type":"String","!category":"enum"},"ExportColumn":"sap.ui.core.util.ExportColumn_obj","fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is raised.\n\nSee {@link sap.ui.core.Control#attachValidateFieldGroup}.","!type":"[String]","!category":"enum"},"byteOrderMark":{"!description":"Whether to prepend an unicode byte order mark when saving as a file (only applies for utf-8 charset).","!type":"Boolean","!category":"enum"}},"sap.ui.core.message.MessageParser_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.message.MessageParser with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.core.message.MessageParser"},"sap.ui.core.delegate.ScrollEnablement":{"setPullDown":{"!description":"Set overflow control on top of scroll container.","!type":"fn(oControl: sap.ui.core.Control)","!category":"function","parameters":{"oControl":"type: sap.ui.core.Control, description: Top control that should be normally hidden over the top border of the scroll container (pull-down content)."},"!static":false},"getChildPosition":{"!description":"Calculates scroll position of a child of a container.","!type":"fn(vElement: HTMLElement | jQuery) -> Object","!category":"function","parameters":{"vElement":"type: HTMLElement|jQuery, description: An element(DOM or jQuery) for which the scroll position will be calculated."},"!static":false},"setHorizontal":{"!description":"Enable or disable horizontal scrolling.","!type":"fn(bHorizontal: Boolean)","!category":"function","parameters":{"bHorizontal":"type: boolean, description: set true to enable horizontal scrolling, false - to disable"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.delegate.ScrollEnablement with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setIconTabBar":{"!description":"Sets IconTabBar control to scroll container","!type":"fn(oIconTabBar: sap.m.IconTabBar, fnScrollEndCallback: fn(), fnScrollStartCallback: fn())","!category":"function","parameters":{"fnScrollStartCallback":"type: function, description: callback function for the scroll start event","fnScrollEndCallback":"type: function, description: callback function for the scroll end event","oIconTabBar":"type: sap.m.IconTabBar, description: instance"},"!static":false},"setGrowingList":{"!description":"Sets GrowingList control to scroll container","!type":"fn(fnScrollLoadCallback: fn(), sScrollLoadDirection: sap.m.ListGrowingDirection)","!category":"function","parameters":{"sScrollLoadDirection":"type: sap.m.ListGrowingDirection, description: Scrolling direction","fnScrollLoadCallback":"type: function, description: Scrolling callback"},"!static":false},"!constructorDescription":"Creates a ScrollEnablement delegate that can be attached to Controls requiring\ncapabilities for scrolling of a certain part of their DOM.","!module":"sap/ui/core/delegate/ScrollEnablement","destroy":{"!description":"Destroys this Scrolling delegate.\n\nThis function must be called by the control which uses this delegate in the <code>exit<\/code> function.","!type":"fn()","!category":"function","!static":false},"!description":"Delegate for touch scrolling on mobile devices\n\nThis delegate uses native scrolling of mobile and desktop browsers. Third party scrolling libraries are not supported.\n\nControls that implement ScrollEnablement should additionally provide the getScrollDelegate method that returns the current instance of this delegate object","setBounce":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.42 undefined<br>Setter for property <code>bounce<\/code>.","!type":"fn(bBounce: Boolean)","!category":"function","parameters":{"bBounce":"type: boolean, description: new value for property <code>bounce<\/code>."},"!static":false},"scrollToElement":{"!description":"Scrolls to an element within a container.","!type":"fn(oElement: HTMLElement, iTime?: Number) -> sap.ui.core.delegate.ScrollEnablement","!category":"function","parameters":{"iTime":"type: int, description: The duration of animated scrolling in milliseconds. To scroll immediately without animation, give 0 as value.","oElement":"type: HTMLElement, description: A DOM element."},"!static":false},"!category":"class","getHorizontal":{"!description":"Get current setting for horizontal scrolling.","!type":"fn() -> Boolean","!category":"function","!static":false},"getVertical":{"!description":"Get current setting for vertical scrolling.","!type":"fn() -> Boolean","!category":"function","!static":false},"refresh":{"!description":"Refreshes this Scrolling delegate.","!type":"fn()","!category":"function","!static":false},"setVertical":{"!description":"Enable or disable vertical scrolling.","!type":"fn(bVertical: Boolean)","!category":"function","parameters":{"bVertical":"type: boolean, description: set true to enable vertical scrolling, false - to disable"},"!static":false},"!helpDescription":"Delegate for touch scrolling on mobile devices\n\nThis delegate uses native scrolling of mobile and desktop browsers. Third party scrolling libraries are not supported.\n\nControls that implement ScrollEnablement should additionally provide the getScrollDelegate method that returns the current instance of this delegate object","!proto":"sap.ui.base.Object","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.delegate.ScrollEnablement.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.base.ManagedObject_obj":{"extend":{"!description":"Defines a new subclass of ManagedObject with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> can contain the same information that {@link sap.ui.base.Object.extend} already accepts, plus the following new properties in the 'metadata' object literal:\n\n<ul> <li><code>library : <i>string<\/i><\/code><\/li> <li><code>properties : <i>object<\/i><\/code><\/li> <li><code>defaultProperty : <i>string<\/i><\/code><\/li> <li><code>aggregations : <i>object<\/i><\/code><\/li> <li><code>defaultAggregation : <i>string<\/i><\/code><\/li> <li><code>associations : <i>object<\/i><\/code><\/li> <li><code>events : <i>object<\/i><\/code><\/li> <li><code>specialSettings : <i>object<\/i><\/code>// this one is still experimental and not for public usage!<\/li> <\/ul>\n\nEach of these properties is explained in more detail lateron.\n\nExample: <pre>\nManagedObect.extend('sap.mylib.MyClass', {\n  metadata : {\n    library: 'sap.mylib',\n    properties : {\n      value: 'string',\n      width: 'sap.ui.core.CSSSize',\n      height: { type: 'sap.ui.core.CSSSize', defaultValue: '100%'}\n      description: { type: 'string', defaultValue: '', selector: '#{id}-desc'}\n    },\n    defaultProperty : 'value',\n    aggregations : {\n      header : { type: 'sap.mylib.FancyHeader', multiple : false }\n      items : 'sap.ui.core.Control',\n      buttons: { type: 'sap.mylib.Button', multiple : true, selector: '#{id} > .sapMLButtonsSection'}\n    },\n    defaultAggregation : 'items',\n    associations : {\n      initiallyFocused : { type: 'sap.ui.core.Control' }\n    },\n    events: {\n      beforeOpen : {\n        parameters : {\n          opener : { type: 'sap.ui.core.Control' }\n        }\n      }\n    },\n  },\n\n  init: function() {\n  }\n\n}); // end of 'extend' call\n<\/pre>\n\nDetailed explanation of properties<br>\n\n<b>'library'<\/b> : <i>string<\/i><br> Name of the library that the new subclass should belong to. If the subclass is a control or element, it will automatically register with that library so that authoring tools can discover it. By convention, the name of the subclass should have the library name as a prefix, e.g. 'sap.ui.commons.Panel' belongs to library 'sap.ui.commons'.\n\n<b>'properties'<\/b> : <i>object<\/i><br> An object literal whose properties each define a new managed property in the ManagedObject subclass. The value can either be a simple string which then will be assumed to be the type of the new property or it can be an object literal with the following properties <ul> <li><code>type: <i>string<\/i><\/code> type of the new property. Must either be one of the built-in types 'string', 'boolean', 'int', 'float', 'object' or 'any', or a type created and registered with {@link sap.ui.base.DataType.createType} or an array type based on one of the previous types.<\/li> <li><code>group:<i>string<\/i><\/code> a semantic grouping of the properties, intended to be used in design time tools. Allowed values are (case sensitive): Accessibility, Appearance, Behavior, Data, Designtime, Dimension, Identification, Misc<\/li> <li><code>defaultValue: <i>any<\/i><\/code> the default value for the property or null if there is no defaultValue.<\/li> <li><code>bindable: <i>boolean|string<\/i><\/code> (either can be omitted or set to the boolean value <code>true<\/code> or the magic string 'bindable') If set to <code>true<\/code> or 'bindable', additional named methods <code>bind<i>Name<\/i><\/code> and <code>unbind<i>Name<\/i><\/code> are generated as convenience. Despite its name, setting this flag is not mandatory to make the managed property bindable. The generic methods {@link #bindProperty} and {@link #unbindProperty} can always be used. <\/li> <li><code>selector: <i>string<\/i><\/code> either can be omitted or set to a valid selector string as defined by the {@link https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector Element.prototype.querySelector} method should locate the DOM element that rendered this property's value. It should only be set for properties that have a visual text representation in the DOM.\n\nIn addition to the CSS selector syntax, the selector string can contain the placeholder <code>{id}<\/code> (multiple times). Before evaluating the selector in the context of an Element or Control, all occurrences of the placeholder have to be replaced by the (potentially escaped) ID of that Element or Control. In fact, any selector should start with <code>#{id}<\/code> to ensure that the query result is limited to the desired Element or Control.\n\n<b>Note<\/b>: there is a convenience method {@link sap.ui.core.Element#getDomRefForSetting} that evaluates the selector in the context of a concrete Element or Control instance. It also handles the placeholder <code>{id}<\/code>. Only selected framework features may use that private method, it is not yet a public API and might be changed or removed in future versions of UI5. However, instead of maintaining the <code>selector<\/code> in the metadata, Element and Control classes can overwrite <code>getDomRefForSetting<\/code> and determine the DOM Element dynamically.<\/li> <\/ul> Property names should use camelCase notation, start with a lowercase letter and only use characters from the set [a-zA-Z0-9_$]. If an aggregation in the literal is preceded by a JSDoc comment (doclet) and if the UI5 plugin and template are used for JSDoc3 generation, the doclet will be used as generic documentation of the aggregation.\n\nFor each public property 'foo', the following methods will be created by the \"extend\" method and will be added to the prototype of the subclass: <ul> <li>getFoo() - returns the current value of property 'foo'. Internally calls {@link #getProperty}<\/li> <li>setFoo(v) - sets 'v' as the new value of property 'foo'. Internally calls {@link #setProperty}<\/li> <li>bindFoo(c) - (only if property was defined to be 'bindable'): convenience function that wraps {@link #bindProperty}<\/li> <li>unbindFoo() - (only if property was defined to be 'bindable'): convenience function that wraps {@link #unbindProperty}<\/li> <\/ul>\n\n<b>'defaultProperty'<\/b> : <i>string<\/i><br> When specified, the default property must match the name of one of the properties defined for the new subclass (either own or inherited). The named property can be used to identify the main property to be used for bound data. E.g. the value property of a field control.\n\n<b>'aggregations'<\/b> : <i>object<\/i><br> An object literal whose properties each define a new aggregation in the ManagedObject subclass. The value can either be a simple string which then will be assumed to be the type of the new aggregation or it can be an object literal with the following properties <ul> <li><code>type: <i>string<\/i><\/code> type of the new aggregation. must be the full global name of a ManagedObject subclass (in dot notation, e.g. 'sap.m.Button')<\/li> <li><code>[multiple]: <i>boolean<\/i><\/code> whether the aggregation is a 0..1 (false) or a 0..n aggregation (true), defaults to true <\/li> <li><code>[singularName]: <i>string<\/i><\/code>. Singular name for 0..n aggregations. For 0..n aggregations the name by convention should be the plural name. Methods affecting multiple objects in an aggregation will use the plural name (e.g. getItems(), whereas methods that deal with a single object will use the singular name (e.g. addItem). The framework knows a set of common rules for building plural form of English nouns and uses these rules to determine a singular name on its own. if that name is wrong, a singluarName can be specified with this property. <\/li> <li><code>[visibility]: <i>string<\/i><\/code> either 'hidden' or 'public', defaults to 'public'. Aggregations that belong to the API of a class must be 'public' whereas 'hidden' aggregations typically are used for the implementation of composite classes (e.g. composite controls) <\/li> <li><code>bindable: <i>boolean|string<\/i><\/code> (either can be omitted or set to the boolean value <code>true<\/code> or the magic string 'bindable') If set to <code>true<\/code> or 'bindable', additional named methods <code>bind<i>Name<\/i><\/code> and <code>unbind<i>Name<\/i><\/code> are generated as convenience. Despite its name, setting this flag is not mandatory to make the managed aggregation bindable. The generic methods {@link #bindAggregation} and {@link #unbindAggregation} can always be used. <\/li> <li><code>forwarding: <i>object<\/i><\/code> If set, this defines a forwarding of objects added to this aggregation into an aggregation of another ManagedObject - typically to an inner control within a composite control. This means that all adding, removal, or other operations happening on the source aggregation are actually called on the target instance. All elements added to the source aggregation will be located at the target aggregation (this means the target instance is their parent). Both, source and target element will return the added elements when asked for the content of the respective aggregation. If present, the named (non-generic) aggregation methods will be called for the target aggregation. Aggregations can only be forwarded to non-hidden aggregations of the same multiplicity (single/multiple). The target aggregation must also be \"compatible\" to the source aggregation in the sense that any items given to the source aggregation must also be valid in the target aggregation (otherwise the target element will throw a validation error). If the forwarded elements use data binding, the target element must be properly aggregated by the source element to make sure all models are available there as well. The aggregation target must remain the same instance across the entire lifetime of the source control. Aggregation forwarding will behave unexpectedly when the content in the target aggregation is modified by other actors (e.g. by the target element or by another forwarding from a different source aggregation). Hence, this is not allowed. The forwarding configuration object defines the target of the forwarding. The available settings are: <ul> <li><code>idSuffix: <i>string<\/i><\/code>A string which is appended to the ID of <i>this<\/i> ManagedObject to construct the ID of the target ManagedObject. This is one of the two options to specify the target. This option requires the target instance to be created in the init() method of this ManagedObject and to be always available.<\/li> <li><code>getter: <i>string<\/i><\/code>The name of the function on instances of this ManagedObject which returns the target instance. This second option to specify the target can be used for lazy instantiation of the target. Note that either idSuffix or getter must be given. Also note that the target instance returned by the getter must remain the same over the entire lifetime of this ManagedObject and the implementation assumes that all instances return the same type of object (at least the target aggregation must always be defined in the same class).<\/li> <li><code>aggregation: <i>string<\/i><\/code>The name of the aggregation on the target into which the objects shall be forwarded. The multiplicity of the target aggregation must be the same as the one of the source aggregation for which forwarding is defined.<\/li> <li><code>[forwardBinding]: <i>boolean<\/i><\/code>Whether any binding should happen on the forwarding target or not. Default if omitted is <code>false<\/code>, which means any bindings happen on the outer ManagedObject. When the binding is forwarded, all binding methods like updateAggregation, getBindingInfo, refreshAggregation etc. are called on the target element of the forwarding instead of being called on this element. The basic aggregation mutator methods (add/remove etc.) are only called on the forwarding target element. Without forwardBinding, they are called on this element, but forwarded to the forwarding target, where they actually modify the aggregation. <\/li> <\/ul> <\/li> <li><code>selector: <i>string<\/i><\/code> either can be omitted or set to a valid selector string as defined by the {@link https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector Element.prototype.querySelector} method. The selector should locate the DOM element that surrounds the aggregation's content. It should only be set for aggregations that have a visual representation in the DOM. A DOM element surrounding the aggregation's rendered content should be available in the DOM, even if the aggregation is empty or not rendered for some reason. In cases where this is not possible or not intended, <code>getDomRefForSetting<\/code> can be overridden, see below.\n\nIn addition to the CSS selector syntax, the selector string can contain the magic token <code>{id}<\/code> (multiple times). Before evaluating the selector in the context of an Element or Control, all occurrences of the token have to be replaced by the (potentially escaped) ID of that Element or Control. In fact, any selector should start with <code>#{id}<\/code> to ensure that the query result is limited to the desired Element or Control.\n\n<b>Note<\/b>: there is a convenience method {@link sap.ui.core.Element#getDomRefForSetting} that evaluates the selector in the context of a concrete Element or Control instance. It also handles the placeholder <code>{id}<\/code>. Only selected framework features may use that private method, it is not yet a public API and might be changed or removed in future versions of UI5. However, instead of maintaining the <code>selector<\/code> in the metadata, Element and Control classes can overwrite <code>getDomRefForSetting<\/code> to calculate or add the appropriate DOM Element dynamically.<\/li> <\/li> <\/ul> Aggregation names should use camelCase notation, start with a lowercase letter and only use characters from the set [a-zA-Z0-9_$]. The name for a hidden aggregations might start with an underscore. If an aggregation in the literal is preceded by a JSDoc comment (doclet) and if the UI5 plugin and template are used for JSDoc3 generation, the doclet will be used as generic documentation of the aggregation.\n\nFor each public aggregation 'item' of cardinality 0..1, the following methods will be created by the \"extend\" method and will be added to the prototype of the subclass: <ul> <li>getItem() - returns the current value of aggregation 'item'. Internally calls {@link #getAggregation} with a default value of <code>undefined<\/code><\/li> <li>setItem(o) - sets 'o' as the new aggregated object in aggregation 'item'. Internally calls {@link #setAggregation}<\/li> <li>destroyItem(o) - destroy a currently aggregated object in aggregation 'item' and clears the aggregation. Internally calls {@link #destroyAggregation}<\/li> <li>bindItem(c) - (only if aggregation was defined to be 'bindable'): convenience function that wraps {@link #bindAggregation}<\/li> <li>unbindItem() - (only if aggregation was defined to be 'bindable'): convenience function that wraps {@link #unbindAggregation}<\/li> <\/ul> For a public aggregation 'items' of cardinality 0..n, the following methods will be created: <ul> <li>getItems() - returns an array with the objects contained in aggregation 'items'. Internally calls {@link #getAggregation} with a default value of <code>[]<\/code><\/li> <li>addItem(o) - adds an object as last element in the aggregation 'items'. Internally calls {@link #addAggregation}<\/li> <li>insertItem(o,p) - inserts an object into the aggregation 'items'. Internally calls {@link #insertAggregation}<\/li> <li>indexOfItem(o) - returns the position of the given object within the aggregation 'items'. Internally calls {@link #indexOfAggregation}<\/li> <li>removeItem(v) - removes an object from the aggregation 'items'. Internally calls {@link #removeAggregation}<\/li> <li>removeItems() - removes all objects from the aggregation 'items'. Internally calls {@link #removeAllAggregation}<\/li> <li>destroyItems() - destroy all currently aggregated objects in aggregation 'items' and clears the aggregation. Internally calls {@link #destroyAggregation}<\/li> <li>bindItems(c) - (only if aggregation was defined to be 'bindable'): convenience function that wraps {@link #bindAggregation}<\/li> <li>unbindItems() - (only if aggregation was defined to be 'bindable'): convenience function that wraps {@link #unbindAggregation}<\/li> <\/ul> For private or hidden aggregations, no methods are generated.\n\n<b>'defaultAggregation'<\/b> : <i>string<\/i><br> When specified, the default aggregation must match the name of one of the aggregations defined for the new subclass (either own or inherited). The named aggregation will be used in contexts where no aggregation is specified. E,g. when an object in an XMLView embeds other objects without naming an aggregation, as in the following example: <pre>\n &lt;!-- assuming the defaultAggregation for Dialog is 'content' -->\n &lt;Dialog>\n   &lt;Text/>\n   &lt;Button/>\n &lt;/Dialog>\n<\/pre>\n\n<b>'associations'<\/b> : <i>object<\/i><br> An object literal whose properties each define a new association of the ManagedObject subclass. The value can either be a simple string which then will be assumed to be the type of the new association or it can be an object literal with the following properties <ul> <li><code>type: <i>string<\/i><\/code> type of the new association<\/li> <li><code>multiple: <i>boolean<\/i><\/code> whether the association is a 0..1 (false) or a 0..n association (true), defaults to false(1) for associations<\/li> <li><code>[singularName]: <i>string<\/i><\/code>. Singular name for 0..n associations. For 0..n associations the name by convention should be the plural name. Methods affecting multiple objects in an association will use the plural name (e.g. getItems(), whereas methods that deal with a single object will use the singular name (e.g. addItem). The framework knows a set of common rules for building plural form of English nouns and uses these rules to determine a singular name on its own. if that name is wrong, a singluarName can be specified with this property.<\/li> <\/ul> Association names should use camelCase notation, start with a lowercase letter and only use characters from the set [a-zA-Z0-9_$]. If an association in the literal is preceded by a JSDoc comment (doclet) and if the UI5 plugin and template are used for JSDoc3 generation, the doclet will be used as generic documentation of the association.\n\nFor each association 'ref' of cardinality 0..1, the following methods will be created by the \"extend\" method and will be added to the prototype of the subclass: <ul> <li>getRef() - returns the current value of association 'item'. Internally calls {@link #getAssociation} with a default value of <code>undefined<\/code><\/li> <li>setRef(o) - sets 'o' as the new associated object in association 'item'. Internally calls {@link #setAssociation}<\/li> <\/ul> For a public association 'refs' of cardinality 0..n, the following methods will be created: <ul> <li>getRefs() - returns an array with the objects contained in association 'items'. Internally calls {@link #getAssociation} with a default value of <code>[]<\/code><\/li> <li>addRef(o) - adds an object as last element in the association 'items'. Internally calls {@link #addAssociation}<\/li> <li>removeRef(v) - removes an object from the association 'items'. Internally calls {@link #removeAssociation}<\/li> <li>removeAllRefs() - removes all objects from the association 'items'. Internally calls {@link #removeAllAssociation}<\/li> <\/ul>\n\n<b>'events'<\/b> : <i>object<\/i><br> An object literal whose properties each define a new event of the ManagedObject subclass. The value can either be a simple string which then will be assumed to be the type of the new association or it can be an object literal with the following properties <ul> <li><code>allowPreventDefault: <i>boolean<\/i><\/code> whether the event allows to prevented the default behavior of the event source<\/li> <li><code>parameters: <i>object<\/i><\/code> an object literal that describes the parameters of this event. <\/li> <\/ul> Event names should use camelCase notation, start with a lowercase letter and only use characters from the set [a-zA-Z0-9_$]. If an event in the literal is preceded by a JSDoc comment (doclet) and if the UI5 plugin and template are used for JSDoc3 generation, the doclet will be used as generic documentation of the event.\n\nFor each event 'Some' the following methods will be created by the \"extend\" method and will be added to the prototype of the subclass: <ul> <li>attachSome(fn,o) - registers a listener for the event. Internally calls {@link #attachEvent}<\/li> <li>detachSome(fn,o) - deregisters a listener for the event. Internally calls {@link #detachEvent}<\/li> <li>fireSome() - fire the event. Internally calls {@link #fireEvent}<\/li> <\/ul>\n\n<b>'specialSettings'<\/b> : <i>object<\/i><br> Special settings are an experimental feature and MUST NOT BE USED by controls or applications outside of the sap.ui.core project.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: constructor function for the metadata object. If not given, it defaults to <code>sap.ui.base.ManagedObjectMetadata<\/code>.","oClassInfo":"type: object, description: object literal with informations about the class","sClassName":"type: string, description: name of the class to be created"},"!static":true},"!type":"fn(sId: String, mSettings: Object, oScope?: Object)","prototype":"sap.ui.base.ManagedObject"},"sap.ui.model.odata.type.DateTime":{"!description":"This class represents the OData V2 primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.DateTime<\/code><\/a>.\n\nIf you want to display a date and a time, prefer {@link sap.ui.model.odata.type.DateTimeOffset}, specifically designed for this purpose.\n\nUse <code>DateTime<\/code> with the SAP-specific annotation <code>display-format=Date<\/code> (resp. the constraint <code>displayFormat: \"Date\"<\/code>) to display only a date.\n\nIn {@link sap.ui.model.odata.v2.ODataModel} this type is represented as a <code>Date<\/code>. With the constraint <code>displayFormat: \"Date\"<\/code>, the time zone is UTC and the time part is ignored, otherwise it is a date/time value in local time.","extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.DateTime with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.DateTimeBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","!constructorDescription":"Constructor for a primitive type <code>Edm.DateTime<\/code>.","!module":"sap/ui/model/odata/type/DateTime","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.DateTime.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.odata.type.DateTimeBase","!helpDescription":"This class represents the OData V2 primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.DateTime<\/code><\/a>.\n\nIf you want to display a date and a time, prefer {@link sap.ui.model.odata.type.DateTimeOffset}, specifically designed for this purpose.\n\nUse <code>DateTime<\/code> with the SAP-specific annotation <code>display-format=Date<\/code> (resp. the constraint <code>displayFormat: \"Date\"<\/code>) to display only a date.\n\nIn {@link sap.ui.model.odata.v2.ODataModel} this type is represented as a <code>Date<\/code>. With the constraint <code>displayFormat: \"Date\"<\/code>, the time zone is UTC and the time part is ignored, otherwise it is a date/time value in local time."},"sap.ui.core.delegate":{"!category":"namespace","ItemNavigation":"sap.ui.core.delegate.ItemNavigation_obj","!module":"sap/ui/core/delegate/ScrollEnablement","ScrollEnablement":"sap.ui.core.delegate.ScrollEnablement_obj"},"sap.ui.model.Model":{"createBindingContext":{"!description":"Implement in inheriting classes","!type":"fn(sPath: String, oContext?: Object, mParameters?: Object, fnCallBack?: fn(), bReload?: Boolean) -> sap.ui.model.Context","!category":"function","parameters":{"mParameters":"type: object, description: the parameters used to create the new binding context","bReload":"type: boolean, description: force reload even if data is already available. For server side models this should refetch the data from the server","sPath":"type: string, description: the path to create the new context from","fnCallBack":"type: function, description: the function which should be called after the binding context has been created","oContext":"type: object, description: the context which should be used to create the new binding context"},"!static":false},"setLegacySyntax":{"!description":"Enables legacy path syntax handling\n\nThis defines, whether relative bindings, which do not have a defined binding context, should be compatible to earlier releases which means they are resolved relative to the root element or handled strict and stay unresolved until a binding context is set","!type":"fn(bLegacySyntax: Boolean)","!category":"function","parameters":{"bLegacySyntax":"type: boolean, description: the path syntax to use"},"!static":false},"getMetaModel":{"!description":"Returns the meta model associated with this model if it is available for the concrete model type.","!type":"fn() -> sap.ui.model.MetaModel","!category":"function","!static":false},"detachRequestCompleted":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'requestCompleted' event of this <code>sap.ui.model.Model<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.Model","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"checkFilterOperation":{"!description":"Checks whether the given filters contain an unsupported operator.\n\nOData v1, v2 and Client Bindings cannot be filtered with <code>sap.ui.model.FilterOperator<\/code> <code>\"Any\"<\/code> and <code>\"All\"<\/code>. The model property <code>mUnsupportedFilterOperators<\/code> can be configured in each model subclass to describe the unsupported operators.\n\nIf any of the given filters contains nested filters, those are checked recursively.","!type":"fn(vFilters: [sap.ui.model.Filter | [object Object]])","!category":"function","parameters":{"vFilters":"type: sap.ui.model.Filter|[object Object][], description: Single filter or an array of filter instances"},"!static":false},"!module":"sap/ui/model/Model","detachRequestSent":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'requestSent' event of this <code>sap.ui.model.Model<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.Model","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"destroy":{"!description":"Destroys the model and clears the model data. A model implementation may override this function and perform model specific cleanup tasks e.g. abort requests, prevent new requests, etc.","!type":"fn()","!category":"function","!static":false},"bindProperty":{"!description":"Implement in inheriting classes","!type":"fn(sPath: String, oContext?: Object, mParameters?: Object) -> sap.ui.model.PropertyBinding","!category":"function","parameters":{"mParameters":"type: object, description: additional model specific parameters (optional)","sPath":"type: string, description: the path pointing to the property that should be bound","oContext":"type: object, description: the context object for this databinding (optional)"},"!static":false},"setSizeLimit":{"!description":"Set the maximum number of entries which are used for list bindings.\n\nDefault is 100.","!type":"fn(iSizeLimit: Number)","!category":"function","parameters":{"iSizeLimit":"type: int, description: collection size limit"},"!static":false},"fireRequestSent":{"!description":"Fire event requestSent to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.Model","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"bindTree":{"!description":"Implement in inheriting classes","!type":"fn(sPath: String, oContext?: Object, aFilters?: Array, mParameters?: Object, aSorters?: Array) -> sap.ui.model.TreeBinding","!category":"function","parameters":{"mParameters":"type: object, description: additional model specific parameters (optional)","aSorters":"type: array, description: predefined sap.ui.model.sorter/s contained in an array (optional)","sPath":"type: string, description: the path pointing to the tree / array that should be bound","aFilters":"type: array, description: predefined filter/s contained in an array (optional)","oContext":"type: object, description: the context object for this databinding (optional)"},"!static":false},"getOriginalProperty":{"!description":"Returns the original value for the property with the given path and context. The original value is the value that was last responded by a server if using a server model implementation.","!type":"fn(sPath: String, oContext?: Object) -> Object","!category":"function","parameters":{"sPath":"type: string, description: the path/name of the property","oContext":"type: object, description: the context if available to access the property value"},"!static":false},"!category":"class","detachParseError":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'parseError' event of this <code>sap.ui.model.Model<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.Model","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"refresh":{"!description":"Refresh the model. This will check all bindings for updated data and update the controls if data has been changed.","!type":"fn(bForceUpdate: Boolean)","!category":"function","parameters":{"bForceUpdate":"type: boolean, description: Update controls even if data has not been changed"},"!static":false},"getObject":{"!description":"Implement in inheriting classes","!type":"fn(sPath: String, oContext?: Object, mParameters?: Object)","!category":"function","parameters":{"mParameters":"type: object, description: additional model specific parameters","sPath":"type: string, description: the path to where to read the object","oContext":"type: object, description: the context with which the path should be resolved"},"!static":false},"attachRequestSent":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'requestSent' event of this <code>sap.ui.model.Model<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.Model","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, the global context (window) is used."},"!static":false},"attachRequestFailed":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'requestFailed' event of this <code>sap.ui.model.Model<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.Model","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, this Model is used."},"!static":false},"destroyBindingContext":{"!description":"Implement in inheriting classes","!type":"fn(oContext: Object)","!category":"function","parameters":{"oContext":"type: object, description: to destroy"},"!static":false},"attachPropertyChange":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'propertyChange' event of this <code>sap.ui.model.Model<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.Model","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, the global context (window) is used."},"!static":false},"fireRequestCompleted":{"!description":"Fire event requestCompleted to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.Model","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.Model with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.message.MessageProcessor.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"isBindingModeSupported":{"!description":"Check if the specified binding mode is supported by the model.","!type":"fn(sMode: sap.ui.model.BindingMode)","!category":"function","parameters":{"sMode":"type: sap.ui.model.BindingMode, description: the binding mode to check"},"!static":false},"detachPropertyChange":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'propertyChange' event of this <code>sap.ui.model.Model<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.Model","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"!constructorDescription":"Constructor for a new Model.\n\nEvery Model is a MessageProcessor that is able to handle Messages with the normal binding path syntax in the target.","isLegacySyntax":{"!description":"Returns whether legacy path syntax is used","!type":"fn() -> Boolean","!category":"function","!static":false},"bindList":{"!description":"Implement in inheriting classes","!type":"fn(sPath: String, oContext?: Object, aSorters?: sap.ui.model.Sorter, aFilters?: Array, mParameters?: Object) -> sap.ui.model.ListBinding","!category":"function","parameters":{"mParameters":"type: object, description: additional model specific parameters (optional)","aSorters":"type: sap.ui.model.Sorter, description: initial sort order (can be either a sorter or an array of sorters) (optional)","sPath":"type: string, description: the path pointing to the list / array that should be bound","aFilters":"type: array, description: predefined filter/s (can be either a filter or an array of filters) (optional)","oContext":"type: object, description: the context object for this databinding (optional)"},"!static":false},"attachRequestCompleted":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'requestCompleted' event of this <code>sap.ui.model.Model<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.Model","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, the global context (window) is used."},"!static":false},"getDefaultBindingMode":{"!description":"Get the default binding mode for the model","!type":"fn() -> sap.ui.model.BindingMode","!category":"function","!static":false},"fireParseError":{"!description":"Fire event parseError to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.Model","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"detachRequestFailed":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'requestFailed' event of this <code>sap.ui.model.Model<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.Model","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"setMessages":{"!description":"Sets messages","!type":"fn(mMessages: Object)","!category":"function","parameters":{"mMessages":"type: object, description: Messages for this model"},"!static":false},"getMessagesByPath":{"!description":"Get messages for path","!type":"fn(sPath: String)","!category":"function","parameters":{"sPath":"type: string, description: The binding path"},"!static":false},"!description":"This is an abstract base class for model objects.","fireRequestFailed":{"!description":"Fire event requestFailed to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.Model","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"getProperty":{"!description":"Implement in inheriting classes","!type":"fn(sPath: String, oContext?: Object)","!category":"function","parameters":{"sPath":"type: string, description: the path to where to read the attribute value","oContext":"type: object, description: the context with which the path should be resolved"},"!static":false},"setDefaultBindingMode":{"!description":"Set the default binding mode for the model. If the default binding mode should be changed, this method should be called directly after model instance creation and before any binding creation. Otherwise it is not guaranteed that the existing bindings will be updated with the new binding mode.","!type":"fn(sMode: sap.ui.model.BindingMode) -> sap.ui.model.Model","!category":"function","parameters":{"sMode":"type: sap.ui.model.BindingMode, description: the default binding mode to set for the model"},"!static":false},"attachParseError":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'parseError' event of this <code>sap.ui.model.Model<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.Model","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, the global context (window) is used."},"!static":false},"bindContext":{"!description":"Create ContextBinding","!type":"fn(sPath: String | Object, oContext?: Object, mParameters?: Object, oEvents?: Object) -> sap.ui.model.ContextBinding","!category":"function","parameters":{"mParameters":"type: object, description: additional model specific parameters (optional)","sPath":"type: string|object, description: the path pointing to the property that should be bound or an object which contains the following parameter properties: path, context, parameters","oEvents":"type: object, description: event handlers can be passed to the binding ({change:myHandler})","oContext":"type: object, description: the context object for this databinding (optional)"},"!static":false},"firePropertyChange":{"!description":"Fire event propertyChange to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.Model","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.Model.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.message.MessageProcessor","!helpDescription":"This is an abstract base class for model objects."},"sap.ui.core.Popup":{"setAnimations":{"!description":"Sets the animation functions to use for opening and closing the Popup. Any null value will be ignored and not change the respective animation function. When called, the animation functions receive three parameters: - the jQuery object wrapping the DomRef of the popup - the requested animation duration - a function that MUST be called once the animation has completed","!type":"fn(fnOpen: fn(), fnClose: fn()) -> sap.ui.core.Popup","!category":"function","parameters":{"fnClose":"type: function, description: undefined","fnOpen":"type: function, description: undefined"},"!static":false},"setInitialZIndex":{"!description":"Set an initial z-index that should be used by all Popup so all Popups start at least with the set z-index. If the given z-index is lower than any current available z-index the highest z-index will be used.","!type":"fn(iInitialZIndex: Number)","!category":"function","parameters":{"iInitialZIndex":"type: Number, description: is the initial z-index"},"!static":true},"getAutoClose":{"!description":"Determines whether the pop-up should auto closes or not.","!type":"fn() -> Boolean","!category":"function","!static":false},"detachOpened":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:opened opened} event of this <code>sap.ui.core.Popup<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.Popup","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setModal":{"!description":"Used to specify whether the Popup should be modal. A modal popup will put some fading \"block layer\" over the background and prevent attempts to put the focus outside/below the popup. Setting this while the popup is open will change \"block layer\" immediately.","!type":"fn(bModal: Boolean, sModalCSSClass?: String) -> sap.ui.core.Popup","!category":"function","parameters":{"bModal":"type: boolean, description: whether the Popup is of modal type","sModalCSSClass":"type: string, description: a CSS class (or space-separated list of classes) that should be added to the block layer"},"!static":false},"getLastZIndex":{"!description":"Returns the last z-index that has been handed out. does not increase the internal z-index counter.","!type":"fn() -> Number","!category":"function","!static":true},"!module":"sap/ui/core/Popup","close":{"!description":"Closes the popup.\n\nIf the Popup is already closed or in the process of closing, calling this method does nothing. If the Popup is in the process of being opened and closed with a duration of 0, calling this method does nothing. If the Popup is in the process of being opened and closed with an animation duration, the animation will be chained, but this functionality is dangerous, may lead to inconsistent behavior and is thus not recommended and may even be removed.","!type":"fn(iDuration?: Number)","!category":"function","parameters":{"iDuration":"type: int, description: animation duration in milliseconds; default is the jQuery preset \"fast\". For iDuration == 0 the closing happens synchronously without animation."},"!static":false},"destroy":{"!description":"Closes and destroys this instance of Popup. Does not destroy the hosted content.","!type":"fn()","!category":"function","!static":false},"open":{"!description":"Opens the popup's content at the position either specified here or beforehand via {@link #setPosition}. Content must be capable of being positioned via \"position:absolute;\" All parameters are optional (open() may be called without any parameters). iDuration may just be omitted, but if any of \"at\", \"of\", \"offset\", \"collision\" is given, also the preceding positioning parameters (\"my\", at\",...) must be given.\n\nIf the Popup's OpenState is different from \"CLOSED\" (i.e. if the Popup is already open, opening or closing), the call is ignored.","!type":"fn(iDuration?: Number, my?: sap.ui.core.Popup.Dock, at?: sap.ui.core.Popup.Dock, of?: String | sap.ui.core.Element | DOMRef | jQuery | jQuery.Event, offset?: String, collision?: String, followOf?: Boolean)","!category":"function","parameters":{"of":"type: string|sap.ui.core.Element|DOMRef|jQuery|jQuery.Event, description: specifies the reference element to which the given content should dock to","at":"type: sap.ui.core.Popup.Dock, description: the \"of\" element's reference point for docking to","followOf":"type: boolean, description: defines whether the popup should follow the dock reference when the reference changes its position.","offset":"type: string, description: the offset relative to the docking point, specified as a string with space-separated pixel values (e.g. \"0 10\" to move the popup 10 pixels to the right). If the docking of both \"my\" and \"at\" are both RTL-sensitive (\"begin\" or \"end\"), this offset is automatically mirrored in the RTL case as well.","my":"type: sap.ui.core.Popup.Dock, description: the popup content's reference position for docking","collision":"type: string, description: defines how the position of an element should be adjusted in case it overflows the window in some direction.","iDuration":"type: int, description: animation duration in milliseconds; default is the jQuery preset \"fast\". For iDuration == 0 the opening happens synchronously without animation."},"!static":false},"setFollowOf":{"!description":"This enabled/disables the Popup to follow its opening reference. If the Popup is open and a followOf should be set the corresponding listener will be attached.","!type":"fn(followOf: Boolean | fn() | null)","!category":"function","parameters":{"followOf":"type: boolean|function|null, description: a boolean value enabled/disables the default followOf-Handler. Or an individual handler can be given. null deletes all followOf settings."},"!static":false},"!category":"class","setDurations":{"!description":"Sets the durations for opening and closing animations. Null values and values < 0 are ignored. A duration of 0 means no animation. Default value is \"fast\" which is the jQuery constant for \"200 ms\".","!type":"fn(iOpenDuration: Number, iCloseDuration: Number) -> sap.ui.core.Popup","!category":"function","parameters":{"iCloseDuration":"type: int, description: in milliseconds","iOpenDuration":"type: int, description: in milliseconds"},"!static":false},"setAutoCloseAreas":{"!description":"Sets the additional areas in the page that are considered part of the Popup when autoclose is enabled. - non-touch environment: if the focus leaves the Popup but immediately enters one of these areas, the Popup does NOT close. - touch environment: if user clicks one of these areas, the Popup does NOT close.","!type":"fn(aAutoCloseAreas: [[object Object][] | [object Object][] | [object Object]]) -> sap.ui.core.Popup","!category":"function","parameters":{"aAutoCloseAreas":"type: [object Object][]|[object Object][]|[object Object][], description: an array containing DOM elements, sap.ui.core.Element or an ID which are considered part of the Popup; a value of null removes all previous areas"},"!static":false},"fireOpened":{"!description":"Fires event {@link #event:opened opened} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.core.Popup","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getFollowOf":{"!description":"This returns true/false if the default followOf method should be used. If a separate followOf-handler was previously added the correspodning function is returned.","!type":"fn() -> Boolean | fn()","!category":"function","!static":false},"getModal":{"!description":"Returns the value if a Popup is of modal type","!type":"fn()","!category":"function","!static":false},"setInitialFocusId":{"!description":"Sets the ID of the element that should be focused once the popup opens. If the given ID is the ID of an existing Control, this Control's focusDomRef will be focused instead, which may be an HTML element with a different ID (usually a sub-element inside the Control). If no existing element ID is supplied and the Popup is modal or auto-close, the Popup will instead focus the first focusable element.","!type":"fn(sId: String)","!category":"function","parameters":{"sId":"type: string, description: the ID of the DOM element to focus"},"!static":false},"getContent":{"!description":"Returns this Popup's content.","!type":"fn() -> sap.ui.core.Control | DOMRef","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.Popup with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"attachOpened":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:opened opened} event of this <code>sap.ui.core.Popup<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.core.Popup<\/code> itself.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.Popup","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.core.Popup<\/code> itself"},"!static":false},"setPosition":{"!description":"Sets the position of the Popup (if you refer to a Control as anchor then do not use the DOMRef of the control which might change after re-renderings). Optional parameters can only be omitted when all subsequent parameters are omitted as well.","!type":"fn(my: sap.ui.core.Popup.Dock, at: sap.ui.core.Popup.Dock | Object, of?: String | sap.ui.core.Element | DOMRef | jQuery | jQuery.Event, offset?: String, collision?: String) -> sap.ui.core.Popup","!category":"function","parameters":{"of":"type: string|sap.ui.core.Element|DOMRef|jQuery|jQuery.Event, description: specifies the reference element to which the given content should be aligned as specified in the other parameters","at":"type: sap.ui.core.Popup.Dock|Object, description: specifies the point of the reference element to which the given Content should be aligned","offset":"type: string, description: the offset relative to the docking point, specified as a string with space-separated pixel values (e.g. \"0 10\" to move the popup 10 pixels to the right). If the docking of both \"my\" and \"at\" are both RTL-sensitive (\"begin\" or \"end\"), this offset is automatically mirrored in the RTL case as well.","my":"type: sap.ui.core.Popup.Dock, description: specifies which point of the given Content should be aligned","collision":"type: string, description: defines how the position of an element should be adjusted in case it overflows the window in some direction. The valid values that refer to jQuery-UI's position parameters are \"flip\", \"fit\" and \"none\"."},"!static":false},"!constructorDescription":"Creates an instance of <code>sap.ui.core.Popup<\/code> that can be used to open controls as a Popup,\nvisually appearing in front of other controls.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Associations\n<ul>\n<li>{@link #getChildPopups childPopups} : (sap.ui.core.ID | sap.ui.core.Popup)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:opened opened} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:closed closed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","getNextZIndex":{"!description":"Returns the next available z-index on top of the existing/previous popups. Each call increases the internal z-index counter and the returned z-index.","!type":"fn() -> Number","!category":"function","!static":true},"getOpenState":{"!description":"Returns whether the Popup is currently open, closed, or transitioning between these states.","!type":"fn() -> sap.ui.core.OpenState","!category":"function","!static":false},"setContent":{"!description":"Sets the content this instance of the Popup should render. Content must be capable of being positioned via position:absolute;","!type":"fn(oContent: sap.ui.core.Control | DOMRef) -> sap.ui.core.Popup","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control|DOMRef, description: undefined"},"!static":false},"fireClosed":{"!description":"Fires event {@link #event:closed closed} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.core.Popup","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"attachClosed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:closed closed} event of this <code>sap.ui.core.Popup<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.core.Popup<\/code> itself.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.Popup","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.core.Popup<\/code> itself"},"!static":false},"exit":{"!description":"When the Popup is being destroyed all corresponding references should be deleted as well to prevent any memory leaks.","!type":"fn()","!category":"function","!static":false},"isOpen":{"!description":"Returns whether the Popup is currently open (this includes opening and closing animations).","!type":"fn() -> Boolean","!category":"function","!static":false},"setShadow":{"!description":"Determines whether the Popup should have a shadow (in supporting browsers). This also affects a currently open popup.","!type":"fn(bShowShadow: Boolean) -> sap.ui.core.Popup","!category":"function","parameters":{"bShowShadow":"type: boolean, description: whether to show a shadow"},"!static":false},"!description":"Popup Class is a helper class for controls that want themselves or parts of themselves or even other aggregated or composed controls or plain HTML content to popup on the screen like menues, dialogs, drop down boxes.\n\nIt allows the controls to be aligned to other dom elements using the {@link sap.ui.core.Popup.Dock} method. With it you can define where the popup should be docked. One can dock the popup to the top bottom left or right side of a dom ref.\n\nIn the case that the popup has no space to show itself in the view port of the current window it tries to open itself to the inverted direction.\n\n<strong>Since 1.12.3<\/strong> it is possible to add further DOM-element-ids that can get the focus when 'autoclose' is enabled. E.g. the RichTextEditor with running TinyMCE uses this method to be able to focus the Popups of the TinyMCE if the RichTextEditor runs within a Popup/Dialog etc.\n\nTo provide an additional DOM-element that can get the focus the following should be done: // create an object with the corresponding DOM-id var oObject = { id : \"this_is_the_most_valuable_id_of_the_DOM_element\" };\n\n// add the event prefix for adding an element to the ID of the corresponding Popup var sEventId = \"sap.ui.core.Popup.addFocusableContent-\" + oPopup.getId();\n\n// fire the event with the created event-id and the object with the DOM-id sap.ui.getCore().getEventBus().publish(\"sap.ui\", sEventId, oObject);","setAutoClose":{"!description":"Used to specify whether the Popup should close as soon as - for non-touch environment: the focus leaves - for touch environment: user clicks the area which is outside the popup itself, the dom elemnt which popup aligns to (except document), and one of the autoCloseAreas set by calling setAutoCloseAreas.","!type":"fn(bAutoClose: Boolean) -> sap.ui.core.Popup","!category":"function","parameters":{"bAutoClose":"type: boolean, description: whether the Popup should close as soon as the focus leaves"},"!static":false},"detachClosed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:closed closed} event of this <code>sap.ui.core.Popup<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.Popup","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"!proto":"sap.ui.base.ManagedObject","!helpDescription":"Popup Class is a helper class for controls that want themselves or parts of themselves or even other aggregated or composed controls or plain HTML content to popup on the screen like menues, dialogs, drop down boxes.\n\nIt allows the controls to be aligned to other dom elements using the {@link sap.ui.core.Popup.Dock} method. With it you can define where the popup should be docked. One can dock the popup to the top bottom left or right side of a dom ref.\n\nIn the case that the popup has no space to show itself in the view port of the current window it tries to open itself to the inverted direction.\n\n<strong>Since 1.12.3<\/strong> it is possible to add further DOM-element-ids that can get the focus when 'autoclose' is enabled. E.g. the RichTextEditor with running TinyMCE uses this method to be able to focus the Popups of the TinyMCE if the RichTextEditor runs within a Popup/Dialog etc.\n\nTo provide an additional DOM-element that can get the focus the following should be done: // create an object with the corresponding DOM-id var oObject = { id : \"this_is_the_most_valuable_id_of_the_DOM_element\" };\n\n// add the event prefix for adding an element to the ID of the corresponding Popup var sEventId = \"sap.ui.core.Popup.addFocusableContent-\" + oPopup.getId();\n\n// fire the event with the created event-id and the object with the DOM-id sap.ui.getCore().getEventBus().publish(\"sap.ui\", sEventId, oObject);","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.Popup.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui":{"lazyRequire":{"!description":"Creates a lazy loading stub for a given class <code>sClassName<\/code>.\n\nIf the class has been loaded already, nothing is done. Otherwise a stub object or constructor and - optionally - a set of stub methods are created. All created stubs will load the corresponding module on execution and then delegate to their counterpart in the loaded module.\n\nWhen no methods are given or when the list of methods contains the special name \"new\" (which is an operator can't be used as method name in JavaScript), then a stub <b>constructor<\/b> for class <code>sClassName<\/code> is created. Otherwise, a plain object is created.\n\n<b>Note<\/b>: Accessing any stub as a plain object without executing it (no matter whether it is a function or an object) won't load the module and therefore most like won't work as expected. This is a fundamental restriction of the lazy loader approach. It could only be fixed with JavaScript 1.5 features that are not available in all UI5 target browsers (e.g. not in IE8).\n\n<b>Note<\/b>: As a side effect of this method, the namespace containing the given class is created <b>immediately<\/b>.","!type":"fn(sClassName: String, sMethods?: String, sModuleName?: String)","!category":"function","!static":"true"},"model":"sap.ui.model","getVersionInfo":{"!description":"Loads the version info file (resources/sap-ui-version.json) and returns it or if a library name is specified then the version info of the individual library will be returned.\n\nIn case of the version info file is not available an error will occur when calling this function.","!type":"fn(mOptions?: String | Object) -> Object | undefined | Promise","!category":"function","!static":"true"},"Device":"sap.ui.Device","test":"sap.ui.test","getCore":{"!description":"Retrieve the {@link sap.ui.core.Core SAPUI5 Core} instance for the current window.","!type":"fn() -> sap.ui.core.Core","!category":"function","!static":"true"},"!module":"sap/ui/Global","namespace":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Use jQuery.sap.declare or jQuery.sap.getObject(...,0) instead<br>Ensures that a given a namespace or hierarchy of nested namespaces exists in the current <code>window<\/code>.","!type":"fn(sNamespace: String) -> Object","!category":"function","!static":"true"},"htmlview":{"!description":"Defines or creates an instance of a declarative HTML view.\n\nThe behavior of this method depends on the signature of the call and on the current context.\n\n<ul> <li>View Definition <code>sap.ui.htmlview(sId, vView)<\/code>: Defines a view of the given name with the given implementation. sId must be the views name, vView must be an object and can contain implementations for any of the hooks provided by HTMLView<\/li> <li>View Instantiation <code>sap.ui.htmlview(sId?, vView)<\/code>: Creates an instance of the view with the given name (and id)<\/li>. <\/ul>\n\nAny other call signature will lead to a runtime error. If the id is omitted in the second variant, an id will be created automatically.","!type":"fn(sId: String, vView: String | Object) -> sap.ui.core.mvc.HTMLView | undefined","!category":"function","!static":"true"},"component":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"fn(vConfig: String | Object) -> sap.ui.core.Component | Promise","!category":"function","!static":"true"},"xmlview":{"!description":"Instantiates an XMLView of the given name and with the given ID.\n\nThe <code>viewName<\/code> must either correspond to an XML module that can be loaded via the module system (viewName + suffix \".view.xml\") and which defines the view, or it must be a configuration object for a view. The configuration object can have a <code>viewName<\/code>, <code>viewContent<\/code> and a <code>controller <\/code> property. The <code>viewName<\/code> behaves as described above. <code>viewContent<\/code> is optional and can hold a view description as XML string or as already parsed XML Document. If not given, the view content definition is loaded by the module system.\n\n<strong>Note<\/strong>: if a <code>Document<\/code> is given, it might be modified during view construction.\n\n<strong>Note:<\/strong><br> On root level, you can only define content for the default aggregation, e.g. without adding the <code>&lt;content&gt;<\/code> tag. If you want to specify content for another aggregation of a view like <code>dependents<\/code>, place it in a child control's dependents aggregation or add it by using {@link sap.ui.core.mvc.XMLView#addDependent}.\n\n<strong>Note<\/strong>: if you enable caching, you need to take care of the invalidation via keys. Automatic invalidation takes only place if the UI5 version or the component descriptor (manifest.json) change. This is still an experimental feature and may experience slight changes of the invalidation parameters or the cache key format.\n\nThe controller property can hold a controller instance. If a controller instance is given, it overrides the controller defined in the view.\n\nLike with any other control, ID is optional and one will be created automatically.","!type":"fn(sId: String, vView: String | Object) -> sap.ui.core.mvc.XMLView","!category":"function","!static":"true"},"!category":"namespace","htmlfragment":{"!description":"Instantiates an HTML-based Fragment.\n\nTo instantiate a Fragment, call this method as: sap.ui.htmlfragment([sId], sFragmentName, [oController]); The Fragment instance ID is optional and will be used as prefix for the ID of all contained controls. If no ID is passed, controls will not be prefixed. The sFragmentName must correspond to an HTML Fragment which can be loaded via the module system (fragmentName + \".fragment.html\") and which defines the Fragment. If oController is given, the methods referenced in the Fragment will be called on this controller. Note that Fragments may require a Controller to be given and certain methods to be available.\n\nAdvanced usage: To instantiate a Fragment and optionally directly give the HTML definition instead of loading it from a file, call this method as: sap.ui.htmlfragment(oFragmentConfig, [oController]); The oFragmentConfig object can either have a \"fragmentName\" or a \"fragmentContent\" property. fragmentContent is optional and can hold the Fragment definition as XML string; if not given, fragmentName must be given and the Fragment content definition is loaded by the module system. Again, if oController is given, the methods referenced in the Fragment will be called on this controller.","!type":"fn(sId: String, vFragment: String | Object, oController?: sap.ui.core.mvc.Controller) -> [sap.ui.core.Control | [object Object]]","!category":"function","!static":"true"},"fragment":{"!description":"Instantiate a Fragment - this method loads the Fragment content, instantiates it, and returns this content. The Fragment object itself is not an entity which has further significance beyond this constructor.\n\nTo instantiate an existing Fragment, call this method as: sap.ui.fragment(sName, sType, [oController]); The sName must correspond to an XML Fragment which can be loaded via the module system (fragmentName + suffix \".fragment.[typeextension]\") and which defines the Fragment content. If oController is given, the (event handler) methods referenced in the Fragment will be called on this controller. Note that Fragments may require a Controller to be given and certain methods to be available.\n\nThe Fragment types \"XML\", \"JS\" and \"HTML\" are available by default; additional Fragment types can be implemented and added using the sap.ui.core.Fragment.registerType() function.\n\nAdvanced usage: To instantiate a Fragment and give further configuration options, call this method as: sap.ui.fragment(oFragmentConfig, [oController]); The oFragmentConfig object can have the following properties: - \"fragmentName\": the name of the Fragment, as above - \"fragmentContent\": the definition of the Fragment content itself. When this property is given, any given name is ignored. The type of this property depends on the Fragment type, e.g. it could be a string for XML Fragments. - \"type\": the type of the Fragment, as above (mandatory) - \"id\": the ID of the Fragment (optional) Further properties may be supported by future or custom Fragment types. Any given properties will be forwarded to the Fragment implementation.\n\nIf you want to give a fixed ID for the Fragment, please use the advanced version of this method call with the configuration object or use the typed factories like sap.ui.xmlfragment(...) or sap.ui.jsfragment(...). Otherwise the Fragment ID is generated. In any case, the Fragment ID will be used as prefix for the ID of all contained controls.","!type":"fn(sName: String, sType: String, oController?: sap.ui.core.mvc.Controller) -> [sap.ui.core.Control | [object Object]]","!category":"function","!static":"true"},"extensionpoint":{"!description":"Creates 0..n UI5 controls from an ExtensionPoint. One control if the ExtensionPoint is e.g. filled with a View, zero for ExtensionPoints without configured extension and n controls for multi-root Fragments as extension.\n\nIn JSViews, this function allows both JSON notation in aggregation content as well as adding an extension point to an aggregation after the target control has already been instantiated. In the latter case the optional parameters oTargetControls and oTargetAggregation need to be specified.","!type":"fn(oContainer: sap.ui.core.mvc.View | sap.ui.core.Fragment, sExtName: String, fnCreateDefaultContent?: createDefaultContent, oTargetControl?: sap.ui.core.Control, sAggregationName?: String) -> [[object Object]]","!category":"function","!static":"true"},"xmlfragment":{"!description":"Instantiates an XML-based Fragment.\n\nTo instantiate a Fragment, call this method as: sap.ui.xmlfragment([sId], sFragmentName, [oController]); The Fragment instance ID is optional and will be used as prefix for the ID of all contained controls. If no ID is passed, controls will not be prefixed. The sFragmentName must correspond to an XML Fragment which can be loaded via the module system (fragmentName + \".fragment.xml\") and which defines the Fragment. If oController is given, the methods referenced in the Fragment will be called on this controller. Note that Fragments may require a Controller to be given and certain methods to be available.\n\nAdvanced usage: To instantiate a Fragment and optionally directly give the XML definition instead of loading it from a file, call this method as: sap.ui.xmlfragment(oFragmentConfig, [oController]); The oFragmentConfig object can either have a \"fragmentName\" or a \"fragmentContent\" property. fragmentContent is optional and can hold the Fragment definition as XML string; if not given, fragmentName must be given and the Fragment content definition is loaded by the module system. Again, if oController is given, the methods referenced in the Fragment will be called on this controller.","!type":"fn(sId: String, vFragment: String | Object, oController?: sap.ui.core.mvc.Controller) -> [sap.ui.core.Control | [object Object]]","!category":"function","!static":"true"},"template":{"!description":"Creates a Template for the given ID, DOM reference or a configuration object.\n\nIf no parameter is defined, this function makes a lookup of DOM elements which are specifying a type attribute. If the value of this type attribute matches a registered type then the content of this DOM element will be used to create a new <code>Template<\/code> instance.\n\nIf you want to lookup all kind of existing and known templates and parse them directly you can simply call: <pre>\n  sap.ui.template();\n<\/pre>\n\nTo parse a concrete DOM element you can do so by using this function in the following way: <pre>\n  sap.ui.template(\"theTemplateId\");\n<\/pre>\n\nOr you can pass the reference to a DOM element and use this DOM element as a source for the template: <pre>\n  sap.ui.template(oDomRef);\n<\/pre>\n\nThe last option to use this function is to pass the information via a configuration object. This configuration object can be used to pass a context for the templating framework when compiling the template: <pre>\n  var oTemplateById = sap.ui.template({\n    id: \"theTemplateId\",\n    context: { ... }\n  });\n\n  var oTemplateByDomRef = sap.ui.template({\n    domref: oDomRef,\n    context: { ... }\n  });\n<\/pre>\n\nIt can also be used to load a template from another file: <pre>\n  var oTemplate = sap.ui.template({\n    id: \"myTemplate\",\n    src: \"myTemplate.tmpl\"\n  });\n\n  var oTemplateWithContext = sap.ui.template({\n    id: \"myTemplate\",\n    src: \"myTemplate.tmpl\",\n    context: { ... }\n  });\n<\/pre>","!type":"fn(oTemplate?: String | DomRef | Object) -> [sap.ui.core.tmpl.Template | [object Object]]","!category":"function","!static":"true"},"define":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"String","!category":"enum","!module":"ui5loader"},"app":"sap.ui.app","setRoot":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Use function <code>placeAt<\/code> of <code>sap.ui.core.Control<\/code> instead.<br>Displays the control tree with the given root inside the area of the given DOM reference (or inside the DOM node with the given ID) or in the given Control.\n\nExample: <pre>\n  &lt;div id=\"SAPUI5UiArea\">&lt;/div>\n  &lt;script>\n    var oRoot = new sap.ui.commons.Label();\n    oRoot.setText(\"Hello world!\");\n    sap.ui.setRoot(\"SAPUI5UiArea\", oRoot);\n  &lt;/script>\n<\/pre> <p>\n\nThis is a shortcut for <code>sap.ui.getCore().setRoot()<\/code>.\n\nInternally, if a string is given that does not identify a UIArea or a control then implicitly a new <code>UIArea<\/code> is created for the given DOM reference and the given control is added.","!type":"fn(oDomRef: String | Element | sap.ui.core.Control, oControl: sap.ui.base.Interface | sap.ui.core.Control)","!category":"function","!static":"true"},"jsview":{"!description":"Defines or creates an instance of a JavaScript view.\n\nThe behavior of this method depends on the signature of the call and on the current context.\n\n<h3>View Definition<\/h3> <pre>\n  sap.ui.jsview(sId, vView);\n<\/pre> Defines a view of the given name with the given implementation. <code>sId<\/code> must be the view's name, <code>vView<\/code> must be an object and can contain implementations for any of the hooks provided by JSView.\n\n<h3>View Instantiation<\/h3> <pre>\n  var oView = sap.ui.jsview(vView);\n  var oView = sap.ui.jsview(vView, bASync);\n  var oView = sap.ui.jsview(sId, vView);\n  var oView = sap.ui.jsview(sId, vView, bAsync);\n<\/pre> Creates an instance of the view with the given name (and id). If no view implementation has been defined for that view name, a JavaScript module with the same qualified name and with suffix <code>.view.js<\/code> will be loaded (required) and executed. The module should register a view definition on execution (1st. variant above).\n\nIf <code>sId<\/code> is omitted, an ID will be created automatically.\n\nWhen <code>bAsync<\/code> has a truthy value, the view definition will be read asynchronously, if needed, but the (incomplete) view instance will be returned immediately.\n\n<b>Note:<\/b> Any other call signature will lead to a runtime error.","!type":"fn(sId: String, vView: String | Object, bAsync?: Boolean) -> sap.ui.core.mvc.JSView | undefined","!category":"function","!static":"true"},"templateview":{"!description":"Defines or creates an instance of a template view.\n\nThe behavior of this method depends on the signature of the call and on the current context.\n\n<ul> <li>View Definition <code>sap.ui.templateview(sId, vView)<\/code>: Defines a view of the given name with the given implementation. sId must be the views name, vView must be an object and can contain implementations for any of the hooks provided by templateview<\/li> <li>View Instantiation <code>sap.ui.templateview(sId?, vView)<\/code>: Creates an instance of the view with the given name (and id)<\/li>. <\/ul>\n\nAny other call signature will lead to a runtime error. If the id is omitted in the second variant, an id will be created automatically.","!type":"fn(sId: String, vView: String | Object) -> sap.ui.core.mvc.TemplateView | undefined","!category":"function","!static":"true"},"resource":{"!description":"Returns the URL of a resource that belongs to the given library and has the given relative location within the library. This is mainly meant for static resources like images that are inside the library. It is NOT meant for access to JavaScript modules or anything for which a different URL has been registered with jQuery.sap.registerModulePath(). For these cases use jQuery.sap.getModulePath(). It DOES work, however, when the given sResourcePath starts with \"themes/\" (= when it is a theme-dependent resource). Even when for this theme a different location outside the normal library location is configured.","!type":"fn(sLibraryName: String, sResourcePath: String) -> String","!category":"function","!static":"true"},"jsfragment":{"!description":"Defines OR instantiates an HTML-based Fragment.\n\nTo define a JS Fragment, call this method as: sap.ui.jsfragment(sName, oFragmentDefinition) Where: - \"sName\" is the name by which this fragment can be found and instantiated. If defined in its own file, in order to be found by the module loading system, the file location and name must correspond to sName (path + file name must be: fragmentName + \".fragment.js\"). - \"oFragmentDefinition\" is an object at least holding the \"createContent(oController)\" method which defines the Fragment content. If given during instantiation, the createContent method receives a Controller instance (otherwise oController is undefined) and the return value must be one sap.ui.core.Control (which could have any number of children).\n\nTo instantiate a JS Fragment, call this method as: sap.ui.jsfragment([sId], sFragmentName, [oController]); The Fragment ID is optional (generated if not given) and the Fragment implementation CAN use it to make contained controls unique (this depends on the implementation: some JS Fragments may choose not to support multiple instances within one application and not use the ID prefixing). The sFragmentName must correspond to a JS Fragment which can be loaded via the module system (fragmentName + \".fragment.js\") and which defines the Fragment. If oController is given, the methods referenced in the Fragment will be called on this controller. Note that Fragments may require a Controller to be given and certain methods to be available.","!type":"fn(sId: String, sFragmentName: String | Object, oController?: sap.ui.core.mvc.Controller) -> [sap.ui.core.Control | [object Object]]","!category":"function","!static":"true"},"localResources":{"!description":"Redirects access to resources that are part of the given namespace to a location relative to the assumed <b>application root folder<\/b>.\n\nAny UI5 managed resource (view, controller, control, JavaScript module, CSS file, etc.) whose resource name starts with <code>sNamespace<\/code>, will be loaded from an equally named subfolder of the <b>application root folder<\/b>. If the resource name consists of multiple segments (separated by a dot), each segment is assumed to represent an individual folder. In other words: when a resource name is converted to a URL, any dots ('.') are converted to slashes ('/').\n\n<b>Limitation:<\/b> For the time being, the <b>application root folder<\/b> is assumed to be the same as the folder where the current page resides in.\n\nUsage sample: <pre>\n  // Let UI5 know that resources, whose name starts with \"com.mycompany.myapp\"\n  // should be loaded from the URL location \"./com/mycompany/myapp\"\n  sap.ui.localResources(\"com.mycompany.myapp\");\n\n  // The following call implicitly will use the mapping done by the previous line\n  // It will load a view from ./com/mycompany/myapp/views/Main.view.xml\n  sap.ui.view({ view : \"com.mycompany.myapp.views.Main\", type : sap.ui.core.mvc.ViewType.XML});\n<\/pre>\n\nWhen applications need a more flexible mapping between resource names and their location, they can use {@link jQuery.sap.registerModulePath}.\n\nIt is intended to make this configuration obsolete in future releases, but for the time being, applications must call this method when they want to store resources relative to the assumed application root folder.","!type":"fn(sNamespace: String)","!category":"function","!static":"true"},"!description":"The <code>sap.ui<\/code> namespace is the central OpenAjax compliant entry point for UI related JavaScript functionality provided by SAP.","base":"sap.ui.base","jsonview":{"!description":"Creates a JSON view of the given name and id.\n\nThe <code>viewName<\/code> must either correspond to a JSON module that can be loaded via the module system (viewName + suffix \".view.json\") and which defines the view or it must be a configuration object for a view. The configuration object can have a viewName, viewContent and a controller property. The viewName behaves as described above, viewContent can hold the view description as JSON string or as object literal.\n\n<strong>Note<\/strong>: when an object literal is given, it might be modified during view construction.\n\nThe controller property can hold a controller instance. If a controller instance is given, it overrides the controller defined in the view.\n\nLike with any other control, an id is optional and will be created when missing.","!type":"fn(sId: String, vView: String | Object) -> sap.ui.core.mvc.JSONView","!category":"function","!static":"true"},"require":{"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","!type":"String","!category":"enum","!module":"ui5loader"},"core":"sap.ui.core","view":{"!description":"Creates a view of the given type, name and with the given id.\n\nThe <code>vView<\/code> configuration object can have the following properties for the view instantiation: <ul> <li>The ID <code>vView.id<\/code> specifies an ID for the View instance. If no ID is given, an ID will be generated.<\/li> <li>The view name <code>vView.viewName<\/code> corresponds to an XML module that can be loaded via the module system (vView.viewName + suffix \".view.xml\")<\/li> <li>The controller instance <code>vView.controller<\/code> must be a valid controller implementation. The given controller instance overrides the controller defined in the view definition<\/li> <li>The view type <code>vView.type<\/code> specifies what kind of view will be instantiated. All valid view types are listed in the enumeration sap.ui.core.mvc.ViewType.<\/li> <li>The view data <code>vView.viewData<\/code> can hold user specific data. This data is available during the whole lifecycle of the view and the controller<\/li> <li>The view loading mode <code>vView.async<\/code> must be a boolean and defines if the view source is loaded synchronously or asynchronously. In async mode, the view is rendered empty initially, and re-rendered with the loaded view content.<\/li> <li><code>vView.preprocessors<\/code><\/li> can hold a map from the specified preprocessor type (e.g. \"xml\") to an array of preprocessor configurations; each configuration consists of a <code>preprocessor<\/code> property (optional when registered as on-demand preprocessor) and may contain further preprocessor-specific settings. The preprocessor can be either a module name as string implementation of {@link sap.ui.core.mvc.View.Preprocessor} or a function according to {@link sap.ui.core.mvc.View.Preprocessor.process}. Do not set properties starting with underscore like <code>_sProperty<\/code> property, these are reserved for internal purposes. When several preprocessors are provided for one hook, it has to be made sure that they do not conflict when being processed serially.\n\n<strong>Note<\/strong>: These preprocessors are only available to this instance. For global or on-demand availability use {@link sap.ui.core.mvc.XMLView.registerPreprocessor}.\n\n<strong>Note<\/strong>: Please note that preprocessors in general are currently only available to XMLViews.\n\n<strong>Note<\/strong>: Preprocessors only work in async views and will be ignored when the view is instantiated in sync mode by default, as this could have unexpected side effects. You may override this behaviour by setting the bSyncSupport flag of the preprocessor to true.","!type":"fn(sId: String, vView?: String | Object) -> sap.ui.core.mvc.View","!category":"function","!static":"true"},"controller":{"!description":"Defines a controller class or creates an instance of an already defined controller class.\n\nWhen a name and a controller implementation object is given, a new controller class of the given name is created. The members of the implementation object will be copied into each new instance of that controller class (shallow copy). <b>Note<\/b>: as the members are shallow copied, controller instances will share all object values. This might or might not be what applications expect.\n\nIf only a name is given, a new instance of the named controller class is returned.","!type":"fn(sName: String, oControllerImpl?: Object, bAsync: Boolean) -> undefined | sap.ui.core.mvc.Controller | Promise","!category":"function","!static":"true"},"!helpDescription":"The <code>sap.ui<\/code> namespace is the central OpenAjax compliant entry point for UI related JavaScript functionality provided by SAP."},"sap.ui.base.EventProvider_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.base.EventProvider with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.base.EventProvider"},"sap.ui.core.SeparatorItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.SeparatorItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.SeparatorItem"},"sap.ui.core.MessageType":{"Information":{"!description":"Message should be just an information","!type":"String","!category":"enum"},"!description":"Defines the different message types of a message","!category":"static class","Warning":{"!description":"Message is a warning","!type":"String","!category":"enum"},"None":{"!description":"Message has no specific level","!type":"String","!category":"enum"},"Success":{"!description":"Message is a success message","!type":"String","!category":"enum"},"!module":"sap/ui/core/library","Error":{"!description":"Message is an error","!type":"String","!category":"enum"}},"sap.ui.model.analytics.odata4analytics.DimensionMemberSetRequest_obj":{"!type":"fn(oDimension: sap.ui.model.analytics.odata4analytics.Dimension, oParameterizationRequest: sap.ui.model.analytics.odata4analytics.ParameterizationRequest, bUseMasterData: Boolean)","prototype":"sap.ui.model.analytics.odata4analytics.DimensionMemberSetRequest"},"sap.ui.core.Manifest":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Manifest with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Creates and initializes a manifest wrapper which provides API access to\nthe content of the manifest.","!module":"sap/ui/core/Manifest","getComponentName":{"!description":"Returns the Component name which is defined in the manifest as <code>sap.ui5/componentName<\/code> or <code>sap.app/id<\/code>","!type":"fn() -> String","!category":"function","!static":false},"getEntry":{"!description":"Returns the configuration of a manifest section or the value for a specific path. If no key is specified, the return value is null.\n\nExample: <code> { \"sap.ui5\": { \"dependencies\": { \"libs\": { \"sap.m\": {} }, \"components\": { \"my.component.a\": {} } } }); <\/code>\n\nThe configuration above can be accessed in the following ways: <ul> <li><b>By section/namespace<\/b>: <code>oManifest.getEntry(\"sap.ui5\")<\/code><\/li> <li><b>By path<\/b>: <code>oManifest.getEntry(\"/sap.ui5/dependencies/libs\")<\/code><\/li> <\/ul>\n\nBy section/namespace returns the configuration for the specified manifest section and by path allows to specify a concrete path to a dedicated entry inside the manifest. The path syntax always starts with a slash (/).","!type":"fn(sKey: String) -> Object | null","!category":"function","parameters":{"sKey":"type: string, description: Either the manifest section name (namespace) or a concrete path"},"!static":false},"getRawJson":{"!description":"Returns the raw manifest defined in the metadata of the component. If not specified, the return value is null.","!type":"fn() -> Object","!category":"function","!static":false},"!description":"The Manifest class.","!category":"class","getJson":{"!description":"Returns the manifest defined in the metadata of the component. If not specified, the return value is null.","!type":"fn() -> Object","!category":"function","!static":false},"load":{"!description":"Function to load the manifest by URL","!type":"fn(mOptions: Object) -> sap.ui.core.Manifest | Promise","!category":"function","parameters":{"mOptions":"type: object, description: the configuration options"},"!static":true},"!helpDescription":"The Manifest class.","!proto":"sap.ui.base.Object","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.Manifest.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.routing.Targets":{"attachTitleChanged":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'titleChanged' event of this <code>sap.ui.core.routing.Targets<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.routing.Targets","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function."},"!static":false},"getViews":{"!description":"Returns the views instance passed to the constructor","!type":"fn() -> sap.ui.core.routing.Views","!category":"function","!static":false},"detachDisplay":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'display' event of this <code>sap.ui.core.routing.Targets<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.routing.Targets","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.routing.Targets with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getTarget":{"!description":"Returns a target by its name (if you pass myTarget: { view: \"myView\" }) in the config myTarget is the name.","!type":"fn(vName: [String | [object Object]]) -> [sap.ui.core.routing.Target | undefined | [object Object]]","!category":"function","parameters":{"vName":"type: string|[object Object][], description: the name of a single target or the name of multiple targets"},"!static":false},"display":{"!description":"Creates a view and puts it in an aggregation of the specified control.","!type":"fn(vTargets: [String | [object Object]], oData?: Object, sTitleTarget?: String) -> sap.ui.core.routing.Targets | Promise","!category":"function","parameters":{"sTitleTarget":"type: string, description: the name of the target from which the title option is taken for firing the {@link sap.ui.core.routing.Targets#event:titleChanged titleChanged} event","vTargets":"type: string|[object Object][], description: the key of the target as specified in the {@link #constructor}. To display multiple targets you may also pass an array of keys.","oData":"type: object, description: an object that will be passed to the display event in the data property. If the target has parents, the data will also be passed to them."},"!static":false},"!constructorDescription":"Provides a convenient way for placing views into the correct containers of your application.\nThe main benefit of Targets is lazy loading: you do not have to create the views until you really need them.\nIf you are using the mobile library, please use {@link sap.m.routing.Targets} instead of this class.","!module":"sap/ui/core/routing/Targets","destroy":{"!description":"Destroys the targets instance and all created targets. Does not destroy the views instance passed to the constructor. It has to be destroyed separately.","!type":"fn() -> sap.ui.core.routing.Targets","!category":"function","!static":false},"addTarget":{"!description":"Creates a target by using the given name and options. If there's already a target with the same name exists, the existing target is kept from being overwritten and an error log will be written to the development console.","!type":"fn(sName: String, oTarget: Object) -> sap.ui.core.routing.Targets","!category":"function","parameters":{"sName":"type: string, description: the name of a target","oTarget":"type: object, description: the options of a target. The option names are the same as the ones in \"oOptions.targets.anyName\" of {@link #constructor}."},"!static":false},"fireDisplay":{"!description":"Fire event created to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.core.routing.Targets","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"attachDisplay":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'display' event of this <code>sap.ui.core.routing.Targets<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.routing.Targets","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function."},"!static":false},"detachTitleChanged":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'titleChanged' event of this <code>sap.ui.core.routing.Targets<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.routing.Targets","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"!category":"class","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.routing.Targets.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.base.EventProvider"},"sap.ui.core.tmpl.TemplateControl":{"setContext":{"!description":"Sets a new value for property {@link #getContext context}.\n\nThe context is a data object. It can be used for default template expressions. A change of the context object leads to a re-rendering whereas a change of a nested property of the context object doesn't. By default the context is an empty object.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(oContext: Object) -> sap.ui.core.tmpl.TemplateControl","!category":"function","parameters":{"oContext":"type: object, description: New value for property <code>context<\/code>"},"!static":false},"!module":"sap/ui/core/tmpl/TemplateControl","getContext":{"!description":"Gets current value of property {@link #getContext context}.\n\nThe context is a data object. It can be used for default template expressions. A change of the context object leads to a re-rendering whereas a change of a nested property of the context object doesn't. By default the context is an empty object.","!type":"fn() -> Object","!category":"function","!static":false},"detachBeforeRendering":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforeRendering beforeRendering} event of this <code>sap.ui.core.tmpl.TemplateControl<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.tmpl.TemplateControl","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"detachAfterRendering":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterRendering afterRendering} event of this <code>sap.ui.core.tmpl.TemplateControl<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.tmpl.TemplateControl","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"!category":"class","createDOMElement":{"!description":"compiles (creates and registers) a new DOM element","!type":"fn(mSettings: Object, sParentPath?: String, bDoNotAdd?: Boolean) -> sap.ui.core.Control","!category":"function","parameters":{"mSettings":"type: object, description: the settings for the new DOM element","sParentPath":"type: string, description: the parent path for the DOM element","bDoNotAdd":"type: boolean, description: if true, then the control will not be added to the _controls aggregation"},"!static":false},"fireAfterRendering":{"!description":"Fires event {@link #event:afterRendering afterRendering} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.core.tmpl.TemplateControl","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getTemplate":{"!description":"ID of the element which is the current target of the association {@link #getTemplate template}, or <code>null<\/code>.","!type":"fn() -> sap.ui.core.ID","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.tmpl.TemplateControl with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"isInline":{"!description":"checks whether the control is inline or not","!type":"fn() -> Boolean","!category":"function","!static":false},"setTemplateRenderer":{"!description":"Sets the instance specific renderer for an anonymous template control.","!type":"fn(fnRenderer: fn()) -> sap.ui.core.tmpl.Template","!category":"function","parameters":{"fnRenderer":"type: function, description: the instance specific renderer function"},"!static":false},"!constructorDescription":"Constructor for a new tmpl/TemplateControl.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContext context} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getTemplate template} : (sap.ui.core.ID | sap.ui.core.tmpl.Template)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterRendering afterRendering} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeRendering beforeRendering} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getTemplateRenderer":{"!description":"Returns the instance specific renderer for an anonymous template control.","!type":"fn() -> fn()","!category":"function","!static":false},"bindList":{"!description":"Creates a pseudo binding for an aggregation to get notified once the property changes to invalidate the control and trigger a re-rendering.","!type":"fn(sPath: String) -> Object","!category":"function","parameters":{"sPath":"type: string, description: the binding path"},"!static":false},"bindProp":{"!description":"Creates a pseudo binding for a property to get notified once the property changes to invalidate the control and trigger a re-rendering.","!type":"fn(sPath: String) -> Object","!category":"function","parameters":{"sPath":"type: string, description: the binding path"},"!static":false},"attachBeforeRendering":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforeRendering beforeRendering} event of this <code>sap.ui.core.tmpl.TemplateControl<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.core.tmpl.TemplateControl<\/code> itself.\n\nFired before this Template Control is re-rendered. Use to unbind event handlers from HTML elements etc.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.tmpl.TemplateControl","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.core.tmpl.TemplateControl<\/code> itself"},"!static":false},"!description":"This is the base class for all template controls. Template controls are declared based on templates.","fireBeforeRendering":{"!description":"Fires event {@link #event:beforeRendering beforeRendering} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.core.tmpl.TemplateControl","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"createControl":{"!description":"compiles (creates and registers) a new control","!type":"fn(mSettings: Object, sParentPath?: String, bDoNotAdd?: Boolean, oView: sap.ui.core.mvc.View) -> sap.ui.core.Control","!category":"function","parameters":{"oView":"type: sap.ui.core.mvc.View, description: undefined","mSettings":"type: object, description: the settings for the new control","sParentPath":"type: string, description: the parent path for the control","bDoNotAdd":"type: boolean, description: if true, then the control will not be added to the _controls aggregation"},"!static":false},"setTemplate":{"!description":"Sets the associated {@link #getTemplate template}.","!type":"fn(oTemplate: sap.ui.core.ID | sap.ui.core.tmpl.Template) -> sap.ui.core.tmpl.TemplateControl","!category":"function","parameters":{"oTemplate":"type: sap.ui.core.ID|sap.ui.core.tmpl.Template, description: ID of an element which becomes the new target of this template association; alternatively, an element instance may be given"},"!static":false},"attachAfterRendering":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterRendering afterRendering} event of this <code>sap.ui.core.tmpl.TemplateControl<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.core.tmpl.TemplateControl<\/code> itself.\n\nFired when the Template Control has been (re-)rendered and its HTML is present in the DOM.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.tmpl.TemplateControl","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.core.tmpl.TemplateControl<\/code> itself"},"!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"This is the base class for all template controls. Template controls are declared based on templates.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.tmpl.TemplateControl.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.test.matchers.Matcher":{"!description":"Matchers for Opa5 - needs to implement an isMatching function that returns a boolean and will get a control instance as parameter","extend":{"!description":"Creates a new subclass of class sap.ui.test.matchers.Matcher with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject} can be used.","!module":"sap/ui/test/matchers/Matcher","isMatching":{"!description":"Checks if the matcher is matching - will get an instance of sap.ui.core.Control as parameter.\n\nShould be overwritten by subclasses","!type":"fn(oControl: sap.ui.core.Control) -> Boolean","!category":"function","parameters":{"oControl":"type: sap.ui.core.Control, description: the control that is checked by the matcher"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.test.matchers.Matcher.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.base.ManagedObject","!helpDescription":"Matchers for Opa5 - needs to implement an isMatching function that returns a boolean and will get a control instance as parameter"},"sap.ui.model.odata.CountMode":{"Inline":{"!description":"Count is retrieved by adding <code>$inlinecount=allpages<\/code> to data requests as long as no count has been determined yet.","!type":"String","!category":"enum"},"InlineRepeat":{"!description":"Count is retrieved by adding <code>$inlinecount=allpages<\/code> to every data request.","!type":"String","!category":"enum"},"Both":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.43 this shouldn't be used any longer, decide for one of the other modes.<br>Count is retrieved by a separate request upfront and inline with each data request.\n\nThe only purpose of this mode is to reflect the behavior of the {@link sap.ui.model.odata.ODataModel ODataModel (v1)} before the introduction of the <code>CountMode<\/code>. For compatibility reasons, it is the default for the <code>ODataModel<\/code> (v1) and shouldn't be used otherwise.","!type":"String","!category":"enum"},"!description":"Different modes for retrieving the count of collections.","!category":"static class","Request":{"!description":"Count is retrieved by sending a separate <code>$count<\/code> request before requesting data.\n\nIt depends on the concrete model implementation whether and how the <code>$count<\/code> request and the data request are synchronized.","!type":"String","!category":"enum"},"None":{"!description":"Count is not requested from the server.","!type":"String","!category":"enum"},"!module":"sap/ui/model/odata/CountMode"},"sap.ui.model.CompositeBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.CompositeBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.PropertyBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.model.CompositeBinding"},"sap.ui.model.resource":{"!description":"ResourceBundle-based DataBinding","ResourceModel":"sap.ui.model.resource.ResourceModel_obj","!category":"namespace","!module":"sap/ui/model/resource/ResourceModel","!helpDescription":"ResourceBundle-based DataBinding"},"sap.ui.core.util.ExportCell_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.ExportCell with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.util.ExportCell"},"sap.ui.model.analytics.AnalyticalBinding":{"getPropertyHeading":{"!description":"Gets the label of a property with a given name.","!type":"fn(sPropertyName: String) -> String","!category":"function","parameters":{"sPropertyName":"type: string, description: The property name."},"!static":false},"hasChildren":{"!description":"Determines if the contexts in a specified group have further children. If so, any of these group contexts can be a parent context of a nested sub-group in a subsequent aggregation level.","!type":"fn(oContext: sap.ui.model.Context, mParameters: map) -> Boolean","!category":"function","parameters":{"mParameters":"type: map, description: The only supported parameter is level as the level number of oContext (because the context might occur at multiple levels)","oContext":"type: sap.ui.model.Context, description: the parent context identifying the requested group of child contexts."},"!static":false},"sort":{"!description":"Sets sorters for retrieving the entities in the bound OData entity set in a specific order.\n\nInvoking this function resets the state of the binding. Subsequent data requests such as calls to getNodeContexts() will need to trigger OData requests in order to fetch the data that are in line with these sorters.","!type":"fn(aSorter: sap.ui.model.Sorter | Array) -> sap.ui.model.analytics.AnalyticalBinding","!category":"function","parameters":{"aSorter":"type: sap.ui.model.Sorter|array, description: a sorter object or an array of sorter objects which define the sort order."},"!static":false},"getAnalyticalQueryResult":{"!description":"Gets analytical metadata for the bound OData entity set.","!type":"fn() -> sap.ui.model.analytics.odata4analytics.QueryResult","!category":"function","!static":false},"getRootContexts":{"!description":"Gets the context for the root aggregation level representing the grand total for all bound measure properties.\n\nThe context is assigned to parent group ID <code>null<\/code>. If the binding is configured not to provide a grand total, this context is empty. If data for this context is not locally available yet, an OData request will be triggered to load it.\n\nThis function must be called whenever the bound set of OData entities changes, e.g., by changing selected dimensions, modifying filter conditions, etc.","!type":"fn(mParameters: map) -> Array","!category":"function","parameters":{"mParameters":"type: map, description: specifying how the top-most aggregation level shall be fetched. Supported parameters are: <ul> <li>numberOfExpandedLevels: number of child levels that shall be fetched automatically<\/li> <li>startIndex: index of first entry to return from parent group ID <code>\"/\"<\/code> (zero-based)<\/li> <li>length: number of entries to return at and after the given start index<\/li> <li>threshold: number of additional entries that shall be locally available in the binding for subsequent accesses to contexts of parent group ID <code>\"/\"<\/code> or below, if auto-expanding is selected<\/li> <\/ul>"},"!static":false},"getGroupSize":{"!description":"Gets the total number of contexts contained in a group, if known.\n\nFor a given group, be aware that the group size might vary over time. In principle, this can happen if the bound set of OData entities includes measure properties with amount or quantity values. The AnalyticalBinding recognizes situations where the OData service returns multiple entries for a single group entry due to the fact that a measure property cannot be aggregated properly, because an amount exists in multiple currencies or a quantity exists in multiple units. In such situations, the AnalyticalBinding substitutes these entries by a single representative, and the group size gets reduced by the count of duplicate entries. Finally, since the Binding does not always fetch all children of a group at once, but only a page with a certain range, such size changes might happen after every page access.","!type":"fn(oContext: sap.ui.model.Context, iLevel: Number) -> Number","!category":"function","parameters":{"iLevel":"type: int, description: the level number of oContext (because the context might occur at multiple levels)","oContext":"type: sap.ui.model.Context, description: the parent context identifying the requested group of child contexts."},"!static":false},"!module":"sap/ui/model/analytics/AnalyticalBinding","getPropertyQuickInfo":{"!description":"Gets the quick info of a property with a given name.","!type":"fn(sPropertyName: String) -> String","!category":"function","parameters":{"sPropertyName":"type: string, description: The property name."},"!static":false},"getTotalSize":{"!description":"Gets the total number of entities in the bound OData entity set.\n\nCounting takes place at the lowest aggregation level defined by the possible value combinations for the complete set of dimension properties included in the bound entity set. This means that intermediate aggregate entities with sub-totals at higher aggregation levels are not counted.","!type":"fn() -> Number","!category":"function","!static":false},"getDownloadUrl":{"!description":"Get a download URL with the specified format considering the sort/filter/custom parameters.\n\nThe download URL also takes into account the selected dimensions and measures, depending on the given column definitions of the AnalyticalTable. This is based on the visible/inResult flags of the columns, as well as integrity dependencies, e.g. for mandatory Unit properties.","!type":"fn(sFormat: String) -> String","!category":"function","parameters":{"sFormat":"type: string, description: Value for the $format Parameter"},"!static":false},"getFilterablePropertyNames":{"!description":"Gets the names of the filterable properties in the bound OData entity set.","!type":"fn() -> Array","!category":"function","!static":false},"!category":"class","getNodeContexts":{"!description":"Gets child contexts for a specified parent context.\n\nContexts are returned in a stable order imposed by the dimension property that defines this aggregation level beneath the parent context: Either a sort order has been specified for this property, or the entries are returned in ascending order of the values of this dimension property by default.\n\nIf any of the requested data is missing, an OData request will be triggered to load it.","!type":"fn(mParameters: map) -> Array","!category":"function","parameters":{"mParameters":"type: map, description: specifying the aggregation level for which contexts shall be fetched. Supported parameters are: <ul> <li>oContext: parent context identifying the requested group of child contexts<\/li> <li>level: level number for oContext, because it might occur at multiple levels; context with group ID <code>\"/\"<\/code> has level 0<\/li> <li>numberOfExpandedLevels: number of child levels that shall be fetched automatically<\/li> <li>startIndex: index of first child entry to return from the parent context (zero-based)<\/li> <li>length: number of entries to return; counting begins at the given start index<\/li> <li>threshold: number of additional entries that shall be locally available in the binding for subsequent accesses to child entries of the given parent context. <\/li> <\/ul>"},"!static":false},"isMeasure":{"!description":"Determines if a given name refers to a measure property","!type":"fn(sPropertyName: String) -> Boolean","!category":"function","parameters":{"sPropertyName":"type: string, description: The property name."},"!static":false},"hasMeasures":{"!description":"Determines if any of the properties included in the bound OData entity set is a measure property.","!type":"fn() -> Boolean","!category":"function","!static":false},"refresh":{"!description":"Refreshes the binding, check whether the model data has been changed and fire change event if this is the case. For service side models this should refetch the data from the service. To update a control, even if no data has been changed, e.g. to reset a control after failed validation, please use the parameter bForceUpdate.","!type":"fn(bForceUpdate?: Boolean)","!category":"function","parameters":{"bForceUpdate":"type: boolean, description: Update the bound control even if no data has been changed"},"!static":false},"updateAnalyticalInfo":{"!description":"Updates the binding's structure with new analytical information.\n\nAnalytical information is the mapping of UI columns to properties in the bound OData entity set. Every column object contains the name of the bound property and in addition: <ol> <li>A column bound to a dimension property has further boolean properties: <ul> <li>grouped: dimension will be used for building groups<\/li> <li>visible: if the column is visible, values for the related property will be fetched from the OData service<\/li> <li>inResult: if the column is not visible, but declared to be part of the result, values for the related property will also be fetched from the OData service<\/li> <\/ul> <\/li> <li>A column bound to a measure property has further boolean properties: <ul> <li>total: totals and sub-totals will be provided for the measure at all aggregation levels<\/li> <\/ul> <\/li> <li>A column bound to a hierarchy property has further properties: <ul> <li>grouped: boolean value; indicates whether the hierarchy will be used for building groups<\/li> <li>level: integer value; the hierarchy level is mandatory for at least one of those columns that represent the same hierarchy.<\/li> <\/ul> <\/li> <\/ol>\n\nInvoking this function resets the state of the binding and subsequent data requests such as calls to getNodeContexts() will need to trigger OData requests in order to fetch the data that are in line with this analytical information.\n\nPlease be aware that a call of this function might lead to additional back-end requests, as well as a control re-rendering later on. Whenever possible use the API of the analytical control, instead of relying on the binding.","!type":"fn(aColumns: Array)","!category":"function","parameters":{"aColumns":"type: array, description: an array with objects holding the analytical information for every column, from left to right."},"!static":false},"getGroupName":{"!description":"Gets a printable name for a group.\n\nThe printable name follows the pattern is <code>&lt;label&gt;:&lt;key-value&gt;[-&lt;text-value&gt;]<\/code>, where <code>label<\/code> is the label of the dimension property used at the aggregation level for the group, <code>key-value<\/code> is the key value of that dimension for the group, and <code>text-value<\/code> is the value of the associated text property, if it is also used in the binding.\n\nWhenever a formatter function has been defined for a column displaying the key or text of this dimension, the return value of this function is applied for the group name instead of the respective key or text value.","!type":"fn(oContext: sap.ui.model.Context, iLevel: Number) -> String","!category":"function","parameters":{"iLevel":"type: int, description: the level number of oContext (because the context might occur at multiple levels)","oContext":"type: sap.ui.model.Context, description: the parent context identifying the requested group."},"!static":false},"getDimensionDetails":{"!description":"Gets details about the dimension properties included in the bound OData entity set.","!type":"fn() -> map","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.analytics.AnalyticalBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.TreeBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getPropertyLabel":{"!description":"Gets the label of a property with a given name.","!type":"fn(sPropertyName: String) -> String","!category":"function","parameters":{"sPropertyName":"type: string, description: The property name."},"!static":false},"getAnalyticalInfoForColumn":{"!description":"Gets the analytical information for a column with a given name.","!type":"fn(sColumnName: String) -> Object","!category":"function","parameters":{"sColumnName":"type: string, description: the column name."},"!static":false},"providesGrandTotal":{"!description":"Determines if the binding has been configured to provide a grand total for the selected measure properties.","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Experimental! <\/strong>","getMeasureDetails":{"!description":"Gets details about the measure properties included in the bound OData entity set.","!type":"fn() -> map","!category":"function","!static":false},"getSortablePropertyNames":{"!description":"Gets the names of the sortable properties in the bound OData entity set.","!type":"fn() -> Array","!category":"function","!static":false},"getProperty":{"!description":"Gets the metadata of a property with a given name.","!type":"fn(sPropertyName: String) -> Object","!category":"function","parameters":{"sPropertyName":"type: string, description: The property name."},"!static":false},"loadGroups":{"!description":"Loads child contexts of multiple groups.","!type":"fn(mGroupIdRanges: map)","!category":"function","parameters":{"mGroupIdRanges":"type: map, description: specifies index ranges of child contexts to be loaded for multiple groups identified by their ID. A group index range is given by an object consisting of startIndex, length, threshold. For every group ID, the map holds an array of such range objects."},"!static":false},"filter":{"!description":"Sets filters for matching only a subset of the entities in the bound OData entity set.\n\nInvoking this function resets the state of the binding. Subsequent data requests such as calls to getNodeContexts() will need to trigger OData requests in order to fetch the data that are in line with these filters.","!type":"fn(aFilter: [[object Object]], sFilterType?: sap.ui.model.FilterType) -> sap.ui.model.analytics.AnalyticalBinding","!category":"function","parameters":{"sFilterType":"type: sap.ui.model.FilterType, description: Type of the filter which should be adjusted.","aFilter":"type: [object Object][]|sap.ui.model.Filter, description: an Array of sap.ui.model.Filter objects or a single Filter instance."},"!static":false},"!proto":"sap.ui.model.TreeBinding","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.analytics.AnalyticalBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"hasAvailableNodeContexts":{"!description":"Determines if the binding has the entries of a given aggregation level locally available.\n\nIf so, no further OData request is required to fetch any of them.","!type":"fn(oContext: sap.ui.model.Context, iLevel: Number) -> Boolean","!category":"function","parameters":{"iLevel":"type: int, description: the level number of oContext (because the context might occur at multiple levels).","oContext":"type: sap.ui.model.Context, description: the parent context identifying the aggregation level."},"!static":false}},"sap.ui.core.DeclarativeSupport_obj":{"!type":"fn()","prototype":"sap.ui.core.DeclarativeSupport"},"sap.ui.model.resource.ResourceModel":{"enhance":{"!description":"Enhances the resource model with a custom resource bundle. The resource model can be enhanced with multiple resource bundles. The last enhanced resource bundle wins against the previous ones and the original ones. This function can be called several times.","!type":"fn(oData: Object | jQuery.sap.util.ResourceBundle) -> Promise","!category":"function","parameters":{"oData":"type: object|jQuery.sap.util.ResourceBundle, description: parameters used to initialize the ResourceModel; at least either bundleUrl or bundleName must be set on this object; if both are set, bundleName wins - or an instance of an existing {@link jQuery.sap.util.ResourceBundle}"},"!static":false},"!description":"Model implementation for resource bundles","getResourceBundle":{"!description":"Returns the resource bundle of this model","!type":"fn() -> jQuery.sap.util.ResourceBundle | Promise","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.resource.ResourceModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getProperty":{"!description":"Returns the value for the property with the given <code>sPropertyName<\/code>","!type":"fn(sPath: String) -> String","!category":"function","parameters":{"sPath":"type: string, description: the path to the property"},"!static":false},"!category":"class","!constructorDescription":"Constructor for a new ResourceModel.","!module":"sap/ui/model/resource/ResourceModel","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.resource.ResourceModel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.Model","!helpDescription":"Model implementation for resource bundles"},"sap.ui.core.UIArea_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.UIArea with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oCore: sap.ui.core.Core, oRootNode?: Object)","prototype":"sap.ui.core.UIArea"},"sap.ui.core.IntervalTrigger_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.IntervalTrigger with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(iInterval: Number)","prototype":"sap.ui.core.IntervalTrigger"},"sap.ui.model.ClientContextBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.ClientContextBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.ContextBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext: sap.ui.model.Context, mParameters?: Object)","prototype":"sap.ui.model.ClientContextBinding"},"sap.ui.test.matchers.PropertyStrictEquals":{"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nThe value of the property that is used for matching.","!type":"fn() -> Object","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.test.matchers.PropertyStrictEquals with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"PropertyStrictEquals - checks if a property has the exact same value.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getValue value} : any<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.test.matchers.Matcher#constructor sap.ui.test.matchers.Matcher}\ncan be used as well.","setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nThe value of the property that is used for matching.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(oValue: Object) -> sap.ui.test.matchers.PropertyStrictEquals","!category":"function","parameters":{"oValue":"type: any, description: New value for property <code>value<\/code>"},"!static":false},"!module":"sap/ui/test/matchers/PropertyStrictEquals","isMatching":{"!description":"Checks if the control has a property that matches the value","!type":"fn(oControl: sap.ui.core.Control) -> Boolean","!category":"function","parameters":{"oControl":"type: sap.ui.core.Control, description: the control that is checked by the matcher"},"!static":false},"!description":"PropertyStrictEquals - checks if a property has the exact same value","getName":{"!description":"Gets current value of property {@link #getName name}.\n\nThe Name of the property that is used for matching.","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","setName":{"!description":"Sets a new value for property {@link #getName name}.\n\nThe Name of the property that is used for matching.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sName: String) -> sap.ui.test.matchers.PropertyStrictEquals","!category":"function","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"},"!static":false},"!helpDescription":"PropertyStrictEquals - checks if a property has the exact same value","!proto":"sap.ui.test.matchers.Matcher","getMetadata":{"!description":"Returns a metadata object for class sap.ui.test.matchers.PropertyStrictEquals.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.AppCacheBuster":{"register":{"!description":"Registers an application. Loads the cachebuster index file from this locations. All registered files will be considered by the cachebuster and the URLs will be prefixed with the timestamp of the index file.","!type":"fn(base: String)","!category":"function","!static":"true"},"normalizeURL":{"!description":"Normalizes the given URL and make it absolute.","!type":"fn(sUrl: String) -> String","!category":"function","!static":"true"},"handleURL":{"!description":"Callback function which can be overwritten to programmatically decide whether to rewrite the given URL or not.","!type":"fn(sUrl: String) -> Boolean","!category":"function","!static":"true"},"!description":"The AppCacheBuster is used to hook into URL relevant functions in jQuery and SAPUI5 and rewrite the URLs with a timestamp segment. The timestamp information is fetched from the server and used later on for the URL rewriting.","!category":"namespace","!module":"sap/ui/core/AppCacheBuster","convertURL":{"!description":"Converts the given URL if it matches a URL in the cachebuster index. If not then the same URL will be returned. To prevent URLs from being modified by the application cachebuster you can implement the function <code>sap.ui.core.AppCacheBuster.handleURL<\/code>.","!type":"fn(sUrl: String) -> String","!category":"function","!static":"true"},"!helpDescription":"The AppCacheBuster is used to hook into URL relevant functions in jQuery and SAPUI5 and rewrite the URLs with a timestamp segment. The timestamp information is fetched from the server and used later on for the URL rewriting."},"sap.ui.model.analytics.BatchResponseCollector_obj":{"!type":"fn(mParams?: Object)","prototype":"sap.ui.model.analytics.BatchResponseCollector"},"sap.ui.core.mvc.TemplateView":{"!description":"A view defined in a template.","extend":{"!description":"Creates a new subclass of class sap.ui.core.mvc.TemplateView with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.mvc.View.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new mvc/TemplateView.","!module":"sap/ui/core/mvc/TemplateView","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.mvc.TemplateView.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.mvc.View","!helpDescription":"A view defined in a template."},"sap.ui.model.analytics.odata4analytics.Parameter_obj":{"!type":"fn(oParameterization: sap.ui.model.analytics.odata4analytics.Parameterization, oProperty: Object)","prototype":"sap.ui.model.analytics.odata4analytics.Parameter"},"sap.ui.model.type":{"DateInterval":"sap.ui.model.type.DateInterval_obj","Float":"sap.ui.model.type.Float_obj","Boolean":"sap.ui.model.type.Boolean_obj","TimeInterval":"sap.ui.model.type.TimeInterval_obj","DateTimeInterval":"sap.ui.model.type.DateTimeInterval_obj","Unit":"sap.ui.model.type.Unit_obj","FileSize":"sap.ui.model.type.FileSize_obj","Time":"sap.ui.model.type.Time_obj","Date":"sap.ui.model.type.Date_obj","DateTime":"sap.ui.model.type.DateTime_obj","String":"sap.ui.model.type.String_obj","!category":"namespace","Integer":"sap.ui.model.type.Integer_obj","Currency":"sap.ui.model.type.Currency_obj"},"sap.ui.model.odata.type.Int32":{"!description":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Int32<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>number<\/code>.","getRange":{"!description":"Returns the type's supported range as object with properties <code>minimum<\/code> and <code>maximum<\/code>.","!type":"fn() -> Object","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Int32 with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.Int.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","!constructorDescription":"Constructor for a primitive type <code>Edm.Int32<\/code>.","!module":"sap/ui/model/odata/type/Int32","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.Int32.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.odata.type.Int","!helpDescription":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Int32<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>number<\/code>."},"sap.ui.test.OpaExtension":{"!description":"OPA extension interface.","extend":{"!description":"Creates a new subclass of class sap.ui.test.OpaExtension with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","getAssertions":{"!description":"Return the custom assertions provided by this extension. The default QUnit assertion object will be augmented with them. Subsequent waitFor's will wait for the returned promise to be resolved.","!type":"fn() -> jQuery.promise","!category":"function","!static":true},"onBeforeExit":{"!description":"Shutdown hook, executed before shutdown of the application under test. Executed in the application frame. Subsequent waitFor's will wait for the returned promise to be resolved.","!type":"fn() -> jQuery.promise","!category":"function","!static":true},"!constructorDescription":"OPA extension interface.","!module":"sap/ui/test/OpaExtension","onAfterInit":{"!description":"Startup hook, executed after startup of the application under test. Executed in the application frame. Subsequent waitFor's will wait for the returned promise to be resolved.","!type":"fn() -> jQuery.promise","!category":"function","!static":true},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.test.OpaExtension.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.base.Object","!helpDescription":"OPA extension interface."},"sap.ui.core.util.serializer.Serializer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.serializer.Serializer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oRootControl: sap.ui.core.Control | sap.ui.core.UIArea, serializeDelegate: Object, bSkipRoot: Boolean, fnSkipAggregations: fn(), fnSkipElement: fn())","prototype":"sap.ui.core.util.serializer.Serializer"},"sap.ui.model.analytics.odata4analytics.Model_obj":{"!type":"fn(oModel: Object, aWorkaroundID: [[object Object]])","prototype":"sap.ui.model.analytics.odata4analytics.Model.ReferenceWithWorkaround"},"sap.ui.core.mvc.JSView_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.mvc.JSView with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.mvc.View.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.mvc.JSView"},"sap.ui.core.LocalBusyIndicator":{"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nThis property is the height of the control that has to be covered. With this height the position of the animation can be properly set.\n\nDefault value is <code>100px<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.14.2 The LocalBusyIndicator Control is not needed anymore by the new implementation of the LBI. Hence, it is not used anymore.<br>The LocalBusyIndicator is a special version of the BusyIndicator. This one doesn't block the whole screen - it just blocks the corresponding control and puts a local animation over the control. To use the functionality of this control the corresponding control needs to be enabled via the 'LocalBusyIndicatorSupport' accordingly to the ListBox control (see the init-function of the ListBox).","extend":{"!description":"Creates a new subclass of class sap.ui.core.LocalBusyIndicator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nThis property is the height of the control that has to be covered. With this height the position of the animation can be properly set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100px<\/code>.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.core.LocalBusyIndicator","!category":"function","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"},"!static":false},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nThis property is the width of the control that has to be covered. With this width the position of the animation can be properly set.\n\nDefault value is <code>100px<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"!constructorDescription":"Constructor for a new LocalBusyIndicator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100px)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100px)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nThis property is the width of the control that has to be covered. With this width the position of the animation can be properly set.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100px<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.core.LocalBusyIndicator","!category":"function","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"},"!static":false},"!module":"sap/ui/core/LocalBusyIndicator","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.LocalBusyIndicator.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Control","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.14.2 The LocalBusyIndicator Control is not needed anymore by the new implementation of the LBI. Hence, it is not used anymore.<br>The LocalBusyIndicator is a special version of the BusyIndicator. This one doesn't block the whole screen - it just blocks the corresponding control and puts a local animation over the control. To use the functionality of this control the corresponding control needs to be enabled via the 'LocalBusyIndicatorSupport' accordingly to the ListBox control (see the init-function of the ListBox)."},"jQuery.sap.measure":{"remove":{"!description":"Removes a performance measure","!type":"fn(sId: String)","!category":"function","!static":"true"},"getAllInteractionMeasurements":{"!description":"Gets all interaction measurements","!type":"fn(bFinalize: Boolean) -> [[object Object]]","!category":"function","!static":"true"},"filterInteractionMeasurements":{"!description":"Gets all interaction measurements for which a provided filter function returns a truthy value. To filter for certain categories of measurements a fnFilter can be implemented like this <code> function(InteractionMeasurement) { return InteractionMeasurement.duration > 0 }<\/code>","!type":"fn(fnFilter: fn()) -> [[object Object]]","!category":"function","!static":"true"},"clearRequestTimings":{"!description":"Clears all request timings safely.","!type":"fn()","!category":"function","!static":"true"},"add":{"!description":"Adds a performance measurement with all data This is useful to add external measurements (e.g. from a backend) to the common measurement UI","!type":"fn(sId: String, sInfo: String, iStart: Number, iEnd: Number, iTime: Number, iDuration: Number, aCategories?: [String | [object Object]]) -> Object","!category":"function","!static":"true"},"!module":"jquery.sap.global","setRequestBufferSize":{"!description":"Sets the request buffer size for the measurement safely.","!type":"fn(iSize: Number)","!category":"function","!static":"true"},"clearInteractionMeasurements":{"!description":"Clears all interaction measurements","!type":"fn()","!category":"function","!static":"true"},"clear":{"!description":"Clears all performance measurements","!type":"fn()","!category":"function","!static":"true"},"pause":{"!description":"Pauses a performance measure","!type":"fn(sId: String) -> Object","!category":"function","!static":"true"},"getActive":{"!description":"Gets the current state of the perfomance measurement functionality","!type":"fn() -> Boolean","!category":"function","!static":"true"},"endInteraction":{"!description":"End an interaction measurements","!type":"fn(bForce: Boolean)","!category":"function","!static":"true"},"!category":"namespace","setActive":{"!description":"Activates or deactivates the performance measure functionality Optionally a category or list of categories can be passed to restrict measurements to certain categories like \"javascript\", \"require\", \"xmlhttprequest\", \"render\"","!type":"fn(bOn: Boolean, aCategories: [String | [object Object]]) -> Boolean","!category":"function","!static":"true"},"unregisterMethod":{"!description":"Unregisters an average measurement for a given objects method","!type":"fn(sId: String, oObject: Object, sMethod: String) -> Boolean","!category":"function","!static":"true"},"filterMeasurements":{"!description":"Gets all performance measurements where a provided filter function returns a truthy value. If neither a filter function nor a category is provided an empty array is returned. To filter for certain properties of measurements a fnFilter can be implemented like this <code> function(oMeasurement) { return oMeasurement.duration > 50; }<\/code>","!type":"fn(fnFilter?: fn(), bCompleted?: Boolean | undefined, aCategories?: [[object Object]]) -> Object","!category":"function","!static":"true"},"end":{"!description":"Ends a performance measure","!type":"fn(sId: String) -> Object","!category":"function","!static":"true"},"getAllMeasurements":{"!description":"Gets all performance measurements","!type":"fn(bCompleted?: Boolean) -> [[object Object]]","!category":"function","!static":"true"},"startInteraction":{"!description":"Start an interaction measurements","!type":"fn(sType: String, oSrcElement: Object)","!category":"function","!static":"true"},"unregisterAllMethods":{"!description":"Unregisters all average measurements","!type":"fn()","!category":"function","!static":"true"},"registerMethod":{"!description":"Registers an average measurement for a given objects method","!type":"fn(sId: String, oObject: Object, sMethod: String, aCategories?: [[object Object]]) -> Boolean","!category":"function","!static":"true"},"resume":{"!description":"Resumes a performance measure","!type":"fn(sId: String) -> Object","!category":"function","!static":"true"},"!description":"Namespace for the jQuery performance measurement plug-in provided by SAP SE.","getMeasurement":{"!description":"Gets a performance measure","!type":"fn(sId: String) -> Object","!category":"function","!static":"true"},"start":{"!description":"Starts a performance measure. Optionally a category or list of categories can be passed to allow filtering of measurements.","!type":"fn(sId: String, sInfo: String, aCategories?: [String | [object Object]]) -> Object","!category":"function","!static":"true"},"average":{"!description":"Starts an average performance measure. The duration of this measure is an avarage of durations measured for each call. Optionally a category or list of categories can be passed to allow filtering of measurements.","!type":"fn(sId: String, sInfo: String, aCategories?: [String | [object Object]]) -> Object","!category":"function","!static":"true"},"getRequestTimings":{"!description":"Gets the current request timings array for type 'resource' safely","!type":"fn() -> [[object Object]]","!category":"function","!static":"true"},"!helpDescription":"Namespace for the jQuery performance measurement plug-in provided by SAP SE."},"sap.ui.base.ManagedObjectObserver":{"unobserve":{"!description":"Stops observing the given object. A configuration is used to specify the meta data settings that should be ignored. Configuration should be as specific as possible to avoid negative performance impact.","!type":"fn(oObject: sap.ui.base.ManagedObject, oConfiguration: Object)","!category":"function","parameters":{"oConfiguration":"type: object, description: a configuration specifying the settings to stop observing for the object. If no configuration is provided, the object is unobserved completely","oObject":"type: sap.ui.base.ManagedObject, description: the managed object instance that was observed"},"!static":false},"!description":"Use the ManagedObjectObserver to get notified when properties, aggregations or associations of a ManagedObject instance have changed.\n\nUse the {@link #observe} method to add instances of ManagedObject that should be observed or to enhance the set of observed properties, aggregations etc. for an already observed instance.\n\nUse the {@link #unobserve} method to stop observing an instance of ManagedObject or to reduce the set of observed properties, aggregations etc. for an observed instance.\n\nUse the {@link #disconnect} method to completely stop observing all instances of ManagedObject hat previously had been added to this observer.\n\nThe only parameter to the constructor is a function <code>fnCallback<\/code> which will be called for every observed change. Depending on the type of the change, different change objects are passed to the callback:\n\n<h4>Property Change<\/h4> {string} change.name the name of the property that changed<br> {string} change.type 'property'<br> {object} change.object the managed object instance on which the change occurred<br> {any} change.old the old value<br> {any} change.current the new value<br>\n\n<h4>Aggregation Change<\/h4> {string} change.name the name of the aggregation that changed<br> {string} change.type 'aggregation'<br> {object} change.object the managed object instance on which the change occurred<br> {any} change.mutation 'remove' or 'insert'<br> {sap.ui.base.ManagedObject} change.child the child managed object instance<br>\n\n<h4>Association Change<\/h4> {string} change.name the name of the association that changed<br> {string} change.type 'association'<br> {object} change.object the managed object instance on which the change occurred<br> {any} change.mutation 'remove' or 'insert'<br> {string|string[]} change.ids the ids that changed<br>\n\n<h4>Event Registry Change<\/h4> {string} change.name the name of the event that changed<br> {string} change.type 'event'<br> {object} change.object the managed object instance on which the change occurred<br> {any} change.mutation 'remove' or 'insert'<br> {object} change.listener the listener object<br> {object} change.func the listeners function<br> {object} change.data the events data<br>\n\n<h4>Binding Change<\/h4> {string} change.name the name of the binding that changed<br> {string} change.type 'binding'<br> {object} change.object the managed object instance on which the change occurred<br> {any} change.mutation 'prepare', 'ready' or 'remove'<br> {object} change.bindingInfo the binding info object<br> {string} change.memberType 'property' or 'aggregation'<br>\n\n<h4>destroy managed Object<\/h4> {string} change.type 'destroy'<br> {object} change.object the managed object instance on which the change occurred<br>","observe":{"!description":"Starts observing the given object. A configuration is used to specify the meta data settings that should be observed. Configuration should be as specific as possible to avoid negative performance impact. Observing all settings (properties, aggregations, associations) should be avoided.","!type":"fn(oObject: sap.ui.base.ManagedObject, oConfiguration: Object)","!category":"function","parameters":{"oConfiguration":"type: object, description: a mandatory configuration specifying the settings to observe for the object","oObject":"type: sap.ui.base.ManagedObject, description: the managed object instance to be observed"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.base.ManagedObjectObserver with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"isObserved":{"!description":"Checks whether a given configuration set for a control is observed.\n\nAll given settings must be observed for the method to return true.","!type":"fn(oObject: sap.ui.base.ManagedObject, oConfiguration: Object) -> Boolean","!category":"function","parameters":{"oConfiguration":"type: object, description: a configuration specifying the settings to check for the object. If no configuration is provided it checks if the object observes at least for one property, etc.","oObject":"type: sap.ui.base.ManagedObject, description: the managed object instance that was observed"},"!static":false},"!category":"class","disconnect":{"!description":"Disconnect the observer from all objects.","!type":"fn()","!category":"function","!static":false},"!constructorDescription":"Constructor for a new ManagedObjectObserver.","!module":"sap/ui/base/ManagedObjectObserver","getMetadata":{"!description":"Returns a metadata object for class sap.ui.base.ManagedObjectObserver.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.base.Object","!helpDescription":"Use the ManagedObjectObserver to get notified when properties, aggregations or associations of a ManagedObject instance have changed.\n\nUse the {@link #observe} method to add instances of ManagedObject that should be observed or to enhance the set of observed properties, aggregations etc. for an already observed instance.\n\nUse the {@link #unobserve} method to stop observing an instance of ManagedObject or to reduce the set of observed properties, aggregations etc. for an observed instance.\n\nUse the {@link #disconnect} method to completely stop observing all instances of ManagedObject hat previously had been added to this observer.\n\nThe only parameter to the constructor is a function <code>fnCallback<\/code> which will be called for every observed change. Depending on the type of the change, different change objects are passed to the callback:\n\n<h4>Property Change<\/h4> {string} change.name the name of the property that changed<br> {string} change.type 'property'<br> {object} change.object the managed object instance on which the change occurred<br> {any} change.old the old value<br> {any} change.current the new value<br>\n\n<h4>Aggregation Change<\/h4> {string} change.name the name of the aggregation that changed<br> {string} change.type 'aggregation'<br> {object} change.object the managed object instance on which the change occurred<br> {any} change.mutation 'remove' or 'insert'<br> {sap.ui.base.ManagedObject} change.child the child managed object instance<br>\n\n<h4>Association Change<\/h4> {string} change.name the name of the association that changed<br> {string} change.type 'association'<br> {object} change.object the managed object instance on which the change occurred<br> {any} change.mutation 'remove' or 'insert'<br> {string|string[]} change.ids the ids that changed<br>\n\n<h4>Event Registry Change<\/h4> {string} change.name the name of the event that changed<br> {string} change.type 'event'<br> {object} change.object the managed object instance on which the change occurred<br> {any} change.mutation 'remove' or 'insert'<br> {object} change.listener the listener object<br> {object} change.func the listeners function<br> {object} change.data the events data<br>\n\n<h4>Binding Change<\/h4> {string} change.name the name of the binding that changed<br> {string} change.type 'binding'<br> {object} change.object the managed object instance on which the change occurred<br> {any} change.mutation 'prepare', 'ready' or 'remove'<br> {object} change.bindingInfo the binding info object<br> {string} change.memberType 'property' or 'aggregation'<br>\n\n<h4>destroy managed Object<\/h4> {string} change.type 'destroy'<br> {object} change.object the managed object instance on which the change occurred<br>"},"sap.ui.core.TitleLevel":{"H6":{"!description":"The Title is of level 6","!type":"String","!category":"enum"},"H5":{"!description":"The Title is of level 5","!type":"String","!category":"enum"},"H4":{"!description":"The Title is of level 4","!type":"String","!category":"enum"},"!description":"Level of a title.","H3":{"!description":"The Title is of level 3","!type":"String","!category":"enum"},"H2":{"!description":"The Title is of level 2","!type":"String","!category":"enum"},"H1":{"!description":"The Title is of level 1.","!type":"String","!category":"enum"},"Auto":{"!description":"The level of the title is choosen by the control rendering the title.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/ui/core/library"},"sap.ui.model.Filter":{"!description":"Filter for the list binding.","extend":{"!description":"Creates a new subclass of class sap.ui.model.Filter with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for Filter.\n\nYou either pass a single object literal with the filter parameters or use the individual constructor arguments.\nNo matter which variant is used, only certain combinations of parameters are supported\n(the following list uses the names from the object literal):\n<ul>\n<li>A <code>path<\/code>, <code>operator<\/code> and one or two values (<code>value1<\/code>, <code>value2<\/code>), depending on the operator<\/li>\n<li>A <code>path<\/code> and a custom filter function <code>test<\/code><\/li>\n<li>An array of other filters named <code>filters<\/code> and a Boolean flag <code>and<\/code> that specifies whether to combine\n    the filters with an AND (<code>true<\/code>) or an OR (<code>false<\/code>) operator.<\/li>\n<\/ul>\nAn error will be logged to the console if an invalid combination of parameters is provided.\nPlease note that a model implementation may not support a custom filter function, e.g. if the model does not perform client side filtering.\nIt also depends on the model implementation if the filtering is case sensitive or not.\nSee particular model documentation for details.\n\nThe filter operators <code>Any<\/code> and <code>All<\/code> are only supported in V4 OData models.\nWhen creating a filter instance with these filter operators, the argument <code>variable<\/code> only accepts a string identifier and <code>condition<\/code> needs to be another filter instance.","!module":"sap/ui/model/Filter","defaultComparator":{"!description":"Compares two values\n\nThis is the default comparator function used for clientside filtering, if no custom comparator is given in the constructor. It does compare just by using equal/less than/greater than with automatic type casting, except for null values, which are neither less or greater, and string values where localeCompare is used.\n\nThe comparator method returns -1, 0, 1 for comparable values and NaN for non-comparable values.","!type":"fn(a: Object, b: Object) -> Number","!category":"function","parameters":{"b":"type: any, description: the second value to compare","a":"type: any, description: the first value to compare"},"!static":true},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.Filter.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.base.Object","!helpDescription":"Filter for the list binding."},"sap.ui.core.util.serializer.delegate.XML_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.serializer.delegate.XML with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.util.serializer.delegate.Delegate.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sDefaultXmlNamespace?: String, fnGetControlId?: fn(), fnGetEventHandlerName?: fn(), fnMemorizePackage?: fn())","prototype":"sap.ui.core.util.serializer.delegate.XML"},"sap.ui.base.Interface":{"!description":"A class that creates an Interface for an existing class. If a class returns the interface in its constructor, only the defined functions will be visible, no internals of the class can be accessed.","!category":"class","!constructorDescription":"Constructs an instance of sap.ui.base.Interface which restricts access to methods marked as public.","!module":"sap/ui/base/Interface","!proto":"sap.ui.base.Object","!helpDescription":"A class that creates an Interface for an existing class. If a class returns the interface in its constructor, only the defined functions will be visible, no internals of the class can be accessed."},"sap.ui.core.mvc.XMLView":{"registerPreprocessor":{"!description":"Register a preprocessor for all views of a specific type.\n\nThe preprocessor can be registered for several stages of view initialization, for xml views these are either the plain \"xml\" or the already initialized \"controls\" , see {@link sap.ui.core.mvc.XMLView.PreprocessorType}. For each type one preprocessor is executed. If there is a preprocessor passed to or activated at the view instance already, that one is used. When several preprocessors are registered for one hook, it has to be made sure, that they do not conflict when being processed serially.\n\nIt can be either a module name as string of an implementation of {@link sap.ui.core.mvc.View.Preprocessor} or a function with a signature according to {@link sap.ui.core.mvc.View.Preprocessor.process}.\n\n<strong>Note<\/strong>: Preprocessors work only in async views and will be ignored when the view is instantiated in sync mode by default, as this could have unexpected side effects. You may override this behaviour by setting the bSyncSupport flag to true.","!type":"fn(sType: String | sap.ui.core.mvc.XMLView.PreprocessorType, vPreprocessor: String | fn(), bSyncSupport: Boolean, bOnDemand?: Boolean, mSettings: Object)","!category":"function","parameters":{"sType":"type: string|sap.ui.core.mvc.XMLView.PreprocessorType, description: the type of content to be processed","mSettings":"type: object, description: optional configuration for preprocessor","bSyncSupport":"type: boolean, description: declares if the vPreprocessor ensures safe sync processing. This means the preprocessor will be executed also for sync views. Please be aware that any kind of async processing (like Promises, XHR, etc) may break the view initialization and lead to unexpected results.","vPreprocessor":"type: string|function, description: module path of the preprocessor implementation or a preprocessor function","bOnDemand":"type: boolean, description: ondemand preprocessor which enables developers to quickly activate the preprocessor for a view, by setting <code>preprocessors : { xml }<\/code>, for example."},"!static":true},"!description":"A View defined using (P)XML and HTML markup.\n\n<strong>Note:<\/strong><br> Be aware that modifications of the content aggregation of this control are not supported due to technical reasons. This includes calls to all content modifying methods like <code>addContent><\/code> etc., but also the implicit removal of controls contained by the content aggregation. For example the destruction of a Control via the <code> destroy<\/code> method. All functions can be called but may not work properly or lead to unexpected side effects.\n\n<strong>Note:<\/strong><br> On root level, you can only define content for the default aggregation, e.g. without adding the <code>&lt;content&gt;<\/code> tag. If you want to specify content for another aggregation of a view like <code>dependents<\/code>, place it in a child control's dependents aggregation or add it by using {@link sap.ui.core.mvc.XMLView#addDependent}.","extend":{"!description":"Creates a new subclass of class sap.ui.core.mvc.XMLView with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.mvc.View.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new mvc/XMLView.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.mvc.View#constructor sap.ui.core.mvc.View} can be used.","!module":"sap/ui/core/mvc/XMLView","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.mvc.XMLView.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.mvc.View","!helpDescription":"A View defined using (P)XML and HTML markup.\n\n<strong>Note:<\/strong><br> Be aware that modifications of the content aggregation of this control are not supported due to technical reasons. This includes calls to all content modifying methods like <code>addContent><\/code> etc., but also the implicit removal of controls contained by the content aggregation. For example the destruction of a Control via the <code> destroy<\/code> method. All functions can be called but may not work properly or lead to unexpected side effects.\n\n<strong>Note:<\/strong><br> On root level, you can only define content for the default aggregation, e.g. without adding the <code>&lt;content&gt;<\/code> tag. If you want to specify content for another aggregation of a view like <code>dependents<\/code>, place it in a child control's dependents aggregation or add it by using {@link sap.ui.core.mvc.XMLView#addDependent}."},"sap.ui.core.Fragment":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Fragment with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setType":{"!description":"Sets a new value for property {@link #getType type}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sType: String) -> sap.ui.core.Fragment","!category":"function","parameters":{"sType":"type: string, description: New value for property <code>type<\/code>"},"!static":false},"!constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getType type} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","!module":"sap/ui/core/Fragment","getType":{"!description":"Gets current value of property {@link #getType type}.","!type":"fn() -> String","!category":"function","!static":false},"registerType":{"!description":"Registers a new Fragment type","!type":"fn(sType: String, oFragmentImpl: Object)","!category":"function","parameters":{"sType":"type: string, description: the Fragment type. Types \"XML\", \"HTML\" and JS\" are built-in and always available.","oFragmentImpl":"type: object, description: an object having a property \"init\" of type \"function\" which is called on Fragment instantiation with the settings map as argument"},"!static":true},"!description":"Fragments support the definition of light-weight stand-alone UI control trees. This class acts as factory which returns the UI control tree defined inside the Fragments. When used within declarative Views, the Fragment content is imported and seamlessly integrated into the View.\n\nFragments are used similar as sap.ui.core.mvc.Views, but Fragments do not have a Controller on their own (they may know one, though), they are not a Control, they are not part of the UI tree and they have no representation in HTML. By default, in contrast to declarative Views, they do not do anything to guarantee ID uniqueness.\n\nBut like Views they can be defined in several Formats (XML, declarative HTML, JavaScript; support for other types can be plugged in), the declaration syntax is the same as in declarative Views and the name and location of the Fragment files is similar to Views. Controller methods can also be referenced in the declarations, but as Fragments do not have their own controllers, this requires the Fragments to be used within a View which does have a controller. That controller is used, then.\n\nDo not call the Fragment constructor directly!\n\nUse-cases for Fragments are e.g.: - Modularization of UIs without fragmenting the controller structure - Re-use of UI parts - 100%-declarative definition of Views","byId":{"!description":"Returns an Element/Control by its ID in the context of the Fragment with the given ID","!type":"fn(sFragmentId: String, sId: String)","!category":"function","parameters":{"sId":"type: string, description: undefined","sFragmentId":"type: string, description: undefined"},"!static":true},"!category":"class","!helpDescription":"Fragments support the definition of light-weight stand-alone UI control trees. This class acts as factory which returns the UI control tree defined inside the Fragments. When used within declarative Views, the Fragment content is imported and seamlessly integrated into the View.\n\nFragments are used similar as sap.ui.core.mvc.Views, but Fragments do not have a Controller on their own (they may know one, though), they are not a Control, they are not part of the UI tree and they have no representation in HTML. By default, in contrast to declarative Views, they do not do anything to guarantee ID uniqueness.\n\nBut like Views they can be defined in several Formats (XML, declarative HTML, JavaScript; support for other types can be plugged in), the declaration syntax is the same as in declarative Views and the name and location of the Fragment files is similar to Views. Controller methods can also be referenced in the declarations, but as Fragments do not have their own controllers, this requires the Fragments to be used within a View which does have a controller. That controller is used, then.\n\nDo not call the Fragment constructor directly!\n\nUse-cases for Fragments are e.g.: - Modularization of UIs without fragmenting the controller structure - Re-use of UI parts - 100%-declarative definition of Views","!proto":"sap.ui.base.ManagedObject","createId":{"!description":"Returns the ID which a Control with the given ID in the context of the Fragment with the given ID would have","!type":"fn(sFragmentId: String, sId: String)","!category":"function","parameters":{"sId":"type: string, description: undefined","sFragmentId":"type: string, description: undefined"},"!static":true},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.Fragment.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.tmpl.DOMAttribute":{"getValue":{"!description":"Gets current value of property {@link #getValue value}.\n\nValue of the DOM attribute","!type":"fn() -> String","!category":"function","!static":false},"!description":"Represents a DOM attribute of a DOM element.","extend":{"!description":"Creates a new subclass of class sap.ui.core.tmpl.DOMAttribute with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getName":{"!description":"Gets current value of property {@link #getName name}.\n\nName of the DOM attribute","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","setValue":{"!description":"Sets a new value for property {@link #getValue value}.\n\nValue of the DOM attribute\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sValue: String) -> sap.ui.core.tmpl.DOMAttribute","!category":"function","parameters":{"sValue":"type: string, description: New value for property <code>value<\/code>"},"!static":false},"setName":{"!description":"Sets a new value for property {@link #getName name}.\n\nName of the DOM attribute\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sName: String) -> sap.ui.core.tmpl.DOMAttribute","!category":"function","parameters":{"sName":"type: string, description: New value for property <code>name<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new tmpl/DOMAttribute.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getValue value} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/core/tmpl/DOMAttribute","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.tmpl.DOMAttribute.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Element","!helpDescription":"Represents a DOM attribute of a DOM element."},"sap.ui.model.odata.v2.ODataListBinding":{"sort":{"!description":"Sorts the list.","!type":"fn(aSorters: [sap.ui.model.Sorter | [object Object]], bReturnSuccess?: Boolean) -> sap.ui.model.ListBinding","!category":"function","parameters":{"aSorters":"type: sap.ui.model.Sorter|[object Object][], description: A new sorter or an array of sorters which define the sort order","bReturnSuccess":"type: boolean, description: Whether the success indicator should be returned instead of <code>this<\/code>"},"!static":false},"getContexts":{"!description":"Return contexts for the list.","!type":"fn(iStartIndex?: Number, iLength?: Number, iThreshold?: Number) -> [[object Object]]","!category":"function","parameters":{"iLength":"type: int, description: The requested amount of contexts","iStartIndex":"type: int, description: The start index of the requested contexts","iThreshold":"type: int, description: The threshold value"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.v2.ODataListBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.ListBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!module":"sap/ui/model/odata/v2/ODataListBinding","!description":"List binding implementation for oData format.","getDownloadUrl":{"!description":"Get a download URL with the specified format considering the sort/filter/custom parameters.","!type":"fn(sFormat: String) -> String","!category":"function","parameters":{"sFormat":"type: string, description: Value for the $format Parameter"},"!static":false},"!category":"class","getLength":{"!description":"Return the length of the list.\n\nIn case the final length is unknown (e.g. when searching on a large dataset), this will return an estimated length.","!type":"fn() -> Number","!category":"function","!static":false},"refresh":{"!description":"Refreshes the binding, check whether the model data has been changed and fire change event if this is the case. For server side models this should refetch the data from the server. To update a control, even if no data has been changed, e.g. to reset a control after failed validation, please use the parameter bForceUpdate.","!type":"fn(bForceUpdate?: Boolean, sGroupId?: String)","!category":"function","parameters":{"bForceUpdate":"type: boolean, description: Update the bound control even if no data has been changed","sGroupId":"type: string, description: The group Id for the refresh"},"!static":false},"filter":{"!description":"Filters the list.\n\nWhen using <code>sap.ui.model.Filter<\/code> the filters are first grouped according to their binding path. All filters belonging to the same group are combined with OR and after that the results of all groups are combined with AND. Usually this means, all filters applied to a single table column are combined with OR, while filters on different table columns are combined with AND. Please note that a custom filter function is only supported with operation mode <code>sap.ui.model.odata.OperationMode.Client<\/code>.","!type":"fn(aFilters: [sap.ui.model.Filter | [object Object]], sFilterType: sap.ui.model.FilterType, bReturnSuccess?: Boolean) -> sap.ui.model.ListBinding","!category":"function","parameters":{"sFilterType":"type: sap.ui.model.FilterType, description: Type of the filter which should be adjusted. If it is not given, the standard behaviour applies","aFilters":"type: sap.ui.model.Filter|[object Object][], description: Single filter or array of filter objects","bReturnSuccess":"type: boolean, description: Whether the success indicator should be returned instead of <code>this<\/code>"},"!static":false},"!helpDescription":"List binding implementation for oData format.","!proto":"sap.ui.model.ListBinding","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.v2.ODataListBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"initialize":{"!description":"Initialize binding.\n\nFires a change if data is already available ($expand) or a refresh. If metadata is not yet available, do nothing, method will be called again when metadata is loaded.","!type":"fn() -> sap.ui.model.odata.v2.ODataListBinding","!category":"function","!static":false}},"sap.ui.core.util.ExportTypeCSV_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.ExportTypeCSV with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.util.ExportType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.util.ExportTypeCSV"},"sap.ui.model.odata.ODataContextBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.ODataContextBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.ContextBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext: sap.ui.model.Context, mParameters?: Object)","prototype":"sap.ui.model.odata.ODataContextBinding"},"sap.ui.base.Object":{"destroy":{"!description":"Destructor method for objects","!type":"fn()","!category":"function","!static":false},"defineClass":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.3.1 Use the static <code>extend<\/code> method of the desired base class (e.g. {@link sap.ui.base.Object.extend})<br>Creates metadata for a given class and attaches it to the constructor and prototype of that class.\n\nAfter creation, metadata can be retrieved with getMetadata().\n\nThe static info can at least contain the following entries: <ul> <li>baseType: {string} fully qualified name of a base class or empty<\/li> <li>publicMethods: {string} an array of method names that will be visible in the interface proxy returned by {@link #getInterface}<\/li> <\/ul>","!type":"fn(sClassName: String, oStaticInfo: Object, FNMetaImpl?: fn()) -> sap.ui.base.Metadata","!category":"function","parameters":{"FNMetaImpl":"type: function, description: constructor function for the metadata object. If not given, it defaults to sap.ui.base.Metadata.","sClassName":"type: string, description: name of an (already declared) constructor function","oStaticInfo":"type: object, description: static info used to create the metadata object"},"!static":true},"!description":"Base class for all SAPUI5 Objects","extend":{"!description":"Creates a subclass of class sap.ui.base.Object with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain three kinds of informations: <ul> <li><code>metadata:<\/code> an (optional) object literal with metadata about the class. The information in the object literal will be wrapped by an instance of {@link sap.ui.base.Metadata Metadata} and might contain the following information <ul> <li><code>interfaces:<\/code> {string[]} (optional) set of names of implemented interfaces (defaults to no interfaces)<\/li> <li><code>publicMethods:<\/code> {string[]} (optional) list of methods that should be part of the public facade of the class<\/li> <li><code>abstract:<\/code> {boolean} (optional) flag that marks the class as abstract (purely informational, defaults to false)<\/li> <li><code>final:<\/code> {boolean} (optional) flag that marks the class as final (defaults to false)<\/li> <\/ul> Subclasses of sap.ui.base.Object can enrich the set of supported metadata (e.g. see {@link sap.ui.core.Element.extend}). <\/li>\n\n<li><code>constructor:<\/code> a function that serves as a constructor function for the new class. If no constructor function is given, the framework creates a default implementation that delegates all its arguments to the constructor function of the base class. <\/li>\n\n<li><i>any-other-name:<\/i> any other property in the <code>oClassInfo<\/code> is copied into the prototype object of the newly created class. Callers can thereby add methods or properties to all instances of the class. But be aware that the given values are shared between all instances of the class. Usually, it doesn't make sense to use primitive values here other than to declare public constants. <\/li>\n\n<\/ul>\n\nThe prototype object of the newly created class uses the same prototype as instances of the base class (prototype chaining).\n\nA metadata object is always created, even if there is no <code>metadata<\/code> entry in the <code>oClassInfo<\/code> object. A getter for the metadata is always attached to the prototype and to the class (constructor function) itself.\n\nLast but not least, with the third argument <code>FNMetaImpl<\/code> the constructor of a metadata class can be specified. Instances of that class will be used to represent metadata for the newly created class and for any subclass created from it. Typically, only frameworks will use this parameter to enrich the metadata for a new class hierarchy they introduce (e.g. {@link sap.ui.core.Element.extend Element}).","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: constructor function for the metadata object. If not given, it defaults to sap.ui.base.Metadata.","oClassInfo":"type: object, description: structured object with informations about the class","sClassName":"type: string, description: name of the class to be created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for an sap.ui.base.Object.","!module":"sap/ui/base/Object","getInterface":{"!description":"Returns the public interface of the object.","!type":"fn() -> sap.ui.base.Interface","!category":"function","!static":false},"getMetadata":{"!description":"Returns the metadata for the class that this object belongs to.\n\nThis method is only defined when metadata has been declared by using {@link sap.ui.base.Object.defineClass} or {@link sap.ui.base.Object.extend}.","!type":"fn()","!category":"function","!static":false},"!proto":"Object","!helpDescription":"Base class for all SAPUI5 Objects"},"sap.ui.model.odata.type.Decimal":{"!description":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Decimal<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>string<\/code>. It never uses exponential format (\"1e-5\").","validateValue":{"!description":"Validates whether the given value in model representation is valid and meets the defined constraints.","!type":"fn(sValue: String)","!category":"function","parameters":{"sValue":"type: string, description: the value to be validated"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Decimal with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function","!static":false},"formatValue":{"!description":"Formats the given value to the given target type. When formatting to \"string\" the type's constraint <code>scale<\/code> is taken into account.","!type":"fn(sValue: String, sTargetType: String) -> Number | String","!category":"function","parameters":{"sValue":"type: string, description: the value to be formatted, which is represented as a string in the model","sTargetType":"type: string, description: the target type; may be \"any\", \"float\", \"int\", \"string\", or a type with one of these types as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}. See {@link sap.ui.model.odata.type} for more information."},"!static":false},"!category":"class","!constructorDescription":"Constructor for a primitive type <code>Edm.Decimal<\/code>.","!module":"sap/ui/model/odata/type/Decimal","parseValue":{"!description":"Parses the given value, which is expected to be of the given type, to a decimal in <code>string<\/code> representation.","!type":"fn(vValue: String | Number, sSourceType: String) -> String","!category":"function","parameters":{"sSourceType":"type: string, description: the source type (the expected type of <code>vValue<\/code>); may be \"float\", \"int\", \"string\", or a type with one of these types as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}. See {@link sap.ui.model.odata.type} for more information.","vValue":"type: string|number, description: the value to be parsed; the empty string and <code>null<\/code> are parsed to <code>null<\/code>"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.Decimal.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.odata.type.ODataType","!helpDescription":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Decimal<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>string<\/code>. It never uses exponential format (\"1e-5\")."},"sap.ui.model.analytics.odata4analytics.RecursiveHierarchy_obj":{"!type":"fn(oEntityType: sap.ui.model.analytics.odata4analytics.EntityType, oNodeIDProperty: Object, oParentNodeIDProperty: Object, oNodeLevelProperty: Object, oNodeValueProperty: Object, oNodeExternalKeyProperty: Object)","prototype":"sap.ui.model.analytics.odata4analytics.RecursiveHierarchy"},"sap.ui.model.resource.ResourceModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.resource.ResourceModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oData: Object)","prototype":"sap.ui.model.resource.ResourceModel"},"sap.ui.model.json.JSONPropertyBinding_obj":{"!type":"fn(oModel: sap.ui.model.json.JSONModel, sPath: String, oContext: sap.ui.model.Context, mParameters?: Object)","prototype":"sap.ui.model.json.JSONPropertyBinding"},"jQuery.sap.log.Level":{"!description":"Enumeration of the configurable log levels that a Logger should persist to the log.\n\nOnly if the current LogLevel is higher than the level {@link jQuery.sap.log.Level} of the currently added log entry, then this very entry is permanently added to the log. Otherwise it is ignored.","WARNING":{"!description":"Warning level. Use this for logging unwanted but foreseen situations","!type":"Number","!category":"enum"},"ERROR":{"!description":"Error level. Use this for logging of erroneous but still recoverable situations","!type":"Number","!category":"enum"},"!category":"static class","FATAL":{"!description":"Fatal level. Use this for logging unrecoverable situations","!type":"Number","!category":"enum"},"INFO":{"!description":"Info level. Use this for logging information of purely informative nature","!type":"Number","!category":"enum"},"!module":"jquery.sap.global","NONE":{"!description":"Do not log anything","!type":"Number","!category":"enum"},"ALL":{"!description":"Trace level to log everything.","!type":"Number","!category":"enum"},"DEBUG":{"!description":"Debug level. Use this for logging information necessary for debugging","!type":"Number","!category":"enum"},"TRACE":{"!description":"Trace level. Use this for tracing the program flow.","!type":"Number","!category":"enum"}},"sap.ui.core.HTML":{"getDomRef":{"!type":"fn(sSuffix?: String) -> Element","!category":"function","parameters":{"sSuffix":"type: string, description: Suffix of the Element to be retrieved or empty"},"!static":false},"getContent":{"!description":"Gets current value of property {@link #getContent content}.\n\nHTML content to be displayed, defined as a string.\n\nThe content is converted to DOM nodes with a call to <code>new jQuery(content)<\/code>, so any restrictions for the jQuery constructor apply to the content of the HTML control as well.\n\nSome of these restrictions (there might be others!) are: <ul> <li>the content must be enclosed in tags, pure text is not supported. <\/li> <li>if the content contains script tags, they will be executed but they will not appear in the resulting DOM tree. When the contained code tries to find the corresponding script tag, it will fail.<\/li> <\/ul>\n\nPlease consider to consult the jQuery documentation as well.\n\nThe HTML control currently doesn't prevent the usage of multiple root nodes in its DOM content (e.g. <code>setContent(\"&lt;div/>&lt;div/>\")<\/code>), but this is not a guaranteed feature. The accepted content might be restricted to single root nodes in future versions. To notify applications about this fact, a warning is written in the log when multiple root nodes are used.\n\nWhen changing the content dynamically, ensure that the ID of the root node remains the same as the HTML control's ID. Otherwise it cannot be guaranteed that certain lifecycle events take place.","!type":"fn() -> String","!category":"function","!static":false},"setDOMContent":{"!description":"Sets some new DOM content for this HTML control. The content will replace the existing content after the next rendering. Properties are not modified, but preferDOM should be set to true.","!type":"fn(oDom: Element) -> sap.ui.core.HTML","!category":"function","parameters":{"oDom":"type: Element, description: the new DOM content"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.HTML with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setVisible":{"!description":"Sets a new value for property {@link #getVisible visible}.\n\nSpecifies whether the control is visible. Invisible controls are not rendered.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisible: Boolean) -> sap.ui.core.HTML","!category":"function","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new HTML.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContent content} : string<\/li>\n<li>{@link #getPreferDOM preferDOM} : boolean (default: true)<\/li>\n<li>{@link #getSanitizeContent sanitizeContent} : boolean (default: false)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterRendering afterRendering} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setContent":{"!description":"Sets a new value for property {@link #getContent content}.\n\nHTML content to be displayed, defined as a string.\n\nThe content is converted to DOM nodes with a call to <code>new jQuery(content)<\/code>, so any restrictions for the jQuery constructor apply to the content of the HTML control as well.\n\nSome of these restrictions (there might be others!) are: <ul> <li>the content must be enclosed in tags, pure text is not supported. <\/li> <li>if the content contains script tags, they will be executed but they will not appear in the resulting DOM tree. When the contained code tries to find the corresponding script tag, it will fail.<\/li> <\/ul>\n\nPlease consider to consult the jQuery documentation as well.\n\nThe HTML control currently doesn't prevent the usage of multiple root nodes in its DOM content (e.g. <code>setContent(\"&lt;div/>&lt;div/>\")<\/code>), but this is not a guaranteed feature. The accepted content might be restricted to single root nodes in future versions. To notify applications about this fact, a warning is written in the log when multiple root nodes are used.\n\nWhen changing the content dynamically, ensure that the ID of the root node remains the same as the HTML control's ID. Otherwise it cannot be guaranteed that certain lifecycle events take place.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sContent: String) -> sap.ui.core.HTML","!category":"function","parameters":{"sContent":"type: string, description: New value for property <code>content<\/code>"},"!static":false},"!module":"sap/ui/core/HTML","getSanitizeContent":{"!description":"Gets current value of property {@link #getSanitizeContent sanitizeContent}.\n\nWhether to run the HTML sanitizer once the content (HTML markup) is applied or not.\n\nTo configure allowed URLs please use the whitelist API via jQuery.sap.addUrlWhitelist.\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setPreferDOM":{"!description":"Sets a new value for property {@link #getPreferDOM preferDOM}.\n\nWhether existing DOM content is preferred over the given content string.\n\nThere are two scenarios where this flag is relevant (when set to true): <ul> <li>for the initial rendering: when an HTML control is added to a UIArea for the first time and if the root node of that UIArea contained DOM content with the same id as the HTML control, then that content will be used for rendering instead of any specified string content<\/li> <li>any follow-up rendering: when an HTML control is rendered for the second or any later time and the preferDOM flag is set, then the DOM from the first rendering is preserved and not replaced by the string content<\/li> <\/ul>\n\nAs preserving the existing DOM is the most common use case of the HTML control, the default value is true.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bPreferDOM: Boolean) -> sap.ui.core.HTML","!category":"function","parameters":{"bPreferDOM":"type: boolean, description: New value for property <code>preferDOM<\/code>"},"!static":false},"getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nSpecifies whether the control is visible. Invisible controls are not rendered.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"Embeds standard HTML in an SAPUI5 control tree.\n\nSecurity Hint: By default, the HTML content (property 'content') is not sanitized and therefore open to XSS attacks. Applications that want to show user defined input in an HTML control, should either sanitize the content on their own or activate automatic sanitizing through the {@link #setSanitizeContent sanitizeContent} property.\n\nAlthough this control inherits the <code>tooltip<\/code> aggregation/property and the <code>hasStyleClass<\/code>, <code>addStyleClass<\/code>, <code>removeStyleClass<\/code> and <code>toggleStyleClass<\/code> methods from its base class, it doesn't support them. Instead, the defined HTML content can contain a tooltip (title attribute) or custom CSS classes.\n\nFor further hints about usage restrictions for this control, see also the documentation of the <code>content<\/code> property.","detachAfterRendering":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterRendering afterRendering} event of this <code>sap.ui.core.HTML<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.HTML","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"!category":"class","getPreferDOM":{"!description":"Gets current value of property {@link #getPreferDOM preferDOM}.\n\nWhether existing DOM content is preferred over the given content string.\n\nThere are two scenarios where this flag is relevant (when set to true): <ul> <li>for the initial rendering: when an HTML control is added to a UIArea for the first time and if the root node of that UIArea contained DOM content with the same id as the HTML control, then that content will be used for rendering instead of any specified string content<\/li> <li>any follow-up rendering: when an HTML control is rendered for the second or any later time and the preferDOM flag is set, then the DOM from the first rendering is preserved and not replaced by the string content<\/li> <\/ul>\n\nAs preserving the existing DOM is the most common use case of the HTML control, the default value is true.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"setSanitizeContent":{"!description":"Sets a new value for property {@link #getSanitizeContent sanitizeContent}.\n\nWhether to run the HTML sanitizer once the content (HTML markup) is applied or not.\n\nTo configure allowed URLs please use the whitelist API via jQuery.sap.addUrlWhitelist.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bSanitizeContent: Boolean) -> sap.ui.core.HTML","!category":"function","parameters":{"bSanitizeContent":"type: boolean, description: New value for property <code>sanitizeContent<\/code>"},"!static":false},"attachAfterRendering":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterRendering afterRendering} event of this <code>sap.ui.core.HTML<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.core.HTML<\/code> itself.\n\nFired after the HTML control has been rendered. Allows to manipulate the resulting DOM.\n\nWhen the control doesn't have string content and no preserved DOM existed for this control, then this event will fire, but there won't be a DOM node for this control.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.HTML","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.core.HTML<\/code> itself"},"!static":false},"!helpDescription":"Embeds standard HTML in an SAPUI5 control tree.\n\nSecurity Hint: By default, the HTML content (property 'content') is not sanitized and therefore open to XSS attacks. Applications that want to show user defined input in an HTML control, should either sanitize the content on their own or activate automatic sanitizing through the {@link #setSanitizeContent sanitizeContent} property.\n\nAlthough this control inherits the <code>tooltip<\/code> aggregation/property and the <code>hasStyleClass<\/code>, <code>addStyleClass<\/code>, <code>removeStyleClass<\/code> and <code>toggleStyleClass<\/code> methods from its base class, it doesn't support them. Instead, the defined HTML content can contain a tooltip (title attribute) or custom CSS classes.\n\nFor further hints about usage restrictions for this control, see also the documentation of the <code>content<\/code> property.","!proto":"sap.ui.core.Control","fireAfterRendering":{"!description":"Fires event {@link #event:afterRendering afterRendering} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.core.HTML","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.HTML.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.base.ObjectPool":{"!description":"Manages a pool of objects all of the same type; the type has to be specified at pool construction time.\n\nMaintains a list of free objects of the given type. If {@link sap.ui.base.ObjectPool.prototype.borrowObject} is called, an existing free object is taken from the pool and the <code>init<\/code> method is called on this object.\n\nWhen no longer needed, any borrowed object should be returned to the pool by calling {@link #returnObject}. At that point in time, the reset method is called on the object and the object is added to the list of free objects.\n\nSee {@link sap.ui.base.Poolable} for a description of the contract for poolable objects.\n\nExample: <pre>\n  this.oEventPool = new sap.ui.base.ObjectPool(sap.ui.base.Event);\n  var oEvent = this.oEventPool.borrowObject(iEventId, mParameters);\n<\/pre>","extend":{"!description":"Creates a new subclass of class sap.ui.base.ObjectPool with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","borrowObject":{"!description":"Borrows a free object from the pool. Any arguments to this method are forwarded to the init method of the borrowed object.","!type":"fn(any?: Object) -> Object","!category":"function","parameters":{"any":"type: any, description: optional initialization parameters for the borrowed object"},"!static":false},"!constructorDescription":"Creates an ObjectPool instance based on the given oObjectClass.<br/>;\nIf there is a free pooled instance, returns that one, otherwise creates a new one.<br/>;\nIn order to be maintained by the ObjectPool, oObjectClass must implement\nmethods described in the class description.","!module":"sap/ui/base/ObjectPool","returnObject":{"!description":"Returns an object to the pool. The object must have been borrowed from this pool beforehand. The reset method is called on the object before it is added to the set of free objects.","!type":"fn(oObject: Object)","!category":"function","parameters":{"oObject":"type: object, description: the object to return to the pool"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.base.ObjectPool.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.base.Object","!helpDescription":"Manages a pool of objects all of the same type; the type has to be specified at pool construction time.\n\nMaintains a list of free objects of the given type. If {@link sap.ui.base.ObjectPool.prototype.borrowObject} is called, an existing free object is taken from the pool and the <code>init<\/code> method is called on this object.\n\nWhen no longer needed, any borrowed object should be returned to the pool by calling {@link #returnObject}. At that point in time, the reset method is called on the object and the object is added to the list of free objects.\n\nSee {@link sap.ui.base.Poolable} for a description of the contract for poolable objects.\n\nExample: <pre>\n  this.oEventPool = new sap.ui.base.ObjectPool(sap.ui.base.Event);\n  var oEvent = this.oEventPool.borrowObject(iEventId, mParameters);\n<\/pre>"},"sap.ui.model.odata.type":{"Double":"sap.ui.model.odata.type.Double_obj","Int64":"sap.ui.model.odata.type.Int64_obj","DateTimeOffset":"sap.ui.model.odata.type.DateTimeOffset_obj","!module":"sap/ui/model/odata/type/ODataType","Single":"sap.ui.model.odata.type.Single_obj","Guid":"sap.ui.model.odata.type.Guid_obj","Time":"sap.ui.model.odata.type.Time_obj","Decimal":"sap.ui.model.odata.type.Decimal_obj","DateTime":"sap.ui.model.odata.type.DateTime_obj","Date":"sap.ui.model.odata.type.Date_obj","!category":"namespace","Int":"sap.ui.model.odata.type.Int_obj","SByte":"sap.ui.model.odata.type.SByte_obj","Raw":"sap.ui.model.odata.type.Raw_obj","ODataType":"sap.ui.model.odata.type.ODataType_obj","Int32":"sap.ui.model.odata.type.Int32_obj","Boolean":"sap.ui.model.odata.type.Boolean_obj","DateTimeBase":"sap.ui.model.odata.type.DateTimeBase_obj","Byte":"sap.ui.model.odata.type.Byte_obj","TimeOfDay":"sap.ui.model.odata.type.TimeOfDay_obj","!description":"The types in this namespace are {@link sap.ui.model.SimpleType simple types} corresponding to OData primitive types for both {@link http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem OData V2} and {@link http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part3-csdl.html OData V4} (see \"4.4 Primitive Types\").\n\nThey can be used in any place where simple types are allowed (and the model representation matches), but they are of course most valuable when used in bindings to a {@link sap.ui.model.odata.v2.ODataModel} or {@link sap.ui.model.odata.v4.ODataModel}.\n\n<b>Example:<\/b> <pre>\n  &lt;Label text=\"ID\"/>\n  &lt;Input value=\"{path : 'id', type : 'sap.ui.model.odata.type.String',\n      constraints : {nullable : false, maxLength : 10}}\"/>\n  &lt;Label text=\"valid through\"/>\n  &lt;Input value=\"{path : 'validThrough', type : 'sap.ui.model.odata.type.DateTime',\n      constraints : {displayFormat : 'Date'}}\"/>\n<\/pre>\n\nAll types support formatting from the representation used in ODataModel (\"model format\") to various representations used by UI elements (\"target type\") and vice versa. Additionally they support validating a given value against the type's constraints.\n\nThe following target types may be supported: <table> <tr><th>Type<\/th><th>Description<\/th><\/tr> <tr><td><code>string<\/code><\/td><td>The value is converted to a <code>string<\/code>, so that it can be displayed in an input field. Supported by all types.<\/td><\/tr> <tr><td><code>boolean<\/code><\/td><td>The value is converted to a <code>Boolean<\/code>, so that it can be displayed in a checkbox. Only supported by {@link sap.ui.model.odata.type.Boolean}.<\/td><\/tr> <tr><td><code>int<\/code><\/td><td>The value is converted to an integer (as <code>number<\/code>). May cause truncation of decimals and overruns. Supported by all numeric types.<\/td><\/tr> <tr><td><code>float<\/code><\/td><td>The value is converted to a <code>number<\/code>. Supported by all numeric types.<\/td><\/tr> <tr><td><code>any<\/code><\/td><td>A technical format. The value is simply passed through. Only supported by <code>format<\/code>, not by <code>parse<\/code>. Supported by all types.<\/td><\/tr> <\/table>\n\nAll constraints relevant for OData V2 may be given as strings besides their natural types (e.g. <code>nullable : \"false\"<\/code> or <code>maxLength : \"10\"<\/code>). This makes the life of template processors easier, but is not needed for OData V4.\n\n<b>Handling of <code>null<\/code><\/b>:\n\nAll types handle <code>null<\/code> in the same way. When formatting to <code>string<\/code>, it is simply passed through (and <code>undefined<\/code> becomes <code>null<\/code>, too). When parsing from <code>string<\/code>, it is also passed through. Additionally, {@link sap.ui.model.odata.type.String String} and {@link sap.ui.model.odata.type.Guid Guid} convert the empty string to <code>null<\/code> when parsing. <code>validate<\/code> decides based on the constraint <code>nullable<\/code>: If <code>false<\/code>, <code>null<\/code> is not accepted and leads to a (locale-dependent) <code>ParseException<\/code>.\n\nThis ensures that the user cannot clear an input field bound to an attribute with non-nullable type. However it does not ensure that the user really entered something if the field was empty before.","Int16":"sap.ui.model.odata.type.Int16_obj","Stream":"sap.ui.model.odata.type.Stream_obj","String":"sap.ui.model.odata.type.String_obj","!helpDescription":"The types in this namespace are {@link sap.ui.model.SimpleType simple types} corresponding to OData primitive types for both {@link http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem OData V2} and {@link http://docs.oasis-open.org/odata/odata/v4.0/odata-v4.0-part3-csdl.html OData V4} (see \"4.4 Primitive Types\").\n\nThey can be used in any place where simple types are allowed (and the model representation matches), but they are of course most valuable when used in bindings to a {@link sap.ui.model.odata.v2.ODataModel} or {@link sap.ui.model.odata.v4.ODataModel}.\n\n<b>Example:<\/b> <pre>\n  &lt;Label text=\"ID\"/>\n  &lt;Input value=\"{path : 'id', type : 'sap.ui.model.odata.type.String',\n      constraints : {nullable : false, maxLength : 10}}\"/>\n  &lt;Label text=\"valid through\"/>\n  &lt;Input value=\"{path : 'validThrough', type : 'sap.ui.model.odata.type.DateTime',\n      constraints : {displayFormat : 'Date'}}\"/>\n<\/pre>\n\nAll types support formatting from the representation used in ODataModel (\"model format\") to various representations used by UI elements (\"target type\") and vice versa. Additionally they support validating a given value against the type's constraints.\n\nThe following target types may be supported: <table> <tr><th>Type<\/th><th>Description<\/th><\/tr> <tr><td><code>string<\/code><\/td><td>The value is converted to a <code>string<\/code>, so that it can be displayed in an input field. Supported by all types.<\/td><\/tr> <tr><td><code>boolean<\/code><\/td><td>The value is converted to a <code>Boolean<\/code>, so that it can be displayed in a checkbox. Only supported by {@link sap.ui.model.odata.type.Boolean}.<\/td><\/tr> <tr><td><code>int<\/code><\/td><td>The value is converted to an integer (as <code>number<\/code>). May cause truncation of decimals and overruns. Supported by all numeric types.<\/td><\/tr> <tr><td><code>float<\/code><\/td><td>The value is converted to a <code>number<\/code>. Supported by all numeric types.<\/td><\/tr> <tr><td><code>any<\/code><\/td><td>A technical format. The value is simply passed through. Only supported by <code>format<\/code>, not by <code>parse<\/code>. Supported by all types.<\/td><\/tr> <\/table>\n\nAll constraints relevant for OData V2 may be given as strings besides their natural types (e.g. <code>nullable : \"false\"<\/code> or <code>maxLength : \"10\"<\/code>). This makes the life of template processors easier, but is not needed for OData V4.\n\n<b>Handling of <code>null<\/code><\/b>:\n\nAll types handle <code>null<\/code> in the same way. When formatting to <code>string<\/code>, it is simply passed through (and <code>undefined<\/code> becomes <code>null<\/code>, too). When parsing from <code>string<\/code>, it is also passed through. Additionally, {@link sap.ui.model.odata.type.String String} and {@link sap.ui.model.odata.type.Guid Guid} convert the empty string to <code>null<\/code> when parsing. <code>validate<\/code> decides based on the constraint <code>nullable<\/code>: If <code>false<\/code>, <code>null<\/code> is not accepted and leads to a (locale-dependent) <code>ParseException<\/code>.\n\nThis ensures that the user cannot clear an input field bound to an attribute with non-nullable type. However it does not ensure that the user really entered something if the field was empty before."},"sap.ui.model.odata.ODataMetadata":{"fireFailed":{"!description":"Fire event failed to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.model.odata.ODataMetadata","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"attachFailed":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'failed' event of this <code>sap.ui.model.odata.ODataMetadata<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.ODataMetadata","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, the global context (window) is used."},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.ODataMetadata with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new ODataMetadata.","!module":"sap/ui/model/odata/ODataMetadata","loaded":{"!description":"Returns a promise for the loaded state of the metadata","!type":"fn() -> Promise","!category":"function","!static":false},"getUseBatch":{"!description":"Get the use-batch extension value if any","!type":"fn() -> Boolean","!category":"function","!static":false},"attachLoaded":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'loaded' event of this <code>sap.ui.model.odata.ODataMetadata<\/code>.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.model.odata.ODataMetadata","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, the global context (window) is used."},"!static":false},"getServiceMetadata":{"!description":"Return the metadata object","!type":"fn() -> Object","!category":"function","!static":false},"fireLoaded":{"!description":"Fire event loaded to attached listeners.","!type":"fn() -> sap.ui.model.odata.ODataMetadata","!category":"function","!static":false},"!description":"Implementation to access oData metadata","isFailed":{"!description":"Checks whether metadata loading has already failed","!type":"fn() -> Boolean","!category":"function","!static":false},"!category":"class","detachLoaded":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'loaded' event of this <code>sap.ui.model.odata.ODataMetadata<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.ODataMetadata","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"refresh":{"!description":"Refreshes the metadata creating a new request to the server. Returns a new promise which can be resolved or rejected depending on the metadata loading state.","!type":"fn() -> Promise","!category":"function","!static":false},"isLoaded":{"!description":"Checks whether metadata is available","!type":"fn() -> Boolean","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.ODataMetadata.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!helpDescription":"Implementation to access oData metadata","!proto":"sap.ui.base.EventProvider","detachFailed":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'failed' event of this <code>sap.ui.model.odata.ODataMetadata<\/code>.\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.model.odata.ODataMetadata","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false}},"sap.ui.model.ClientPropertyBinding":{"!description":"Property binding implementation for client models.","extend":{"!description":"Creates a new subclass of class sap.ui.model.ClientPropertyBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.PropertyBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Creates a new ClientPropertyBinding.\n\nThis constructor should only be called by subclasses or model implementations, not by application or control code.\nSuch code should use {@link sap.ui.model.Model#bindProperty Model#bindProperty} on the corresponding model implementation instead.","!module":"sap/ui/model/ClientPropertyBinding","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.ClientPropertyBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.PropertyBinding","!helpDescription":"Property binding implementation for client models."},"sap.ui.core.tmpl.DOMElement_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.tmpl.DOMElement with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.tmpl.DOMElement"},"sap.ui.model.CompositeDataState":{"isDirty":{"!description":"Returns whether the data state is dirty. A data state is dirty if the value was changed but is not yet confirmed by a server or the entered value did not yet pass the type validation.","!type":"fn() -> Boolean","!category":"function","!static":false},"getInvalidValue":{"!description":"Returns the dirty value of a binding that was rejected by a type validation. This value was of an incorrect type and could not be applied to the model. If the value was not rejected it will return null. In this case the current model value can be accessed using the <code>getValue<\/code> method.","!type":"fn() -> Object","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.CompositeDataState with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.DataState.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getControlMessages":{"!description":"Sets an array of control state messages.","!type":"fn() -> sap.ui.model.DataState","!category":"function","!static":false},"getChanges":{"!description":"Returns the changes of the data state in a map that the control can use in the <code>refreshDataState<\/code> method. The changed property's name is the key in the map. Each element in the map contains an object of below structure. <pre>\n   {\n       oldValue : The old value of the property,\n       value    : The new value of the property\n   }\n<\/pre> The map only contains the changed properties.","!type":"fn() -> map","!category":"function","!static":false},"!module":"sap/ui/model/CompositeDataState","getMessages":{"!description":"Returns the array of all state messages or null. This combines the model and control messages.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"changed":{"!description":"Returns or sets whether the data state is changed. As long as changed was not set to false the data state is dirty and the corresponding binding will fire data state change events.","!type":"fn(bNewState?: Boolean) -> Boolean","!category":"function","parameters":{"bNewState":"type: boolean, description: the optional new state"},"!static":false},"getInternalProperty":{"!description":"Returns an array of the properties set on the inner datastates","!type":"fn()","!category":"function","!static":false},"isLaundering":{"!description":"Returns whether the data state is in laundering. If data is send to the server the data state becomes laundering until the data was accepted or rejected.","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"Provides and update the status data of a binding. Depending on the models state and controls state changes, the data state is used to propagated changes to a control. The control can react on these changes by implementing the <code>refreshDataState<\/code> method for the control. Here the data state object is passed as a parameter.\n\nUsing the {@link #getChanges getChanges} method the control can determine the changed properties and their old and new value. <pre>\n    //sample implementation to handle message changes\n    myControl.prototype.refreshDataState = function(oDataState) {\n       var aMessages = oDataState.getChanges().messages;\n       if (aMessages) {\n           for (var i = 0; i &lt; aMessages.length; i++) {\n               console.log(aMessages.message);\n           }\n       }\n    }\n\n    //sample implementation to handle laundering state\n    myControl.prototype.refreshDataState = function(oDataState) {\n       var bLaundering = oDataState.getChanges().laundering || false;\n       this.setBusy(bLaundering);\n    }\n\n    //sample implementation to handle dirty state\n    myControl.prototype.refreshDataState = function(oDataState) {\n       if (oDataState.isDirty()) console.log(\"Control \" + this.getId() + \" is now dirty\");\n    }\n<\/pre>\n\nUsing the {@link #getProperty getProperty} method the control can read the properties of the data state. The properties are <ul> <li><code>value<\/code> The value formatted by the formatter of the binding <li><code>originalValue<\/code> The original value of the model formatted by the formatter of the binding <li><code>invalidValue<\/code> The control value that was tried to be applied to the model but was rejected by a type validation <li><code>modelMessages<\/code> The messages that were applied to the binding by the <code>sap.ui.model.MessageModel<\/code> <li><code>controlMessages<\/code> The messages that were applied due to type validation errors <li><code>messages<\/code> All messages of the data state <li><code>dirty<\/code> true if the value was not yet confirmed by the server <\/ul>","isControlDirty":{"!description":"Returns whether the data state is dirty in the UI control. A data state is dirty in the UI control if the entered value did not yet pass the type validation.","!type":"fn() -> Boolean","!category":"function","!static":false},"!category":"class","getModelMessages":{"!description":"Returns the array of state messages of the model or undefined","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"!helpDescription":"Provides and update the status data of a binding. Depending on the models state and controls state changes, the data state is used to propagated changes to a control. The control can react on these changes by implementing the <code>refreshDataState<\/code> method for the control. Here the data state object is passed as a parameter.\n\nUsing the {@link #getChanges getChanges} method the control can determine the changed properties and their old and new value. <pre>\n    //sample implementation to handle message changes\n    myControl.prototype.refreshDataState = function(oDataState) {\n       var aMessages = oDataState.getChanges().messages;\n       if (aMessages) {\n           for (var i = 0; i &lt; aMessages.length; i++) {\n               console.log(aMessages.message);\n           }\n       }\n    }\n\n    //sample implementation to handle laundering state\n    myControl.prototype.refreshDataState = function(oDataState) {\n       var bLaundering = oDataState.getChanges().laundering || false;\n       this.setBusy(bLaundering);\n    }\n\n    //sample implementation to handle dirty state\n    myControl.prototype.refreshDataState = function(oDataState) {\n       if (oDataState.isDirty()) console.log(\"Control \" + this.getId() + \" is now dirty\");\n    }\n<\/pre>\n\nUsing the {@link #getProperty getProperty} method the control can read the properties of the data state. The properties are <ul> <li><code>value<\/code> The value formatted by the formatter of the binding <li><code>originalValue<\/code> The original value of the model formatted by the formatter of the binding <li><code>invalidValue<\/code> The control value that was tried to be applied to the model but was rejected by a type validation <li><code>modelMessages<\/code> The messages that were applied to the binding by the <code>sap.ui.model.MessageModel<\/code> <li><code>controlMessages<\/code> The messages that were applied due to type validation errors <li><code>messages<\/code> All messages of the data state <li><code>dirty<\/code> true if the value was not yet confirmed by the server <\/ul>","!proto":"sap.ui.model.DataState","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.CompositeDataState.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.LocaleData_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.LocaleData with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oLocale: sap.ui.core.Locale)","prototype":"sap.ui.core.LocaleData"},"sap.ui.model.ClientTreeBinding":{"hasChildren":{"!description":"Returns if the node has child nodes.","!type":"fn(oContext: Object) -> Boolean","!category":"function","parameters":{"oContext":"type: object, description: the context element of the node"},"!static":false},"sort":{"!description":"Sorts the contexts of this ClientTreeBinding. The tree will be sorted level by level. So the nodes are NOT sorted absolute, but relative to their parent node, to keep the hierarchy untouched.","!type":"fn(an: [[object Object]]) -> sap.ui.model.ClientTreeBinding","!category":"function","parameters":{"an":"type: [object Object][], description: array of Sorter instances which will be applied"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.ClientTreeBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.TreeBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getRootContexts":{"!description":"Return root contexts for the tree","!type":"fn(iStartIndex: Number, iLength: Number) -> [[object Object]]","!category":"function","parameters":{"iLength":"type: int, description: determines how many contexts to retrieve beginning from the start index.","iStartIndex":"type: int, description: the startIndex where to start the retrieval of contexts"},"!static":false},"!constructorDescription":"Creates a new ClientTreeBinding.\n\nThis constructor should only be called by subclasses or model implementations, not by application or control code.\nSuch code should use {@link sap.ui.model.Model#bindTree Model#bindTree} on the corresponding model implementation instead.","!module":"sap/ui/model/ClientTreeBinding","!description":"Tree binding implementation for client models.","!category":"class","getNodeContexts":{"!description":"Return node contexts for the tree","!type":"fn(oContext: Object, iStartIndex: Number, iLength: Number) -> [[object Object]]","!category":"function","parameters":{"iLength":"type: int, description: determines how many contexts to retrieve beginning from the start index.","iStartIndex":"type: int, description: the startIndex where to start the retrieval of contexts","oContext":"type: object, description: to use for retrieving the node contexts"},"!static":false},"filter":{"!description":"Filters the tree according to the filter definitions.\n\nThe filtering is applied recursively through the tree. The parent nodes of filtered child nodes will also be displayed if they don't match the filter conditions. All filters belonging to a group (=have the same path) are ORed and after that the results of all groups are ANDed.","!type":"fn(aFilters: [sap.ui.model.Filter | [object Object]], sFilterType: sap.ui.model.FilterType) -> sap.ui.model.ClientTreeBinding","!category":"function","parameters":{"sFilterType":"type: sap.ui.model.FilterType, description: Type of the filter which should be adjusted, if it is not given, the standard behaviour applies","aFilters":"type: sap.ui.model.Filter|[object Object][], description: Single filter object or an array of filter objects"},"!static":false},"!helpDescription":"Tree binding implementation for client models.","!proto":"sap.ui.model.TreeBinding","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.ClientTreeBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.model.CompositeDataState_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.CompositeDataState with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.DataState.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.model.CompositeDataState"},"sap.ui.test.Opa":{"emptyQueue":{"!description":"Waits until all waitFor calls are done.","!type":"fn() -> jQuery.promise","!category":"function","!static":true},"!description":"One Page Acceptance testing.","stopQueue":{"!description":"Clears the queue and stops running tests so that new tests can be run. This means all waitFor statements registered by {@link sap.ui.test.Opa#waitFor} will not be invoked anymore and the promise returned by {@link sap.ui.test.Opa.emptyQueue} will be rejected When it is called inside of a check in {@link sap.ui.test.Opa#waitFor} the success function of this waitFor will not be called.","!type":"fn()","!category":"function","!static":true},"waitFor":{"!description":"Queues up a waitFor command for Opa. The Queue will not be emptied until {@link sap.ui.test.Opa.emptyQueue} is called. If you are using {@link sap.ui.test.opaQunit}, emptyQueue will be called by the wrapped tests.\n\nIf you are using Opa5, waitFor takes additional parameters. They can be found here: {@link sap.ui.test.Opa5#waitFor}. Waits for a check condition to return true, in which case a success function will be called. If the timeout is reached before the check returns true, an error function will be called.","!type":"fn(options: Object) -> jQuery.promise","!category":"function","parameters":{"options":"type: object, description: These contain check, success and error functions"},"!static":false},"!category":"class","!constructorDescription":"This class will help you write acceptance tests in one page or single page applications.\nYou can wait for certain conditions to be met.","!module":"sap/ui/test/Opa","resetConfig":{"!description":"Reset Opa.config to its default values. All of the global values can be overwritten in an individual waitFor call.\n\nThe default values are: <ul> <li>arrangements: A new Opa instance<\/li> <li>actions: A new Opa instance<\/li> <li>assertions: A new Opa instance<\/li> <li>timeout : 15 seconds, 0 for infinite timeout<\/li> <li>pollingInterval: 400 milliseconds<\/li> <li>debugTimeout: 0 seconds, infinite timeout by default. This will be used instead of timeout if running in debug mode.<\/li> <li> executionDelay: 0 or 50 (depending on the browser). The value is a number representing milliseconds. The executionDelay will slow down the execution of every single waitFor statement to be delayed by the number of milliseconds. This does not effect the polling interval it just adds an initial pause. Use this parameter to slow down OPA when you want to watch your test during development or checking the UI of your app. It is not recommended to use this parameter in any automated test executions. <\/li> <\/ul>","!type":"fn()","!category":"function","!static":true},"extendConfig":{"!description":"Extends and overwrites default values of the {@link sap.ui.test.Opa.config}. Sample usage: <pre>\n    <code>\n        var oOpa = new Opa();\n\n        // this statement will  will time out after 15 seconds and poll every 400ms.\n        // those two values come from the defaults of {@link sap.ui.test.Opa.config}.\n        oOpa.waitFor({\n        });\n\n        // All wait for statements added after this will take other defaults\n        Opa.extendConfig({\n            timeout: 10,\n            pollingInterval: 100\n        });\n\n        // this statement will time out after 10 seconds and poll every 100 ms\n        oOpa.waitFor({\n        });\n\n        // this statement will time out after 20 seconds and poll every 100 ms\n        oOpa.waitFor({\n            timeout: 20;\n        });\n    <\/code>\n<\/pre>","!type":"fn(options: Object)","!category":"function","parameters":{"options":"type: object, description: The values to be added to the existing config"},"!static":true},"getContext":{"!description":"Gives access to a singleton object you can save values in. Same as {@link sap.ui.test.Opa#getContext}","!type":"fn() -> Object","!category":"function","!static":true},"!proto":"sap.ui.base.Object","!helpDescription":"One Page Acceptance testing."},"sap.ui.core.routing.Target_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.routing.Target with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oOptions: Object, oViews: sap.ui.core.routing.Views, oParent?: sap.ui.core.routing.Target)","prototype":"sap.ui.core.routing.Target"},"sap.ui.model.ClientTreeBindingAdapter_obj":{"!type":"fn()","prototype":"sap.ui.model.ClientTreeBindingAdapter"},"sap.ui.core.util.ExportCell":{"!description":"Contains content that can be used to export data. Used in {@link sap.ui.core.util.ExportColumn ExportColumn} / {@link sap.ui.core.util.Export Export}.","getContent":{"!description":"Gets current value of property {@link #getContent content}.\n\nCell content.","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.ExportCell with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new ExportCell.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContent content} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","setContent":{"!description":"Sets a new value for property {@link #getContent content}.\n\nCell content.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sContent: String) -> sap.ui.core.util.ExportCell","!category":"function","parameters":{"sContent":"type: string, description: New value for property <code>content<\/code>"},"!static":false},"!module":"sap/ui/core/util/ExportCell","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.ExportCell.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Element","!helpDescription":"Contains content that can be used to export data. Used in {@link sap.ui.core.util.ExportColumn ExportColumn} / {@link sap.ui.core.util.Export Export}."},"sap.ui.model.odata.Filter":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22 Please use the {@link sap.ui.model.Filter} instead.<br>Filter for the list binding","extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.Filter with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","convert":{"!description":"Converts the <code>sap.ui.model.odata.Filter<\/code> into a <code>sap.ui.model.Filter<\/code>.","!type":"fn() -> sap.ui.model.Filter","!category":"function","!static":false},"!constructorDescription":"Constructor for Filter","!module":"sap/ui/model/odata/Filter","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.Filter.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.base.Object","!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.22 Please use the {@link sap.ui.model.Filter} instead.<br>Filter for the list binding"},"sap.ui.Device.support":{"orientation":{"!description":"If this flag is set to <code>true<\/code>, the used browser natively supports the <code>orientationchange<\/code> event.\n\n<b>Note:<\/b> The {@link sap.ui.Device.orientation orientation event} of the device API can also be used when there is no native support.","!type":"Boolean","!category":"enum"},"!description":"Contains information about detected capabilities of the used browser or device.","touch":{"!description":"If this flag is set to <code>true<\/code>, the used browser supports touch events.\n\n<b>Note:<\/b> This flag indicates whether the used browser supports touch events or not. This does not necessarily mean that the used device has a touchable screen.","!type":"Boolean","!category":"enum"},"!category":"namespace","pointer":{"!description":"If this flag is set to <code>true<\/code>, the used browser supports pointer events.","!type":"Boolean","!category":"enum"},"matchmedia":{"!description":"If this flag is set to <code>true<\/code>, the used browser natively supports media queries via JavaScript.\n\n<b>Note:<\/b> The {@link sap.ui.Device.media media queries API} of the device API can also be used when there is no native support.","!type":"Boolean","!category":"enum"},"!module":"sap/ui/Device","matchmedialistener":{"!description":"If this flag is set to <code>true<\/code>, the used browser natively supports events of media queries via JavaScript.\n\n<b>Note:<\/b> The {@link sap.ui.Device.media media queries API} of the device API can also be used when there is no native support.","!type":"Boolean","!category":"enum"},"websocket":{"!description":"If this flag is set to <code>true<\/code>, the used browser supports web sockets.","!type":"Boolean","!category":"enum"},"retina":{"!description":"If this flag is set to <code>true<\/code>, the device has a display with a high resolution.","!type":"Boolean","!category":"enum"},"!helpDescription":"Contains information about detected capabilities of the used browser or device."},"sap.ui.model.odata.OperationMode":{"Default":{"!description":"By default, all operations are executed on the server in the OData service request (<code>Server<\/code> mode). Only if the collection is already expanded and all entries are available on the client, all operations are executed on the client (<code>Client<\/code> mode).","!type":"String","!category":"enum"},"!description":"Different modes for executing service operations (filtering, sorting)","Auto":{"!description":"With operation mode <code>Auto<\/code>, operations are either processed on the client or on the server. The exact behavior depends on the configured {@link sap.ui.model.odata.CountMode CountMode}, on the <code>threshold<\/code> and on the size of the data: <ol> <li>Count Modes <code>Request<\/code> and <code>Both<\/code><br> Initially the binding will issue a <code>$count<\/code> request without any filters/sorters. <ol type=\"a\"> <li>If the count is lower or equal to the threshold, the binding will behave like in operation mode <code>Client<\/code>, and a data request for all entries is issued.<\/li> <li>If the count exceeds the threshold, the binding will behave like in operation mode <code>Server<\/code>.<\/li> <\/ol> <\/li>\n\n<li>Count Modes <code>Inline<\/code> or <\/code>InlineRepeat<code><br> The initial request tries to fetch as many entries as configured with the <code>threshold<\/code> parameter, without specifying any filters/sorters. In addition, the query parameter <code>$inlinecount<\/code> is added. The binding assumes, that the threshold given by the application can be met, but it adapts its behavior depending on the response: <ol type=\"a\"> <li>If the response returns fewer (or just as many) entries as the threshold, the binding will behave exactly like when using the operation mode <code>Client<\/code>. Initially configured filters/sorters will be applied afterwards on the client.<\/li> <li>If the <code>$inlinecount<\/code> is higher than the threshold, the binding will behave like in operation mode <code>Server<\/code>. In this case a new data request containing the initially set filters/sorters will be issued.<\/li> <\/ol> It is up to the application to chose an appropriate threshold value. Ideally, it should be high enough to fetch all data in the most common scenarios (to avoid a fallback to operation mode <code>Server<\/code>, requiring an additional request), but it also should be low enough to ensure a fast response in case there is much more data than expected. <\/li> <li>Count mode <code>None<\/code> is not supported together with operation mode <code>Auto<\/code><\/li> <\/ol>","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/ui/model/odata/OperationMode","Server":{"!description":"Operations are executed on the server in the OData service request, by appending corresponding URL parameters (<code>$filter<\/code>, <code>$orderby<\/code>). Each change in filtering or sorting triggers a new request to the server.","!type":"String","!category":"enum"},"Client":{"!description":"Operations are executed on the client. This only works if all entries are loaded on the client. The initial request fetches the complete collection, filtering and sorting does not trigger further requests.","!type":"String","!category":"enum"}},"sap.ui.core.IShrinkable":{"!description":"Interface for the controls which are suitable to shrink.\n\nThis means the control should still look fine when it gets smaller than its normal size, e.g. Text controls which can show ellipsis in case of shrink.\n\nNote: This marker interface can be implemented by controls to give a hint to the container. The control itself does not need to implement anything. A parent control that respects this interface will apply the \"flex-shrink\" as a CSS property which determines how much the item will shrink relative to the rest of the items in the container when negative free space is distributed.","!category":"static class","!module":"sap/ui/core/library"},"sap.ui.model.odata.type.Raw_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Raw with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.Raw"},"sap.ui.model.Sorter_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.Sorter with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sPath: String, bDescending?: Boolean, vGroup?: Boolean | fn(), fnComparator?: fn())","prototype":"sap.ui.model.Sorter"},"sap.ui.model.message":{"!description":"Message DataBinding","MessageModel":"sap.ui.model.message.MessageModel_obj","!category":"namespace","!module":"sap/ui/model/message/MessageModel","!helpDescription":"Message DataBinding"},"sap.ui.model.odata.type.Int16":{"!description":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Int16<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>number<\/code>.","getRange":{"!description":"Returns the type's supported range as object with properties <code>minimum<\/code> and <code>maximum<\/code>.","!type":"fn() -> Object","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Int16 with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.Int.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","!constructorDescription":"Constructor for a primitive type <code>Edm.Int16<\/code>.","!module":"sap/ui/model/odata/type/Int16","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.Int16.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.odata.type.Int","!helpDescription":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Int16<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>number<\/code>."},"sap.ui.core.ImeMode":{"Active":{"!description":"IME is used for entering characters.","!type":"String","!category":"enum"},"!description":"State of the Input Method Editor (IME) for the control.\n\nDepending on its value, it allows users to enter and edit for example Chinese characters.","Inactive":{"!description":"IME is not used for entering characters.","!type":"String","!category":"enum"},"Disabled":{"!description":"IME is disabled.","!type":"String","!category":"enum"},"Auto":{"!description":"The value is automatically computed by the user agent.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/ui/core/library"},"sap.ui.core.LocaleData":{"getNumberSymbol":{"!description":"Get number symbol \"decimal\", \"group\", \"plusSign\", \"minusSign\", \"percentSign\".","!type":"fn(sType: String) -> String","!category":"function","parameters":{"sType":"type: string, description: the required type of symbol"},"!static":false},"getEraDates":{"!description":"Returns the map of era IDs to era dates.","!type":"fn(sCalendarType?: sap.ui.core.CalendarType) -> Array","!category":"function","parameters":{"sCalendarType":"type: sap.ui.core.CalendarType, description: the type of calendar"},"!static":false},"getCurrencyFormat":{"!description":"Returns the short currency formats (like 1K USD, 1M USD....).","!type":"fn(sStyle: String, sNumber: String, sPlural: String) -> String","!category":"function","parameters":{"sNumber":"type: string, description: 1000, 10000 ...","sPlural":"type: string, description: one or other (if not exists other is used)","sStyle":"type: string, description: short"},"!static":false},"getPluralCategory":{"!description":"Returns the plural category (zero, one, two, few, many or other) for the given number value. The number should be passed as a string with dot as decimal separator and the number of decimal/fraction digits as used in the final output. This is needed in order to preserve trailing zeros which are relevant to determine the right plural category.","!type":"fn(sNumber: String | Number) -> String","!category":"function","parameters":{"sNumber":"type: string|number, description: The number to find the plural category for"},"!static":false},"getWeekendEnd":{"!description":"Returns the last day of a weekend for the given locale.\n\nDays are encoded in the same way as for {@link #getFirstDayOfWeek}.\n\nAll week data information in the CLDR is provided for territories (countries). If the locale of this LocaleData doesn't contain country information (e.g. if it contains only a language), then the \"likelySubtag\" information of the CLDR is taken into account to guess the \"most likely\" territory for the locale.","!type":"fn() -> Number","!category":"function","!static":false},"getCombinedDateTimePattern":{"!description":"Get combined datetime pattern with given date and and time style.","!type":"fn(sDateStyle: String, sTimeStyle: String, sCalendarType?: sap.ui.core.CalendarType) -> String","!category":"function","parameters":{"sTimeStyle":"type: string, description: the required style for the time part","sDateStyle":"type: string, description: the required style for the date part","sCalendarType":"type: sap.ui.core.CalendarType, description: the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."},"!static":false},"!module":"sap/ui/core/LocaleData","getPreferredHourSymbol":{"!description":"Returns the preferred hour pattern symbol (h for 12, H for 24 hours) for the current locale.","!type":"fn() -> String","!category":"function","!static":false},"getDecimalPattern":{"!description":"Get decimal format pattern.","!type":"fn() -> String","!category":"function","!static":false},"getFirstDayOfWeek":{"!description":"Returns the day that usually is regarded as the first day of a week in the current locale.\n\nDays are encoded as integer where Sunday=0, Monday=1 etc.\n\nAll week data information in the CLDR is provided for territories (countries). If the locale of this LocaleData doesn't contain country information (e.g. if it contains only a language), then the \"likelySubtag\" information of the CLDR is taken into account to guess the \"most likely\" territory for the locale.","!type":"fn() -> Number","!category":"function","!static":false},"getMonths":{"!description":"Get month names in width \"narrow\", \"abbreviated\" or \"wide\".","!type":"fn(sWidth: String, sCalendarType?: sap.ui.core.CalendarType) -> Array","!category":"function","parameters":{"sWidth":"type: string, description: the required width for the month names","sCalendarType":"type: sap.ui.core.CalendarType, description: the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."},"!static":false},"getEras":{"!description":"Returns array of eras.","!type":"fn(sWidth: String, sCalendarType?: sap.ui.core.CalendarType) -> Array","!category":"function","parameters":{"sWidth":"type: string, description: the style of the era name. It can be 'wide', 'abbreviated' or 'narrow'","sCalendarType":"type: sap.ui.core.CalendarType, description: the type of calendar"},"!static":false},"getDatePattern":{"!description":"Get date pattern in format \"short\", \"medium\", \"long\" or \"full\".","!type":"fn(sStyle: String, sCalendarType?: sap.ui.core.CalendarType) -> String","!category":"function","parameters":{"sStyle":"type: string, description: the required style for the date pattern","sCalendarType":"type: sap.ui.core.CalendarType, description: the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."},"!static":false},"getResolvedUnitFormat":{"!description":"Retrieves the unit format pattern for a specific unit name considering the unit mappings.","!type":"fn(sUnit: String) -> Object","!category":"function","parameters":{"sUnit":"type: string, description: unit name, e.g. \"duration-hour\" or \"my\""},"!static":false},"getScripts":{"!description":"Get locale specific script names.","!type":"fn() -> Object","!category":"function","!static":false},"getRelativeSecond":{"!description":"Returns the relative resource pattern with unit 'second' (like now, \"in {0} seconds\", \"{0} seconds ago\" under locale 'en') based on the given difference value (0 means now, positive value means in the future and negative value means in the past).","!type":"fn(iDiff: Number, sStyle?: String) -> String","!category":"function","parameters":{"sStyle":"type: string, description: @since 1.32.10, 1.34.4 the style of the pattern. The valid values are \"wide\", \"short\" and \"narrow\"","iDiff":"type: int, description: the difference in seconds"},"!static":false},"getRelativeMonth":{"!description":"Returns the relative month resource pattern (like \"This month\", \"Last month\", \"{0} months ago\") based on the given difference of months (0 means this month, 1 means next month, -1 means last month, ...).","!type":"fn(iDiff: Number, sStyle?: String) -> String","!category":"function","parameters":{"sStyle":"type: string, description: @since 1.32.10, 1.34.4 the style of the pattern. The valid values are \"wide\", \"short\" and \"narrow\"","iDiff":"type: int, description: the difference in months"},"!static":false},"getCurrencyCodeBySymbol":{"!description":"Returns the currency code which is corresponded with the given currency symbol.","!type":"fn(sCurrencySymbol: String) -> String","!category":"function","parameters":{"sCurrencySymbol":"type: string, description: The currency symbol which needs to be converted to currency code"},"!static":false},"getLanguages":{"!description":"Get locale specific language names.","!type":"fn() -> Object","!category":"function","!static":false},"getRelativeMinute":{"!description":"Returns the relative resource pattern with unit 'minute' (like \"in {0} minute(s)\", \"{0} minute(s) ago\" under locale 'en') based on the given difference value (positive value means in the future and negative value means in the past).\n\nThere's no pattern defined for 0 difference and the function returns null if 0 is given. In the 0 difference case, you can use the getRelativeSecond function to format the difference using unit 'second'.","!type":"fn(iDiff: Number, sStyle?: String) -> String | null","!category":"function","parameters":{"sStyle":"type: string, description: @since 1.32.10, 1.34.4 the style of the pattern. The valid values are \"wide\", \"short\" and \"narrow\"","iDiff":"type: int, description: the difference in minutes"},"!static":false},"!constructorDescription":"Creates an instance of LocaleData for the given locale.","getUnitFormats":{"!description":"Retrieves all unit format patterns merged.\n\nNote: Does not take unit mapping into consideration.","!type":"fn() -> Object","!category":"function","!static":false},"getPercentPattern":{"!description":"Get percent format pattern.","!type":"fn() -> String","!category":"function","!static":false},"getPreferredCalendarType":{"!description":"Returns the preferred calendar type for the current locale which exists in {@link sap.ui.core.CalendarType}","!type":"fn() -> sap.ui.core.CalendarType","!category":"function","!static":false},"getQuarters":{"!description":"Get quarter names in width \"narrow\", \"abbreviated\" or \"wide\".","!type":"fn(sWidth: String, sCalendarType?: sap.ui.core.CalendarType) -> Array","!category":"function","parameters":{"sWidth":"type: string, description: the required width for the quarter names","sCalendarType":"type: sap.ui.core.CalendarType, description: the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."},"!static":false},"getCombinedIntervalPattern":{"!description":"Get combined interval pattern using a given pattern and the fallback interval pattern.\n\nIf a skeleton based pattern is not available or not wanted, this method can be used to create an interval pattern based on a given pattern, using the fallback interval pattern.","!type":"fn(sPattern: String, sCalendarType?: sap.ui.core.CalendarType) -> String","!category":"function","parameters":{"sPattern":"type: string, description: the single date pattern to use within the interval pattern","sCalendarType":"type: sap.ui.core.CalendarType, description: the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."},"!static":false},"getDisplayName":{"!description":"Returns the display name for a time unit (second, minute, hour, day, week, month, year).","!type":"fn(sType: String, sStyle?: String)","!category":"function","parameters":{"sType":"type: string, description: Type (second, minute, hour, day, week, month, year)","sStyle":"type: string, description: @since 1.32.10, 1.34.4 the style of the pattern. The valid values are \"wide\", \"short\" and \"narrow\" returns {string} display name"},"!static":false},"getRelativeWeek":{"!description":"Returns the relative week resource pattern (like \"This week\", \"Last week\", \"{0} weeks ago\") based on the given difference of weeks (0 means this week, 1 means next week, -1 means last week, ...).","!type":"fn(iDiff: Number, sStyle?: String) -> String","!category":"function","parameters":{"sStyle":"type: string, description: @since 1.32.10, 1.34.4 the style of the pattern. The valid values are \"wide\", \"short\" and \"narrow\"","iDiff":"type: int, description: the difference in weeks"},"!static":false},"getCurrencyDigits":{"!description":"Returns the number of digits of the specified currency.","!type":"fn(sCurrency: String) -> Number","!category":"function","parameters":{"sCurrency":"type: string, description: ISO 4217 currency code"},"!static":false},"getIntervalPattern":{"!description":"Returns the interval format with the given Id (see CLDR documentation for valid Ids) or the fallback format if no interval format with that Id is known.\n\nThe empty Id (\"\") might be used to retrieve the interval format fallback.","!type":"fn(sId: String, sCalendarType?: sap.ui.core.CalendarType) -> String","!category":"function","parameters":{"sId":"type: string, description: Id of the interval format, e.g. \"d-d\"","sCalendarType":"type: sap.ui.core.CalendarType, description: the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."},"!static":false},"!helpDescription":"Provides access to locale-specific data, like date formats, number formats, currencies, etc.","!proto":"sap.ui.base.Object","getTerritories":{"!description":"Get locale specific territory names.","!type":"fn() -> Object","!category":"function","!static":false},"getCurrencySymbol":{"!description":"Returns the currency symbol for the specified currency, if no symbol is found the ISO 4217 currency code is returned.","!type":"fn(sCurrency: String) -> String","!category":"function","parameters":{"sCurrency":"type: string, description: ISO 4217 currency code"},"!static":false},"getCalendarWeek":{"!description":"Returns the defined pattern for representing the calendar week number.","!type":"fn(sStyle: String, iWeekNumber: Number) -> String","!category":"function","parameters":{"sStyle":"type: string, description: the style of the pattern. It can only be either \"wide\" or \"narrow\".","iWeekNumber":"type: int, description: the week number"},"!static":false},"getMinimalDaysInFirstWeek":{"!description":"Returns the required minimal number of days for the first week of a year.\n\nThis is the minimal number of days of the week which must be contained in the new year for the week to become the first week of the year. Depending on the country, this is just a single day (in the US) or at least 4 days (in most of Europe).\n\nAll week data information in the CLDR is provided for territories (countries). If the locale of this LocaleData doesn't contain country information (e.g. if it contains only a language), then the \"likelySubtag\" information of the CLDR is taken into account to guess the \"most likely\" territory for the locale.","!type":"fn() -> Number","!category":"function","!static":false},"getCustomIntervalPattern":{"!description":"Get interval pattern for a given skeleton format.\n\nThe format string does contain pattern symbols (e.g. \"yMMMd\" or \"Hms\") and will be converted into the pattern in the used locale, which matches the wanted symbols best. The symbols must be in canonical order, that is: Era (G), Year (y/Y), Quarter (q/Q), Month (M/L), Week (w/W), Day-Of-Week (E/e/c), Day (d/D), Hour (h/H/k/K/), Minute (m), Second (s), Timezone (z/Z/v/V/O/X/x)\n\nSee http://unicode.org/reports/tr35/tr35-dates.html#availableFormats_appendItems","!type":"fn(sSkeleton: String, vGreatestDiff: Object | String, sCalendarType?: sap.ui.core.CalendarType) -> [String | [object Object]]","!category":"function","parameters":{"sSkeleton":"type: string, description: the wanted skeleton format for the datetime pattern","sCalendarType":"type: sap.ui.core.CalendarType, description: the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.","vGreatestDiff":"type: object|string, description: is either a string which represents the symbol matching the greatest difference in the two dates to format or an object which contains key-value pairs. The value is always true. The key is one of the date field symbol groups whose value are different between the two dates. The key can only be set with 'Year', 'Quarter', 'Month', 'Week', 'Day', 'DayPeriod', 'Hour', 'Minute', or 'Second'."},"!static":false},"getDayPeriods":{"!description":"Get day periods in width \"narrow\", \"abbreviated\" or \"wide\".","!type":"fn(sWidth: String, sCalendarType?: sap.ui.core.CalendarType) -> Array","!category":"function","parameters":{"sWidth":"type: string, description: the required width for the day period names","sCalendarType":"type: sap.ui.core.CalendarType, description: the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."},"!static":false},"getUnitFromMapping":{"!description":"Looks up the unit from defined unit mapping. E.g. for defined unit mapping <code> { \"my\": \"my-custom-unit\", \"cm\": \"length-centimeter\" } <\/code>\n\nCall: <code>getUnitFromMapping(\"my\")<\/code> would result in <code>\"my-custom-unit\"<\/code>","!type":"fn() -> String","!category":"function","!static":false},"getDays":{"!description":"Get day names in width \"narrow\", \"abbreviated\" or \"wide\".","!type":"fn(sWidth: String, sCalendarType?: sap.ui.core.CalendarType) -> Array","!category":"function","parameters":{"sWidth":"type: string, description: the required width for the day names","sCalendarType":"type: sap.ui.core.CalendarType, description: the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."},"!static":false},"getCurrencyPattern":{"!description":"Get currency format pattern.","!type":"fn(sContext: String) -> String","!category":"function","parameters":{"sContext":"type: string, description: the context of the currency pattern (standard or accounting)"},"!static":false},"getRelativePattern":{"!description":"Returns the relative format pattern with given scale (year, month, week, ...) and difference value.","!type":"fn(sScale: String, iDiff: Number, bFuture?: Boolean, sStyle?: String) -> String","!category":"function","parameters":{"sScale":"type: string, description: the scale the relative pattern is needed for","sStyle":"type: string, description: @since 1.32.10, 1.34.4 the style of the pattern. The valid values are \"wide\", \"short\" and \"narrow\"","bFuture":"type: boolean, description: whether a future or past pattern should be used","iDiff":"type: int, description: the difference in the given scale unit"},"!static":false},"!category":"class","getRelativeDay":{"!description":"Returns the relative day resource pattern (like \"Today\", \"Yesterday\", \"{0} days ago\") based on the given difference of days (0 means today, 1 means tommorrow, -1 means yesterday, ...).","!type":"fn(iDiff: Number, sStyle?: String) -> String","!category":"function","parameters":{"sStyle":"type: string, description: @since 1.32.10, 1.34.4 the style of the pattern. The valid values are \"wide\", \"short\" and \"narrow\"","iDiff":"type: int, description: the difference in days"},"!static":false},"getDateTimePattern":{"!description":"Get datetime pattern in style \"short\", \"medium\", \"long\" or \"full\".","!type":"fn(sStyle: String, sCalendarType?: sap.ui.core.CalendarType) -> String","!category":"function","parameters":{"sStyle":"type: string, description: the required style for the datetime pattern","sCalendarType":"type: sap.ui.core.CalendarType, description: the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."},"!static":false},"getPluralCategories":{"!description":"Returns an array of all plural categories available in this language.","!type":"fn() -> Array","!category":"function","!static":false},"getOrientation":{"!description":"Get orientation (left-to-right or right-to-left).","!type":"fn() -> String","!category":"function","!static":false},"getQuartersStandAlone":{"!description":"Get stand alone quarter names in width \"narrow\", \"abbreviated\" or \"wide\".","!type":"fn(sWidth: String, sCalendarType?: sap.ui.core.CalendarType) -> Array","!category":"function","parameters":{"sWidth":"type: string, description: the required width for the quarter names","sCalendarType":"type: sap.ui.core.CalendarType, description: the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.LocaleData with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getRelativeHour":{"!description":"Returns the relative resource pattern with unit 'hour' (like \"in {0} hour(s)\", \"{0} hour(s) ago\" under locale 'en') based on the given difference value (positive value means in the future and negative value means in the past).\n\nThere's no pattern defined for 0 difference and the function returns null if 0 is given. In the 0 difference case, you can use the getRelativeMinute or getRelativeSecond function to format the difference using unit 'minute' or 'second'.","!type":"fn(iDiff: Number, sStyle?: String) -> String | null","!category":"function","parameters":{"sStyle":"type: string, description: @since 1.32.10, 1.34.4 the style of the pattern. The valid values are \"wide\", \"short\" and \"narrow\"","iDiff":"type: int, description: the difference in hours"},"!static":false},"getUnitDisplayName":{"!description":"Retrieves the localized display name of a unit by sUnit, e.g. \"duration-hour\".","!type":"fn(sUnit: String) -> String","!category":"function","parameters":{"sUnit":"type: string, description: the unit key, e.g. \"duration-hour\""},"!static":false},"getRelativePatterns":{"!description":"Returns relative time patterns for the given scales as an array of objects containing scale, value and pattern.\n\nThe array may contain the following values: \"year\", \"month\", \"week\", \"day\", \"hour\", \"minute\" and \"second\". If no scales are given, patterns for all available scales will be returned.\n\nThe return array will contain objects looking like: <pre>\n{\n    scale: \"minute\",\n    sign: 1,\n    pattern: \"in {0} minutes\"\n}\n<\/pre>","!type":"fn(aScales: [[object Object]], sStyle?: String) -> [[object Object]]","!category":"function","parameters":{"sStyle":"type: string, description: @since 1.32.10, 1.34.4 The style of the scale patterns. The valid values are \"wide\", \"short\" and \"narrow\".","aScales":"type: [object Object][], description: The scales for which the available patterns should be returned"},"!static":false},"getDayPeriodsStandAlone":{"!description":"Get standalone day periods in width \"narrow\", \"abbreviated\" or \"wide\".","!type":"fn(sWidth: String, sCalendarType?: sap.ui.core.CalendarType) -> Array","!category":"function","parameters":{"sWidth":"type: string, description: the required width for the day period names","sCalendarType":"type: sap.ui.core.CalendarType, description: the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."},"!static":false},"getRelativeYear":{"!description":"Returns the relative year resource pattern (like \"This year\", \"Last year\", \"{0} year ago\") based on the given difference of years (0 means this year, 1 means next year, -1 means last year, ...).","!type":"fn(iDiff: Number, sStyle?: String) -> String","!category":"function","parameters":{"sStyle":"type: string, description: @since 1.32.10, 1.34.4 the style of the pattern. The valid values are \"wide\", \"short\" and \"narrow\"","iDiff":"type: int, description: the difference in years"},"!static":false},"!description":"Provides access to locale-specific data, like date formats, number formats, currencies, etc.","getDecimalFormat":{"!description":"Returns the short decimal formats (like 1K, 1M....).","!type":"fn(sStyle: String, sNumber: String, sPlural: String) -> String","!category":"function","parameters":{"sNumber":"type: string, description: 1000, 10000 ...","sPlural":"type: string, description: one or other (if not exists other is used)","sStyle":"type: string, description: short or long"},"!static":false},"getWeekendStart":{"!description":"Returns the first day of a weekend for the given locale.\n\nDays are encoded in the same way as for {@link #getFirstDayOfWeek}.\n\nAll week data information in the CLDR is provided for territories (countries). If the locale of this LocaleData doesn't contain country information (e.g. if it contains only a language), then the \"likelySubtag\" information of the CLDR is taken into account to guess the \"most likely\" territory for the locale.","!type":"fn() -> Number","!category":"function","!static":false},"getDaysStandAlone":{"!description":"Get stand alone day names in width \"narrow\", \"abbreviated\" or \"wide\".","!type":"fn(sWidth: String, sCalendarType?: sap.ui.core.CalendarType) -> Array","!category":"function","parameters":{"sWidth":"type: string, description: the required width for the day names","sCalendarType":"type: sap.ui.core.CalendarType, description: the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."},"!static":false},"getUnitFormat":{"!description":"Retrieves the unit format pattern for a specific unit name.\n\nNote: Does not take unit mapping into consideration.","!type":"fn(sUnit: String) -> Object","!category":"function","parameters":{"sUnit":"type: string, description: unit name, e.g. \"duration-hour\""},"!static":false},"getTimePattern":{"!description":"Get time pattern in style \"short\", \"medium\", \"long\" or \"full\".","!type":"fn(sStyle: String, sCalendarType?: sap.ui.core.CalendarType) -> String","!category":"function","parameters":{"sStyle":"type: string, description: the required style for the date pattern","sCalendarType":"type: sap.ui.core.CalendarType, description: the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."},"!static":false},"getCustomDateTimePattern":{"!description":"Get custom datetime pattern for a given skeleton format.\n\nThe format string does contain pattern symbols (e.g. \"yMMMd\" or \"Hms\") and will be converted into the pattern in the used locale, which matches the wanted symbols best. The symbols must be in canonical order, that is: Era (G), Year (y/Y), Quarter (q/Q), Month (M/L), Week (w/W), Day-Of-Week (E/e/c), Day (d/D), Hour (h/H/k/K/), Minute (m), Second (s), Timezone (z/Z/v/V/O/X/x)\n\nSee http://unicode.org/reports/tr35/tr35-dates.html#availableFormats_appendItems","!type":"fn(sSkeleton: String, sCalendarType?: sap.ui.core.CalendarType) -> String","!category":"function","parameters":{"sSkeleton":"type: string, description: the wanted skeleton format for the datetime pattern","sCalendarType":"type: sap.ui.core.CalendarType, description: the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."},"!static":false},"getMonthsStandAlone":{"!description":"Get stand alone month names in width \"narrow\", \"abbreviated\" or \"wide\".","!type":"fn(sWidth: String, sCalendarType?: sap.ui.core.CalendarType) -> Array","!category":"function","parameters":{"sWidth":"type: string, description: the required width for the month names","sCalendarType":"type: sap.ui.core.CalendarType, description: the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale."},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.LocaleData.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.model.analytics.odata4analytics.QueryResult":{"getModel":{"!description":"Get the analytical model containing the entity set for this query result","!type":"fn() -> Object","!category":"function","!static":false},"getEntityType":{"!description":"Get the entity type defining the type of this query result in the OData model","!type":"fn() -> sap.ui.model.analytics.odata4analytics.EntityType","!category":"function","!static":false},"getParameterization":{"!description":"Get the parameterization of this query result","!type":"fn() -> sap.ui.model.analytics.odata4analytics.Parameterization","!category":"function","!static":false},"getAllMeasures":{"!description":"Get all measures included in this query result","!type":"fn() -> Object","!category":"function","!static":false},"getTotaledPropertiesListProperty":{"!description":"Get property holding the totaled property list","!type":"fn() -> Object","!category":"function","!static":false},"!constructorDescription":"Create a representation of an analytic query. Do not create your own instances.","!module":"sap/ui/model/analytics/odata4analytics","getEntitySet":{"!description":"Get the entity set representing this query result in the OData model","!type":"fn() -> sap.ui.model.analytics.odata4analytics.EntitySet","!category":"function","!static":false},"findDimensionByPropertyName":{"!description":"Find dimension by property name","!type":"fn(sName: String) -> sap.ui.model.analytics.odata4analytics.Dimension","!category":"function","parameters":{"sName":"type: string, description: Property name"},"!static":false},"findMeasureByPropertyName":{"!description":"Find measure by property name","!type":"fn(sName: String) -> sap.ui.model.analytics.odata4analytics.Measure","!category":"function","parameters":{"sName":"type: string, description: Property name"},"!static":false},"getAllDimensionNames":{"!description":"Get the names of all dimensions included in the query result","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"findDimensionByName":{"!description":"Find dimension by name","!type":"fn(sName: String) -> sap.ui.model.analytics.odata4analytics.Dimension","!category":"function","parameters":{"sName":"type: string, description: Dimension name"},"!static":false},"!description":"Representation of an entity type annotated with sap:semantics=\"aggregate\".","findMeasureByName":{"!description":"Find measure by name","!type":"fn(sName: String) -> sap.ui.model.analytics.odata4analytics.Measure","!category":"function","parameters":{"sName":"type: string, description: Measure name"},"!static":false},"getAllDimensions":{"!description":"Get all dimensions included in this query result","!type":"fn() -> Object","!category":"function","!static":false},"getAllMeasureNames":{"!description":"Get the names of all measures included in the query result","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getName":{"!description":"Get the name of the query result","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","!helpDescription":"Representation of an entity type annotated with sap:semantics=\"aggregate\".","!proto":"sap.ui.base.Object"},"sap.ui.base.ManagedObjectObserver_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.base.ManagedObjectObserver with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(fnCallback: fn())","prototype":"sap.ui.base.ManagedObjectObserver"},"sap.ui.core.routing.History":{"getPreviousHash":{"!description":"gets the previous hash in the history - if the last direction was Unknown or there was no navigation yet, undefined will be returned","!type":"fn() -> String","!category":"function","!static":false},"getDirection":{"!description":"Determines what the navigation direction for a newly given hash would be It will say Unknown if there is a history foo - bar (current history) - foo If you now ask for the direction of the hash \"foo\" you get Unknown because it might be backwards or forwards. For hash replacements, the history stack will be replaced at this position for the history.","!type":"fn(sNewHash?: String) -> sap.ui.core.routing.HistoryDirection","!category":"function","parameters":{"sNewHash":"type: string, description: optional, if this parameter is not passed the last hashChange is taken."},"!static":false},"!category":"class","!constructorDescription":"Used to determine the {@link sap.ui.core.routing.HistoryDirection} of the current or a future navigation,\ndone with a {@link sap.ui.core.routing.Router} or {@link sap.ui.core.routing.HashChanger}.\n\n<strong>ATTENTION:<\/strong> this class will not be accurate if someone does hash-replacement without the named classes above\nIf you are manipulating the hash directly this class is not supported anymore.","getInstance":{"!type":"fn() -> sap.ui.core.routing.History","!category":"function","!static":true},"!module":"sap/ui/core/routing/History","!proto":"sap.ui.base.Object"},"sap.ui.core.BarColor":{"POSITIVE":{"!description":"Color: green (#b5e7a8)","!type":"String","!category":"enum"},"!description":"Configuration options for the colors of a progress bar","!category":"static class","CRITICAL":{"!description":"Color: yellow (#faf2b0)","!type":"String","!category":"enum"},"NEUTRAL":{"!description":"Color: blue (#b8d0e8)","!type":"String","!category":"enum"},"!module":"sap/ui/core/library","NEGATIVE":{"!description":"Color: red (#ff9a90)","!type":"String","!category":"enum"}},"sap.ui.model.odata.type.Guid_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Guid with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.Guid"},"sap.ui.core.dnd.DragDropInfo":{"setDropLayout":{"!description":"Sets a new value for property {@link #getDropLayout dropLayout}.\n\nDefines the layout of the droppable controls if <code>dropPosition<\/code> is set to <code>Between<\/code> or <code>OnOrBetween<\/code>.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Vertical<\/code>.","!type":"fn(sDropLayout: sap.ui.core.dnd.DropLayout) -> sap.ui.core.dnd.DragDropInfo","!category":"function","parameters":{"sDropLayout":"type: sap.ui.core.dnd.DropLayout, description: New value for property <code>dropLayout<\/code>"},"!static":false},"getDropLayout":{"!description":"Gets current value of property {@link #getDropLayout dropLayout}.\n\nDefines the layout of the droppable controls if <code>dropPosition<\/code> is set to <code>Between<\/code> or <code>OnOrBetween<\/code>.\n\nDefault value is <code>Vertical<\/code>.","!type":"fn() -> sap.ui.core.dnd.DropLayout","!category":"function","!static":false},"setDropEffect":{"!description":"Sets a new value for property {@link #getDropEffect dropEffect}.\n\nDefines the visual drop effect.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>Move<\/code>.","!type":"fn(sDropEffect: sap.ui.core.dnd.DropEffect) -> sap.ui.core.dnd.DragDropInfo","!category":"function","parameters":{"sDropEffect":"type: sap.ui.core.dnd.DropEffect, description: New value for property <code>dropEffect<\/code>"},"!static":false},"!module":"sap/ui/core/dnd/DragDropInfo","getDropEffect":{"!description":"Gets current value of property {@link #getDropEffect dropEffect}.\n\nDefines the visual drop effect.\n\nDefault value is <code>Move<\/code>.","!type":"fn() -> sap.ui.core.dnd.DropEffect","!category":"function","!static":false},"setTargetAggregation":{"!description":"Sets a new value for property {@link #getTargetAggregation targetAggregation}.\n\nThe aggregation name in the <code>targetElement<\/code> which is the target of this drag and drop action. If undefined, the entire <code>targetElement<\/code> is the target. This can be handy if the target control does not have any aggregations or if the drop position within the target does not matter.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sTargetAggregation: String) -> sap.ui.core.dnd.DragDropInfo","!category":"function","parameters":{"sTargetAggregation":"type: string, description: New value for property <code>targetAggregation<\/code>"},"!static":false},"setTargetElement":{"!description":"Sets the associated {@link #getTargetElement targetElement}.","!type":"fn(oTargetElement: sap.ui.core.ID | sap.ui.core.Element) -> sap.ui.core.dnd.DragDropInfo","!category":"function","parameters":{"oTargetElement":"type: sap.ui.core.ID|sap.ui.core.Element, description: ID of an element which becomes the new target of this targetElement association; alternatively, an element instance may be given"},"!static":false},"!category":"class","getTargetAggregation":{"!description":"Gets current value of property {@link #getTargetAggregation targetAggregation}.\n\nThe aggregation name in the <code>targetElement<\/code> which is the target of this drag and drop action. If undefined, the entire <code>targetElement<\/code> is the target. This can be handy if the target control does not have any aggregations or if the drop position within the target does not matter.","!type":"fn() -> String","!category":"function","!static":false},"getDropPosition":{"!description":"Gets current value of property {@link #getDropPosition dropPosition}.\n\nDefines the position for the drop action, visualized by a rectangle.\n\nDefault value is <code>On<\/code>.","!type":"fn() -> sap.ui.core.dnd.DropPosition","!category":"function","!static":false},"fireDragStart":{"!description":"Fires event {@link #event:dragStart dragStart} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!type":"fn(mParameters?: Object) -> Boolean","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"fireDrop":{"!description":"Fires event {@link #event:drop drop} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.core.dnd.DragDropInfo","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"detachDragStart":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:dragStart dragStart} event of this <code>sap.ui.core.dnd.DragDropInfo<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.dnd.DragDropInfo","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"fireDragEnter":{"!description":"Fires event {@link #event:dragEnter dragEnter} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","!type":"fn(mParameters?: Object) -> Boolean","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.dnd.DragDropInfo with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.dnd.DragDropBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"attachDragEnter":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:dragEnter dragEnter} event of this <code>sap.ui.core.dnd.DragDropInfo<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.core.dnd.DragDropInfo<\/code> itself.\n\nThis event is fired when a dragged element enters a drop target.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.dnd.DragDropInfo","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.core.dnd.DragDropInfo<\/code> itself"},"!static":false},"!constructorDescription":"Constructor for a new DragDropInfo.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSourceAggregation sourceAggregation} : string<\/li>\n<li>{@link #getTargetAggregation targetAggregation} : string<\/li>\n<li>{@link #getDropEffect dropEffect} : sap.ui.core.dnd.DropEffect (default: Move)<\/li>\n<li>{@link #getDropPosition dropPosition} : sap.ui.core.dnd.DropPosition (default: On)<\/li>\n<li>{@link #getDropLayout dropLayout} : sap.ui.core.dnd.DropLayout (default: Vertical)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getTargetElement targetElement} : (sap.ui.core.ID | sap.ui.core.Element)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:dragStart dragStart} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:dragEnter dragEnter} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:drop drop} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.dnd.DragDropBase#constructor sap.ui.core.dnd.DragDropBase}\ncan be used as well.","getTargetElement":{"!description":"ID of the element which is the current target of the association {@link #getTargetElement targetElement}, or <code>null<\/code>.","!type":"fn() -> sap.ui.core.ID","!category":"function","!static":false},"getSourceAggregation":{"!description":"Gets current value of property {@link #getSourceAggregation sourceAggregation}.\n\nThe name of the aggregation from which all children can be dragged. If undefined, the control itself can be dragged.","!type":"fn() -> String","!category":"function","!static":false},"setSourceAggregation":{"!description":"Sets a new value for property {@link #getSourceAggregation sourceAggregation}.\n\nThe name of the aggregation from which all children can be dragged. If undefined, the control itself can be dragged.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSourceAggregation: String) -> sap.ui.core.dnd.DragDropInfo","!category":"function","parameters":{"sSourceAggregation":"type: string, description: New value for property <code>sourceAggregation<\/code>"},"!static":false},"!description":"Provides the configuration for drag-and-drop operations.","attachDragStart":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:dragStart dragStart} event of this <code>sap.ui.core.dnd.DragDropInfo<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.core.dnd.DragDropInfo<\/code> itself.\n\nThis event is fired when the user starts dragging an element.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.dnd.DragDropInfo","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.core.dnd.DragDropInfo<\/code> itself"},"!static":false},"attachDrop":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:drop drop} event of this <code>sap.ui.core.dnd.DragDropInfo<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.core.dnd.DragDropInfo<\/code> itself.\n\nThis event is fired when an element is dropped on a valid drop target, as specified by the drag and drop info.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.dnd.DragDropInfo","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.core.dnd.DragDropInfo<\/code> itself"},"!static":false},"detachDrop":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:drop drop} event of this <code>sap.ui.core.dnd.DragDropInfo<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.dnd.DragDropInfo","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"detachDragEnter":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:dragEnter dragEnter} event of this <code>sap.ui.core.dnd.DragDropInfo<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.dnd.DragDropInfo","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setDropPosition":{"!description":"Sets a new value for property {@link #getDropPosition dropPosition}.\n\nDefines the position for the drop action, visualized by a rectangle.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>On<\/code>.","!type":"fn(sDropPosition: sap.ui.core.dnd.DropPosition) -> sap.ui.core.dnd.DragDropInfo","!category":"function","parameters":{"sDropPosition":"type: sap.ui.core.dnd.DropPosition, description: New value for property <code>dropPosition<\/code>"},"!static":false},"!proto":"sap.ui.core.dnd.DragDropBase","!helpDescription":"Provides the configuration for drag-and-drop operations.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.dnd.DragDropInfo.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.model.analytics.odata4analytics.Model.ReferenceByURI_obj":{"!type":"fn(sURI: String)","prototype":"sap.ui.model.analytics.odata4analytics.Model.ReferenceByURI"},"sap.ui.model.odata.type.Int64":{"!description":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Int64<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>string<\/code>.","validateValue":{"!description":"Validates whether the given value in model representation is valid and meets the defined constraints.","!type":"fn(sValue: String)","!category":"function","parameters":{"sValue":"type: string, description: the value to be validated"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Int64 with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function","!static":false},"formatValue":{"!description":"Formats the given value to the given target type.","!type":"fn(sValue: String, sTargetType: String) -> Number | String","!category":"function","parameters":{"sValue":"type: string, description: the value to be formatted, which is represented as a string in the model","sTargetType":"type: string, description: the target type; may be \"any\", \"float\", \"int\", \"string\", or a type with one of these types as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}. See {@link sap.ui.model.odata.type} for more information."},"!static":false},"!category":"class","!constructorDescription":"Constructor for a primitive type <code>Edm.Int64<\/code>.","!module":"sap/ui/model/odata/type/Int64","parseValue":{"!description":"Parses the given value, which is expected to be of the given type, to an Int64 in <code>string<\/code> representation.","!type":"fn(vValue: String | Number, sSourceType: String) -> String","!category":"function","parameters":{"sSourceType":"type: string, description: the source type (the expected type of <code>vValue<\/code>); may be \"float\", \"int\", \"string\", or a type with one of these types as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}. See {@link sap.ui.model.odata.type} for more information.","vValue":"type: string|number, description: the value to be parsed; the empty string and <code>null<\/code> are parsed to <code>null<\/code>"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.Int64.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.odata.type.ODataType","!helpDescription":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Int64<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>string<\/code>."},"sap.ui.model.analytics.odata4analytics.Model.ReferenceByModel_obj":{"!type":"fn(oModel: Object)","prototype":"sap.ui.model.analytics.odata4analytics.Model.ReferenceByModel"},"sap.ui.core.search.OpenSearchProvider_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.search.OpenSearchProvider with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.search.SearchProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.search.OpenSearchProvider"},"sap.ui.core.ID":{"!description":"A string type representing an Id or a name.\n\nAllowed is a sequence of characters (capital/lowercase), digits, underscores, dashes, points and/or colons. It may start with a character or underscore only.","!category":"namespace","!module":"sap/ui/core/library","!helpDescription":"A string type representing an Id or a name.\n\nAllowed is a sequence of characters (capital/lowercase), digits, underscores, dashes, points and/or colons. It may start with a character or underscore only."},"sap.ui.core.search.SearchProvider":{"!description":"Abstract base class for all SearchProviders which can be e.g. attached to a SearchField. Do not create instances of this class, but use a concrete sub class instead.","extend":{"!description":"Creates a new subclass of class sap.ui.core.search.SearchProvider with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","suggest":{"!description":"Call this function to get suggest values from the search provider. The given callback function is called with the suggest value (type 'string', 1st parameter) and an array of the suggestions (type '[string]', 2nd parameter).","!type":"fn(sValue: String, fnCallback: fn())","!category":"function","parameters":{"fnCallback":"type: function, description: The callback function which is called when the suggestions are available.","sValue":"type: string, description: The value for which suggestions are requested."},"!static":false},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nIcon of the Search Provider\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIcon: String) -> sap.ui.core.search.SearchProvider","!category":"function","parameters":{"sIcon":"type: string, description: New value for property <code>icon<\/code>"},"!static":false},"!constructorDescription":"Constructor for a new search/SearchProvider.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well.","!module":"sap/ui/core/search/SearchProvider","getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nIcon of the Search Provider","!type":"fn() -> String","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.search.SearchProvider.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Element","!helpDescription":"Abstract base class for all SearchProviders which can be e.g. attached to a SearchField. Do not create instances of this class, but use a concrete sub class instead."},"sap.ui.test.actions.Press_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.test.actions.Press with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.test.actions.Action.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.test.actions.Press"},"sap.ui.test.matchers.Interactable":{"!description":"Interactable - check if a control is currently able to take user interactions. OPA5 will automatically apply this matcher if you specify actions in {@link sap.ui.test.Opa5#waitFor}. A control will be filtered out by this matcher when: <ul> <li> The control is invisible (using the visible matcher) <\/li> <li> The control or its parents are busy <\/li> <li> The control or its parents are not enabled <\/li> <li> The control is hidden behind a dialog <\/li> <li> The UIArea of the control needs new rendering <\/li> <\/ul> Since 1.53 Interactable no longer uses internal autoWait functionality. Interactable matcher might be made private in the near future. It is recommended to enable autoWait OPA option instead of using the Interactable matcher directly.","extend":{"!description":"Creates a new subclass of class sap.ui.test.matchers.Interactable with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!module":"sap/ui/test/matchers/Interactable","getMetadata":{"!description":"Returns a metadata object for class sap.ui.test.matchers.Interactable.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.test.matchers.Matcher","!helpDescription":"Interactable - check if a control is currently able to take user interactions. OPA5 will automatically apply this matcher if you specify actions in {@link sap.ui.test.Opa5#waitFor}. A control will be filtered out by this matcher when: <ul> <li> The control is invisible (using the visible matcher) <\/li> <li> The control or its parents are busy <\/li> <li> The control or its parents are not enabled <\/li> <li> The control is hidden behind a dialog <\/li> <li> The UIArea of the control needs new rendering <\/li> <\/ul> Since 1.53 Interactable no longer uses internal autoWait functionality. Interactable matcher might be made private in the near future. It is recommended to enable autoWait OPA option instead of using the Interactable matcher directly."},"sap.ui.model":{"SimpleType":"sap.ui.model.SimpleType_obj","ClientModel":"sap.ui.model.ClientModel_obj","CompositeBinding":"sap.ui.model.CompositeBinding_obj","odata":"sap.ui.model.odata","ClientPropertyBinding":"sap.ui.model.ClientPropertyBinding_obj","Model":"sap.ui.model.Model_obj","Type":"sap.ui.model.Type_obj","ClientListBinding":"sap.ui.model.ClientListBinding_obj","!module":"sap/ui/model/Model","type":"sap.ui.model.type","DataState":"sap.ui.model.DataState_obj","ClientTreeBinding":"sap.ui.model.ClientTreeBinding_obj","ParseException":"sap.ui.model.ParseException_obj","MULTI_SELECTION":{"!description":"SelectionMode: Multi Selection","!type":"String","!category":"enum"},"Context":"sap.ui.model.Context_obj","json":"sap.ui.model.json","SINGLE_SELECTION":{"!description":"SelectionMode: Single Selection","!type":"String","!category":"enum"},"!category":"namespace","FilterOperator":"sap.ui.model.FilterOperator","ListBinding":"sap.ui.model.ListBinding_obj","Binding":"sap.ui.model.Binding_obj","TreeBindingAdapter":"sap.ui.model.TreeBindingAdapter_obj","ClientTreeBindingAdapter":"sap.ui.model.ClientTreeBindingAdapter_obj","control":"sap.ui.model.control","TreeBindingCompatibilityAdapter":"sap.ui.model.TreeBindingCompatibilityAdapter_obj","PropertyBinding":"sap.ui.model.PropertyBinding_obj","SelectionModel":"sap.ui.model.SelectionModel_obj","FormatException":"sap.ui.model.FormatException_obj","ValidateException":"sap.ui.model.ValidateException_obj","resource":"sap.ui.model.resource","xml":"sap.ui.model.xml","TreeBindingUtils":"sap.ui.model.TreeBindingUtils","TreeBinding":"sap.ui.model.TreeBinding_obj","analytics":"sap.ui.model.analytics","message":"sap.ui.model.message","ClientContextBinding":"sap.ui.model.ClientContextBinding_obj","Filter":"sap.ui.model.Filter_obj","TreeAutoExpandMode":"sap.ui.model.TreeAutoExpandMode","ChangeReason":"sap.ui.model.ChangeReason","!description":"The SAPUI5 Data Binding API.\n\nThe default binding mode for model implementations (if not implemented otherwise) is two way and the supported binding modes by the model are one way, two way and one time. The default binding mode can be changed by the application for each model instance. A model implementation should specify its supported binding modes and set the default binding mode accordingly (e.g. if the model supports only one way binding the default binding mode should also be set to one way).\n\nThe default size limit for models is 100. The size limit determines the number of entries used for the list bindings.","Sorter":"sap.ui.model.Sorter_obj","CompositeType":"sap.ui.model.CompositeType_obj","BindingMode":"sap.ui.model.BindingMode","FilterType":"sap.ui.model.FilterType","ContextBinding":"sap.ui.model.ContextBinding_obj","CompositeDataState":"sap.ui.model.CompositeDataState_obj","MetaModel":"sap.ui.model.MetaModel_obj","!helpDescription":"The SAPUI5 Data Binding API.\n\nThe default binding mode for model implementations (if not implemented otherwise) is two way and the supported binding modes by the model are one way, two way and one time. The default binding mode can be changed by the application for each model instance. A model implementation should specify its supported binding modes and set the default binding mode accordingly (e.g. if the model supports only one way binding the default binding mode should also be set to one way).\n\nThe default size limit for models is 100. The size limit determines the number of entries used for the list bindings."},"sap.ui.base.Object_obj":{"extend":{"!description":"Creates a subclass of class sap.ui.base.Object with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain three kinds of informations: <ul> <li><code>metadata:<\/code> an (optional) object literal with metadata about the class. The information in the object literal will be wrapped by an instance of {@link sap.ui.base.Metadata Metadata} and might contain the following information <ul> <li><code>interfaces:<\/code> {string[]} (optional) set of names of implemented interfaces (defaults to no interfaces)<\/li> <li><code>publicMethods:<\/code> {string[]} (optional) list of methods that should be part of the public facade of the class<\/li> <li><code>abstract:<\/code> {boolean} (optional) flag that marks the class as abstract (purely informational, defaults to false)<\/li> <li><code>final:<\/code> {boolean} (optional) flag that marks the class as final (defaults to false)<\/li> <\/ul> Subclasses of sap.ui.base.Object can enrich the set of supported metadata (e.g. see {@link sap.ui.core.Element.extend}). <\/li>\n\n<li><code>constructor:<\/code> a function that serves as a constructor function for the new class. If no constructor function is given, the framework creates a default implementation that delegates all its arguments to the constructor function of the base class. <\/li>\n\n<li><i>any-other-name:<\/i> any other property in the <code>oClassInfo<\/code> is copied into the prototype object of the newly created class. Callers can thereby add methods or properties to all instances of the class. But be aware that the given values are shared between all instances of the class. Usually, it doesn't make sense to use primitive values here other than to declare public constants. <\/li>\n\n<\/ul>\n\nThe prototype object of the newly created class uses the same prototype as instances of the base class (prototype chaining).\n\nA metadata object is always created, even if there is no <code>metadata<\/code> entry in the <code>oClassInfo<\/code> object. A getter for the metadata is always attached to the prototype and to the class (constructor function) itself.\n\nLast but not least, with the third argument <code>FNMetaImpl<\/code> the constructor of a metadata class can be specified. Instances of that class will be used to represent metadata for the newly created class and for any subclass created from it. Typically, only frameworks will use this parameter to enrich the metadata for a new class hierarchy they introduce (e.g. {@link sap.ui.core.Element.extend Element}).","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: constructor function for the metadata object. If not given, it defaults to sap.ui.base.Metadata.","oClassInfo":"type: object, description: structured object with informations about the class","sClassName":"type: string, description: name of the class to be created"},"!static":true},"!type":"fn()","prototype":"sap.ui.base.Object"},"sap.ui.model.FormatException":{"!description":"Instances of this exception are thrown when an error occurs while trying to convert a value of the model to a specific property value in the UI.","!category":"class","!constructorDescription":"Creates a new FormatException.","!module":"sap/ui/model/FormatException","!proto":"sap.ui.base.Object","!helpDescription":"Instances of this exception are thrown when an error occurs while trying to convert a value of the model to a specific property value in the UI."},"sap.ui.test.gherkin.StepDefinitions_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.test.gherkin.StepDefinitions with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.test.gherkin.StepDefinitions"},"jQuery.sap.history":{"addHistory":{"!description":"This function adds a history record. It will not trigger the related handler of the routes, the changes have to be done by the developer. Normally, a history record should be added when changes are done already.","!type":"fn(sIdf: String, oStateData: Object, bBookmarkable: Boolean, bVirtual?: Boolean) -> String","!category":"function","parameters":{"bVirtual":"type: boolean, description: This states if the history is a virtual history that should be skipped when going forward or backward in the history stack.","bBookmarkable":"type: boolean, description: Default value is set to true. If this is set to false, the default handler will be called when this identifier and data are matched","sIdf":"type: string, description: The identifier defined in the routes which will be matched in order to call the corresponding handler","oStateData":"type: object, description: The object passed to the corresponding handler when the identifier is matched with the url hash"},"!static":false},"back":{"!description":"This function navigates back through the history stack. The number of steps is set by the parameter iSteps. It also handles the situation when it's called while there's nothing in the history stack. Normally this happens when the application is restored from the bookmark. If there's nothing in the history stack, the default handler will be called with NavType jQuery.sap.history.NavType.Back.","!type":"fn(iSteps?: Number)","!category":"function","parameters":{"iSteps":"type: int, description: how many steps you want to go back, by default the value is 1."},"!static":false},"backToHash":{"!description":"This function calculate the number of back steps to the specific sHash passed as parameter, and then go back to the history state with this hash.","!type":"fn(sHash: String)","!category":"function","parameters":{"sHash":"type: string, description: The hash string needs to be navigated. This is normally returned when you call the addhistory method."},"!static":false},"addRoute":{"!description":"Adds a route to the history handling.","!type":"fn(sIdf: String, fn: fn(), oThis?: Object) -> Object","!category":"function","parameters":{"oThis":"type: object, description: If oThis is provided, the fn function's this keyword will be bound to this object.","sIdf":"type: string, description: The identifier that is matched with the hash in the url in order to call the corresponding handler.","fn":"type: function, description: The function that will be called when the identifier is matched with the hash."},"!static":false},"!constructorDescription":"jQuery.sap.history is deprecated. Please use {@link sap.ui.core.routing.Route} instead.\n\nInitialize the history handling and set the routes and default handler.\nThis should be only called once with the mSettings set in the right format. If the mSettings is not an object,\nyou have another chance to call this function again to initialize the history handling. But once the mSettings\nis set with an object, you can only call the addRoute and setDefaultHandler to set the data.","!module":"jquery.sap.history","addVirtualHistory":{"!description":"This function adds a virtual history record based on the current hash. A virtual record is only for marking the current state of the application, and when the back button clicked it will return to the previous state. It is used when the marked state shouldn't be seen by the user when user click the back or forward button of the browser. For example, when showing a context menu a virtual history record should be added and this record will be skipped when user navigates back and it will return directly to the previous history record. If you avoid adding the virtual history record, it will return to one history record before the one your virtual record is based on. That's why virtual record is necessary.","!type":"fn()","!category":"function","!static":false},"setDefaultHandler":{"!description":"Set the default handler which will be called when there's an empty hash in the url.","!type":"fn(fn: fn())","!category":"function","parameters":{"fn":"type: function, description: The function that will be set as the default handler"},"!static":false},"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.19.1 Please use {@link sap.ui.core.routing.Route} instead.<br>Enables the back and forward buttons in browser to navigate back or forth through the browser history stack.<br/><br/>\n\nIt also supports adding virtual history which used only to mark some intermediate state in order to navigate back to the previous state. And this state will be skipped from the browser history stack immediately after a new history state is added to the history stack after this state <br/><br/>\n\nBy providing the hash saved from the return value of calling jQuery.sap.history.addHistory, jQuery.sap.history.backToHash will navigate back directly to the history state with the same hash. <br/><br/>\n\nPlease use jQuery.sap.history.back() to go one step back in the history stack instead of using window.history.back(), because it handles the empty history stack situation and will call the defaultHandler for this case. <br/><br/>\n\nExample for the usage of history handling: <pre>\n\t//Initialization\n\tjQuery.sap.history({\n\t\troutes: [], //please refer to the jQuery.sap.history function comment for the format.\n\t\tdefaultHandler: function(){\n\t\t\t//code here\n\t\t}\n\t});\n\n\t//add history\n\tvar hash = jQuery.sap.history.addHistory(\"IDENTIFIER\", jsonData);\n\n\t//add virtual history\n\tjQuery.sap.history.addVirtualHistory();\n\n\t//back to hash\n\tjQuery.sap.history.backToHash(hash);\n\n\t//back one step along the history stack\n\tjQuery.sap.history.back();\n<\/pre>","!category":"class","backThroughPath":{"!description":"This function will navigate back to the recent history state which has the sPath identifier. It is usually used to navigate back along one specific route and jump over the intermediate history state if there are any.","!type":"fn(sPath: String)","!category":"function","parameters":{"sPath":"type: string, description: The route identifier to which the history navigates back."},"!static":false},"!helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.19.1 Please use {@link sap.ui.core.routing.Route} instead.<br>Enables the back and forward buttons in browser to navigate back or forth through the browser history stack.<br/><br/>\n\nIt also supports adding virtual history which used only to mark some intermediate state in order to navigate back to the previous state. And this state will be skipped from the browser history stack immediately after a new history state is added to the history stack after this state <br/><br/>\n\nBy providing the hash saved from the return value of calling jQuery.sap.history.addHistory, jQuery.sap.history.backToHash will navigate back directly to the history state with the same hash. <br/><br/>\n\nPlease use jQuery.sap.history.back() to go one step back in the history stack instead of using window.history.back(), because it handles the empty history stack situation and will call the defaultHandler for this case. <br/><br/>\n\nExample for the usage of history handling: <pre>\n\t//Initialization\n\tjQuery.sap.history({\n\t\troutes: [], //please refer to the jQuery.sap.history function comment for the format.\n\t\tdefaultHandler: function(){\n\t\t\t//code here\n\t\t}\n\t});\n\n\t//add history\n\tvar hash = jQuery.sap.history.addHistory(\"IDENTIFIER\", jsonData);\n\n\t//add virtual history\n\tjQuery.sap.history.addVirtualHistory();\n\n\t//back to hash\n\tjQuery.sap.history.backToHash(hash);\n\n\t//back one step along the history stack\n\tjQuery.sap.history.back();\n<\/pre>","!proto":"Object"},"sap.ui.model.odata.type.Int64_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Int64 with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints: Object)","prototype":"sap.ui.model.odata.type.Int64"},"sap.ui.core.routing":{"Target":"sap.ui.core.routing.Target_obj","History":"sap.ui.core.routing.History_obj","Views":"sap.ui.core.routing.Views_obj","!category":"namespace","Router":"sap.ui.core.routing.Router_obj","Route":"sap.ui.core.routing.Route_obj","Targets":"sap.ui.core.routing.Targets_obj","HashChanger":"sap.ui.core.routing.HashChanger_obj"},"sap":{"ui":"sap.ui","sap":"sap","!description":"Root namespace for JavaScript functionality provided by SAP SE.\n\nThe <code>sap<\/code> namespace is automatically registered with the OpenAjax hub if it exists.","!category":"namespace","!module":"sap/ui/Global","!helpDescription":"Root namespace for JavaScript functionality provided by SAP SE.\n\nThe <code>sap<\/code> namespace is automatically registered with the OpenAjax hub if it exists."},"sap.ui.core.History":{"!description":"History handles the history of certain controls (e.g. sap.ui.commons.SearchField).","extend":{"!description":"Creates a new subclass of class sap.ui.core.History with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Creates an instance of the History.\n\nAttention: The Web Storage API which is used by this class stores the data on the client.\nTherefore do not use this API for confidential information.","!module":"sap/ui/core/History","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.History.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.base.Object","!helpDescription":"History handles the history of certain controls (e.g. sap.ui.commons.SearchField)."},"sap.ui.core.Fragment_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Fragment with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.core.Fragment"},"sap.ui.test.OpaExtension_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.test.OpaExtension with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.test.OpaExtension"},"sap.ui.core.util.ExportRow":{"indexOfCell":{"!description":"Checks for the provided <code>sap.ui.core.util.ExportCell<\/code> in the aggregation {@link #getCells cells}. and returns its index if found or -1 otherwise.","!type":"fn(oCell: sap.ui.core.util.ExportCell) -> Number","!category":"function","parameters":{"oCell":"type: sap.ui.core.util.ExportCell, description: The cell whose index is looked for"},"!static":false},"getCells":{"!description":"Gets content of aggregation {@link #getCells cells}.\n\nCells for the Export.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"insertCell":{"!description":"Inserts a cell into the aggregation {@link #getCells cells}.","!type":"fn(oCell: sap.ui.core.util.ExportCell, iIndex: Number) -> sap.ui.core.util.ExportRow","!category":"function","parameters":{"oCell":"type: sap.ui.core.util.ExportCell, description: The cell to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the cell should be inserted at; for a negative value of <code>iIndex<\/code>, the cell is inserted at position 0; for a value greater than the current size of the aggregation, the cell is inserted at the last position"},"!static":false},"destroyCells":{"!description":"Destroys all the cells in the aggregation {@link #getCells cells}.","!type":"fn() -> sap.ui.core.util.ExportRow","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.ExportRow with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"addCell":{"!description":"Adds some cell to the aggregation {@link #getCells cells}.","!type":"fn(oCell: sap.ui.core.util.ExportCell) -> sap.ui.core.util.ExportRow","!category":"function","parameters":{"oCell":"type: sap.ui.core.util.ExportCell, description: The cell to add; if empty, nothing is inserted"},"!static":false},"removeAllCells":{"!description":"Removes all the controls from the aggregation {@link #getCells cells}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"!constructorDescription":"Constructor for a new ExportRow.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getCells cells} : sap.ui.core.util.ExportCell[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","!module":"sap/ui/core/util/ExportRow","!description":"Internally used in {@link sap.ui.core.util.Export Export}.","!category":"class","removeCell":{"!description":"Removes a cell from the aggregation {@link #getCells cells}.","!type":"fn(vCell: Number | String | sap.ui.core.util.ExportCell) -> sap.ui.core.util.ExportCell","!category":"function","parameters":{"vCell":"type: int|string|sap.ui.core.util.ExportCell, description: The cell to remove or its index or id"},"!static":false},"!helpDescription":"Internally used in {@link sap.ui.core.util.Export Export}.","!proto":"sap.ui.base.ManagedObject","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.ExportRow.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.base.Poolable":{"!description":"Contract for objects that can be pooled by ObjectPool","!category":"static class","!module":"sap/ui/base/ObjectPool"},"sap.ui.model.odata.v4.ODataModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.v4.ODataModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(mParameters: Object)","prototype":"sap.ui.model.odata.v4.ODataModel"},"sap.ui.core.routing.Views_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.routing.Views with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oOptions: Object)","prototype":"sap.ui.core.routing.Views"},"sap.ui.model.type.DateTimeInterval_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.type.DateTimeInterval with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.type.DateInterval.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.type.DateTimeInterval"},"sap.ui.core.util.serializer.ViewSerializer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.serializer.ViewSerializer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oRootControl: sap.ui.core.Control | sap.ui.core.UIArea, oWindow?: Object, sDefaultXmlNamespace?: String)","prototype":"sap.ui.core.util.serializer.ViewSerializer"},"sap.ui.core.delegate.ItemNavigation_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.delegate.ItemNavigation with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oDomRef: Element, aItemDomRefs: [[object Object]], bNotInTabChain?: Boolean)","prototype":"sap.ui.core.delegate.ItemNavigation"},"sap.ui.core.ComponentLifecycle":{"!description":"Enumeration for different lifecycle behaviors of Components created by the ComponentContainer.","Legacy":{"!description":"Legacy lifecycle means that the ComponentContainer takes care to destroy the Component which is associated with the ComponentContainer once the ComponentContainer is destroyed but not when a new Component is associated.","!type":"String","!category":"enum"},"Application":{"!description":"Application managed lifecycle means that the Application takes care to destroy the Components associated with the ComponentContainer.","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/ui/core/library","Container":{"!description":"Container managed lifecycle means that the ComponentContainer takes care to destroy the Components associated with the ComponentContainer once the ComponentContainer is destroyed or a new Component is associated.","!type":"String","!category":"enum"}},"sap.ui.model.odata.type.ODataType_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.ODataType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.ODataType"},"sap.ui.model.analytics.odata4analytics.Dimension":{"getAllAttributeNames":{"!description":"Get the names of all attributes included in this dimension","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getTextProperty":{"!description":"Get text property related to this dimension","!type":"fn() -> Object","!category":"function","!static":false},"hasMasterData":{"!description":"Get indicator whether or not master data is available for this dimension","!type":"fn() -> Boolean","!category":"function","!static":false},"!constructorDescription":"Create a representation of a dimension provided by an analytic query. Do not create your own instances.","getSuperOrdinateDimension":{"!description":"Get super-ordinate dimension","!type":"fn() -> Object","!category":"function","!static":false},"!module":"sap/ui/model/analytics/odata4analytics","getContainingQueryResult":{"!description":"Get query result containing this dimension","!type":"fn() -> sap.ui.model.analytics.odata4analytics.QueryResult","!category":"function","!static":false},"getLabelText":{"!description":"Get label","!type":"fn() -> String","!category":"function","!static":false},"findAttributeByName":{"!description":"Find attribute by name","!type":"fn(sName: String) -> sap.ui.model.analytics.odata4analytics.Dimension","!category":"function","parameters":{"sName":"type: string, description: Attribute name"},"!static":false},"getMasterDataEntitySet":{"!description":"Get master data entity set for this dimension","!type":"fn() -> sap.ui.model.analytics.odata4analytics.EntitySet","!category":"function","!static":false},"!description":"Representation of a property annotated with sap:aggregation-role=\"dimension\".","getHierarchy":{"!description":"Get associated hierarchy","!type":"fn() -> Object","!category":"function","!static":false},"getAllAttributes":{"!description":"Get all attributes of this dimension","!type":"fn() -> Object","!category":"function","!static":false},"getName":{"!description":"Get the name of the dimension","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","getKeyProperty":{"!description":"Get the key property","!type":"fn() -> Object","!category":"function","!static":false},"!helpDescription":"Representation of a property annotated with sap:aggregation-role=\"dimension\".","!proto":"sap.ui.base.Object"},"sap.ui.test.actions.Action":{"setIdSuffix":{"!description":"Sets a new value for property {@link #getIdSuffix idSuffix}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sIdSuffix: String) -> sap.ui.test.actions.Action","!category":"function","parameters":{"sIdSuffix":"type: string, description: New value for property <code>idSuffix<\/code>"},"!static":false},"!description":"Actions for Opa5 - needs to implement an executeOn function that should simulate a user interaction on a control","extend":{"!description":"Creates a new subclass of class sap.ui.test.actions.Action with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","executeOn":{"!description":"Checks if the matcher is matching - will get an instance of sap.ui.core.Control as parameter Should be overwritten by subclasses","!type":"fn(element: sap.ui.core.Control)","!category":"function","parameters":{"element":"type: sap.ui.core.Control, description: the {@link sap.ui.core.Element} or a control (extends element) the action will be executed on"},"!static":false},"!constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIdSuffix idSuffix} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","!module":"sap/ui/test/actions/Action","getIdSuffix":{"!description":"Gets current value of property {@link #getIdSuffix idSuffix}.","!type":"fn() -> String","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.test.actions.Action.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.base.ManagedObject","!helpDescription":"Actions for Opa5 - needs to implement an executeOn function that should simulate a user interaction on a control"},"sap.ui.Device.resize":{"height":{"!description":"The current height of the document's window in pixels.","!type":"Number","!category":"enum"},"!description":"Common API for document window size change notifications across all platforms.","detachHandler":{"!description":"Removes a previously attached event handler from the resize events.\n\nThe passed parameters must match those used for registration with {@link #.attachHandler} beforehand.","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","!static":"true"},"width":{"!description":"The current width of the document's window in pixels.","!type":"Number","!category":"enum"},"!category":"namespace","attachHandler":{"!description":"Registers the given event handler to resize change events of the document's window.\n\nThe event is fired whenever the document's window size changes.\n\nThe event handler is called with a single argument: a map <code>mParams<\/code> which provides the following information: <ul> <li><code>mParams.height<\/code>: The height of the document's window in pixels.<\/li> <li><code>mParams.width<\/code>: The width of the document's window in pixels.<\/li> <\/ul>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","!static":"true"},"!module":"sap/ui/Device","!helpDescription":"Common API for document window size change notifications across all platforms."},"sap.ui.model.xml":{"!description":"XML-based DataBinding","XMLModel":"sap.ui.model.xml.XMLModel_obj","!category":"namespace","XMLTreeBinding":"sap.ui.model.xml.XMLTreeBinding_obj","!module":"sap/ui/model/xml/XMLModel","!helpDescription":"XML-based DataBinding"},"sap.ui.model.odata.type.Time_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Time with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.Time"},"sap.ui.core.message.MessageParser":{"getProcessor":{"!description":"Returns the registered processor on which the events for message handling can be fired","!type":"fn() -> sap.ui.core.message.MessageProcessor","!category":"function","!static":false},"!description":"This is an abstract base class for MessageParser objects.","extend":{"!description":"Creates a new subclass of class sap.ui.core.message.MessageParser with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Abstract MessageParser class to be inherited in back-end specific implementations.","parse":{"!description":"Abstract parse method must be implemented in the inheriting class.","!type":"fn()","!category":"function","!static":false},"!module":"sap/ui/core/message/MessageParser","setProcessor":{"!description":"This method is used by the model to register itself as MessageProcessor for this parser","!type":"fn(oProcessor: sap.ui.core.message.MessageProcessor) -> sap.ui.core.message.MessageParser","!category":"function","parameters":{"oProcessor":"type: sap.ui.core.message.MessageProcessor, description: The MessageProcessor that can be used to fire events"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.message.MessageParser.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.base.Object","!helpDescription":"This is an abstract base class for MessageParser objects."},"sap.ui.test.Opa5":{"!module":"sap/ui/test/Opa5","getTestLibConfig":{"!description":"Return particular test lib config object. This method is intended to be used by test libraries to access their configuration provided by the test in the testLibs section in {@link sap.ui.test.Opa5.extendConfig}","!type":"fn(sTestLibName: String) -> Object","!category":"function","parameters":{"sTestLibName":"type: string, description: test library name"},"!static":true},"iTeardownMyAppFrame":{"!description":"Removes the IFrame from the DOM and removes all the references to its objects. Use {@link sap.ui.test.Opa5#hasAppStartedInAFrame} to ensure that an IFrame has been started and teardown can be safely performed.","!type":"fn() -> jQuery.promise","!category":"function","!static":true},"resetConfig":{"!description":"Resets Opa.config to its default values. See {@link sap.ui.test.Opa5#waitFor} for the description Default values for OPA5 are: <ul> <li>viewNamespace: empty string<\/li> <li>arrangements: instance of OPA5<\/li> <li>actions: instance of OPA5<\/li> <li>assertions: instance of OPA5<\/li> <li>visible: true<\/li> <li>timeout : 15 seconds, 0 for infinite timeout<\/li> <li>pollingInterval: 400 milliseconds<\/li> <li>debugTimeout: 0 seconds, infinite timeout by default. This will be used instead of timeout if running in debug mode.<\/li> <li>autoWait: false - since 1.42<\/li> <li>appParams: object with URI parameters for the tested app - since 1.48<\/li> <\/ul>","!type":"fn()","!category":"function","!static":true},"getContext":{"!description":"Gives access to a singleton object you can save values in. See {@link sap.ui.test.Opa.getContext} for the description","!type":"fn() -> Object","!category":"function","!static":true},"getHashChanger":{"!description":"Returns the HashChanger object in the current context. If an IFrame is launched, it will return the IFrame's HashChanger.","!type":"fn() -> sap.ui.core.routing.HashChanger","!category":"function","!static":true},"getJQuery":{"!description":"Returns the jQuery object in the current context. If an IFrame is launched, it will return the IFrame's jQuery object.","!type":"fn() -> jQuery","!category":"function","!static":true},"iStartMyAppInAFrame":{"!description":"Starts an app in an IFrame. Only works reliably if running on the same server.","!type":"fn(sSource: String, iTimeout?: Number, autoWait?: Boolean, oOptions?: Object) -> jQuery.promise","!category":"function","parameters":{"autoWait":"type: boolean, description: Since 1.53, activates autoWait while the application is starting up. This allows more time for application startup and stabilizes tests for slow-loading applications. This parameter is false by default, regardless of the global autoWait value, to prevent issues in existing tests.","sSource":"type: string, description: The source of the IFrame.","iTimeout":"type: number, description: The timeout for loading the IFrame in seconds - default is 80.","oOptions":"type: object, description: Since 1.53, you can provide a startup configuration object as an only parameter. oOptions is expected to have the keys: source, timeout and autoWait."},"!static":true},"iTeardownMyApp":{"!description":"Tears down the started application regardless of how it was started. Removes the IFrame launched by {@link sap.ui.test.Opa5#iStartMyAppInAFrame} or destroys the UIComponent launched by {@link sap.ui.test.Opa5#iStartMyUIComponent}. This function is designed to make the test's teardown independent of the startup. Use {@link sap.ui.test.Opa5#hasAppStarted} to ensure that the application has been started and teardown can be safely performed.","!type":"fn() -> jQuery.promise","!category":"function","!static":false},"!category":"class","hasAppStarted":{"!description":"Checks if the application has been started using {@link sap.ui.test.Opa5#iStartMyAppInAFrame} or {@link sap.ui.test.Opa5#iStartMyUIComponent}","!type":"fn() -> Boolean","!category":"function","!static":false},"getPlugin":{"!description":"Returns the Opa plugin used for retrieving controls. If an IFrame is launched, it will return the IFrame's plugin.","!type":"fn() -> sap.ui.test.OpaPlugin","!category":"function","!static":true},"stopQueue":{"!description":"Clears the queue and stops running tests so that new tests can be run. This means all waitFor statements registered by {@link sap.ui.test.Opa5#waitFor} will not be invoked anymore and the promise returned by {@link sap.ui.test.Opa5.emptyQueue} will be rejected. When its called inside of a check in {@link sap.ui.test.Opa5#waitFor} the success function of this waitFor will not be called.","!type":"fn()","!category":"function","!static":true},"waitFor":{"!description":"Takes the same parameters as {@link sap.ui.test.Opa#waitFor}. Also allows you to specify additional parameters:","!type":"fn(options: Object) -> jQuery.promise","!category":"function","parameters":{"options":"type: object, description: An Object containing conditions for waiting and callbacks"},"!static":false},"!constructorDescription":"Helps you when writing tests for UI5 applications.\nProvides convenience to wait and retrieve for UI5 controls without relying on global IDs.\nMakes it easy to wait until your UI is in the state you need for testing, e.g.: waiting for backend data.","getWindow":{"!description":"Returns the window object in the current context. If an IFrame is launched, it will return the IFrame's window.","!type":"fn() -> Window","!category":"function","!static":true},"hasAppStartedInAFrame":{"!description":"Checks if the application has been started using {@link sap.ui.test.Opa5#iStartMyAppInAFrame}","!type":"fn() -> Boolean","!category":"function","!static":false},"iStartMyUIComponent":{"!description":"Starts a UIComponent.","!type":"fn(oOptions: Object) -> jQuery.promise","!category":"function","parameters":{"oOptions":"type: object, description: An Object that contains the configuration for starting up a UIComponent."},"!static":false},"createPageObjects":{"!description":"Create a page object configured as arrangement, action and assertion to the Opa.config. Use it to structure your arrangement, action and assertion based on parts of the screen to avoid name clashes and help to structure your tests.","!type":"fn(mPageObjects: map) -> map","!category":"function","parameters":{"mPageObjects":"type: map, description: undefined"},"!static":true},"getUtils":{"!description":"Returns the QUnit utils object in the current context. If an IFrame is launched, it will return the IFrame's QUnit utils.","!type":"fn() -> sap.ui.test.qunit","!category":"function","!static":true},"emptyQueue":{"!description":"Waits until all waitFor calls are done See {@link sap.ui.test.Opa.emptyQueue} for the description","!type":"fn() -> jQuery.promise","!category":"function","!static":true},"!description":"UI5 extension of the OPA framework","hasUIComponentStarted":{"!description":"Checks if the application has been started using {@link sap.ui.test.Opa5#iStartMyUIComponent}","!type":"fn() -> Boolean","!category":"function","!static":false},"iTeardownMyUIComponent":{"!description":"Destroys the UIComponent and removes the div from the dom like all the references on its objects. Use {@link sap.ui.test.Opa5#hasUIComponentStarted} to ensure that a UIComponent has been started and teardown can be safely performed.","!type":"fn() -> jQuery.promise","!category":"function","!static":false},"extendConfig":{"!description":"Extends and overwrites default values of the {@link sap.ui.test.Opa.config}. Most frequent usecase: <pre>\n    <code>\n        // Every waitFor will append this namespace in front of your viewName\n        Opa5.extendConfig({\n           viewNamespace: \"namespace.of.my.views.\"\n        });\n\n        var oOpa = new Opa5();\n\n        // Looks for a control with the id \"myButton\" in a View with the name \"namespace.of.my.views.Detail\"\n        oOpa.waitFor({\n             id: \"myButton\",\n             viewName: \"Detail\"\n        });\n\n        // Looks for a control with the id \"myList\" in a View with the name \"namespace.of.my.views.Master\"\n        oOpa.waitFor({\n             id: \"myList\",\n             viewName: \"Master\"\n        });\n    <\/code>\n<\/pre>\n\nSample usage: <pre>\n    <code>\n        var oOpa = new Opa5();\n\n        // this statement will  will time out after 15 seconds and poll every 400ms.\n        // those two values come from the defaults of {@link sap.ui.test.Opa.config}.\n        oOpa.waitFor({\n        });\n\n        // All wait for statements added after this will take other defaults\n        Opa5.extendConfig({\n            timeout: 10,\n            pollingInterval: 100\n        });\n\n        // this statement will time out after 10 seconds and poll every 100 ms\n        oOpa.waitFor({\n        });\n\n        // this statement will time out after 20 seconds and poll every 100 ms\n        oOpa.waitFor({\n            timeout: 20;\n        });\n    <\/code>\n<\/pre>","!type":"fn(options: Object)","!category":"function","parameters":{"options":"type: object, description: The values to be added to the existing config"},"!static":true},"!proto":"sap.ui.base.Object","!helpDescription":"UI5 extension of the OPA framework"},"sap.ui.core.format.NumberFormat_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.format.NumberFormat with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object)","prototype":"sap.ui.core.format.NumberFormat"},"sap.ui.core.routing.History_obj":{"!type":"fn(oHashChanger: sap.ui.core.routing.HashChanger)","prototype":"sap.ui.core.routing.History"},"sap.ui.model.type.String_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.type.String with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.type.String"},"sap.ui.model.odata.v4.ODataPropertyBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.v4.ODataPropertyBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.PropertyBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oModel: sap.ui.model.odata.v4.ODataModel, sPath: String, oContext?: sap.ui.model.Context, mParameters?: Object)","prototype":"sap.ui.model.odata.v4.ODataPropertyBinding"},"sap.ui.model.odata.v4.ODataUtils":{"parseTimeOfDay":{"!description":"Parses an \"Edm.TimeOfDay\" value and returns the corresponding JavaScript <code>Date<\/code> value (UTC with a date value of \"1970-01-01\").","!type":"fn(sTimeOfDay: String) -> Date","!category":"function","!static":"true"},"!description":"A collection of methods which help to consume OData V4 services.","parseDateTimeOffset":{"!description":"Parses an \"Edm.DateTimeOffset\" value and returns the corresponding JavaScript <code>Date<\/code> value.","!type":"fn(sDateTimeOffset: String) -> Date","!category":"function","!static":"true"},"compare":{"!description":"Compares the given OData values.","!type":"fn(vValue1: Object, vValue2: Object, vEdmType?: Boolean | String) -> Number","!category":"function","!static":"true"},"!category":"namespace","!module":"sap/ui/model/odata/v4/ODataUtils","parseDate":{"!description":"Parses an \"Edm.Date\" value and returns the corresponding JavaScript <code>Date<\/code> value (UTC with a time value of \"00:00:00\").","!type":"fn(sDate: String) -> Date","!category":"function","!static":"true"},"!helpDescription":"A collection of methods which help to consume OData V4 services."},"sap.ui.model.odata.ODataMetaModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.ODataMetaModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.MetaModel.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oMetadata: sap.ui.model.odata.ODataMetadata, oAnnotations?: sap.ui.model.odata.ODataAnnotations, oODataModelInterface?: Object)","prototype":"sap.ui.model.odata.ODataMetaModel"},"sap.ui.core.delegate.ScrollEnablement_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.delegate.ScrollEnablement with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oControl: sap.ui.core.Control, sScrollContentDom: String, oConfig: Object)","prototype":"sap.ui.core.delegate.ScrollEnablement"},"sap.ui.test.matchers.AggregationFilled_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.test.matchers.AggregationFilled with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(mSettings: Object)","prototype":"sap.ui.test.matchers.AggregationFilled"},"sap.ui.core.LabelEnablement":{"getReferencingLabels":{"!description":"Returns an array of IDs of the labels referencing the given element.","!type":"fn(oElement: sap.ui.core.Element) -> [[object Object]]","!category":"function","!static":"true"},"!description":"Helper functionality for enhancement of a <code>Label<\/code> with common label functionality.","isRequired":{"!description":"Returns <code>true<\/code> when the given control is required (property 'required') or one of its referencing labels, <code>false<\/code> otherwise.","!type":"fn(oElement: sap.ui.core.Element) -> Boolean","!category":"function","!static":"true"},"!category":"namespace","enrich":{"!description":"This function should be called on a label control to enrich its functionality.\n\n<b>Usage:<\/b> The function can be called with a control prototype: <code> sap.ui.core.LabelEnablement.enrich(my.Label.prototype); <\/code> Or the function can be called on instance level in the init function of a label control: <code> my.Label.prototype.init: function(){ sap.ui.core.LabelEnablement.enrich(this); } <\/code>\n\n<b>Preconditions:<\/b> The given control must implement the interface sap.ui.core.Label and have an association 'labelFor' with cardinality 0..1. This function extends existing API functions. Ensure not to override these extensions AFTER calling this function.\n\n<b>What does this function do?<\/b>\n\nA mechanism is added that ensures that a bidirectional reference between the label and its labeled control is established: The label references the labeled control via the HTML 'for' attribute (@see sap.ui.core.LabelEnablement#writeLabelForAttribute). If the labeled control supports the aria-labelledby attribute, a reference to the label is added automatically.\n\nIn addition an alternative to apply a 'for' reference without influencing the labelFor association of the API is applied (e.g. used by Form). For this purpose the functions setAlternativeLabelFor and getLabelForRendering are added.","!type":"fn(oControl: sap.ui.core.Control)","!category":"function","!static":"true"},"writeLabelForAttribute":{"!description":"Helper function for the <code>Label<\/code> control to render the HTML 'for' attribute. This function should be called at the desired location in the renderer code of the <code>Label<\/code> control.","!type":"fn(oRenderManager: sap.ui.core.RenderManager, oLabel: sap.ui.core.Label)","!category":"function","!static":"true"},"!module":"sap/ui/core/LabelEnablement","!helpDescription":"Helper functionality for enhancement of a <code>Label<\/code> with common label functionality."},"sap.ui.test.matchers.AggregationContainsPropertyEqual":{"setPropertyValue":{"!description":"Sets a new value for property {@link #getPropertyValue propertyValue}.\n\nThe value of the Property that is used for matching.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(oPropertyValue: Object) -> sap.ui.test.matchers.AggregationContainsPropertyEqual","!category":"function","parameters":{"oPropertyValue":"type: any, description: New value for property <code>propertyValue<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.test.matchers.AggregationContainsPropertyEqual with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getPropertyValue":{"!description":"Gets current value of property {@link #getPropertyValue propertyValue}.\n\nThe value of the Property that is used for matching.","!type":"fn() -> Object","!category":"function","!static":false},"!constructorDescription":"AggregationContainsPropertyEqual - checks if an aggregation contains at least one item that has a Property set to a certain value.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAggregationName aggregationName} : string<\/li>\n<li>{@link #getPropertyName propertyName} : string<\/li>\n<li>{@link #getPropertyValue propertyValue} : any<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.test.matchers.Matcher#constructor sap.ui.test.matchers.Matcher}\ncan be used as well.","!module":"sap/ui/test/matchers/AggregationContainsPropertyEqual","isMatching":{"!description":"Checks if the control has a filled aggregation with at least one control that have a property equaling propertyName/Value.","!type":"fn(oControl: sap.ui.core.Control) -> Boolean","!category":"function","parameters":{"oControl":"type: sap.ui.core.Control, description: the control that is checked by the matcher"},"!static":false},"setPropertyName":{"!description":"Sets a new value for property {@link #getPropertyName propertyName}.\n\nThe Name of the property that is used for matching.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sPropertyName: String) -> sap.ui.test.matchers.AggregationContainsPropertyEqual","!category":"function","parameters":{"sPropertyName":"type: string, description: New value for property <code>propertyName<\/code>"},"!static":false},"!description":"AggregationContainsPropertyEqual - checks if an aggregation contains at least one item that has a Property set to a certain value","getAggregationName":{"!description":"Gets current value of property {@link #getAggregationName aggregationName}.\n\nThe Name of the aggregation that is used for matching.","!type":"fn() -> String","!category":"function","!static":false},"getPropertyName":{"!description":"Gets current value of property {@link #getPropertyName propertyName}.\n\nThe Name of the property that is used for matching.","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","setAggregationName":{"!description":"Sets a new value for property {@link #getAggregationName aggregationName}.\n\nThe Name of the aggregation that is used for matching.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sAggregationName: String) -> sap.ui.test.matchers.AggregationContainsPropertyEqual","!category":"function","parameters":{"sAggregationName":"type: string, description: New value for property <code>aggregationName<\/code>"},"!static":false},"!helpDescription":"AggregationContainsPropertyEqual - checks if an aggregation contains at least one item that has a Property set to a certain value","!proto":"sap.ui.test.matchers.Matcher","getMetadata":{"!description":"Returns a metadata object for class sap.ui.test.matchers.AggregationContainsPropertyEqual.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"jQuery.sap.util.ResourceBundle":{"!description":"Contains locale-specific texts.\n\nIf you need a locale-specific text within your application, you can use the resource bundle to load the locale-specific file from the server and access the texts of it.\n\nUse {@link jQuery.sap.resources} to create an instance of jQuery.sap.util.ResourceBundle. There you have to specify the URL to the base .properties file of a bundle (.properties without any locale information, e.g. \"mybundle.properties\"), and optionally a locale. The locale is defined as a string of the language and an optional country code separated by underscore (e.g. \"en_GB\" or \"fr\"). If no locale is passed, the default locale is \"en\" if the SAPUI5 framework is not available. Otherwise the default locale is taken from the SAPUI5 configuration.\n\nWith the getText() method of the resource bundle, a locale-specific string value for a given key will be returned.\n\nWith the given locale, the ResourceBundle requests the locale-specific properties file (e.g. \"mybundle_fr_FR.properties\"). If no file is found for the requested locale or if the file does not contain a text for the given key, a sequence of fall back locales is tried one by one. First, if the locale contains a region information (fr_FR), then the locale without the region is tried (fr). If that also can't be found or doesn't contain the requested text, the English file is used (en - assuming that most development projects contain at least English texts). If that also fails, the file without locale (base URL of the bundle) is tried.\n\nIf none of the requested files can be found or none of them contains a text for the given key, then the key itself is returned as text.\n\nException: Fallback for \"zh_HK\" is \"zh_TW\" before zh.","!category":"static class","!module":"jquery.sap.resources"},"sap.ui.model.TreeBindingCompatibilityAdapter_obj":{"!type":"fn()","prototype":"sap.ui.model.TreeBindingCompatibilityAdapter"},"sap.ui.core.routing.Targets_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.routing.Targets with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oOptions: Object)","prototype":"sap.ui.core.routing.Targets"},"sap.ui.core.BusyIndicator":{"!description":"Provides methods to show or hide a waiting animation covering the whole page and blocking user interaction.","hide":{"!description":"Removes the BusyIndicator from the screen","!type":"fn()","!category":"function","!static":"true"},"detachClose":{"!description":"Unregisters a handler for the \"close\" event","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.BusyIndicator","!category":"function","!static":"true"},"detachOpen":{"!description":"Unregisters a handler for the \"open\" event","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.BusyIndicator","!category":"function","!static":"true"},"!category":"namespace","show":{"!description":"Displays the BusyIndicator and starts blocking all user input. This only happens after some delay and if after that delay the BusyIndicator.hide() has not yet been called in the meantime. There is a certain default value for the delay, but that one can be overridden.","!type":"fn(iDelay?: Number)","!category":"function","!static":"true"},"!module":"sap/ui/core/BusyIndicator","attachOpen":{"!description":"Registers a handler for the \"open\" event.","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.core.BusyIndicator","!category":"function","!static":"true"},"attachClose":{"!description":"Registers a handler for the \"close\" event","!type":"fn(fnFunction: fn(), oListener?: Object) -> sap.ui.core.BusyIndicator","!category":"function","!static":"true"},"!helpDescription":"Provides methods to show or hide a waiting animation covering the whole page and blocking user interaction."},"sap.ui.core.routing.Views":{"setView":{"!description":"Adds or overwrites a view in the cache of the Views instance. The viewName serves as a key for caching.\n\nIf the second parameter is set to null or undefined, the previous cache view under the same name isn't managed by the Views instance. The lifecycle (for example the destroy of the view) of the view instance should be maintained by additional code.","!type":"fn(sViewName: String, oView: sap.ui.core.mvc.View | null | undefined) -> sap.ui.core.routing.Views","!category":"function","parameters":{"oView":"type: sap.ui.core.mvc.View|null|undefined, description: the view instance","sViewName":"type: string, description: Name of the view, may differ from the actual viewName of the oView parameter provided, since you can retrieve this view per {@link #.getView}."},"!static":false},"fireCreated":{"!description":"Fire event created to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.core.routing.Views","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.routing.Views with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","attachCreated":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'created' event of this <code>sap.ui.core.routing.Views<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.routing.Views","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function."},"!static":false},"!constructorDescription":"Instantiates a view repository that creates and caches views. If it is destroyed, all the Views it created are destroyed.\nUsually you do not have to create instances of this class, it is used by the {@link sap.ui.core.routing.Router}.\nIf you are using {@link sap.ui.core.routing.Targets} without using a {@link sap.ui.core.UIComponent} you have to create an instance of this class.\nThey will create an instance on their own, or if they are used with a {@link sap.ui.core.UIComponent} they will share the same instance of Views.","getView":{"!description":"Returns a cached view, for a given name. If it does not exist yet, it will create the view with the provided options. If you provide a viewId, it will be prefixed with the viewId of the component.","!type":"fn(oOptions: Object) -> Promise","!category":"function","parameters":{"oOptions":"type: object, description: see {@link sap.ui.view} for the documentation. The viewId you pass into the options will be prefixed with the id of the component you pass into the constructor. So you can retrieve the view later by calling the {@link sap.ui.core.UIComponent#byId} function of the UIComponent."},"!static":false},"!module":"sap/ui/core/routing/Views","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.routing.Views.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"detachCreated":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'created' event of this <code>sap.ui.core.routing.Views<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.routing.Views","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"!proto":"sap.ui.base.EventProvider"},"sap.ui.test.matchers.AggregationContainsPropertyEqual_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.test.matchers.AggregationContainsPropertyEqual with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(mSettings: Object)","prototype":"sap.ui.test.matchers.AggregationContainsPropertyEqual"},"jQuery.sap.KeyCodes":{"NUMPAD_6":{"!type":"Number","!category":"enum"},"ARROW_RIGHT":{"!type":"Number","!category":"enum"},"NUMPAD_7":{"!type":"Number","!category":"enum"},"NUMPAD_8":{"!type":"Number","!category":"enum"},"NUMPAD_9":{"!type":"Number","!category":"enum"},"NUMPAD_2":{"!type":"Number","!category":"enum"},"NUMPAD_3":{"!type":"Number","!category":"enum"},"NUMPAD_4":{"!type":"Number","!category":"enum"},"NUMPAD_5":{"!type":"Number","!category":"enum"},"!module":"jquery.sap.keycodes","EQUALS":{"!type":"Number","!category":"enum"},"BREAK":{"!type":"Number","!category":"enum"},"PAGE_UP":{"!type":"Number","!category":"enum"},"F11":{"!type":"Number","!category":"enum"},"F12":{"!type":"Number","!category":"enum"},"OPEN_BRACKET":{"!type":"Number","!category":"enum"},"F10":{"!type":"Number","!category":"enum"},"BACKSPACE":{"!type":"Number","!category":"enum"},"ESCAPE":{"!type":"Number","!category":"enum"},"INSERT":{"!type":"Number","!category":"enum"},"F8":{"!type":"Number","!category":"enum"},"DIGIT_0":{"!type":"Number","!category":"enum"},"NUMPAD_ASTERISK":{"!type":"Number","!category":"enum"},"F9":{"!type":"Number","!category":"enum"},"DIGIT_1":{"!type":"Number","!category":"enum"},"F6":{"!type":"Number","!category":"enum"},"F7":{"!type":"Number","!category":"enum"},"NUMPAD_MINUS":{"!type":"Number","!category":"enum"},"F1":{"!type":"Number","!category":"enum"},"F5":{"!type":"Number","!category":"enum"},"F4":{"!type":"Number","!category":"enum"},"F3":{"!type":"Number","!category":"enum"},"F2":{"!type":"Number","!category":"enum"},"D":{"!type":"Number","!category":"enum"},"E":{"!type":"Number","!category":"enum"},"F":{"!type":"Number","!category":"enum"},"G":{"!type":"Number","!category":"enum"},"A":{"!type":"Number","!category":"enum"},"NUMPAD_PLUS":{"!type":"Number","!category":"enum"},"B":{"!type":"Number","!category":"enum"},"CONTROL":{"!type":"Number","!category":"enum"},"C":{"!type":"Number","!category":"enum"},"L":{"!type":"Number","!category":"enum"},"M":{"!type":"Number","!category":"enum"},"N":{"!type":"Number","!category":"enum"},"O":{"!type":"Number","!category":"enum"},"H":{"!type":"Number","!category":"enum"},"I":{"!type":"Number","!category":"enum"},"J":{"!type":"Number","!category":"enum"},"K":{"!type":"Number","!category":"enum"},"U":{"!type":"Number","!category":"enum"},"T":{"!type":"Number","!category":"enum"},"W":{"!type":"Number","!category":"enum"},"V":{"!type":"Number","!category":"enum"},"Q":{"!type":"Number","!category":"enum"},"SEMICOLON":{"!type":"Number","!category":"enum"},"DELETE":{"!type":"Number","!category":"enum"},"P":{"!type":"Number","!category":"enum"},"S":{"!type":"Number","!category":"enum"},"R":{"!type":"Number","!category":"enum"},"!category":"static class","Y":{"!type":"Number","!category":"enum"},"X":{"!type":"Number","!category":"enum"},"Z":{"!type":"Number","!category":"enum"},"NUMPAD_COMMA":{"!type":"Number","!category":"enum"},"ARROW_LEFT":{"!type":"Number","!category":"enum"},"!description":"Enumeration of key codes.","END":{"!type":"Number","!category":"enum"},"NUMPAD_1":{"!type":"Number","!category":"enum"},"NUMPAD_0":{"!type":"Number","!category":"enum"},"BACKSLASH":{"!type":"Number","!category":"enum"},"SCROLL_LOCK":{"!type":"Number","!category":"enum"},"CAPS_LOCK":{"!type":"Number","!category":"enum"},"ARROW_DOWN":{"!type":"Number","!category":"enum"},"SLEEP":{"!type":"Number","!category":"enum"},"SHIFT":{"!type":"Number","!category":"enum"},"SPACE":{"!type":"Number","!category":"enum"},"NUMPAD_SLASH":{"!type":"Number","!category":"enum"},"NUM_LOCK":{"!type":"Number","!category":"enum"},"TURN_OFF":{"!type":"Number","!category":"enum"},"SINGLE_QUOTE":{"!type":"Number","!category":"enum"},"SLASH":{"!type":"Number","!category":"enum"},"ALT":{"!type":"Number","!category":"enum"},"COMMA":{"!type":"Number","!category":"enum"},"PIPE":{"!type":"Number","!category":"enum"},"PLUS":{"!type":"Number","!category":"enum"},"CONTEXT_MENU":{"!type":"Number","!category":"enum"},"DOT":{"!type":"Number","!category":"enum"},"ARROW_UP":{"!type":"Number","!category":"enum"},"TAB":{"!type":"Number","!category":"enum"},"MINUS":{"!type":"Number","!category":"enum"},"DIGIT_2":{"!type":"Number","!category":"enum"},"DIGIT_3":{"!type":"Number","!category":"enum"},"PAGE_DOWN":{"!type":"Number","!category":"enum"},"DIGIT_4":{"!type":"Number","!category":"enum"},"DIGIT_5":{"!type":"Number","!category":"enum"},"PRINT":{"!type":"Number","!category":"enum"},"DIGIT_6":{"!type":"Number","!category":"enum"},"DIGIT_7":{"!type":"Number","!category":"enum"},"DIGIT_8":{"!type":"Number","!category":"enum"},"DIGIT_9":{"!type":"Number","!category":"enum"},"GREAT_ACCENT":{"!type":"Number","!category":"enum"},"ENTER":{"!type":"Number","!category":"enum"},"WINDOWS":{"!type":"Number","!category":"enum"},"HOME":{"!type":"Number","!category":"enum"}},"sap.ui.core.OpenState":{"OPEN":{"!description":"Open and currently not changing states.","!type":"String","!category":"enum"},"CLOSED":{"!description":"Closed and currently not changing states.","!type":"String","!category":"enum"},"!description":"Defines the different possible states of an element that can be open or closed and does not only toggle between these states, but also spends some time in between (e.g. because of an animation).","!category":"static class","OPENING":{"!description":"Already left the CLOSED state, is not OPEN yet, but in the process of getting OPEN.","!type":"String","!category":"enum"},"!module":"sap/ui/core/library","CLOSING":{"!description":"Still open, but in the process of going to the CLOSED state.","!type":"String","!category":"enum"}},"sap.ui.model.odata.v2.ODataTreeBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.v2.ODataTreeBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.TreeBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext: sap.ui.model.Context, aApplicationFilters?: [[object Object]], mParameters?: Object, aSorters?: [[object Object]])","prototype":"sap.ui.model.odata.v2.ODataTreeBinding"},"sap.ui.core.routing.Router":{"stop":{"!description":"Stops to listen to the hashChange of the browser.<\/br> If you want the router to start again, call initialize again.","!type":"fn() -> sap.ui.core.routing.Router","!category":"function","!static":false},"setView":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28 use {@link #getViews} instead.<br>Adds or overwrites a view in the viewcache of the router, the viewname serves as a key","!type":"fn(sViewName: String, oView: sap.ui.core.mvc.View) -> sap.ui.core.routing.Router","!category":"function","parameters":{"oView":"type: sap.ui.core.mvc.View, description: the view instance","sViewName":"type: string, description: Name of the view"},"!static":false},"attachBypassed":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'bypassed' event of this <code>sap.ui.core.routing.Router<\/code>.<br/> The event will get fired, if none of the routes of the routes is matching. <br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.routing.Router","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, this router is used."},"!static":false},"attachTitleChanged":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'titleChanged' event of this <code>sap.ui.core.routing.Router<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.routing.Router","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function."},"!static":false},"detachBeforeRouteMatched":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'beforeRouteMatched' event of this <code>sap.ui.core.routing.Router<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.routing.Router","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"addRoute":{"!description":"Adds a route to the router","!type":"fn(oConfig: Object, oParent: sap.ui.core.routing.Route)","!category":"function","parameters":{"oParent":"type: sap.ui.core.routing.Route, description: The parent route - if a parent route is given, the routeMatched event of this route will also trigger the route matched of the parent and it will also create the view of the parent (if provided).","oConfig":"type: object, description: configuration object for the route @see sap.ui.core.routing.Route#constructor"},"!static":false},"!module":"sap/ui/core/routing/Router","destroy":{"!description":"Removes the router from the hash changer @see sap.ui.core.routing.HashChanger","!type":"fn() -> sap.ui.core.routing.Router","!category":"function","!static":false},"detachBypassed":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'bypassed' event of this <code>sap.ui.core.routing.Router<\/code>.<br/> The event will get fired, if none of the routes of the routes is matching. <br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.routing.Router","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"fireBypassed":{"!description":"Fire event bypassed to attached listeners. The event will get fired, if none of the routes of the routes is matching. <br/>","!type":"fn(mArguments?: Object) -> sap.ui.core.routing.Router","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"!category":"class","detachRoutePatternMatched":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'routePatternMatched' event of this <code>sap.ui.core.routing.Router<\/code>.<br/> This event is similar to route matched. But it will only fire for the route that has a matching pattern, not for its parent Routes <br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.routing.Router","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"navTo":{"!description":"Navigates to a specific route defining a set of parameters. The Parameters will be URI encoded - the characters ; , / ? : @ & = + $ are reserved and will not be encoded. If you want to use special characters in your oParameters, you have to encode them (encodeURIComponent).\n\nIF the given route name can't be found, an error message is logged to the console and the hash will be changed to empty string.","!type":"fn(sName: String, oParameters?: Object, bReplace?: Boolean) -> sap.ui.core.routing.Router","!category":"function","parameters":{"oParameters":"type: object, description: Parameters for the route","bReplace":"type: boolean, description: If set to <code>true<\/code>, the hash is replaced, and there will be no entry in the browser history, if set to <code>false<\/code>, the hash is set and the entry is stored in the browser history.","sName":"type: string, description: Name of the route"},"!static":false},"fireRoutePatternMatched":{"!description":"Fire event routePatternMatched to attached listeners. This event is similar to route matched. But it will only fire for the route that has a matching pattern, not for its parent Routes <br/>","!type":"fn(mArguments?: Object) -> sap.ui.core.routing.Router","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"getTitleHistory":{"!description":"Returns the title history.\n\nHistory entry example: <code> { title: \"TITLE\", // The displayed title hash: \"HASH\" // The url hash isHome: \"true/false\" // The app home indicator } <\/code>","!type":"fn() -> Array","!category":"function","!static":false},"parse":{"!description":"Will trigger routing events + place targets for routes matching the string","!type":"fn(sNewHash: String)","!category":"function","parameters":{"sNewHash":"type: string, description: a new hash"},"!static":false},"detachRouteMatched":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'routeMatched' event of this <code>sap.ui.core.routing.Router<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.routing.Router","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"initialize":{"!description":"Attaches the router to the hash changer @see sap.ui.core.routing.HashChanger","!type":"fn(bIgnoreInitialHash?: Boolean) -> sap.ui.core.routing.Router","!category":"function","parameters":{"bIgnoreInitialHash":"type: boolean, description: @since 1.48.0 whether the current url hash shouldn't be parsed after the router is initialized"},"!static":false},"attachBeforeRouteMatched":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'beforeRouteMatched' event of this <code>sap.ui.core.routing.Router<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.routing.Router","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, this router is used."},"!static":false},"getViews":{"!description":"Returns the views instance created by the router","!type":"fn() -> sap.ui.core.routing.Views","!category":"function","!static":false},"fireRouteMatched":{"!description":"Fire event routeMatched to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.core.routing.Router","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.routing.Router with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Instantiates a SAPUI5 Router","getView":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28.1 use {@link #getViews} instead.<br>Returns a cached view for a given name or creates it if it does not yet exists","!type":"fn(sViewName: String, sViewType: String, sViewId: String) -> sap.ui.core.mvc.View","!category":"function","parameters":{"sViewId":"type: string, description: Optional view id","sViewType":"type: string, description: Type of the view","sViewName":"type: string, description: Name of the view"},"!static":false},"register":{"!description":"Registers the router to access it from another context. Use sap.ui.routing.Router.getRouter() to receive the instance","!type":"fn(sName: String)","!category":"function","parameters":{"sName":"type: string, description: Name of the router"},"!static":false},"attachRouteMatched":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'routeMatched' event of this <code>sap.ui.core.routing.Router<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.routing.Router","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, this router is used."},"!static":false},"fireViewCreated":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28 use {@link #getViews} instead.<br>Fire event viewCreated to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.core.routing.Router","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"getTargets":{"!description":"Returns the instance of Targets, if you pass a targets config to the router","!type":"fn() -> sap.ui.core.routing.Targets | undefined","!category":"function","!static":false},"detachTitleChanged":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'titleChanged' event of this <code>sap.ui.core.routing.Router<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.routing.Router","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"attachRoutePatternMatched":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'routePatternMatched' event of this <code>sap.ui.core.routing.Router<\/code>.<br/> This event is similar to route matched. But it will only fire for the route that has a matching pattern, not for its parent Routes <br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.routing.Router","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, this router is used."},"!static":false},"getRouter":{"!description":"Get a registered router","!type":"fn(sName: String) -> sap.ui.core.routing.Router","!category":"function","parameters":{"sName":"type: string, description: Name of the router"},"!static":true},"fireBeforeRouteMatched":{"!description":"Fire event beforeRouteMatched to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.core.routing.Router","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"getURL":{"!description":"Returns the URL for the route and replaces the placeholders with the values in oParameters","!type":"fn(sName: String, oParameters?: Object) -> String","!category":"function","parameters":{"oParameters":"type: object, description: Parameters for the route","sName":"type: string, description: Name of the route"},"!static":false},"attachViewCreated":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28 use {@link #getViews} instead.<br>Attach event-handler <code>fnFunction<\/code> to the 'viewCreated' event of this <code>sap.ui.core.routing.Router<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.routing.Router","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, this router is used."},"!static":false},"detachViewCreated":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.28 use {@link #getViews} instead.<br>Detach event-handler <code>fnFunction<\/code> from the 'viewCreated' event of this <code>sap.ui.core.routing.Router<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.routing.Router","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"getRoute":{"!description":"Returns the Route with a name, if no route is found undefined is returned","!type":"fn(sName: String) -> sap.ui.core.routing.Route","!category":"function","parameters":{"sName":"type: string, description: Name of the route"},"!static":false},"!proto":"sap.ui.base.EventProvider","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.routing.Router.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.Configuration":{"getNumberSymbol":{"!description":"Returns the currently set number symbol of the given type or undefined if no symbol has been defined.","!type":"fn()","!category":"function","!static":false},"getLegacyTimeFormat":{"!description":"Returns the currently set legacy ABAP time format (its id) or undefined if none has been set.","!type":"fn()","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.Configuration.FormatSettings with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setLegacyNumberFormat":{"!description":"Allows to specify one of the legacy ABAP number format.\n\nThis method will modify the 'group' and 'decimal' symbols. When called with a null or undefined format id, any previously applied format will be removed.\n\nAfter changing the legacy number format, the framework tries to update localization specific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage} for details and restrictions.","!type":"fn(sFormatId: String) -> sap.ui.core.Configuration.FormatSettings","!category":"function","parameters":{"sFormatId":"type: string, description: id of the ABAP number format set (one of ' ','X','Y')"},"!static":false},"setLegacyDateFormat":{"!description":"Allows to specify one of the legacy ABAP date formats.\n\nThis method modifies the date patterns for 'short' and 'medium' style with the corresponding ABAP format. When called with a null or undefined format id, any previously applied format will be removed.\n\nAfter changing the legacy date format, the framework tries to update localization specific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage} for details and restrictions.\n\nNote: Iranian date format 'C' is NOT yet supported by UI5. It's accepted by this method for convenience (user settings from ABAP system can be used without filtering), but it's ignored. Instead, the formats from the current format locale will be used and a warning will be logged.","!type":"fn(sFormatId: String) -> sap.ui.core.Configuration.FormatSettings","!category":"function","parameters":{"sFormatId":"type: string, description: id of the ABAP data format (one of '1','2','3','4','5','6','7','8','9','A','B','C')"},"!static":false},"!constructorDescription":"Creates a new Configuration object.","!module":"sap/ui/core/Configuration","getFormatLocale":{"!description":"Returns the locale to be used for formatting.\n\nIf no such locale has been defined, this method falls back to the language, see {@link sap.ui.core.Configuration#getLanguage Configuration.getLanguage()}.\n\nIf any user preferences for date, time or number formatting have been set, and if no format locale has been specified, then a special private use subtag is added to the locale, indicating to the framework that these user preferences should be applied.","!type":"fn() -> sap.ui.core.Locale","!category":"function","!static":false},"getLegacyDateFormat":{"!description":"Returns the currently set legacy ABAP date format (its id) or undefined if none has been set.","!type":"fn()","!category":"function","!static":false},"getLegacyNumberFormat":{"!description":"Returns the currently set legacy ABAP number format (its id) or undefined if none has been set.","!type":"fn()","!category":"function","!static":false},"setLegacyTimeFormat":{"!description":"Allows to specify one of the legacy ABAP time formats.\n\nThis method sets the time patterns for 'short' and 'medium' style to the corresponding ABAP formats and sets the day period texts to \"AM\"/\"PM\" or \"am\"/\"pm\" respectively. When called with a null or undefined format id, any previously applied format will be removed.\n\nAfter changing the legacy time format, the framework tries to update localization specific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage} for details and restrictions.","!type":"fn(sFormatId: String) -> sap.ui.core.Configuration.FormatSettings","!category":"function","parameters":{"sFormatId":"type: string, description: id of the ABAP time format (one of '0','1','2','3','4')"},"!static":false},"!description":"Collects and stores the configuration of the current environment.\n\nThe Configuration is initialized once when the {@link sap.ui.core.Core} is created. There are different ways to set the environment configuration (in ascending priority): <ol> <li>System defined defaults<\/li> <li>Server wide defaults, read from /sap-ui-config.json<\/li> <li>Properties of the global configuration object window[\"sap-ui-config\"]<\/li> <li>A configuration string in the data-sap-ui-config attribute of the bootstrap tag<\/li> <li>Individual data-sap-ui-<i>xyz<\/i> attributes of the bootstrap tag<\/li> <li>Using URL parameters<\/li> <li>Setters in this Configuration object (only for some parameters)<\/li> <\/ol>\n\nThat is, attributes of the DOM reference override the system defaults, URL parameters override the DOM attributes (where empty URL parameters set the parameter back to its system default). Calling setters at runtime will override any previous settings calculated during object creation.\n\nThe naming convention for parameters is: <ul> <li>in the URL : sap-ui-<i>PARAMETER-NAME<\/i>=\"value\"<\/li> <li>in the DOM : data-sap-ui-<i>PARAMETER-NAME<\/i>=\"value\"<\/li> <\/ul> where <i>PARAMETER-NAME<\/i> is the name of the parameter in lower case.\n\nValues of boolean parameters are case insensitive where \"true\" and \"x\" are interpreted as true.","setLegacyDateCalendarCustomizing":{"!description":"Allows to specify the customizing data for Islamic calendar support","!type":"fn(aMappings: [[object Object]]) -> sap.ui.core.Configuration.FormatSettings","!category":"function","parameters":{"aMappings":"type: [object Object][], description: contains the customizing data for the support of Islamic calendar."},"!static":false},"getDatePattern":{"!description":"Returns the currently set date pattern or undefined if no pattern has been defined.","!type":"fn()","!category":"function","!static":false},"setNumberSymbol":{"!description":"Defines the string to be used for the given number symbol.\n\nCalling this method with a null or undefined symbol removes a previously set symbol string. Note that an empty string is explicitly allowed.\n\nIf a symbol is defined, it will be preferred over symbols derived from the current locale.\n\nSee class {@link sap.ui.core.format.NumberFormat} for details about the symbols.\n\nAfter changing the number symbol, the framework tries to update localization specific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage} for details and restrictions.","!type":"fn(sStyle: String, sSymbol: String) -> sap.ui.core.Configuration.FormatSettings","!category":"function","parameters":{"sSymbol":"type: string, description: will be used to represent the given symbol type","sStyle":"type: string, description: must be one of decimal, group, plusSign, minusSign."},"!static":false},"!category":"class","setTimePattern":{"!description":"Defines the preferred format pattern for the given time format style.\n\nCalling this method with a null or undefined pattern removes a previously set pattern.\n\nIf a pattern is defined, it will be preferred over patterns derived from the current locale.\n\nSee class {@link sap.ui.core.format.DateFormat} for details about the pattern syntax.\n\nAfter changing the time pattern, the framework tries to update localization specific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage} for details and restrictions.","!type":"fn(sStyle: String, sPattern: String) -> sap.ui.core.Configuration.FormatSettings","!category":"function","parameters":{"sPattern":"type: string, description: the format pattern to be used in LDML syntax.","sStyle":"type: string, description: must be one of short, medium, long or full."},"!static":false},"getLegacyDateCalendarCustomizing":{"!description":"Returns the currently set customizing data for Islamic calendar support","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getTimePattern":{"!description":"Returns the currently set time pattern or undefined if no pattern has been defined.","!type":"fn()","!category":"function","!static":false},"setDatePattern":{"!description":"Defines the preferred format pattern for the given date format style.\n\nCalling this method with a null or undefined pattern removes a previously set pattern.\n\nIf a pattern is defined, it will be preferred over patterns derived from the current locale.\n\nSee class {@link sap.ui.core.format.DateFormat} for details about the pattern syntax.\n\nAfter changing the date pattern, the framework tries to update localization specific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage} for details and restrictions.","!type":"fn(sStyle: String, sPattern: String) -> sap.ui.core.Configuration.FormatSettings","!category":"function","parameters":{"sPattern":"type: string, description: the format pattern to be used in LDML syntax.","sStyle":"type: string, description: must be one of short, medium, long or full."},"!static":false},"setFirstDayOfWeek":{"!description":"Defines the day used as the first day of the week.\n\nThe day is set as an integer value between 0 (Sunday) and 6 (Saturday). Calling this method with a null or undefined symbol removes a previously set value.\n\nIf a value is defined, it will be preferred over values derived from the current locale.\n\nUsually in the US the week starts on Sunday while in most European countries on Monday. There are special cases where you want to have the first day of week set independent of the user locale.\n\nAfter changing the first day of week, the framework tries to update localization specific parts of the UI. See the documentation of {@link sap.ui.core.Configuration#setLanguage} for details and restrictions.","!type":"fn(iValue: Number) -> sap.ui.core.Configuration.FormatSettings","!category":"function","parameters":{"iValue":"type: int, description: must be an integer value between 0 and 6"},"!static":false},"!helpDescription":"Collects and stores the configuration of the current environment.\n\nThe Configuration is initialized once when the {@link sap.ui.core.Core} is created. There are different ways to set the environment configuration (in ascending priority): <ol> <li>System defined defaults<\/li> <li>Server wide defaults, read from /sap-ui-config.json<\/li> <li>Properties of the global configuration object window[\"sap-ui-config\"]<\/li> <li>A configuration string in the data-sap-ui-config attribute of the bootstrap tag<\/li> <li>Individual data-sap-ui-<i>xyz<\/i> attributes of the bootstrap tag<\/li> <li>Using URL parameters<\/li> <li>Setters in this Configuration object (only for some parameters)<\/li> <\/ol>\n\nThat is, attributes of the DOM reference override the system defaults, URL parameters override the DOM attributes (where empty URL parameters set the parameter back to its system default). Calling setters at runtime will override any previous settings calculated during object creation.\n\nThe naming convention for parameters is: <ul> <li>in the URL : sap-ui-<i>PARAMETER-NAME<\/i>=\"value\"<\/li> <li>in the DOM : data-sap-ui-<i>PARAMETER-NAME<\/i>=\"value\"<\/li> <\/ul> where <i>PARAMETER-NAME<\/i> is the name of the parameter in lower case.\n\nValues of boolean parameters are case insensitive where \"true\" and \"x\" are interpreted as true.","!proto":"sap.ui.base.Object","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.Configuration.FormatSettings.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.model.analytics.odata4analytics":{"QueryResult":"sap.ui.model.analytics.odata4analytics.QueryResult_obj","Model":"sap.ui.model.analytics.odata4analytics.Model_obj","SortOrder":"sap.ui.model.analytics.odata4analytics.SortOrder","Parameterization":"sap.ui.model.analytics.odata4analytics.Parameterization_obj","RecursiveHierarchy":"sap.ui.model.analytics.odata4analytics.RecursiveHierarchy_obj","Measure":"sap.ui.model.analytics.odata4analytics.Measure_obj","DimensionAttribute":"sap.ui.model.analytics.odata4analytics.DimensionAttribute_obj","!module":"sap/ui/model/analytics/odata4analytics","SortExpression":"sap.ui.model.analytics.odata4analytics.SortExpression_obj","ParameterValueSetRequest":"sap.ui.model.analytics.odata4analytics.ParameterValueSetRequest_obj","!category":"namespace","FilterExpression":"sap.ui.model.analytics.odata4analytics.FilterExpression_obj","ReferenceByURI":"sap.ui.model.analytics.odata4analytics.Model.ReferenceByURI_obj","Parameter":"sap.ui.model.analytics.odata4analytics.Parameter_obj","includeDimensionTextAttributes":{"!description":"Specify which components of the dimension shall be included in the value set.","!type":"fn(bIncludeText: Boolean, bIncludeAttributes: Boolean)","!category":"function","!static":"true"},"DimensionMemberSetRequest":"sap.ui.model.analytics.odata4analytics.DimensionMemberSetRequest_obj","QueryResultRequest":"sap.ui.model.analytics.odata4analytics.QueryResultRequest_obj","ParameterizationRequest":"sap.ui.model.analytics.odata4analytics.ParameterizationRequest_obj","EntitySet":"sap.ui.model.analytics.odata4analytics.EntitySet_obj","Dimension":"sap.ui.model.analytics.odata4analytics.Dimension_obj","ReferenceWithWorkaround":"sap.ui.model.analytics.odata4analytics.Model.ReferenceWithWorkaround_obj","!description":"<strong style=\"color: red;\">Experimental! <\/strong>","ReferenceByModel":"sap.ui.model.analytics.odata4analytics.Model.ReferenceByModel_obj","EntityType":"sap.ui.model.analytics.odata4analytics.EntityType_obj","!helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>"},"jQuery.Event_obj":{"!type":"fn()","prototype":"jQuery.Event"},"sap.ui.model.analytics.odata4analytics.RecursiveHierarchy":{"!constructorDescription":"Create a representation of a recursive hierarchy defined on one multiple\nproperties in an OData entity type query. Do not create your own instances.","!module":"sap/ui/model/analytics/odata4analytics","getNodeValueProperty":{"!description":"Get the property holding the value that is structurally organized by the hierarchy","!type":"fn() -> Object","!category":"function","!static":false},"isLeveledHierarchy":{"!description":"Get indicator if this is a leveled hierarchy","!type":"fn() -> Boolean","!category":"function","!static":false},"getNodeLevelProperty":{"!description":"Get the property holding the level of the hierarchy node","!type":"fn() -> Object","!category":"function","!static":false},"!description":"Representation of a recursive hierarchy.","getNodeExternalKeyProperty":{"!description":"Get the property holding the node external key of the hierarchy node","!type":"fn() -> Object","!category":"function","!static":false},"getParentNodeIDProperty":{"!description":"Get the property holding the parent node ID of the hierarchy node","!type":"fn() -> Object","!category":"function","!static":false},"!category":"class","isRecursiveHierarchy":{"!description":"Get indicator if this is a recursive hierarchy","!type":"fn() -> Boolean","!category":"function","!static":false},"getNodeIDProperty":{"!description":"Get the property holding the node ID of the hierarchy node","!type":"fn() -> Object","!category":"function","!static":false},"!helpDescription":"Representation of a recursive hierarchy.","!proto":"sap.ui.base.Object"},"sap.ui.core.CSSColor":{"!description":"A string type that represents CSS color values.\n\nAllowed values are CSS hex colors like \"#666666\" or \"#fff\", RGB/HSL values like \"rgb(0,0,0)\" or \"hsla(50%,10%,30%,0.5)\" as well as CSS color names like \"green\" and \"darkblue\" and special values like \"inherit\" and \"transparent\".\n\nThe empty string is also allowed and has the same effect as setting no color.","!category":"namespace","!module":"sap/ui/core/library","!helpDescription":"A string type that represents CSS color values.\n\nAllowed values are CSS hex colors like \"#666666\" or \"#fff\", RGB/HSL values like \"rgb(0,0,0)\" or \"hsla(50%,10%,30%,0.5)\" as well as CSS color names like \"green\" and \"darkblue\" and special values like \"inherit\" and \"transparent\".\n\nThe empty string is also allowed and has the same effect as setting no color."},"sap.ui.core.Wrapping":{"Off":{"!description":"Wrapping shall not be allowed.","!type":"String","!category":"enum"},"!description":"Configuration options for text wrapping.","Hard":{"!description":"Inserts actual line breaks in the text at the wrap point.","!type":"String","!category":"enum"},"!category":"static class","Soft":{"!description":"The text is actually on the same line but displayed within several lines.","!type":"String","!category":"enum"},"None":{"!description":"The standard browser behavior is considered for wrapping.","!type":"String","!category":"enum"},"!module":"sap/ui/core/library"},"sap.ui.core.Percentage":{"!description":"A string type that represents a percentage value.","!category":"namespace","!module":"sap/ui/core/library","!helpDescription":"A string type that represents a percentage value."},"sap.ui.core.TooltipBase":{"getOpenDuration":{"!description":"Gets current value of property {@link #getOpenDuration openDuration}.\n\nOptional. Open Duration in milliseconds.\n\nDefault value is <code>200<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"setMyPosition":{"!description":"Sets a new value for property {@link #getMyPosition myPosition}.\n\nOptional. My position defines which position on the extended tooltip being positioned to align with the target control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>begin top<\/code>.","!type":"fn(sMyPosition: sap.ui.core.Dock) -> sap.ui.core.TooltipBase","!category":"function","parameters":{"sMyPosition":"type: sap.ui.core.Dock, description: New value for property <code>myPosition<\/code>"},"!static":false},"setCloseDelay":{"!description":"Sets a new value for property {@link #getCloseDelay closeDelay}.\n\nClosing delay of the tooltip in milliseconds\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100<\/code>.","!type":"fn(iCloseDelay: Number) -> sap.ui.core.TooltipBase","!category":"function","parameters":{"iCloseDelay":"type: int, description: New value for property <code>closeDelay<\/code>"},"!static":false},"getMyPosition":{"!description":"Gets current value of property {@link #getMyPosition myPosition}.\n\nOptional. My position defines which position on the extended tooltip being positioned to align with the target control.\n\nDefault value is <code>begin top<\/code>.","!type":"fn() -> sap.ui.core.Dock","!category":"function","!static":false},"setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nThe text that is shown in the tooltip that extends the TooltipBase class, for example in RichTooltip.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!type":"fn(sText: String) -> sap.ui.core.TooltipBase","!category":"function","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"},"!static":false},"!module":"sap/ui/core/TooltipBase","setAtPosition":{"!description":"Sets a new value for property {@link #getAtPosition atPosition}.\n\nOptional. At position defines which position on the target control to align the positioned tooltip.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>begin bottom<\/code>.","!type":"fn(sAtPosition: sap.ui.core.Dock) -> sap.ui.core.TooltipBase","!category":"function","parameters":{"sAtPosition":"type: sap.ui.core.Dock, description: New value for property <code>atPosition<\/code>"},"!static":false},"setCloseDuration":{"!description":"Sets a new value for property {@link #getCloseDuration closeDuration}.\n\nOptional. Close Duration in milliseconds.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>200<\/code>.","!type":"fn(iCloseDuration: Number) -> sap.ui.core.TooltipBase","!category":"function","parameters":{"iCloseDuration":"type: int, description: New value for property <code>closeDuration<\/code>"},"!static":false},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nThe text that is shown in the tooltip that extends the TooltipBase class, for example in RichTooltip.\n\nDefault value is <code>empty string<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"getCollision":{"!description":"Gets current value of property {@link #getCollision collision}.\n\nOptional. Collision - when the positioned element overflows the window in some direction, move it to an alternative position.\n\nDefault value is <code>flip<\/code>.","!type":"fn() -> sap.ui.core.Collision","!category":"function","!static":false},"setCollision":{"!description":"Sets a new value for property {@link #getCollision collision}.\n\nOptional. Collision - when the positioned element overflows the window in some direction, move it to an alternative position.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>flip<\/code>.","!type":"fn(sCollision: sap.ui.core.Collision) -> sap.ui.core.TooltipBase","!category":"function","parameters":{"sCollision":"type: sap.ui.core.Collision, description: New value for property <code>collision<\/code>"},"!static":false},"!category":"class","getOpenDelay":{"!description":"Gets current value of property {@link #getOpenDelay openDelay}.\n\nOpening delay of the tooltip in milliseconds\n\nDefault value is <code>500<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.TooltipBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new TooltipBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getOpenDuration openDuration} : int (default: 200)<\/li>\n<li>{@link #getCloseDuration closeDuration} : int (default: 200)<\/li>\n<li>{@link #getMyPosition myPosition} : sap.ui.core.Dock (default: begin top)<\/li>\n<li>{@link #getAtPosition atPosition} : sap.ui.core.Dock (default: begin bottom)<\/li>\n<li>{@link #getOffset offset} : string (default: 10 3)<\/li>\n<li>{@link #getCollision collision} : sap.ui.core.Collision (default: flip)<\/li>\n<li>{@link #getOpenDelay openDelay} : int (default: 500)<\/li>\n<li>{@link #getCloseDelay closeDelay} : int (default: 100)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:closed closed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","fireClosed":{"!description":"Fires event {@link #event:closed closed} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.core.TooltipBase","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"setOpenDuration":{"!description":"Sets a new value for property {@link #getOpenDuration openDuration}.\n\nOptional. Open Duration in milliseconds.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>200<\/code>.","!type":"fn(iOpenDuration: Number) -> sap.ui.core.TooltipBase","!category":"function","parameters":{"iOpenDuration":"type: int, description: New value for property <code>openDuration<\/code>"},"!static":false},"attachClosed":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:closed closed} event of this <code>sap.ui.core.TooltipBase<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.core.TooltipBase<\/code> itself.\n\nThis event is fired when the Tooltip has been closed","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.TooltipBase","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.core.TooltipBase<\/code> itself"},"!static":false},"setOpenDelay":{"!description":"Sets a new value for property {@link #getOpenDelay openDelay}.\n\nOpening delay of the tooltip in milliseconds\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>500<\/code>.","!type":"fn(iOpenDelay: Number) -> sap.ui.core.TooltipBase","!category":"function","parameters":{"iOpenDelay":"type: int, description: New value for property <code>openDelay<\/code>"},"!static":false},"setOffset":{"!description":"Sets a new value for property {@link #getOffset offset}.\n\nOptional. Offset adds these left-top values to the calculated position. Example: \"10 3\".\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>10 3<\/code>.","!type":"fn(sOffset: String) -> sap.ui.core.TooltipBase","!category":"function","parameters":{"sOffset":"type: string, description: New value for property <code>offset<\/code>"},"!static":false},"!description":"Abstract class that can be extended in order to implement any extended tooltip. For example, RichTooltip Control is based on it. It provides the opening/closing behavior and the main \"text\" property.","getCloseDelay":{"!description":"Gets current value of property {@link #getCloseDelay closeDelay}.\n\nClosing delay of the tooltip in milliseconds\n\nDefault value is <code>100<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"getOffset":{"!description":"Gets current value of property {@link #getOffset offset}.\n\nOptional. Offset adds these left-top values to the calculated position. Example: \"10 3\".\n\nDefault value is <code>10 3<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"getAtPosition":{"!description":"Gets current value of property {@link #getAtPosition atPosition}.\n\nOptional. At position defines which position on the target control to align the positioned tooltip.\n\nDefault value is <code>begin bottom<\/code>.","!type":"fn() -> sap.ui.core.Dock","!category":"function","!static":false},"detachClosed":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:closed closed} event of this <code>sap.ui.core.TooltipBase<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.TooltipBase","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getCloseDuration":{"!description":"Gets current value of property {@link #getCloseDuration closeDuration}.\n\nOptional. Close Duration in milliseconds.\n\nDefault value is <code>200<\/code>.","!type":"fn() -> Number","!category":"function","!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"Abstract class that can be extended in order to implement any extended tooltip. For example, RichTooltip Control is based on it. It provides the opening/closing behavior and the main \"text\" property.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.TooltipBase.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.Configuration.FormatSettings_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Configuration.FormatSettings with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.core.Configuration"},"sap.ui.core.mvc.View":{"getController":{"!description":"Returns the view's Controller instance or null for a controller-less View.","!type":"fn() -> Object","!category":"function","!static":false},"fireBeforeExit":{"!description":"Fires event {@link #event:beforeExit beforeExit} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.core.mvc.View","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getViewData":{"!description":"Returns user specific data object","!type":"fn() -> Object","!category":"function","!static":false},"getControllerName":{"!description":"An (optional) method to be implemented by Views. When no controller instance is given at View instantiation time AND this method exists and returns the (package and class) name of a controller, the View tries to load and instantiate the controller and to connect it to itself.","!type":"fn() -> String","!category":"function","!static":false},"detachAfterInit":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterInit afterInit} event of this <code>sap.ui.core.mvc.View<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.mvc.View","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"attachAfterInit":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterInit afterInit} event of this <code>sap.ui.core.mvc.View<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.core.mvc.View<\/code> itself.\n\nFired when the View has parsed the UI description and instantiated the contained controls (/control tree).","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.mvc.View","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.core.mvc.View<\/code> itself"},"!static":false},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"},"!static":false},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"},"!static":false},"getLocalId":{"!description":"Returns the local ID of an element by removing the view ID prefix or <code>null<\/code> if the ID does not contain a prefix.","!type":"fn(sId: String) -> String","!category":"function","parameters":{"sId":"type: string, description: Prefixed ID"},"!static":false},"!module":"sap/ui/core/mvc/View","getDisplayBlock":{"!description":"Gets current value of property {@link #getDisplayBlock displayBlock}.\n\nWhether the CSS display should be set to \"block\". Set this to \"true\" if the default display \"inline-block\" causes a vertical scrollbar with Views that are set to 100% height. Do not set this to \"true\" if you want to display other content in the same HTML parent on either side of the View (setting to \"true\" may push that other content to the next/previous line).\n\nDefault value is <code>false<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!type":"fn() -> sap.ui.core.mvc.View","!category":"function","!static":false},"getHeight":{"!description":"Gets current value of property {@link #getHeight height}.\n\nThe height","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"byId":{"!description":"Returns an element by its ID in the context of the view.","!type":"fn(sId: String) -> sap.ui.core.Element","!category":"function","parameters":{"sId":"type: string, description: View local ID of the element"},"!static":false},"detachBeforeRendering":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforeRendering beforeRendering} event of this <code>sap.ui.core.mvc.View<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.mvc.View","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"detachAfterRendering":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:afterRendering afterRendering} event of this <code>sap.ui.core.mvc.View<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.mvc.View","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"!category":"class","getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nThe width\n\nDefault value is <code>100%<\/code>.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nThe width\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>100%<\/code>.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.ui.core.mvc.View","!category":"function","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"},"!static":false},"createId":{"!description":"Convert the given view local element ID to a globally unique ID by prefixing it with the view ID.","!type":"fn(sId: String) -> String","!category":"function","parameters":{"sId":"type: string, description: View local ID of the element"},"!static":false},"fireAfterRendering":{"!description":"Fires event {@link #event:afterRendering afterRendering} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.core.mvc.View","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"runPreprocessor":{"!description":"Executes preprocessors for a type of source","!type":"fn(sType: String, vSource: Object | String | Element, bSync?: Boolean) -> Promise | Object | String | Element","!category":"function","parameters":{"sType":"type: string, description: the type of preprocessor, e.g. \"raw\", \"xml\" or \"controls\"","bSync":"type: boolean, description: describes the view execution, true if sync","vSource":"type: object|string|Element, description: the view source as a JSON object, a raw text, an XML document element or a Promise resolving with those"},"!static":false},"clone":{"!description":"Override clone method to avoid conflict between generic cloning of content and content creation as defined by the UI5 Model View Controller lifecycle.\n\nFor more details see the development guide section about Model View Controller in UI5.","!type":"fn(sIdSuffix?: String, aLocalIds?: [[object Object]]) -> sap.ui.core.Element","!category":"function","parameters":{"aLocalIds":"type: [object Object][], description: an array of local IDs within the cloned hierarchy (internally used)","sIdSuffix":"type: string, description: a suffix to be appended to the cloned element id"},"!static":false},"registerPreprocessor":{"!description":"Register a preprocessor for all views of a specific type.\n\nThe preprocessor can be registered for several stages of view initialization, which are dependent on the view type, e.g. \"raw\", \"xml\" or already initialized \"controls\". If there is a preprocessor passed to or activated at the view instance already, that one is used. When several preprocessors are registered for one hook, it has to be made sure that they do not conflict when being processed serially.\n\nIt can be either a module name as string of an implementation of {@link sap.ui.core.mvc.View.Preprocessor} or a function with a signature according to {@link sap.ui.core.mvc.View.Preprocessor.process}.\n\n<strong>Note<\/strong>: Preprocessors only work in async views and will be ignored when the view is instantiated in sync mode by default, as this could have unexpected side effects. You may override this behaviour by setting the <code>bSyncSupport<\/code> flag to <code>true<\/code>.","!type":"fn(sType: String, vPreprocessor: String | fn(), sViewType: String, bSyncSupport: Boolean, bOnDemand?: Boolean, mSettings: Object)","!category":"function","parameters":{"sViewType":"type: string, description: type of the calling view, e.g. <code>XML<\/code>","sType":"type: string, description: the type of content to be processed","mSettings":"type: object, description: optional configuration for preprocessor","bSyncSupport":"type: boolean, description: declares if the vPreprocessor ensures safe sync processing. This means the preprocessor will be executed also for sync views. Please be aware that any kind of async processing (like Promises, XHR, etc) may break the view initialization and lead to unexpected results.","vPreprocessor":"type: string|function, description: module path of the preprocessor implementation or a preprocessor function","bOnDemand":"type: boolean, description: on-demand preprocessor which enables developers to quickly activate the preprocessor for a view, by setting <code>preprocessors : { xml }<\/code>, for example. This should be false except for very special cases. There can only be one on-demand preprocessor per content type."},"!static":true},"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.core.mvc.View","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"},"!static":false},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nChild Controls of the view","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getViewName":{"!description":"Gets current value of property {@link #getViewName viewName}.\n\nName of the View","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.mvc.View with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setDisplayBlock":{"!description":"Sets a new value for property {@link #getDisplayBlock displayBlock}.\n\nWhether the CSS display should be set to \"block\". Set this to \"true\" if the default display \"inline-block\" causes a vertical scrollbar with Views that are set to 100% height. Do not set this to \"true\" if you want to display other content in the same HTML parent on either side of the View (setting to \"true\" may push that other content to the next/previous line).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>false<\/code>.","!type":"fn(bDisplayBlock: Boolean) -> sap.ui.core.mvc.View","!category":"function","parameters":{"bDisplayBlock":"type: boolean, description: New value for property <code>displayBlock<\/code>"},"!static":false},"setViewName":{"!description":"Sets a new value for property {@link #getViewName viewName}.\n\nName of the View\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sViewName: String) -> sap.ui.core.mvc.View","!category":"function","parameters":{"sViewName":"type: string, description: New value for property <code>viewName<\/code>"},"!static":false},"fireAfterInit":{"!description":"Fires event {@link #event:afterInit afterInit} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.core.mvc.View","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"!constructorDescription":"Constructor for a new View.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getViewName viewName} : string<\/li>\n<li>{@link #getDisplayBlock displayBlock} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterInit afterInit} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeExit beforeExit} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterRendering afterRendering} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeRendering beforeRendering} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","process":{"!description":"Processing method that must be implemented by a Preprocessor.","!type":"fn(vSource: Object, oViewInfo: Object, mSettings: Object) -> Object | Promise","!category":"function","parameters":{"mSettings":"type: object, description: settings object containing the settings provided with the preprocessor","oViewInfo":"type: object, description: identification information about the calling instance","vSource":"type: object, description: the source to be processed"},"!static":true},"loaded":{"!description":"Creates a Promise representing the state of the view initialization.\n\nFor views that are loading asynchronously (by setting async=true) this Promise is created by view initialization. Synchronously loading views get wrapped in an immediately resolving Promise.","!type":"fn() -> Promise","!category":"function","!static":false},"insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.core.mvc.View","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"},"!static":false},"attachBeforeRendering":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforeRendering beforeRendering} event of this <code>sap.ui.core.mvc.View<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.core.mvc.View<\/code> itself.\n\nFired before this View is re-rendered. Use to unbind event handlers from HTML elements etc.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.mvc.View","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.core.mvc.View<\/code> itself"},"!static":false},"!description":"A base class for Views.\n\nIntroduces the relationship to a Controller, some basic visual appearance settings like width and height, and provides lifecycle events.","setHeight":{"!description":"Sets a new value for property {@link #getHeight height}.\n\nThe height\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sHeight: sap.ui.core.CSSSize) -> sap.ui.core.mvc.View","!category":"function","parameters":{"sHeight":"type: sap.ui.core.CSSSize, description: New value for property <code>height<\/code>"},"!static":false},"attachBeforeExit":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:beforeExit beforeExit} event of this <code>sap.ui.core.mvc.View<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.core.mvc.View<\/code> itself.\n\nFired when the view has received the request to destroy itself, but before it has destroyed anything.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.mvc.View","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.core.mvc.View<\/code> itself"},"!static":false},"getPreprocessorInfo":{"!description":"Returns the info object which is also passed to the preprocessors","!type":"fn(bSync: Boolean) -> Object","!category":"function","parameters":{"bSync":"type: boolean, description: Describes the view execution, true if sync"},"!static":false},"fireBeforeRendering":{"!description":"Fires event {@link #event:beforeRendering beforeRendering} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.core.mvc.View","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"hasPreprocessor":{"!description":"Checks if any preprocessors are active for the specified type","!type":"fn(sType: String) -> Boolean","!category":"function","parameters":{"sType":"type: string, description: Type of the preprocessor, e.g. \"raw\", \"xml\" or \"controls\""},"!static":false},"attachAfterRendering":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:afterRendering afterRendering} event of this <code>sap.ui.core.mvc.View<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.core.mvc.View<\/code> itself.\n\nFired when the View has been (re-)rendered and its HTML is present in the DOM.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.mvc.View","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.core.mvc.View<\/code> itself"},"!static":false},"detachBeforeExit":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:beforeExit beforeExit} event of this <code>sap.ui.core.mvc.View<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.mvc.View","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.mvc.View.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Control","!helpDescription":"A base class for Views.\n\nIntroduces the relationship to a Controller, some basic visual appearance settings like width and height, and provides lifecycle events."},"sap.ui.core.Title_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Title with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.Title"},"sap.ui.test.gherkin.dataTableUtils":{"toObject":{"!description":"Takes the inputed 2D array \"aData\" and returns an equivalent object. Each row of data is expected to be a property-value pair. To create nested objects, add extra columns to the data. E.g. <pre>\n [\n   [\"Name\", \"Alice\"],\n   [\"Mass\", \"135 lbs\"],\n   [\"Telephone Number\", \"Home\", \"123-456-7890\"],\n   [\"Telephone Number\", \"Work\", \"123-456-0987\"]\n ]\n<\/pre> For each data row, the right-most element becomes a property value, and everything else is a property name. The property names get normalized according to the strategy defined by the parameter \"vNorm\". E.g. using camelCase strategy <pre>\n  {\n    name: \"Alice\",\n    mass: \"135 lbs\",\n    telephoneNumber: {\n      home: \"123-456-7890\",\n      work: \"123-456-0987\"\n    }\n  }\n<\/pre>","!type":"fn(aData: [[object Object]], vNorm?: String | fn()) -> Object","!category":"function","!static":"true"},"!description":"Provides utility functions for formatting 2D arrays of strings (such as the raw data loaded from a Gherkin feature file) into a more useful format such as an array of objects or a single object. Also handles normalization of the raw strings.","normalization":"sap.ui.test.gherkin.dataTableUtils.normalization","!category":"namespace","toTable":{"!description":"Takes the inputed 2D array \"aData\" and returns an equivalent array of objects. The data is expected to have a header row, with each subsequent row being an entity, and each column being a property of that entity. E.g. <pre>\n  [\n    [\"Their Name\",  \"Their Age\"],\n    [\"Alice\",       \"16\"],\n    [\"Bob\",         \"22\"]\n  ]\n<\/pre>\n\nThe data's column headers become the returned objects' property names. The property names get normalized according to the strategy defined by the parameter \"vNorm\". E.g. using hyphenation strategy this is returned: <pre>\n  [\n    {their-name: \"Alice\", their-age: \"16\"},\n    {their-name: \"Bob\", their-age: \"22\"}\n  ]\n<\/pre>","!type":"fn(aData: [[object Object]], vNorm?: String | fn()) -> [[object Object]]","!category":"function","!static":"true"},"!module":"sap/ui/test/gherkin/dataTableUtils","!helpDescription":"Provides utility functions for formatting 2D arrays of strings (such as the raw data loaded from a Gherkin feature file) into a more useful format such as an array of objects or a single object. Also handles normalization of the raw strings."},"sap.ui.core.CustomData_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.CustomData with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.CustomData"},"sap.ui.model.ListBinding":{"detachFilter":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined use the change event.<br>Detach event-handler <code>fnFunction<\/code> from the 'filter' event of this <code>sap.ui.model.ListBinding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: object on which to call the given function."},"!static":false},"sort":{"!description":"Sorts the list according to the sorter object","!type":"fn(aSorters: sap.ui.model.Sorter | Array) -> sap.ui.model.ListBinding","!category":"function","parameters":{"aSorters":"type: sap.ui.model.Sorter|Array, description: the Sorter object or an array of sorters which defines the sort order"},"!static":false},"detachSort":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined use the change event.<br>Detach event-handler <code>fnFunction<\/code> from the 'sort' event of this <code>sap.ui.model.ListBinding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: object on which to call the given function."},"!static":false},"getContexts":{"!description":"Returns an array of binding contexts for the bound target list.\n\n<strong>Note:<\/strong>The public usage of this method is deprecated, as calls from outside of controls will lead to unexpected side effects. For avoidance use {@link sap.ui.model.ListBinding.prototype.getCurrentContexts} instead.","!type":"fn(iStartIndex?: Number, iLength?: Number) -> [[object Object]]","!category":"function","parameters":{"iLength":"type: int, description: determines how many contexts to retrieve beginning from the start index.","iStartIndex":"type: int, description: the startIndex where to start the retrieval of contexts"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.ListBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Binding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for ListBinding.","!module":"sap/ui/model/ListBinding","isGrouped":{"!description":"Indicates whether grouping is enabled for the binding. Grouping is enabled for a list binding, if at least one sorter exists on the binding and the first sorter is a grouping sorter.","!type":"fn() -> Boolean","!category":"function","!static":false},"attachFilter":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined use the change event. It now contains a parameter (reason : \"filter\") when a filter event is fired.<br>Attach event-handler <code>fnFunction<\/code> to the 'filter' event of this <code>sap.ui.model.ListBinding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: object on which to call the given function."},"!static":false},"!description":"ListBinding is a specific binding for lists in the model, which can be used to populate Tables or ItemLists.","isLengthFinal":{"!description":"Returns whether the length which can be retrieved using getLength() is a known, final length, or a preliminary or estimated length which may change if further data is requested.","!type":"fn() -> Boolean","!category":"function","!static":false},"!category":"class","getGroup":{"!description":"Gets the group for the given context. Must only be called if isGrouped() returns that grouping is enabled for this binding. The grouping will be performed using the first sorter (in case multiple sorters are defined).","!type":"fn(oContext: sap.ui.model.Context) -> Object","!category":"function","parameters":{"oContext":"type: sap.ui.model.Context, description: the binding context"},"!static":false},"attachSort":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined use the change event. It now contains a parameter (reason : \"sort\") when a sorter event is fired.<br>Attach event-handler <code>fnFunction<\/code> to the 'sort' event of this <code>sap.ui.model.ListBinding<\/code>.<br/>","!type":"fn(fnFunction: fn(), oListener?: Object)","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: object on which to call the given function."},"!static":false},"getLength":{"!description":"Returns the number of entries in the list. This might be an estimated or preliminary length, in case the full length is not known yet, see method isLengthFinal().","!type":"fn() -> Number","!category":"function","!static":false},"getDistinctValues":{"!description":"Returns list of distinct values for the given relative binding path","!type":"fn(sPath: String) -> Array","!category":"function","parameters":{"sPath":"type: string, description: the relative binding path"},"!static":false},"getCurrentContexts":{"!description":"Returns an array of currently used binding contexts of the bound control\n\nThis method does not trigger any data requests from the backend or delta calculation, but just returns the context array as last requested by the control. This can be used by the application to get access to the data currently displayed by a list control.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"filter":{"!description":"Applies a new set of filters to the list represented by this binding.\n\nDepending on the nature of the model (client or server), the operation might be executed locally or on a server and it might execute asynchronously.\n\n<h3>Application and Control Filters<\/h3> Each list binding maintains two separate lists of filters, one for filters defined by the control that owns the binding and another list for filters that an application can define in addition. When executing the filter operation, both sets of filters are combined.\n\nBy using the second parameter <code>sFilterType<\/code> of method <code>filter<\/code>, the caller can control which set of filters is modified. If no type is given, then the behavior depends on the model implementation and should be documented in the API reference for that model.\n\n<h3>Auto-Grouping of Filters<h3> Filters are first grouped according to their binding path. All filters belonging to the same group are ORed and after that the results of all groups are ANDed. Usually this means, all filters applied to a single table column are ORed, while filters on different table columns are ANDed.","!type":"fn(aFilters: [[object Object]], sFilterType?: sap.ui.model.FilterType) -> sap.ui.model.ListBinding","!category":"function","parameters":{"sFilterType":"type: sap.ui.model.FilterType, description: Type of the filter which should be adjusted; if no type is given, the behavior depends on the model implementation","aFilters":"type: [object Object][], description: Array of filter objects"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.ListBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!helpDescription":"ListBinding is a specific binding for lists in the model, which can be used to populate Tables or ItemLists.","!proto":"sap.ui.model.Binding"},"sap.ui.model.analytics.odata4analytics.ParameterValueSetRequest":{"includeParameterText":{"!description":"Specify which components of the parameter shall be included in the value set.","!type":"fn(bIncludeText: Boolean)","!category":"function","parameters":{"bIncludeText":"type: boolean, description: Indicator whether or not to include the parameter text (if available) in the value set. Pass null to keep current setting."},"!static":false},"setSortExpression":{"!description":"Set the sort expression for this request.\n\nExpressions are represented by separate objects. Calling this method replaces the sort object maintained by this request.","!type":"fn(oSorter: sap.ui.model.analytics.odata4analytics.SortExpression)","!category":"function","parameters":{"oSorter":"type: sap.ui.model.analytics.odata4analytics.SortExpression, description: The sort object to be associated with this request."},"!static":false},"getURIQueryOptionValue":{"!description":"Get the value of a query option for the OData request URI corresponding to this request.","!type":"fn(sQueryOptionName: String) -> String","!category":"function","parameters":{"sQueryOptionName":"type: String, description: Identifies the query option: $select, $filter,... or any custom query option"},"!static":false},"!constructorDescription":"Create a request object for interaction with a query parameter value help.","!module":"sap/ui/model/analytics/odata4analytics","getURIToParameterValueSetEntries":{"!description":"Get the unescaped URI to fetch the parameter value set.","!type":"fn(sServiceRootURI: String) -> String","!category":"function","parameters":{"sServiceRootURI":"type: String, description: (optional) Identifies the root of the OData service"},"!static":false},"!description":"Creation of URIs for fetching a query parameter value set.","getSortExpression":{"!description":"Get the sort expression for this request.\n\nExpressions are represented by separate objects. If none exists so far, a new expression object gets created.","!type":"fn() -> sap.ui.model.analytics.odata4analytics.SortExpression","!category":"function","!static":false},"setFilterExpression":{"!description":"Set the filter expression for this request.\n\nExpressions are represented by separate objects. Calling this method replaces the filter object maintained by this request.","!type":"fn(oFilter: sap.ui.model.analytics.odata4analytics.FilterExpression)","!category":"function","parameters":{"oFilter":"type: sap.ui.model.analytics.odata4analytics.FilterExpression, description: The filter object to be associated with this request."},"!static":false},"!category":"class","getFilterExpression":{"!description":"Get the filter expression for this request.\n\nExpressions are represented by separate objects. If none exists so far, a new expression object gets created.","!type":"fn() -> sap.ui.model.analytics.odata4analytics.FilterExpression","!category":"function","!static":false},"!helpDescription":"Creation of URIs for fetching a query parameter value set.","!proto":"sap.ui.base.Object"},"sap.ui.core.dnd.IDropInfo":{"!description":"Marker interface for drop configuration providing information about the target of the drop operation.","!category":"static class","!module":"sap/ui/core/library"},"sap.ui.core.routing.Target":{"destroy":{"!description":"Destroys the target, will be called by {@link sap.m.routing.Targets} don't call this directly.","!type":"fn() -> sap.ui.core.routing.Target","!category":"function","!static":false},"fireDisplay":{"!description":"Fire event created to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.core.routing.Target","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"attachDisplay":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'display' event of this <code>sap.ui.core.routing.Target<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.routing.Target","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function."},"!static":false},"_beforePlacingViewIntoContainer":{"!description":"This function is called between the target view is loaded and the view is added to the container.\n\nThis function can be used for applying modification on the view or the container to make the rerendering occur together with the later aggregation change.","!type":"fn(mArguments: Object)","!category":"function","parameters":{"mArguments":"type: object, description: undefined"},"!static":false},"detachDisplay":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'display' event of this <code>sap.ui.core.routing.Target<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.routing.Target","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.routing.Target with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","display":{"!description":"Creates a view and puts it in an aggregation of a control that has been defined in the {@link sap.ui.core.routing.Target#constructor}.","!type":"fn(vData?: *) -> Promise","!category":"function","parameters":{"vData":"type: *, description: an object that will be passed to the display event in the data property. If the target has parents, the data will also be passed to them."},"!static":false},"!constructorDescription":"Provides a convenient way for placing views into the correct containers of your application.<br/>\nThe main benefit of Targets is lazy loading: you do not have to create the views until you really need them.<br/>\n<b>Don't call this constructor directly<\/b>, use {@link sap.ui.core.routing.Targets} instead, it will create instances of a Target.<br/>\nIf you are using the mobile library, please use the {@link sap.m.routing.Targets} constructor, please read the documentation there.<br/>","!module":"sap/ui/core/routing/Target","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.routing.Target.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.base.EventProvider"},"sap.ui.model.odata.v4.ODataMetaModel":{"requestObject":{"!description":"Requests the metadata value for the given path relative to the given context. Returns a <code>Promise<\/code> which is resolved with the requested metadata value or rejected with an error (only in case metadata cannot be loaded). An invalid path leads to an <code>undefined<\/code> result and a warning is logged. Use {@link #getObject} for synchronous access.\n\nA relative path is appended to the context's path separated by a forward slash(\"/\"). A relative path starting with \"@\" (that is, an annotation) is appended without a separator. Use \"./\" as a prefix for such a relative path to enforce a separator.\n\nExample: <pre>\n&lt;template:with path=\"/EMPLOYEES/ENTRYDATE\" var=\"property\">\n  &lt;!-- /EMPLOYEES/ENTRYDATE/$Type -->\n  \"{property>$Type}\"\n\n  &lt;!-- /EMPLOYEES/ENTRYDATE@com.sap.vocabularies.Common.v1.Text -->\n  \"{property>@com.sap.vocabularies.Common.v1.Text}\"\n\n  &lt;!-- /EMPLOYEES/ENTRYDATE/@com.sap.vocabularies.Common.v1.Text -->\n  \"{property>./@com.sap.vocabularies.Common.v1.Text}\"\n&lt;/template:with>\n<\/pre>\n\nThe basic idea is that every path described in \"14.2.1 Attribute Target\" in specification \"OData Version 4.0 Part 3: Common Schema Definition Language\" is a valid absolute path within the metadata model if a leading slash is added; for example \"/\" + \"MySchema.MyEntityContainer/MyEntitySet/MyComplexProperty/MyNavigationProperty\". Also, every path described in \"14.5.2 Expression edm:AnnotationPath\", \"14.5.11 Expression edm:NavigationPropertyPath\", \"14.5.12 Expression edm:Path\", and \"14.5.13 Expression edm:PropertyPath\" is a valid relative path within the metadata model if a suitable prefix is added which addresses an entity container, entity set, singleton, complex type, entity type, or property; for example \"/MySchema.MyEntityType/MyProperty\" + \"@vCard.Address#work/FullName\".\n\nThe absolute path is split into segments and followed step-by-step, starting at the global scope of all known qualified OData names. There are two technical properties there: \"$Version\" (typically \"4.0\") and \"$EntityContainer\" with the name of the single entity container for this metadata model's service.\n\nAn empty segment in between is invalid. An empty segment at the end caused by a trailing slash differentiates between a name and the object it refers to. This way, \"/$EntityContainer\" refers to the name of the single entity container and \"/$EntityContainer/\" refers to the single entity container as an object.\n\nThe segment \"@sapui.name\" refers back to the last OData name (simple identifier or qualified name) or annotation name encountered during path traversal immediately before \"@sapui.name\": <ul> <li> \"/EMPLOYEES@sapui.name\" results in \"EMPLOYEES\" and \"/EMPLOYEES/@sapui.name\" results in the same as \"/EMPLOYEES/$Type\", that is, the qualified name of the entity set's type (see below how \"$Type\" is inserted implicitly). Note how the separating slash again makes a difference here. <li> \"/EMPLOYEES/@com.sap.vocabularies.Common.v1.Label@sapui.name\" results in \"@com.sap.vocabularies.Common.v1.Label\" and a slash does not make any difference as long as the annotation does not have a \"$Type\" property. <li> A technical property (that is, a numerical segment or one starting with a \"$\") immediately before \"@sapui.name\" is invalid, for example \"/$EntityContainer@sapui.name\". <\/ul> The path must not continue after \"@sapui.name\".\n\nIf the current object is a string value, that string value is treated as a relative path and followed step-by-step before the next segment is processed. Except for this, a path must not continue if it comes across a non-object value. Such a string value can be a qualified name (example path \"/$EntityContainer/...\"), a simple identifier (example path \"/TEAMS/$NavigationPropertyBinding/TEAM_2_EMPLOYEES/...\") or even a path according to \"14.5.12 Expression edm:Path\" etc. (example path \"/TEAMS/$Type/@com.sap.vocabularies.UI.v1.LineItem/0/Value/$Path/...\").\n\nSegments starting with an \"@\" character, for example \"@com.sap.vocabularies.Common.v1.Label\", address annotations at the current object. As the first segment, they refer to the single entity container. For objects which can only be annotated inline (see \"14.3 Element edm:Annotation\" minus \"14.2.1 Attribute Target\"), the object already contains the annotations as a property. For objects which can (only or also) be annotated via external targeting, the object does not contain any annotation as a property. Such annotations MUST be accessed via a path. BEWARE of a special case: Actions, functions and their parameters can be annotated inline for a single overload or via external targeting for all overloads at the same time. In this case, the object contains all annotations for the single overload as a property, but annotations MUST nevertheless be accessed via a path in order to include also annotations for all overloads at the same time.\n\nSegments starting with an OData name followed by an \"@\" character, for example \"/TEAMS@Org.OData.Capabilities.V1.TopSupported\", address annotations at an entity set, singleton, or property, not at the corresponding type. In contrast, \"/TEAMS/@com.sap.vocabularies.Common.v1.Deletable\" (note the separating slash) addresses an annotation at the entity set's type. This is in line with the special rule of \"14.5.12 Expression edm:Path\" regarding annotations at a navigation property itself.\n\n\"@\" can be used as a segment to address a map of all annotations of the current object. This is useful for iteration, for example via <code>&lt;template:repeat list=\"{entityType>@}\" ...><\/code>.\n\nAnnotations of an annotation are addressed not by two separate segments, but by a single segment like \"@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.Common.v1.TextArrangement\". Each annotation can have a qualifier, for example \"@first#foo@second#bar\". Note: If the first annotation's value is a record, a separate segment addresses an annotation of that record, not an annotation of the first annotation itself. In a similar way, annotations of \"7.2 Element edm:ReferentialConstraint\", \"7.3 Element edm:OnDelete\", \"10.2 Element edm:Member\" and \"14.5.14.2 Element edm:PropertyValue\" are addressed by segments like \"&lt;7.2.1 Attribute Property>@...\", \"$OnDelete@...\", \"&lt;10.2.1 Attribute Name>@...\" and \"&lt;14.5.14.2.1 Attribute Property>@...\" (where angle brackets denote a variable part and sections refer to specification \"OData Version 4.0 Part 3: Common Schema Definition Language\").\n\nAnnotations starting with \"@@\", for example \"@@sap.ui.model.odata.v4.AnnotationHelper.isMultiple\" or \"@@.AH.isMultiple\" or \"@@.isMultiple\", represent computed annotations. Their name without the \"@@\" prefix must refer to a function either in the global namespace (in case of an absolute name) or in <code>mParameters.scope<\/code> (in case of a relative name starting with a dot, which is stripped before lookup; see the <code>&lt;template:alias><\/code> instruction for XML Templating). This function is called with the current object (or primitive value) and additional details and returns the result of this {@link #requestObject} call. The additional details are given as an object with the following properties: <ul> <li><code>{@link sap.ui.model.Context} context<\/code> Points to the current object <li><code>{string} schemaChildName<\/code> The qualified name of the schema child where the computed annotation has been found <\/ul> Computed annotations cannot be iterated by \"@\". The path must not continue after a computed annotation.\n\nA segment which represents an OData qualified name is looked up in the global scope (\"scope lookup\") and thus determines a schema child which is used later on. Unknown qualified names are invalid. This way, \"/acme.DefaultContainer/EMPLOYEES\" addresses the \"EMPLOYEES\" child of the schema child named \"acme.DefaultContainer\". This also works indirectly (\"/$EntityContainer/EMPLOYEES\") and implicitly (\"/EMPLOYEES\", see below).\n\nA segment which represents an OData simple identifier needs special preparations. The same applies to the empty segment after a trailing slash. <ol> <li> If the current object has a \"$Action\", \"$Function\" or \"$Type\" property, it is used for scope lookup first. This way, \"/EMPLOYEES/ENTRYDATE\" addresses the same object as \"/EMPLOYEES/$Type/ENTRYDATE\", namely the \"ENTRYDATE\" child of the entity type corresponding to the \"EMPLOYEES\" child of the entity container. The other cases jump from an action or function import to the corresponding action or function overloads. <li> Else if the segment is the first one within its path, the last schema child addressed via scope lookup is used instead of the current object. This can only happen indirectly as in \"/TEAMS/$NavigationPropertyBinding/TEAM_2_EMPLOYEES/...\" where the schema child is the entity container and the navigation property binding can contain the simple identifier of another entity set within the same container.\n\nIf the segment is the first one overall, \"$EntityContainer\" is inserted into the path implicitly. In other words, the entity container is used as the initial schema child. This way, \"/EMPLOYEES\" addresses the same object as \"/$EntityContainer/EMPLOYEES\", namely the \"EMPLOYEES\" child of the entity container. <li> Afterwards, if the current object is an array, it represents overloads for an action or function. Multiple overloads are invalid. The overload's \"$ReturnType/$Type\" is used for scope lookup. This way, \"/GetOldestWorker/AGE\" addresses the same object as \"/GetOldestWorker/0/$ReturnType/$Type/AGE\". For primitive return types, the special segment \"value\" can be used to refer to the return type itself (see {@link sap.ui.model.odata.v4.ODataContextBinding#execute}). This way, \"/GetOldestAge/value\" addresses the same object as \"/GetOldestAge/0/$ReturnType\" (which is needed for automatic type determination, see {@link #requestUI5Type}). <\/ol>\n\nA trailing slash can be used to continue a path and thus force scope lookup or OData simple identifier preparations, but then stay at the current object. This way, \"/EMPLOYEES/$Type/\" addresses the entity type itself corresponding to the \"EMPLOYEES\" child of the entity container. Although the empty segment is not an OData simple identifier, it can be used as a placeholder for one. In this way, \"/EMPLOYEES/\" addresses the same entity type as \"/EMPLOYEES/$Type/\". That entity type in turn is a map of all its OData children (that is, structural and navigation properties) and determines the set of possible child names that might be used after the trailing slash.\n\nAny other segment, including an OData simple identifier, is looked up as a property of the current object.","!type":"fn(sPath: String, oContext?: sap.ui.model.Context, mParameters?: Object) -> Promise","!category":"function","parameters":{"mParameters":"type: object, description: Optional (binding) parameters; if they are given, <code>oContext<\/code> cannot be omitted","sPath":"type: string, description: A relative or absolute path within the metadata model","oContext":"type: sap.ui.model.Context, description: The context to be used as a starting point in case of a relative path"},"!static":false},"setLegacySyntax":{"!description":"Method not supported","!type":"fn()","!category":"function","!static":false},"!module":"sap/ui/model/odata/v4/ODataMetaModel","getMetaContext":{"!description":"Returns the OData metadata model context corresponding to the given OData data model path.","!type":"fn(sPath: String) -> sap.ui.model.Context","!category":"function","parameters":{"sPath":"type: string, description: An absolute data path within the OData data model, for example \"/EMPLOYEES/0/ENTRYDATE\""},"!static":false},"bindProperty":{"!description":"Creates a property binding for this meta data model which refers to the content from the given path (relative to the given context).","!type":"fn(sPath: String, oContext?: sap.ui.model.Context, mParameters?: Object) -> sap.ui.model.PropertyBinding","!category":"function","parameters":{"mParameters":"type: object, description: Optional binding parameters that are passed to {@link #getObject} to compute the binding's value; if they are given, <code>oContext<\/code> cannot be omitted","sPath":"type: string, description: A relative or absolute path within the meta data model, for example \"/EMPLOYEES/ENTRYDATE\"","oContext":"type: sap.ui.model.Context, description: The context to be used as a starting point in case of a relative path"},"!static":false},"bindTree":{"!description":"Method not supported","!type":"fn()","!category":"function","!static":false},"getOriginalProperty":{"!description":"Method not supported","!type":"fn()","!category":"function","!static":false},"!category":"class","refresh":{"!description":"Method not supported","!type":"fn()","!category":"function","!static":false},"getValueListType":{"!description":"Determines which type of value list exists for the given property.","!type":"fn(sPropertyPath: String) -> sap.ui.model.odata.v4.ValueListType","!category":"function","parameters":{"sPropertyPath":"type: string, description: An absolute path to an OData property within the OData data model"},"!static":false},"getObject":{"!description":"Returns the metadata object for the given path relative to the given context. Returns <code>undefined<\/code> in case the metadata is not (yet) available. Use {@link #requestObject} for asynchronous access.","!type":"fn(sPath: String, oContext?: sap.ui.model.Context, mParameters?: Object) -> Object","!category":"function","parameters":{"mParameters":"type: object, description: Optional (binding) parameters; if they are given, <code>oContext<\/code> cannot be omitted","sPath":"type: string, description: A relative or absolute path within the metadata model","oContext":"type: sap.ui.model.Context, description: The context to be used as a starting point in case of a relative path"},"!static":false},"requestValueListInfo":{"!description":"Requests information to retrieve a value list for the property given by <code>sPropertyPath<\/code>.","!type":"fn(sPropertyPath: String) -> Promise","!category":"function","parameters":{"sPropertyPath":"type: string, description: An absolute path to an OData property within the OData data model"},"!static":false},"requestUI5Type":{"!description":"Requests the UI5 type for the given property path that formats and parses corresponding to the property's EDM type and constraints. The property's type must be a primitive type. Use {@link #getUI5Type} for synchronous access.","!type":"fn(sPath: String) -> Promise","!category":"function","parameters":{"sPath":"type: string, description: An absolute path to an OData property within the OData data model"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.v4.ODataMetaModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.MetaModel.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"requestValueListType":{"!description":"Determines which type of value list exists for the given property.","!type":"fn(sPropertyPath: String) -> Promise","!category":"function","parameters":{"sPropertyPath":"type: string, description: An absolute path to an OData property within the OData data model"},"!static":false},"!constructorDescription":"Do <strong>NOT<\/strong> call this private constructor, but rather use\n{@link sap.ui.model.odata.v4.ODataModel#getMetaModel} instead.","getUI5Type":{"!description":"Returns the UI5 type for the given property path that formats and parses corresponding to the property's EDM type and constraints. The property's type must be a primitive type. Use {@link #requestUI5Type} for asynchronous access.","!type":"fn(sPath: String) -> sap.ui.model.odata.type.ODataType","!category":"function","parameters":{"sPath":"type: string, description: An absolute path to an OData property within the OData data model"},"!static":false},"bindList":{"!description":"Creates a list binding for this metadata model which iterates content from the given path (relative to the given context), sorted and filtered as indicated.\n\nBy default, OData names are iterated and a trailing slash is implicitly added to the path (see {@link #requestObject} for the effects this has); technical properties and inline annotations are filtered out.\n\nA path which ends with an \"@\" segment can be used to iterate all inline or external targeting annotations; no trailing slash is added implicitly; technical properties and OData names are filtered out.","!type":"fn(sPath: String, oContext?: sap.ui.model.Context, aSorters?: [sap.ui.model.Sorter | [object Object]], aFilters?: [sap.ui.model.Filter | [object Object]]) -> sap.ui.model.ListBinding","!category":"function","parameters":{"aSorters":"type: sap.ui.model.Sorter|[object Object][], description: Initial sort order, see {@link sap.ui.model.ListBinding#sort}","sPath":"type: string, description: A relative or absolute path within the metadata model, for example \"/EMPLOYEES\"","aFilters":"type: sap.ui.model.Filter|[object Object][], description: Initial application filter(s), see {@link sap.ui.model.ListBinding#filter}","oContext":"type: sap.ui.model.Context, description: The context to be used as a starting point in case of a relative path"},"!static":false},"getETags":{"!description":"Returns a map of entity tags for each $metadata or annotation file loaded so far.","!type":"fn() -> Object","!category":"function","!static":false},"!description":"Implementation of an OData metadata model which offers access to OData V4 metadata. The meta model does not support any public events; attaching an event handler leads to an error.\n\nThis model is read-only.","getProperty":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Use {@link #getObject}.<br>undefined","!type":"fn()","!category":"function","!static":false},"toString":{"!description":"Returns a string representation of this object including the URL to the $metadata document of the service.","!type":"function toString() { [native code for Array.toString, arity=0] }\n) -> String","!category":"function","!static":false},"getLastModified":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Use {@link #getETags} instead because modifications to old files may be shadowed by a new file in certain scenarios.<br>Returns the maximum value of all \"Last-Modified\" response headers seen so far.","!type":"fn() -> Date","!category":"function","!static":false},"!proto":"sap.ui.model.MetaModel","!helpDescription":"Implementation of an OData metadata model which offers access to OData V4 metadata. The meta model does not support any public events; attaching an event handler leads to an error.\n\nThis model is read-only.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.v4.ODataMetaModel.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.VariantLayoutData":{"destroyMultipleLayoutData":{"!description":"Destroys all the multipleLayoutData in the aggregation {@link #getMultipleLayoutData multipleLayoutData}.","!type":"fn() -> sap.ui.core.VariantLayoutData","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.VariantLayoutData with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.LayoutData.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"removeAllMultipleLayoutData":{"!description":"Removes all the controls from the aggregation {@link #getMultipleLayoutData multipleLayoutData}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"!constructorDescription":"Constructor for a new VariantLayoutData.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getMultipleLayoutData multipleLayoutData} : sap.ui.core.LayoutData[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.LayoutData#constructor sap.ui.core.LayoutData}\ncan be used as well.","!module":"sap/ui/core/VariantLayoutData","insertMultipleLayoutData":{"!description":"Inserts a multipleLayoutData into the aggregation {@link #getMultipleLayoutData multipleLayoutData}.","!type":"fn(oMultipleLayoutData: sap.ui.core.LayoutData, iIndex: Number) -> sap.ui.core.VariantLayoutData","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the multipleLayoutData should be inserted at; for a negative value of <code>iIndex<\/code>, the multipleLayoutData is inserted at position 0; for a value greater than the current size of the aggregation, the multipleLayoutData is inserted at the last position","oMultipleLayoutData":"type: sap.ui.core.LayoutData, description: The multipleLayoutData to insert; if empty, nothing is inserted"},"!static":false},"!description":"Allows to add multiple LayoutData to one control in case that an easy switch of layouts (e.g. in a Form) is needed.","!category":"class","addMultipleLayoutData":{"!description":"Adds some multipleLayoutData to the aggregation {@link #getMultipleLayoutData multipleLayoutData}.","!type":"fn(oMultipleLayoutData: sap.ui.core.LayoutData) -> sap.ui.core.VariantLayoutData","!category":"function","parameters":{"oMultipleLayoutData":"type: sap.ui.core.LayoutData, description: The multipleLayoutData to add; if empty, nothing is inserted"},"!static":false},"removeMultipleLayoutData":{"!description":"Removes a multipleLayoutData from the aggregation {@link #getMultipleLayoutData multipleLayoutData}.","!type":"fn(vMultipleLayoutData: Number | String | sap.ui.core.LayoutData) -> sap.ui.core.LayoutData","!category":"function","parameters":{"vMultipleLayoutData":"type: int|string|sap.ui.core.LayoutData, description: The multipleLayoutData to remove or its index or id"},"!static":false},"getMultipleLayoutData":{"!description":"Gets content of aggregation {@link #getMultipleLayoutData multipleLayoutData}.\n\nAllows multiple LayoutData.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"indexOfMultipleLayoutData":{"!description":"Checks for the provided <code>sap.ui.core.LayoutData<\/code> in the aggregation {@link #getMultipleLayoutData multipleLayoutData}. and returns its index if found or -1 otherwise.","!type":"fn(oMultipleLayoutData: sap.ui.core.LayoutData) -> Number","!category":"function","parameters":{"oMultipleLayoutData":"type: sap.ui.core.LayoutData, description: The multipleLayoutData whose index is looked for"},"!static":false},"!helpDescription":"Allows to add multiple LayoutData to one control in case that an easy switch of layouts (e.g. in a Form) is needed.","!proto":"sap.ui.core.LayoutData","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.VariantLayoutData.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.core.routing.Route":{"attachBeforeMatched":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'beforeMatched' event of this <code>sap.ui.core.routing.Route<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.routing.Route","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, this route is used."},"!static":false},"detachPatternMatched":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'patternMatched' event of this <code>sap.ui.core.routing.Route<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.routing.Route","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.routing.Route with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Instantiates an SAPUI5 Route","!module":"sap/ui/core/routing/Route","attachPatternMatched":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'patternMatched' event of this <code>sap.ui.core.routing.Route<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.routing.Route","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, this route is used."},"!static":false},"detachBeforeMatched":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'beforeMatched' event of this <code>sap.ui.core.routing.Route<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.routing.Route","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"destroy":{"!description":"Destroys a route","!type":"fn() -> sap.ui.core.routing.Route","!category":"function","!static":false},"attachMatched":{"!description":"Attach event-handler <code>fnFunction<\/code> to the 'matched' event of this <code>sap.ui.core.routing.Route<\/code>.<br/>","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.routing.Route","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs. This function will be called on the oListener-instance (if present) or in a 'static way'.","oData":"type: object, description: The object, that should be passed along with the event-object when firing the event.","oListener":"type: object, description: Object on which to call the given function. If empty, this route is used."},"!static":false},"detachMatched":{"!description":"Detach event-handler <code>fnFunction<\/code> from the 'matched' event of this <code>sap.ui.core.routing.Route<\/code>.<br/>\n\nThe passed function and listener object must match the ones previously used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.routing.Route","!category":"function","parameters":{"fnFunction":"type: function, description: The function to call, when the event occurs.","oListener":"type: object, description: Object on which the given function had to be called."},"!static":false},"getPattern":{"!description":"Return the pattern of the route. If there are multiple patterns, the first pattern is returned","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","getURL":{"!description":"Returns the URL for the route and replaces the placeholders with the values in oParameters","!type":"fn(oParameters: Object) -> String","!category":"function","parameters":{"oParameters":"type: object, description: Parameters for the route"},"!static":false},"fireBeforeMatched":{"!description":"Fire event beforeMatched to attached listeners.","!type":"fn(mArguments?: Object) -> sap.ui.core.routing.Router","!category":"function","parameters":{"mArguments":"type: object, description: the arguments to pass along with the event."},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.routing.Route.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.base.EventProvider"},"sap.ui.base.EventProvider":{"hasListeners":{"!description":"Returns whether there are any registered event handlers for the event with the given identifier.","!type":"fn(sEventId: String) -> Boolean","!category":"function","parameters":{"sEventId":"type: string, description: The identifier of the event"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.base.EventProvider with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getEventingParent":{"!description":"Returns the parent in the eventing hierarchy of this object.\n\nPer default this returns null, but if eventing is used in objects, which are hierarchically structured, this can be overwritten to make the object hierarchy visible to the eventing and enables the use of event bubbling within this object hierarchy.","!type":"fn() -> sap.ui.base.EventProvider","!category":"function","!static":false},"!constructorDescription":"Creates an instance of EventProvider.","attachEventOnce":{"!description":"Attaches an event handler, called one time only, to the event with the given identifier.\n\nWhen the event occurs, the handler function is called and the handler registration is automatically removed afterwards.","!type":"fn(sEventId: String, oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.base.EventProvider","!category":"function","parameters":{"sEventId":"type: string, description: The identifier of the event to listen for","fnFunction":"type: function, description: The handler function to call when the event occurs. This function will be called in the context of the <code>oListener<\/code> instance (if present) or on the event provider instance. The event object ({@link sap.ui.base.Event}) is provided as first argument of the handler. Handlers must not change the content of the event. The second argument is the specified <code>oData<\/code> instance (if present).","oData":"type: object, description: An object that will be passed to the handler along with the event object when the event is fired","oListener":"type: object, description: The object that wants to be notified when the event occurs (<code>this<\/code> context within the handler function). If it is not specified, the handler function is called in the context of the event provider."},"!static":false},"!module":"sap/ui/base/EventProvider","fireEvent":{"!description":"Fires an {@link sap.ui.base.Event event} with the given settings and notifies all attached event handlers.","!type":"fn(sEventId: String, mParameters?: Object, bAllowPreventDefault?: Boolean, bEnableEventBubbling?: Boolean) -> sap.ui.base.EventProvider | Boolean","!category":"function","parameters":{"bAllowPreventDefault":"type: boolean, description: Defines whether function <code>preventDefault<\/code> is supported on the fired event","sEventId":"type: string, description: The identifier of the event to fire","mParameters":"type: object, description: The parameters which should be carried by the event","bEnableEventBubbling":"type: boolean, description: Defines whether event bubbling is enabled on the fired event. Set to <code>true<\/code> the event is also forwarded to the parent(s) of the event provider ({@link #getEventingParent}) until the bubbling of the event is stopped or no parent is available anymore."},"!static":false},"destroy":{"!description":"Cleans up the internal structures and removes all event handlers.\n\nThe object must not be used anymore after destroy was called.","!type":"fn()","!category":"function","!static":false},"!description":"Provides eventing capabilities for objects like attaching or detaching event handlers for events which are notified when events are fired.","detachEvent":{"!description":"Removes a previously attached event handler from the event with the given identifier.\n\nThe passed parameters must match those used for registration with {@link #attachEvent} beforehand.","!type":"fn(sEventId: String, fnFunction: fn(), oListener?: Object) -> sap.ui.base.EventProvider","!category":"function","parameters":{"sEventId":"type: string, description: The identifier of the event to detach from","fnFunction":"type: function, description: The handler function to detach from the event","oListener":"type: object, description: The object that wanted to be notified when the event occurred"},"!static":false},"!category":"class","toString":{"!description":"Returns a string representation of this object.\n\nIn case there is no class or id information, a simple static string is returned. Subclasses should override this method.","!type":"function toString() { [native code for Array.toString, arity=0] }\n) -> String","!category":"function","!static":false},"attachEvent":{"!description":"Attaches an event handler to the event with the given identifier.","!type":"fn(sEventId: String, oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.base.EventProvider","!category":"function","parameters":{"sEventId":"type: string, description: The identifier of the event to listen for","fnFunction":"type: function, description: The handler function to call when the event occurs. This function will be called in the context of the <code>oListener<\/code> instance (if present) or on the event provider instance. The event object ({@link sap.ui.base.Event}) is provided as first argument of the handler. Handlers must not change the content of the event. The second argument is the specified <code>oData<\/code> instance (if present).","oData":"type: object, description: An object that will be passed to the handler along with the event object when the event is fired","oListener":"type: object, description: The object that wants to be notified when the event occurs (<code>this<\/code> context within the handler function). If it is not specified, the handler function is called in the context of the event provider."},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.base.EventProvider.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!helpDescription":"Provides eventing capabilities for objects like attaching or detaching event handlers for events which are notified when events are fired.","!proto":"sap.ui.base.Object"},"sap.ui.core.util.Export":{"generate":{"!description":"Generates the file content and returns a Promise with the instance as context (this).<br> The promise will be resolved with the generated content as a string.\n\n<p><b>Please note: The return value was changed from jQuery Promises to standard ES6 Promises. jQuery specific Promise methods ('done', 'fail', 'always', 'pipe' and 'state') are still available but should not be used. Please use only the standard methods 'then' and 'catch'!<\/b><\/p>","!type":"fn() -> Promise","!category":"function","!static":false},"removeAllColumns":{"!description":"Removes all the controls from the aggregation {@link #getColumns columns}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"unbindColumns":{"!description":"Unbinds aggregation {@link #getColumns columns} from model data.","!type":"fn() -> sap.ui.core.util.Export","!category":"function","!static":false},"!module":"sap/ui/core/util/Export","getColumns":{"!description":"Gets content of aggregation {@link #getColumns columns}.\n\nColumns for the Export.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"removeColumn":{"!description":"Removes a column from the aggregation {@link #getColumns columns}.","!type":"fn(vColumn: Number | String | sap.ui.core.util.ExportColumn) -> sap.ui.core.util.ExportColumn","!category":"function","parameters":{"vColumn":"type: int|string|sap.ui.core.util.ExportColumn, description: The column to remove or its index or id"},"!static":false},"bindRows":{"!description":"Binds aggregation {@link #getRows rows} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!type":"fn(oBindingInfo: Object) -> sap.ui.core.util.Export","!category":"function","parameters":{"oBindingInfo":"type: object, description: The binding information"},"!static":false},"destroyColumns":{"!description":"Destroys all the columns in the aggregation {@link #getColumns columns}.","!type":"fn() -> sap.ui.core.util.Export","!category":"function","!static":false},"insertRow":{"!description":"Inserts a row into the aggregation {@link #getRows rows}.","!type":"fn(oRow: sap.ui.core.util.ExportRow, iIndex: Number) -> sap.ui.core.util.Export","!category":"function","parameters":{"oRow":"type: sap.ui.core.util.ExportRow, description: The row to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the row should be inserted at; for a negative value of <code>iIndex<\/code>, the row is inserted at position 0; for a value greater than the current size of the aggregation, the row is inserted at the last position"},"!static":false},"destroyExportType":{"!description":"Destroys the exportType in the aggregation {@link #getExportType exportType}.","!type":"fn() -> sap.ui.core.util.Export","!category":"function","!static":false},"getExportType":{"!description":"Gets content of aggregation {@link #getExportType exportType}.\n\nType that generates the content.","!type":"fn() -> sap.ui.core.util.ExportType","!category":"function","!static":false},"setExportType":{"!description":"Sets the aggregated {@link #getExportType exportType}.","!type":"fn(oExportType: sap.ui.core.util.ExportType) -> sap.ui.core.util.Export","!category":"function","parameters":{"oExportType":"type: sap.ui.core.util.ExportType, description: The exportType to set"},"!static":false},"!category":"class","getRows":{"!description":"Gets content of aggregation {@link #getRows rows}.\n\nRows of the Export.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"removeRow":{"!description":"Removes a row from the aggregation {@link #getRows rows}.","!type":"fn(vRow: Number | String | sap.ui.core.util.ExportRow) -> sap.ui.core.util.ExportRow","!category":"function","parameters":{"vRow":"type: int|string|sap.ui.core.util.ExportRow, description: The row to remove or its index or id"},"!static":false},"addRow":{"!description":"Adds some row to the aggregation {@link #getRows rows}.","!type":"fn(oRow: sap.ui.core.util.ExportRow) -> sap.ui.core.util.Export","!category":"function","parameters":{"oRow":"type: sap.ui.core.util.ExportRow, description: The row to add; if empty, nothing is inserted"},"!static":false},"unbindRows":{"!description":"Unbinds aggregation {@link #getRows rows} from model data.","!type":"fn() -> sap.ui.core.util.Export","!category":"function","!static":false},"removeAllRows":{"!description":"Removes all the controls from the aggregation {@link #getRows rows}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"destroyRows":{"!description":"Destroys all the rows in the aggregation {@link #getRows rows}.","!type":"fn() -> sap.ui.core.util.Export","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.util.Export with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new Export.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getExportType exportType} : sap.ui.core.util.ExportType<\/li>\n<li>{@link #getColumns columns} : sap.ui.core.util.ExportColumn[]<\/li>\n<li>{@link #getRows rows} : sap.ui.core.util.ExportRow[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","indexOfRow":{"!description":"Checks for the provided <code>sap.ui.core.util.ExportRow<\/code> in the aggregation {@link #getRows rows}. and returns its index if found or -1 otherwise.","!type":"fn(oRow: sap.ui.core.util.ExportRow) -> Number","!category":"function","parameters":{"oRow":"type: sap.ui.core.util.ExportRow, description: The row whose index is looked for"},"!static":false},"indexOfColumn":{"!description":"Checks for the provided <code>sap.ui.core.util.ExportColumn<\/code> in the aggregation {@link #getColumns columns}. and returns its index if found or -1 otherwise.","!type":"fn(oColumn: sap.ui.core.util.ExportColumn) -> Number","!category":"function","parameters":{"oColumn":"type: sap.ui.core.util.ExportColumn, description: The column whose index is looked for"},"!static":false},"!description":"Export provides the possibility to generate a list of data in a specific format / type, e.g. CSV to use it in other programs / applications.","addColumn":{"!description":"Adds some column to the aggregation {@link #getColumns columns}.","!type":"fn(oColumn: sap.ui.core.util.ExportColumn) -> sap.ui.core.util.Export","!category":"function","parameters":{"oColumn":"type: sap.ui.core.util.ExportColumn, description: The column to add; if empty, nothing is inserted"},"!static":false},"insertColumn":{"!description":"Inserts a column into the aggregation {@link #getColumns columns}.","!type":"fn(oColumn: sap.ui.core.util.ExportColumn, iIndex: Number) -> sap.ui.core.util.Export","!category":"function","parameters":{"oColumn":"type: sap.ui.core.util.ExportColumn, description: The column to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the column should be inserted at; for a negative value of <code>iIndex<\/code>, the column is inserted at position 0; for a value greater than the current size of the aggregation, the column is inserted at the last position"},"!static":false},"saveFile":{"!description":"Generates the file content, triggers a download / save action and returns a Promise with the instance as context (this).<br> The promise will be resolved with the generated content as a string. <p><b>For information about browser support, see <code>sap.ui.core.util.File.save<\/code><\/b><\/p>\n\n<p><b>Please note: The return value was changed from jQuery Promises to standard ES6 Promises. jQuery specific Promise methods ('done', 'fail', 'always', 'pipe' and 'state') are still available but should not be used. Please use only the standard methods 'then' and 'catch'!<\/b><\/p>","!type":"fn(sFileName?: String) -> Promise","!category":"function","parameters":{"sFileName":"type: string, description: file name, defaults to 'data'"},"!static":false},"bindColumns":{"!description":"Binds aggregation {@link #getColumns columns} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!type":"fn(oBindingInfo: Object) -> sap.ui.core.util.Export","!category":"function","parameters":{"oBindingInfo":"type: object, description: The binding information"},"!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"Export provides the possibility to generate a list of data in a specific format / type, e.g. CSV to use it in other programs / applications.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.Export.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.model.odata.Filter_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.Filter with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sPath: String, aValues: [[object Object]], bAND?: Boolean)","prototype":"sap.ui.model.odata.Filter"},"sap.ui.core.format.DateFormat":{"getDateTimeInstance":{"!description":"Get a datetime instance of the DateFormat, which can be used for formatting.","!type":"fn(oFormatOptions?: Object, oLocale?: sap.ui.core.Locale) -> sap.ui.core.format.DateFormat","!category":"function","parameters":{"oFormatOptions":"type: object, description: Object which defines the format options","oLocale":"type: sap.ui.core.Locale, description: Locale to ask for locale specific texts/settings"},"!static":true},"getTimeInstance":{"!description":"Get a time instance of the DateFormat, which can be used for formatting.","!type":"fn(oFormatOptions?: Object, oLocale?: sap.ui.core.Locale) -> sap.ui.core.format.DateFormat","!category":"function","parameters":{"oFormatOptions":"type: object, description: Object which defines the format options","oLocale":"type: sap.ui.core.Locale, description: Locale to ask for locale specific texts/settings"},"!static":true},"!description":"The DateFormat is a static class for formatting and parsing single date and time values or date and time intervals according to a set of format options.\n\nSupported format options are pattern based on Unicode LDML Date Format notation. Please note that only a subset of the LDML date symbols is supported. If no pattern is specified a default pattern according to the locale settings is used.","getDateInstance":{"!description":"Get a date instance of the DateFormat, which can be used for formatting.","!type":"fn(oFormatOptions?: Object, oLocale?: sap.ui.core.Locale) -> sap.ui.core.format.DateFormat","!category":"function","parameters":{"oFormatOptions":"type: object, description: Object which defines the format options","oLocale":"type: sap.ui.core.Locale, description: Locale to ask for locale specific texts/settings"},"!static":true},"!category":"class","format":{"!description":"Format a date according to the given format options.","!type":"fn(vJSDate: [Date | [object Object]], bUTC: Boolean) -> String","!category":"function","parameters":{"bUTC":"type: boolean, description: whether to use UTC","vJSDate":"type: Date|[object Object][], description: the value to format"},"!static":false},"!constructorDescription":"Constructor for DateFormat - must not be used: To get a DateFormat instance, please use getDateInstance, getDateTimeInstance or getTimeInstance.","parse":{"!description":"Parse a string which is formatted according to the given format options.","!type":"fn(sValue: String, bUTC: Boolean, bStrict: Boolean) -> [Date | [object Object]]","!category":"function","parameters":{"bUTC":"type: boolean, description: whether to use UTC, if no timezone is contained","bStrict":"type: boolean, description: to use strict value check","sValue":"type: string, description: the string containing a formatted date/time value"},"!static":false},"!module":"sap/ui/core/format/DateFormat","!proto":"sap.ui.base.Object","!helpDescription":"The DateFormat is a static class for formatting and parsing single date and time values or date and time intervals according to a set of format options.\n\nSupported format options are pattern based on Unicode LDML Date Format notation. Please note that only a subset of the LDML date symbols is supported. If no pattern is specified a default pattern according to the locale settings is used."},"jQuery.sap.log.LogLevel":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.1.2 To streamline the Logging API a bit, the separation between Level and LogLevel has been given up. Use the (enriched) enumeration {@link jQuery.sap.log.Level} instead.<br>Enumeration of levels that can be used in a call to {@link jQuery.sap.log.Logger#setLevel}(iLevel, sComponent).","!category":"static class","!module":"jquery.sap.global"},"sap.ui.core.UIArea":{"removeDependent":{"!description":"Removes a dependent from the aggregation {@link #getDependents dependents}.","!type":"fn(vDependent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","parameters":{"vDependent":"type: int|string|sap.ui.core.Control, description: The dependent to remove or its index or id"},"!static":false},"destroyDependents":{"!description":"Destroys all the dependents in the aggregation {@link #getDependents dependents}.","!type":"fn() -> sap.ui.core.UIArea","!category":"function","!static":false},"addDependent":{"!description":"Adds some dependent to the aggregation {@link #getDependents dependents}.","!type":"fn(oDependent: sap.ui.core.Control) -> sap.ui.core.UIArea","!category":"function","parameters":{"oDependent":"type: sap.ui.core.Control, description: The dependent to add; if empty, nothing is inserted"},"!static":false},"indexOfContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getContent content}. and returns its index if found or -1 otherwise.","!type":"fn(oContent: sap.ui.core.Control) -> Number","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control, description: The content whose index is looked for"},"!static":false},"indexOfDependent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getDependents dependents}. and returns its index if found or -1 otherwise.","!type":"fn(oDependent: sap.ui.core.Control) -> Number","!category":"function","parameters":{"oDependent":"type: sap.ui.core.Control, description: The dependent whose index is looked for"},"!static":false},"removeContent":{"!description":"Removes a content from the aggregation {@link #getContent content}.","!type":"fn(vContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","parameters":{"vContent":"type: int|string|sap.ui.core.Control, description: The content to remove or its index or id"},"!static":false},"getEventingParent":{"!description":"Returns the Core's event provider as new eventing parent to enable control event bubbling to the core to ensure compatibility with the core validation events.","!type":"fn() -> sap.ui.base.EventProvider","!category":"function","!static":false},"getUIArea":{"!description":"Returns this UI area. Needed to stop recursive calls from an element to its parent.","!type":"fn() -> sap.ui.core.UIArea","!category":"function","!static":false},"setRootNode":{"!description":"Allows setting the Root Node hosting this instance of <code>UIArea<\/code>.<br/> The Dom Ref must have an Id that will be used as Id for this instance of <code>UIArea<\/code>.","!type":"fn(oRootNode: Object)","!category":"function","parameters":{"oRootNode":"type: object, description: the hosting Dom Ref for this instance of <code>UIArea<\/code>."},"!static":false},"!module":"sap/ui/core/UIArea","destroyContent":{"!description":"Destroys all the content in the aggregation {@link #getContent content}.","!type":"fn() -> sap.ui.core.UIArea","!category":"function","!static":false},"getRootNode":{"!description":"Returns the Root Node hosting this instance of <code>UIArea<\/code>.","!type":"fn() -> Element","!category":"function","!static":false},"insertDependent":{"!description":"Inserts a dependent into the aggregation {@link #getDependents dependents}.","!type":"fn(oDependent: sap.ui.core.Control, iIndex: Number) -> sap.ui.core.UIArea","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the dependent should be inserted at; for a negative value of <code>iIndex<\/code>, the dependent is inserted at position 0; for a value greater than the current size of the aggregation, the dependent is inserted at the last position","oDependent":"type: sap.ui.core.Control, description: The dependent to insert; if empty, nothing is inserted"},"!static":false},"!category":"class","setRootControl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined use functions <code>removeAllContent<\/code> and <code>addContent<\/code> instead<br>Sets the root control to be displayed in this UIArea.\n\nFirst, all old content controls (if any) will be detached from this UIArea (e.g. their parent relationship to this UIArea will be cut off). Then the parent relationship for the new content control (if not empty) will be set to this UIArea and finally, the UIArea will be marked for re-rendering.\n\nThe real re-rendering happens whenever the re-rendering is called. Either implicitly at the end of any control event or by calling sap.ui.getCore().applyChanges().","!type":"fn(oRootControl: sap.ui.base.Interface | sap.ui.core.Control)","!category":"function","parameters":{"oRootControl":"type: sap.ui.base.Interface|sap.ui.core.Control, description: the Control that should be the Root for this <code>UIArea<\/code>."},"!static":false},"isInvalidateSuppressed":{"!description":"Returns whether rerendering is currently suppressed on this UIArea","!type":"fn()","!category":"function","!static":false},"getId":{"!description":"Returns this <code>UIArea<\/code>'s id (as determined from provided RootNode).","!type":"fn() -> String | null","!category":"function","!static":false},"removeAllDependents":{"!description":"Removes all the controls from the aggregation {@link #getDependents dependents}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"unlock":{"!description":"Un-Locks this instance of UIArea.\n\nRerendering and eventing will now be enabled again.","!type":"fn()","!category":"function","!static":false},"addContent":{"!description":"Adds some content to the aggregation {@link #getContent content}.","!type":"fn(oContent: sap.ui.core.Control) -> sap.ui.core.UIArea","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to add; if empty, nothing is inserted"},"!static":false},"removeAllContent":{"!description":"Removes all the controls from the aggregation {@link #getContent content}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getContent":{"!description":"Gets content of aggregation {@link #getContent content}.\n\nContent that is displayed in the UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.UIArea with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"lock":{"!description":"Locks this instance of UIArea.\n\nRerendering and eventing will not be active as long as no {@link #unlock} is called.","!type":"fn()","!category":"function","!static":false},"!constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<li>{@link #getDependents dependents} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","invalidate":{"!description":"Will be used as end-point for invalidate-bubbling from controls up their hierarchy.<br/> Triggers re-rendering of the UIAreas content.","!type":"fn()","!category":"function","!static":false},"isLocked":{"!description":"Returns the locked state of the <code>sap.ui.core.UIArea<\/code>","!type":"fn() -> Boolean","!category":"function","!static":false},"isActive":{"!description":"Checks whether the control is still valid (is in the DOM)","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"An area in a page that hosts a tree of UI elements.\n\nProvides means for event-handling, rerendering, etc.\n\nSpecial aggregation \"dependents\" is connected to the lifecycle management and databinding, but not rendered automatically and can be used for popups or other dependent controls. This allows definition of popup controls in declarative views and enables propagation of model and context information to them.","insertContent":{"!description":"Inserts a content into the aggregation {@link #getContent content}.","!type":"fn(oContent: sap.ui.core.Control, iIndex: Number) -> sap.ui.core.UIArea","!category":"function","parameters":{"oContent":"type: sap.ui.core.Control, description: The content to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the content should be inserted at; for a negative value of <code>iIndex<\/code>, the content is inserted at position 0; for a value greater than the current size of the aggregation, the content is inserted at the last position"},"!static":false},"getRootControl":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined use function <code>getContent<\/code> instead<br>Returns the content control of this <code>UIArea<\/code> at the specified index. If no index is given the first content control is returned.","!type":"fn(idx: Number) -> sap.ui.core.Control","!category":"function","parameters":{"idx":"type: int, description: index of the control in the content of this <code>UIArea<\/code>"},"!static":false},"getDependents":{"!description":"Gets content of aggregation {@link #getDependents dependents}.\n\nDependent objects whose lifecycle is bound to the UIarea but which are not automatically rendered by the UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"getBindingContext":{"!description":"Provide getBindingContext, as UIArea can be parent of an element.","!type":"fn() -> null","!category":"function","!static":false},"!proto":"sap.ui.base.ManagedObject","!helpDescription":"An area in a page that hosts a tree of UI elements.\n\nProvides means for event-handling, rerendering, etc.\n\nSpecial aggregation \"dependents\" is connected to the lifecycle management and databinding, but not rendered automatically and can be used for popups or other dependent controls. This allows definition of popup controls in declarative views and enables propagation of model and context information to them.","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.UIArea.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.model.odata.ODataContextBinding":{"!description":"The ContextBinding is a specific binding for a setting context for the model","extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.ODataContextBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.ContextBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for odata.ODataContextBinding","!module":"sap/ui/model/odata/ODataContextBinding","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.ODataContextBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.ContextBinding","!helpDescription":"The ContextBinding is a specific binding for a setting context for the model"},"sap.ui.model.ContextBinding":{"!description":"The ContextBinding is a specific binding for a setting context for the model","extend":{"!description":"Creates a new subclass of class sap.ui.model.ContextBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Binding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","getBoundContext":{"!description":"Return the bound context.","!type":"fn() -> sap.ui.model.Context","!category":"function","!static":false},"!constructorDescription":"Constructor for ContextBinding","!module":"sap/ui/model/ContextBinding","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.ContextBinding.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.Binding","!helpDescription":"The ContextBinding is a specific binding for a setting context for the model"},"sap.ui.test.matchers.Properties":{"!description":"Properties - checks if a control's properties have the provided values - all properties have to match their values.","!category":"class","!module":"sap/ui/test/matchers/Properties","!proto":"sap.ui.base.Object","!helpDescription":"Properties - checks if a control's properties have the provided values - all properties have to match their values."},"sap.ui.test.gherkin.qUnitTestHarness":{"!description":"Dynamically generates and executes QUnit tests based on a Gherkin feature file and step definitions\n\nLogs activity to QUnit, and some debug information to the console with the prefix \"[GHERKIN]\"","test":{"!description":"Dynamically generates and executes QUnit tests","!type":"fn(args: Object)","!category":"function","!static":"true"},"!category":"namespace","!module":"sap/ui/test/gherkin/qUnitTestHarness","!helpDescription":"Dynamically generates and executes QUnit tests based on a Gherkin feature file and step definitions\n\nLogs activity to QUnit, and some debug information to the console with the prefix \"[GHERKIN]\""},"sap.ui.core.EventBus_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.EventBus with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.core.EventBus"},"sap.ui.core.UIComponent_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.UIComponent with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Component.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.UIComponent"},"sap.ui.core.routing.HashChanger_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.routing.HashChanger with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn()","prototype":"sap.ui.core.routing.HashChanger"},"sap.ui.model.odata.type.DateTimeBase":{"!description":"This is an abstract base class for the OData primitive types <code>Edm.DateTime<\/code> and <code>Edm.DateTimeOffset<\/code>.","validateValue":{"!description":"Validates whether the given value in model representation is valid and meets the defined constraints.","!type":"fn(oValue: Date)","!category":"function","parameters":{"oValue":"type: Date, description: The value to be validated"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.DateTimeBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"formatValue":{"!description":"Formats the given value to the given target type.","!type":"fn(oValue: Date, sTargetType: String) -> Date | String","!category":"function","parameters":{"oValue":"type: Date, description: The value to be formatted, which is represented in the model as a <code>Date<\/code> instance (OData V2)","sTargetType":"type: string, description: The target type, may be \"any\", \"string\", or a type with one of these types as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}. See {@link sap.ui.model.odata.type} for more information."},"!static":false},"!category":"class","!constructorDescription":"Base constructor for the primitive types <code>Edm.DateTime<\/code> and\n<code>Edm.DateTimeOffset<\/code>.","!module":"sap/ui/model/odata/type/DateTimeBase","parseValue":{"!description":"Parses the given value to a <code>Date<\/code> instance (OData V2).","!type":"fn(sValue: String, sSourceType: String) -> Date","!category":"function","parameters":{"sValue":"type: string, description: The value to be parsed; the empty string and <code>null<\/code> are parsed to <code>null<\/code>","sSourceType":"type: string, description: The source type (the expected type of <code>sValue<\/code>), must be \"string\", or a type with \"string\" as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}. See {@link sap.ui.model.odata.type} for more information."},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.DateTimeBase.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.odata.type.ODataType","!helpDescription":"This is an abstract base class for the OData primitive types <code>Edm.DateTime<\/code> and <code>Edm.DateTimeOffset<\/code>."},"sap.ui.core.tmpl.Template":{"declareControl":{"!description":"Declares a new control based on this template and returns the created class / constructor function. The class is based on the information coming from the abstract functions <code>createMetadata<\/code> and <code>createRenderer<\/code>.","!type":"fn(sControl: String) -> fn()","!category":"function","parameters":{"sControl":"type: string, description: the fully qualified name of the control"},"!static":false},"getContent":{"!description":"Gets current value of property {@link #getContent content}.\n\nThe Template definition as a String.","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.tmpl.Template with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Creates and initializes a new template with the given <code>sId<\/code> and\nsettings.\n\nThe set of allowed entries in the <code>mSettings<\/code> object depends on\nthe concrete subclass and is described there.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContent content} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well.","setContent":{"!description":"Sets a new value for property {@link #getContent content}.\n\nThe Template definition as a String.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sContent: String) -> sap.ui.core.tmpl.Template","!category":"function","parameters":{"sContent":"type: string, description: New value for property <code>content<\/code>"},"!static":false},"!module":"sap/ui/core/tmpl/Template","placeAt":{"!description":"Creates an anonymous TemplateControl for the Template and places the control into the specified DOM element.","!type":"fn(oRef: String | DomRef, oContext?: Object, vPosition?: String | Number, bInline: Boolean) -> sap.ui.core.tmpl.TemplateControl","!category":"function","parameters":{"bInline":"type: boolean, description: undefined","vPosition":"type: string|int, description: Describes the position where the control should be put into the container","oRef":"type: string|DomRef, description: the id or the DOM reference where to render the template","oContext":"type: object, description: The context to use to evaluate the Template. It will be applied as value for the context property of the created control."},"!static":false},"!description":"Base Class for Template.","byId":{"!description":"Returns the registered template for the given ID, if any.","!type":"fn(sId: String) -> sap.ui.core.tmpl.Template","!category":"function","parameters":{"sId":"type: string, description: undefined"},"!static":true},"!category":"class","createControl":{"!description":"Creates an anonymous TemplateControl for the Template.","!type":"fn(sId: String, oContext?: Object, oView: sap.ui.core.mvc.View) -> sap.ui.core.tmpl.TemplateControl","!category":"function","parameters":{"oView":"type: sap.ui.core.mvc.View, description: undefined","sId":"type: string, description: the control ID","oContext":"type: object, description: the context for the renderer/templating"},"!static":false},"parsePath":{"!description":"parses the given path and extracts the model and path","!type":"fn(sPath: String) -> Object","!category":"function","parameters":{"sPath":"type: string, description: the path"},"!static":true},"getInterface":{"!type":"fn()","!category":"function","!static":false},"!helpDescription":"Base Class for Template.","!proto":"sap.ui.base.ManagedObject","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.tmpl.Template.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.base.ManagedObjectMetadata_obj":{"!type":"fn(sClassName: String, oClassInfo: Object)","prototype":"sap.ui.base.ManagedObjectMetadata"},"sap.ui.model.ChangeReason":{"Sort":{"!description":"The list was sorted","!type":"String","!category":"enum"},"Change":{"!description":"The list has changed","!type":"String","!category":"enum"},"Refresh":{"!description":"The list was refreshed","!type":"String","!category":"enum"},"Collapse":{"!description":"The tree node was collapsed","!type":"String","!category":"enum"},"!module":"sap/ui/model/ChangeReason","Filter":{"!description":"The List was filtered","!type":"String","!category":"enum"},"!description":"Change Reason for Model/ListBinding/TreeBinding.","Context":{"!description":"The list context has changed","!type":"String","!category":"enum"},"!category":"static class","Add":{"!description":"A context was added to a binding.","!type":"String","!category":"enum"},"Remove":{"!type":"String","!category":"enum"},"Binding":{"!description":"Binding changes a model property value","!type":"String","!category":"enum"},"Expand":{"!description":"The tree node was expanded","!type":"String","!category":"enum"}},"sap.ui.model.odata.type.Date_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Date with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.Date"},"sap.ui.model.json":{"JSONPropertyBinding":"sap.ui.model.json.JSONPropertyBinding_obj","JSONModel":"sap.ui.model.json.JSONModel_obj","!description":"JSON-based DataBinding","JSONTreeBinding":"sap.ui.model.json.JSONTreeBinding_obj","!category":"namespace","!module":"sap/ui/model/json/JSONModel","JSONListBinding":"sap.ui.model.json.JSONListBinding_obj","!helpDescription":"JSON-based DataBinding"},"sap.ui.core.routing.Route_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.routing.Route with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(The: sap.ui.core.routing.Router, oConfig: Object, oParent?: sap.ui.core.routing.Route)","prototype":"sap.ui.core.routing.Route"},"sap.ui.Device.browser":{"mozilla":{"!description":"If this flag is set to <code>true<\/code>, a browser featuring a Mozilla engine is used.","!type":"Boolean","!category":"enum"},"edge":{"!description":"If this flag is set to <code>true<\/code>, the Microsoft Edge browser is used.","!type":"Boolean","!category":"enum"},"firefox":{"!description":"If this flag is set to <code>true<\/code>, the Mozilla Firefox browser is used.","!type":"Boolean","!category":"enum"},"msie":{"!description":"If this flag is set to <code>true<\/code>, the Microsoft Internet Explorer browser is used.","!type":"Boolean","!category":"enum"},"webkit":{"!description":"If this flag is set to <code>true<\/code>, a browser featuring a Webkit engine is used.","!type":"Boolean","!category":"enum"},"BROWSER":"sap.ui.Device.browser.BROWSER","chrome":{"!description":"If this flag is set to <code>true<\/code>, the Google Chrome browser is used.","!type":"Boolean","!category":"enum"},"webview":{"!description":"If this flag is set to <code>true<\/code>, the Safari browser runs in webview mode on iOS.\n\n<b>Note:<\/b> This flag is only available if the Safari browser was detected. Furthermore, if this mode is detected, technically not a standard Safari is used. There might be slight differences in behavior and detection, e.g. the availability of {@link sap.ui.Device.browser.version}.","!type":"Boolean","!category":"enum"},"versionStr":{"!description":"The version of the browser as <code>string<\/code>.\n\nMight be empty if no version can be determined.","!type":"String","!category":"enum"},"!module":"sap/ui/Device","version":{"!description":"The version of the browser as <code>float<\/code>.\n\nMight be <code>-1<\/code> if no version can be determined.","!type":"Number","!category":"enum"},"fullscreen":{"!description":"If this flag is set to <code>true<\/code>, the Safari browser runs in standalone fullscreen mode on iOS.\n\n<b>Note:<\/b> This flag is only available if the Safari browser was detected. Furthermore, if this mode is detected, technically not a standard Safari is used. There might be slight differences in behavior and detection, e.g. the availability of {@link sap.ui.Device.browser.version}.","!type":"Boolean","!category":"enum"},"!description":"Contains information about the used browser.","safari":{"!description":"If this flag is set to <code>true<\/code>, the Apple Safari browser is used.\n\n<b>Note:<\/b> This flag is also <code>true<\/code> when the standalone (fullscreen) mode or webview is used on iOS devices. Please also note the flags {@link sap.ui.Device.browser.fullscreen} and {@link sap.ui.Device.browser.webview}.","!type":"Boolean","!category":"enum"},"name":{"!description":"The name of the browser.","!type":"String","!category":"enum"},"!category":"namespace","internet_explorer":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20 use {@link sap.ui.Device.browser.msie} instead.<br>If this flag is set to <code>true<\/code>, the Microsoft Internet Explorer browser is used.","!type":"Boolean","!category":"enum"},"!helpDescription":"Contains information about the used browser.","mobile":{"!description":"If this flag is set to <code>true<\/code>, the mobile variant of the browser is used or a tablet or phone device is detected.\n\n<b>Note:<\/b> This information might not be available for all browsers.","!type":"Boolean","!category":"enum"}},"sap.ui.core.Item_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.Item with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.Item"},"sap.ui.model.odata.type.Stream":{"!description":"This class represents the OData V4 primitive type {@link http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part3-csdl/odata-v4.0-errata02-os-part3-csdl-complete.html#_The_edm:Documentation_Element <code>Edm.Stream<\/code>}. The values for stream properties do not appear in the entity payload. Instead, the values are read or written through URLs.\n\nThis type only supports reading streams. For this purpose bind the stream property to a control property of type <code>sap.ui.core.URI<\/code>. {#formatValue} will then deliver the correct URL to read the stream.","validateValue":{"!description":"Method not supported","!type":"fn()","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Stream with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function","!static":false},"formatValue":{"!description":"Returns the input value unchanged.","!type":"fn(sValue: String, sTargetType: String) -> String","!category":"function","parameters":{"sValue":"type: string, description: the read URL","sTargetType":"type: string, description: The target type; must be \"any\" or \"string\""},"!static":false},"!category":"class","!constructorDescription":"Constructor for an OData primitive type <code>Edm.Stream<\/code>.","!module":"sap/ui/model/odata/type/Stream","parseValue":{"!description":"Method not supported","!type":"fn()","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.Stream.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.odata.type.ODataType","!helpDescription":"This class represents the OData V4 primitive type {@link http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part3-csdl/odata-v4.0-errata02-os-part3-csdl-complete.html#_The_edm:Documentation_Element <code>Edm.Stream<\/code>}. The values for stream properties do not appear in the entity payload. Instead, the values are read or written through URLs.\n\nThis type only supports reading streams. For this purpose bind the stream property to a control property of type <code>sap.ui.core.URI<\/code>. {#formatValue} will then deliver the correct URL to read the stream."},"sap.ui.model.analytics.odata4analytics.FilterExpression_obj":{"!type":"fn(oModel: Object, oSchema: Object, oEntityType: sap.ui.model.analytics.odata4analytics.EntityType)","prototype":"sap.ui.model.analytics.odata4analytics.FilterExpression"},"sap.ui.model.CompositeType":{"!description":"This is an abstract base class for composite types. Composite types have multiple input values and know how to merge/split them upon formatting/parsing the value. Typical use case a currency or amount values.\n\nSubclasses of CompositeTypes can define boolean properties in the constructor: - bUseRawValues: the format and parse method will handle raw model values, types of embedded bindings are ignored - bParseWithValues: the parse method call will include the current binding values as a third parameter","validateValue":{"!description":"Validate whether a given value in model representation is valid and meets the defined constraints (if any).","!type":"fn(aValues: Array)","!category":"function","parameters":{"aValues":"type: array, description: the set of values to be validated"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.CompositeType with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"formatValue":{"!description":"Format the given set of values in model representation to an output value in the given internal type. This happens according to the format options, if target type is 'string'. If aValues is not defined or null, null will be returned.","!type":"fn(aValues: Array, sInternalType: String) -> Object","!category":"function","parameters":{"aValues":"type: array, description: the values to be formatted","sInternalType":"type: string, description: the target type"},"!static":false},"!category":"class","!constructorDescription":"Constructor for a new CompositeType.","!module":"sap/ui/model/CompositeType","parseValue":{"!description":"Parse a value of an internal type to the expected set of values of the model type.","!type":"fn(oValue: Object, sInternalType: String, aCurrentValues: Array) -> Array","!category":"function","parameters":{"aCurrentValues":"type: array, description: the current values of all binding parts","oValue":"type: any, description: the value to be parsed","sInternalType":"type: string, description: the source type"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.CompositeType.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.SimpleType","!helpDescription":"This is an abstract base class for composite types. Composite types have multiple input values and know how to merge/split them upon formatting/parsing the value. Typical use case a currency or amount values.\n\nSubclasses of CompositeTypes can define boolean properties in the constructor: - bUseRawValues: the format and parse method will handle raw model values, types of embedded bindings are ignored - bParseWithValues: the parse method call will include the current binding values as a third parameter"},"sap.ui.test.matchers.AggregationEmpty_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.test.matchers.AggregationEmpty with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(mSettings: Object)","prototype":"sap.ui.test.matchers.AggregationEmpty"},"sap.ui.core.dnd.DragDropBase_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.dnd.DragDropBase with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.dnd.DragDropBase"},"sap.ui.core.util.serializer.ViewSerializer":{"!description":"ViewSerializer class.","extend":{"!description":"Creates a new subclass of class sap.ui.core.util.serializer.ViewSerializer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.EventProvider.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"View serializer class. Iterates over all controls and serializes all found views by calling the corresponding view type serializer.","!module":"sap/ui/core/util/serializer/ViewSerializer","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.util.serializer.ViewSerializer.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.base.EventProvider","!helpDescription":"ViewSerializer class."},"sap.ui.model.Type":{"!description":"This is an abstract base class for type objects.","extend":{"!description":"Creates a new subclass of class sap.ui.model.Type with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getName":{"!description":"Returns the name of this type.","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","toString":{"!description":"Returns a simple string representation of this type.\n\nMainly useful for tracing purposes.","!type":"function toString() { [native code for Array.toString, arity=0] }\n) -> String","!category":"function","!static":false},"!constructorDescription":"Constructor for a new Type.","!module":"sap/ui/model/Type","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.Type.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.base.Object","!helpDescription":"This is an abstract base class for type objects."},"sap.ui.core.Scrolling":{"!description":"Defines the possible values for horizontal and vertical scrolling behavior.","Auto":{"!description":"A scroll bar is shown if the content requires more space than the given space (rectangle) provides.","!type":"String","!category":"enum"},"!category":"static class","Hidden":{"!description":"No scroll bar is shown, and the content stays in the given rectangle.","!type":"String","!category":"enum"},"None":{"!description":"No scroll bar provided even if the content is larger than the available space.","!type":"String","!category":"enum"},"!module":"sap/ui/core/library","Scroll":{"!description":"A scroll bar is always shown even if the space is large enough for the current content.","!type":"String","!category":"enum"}},"jQuery.sap.util":{"UriParameters":"jQuery.sap.util.UriParameters","ResourceBundle":"jQuery.sap.util.ResourceBundle","!category":"namespace","Properties":"jQuery.sap.util.Properties"},"sap.ui.model.type.Integer_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.type.Integer with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.type.Integer"},"sap.ui.test.OpaPlugin":{"extend":{"!description":"Creates a new subclass of class sap.ui.test.OpaPlugin with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getAllControls":{"!description":"Gets all the controls of a certain type that are currently instantiated. If the control type is omitted, nothing is returned.","!type":"fn(fnConstructorType?: fn(), sControlType?: String) -> Array","!category":"function","parameters":{"fnConstructorType":"type: function, description: the control type, e.g: sap.m.CheckBox","sControlType":"type: string, description: optional control type name, e.g: \"sap.m.CheckBox\""},"!static":false},"!module":"sap/ui/test/OpaPlugin","getView":{"!description":"Returns the view with a specific name - if there are multiple views with that name only the first one is returned.","!type":"fn(sViewName: String) -> sap.ui.core.mvc.View","!category":"function","parameters":{"sViewName":"type: string, description: the name of the view"},"!static":false},"!description":"A Plugin to search UI5 controls.","getMatchingControls":{"!description":"Tries to find a control depending on the options provided.","!type":"fn(oOptions?: Object) -> [sap.ui.core.Element | [object Object]]","!category":"function","parameters":{"oOptions":"type: object, description: a map of options used to describe the control you are looking for."},"!static":false},"!category":"class","getControlConstructor":{"!description":"Gets the constructor function of a certain controlType","!type":"fn(sControlType: String) -> null | fn()","!category":"function","parameters":{"sControlType":"type: string, description: the name of the type eg: \"sap.m.Button\""},"!static":false},"getControlInView":{"!description":"Gets a control inside of the view (same as calling oView.byId) If no ID is provided, it will return all the controls inside of a view (also nested views and their children).<br/> eg : { id : \"foo\" } will search globally for a control with the ID foo<br/> eg : { id : \"foo\" , viewName : \"bar\" } will search for a control with the ID foo inside the view with the name bar<br/> eg : { viewName : \"bar\" } will return all the controls inside the view with the name bar<br/> eg : { viewName : \"bar\", controlType : sap.m.Button } will return all the Buttons inside a view with the name bar<br/> eg : { viewName : \"bar\", viewNamespace : \"baz.\" } will return all the Controls in the view with the name baz.bar<br/>","!type":"fn(oOptions: Object) -> [sap.ui.core.Element | [object Object]]","!category":"function","parameters":{"oOptions":"type: object, description: that may contain a viewName, id, viewNamespace and controlType properties."},"!static":false},"getControlByGlobalId":{"!description":"Returns a control by its ID. Accepts an object with properties id and controlType. The id property can be string, regex or array of strings and is recommended to exist. The controlType property is optional and will ensure the returned control is of a certain type. <ul> <li>a single string - function will return the control instance or null<\/li> <li>an array of strings - function will return an array of found controls or an empty array<\/li> <li>a regexp - function will return an array of found controls or an empty array<\/li> <\/ul>","!type":"fn(oOptions: undefined) -> [[object Object]]","!category":"function","parameters":{"oOptions":"type: undefined, description: should contain an ID property which can be of the type string, regex or array of strings. Can contain optional controlType property."},"!static":false},"!helpDescription":"A Plugin to search UI5 controls.","!proto":"sap.ui.base.Object","getMetadata":{"!description":"Returns a metadata object for class sap.ui.test.OpaPlugin.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.model.Context":{"getModel":{"!description":"Getter for model","!type":"fn() -> sap.ui.model.Model","!category":"function","!static":false},"!description":"The Context is a pointer to an object in the model data, which is used to allow definition of relative bindings, which are resolved relative to the defined object. Context elements are created either by the ListBinding for each list entry or by using createBindingContext.","extend":{"!description":"Creates a new subclass of class sap.ui.model.Context with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getProperty":{"!description":"Gets the property with the given relative binding path","!type":"fn(sPath: String) -> Object","!category":"function","parameters":{"sPath":"type: string, description: the binding path"},"!static":false},"getPath":{"!description":"Getter for path of the context itself or a subpath","!type":"fn(sPath?: String) -> String","!category":"function","parameters":{"sPath":"type: string, description: the binding path (optional)"},"!static":false},"!category":"class","!constructorDescription":"Constructor for Context class.","!module":"sap/ui/model/Context","getObject":{"!description":"Gets the (model dependent) object the context points to or the object with the given relative binding path","!type":"fn(sPath?: String, mParameters?: Object) -> Object","!category":"function","parameters":{"mParameters":"type: object, description: additional model specific parameters (optional)","sPath":"type: string, description: the binding path"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.Context.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.base.Object","!helpDescription":"The Context is a pointer to an object in the model data, which is used to allow definition of relative bindings, which are resolved relative to the defined object. Context elements are created either by the ListBinding for each list entry or by using createBindingContext."},"sap.ui.model.odata.type.Decimal_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Decimal with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.odata.type.Decimal"},"sap.ui.test.matchers.LabelFor":{"setModelName":{"!description":"Sets a new value for property {@link #getModelName modelName}.\n\nThe name of the {@link sap.ui.model.resource.ResourceModel} assigned to the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>i18n<\/code>.","!type":"fn(sModelName: String) -> sap.ui.test.matchers.LabelFor","!category":"function","parameters":{"sModelName":"type: string, description: New value for property <code>modelName<\/code>"},"!static":false},"getKey":{"!description":"Gets current value of property {@link #getKey key}.\n\nThe key of the I18N text in the containing {@link jQuery.sap.util.ResourceBundle}.","!type":"fn() -> String","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.test.matchers.LabelFor with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Accepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getModelName modelName} : string (default: i18n)<\/li>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getParameters parameters} : any<\/li>\n<li>{@link #getPropertyName propertyName} : string (default: text)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.test.matchers.Matcher#constructor sap.ui.test.matchers.Matcher}\ncan be used as well.","setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nThe text of the {@link sap.m.Label} which have the labelFor property.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sText: String) -> sap.ui.test.matchers.LabelFor","!category":"function","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"},"!static":false},"!module":"sap/ui/test/matchers/LabelFor","getModelName":{"!description":"Gets current value of property {@link #getModelName modelName}.\n\nThe name of the {@link sap.ui.model.resource.ResourceModel} assigned to the control.\n\nDefault value is <code>i18n<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"setKey":{"!description":"Sets a new value for property {@link #getKey key}.\n\nThe key of the I18N text in the containing {@link jQuery.sap.util.ResourceBundle}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sKey: String) -> sap.ui.test.matchers.LabelFor","!category":"function","parameters":{"sKey":"type: string, description: New value for property <code>key<\/code>"},"!static":false},"isMatching":{"!description":"Checks for control with labelFor property annotating other control","!type":"fn(oControl: sap.ui.core.Control) -> Boolean","!category":"function","parameters":{"oControl":"type: sap.ui.core.Control, description: the control that is checked by the matcher"},"!static":false},"setPropertyName":{"!description":"Sets a new value for property {@link #getPropertyName propertyName}.\n\nThe name of the control property to match the I18N text with.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>text<\/code>.","!type":"fn(sPropertyName: String) -> sap.ui.test.matchers.LabelFor","!category":"function","parameters":{"sPropertyName":"type: string, description: New value for property <code>propertyName<\/code>"},"!static":false},"setParameters":{"!description":"Sets a new value for property {@link #getParameters parameters}.\n\nThe parameters for replacing the placeholders of the I18N text. See {@link jQuery.sap.util.ResourceBundle#getText}.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(oParameters: Object) -> sap.ui.test.matchers.LabelFor","!category":"function","parameters":{"oParameters":"type: any, description: New value for property <code>parameters<\/code>"},"!static":false},"getParameters":{"!description":"Gets current value of property {@link #getParameters parameters}.\n\nThe parameters for replacing the placeholders of the I18N text. See {@link jQuery.sap.util.ResourceBundle#getText}.","!type":"fn() -> Object","!category":"function","!static":false},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nThe text of the {@link sap.m.Label} which have the labelFor property.","!type":"fn() -> String","!category":"function","!static":false},"!description":"The LabelFor matcher searches for given control associated with labelFor property. The matcher does automatically <ul> <li> retrieve control associated by label by given text <\/li> <li> retrieve control associated by label by given i18n key, modelName, parameters or propertyName. See {@link sap.ui.test.matchers.I18NText} <\/li> <li> combination of text and key is not possible <\/li> <\/ul>","getPropertyName":{"!description":"Gets current value of property {@link #getPropertyName propertyName}.\n\nThe name of the control property to match the I18N text with.\n\nDefault value is <code>text<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","!helpDescription":"The LabelFor matcher searches for given control associated with labelFor property. The matcher does automatically <ul> <li> retrieve control associated by label by given text <\/li> <li> retrieve control associated by label by given i18n key, modelName, parameters or propertyName. See {@link sap.ui.test.matchers.I18NText} <\/li> <li> combination of text and key is not possible <\/li> <\/ul>","!proto":"sap.ui.test.matchers.Matcher","getMetadata":{"!description":"Returns a metadata object for class sap.ui.test.matchers.LabelFor.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.test.matchers.AggregationLengthEquals_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.test.matchers.AggregationLengthEquals with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.test.matchers.Matcher.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(mSettings: Object)","prototype":"sap.ui.test.matchers.AggregationLengthEquals"},"sap.ui.core.tmpl.Template_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.tmpl.Template with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.ManagedObject.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.tmpl.Template"},"sap.ui.core.mvc.JSView":{"!description":"A View defined/constructed by JavaScript code.","getAutoPrefixId":{"!description":"A method to be implemented by JSViews, returning the flag whether to prefix the IDs of controls automatically or not if the controls are created inside the {@link sap.ui.core.mvc.JSView#createContent} function. By default this feature is not activated.\n\nYou can overwrite this function and return true to activate the automatic prefixing.","!type":"fn() -> Boolean","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.mvc.JSView with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.mvc.View.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"createContent":{"!description":"A method to be implemented by JSViews, returning the View UI. While for declarative View types like XMLView or JSONView the user interface definition is declared in a separate file, JSViews programmatically construct the UI. This happens in the createContent method which every JSView needs to implement. The View implementation can construct the complete UI in this method - or only return the root control and create the rest of the UI lazily later on.","!type":"fn() -> sap.ui.core.Control","!category":"function","!static":false},"!category":"class","!constructorDescription":"Constructor for a new mvc/JSView.","!module":"sap/ui/core/mvc/JSView","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.mvc.JSView.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.mvc.View","!helpDescription":"A View defined/constructed by JavaScript code."},"sap.ui.model.json.JSONListBinding":{"!description":"List binding implementation for JSON format.","getContexts":{"!description":"Return contexts for the list or a specified subset of contexts","!type":"fn(iStartIndex?: Number, iLength?: Number) -> Array","!category":"function","parameters":{"iLength":"type: int, description: determines how many contexts to retrieve beginning from the start index. Default is the whole list length.","iStartIndex":"type: int, description: the startIndex where to start the retrieval of contexts"},"!static":false},"!category":"class","!constructorDescription":"Creates a new JSONListBinding.\n\nThis constructor should only be called by subclasses or model implementations, not by application or control code.\nSuch code should use {@link sap.ui.model.json.JSONModel#bindList JSONModel#bindList} on the corresponding model instance instead.","!module":"sap/ui/model/json/JSONListBinding","!proto":"sap.ui.model.ClientListBinding","!helpDescription":"List binding implementation for JSON format."},"sap.ui.model.type.DateTime_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.type.DateTime with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.type.Date.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oFormatOptions?: Object, oConstraints?: Object)","prototype":"sap.ui.model.type.DateTime"},"sap.ui.core.IFormContent":{"!description":"Marker interface for controls that can be used as content of <code>sap.ui.layout.form.Form<\/code> or <code>sap.ui.layout.form.SimpleForm<\/code>.\n\nIf the control's width must not be adjusted by the <code>Form<\/code> control to meet the cell's width, the control must implement the <code>getFormDoNotAdjustWidth<\/code> function and return <code>true<\/code>.","!category":"static class","!module":"sap/ui/core/library"},"sap.ui.model.xml.XMLTreeBinding":{"!description":"Tree binding implementation for XML format","getNodeContexts":{"!description":"Return node contexts for the tree","!type":"fn(oContext: Object, iStartIndex: Number, iLength: Number) -> Array","!category":"function","parameters":{"iLength":"type: int, description: determines how many contexts to retrieve beginning from the start index.","iStartIndex":"type: int, description: the startIndex where to start the retrieval of contexts","oContext":"type: object, description: to use for retrieving the node contexts"},"!static":false},"!category":"class","!module":"sap/ui/model/xml/XMLTreeBinding","!proto":"sap.ui.model.ClientTreeBinding","!helpDescription":"Tree binding implementation for XML format"},"sap.ui.model.ClientModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.ClientModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oData?: String)","prototype":"sap.ui.model.ClientModel"},"sap.ui.core.ScrollBar":{"fireScroll":{"!description":"Fires event {@link #event:scroll scroll} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.ui.core.ScrollBar","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getScrollPosition":{"!description":"Gets current value of property {@link #getScrollPosition scrollPosition}.\n\nScroll position in steps or pixels.","!type":"fn() -> Number","!category":"function","!static":false},"!module":"sap/ui/core/ScrollBar","!category":"class","attachScroll":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:scroll scroll} event of this <code>sap.ui.core.ScrollBar<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.ui.core.ScrollBar<\/code> itself.\n\nScroll event.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.ui.core.ScrollBar","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.ui.core.ScrollBar<\/code> itself"},"!static":false},"getSize":{"!description":"Gets current value of property {@link #getSize size}.\n\nSize of the Scrollbar (in pixels).","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"pageUp":{"!description":"Page Up is used to scroll one page back.","!type":"fn()","!category":"function","!static":false},"setVertical":{"!description":"Sets a new value for property {@link #getVertical vertical}.\n\nOrientation. Defines if the Scrollbar is vertical or horizontal.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVertical: Boolean) -> sap.ui.core.ScrollBar","!category":"function","parameters":{"bVertical":"type: boolean, description: New value for property <code>vertical<\/code>"},"!static":false},"setSize":{"!description":"Sets a new value for property {@link #getSize size}.\n\nSize of the Scrollbar (in pixels).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sSize: sap.ui.core.CSSSize) -> sap.ui.core.ScrollBar","!category":"function","parameters":{"sSize":"type: sap.ui.core.CSSSize, description: New value for property <code>size<\/code>"},"!static":false},"getContentSize":{"!description":"Gets current value of property {@link #getContentSize contentSize}.\n\nSize of the scrollable content (in pixels).","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.ScrollBar with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setScrollPosition":{"!description":"Sets a new value for property {@link #getScrollPosition scrollPosition}.\n\nScroll position in steps or pixels.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(iScrollPosition: Number) -> sap.ui.core.ScrollBar","!category":"function","parameters":{"iScrollPosition":"type: int, description: New value for property <code>scrollPosition<\/code>"},"!static":false},"detachScroll":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:scroll scroll} event of this <code>sap.ui.core.ScrollBar<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.ui.core.ScrollBar","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"unbind":{"!description":"Unbinds the mouse wheel scroll event of the control that has the scrollbar","!type":"fn(oOwnerDomRef: String)","!category":"function","parameters":{"oOwnerDomRef":"type: string, description: Dom ref of the Control that uses the scrollbar"},"!static":false},"!constructorDescription":"Constructor for a new ScrollBar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVertical vertical} : boolean (default: true)<\/li>\n<li>{@link #getScrollPosition scrollPosition} : int<\/li>\n<li>{@link #getSize size} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getContentSize contentSize} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getSteps steps} : int<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:scroll scroll} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","!description":"The ScrollBar control can be used for virtual scrolling of a certain area. This means: to simulate a very large scrollable area when technically the area is small and the control takes care of displaying the respective part only. E.g. a Table control can take care of only rendering the currently visible rows and use this ScrollBar control to make the user think he actually scrolls through a long list.","getSteps":{"!description":"Gets current value of property {@link #getSteps steps}.\n\nNumber of steps to scroll. Used if the size of the content is not known as the data is loaded dynamically.","!type":"fn() -> Number","!category":"function","!static":false},"setSteps":{"!description":"Sets a new value for property {@link #getSteps steps}.\n\nNumber of steps to scroll. Used if the size of the content is not known as the data is loaded dynamically.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(iSteps: Number) -> sap.ui.core.ScrollBar","!category":"function","parameters":{"iSteps":"type: int, description: New value for property <code>steps<\/code>"},"!static":false},"getVertical":{"!description":"Gets current value of property {@link #getVertical vertical}.\n\nOrientation. Defines if the Scrollbar is vertical or horizontal.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"pageDown":{"!description":"Page Down is used to scroll one page forward.","!type":"fn()","!category":"function","!static":false},"bind":{"!description":"Binds the mouse wheel scroll event of the control that has the scrollbar to the scrollbar itself.","!type":"fn(oOwnerDomRef: String)","!category":"function","parameters":{"oOwnerDomRef":"type: string, description: Dom ref of the control that uses the scrollbar"},"!static":false},"setContentSize":{"!description":"Sets a new value for property {@link #getContentSize contentSize}.\n\nSize of the scrollable content (in pixels).\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sContentSize: sap.ui.core.CSSSize) -> sap.ui.core.ScrollBar","!category":"function","parameters":{"sContentSize":"type: sap.ui.core.CSSSize, description: New value for property <code>contentSize<\/code>"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.ScrollBar.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Control","!helpDescription":"The ScrollBar control can be used for virtual scrolling of a certain area. This means: to simulate a very large scrollable area when technically the area is small and the control takes care of displaying the respective part only. E.g. a Table control can take care of only rendering the currently visible rows and use this ScrollBar control to make the user think he actually scrolls through a long list."},"sap.ui.core.InvisibleText":{"toStatic":{"!description":"Adds <code>this<\/code> control into the static, hidden area UI area container.","!type":"fn() -> sap.ui.core.InvisibleText","!category":"function","!static":false},"setBusyIndicatorSize":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Local BusyIndicator is not supported by control.<br>undefined","!type":"fn() -> sap.ui.core.InvisibleText","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.core.InvisibleText with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setVisible":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Property visible is not supported by control.<br>undefined","!type":"fn() -> sap.ui.core.InvisibleText","!category":"function","!static":false},"setBusyIndicatorDelay":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Local BusyIndicator is not supported by control.<br>undefined","!type":"fn() -> sap.ui.core.InvisibleText","!category":"function","!static":false},"!constructorDescription":"Constructor for a new InvisibleText.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","setText":{"!description":"Sets a new value for property {@link #getText text}.\n\nThe text of the InvisibleText.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>empty string<\/code>.","!type":"fn(sText: String) -> sap.ui.core.InvisibleText","!category":"function","parameters":{"sText":"type: string, description: New value for property <code>text<\/code>"},"!static":false},"!module":"sap/ui/core/InvisibleText","getStaticId":{"!description":"Returns the ID of a shared <code>InvisibleText<code> instance whose <code>text<\/code> property is retrieved from the given library resource bundle and text key.\n\nCalls with the same library and text key will return the same instance. The instance will be rendered statically.\n\nWhen accessibility has been switched off by configuration or when the text key is empty or falsy, no ID will be returned.","!type":"fn(sLibrary: String, sTextKey?: String) -> sap.ui.core.ID","!category":"function","parameters":{"sTextKey":"type: string, description: Key of the text to retrieve from the resource bundle","sLibrary":"type: string, description: Name of the library to load the resource bundle for"},"!static":true},"getText":{"!description":"Gets current value of property {@link #getText text}.\n\nThe text of the InvisibleText.\n\nDefault value is <code>empty string<\/code>.","!type":"fn() -> String","!category":"function","!static":false},"!description":"An InvisibleText is used to bring hidden texts to the UI for screen reader support. The hidden text can e.g. be referenced in the ariaLabelledBy or ariaDescribedBy associations of other controls.\n\nThe inherited properties busy, busyIndicatorDelay and visible and the aggregation tooltip is not supported by this control.","setTooltip":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Tooltip is not supported by control.<br>undefined","!type":"fn() -> sap.ui.core.InvisibleText","!category":"function","!static":false},"!category":"class","setBusy":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Local BusyIndicator is not supported by control.<br>undefined","!type":"fn() -> sap.ui.core.InvisibleText","!category":"function","!static":false},"!helpDescription":"An InvisibleText is used to bring hidden texts to the UI for screen reader support. The hidden text can e.g. be referenced in the ariaLabelledBy or ariaDescribedBy associations of other controls.\n\nThe inherited properties busy, busyIndicatorDelay and visible and the aggregation tooltip is not supported by this control.","!proto":"sap.ui.core.Control","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.InvisibleText.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.ui.model.Context_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.Context with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.base.Object.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oModel: sap.ui.model.Model, sPath: String)","prototype":"sap.ui.model.Context"},"sap.ui.test.Opa_obj":{"!type":"fn(extensionObject?: Object)","prototype":"sap.ui.test.Opa"},"sap.ui.model.odata.type.Boolean":{"!description":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Boolean<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>boolean<\/code>.","validateValue":{"!description":"Validates whether the given value in model representation is valid and meets the given constraints.","!type":"fn(bValue: Boolean)","!category":"function","parameters":{"bValue":"type: boolean, description: the value to be validated"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.Boolean with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.ODataType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function","!static":false},"formatValue":{"!description":"Formats the given boolean value to the given target type.","!type":"fn(bValue: Boolean, sTargetType: String) -> Boolean | String","!category":"function","parameters":{"bValue":"type: boolean, description: the value to be formatted","sTargetType":"type: string, description: the target type; may be \"any\", \"boolean\", \"string\", or a type with one of these types as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}. If the target type (or its primitive type) is \"string\", the result is \"Yes\" or \"No\" in the current {@link sap.ui.core.Configuration#getLanguage language}. See {@link sap.ui.model.odata.type} for more information."},"!static":false},"!category":"class","!constructorDescription":"Constructor for an OData primitive type <code>Edm.Boolean<\/code>.","!module":"sap/ui/model/odata/type/Boolean","parseValue":{"!description":"Parses the given value from the given type to a boolean.","!type":"fn(vValue: Boolean | String, sSourceType: String) -> Boolean","!category":"function","parameters":{"sSourceType":"type: string, description: the source type (the expected type of <code>vValue<\/code>); may be \"boolean\", \"string\", or a type with one of these types as its {@link sap.ui.base.DataType#getPrimitiveType primitive type}. See {@link sap.ui.model.odata.type} for more information.","vValue":"type: boolean|string, description: the value to be parsed; the empty string and <code>null<\/code> are parsed to <code>null<\/code>"},"!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.Boolean.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.odata.type.ODataType","!helpDescription":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.Boolean<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>boolean<\/code>."},"jQuery.sap.log":{"getLog":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.1.2 To avoid confusion with getLogger, this method has been renamed to {@link jQuery.sap.log.getLogEntries}.<br>Retrieves the currently recorded log entries.","!type":"fn()","!category":"function","!static":"true"},"LogLevel":"jQuery.sap.log.LogLevel","setLevel":{"!description":"Defines the maximum <code>jQuery.sap.log.Level<\/code> of log entries that will be recorded. Log entries with a higher (less important) log level will be omitted from the log. When a component name is given, the log level will be configured for that component only, otherwise the log level for the default component of this logger is set. For the global logger, the global default level is set.\n\n<b>Note<\/b>: Setting a global default log level has no impact on already defined component log levels. They always override the global default log level.","!type":"fn(iLogLevel: jQuery.sap.log.Level, sComponent?: String) -> jQuery.sap.log.Logger","!category":"function","!static":"true"},"error":{"!description":"Creates a new error-level entry in the log with the given message, details and calling component.","!type":"fn(sMessage: String, sDetails?: String, sComponent?: String, fnSupportInfo?: fn()) -> jQuery.sap.log.Logger","!category":"function","!static":"true"},"getLogEntries":{"!description":"Returns the logged entries recorded so far as an array.\n\nLog entries are plain JavaScript objects with the following properties <ul> <li>timestamp {number} point in time when the entry was created<\/li> <li>level {int} LogLevel level of the entry<\/li> <li>message {string} message text of the entry<\/li> <\/ul>","!type":"fn() -> [[object Object]]","!category":"function","!static":"true"},"trace":{"!description":"Creates a new trace-level entry in the log with the given message, details and calling component.","!type":"fn(sMessage: String, sDetails?: String, sComponent?: String, fnSupportInfo?: fn()) -> jQuery.sap.log.Logger","!category":"function","!static":"true"},"fatal":{"!description":"Creates a new fatal-level entry in the log with the given message, details and calling component.","!type":"fn(sMessage: String, sDetails?: String, sComponent?: String, fnSupportInfo?: fn()) -> jQuery.sap.log.Logger","!category":"function","!static":"true"},"removeLogListener":{"!description":"Allows to remove a registered LogListener.","!type":"fn(oListener: Object) -> jQuery.sap.log","!category":"function","!static":"true"},"getLogger":{"!description":"Returns a {@link jQuery.sap.log.Logger} for the given component.\n\nThe method might or might not return the same logger object across multiple calls. While loggers are assumed to be light weight objects, consumers should try to avoid redundant calls and instead keep references to already retrieved loggers.\n\nThe optional second parameter <code>iDefaultLogLevel<\/code> allows to specify a default log level for the component. It is only applied when no log level has been defined so far for that component (ignoring inherited log levels). If this method is called multiple times for the same component but with different log levels, only the first call one might be taken into account.","!type":"fn(sComponent: String, iDefaultLogLevel?: Number) -> jQuery.sap.log.Logger","!category":"function","!static":"true"},"debug":{"!description":"Creates a new debug-level entry in the log with the given message, details and calling component.","!type":"fn(sMessage: String, sDetails?: String, sComponent?: String, fnSupportInfo?: fn()) -> jQuery.sap.log.Logger","!category":"function","!static":"true"},"!module":"jquery.sap.global","isLoggable":{"!description":"Checks whether logging is enabled for the given log level, depending on the currently effective log level for the given component.\n\nIf no component is given, the default component of this logger will be taken into account.","!type":"fn(iLevel?: Number, sComponent?: String) -> Boolean","!category":"function","!static":"true"},"Logger":"jQuery.sap.log.Logger_obj","info":{"!description":"Creates a new info-level entry in the log with the given message, details and calling component.","!type":"fn(sMessage: String, sDetails?: String, sComponent?: String, fnSupportInfo?: fn()) -> jQuery.sap.log.Logger","!category":"function","!static":"true"},"!description":"A Logging API for JavaScript.\n\nProvides methods to manage a client-side log and to create entries in it. Each of the logging methods {@link jQuery.sap.log.debug}, {@link jQuery.sap.log.info}, {@link jQuery.sap.log.warning}, {@link jQuery.sap.log.error} and {@link jQuery.sap.log.fatal} creates and records a log entry, containing a timestamp, a log level, a message with details and a component info. The log level will be one of {@link jQuery.sap.log.Level} and equals the name of the concrete logging method.\n\nBy using the {@link jQuery.sap.log.setLevel} method, consumers can determine the least important log level which should be recorded. Less important entries will be filtered out. (Note that higher numeric values represent less important levels). The initially set level depends on the mode that UI5 is running in. When the optimized sources are executed, the default level will be {@link jQuery.sap.log.Level.ERROR}. For normal (debug sources), the default level is {@link jQuery.sap.log.Level.DEBUG}.\n\nAll logging methods allow to specify a <b>component<\/b>. These components are simple strings and don't have a special meaning to the UI5 framework. However they can be used to semantically group log entries that belong to the same software component (or feature). There are two APIs that help to manage logging for such a component. With <code>{@link jQuery.sap.log.getLogger}(sComponent)<\/code>, one can retrieve a logger that automatically adds the given <code>sComponent<\/code> as component parameter to each log entry, if no other component is specified. Typically, JavaScript code will retrieve such a logger once during startup and reuse it for the rest of its lifecycle. Second, the {@link jQuery.sap.log.Logger#setLevel}(iLevel, sComponent) method allows to set the log level for a specific component only. This allows a more fine granular control about the created logging entries. {@link jQuery.sap.log.Logger#getLevel} allows to retrieve the currently effective log level for a given component.\n\n{@link jQuery.sap.log.getLogEntries} returns an array of the currently collected log entries.\n\nFurthermore, a listener can be registered to the log. It will be notified whenever a new entry is added to the log. The listener can be used for displaying log entries in a separate page area, or for sending it to some external target (server).","addLogListener":{"!description":"Allows to add a new LogListener that will be notified for new log entries.\n\nThe given object must provide method <code>onLogEntry<\/code> and can also be informed about <code>onDetachFromLog<\/code> and <code>onAttachToLog<\/code>","!type":"fn(oListener: Object) -> jQuery.sap.log","!category":"function","!static":"true"},"!category":"namespace","Level":"jQuery.sap.log.Level","getLevel":{"!description":"Returns the log level currently effective for the given component. If no component is given or when no level has been configured for a given component, the log level for the default component of this logger is returned.","!type":"fn(sComponent?: String) -> Number","!category":"function","!static":"true"},"warning":{"!description":"Creates a new warning-level entry in the log with the given message, details and calling component.","!type":"fn(sMessage: String, sDetails?: String, sComponent?: String, fnSupportInfo?: fn()) -> jQuery.sap.log.Logger","!category":"function","!static":"true"},"!helpDescription":"A Logging API for JavaScript.\n\nProvides methods to manage a client-side log and to create entries in it. Each of the logging methods {@link jQuery.sap.log.debug}, {@link jQuery.sap.log.info}, {@link jQuery.sap.log.warning}, {@link jQuery.sap.log.error} and {@link jQuery.sap.log.fatal} creates and records a log entry, containing a timestamp, a log level, a message with details and a component info. The log level will be one of {@link jQuery.sap.log.Level} and equals the name of the concrete logging method.\n\nBy using the {@link jQuery.sap.log.setLevel} method, consumers can determine the least important log level which should be recorded. Less important entries will be filtered out. (Note that higher numeric values represent less important levels). The initially set level depends on the mode that UI5 is running in. When the optimized sources are executed, the default level will be {@link jQuery.sap.log.Level.ERROR}. For normal (debug sources), the default level is {@link jQuery.sap.log.Level.DEBUG}.\n\nAll logging methods allow to specify a <b>component<\/b>. These components are simple strings and don't have a special meaning to the UI5 framework. However they can be used to semantically group log entries that belong to the same software component (or feature). There are two APIs that help to manage logging for such a component. With <code>{@link jQuery.sap.log.getLogger}(sComponent)<\/code>, one can retrieve a logger that automatically adds the given <code>sComponent<\/code> as component parameter to each log entry, if no other component is specified. Typically, JavaScript code will retrieve such a logger once during startup and reuse it for the rest of its lifecycle. Second, the {@link jQuery.sap.log.Logger#setLevel}(iLevel, sComponent) method allows to set the log level for a specific component only. This allows a more fine granular control about the created logging entries. {@link jQuery.sap.log.Logger#getLevel} allows to retrieve the currently effective log level for a given component.\n\n{@link jQuery.sap.log.getLogEntries} returns an array of the currently collected log entries.\n\nFurthermore, a listener can be registered to the log. It will be notified whenever a new entry is added to the log. The listener can be used for displaying log entries in a separate page area, or for sending it to some external target (server)."},"sap.ui.core.Toolbar":{"!description":"Marker interface for toolbar controls.","!category":"static class","!module":"sap/ui/core/library"},"sap.ui.model.ClientPropertyBinding_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.ClientPropertyBinding with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.PropertyBinding.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(oModel: sap.ui.model.Model, sPath: String, oContext: sap.ui.model.Context, mParameters?: Object)","prototype":"sap.ui.model.ClientPropertyBinding"},"sap.ui.core.LayoutData":{"!description":"A layout data base type.","extend":{"!description":"Creates a new subclass of class sap.ui.core.LayoutData with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new LayoutData.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.Element#constructor sap.ui.core.Element} can be used.","!module":"sap/ui/core/LayoutData","getMetadata":{"!description":"Returns a metadata object for class sap.ui.core.LayoutData.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Element","!helpDescription":"A layout data base type."},"sap.ui.core.LayoutData_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.LayoutData with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Element.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.LayoutData"},"sap.ui.core.VariantLayoutData_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.VariantLayoutData with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.LayoutData.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.VariantLayoutData"},"sap.ui.model.analytics.odata4analytics.DimensionAttribute_obj":{"!type":"fn(oQueryResult: sap.ui.model.analytics.odata4analytics.QueryResult, oProperty: Object)","prototype":"sap.ui.model.analytics.odata4analytics.DimensionAttribute"},"sap.ui.core.RenderManager":{"addClass":{"!description":"Adds a class to the class collection if the name is not empty or null. The class collection is flushed if it is written to the buffer using {@link #writeClasses}","!type":"fn(sName: String) -> sap.ui.core.RenderManager","!category":"function","parameters":{"sName":"type: string, description: name of the class to be added; null values are ignored"},"!static":false},"writeAttributeEscaped":{"!description":"Writes the attribute and a value into the HTML, the value will be encoded.\n\nThe value is properly encoded to avoid XSS attacks.","!type":"fn(sName: String, vValue: Object) -> sap.ui.core.RenderManager","!category":"function","parameters":{"sName":"type: string, description: Name of the attribute","vValue":"type: any, description: Value of the attribute"},"!static":false},"renderControl":{"!description":"Turns the given control into its HTML representation and appends it to the rendering buffer.\n\nIf the given control is undefined or null, then nothing is rendered.","!type":"fn(oControl: sap.ui.core.Control) -> sap.ui.core.RenderManager","!category":"function","parameters":{"oControl":"type: sap.ui.core.Control, description: the control that should be rendered"},"!static":false},"writeClasses":{"!description":"Writes and flushes the class collection (all CSS classes added by \"addClass()\" since the last flush). Also writes the custom style classes added by the application with \"addStyleClass(...)\". Custom classes are added by default from the currently rendered control. If an oElement is given, this Element's custom style classes are added instead. If oElement === false, no custom style classes are added.","!type":"fn(oElement?: sap.ui.core.Element | Boolean) -> sap.ui.core.RenderManager","!category":"function","parameters":{"oElement":"type: sap.ui.core.Element|boolean, description: an Element from which to add custom style classes (instead of adding from the control itself)"},"!static":false},"!module":"sap/ui/core/RenderManager","destroy":{"!description":"Cleans up the resources associated with this instance.\n\nAfter the instance has been destroyed, it must not be used anymore. Applications should call this function if they don't need the instance any longer.","!type":"fn()","!category":"function","!static":false},"createInvisiblePlaceholderId":{"!description":"Creates the ID to be used for the invisible Placeholder DOM element. This method can be used to get direct access to the placeholder DOM element. Also statically available as RenderManager.createInvisiblePlaceholderId()","!type":"fn(oElement: sap.ui.core.Element) -> String","!category":"function","parameters":{"oElement":"type: sap.ui.core.Element, description: The Element instance for which to create the placeholder ID"},"!static":true},"writeAttribute":{"!description":"Writes the attribute and its value into the HTML.\n\nFor details about the escaping refer to {@link jQuery.sap.encodeHTML}","!type":"fn(sName: String, vValue: String | Number | Boolean) -> sap.ui.core.RenderManager","!category":"function","parameters":{"sName":"type: string, description: Name of the attribute","vValue":"type: string|number|boolean, description: Value of the attribute"},"!static":false},"addStyle":{"!description":"Adds a style property to the style collection if the value is not empty or null The style collection is flushed if it is written to the buffer using {@link #writeStyle}","!type":"fn(sName: String, value: String | Number | Number) -> sap.ui.core.RenderManager","!category":"function","parameters":{"value":"type: string|float|int, description: Value to write","sName":"type: string, description: Name of the CSS property to write"},"!static":false},"writeAcceleratorKey":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not implemented - DO NOT USE<br>undefined","!type":"fn() -> sap.ui.core.RenderManager","!category":"function","!static":false},"getHTML":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 0.15.0 Use <code>flush()<\/code> instead render content outside the rendering phase.<br>Renders the given {@link sap.ui.core.Control} and finally returns the content of the rendering buffer. Ensures the buffer is restored to the state before calling this method.","!type":"fn(oControl: sap.ui.core.Control) -> String","!category":"function","parameters":{"oControl":"type: sap.ui.core.Control, description: the Control whose HTML should be returned."},"!static":false},"!category":"class","write":{"!description":"Write the given texts to the buffer","!type":"fn(sText: String | Number) -> sap.ui.core.RenderManager","!category":"function","parameters":{"sText":"type: string|number, description: (can be a number too)"},"!static":false},"writeInvisiblePlaceholderData":{"!description":"Writes necessary invisible control/element placeholder data into the HTML.\n\nControls should use this method only if the standard implementation of the RenderManager doesn't fit their needs. That standard implementation renders an invisible &lt;span&gt; element for controls with <code>visible:false<\/code> to improve re-rendering performance. Due to the fault tolerance of the HTML5 standard, such &lt;span&gt; elements are accepted in many scenarios and won't appear in the render tree of the browser, However, in some cases, controls may need to write a different element when the &lt;span&gt; is not an allowed element (e.g. within the &lt;tr&gt; or &lt;li&gt; group).\n\nThe caller needs to start an opening HTML tag, then call this method, then complete the opening and closing tag.\n\n<pre>\n\n  oRenderManager.write(\"&lt;tr\");\n  oRenderManager.writeInvisiblePlaceholderData(oControl);\n  oRenderManager.write(\"&gt;&lt;/tr\");\n\n<\/pre>","!type":"fn(oElement: sap.ui.core.Element) -> sap.ui.core.RenderManager","!category":"function","parameters":{"oElement":"type: sap.ui.core.Element, description: An instance of sap.ui.core.Element"},"!static":false},"writeStyles":{"!description":"Writes and flushes the style collection","!type":"fn() -> sap.ui.core.RenderManager","!category":"function","!static":false},"writeIcon":{"!description":"Writes either an &lt;img&gt; tag for normal URI or a &lt;span&gt; tag with needed properties for an icon URI.\n\nAdditional classes and attributes can be added to the tag with the second and third parameter. All of the given attributes are escaped for security consideration.\n\nWhen an &lt;img&gt; tag is rendered, the following two attributes are added by default and can be overwritten with corresponding values in the <code>mAttributes<\/code> parameter: <ul> <li><code>role: \"presentation\"<\/code><\/Li> <li><code>alt: \"\"<\/code><\/li> <\/ul>","!type":"fn(sURI: sap.ui.core.URI, aClasses?: Array | String, mAttributes?: Object) -> sap.ui.core.RenderManager","!category":"function","parameters":{"sURI":"type: sap.ui.core.URI, description: URI of an image or of an icon registered in {@link sap.ui.core.IconPool}","mAttributes":"type: object, description: Additional attributes that will be added to the rendered tag","aClasses":"type: array|string, description: Additional classes that are added to the rendered tag"},"!static":false},"preserveContent":{"!description":"Collects descendants of the given root node that need to be preserved before the root node is wiped out. The \"to-be-preserved\" nodes are moved to a special, hidden 'preserve' area.\n\nA node is declared \"to-be-preserved\" when it has the <code>data-sap-ui-preserve<\/code> attribute set. When the optional parameter <code>bPreserveNodesWithId<\/code> is set to true, then nodes with an id are preserved as well and their <code>data-sap-ui-preserve<\/code> attribute is set automatically. This option is used by UIAreas when they render for the first time and simplifies the handling of predefined HTML content in a web page.\n\nThe \"to-be-preserved\" nodes are searched with a depth first search and moved to the 'preserve' area in the order that they are found. So for direct siblings the order should be stable.","!type":"fn(oRootNode: Element, bPreserveRoot?: Boolean, bPreserveNodesWithId?: Boolean)","!category":"function","parameters":{"bPreserveRoot":"type: boolean, description: whether to preserve the root itself","oRootNode":"type: Element, description: to search for \"to-be-preserved\" nodes","bPreserveNodesWithId":"type: boolean, description: whether to preserve nodes with an id as well"},"!static":true},"writeEscaped":{"!description":"Escape text for HTML and write it to the buffer.\n\nFor details about the escaping refer to {@link jQuery.sap.encodeHTML}","!type":"fn(sText: Object, bLineBreaks: Boolean) -> sap.ui.core.RenderManager","!category":"function","parameters":{"sText":"type: any, description: undefined","bLineBreaks":"type: boolean, description: Whether to convert line breaks into <br> tags"},"!static":false},"findPreservedContent":{"!description":"Searches \"to-be-preserved\" nodes for the given control id.","!type":"fn(sId: String) -> jQuery","!category":"function","parameters":{"sId":"type: string, description: control id to search content for."},"!static":true},"writeAccessibilityState":{"!description":"Writes the accessibility state (see WAI-ARIA specification) of the provided element into the HTML based on the element's properties and associations.\n\nThe ARIA properties are only written when the accessibility feature is activated in the UI5 configuration.\n\nThe following properties/values to ARIA attribute mappings are done (if the element does have such properties): <ul> <li><code>editable===false<\/code> => <code>aria-readonly=\"true\"<\/code><\/li> <li><code>enabled===false<\/code> => <code>aria-disabled=\"true\"<\/code><\/li> <li><code>visible===false<\/code> => <code>aria-hidden=\"true\"<\/code><\/li> <li><code>required===true<\/code> => <code>aria-required=\"true\"<\/code><\/li> <li><code>selected===true<\/code> => <code>aria-selected=\"true\"<\/code><\/li> <li><code>checked===true<\/code> => <code>aria-checked=\"true\"<\/code><\/li> <\/ul>\n\nIn case of the required attribute also the Label controls which referencing the given element in their 'for' relation are taken into account to compute the <code>aria-required<\/code> attribute.\n\nAdditionally, the association <code>ariaDescribedBy<\/code> and <code>ariaLabelledBy<\/code> are used to write the ID lists of the ARIA attributes <code>aria-describedby<\/code> and <code>aria-labelledby<\/code>.\n\nLabel controls that reference the given element in their 'for' relation are automatically added to the <code>aria-labelledby<\/code> attributes.\n\nNote: This function is only a heuristic of a control property to ARIA attribute mapping. Control developers have to check whether it fulfills their requirements. In case of problems (for example the RadioButton has a <code>selected<\/code> property but must provide an <code>aria-checked<\/code> attribute) the auto-generated result of this function can be influenced via the parameter <code>mProps<\/code> as described below.\n\nThe parameter <code>mProps<\/code> can be used to either provide additional attributes which should be added and/or to avoid the automatic generation of single ARIA attributes. The 'aria-' prefix will be prepended automatically to the keys (Exception: Attribute 'role' does not get the prefix 'aria-').\n\nExamples: <code>{hidden : true}<\/code> results in <code>aria-hidden=\"true\"<\/code> independent of the presence or absence of the visibility property. <code>{hidden : null}<\/code> ensures that no <code>aria-hidden<\/code> attribute is written independent of the presence or absence of the visibility property. The function behaves in the same way for the associations <code>ariaDescribedBy<\/code> and <code>ariaLabelledBy<\/code>. To append additional values to the auto-generated <code>aria-describedby<\/code> and <code>aria-labelledby<\/code> attributes the following format can be used: <code>{describedby : {value: \"id1 id2\", append: true}}<\/code> => <code>aria-describedby=\"ida idb id1 id2\"<\/code> (assuming that \"ida idb\" is the auto-generated part based on the association <code>ariaDescribedBy<\/code>).","!type":"fn(oElement?: sap.ui.core.Element, mProps?: Object) -> sap.ui.core.RenderManager","!category":"function","parameters":{"mProps":"type: Object, description: a map of properties that should be added additionally or changed.","oElement":"type: sap.ui.core.Element, description: the element whose accessibility state should be rendered"},"!static":false},"getPreserveAreaRef":{"!description":"Returns the hidden area reference belonging to this window instance.","!type":"fn() -> Element","!category":"function","!static":true},"!constructorDescription":"Creates an instance of the RenderManager.\n\nApplications or controls must not call the <code>RenderManager<\/code> constructor on their own\nbut should use the {@link sap.ui.core.Core#createRenderManager sap.ui.getCore().createRenderManager()}\nmethod to create an instance for their exclusive use.","render":{"!description":"Renders the given control to the provided DOMNode.\n\nIf the control is already rendered in the provided DOMNode the DOM of the control is replaced. If the control is already rendered somewhere else the current DOM of the control is removed and the new DOM is appended to the provided DOMNode.\n\nThis function must not be called within control renderers.","!type":"fn(oControl: sap.ui.core.Control, oTargetDomNode: Element)","!category":"function","parameters":{"oTargetDomNode":"type: Element, description: The node in the DOM where the result of the rendering should be inserted.","oControl":"type: sap.ui.core.Control, description: the Control that should be rendered."},"!static":false},"getRenderer":{"!description":"Returns the renderer class for a given control instance","!type":"fn(oControl: sap.ui.core.Control) -> fn()","!category":"function","parameters":{"oControl":"type: sap.ui.core.Control, description: the control that should be rendered"},"!static":true},"cleanupControlWithoutRendering":{"!description":"Cleans up the rendering state of the given control without rendering it.\n\nA control is responsible for the rendering of all its child controls. But in some cases it makes sense that a control only renders a subset of its children based on some criterion. For example, a typical carousel control might, for performance reasons, only render the currently visible children (and maybe some child before and after the visible area to facilitate slide-in / slide-out animations), but not all children. This leads to situations where a child had been rendered before, but shouldn't be rendered anymore after an update of the carousel's position. The DOM related state of that child then must be cleaned up correctly, e.g. by de-registering resize handlers or native event handlers. <code>cleanupControlWithoutRendering<\/code> helps with that task by triggering the same activities that the normal rendering triggers before the rendering of a control (e.g. it fire the <code>BeforeRendering<\/code> event). It just doesn't call the renderer and the control will not receive an <code>AfterRendering<\/code> event.\n\nThe following example shows how <code>renderControl<\/code> and <code>cleanupControlWithoutRendering<\/code> should be used:\n\n<pre>\n  CarouselRenderer.render = function(rm, oCarousel){\n\n    ...\n\n    oCarousel.getPages().forEach( oPage ) {\n       if ( oCarousel.isPageToBeRendered( oPage ) ) {\n          rm.renderControl( oPage ); // onBeforeRendering, render, later onAfterRendering\n       } else {\n          rm.cleanupControlWithoutRendering( oPage ); // onBeforeRendering\n       }\n    }\n\n    ...\n\n  };\n<\/pre>\n\n<h3>DOM Removal<\/h3> The method does not remove the DOM of the given control. The caller of this method has to take care to remove it at some later point in time. It should indeed be <i>later<\/i>, not <i>before<\/i> as the <code>onBeforeRendering<\/code> hook of the control might need access to the old DOM for a proper cleanup.\n\nFor parents which are rendered with the normal mechanism as shown in the example above, the removal of the old child DOM is guaranteed. The whole DOM of the parent control (including the DOM of the no longer rendered child) will be replaced with new DOM (no longer containing the child) when the rendering cycle finishes.\n\n<b>Note:<\/b>: the functionality of this method is different from the default handling for invisible controls (controls with <code>visible == false<\/code>). The standard rendering for invisible controls still renders a placeholder DOM. This allows re-rendering of the invisible control once it becomes visible again without a need to render its parent, too. Children that are cleaned up with this method here, are supposed to have no more DOM at all. Rendering them later on therefore requires an involvement (typically: a rendering) of their parent.","!type":"fn(oControl: sap.ui.core.Control)","!category":"function","parameters":{"oControl":"type: sap.ui.core.Control, description: Control that should be cleaned up"},"!static":false},"!description":"RenderManager that will take care for rendering Controls.\n\nFor the default rendering task of UI5, a shared RenderManager is created and owned by <code>sap.ui.core.Core<\/code>. Controls or other code that want to render controls outside the default rendering task can create a private instance of RenderManager by calling the {@link sap.ui.core.Core#createRenderManager sap.ui.getCore().createRenderManager()} method. When such a private instance is no longer needed, it should be {@link #destroy destroyed}.\n\nControl renderers only have access to a subset of the public and protected instance methods of this class. The instance methods {@link #flush}, {@link #render} and {@link #destroy} are not part of that subset and are reserved to the owner of the corresponding RenderManager instance. Renderers will use the provided methods to create their HTML output. The RenderManager will collect the HTML output and inject the final HTML DOM at the desired location.\n\n<h3>Renderers<\/h3> When the {@link #renderControl} method of the RenderManager is invoked, it will retrieve the default renderer for that control. By convention, the default renderer is implemented in its own namespace (static class) which matches the name of the control's class with the additional suffix 'Renderer'. So for a control <code>sap.m.Input<\/code> the default renderer will be searched for under the global name <code>sap.m.Input<i>Renderer<\/i><\/code>.","flush":{"!description":"Renders the content of the rendering buffer into the provided DOM node.\n\nThis function must not be called within control renderers.\n\nUsage: <pre>\n\n  // Create a new instance of the RenderManager\n  var rm = sap.ui.getCore().createRenderManager();\n\n  // Use the writer API to fill the buffers\n  rm.write(...);\n  rm.renderControl(oControl);\n  rm.write(...);\n  ...\n\n  // Finally flush the buffer into the provided DOM node (The current content is removed)\n  rm.flush(oDomNode);\n\n  // If the instance is not needed anymore, destroy it\n  rm.destroy();\n\n<\/pre>","!type":"fn(oTargetDomNode: Element, bDoNotPreserve: Boolean, vInsert: Boolean | Number)","!category":"function","parameters":{"oTargetDomNode":"type: Element, description: Node in the DOM where the buffer should be flushed into","bDoNotPreserve":"type: boolean, description: Determines whether the content is preserved (<code>false<\/code>) or not (<code>true<\/code>)","vInsert":"type: boolean|int, description: Determines whether the buffer of the target DOM node is expanded (<code>true<\/code>) or replaced (<code>false<\/code>), or the new entry is inserted at a specific position (value of type <code>int<\/code>)"},"!static":false},"writeElementData":{"!description":"Writes the elements data into the HTML. Element Data consists at least of the id of an element","!type":"fn(oElement: sap.ui.core.Element) -> sap.ui.core.RenderManager","!category":"function","parameters":{"oElement":"type: sap.ui.core.Element, description: the element whose identifying information should be written to the buffer"},"!static":false},"detachPreserveContent":{"!description":"Detaches a {@link sap.ui.core.RenderManager.preserveContent} listener","!type":"fn(fnListener: fn())","!category":"function","parameters":{"fnListener":"type: function, description: listener function"},"!static":true},"attachPreserveContent":{"!description":"Attaches a listener which is called on {@link sap.ui.core.RenderManager.preserveContent} call","!type":"fn(fnListener: fn(), oContext?: Object)","!category":"function","parameters":{"fnListener":"type: function, description: listener function","oContext":"type: object, description: context for the listener function"},"!static":true},"writeControlData":{"!description":"Writes the controls data into the HTML. Control Data consists at least of the id of a control","!type":"fn(oControl: sap.ui.core.Control) -> sap.ui.core.RenderManager","!category":"function","parameters":{"oControl":"type: sap.ui.core.Control, description: the control whose identifying information should be written to the buffer"},"!static":false},"translate":{"!description":"<strong style=\"color: red;\">Deprecated! <\/strong>Since undefined Not implemented - DO NOT USE<br>undefined","!type":"fn(sKey: String)","!category":"function","parameters":{"sKey":"type: string, description: undefined"},"!static":false},"getConfiguration":{"!description":"Returns the configuration object Shortcut for <code>sap.ui.getCore().getConfiguration()<\/code>","!type":"fn() -> sap.ui.core.Configuration","!category":"function","!static":false},"!proto":"Object","!helpDescription":"RenderManager that will take care for rendering Controls.\n\nFor the default rendering task of UI5, a shared RenderManager is created and owned by <code>sap.ui.core.Core<\/code>. Controls or other code that want to render controls outside the default rendering task can create a private instance of RenderManager by calling the {@link sap.ui.core.Core#createRenderManager sap.ui.getCore().createRenderManager()} method. When such a private instance is no longer needed, it should be {@link #destroy destroyed}.\n\nControl renderers only have access to a subset of the public and protected instance methods of this class. The instance methods {@link #flush}, {@link #render} and {@link #destroy} are not part of that subset and are reserved to the owner of the corresponding RenderManager instance. Renderers will use the provided methods to create their HTML output. The RenderManager will collect the HTML output and inject the final HTML DOM at the desired location.\n\n<h3>Renderers<\/h3> When the {@link #renderControl} method of the RenderManager is invoked, it will retrieve the default renderer for that control. By convention, the default renderer is implemented in its own namespace (static class) which matches the name of the control's class with the additional suffix 'Renderer'. So for a control <code>sap.m.Input<\/code> the default renderer will be searched for under the global name <code>sap.m.Input<i>Renderer<\/i><\/code>."},"sap.ui.model.analytics.odata4analytics.Parameterization":{"getEntityType":{"!description":"Get the entity type defining the type of this query result in the OData model","!type":"fn() -> sap.ui.model.analytics.odata4analytics.EntityType","!category":"function","!static":false},"getAllParameterNames":{"!description":"Get the names of all parameters part of the parameterization","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"!constructorDescription":"Create a representation of a parameterization for an analytic query. Do not create your own instances.","!module":"sap/ui/model/analytics/odata4analytics","findParameterByName":{"!description":"Find parameter by name","!type":"fn(sName: String) -> sap.ui.model.analytics.odata4analytics.Parameter","!category":"function","parameters":{"sName":"type: string, description: Parameter name"},"!static":false},"getEntitySet":{"!description":"Get the entity set representing this query result in the OData model","!type":"fn() -> sap.ui.model.analytics.odata4analytics.EntitySet","!category":"function","!static":false},"!description":"Representation of an entity type annotated with sap:semantics=\"parameters\".","getAllParameters":{"!description":"Get all parameters included in this parameterization","!type":"fn() -> Object","!category":"function","!static":false},"getName":{"!description":"Get the name of the parameter","!type":"fn() -> String","!category":"function","!static":false},"getNavigationPropertyToQueryResult":{"!description":"Get navigation property to query result","!type":"fn() -> sap.ui.model.analytics.odata4analytics.QueryResult","!category":"function","!static":false},"!category":"class","!helpDescription":"Representation of an entity type annotated with sap:semantics=\"parameters\".","!proto":"sap.ui.base.Object"},"sap.ui.core.dnd.DragDropInfo_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.core.dnd.DragDropInfo with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.dnd.DragDropBase.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.ui.core.dnd.DragDropInfo"},"sap.ui.model.analytics.odata4analytics.Model.ReferenceByURI":{"!description":"Handle to an OData model by the URI pointing to it.","!category":"class","!constructorDescription":"Create a reference to an OData model by the URI of the related OData service.","!module":"sap/ui/model/analytics/odata4analytics","!proto":"sap.ui.base.Object","!helpDescription":"Handle to an OData model by the URI pointing to it."},"jQuery.sap.Version_obj":{"!type":"fn(vMajor: [Number | String | [object Object]], iMinor: Number, iPatch: Number, sSuffix: String)","prototype":"jQuery.sap.Version"},"sap.ui.core.BusyIndicatorSize":{"Medium":{"!description":"Type: Medium size","!type":"String","!category":"enum"},"!description":"Configuration options for the BusyIndicator size","Large":{"!description":"Type: Large size","!type":"String","!category":"enum"},"Auto":{"!description":"Type: automatic size detection","!type":"String","!category":"enum"},"!category":"static class","!module":"sap/ui/core/library","Small":{"!description":"Type: small size","!type":"String","!category":"enum"}},"sap.ui.model.type.Boolean":{"!description":"This class represents boolean simple types.","extend":{"!description":"Creates a new subclass of class sap.ui.model.type.Boolean with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.SimpleType.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a Boolean type.","!module":"sap/ui/model/type/Boolean","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.type.Boolean.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.SimpleType","!helpDescription":"This class represents boolean simple types."},"sap.ui.model.odata.v2.ODataModel_obj":{"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.v2.ODataModel with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.Model.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(serviceUrl: String | Object, mParameters?: Object)","prototype":"sap.ui.model.odata.v2.ODataModel"},"sap.ui.model.odata.type.SByte":{"!description":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.SByte<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>number<\/code>.","getRange":{"!description":"Returns the type's supported range as object with properties <code>minimum<\/code> and <code>maximum<\/code>.","!type":"fn() -> Object","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.ui.model.odata.type.SByte with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.model.odata.type.Int.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"getName":{"!description":"Returns the type's name.","!type":"fn() -> String","!category":"function","!static":false},"!category":"class","!constructorDescription":"Constructor for a primitive type <code>Edm.SByte<\/code>.","!module":"sap/ui/model/odata/type/SByte","getMetadata":{"!description":"Returns a metadata object for class sap.ui.model.odata.type.SByte.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.model.odata.type.Int","!helpDescription":"This class represents the OData primitive type <a href=\"http://www.odata.org/documentation/odata-version-2-0/overview#AbstractTypeSystem\"> <code>Edm.SByte<\/code><\/a>.\n\nIn both {@link sap.ui.model.odata.v2.ODataModel} and {@link sap.ui.model.odata.v4.ODataModel} this type is represented as a <code>number<\/code>."},"sap.ui.core.Priority":{"Medium":{"!description":"Medium priority","!type":"String","!category":"enum"},"Low":{"!description":"Low priority","!type":"String","!category":"enum"},"!description":"Priorities for general use.","!category":"static class","None":{"!description":"Default, none priority","!type":"String","!category":"enum"},"High":{"!description":"High priority","!type":"String","!category":"enum"},"!module":"sap/ui/core/library"}},"!name":"sap.ui.core","!version":"1.18.0"}