{"!define":{"sap.tnt.NavigationListItem_obj":{"extend":{"!description":"Creates a new subclass of class sap.tnt.NavigationListItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.tnt.NavigationListItem"},"sap.tnt.ToolHeader_obj":{"extend":{"!description":"Creates a new subclass of class sap.tnt.ToolHeader with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.OverflowToolbar.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.tnt.ToolHeader"},"sap.tnt":{"NavigationListItem":"sap.tnt.NavigationListItem_obj","visible":{"!description":"Whether the control should be visible on the screen.\n\nIf set to false, a placeholder will be rendered to mark the location of the invisible control in the DOM of the current page. The placeholder will be hidden and have zero dimensions (<code>display: none<\/code>).\n\nSee {@link sap.ui.core.RenderManager#writeInvisiblePlaceholderData RenderManager#writeInvisiblePlaceholderData} for details.","!type":"Boolean","!category":"enum"},"ToolHeaderUtilitySeparator":"sap.tnt.ToolHeaderUtilitySeparator_obj","busy":{"!description":"Whether the control is currently in busy state.","!type":"Boolean","!category":"enum"},"NavigationList":"sap.tnt.NavigationList_obj","!module":"sap/tnt/library","ToolPage":"sap.tnt.ToolPage_obj","height":{"!description":"Defines the height of the control. By default, the <code>height<\/code> property depends on the used theme and the <code>design<\/code> property.\n\n<b>Note:<\/b> It is not recommended to use this property if the <code>sapMTBHeader-CTX<\/code> class is used","!type":"sap.ui.core.CSSSize","!category":"enum"},"!category":"namespace","busyIndicatorDelay":{"!description":"The delay in milliseconds, after which the busy indicator will show up for this control.","!type":"Number","!category":"enum"},"key":{"!description":"Can be used as input for subsequent actions.","!type":"String","!category":"enum"},"enabled":{"!description":"Sets the enabled property of all controls defined in the content aggregation. Note: This property does not apply to the toolbar itself, but rather to its items.","!type":"Boolean","!category":"enum"},"icon":{"!description":"Specifies the icon for the item.","!type":"sap.ui.core.URI","!category":"enum"},"text":{"!description":"The text to be displayed for the item.","!type":"String","!category":"enum"},"width":{"!description":"Defines the width of the control. By default, Toolbar is a block element. If the width is not explicitly set, the control will assume its natural size.","!type":"sap.ui.core.CSSSize","!category":"enum"},"ToolHeader":"sap.tnt.ToolHeader_obj","expanded":{"!description":"Specifies if the control is expanded.","!type":"Boolean","!category":"enum"},"sideExpanded":{"!description":"Indicates if the side area is expanded. Overrides the expanded property of the sideContent aggregation.","!type":"Boolean","!category":"enum"},"textDirection":{"!description":"Options are RTL and LTR. Alternatively, an item can inherit its text direction from its parent control.","!type":"sap.ui.core.TextDirection","!category":"enum"},"!description":"SAPUI5 library with controls specialized for administrative applications.","SideNavigation":"sap.tnt.SideNavigation_obj","hasExpander":{"!description":"Specifies if the item has an expander.","!type":"Boolean","!category":"enum"},"active":{"!description":"Indicates that the whole toolbar is clickable. The Press event is fired only if Active is set to true. Note: This property should be used when there are no interactive controls inside the toolbar and the toolbar itself is meant to be interactive.","!type":"Boolean","!category":"enum"},"fieldGroupIds":{"!description":"The IDs of a logical field group that this control belongs to.\n\nAll fields in a logical field group should share the same <code>fieldGroupId<\/code>. Once a logical field group is left, the <code>validateFieldGroup<\/code> event is raised.\n\nSee {@link sap.ui.core.Control#attachValidateFieldGroup}.","!type":"[String]","!category":"enum"},"design":{"!description":"Defines the toolbar design. Note: Design settings are theme-dependent. They also determine the default height of the toolbar.","!type":"sap.m.ToolbarDesign","!category":"enum"},"!helpDescription":"SAPUI5 library with controls specialized for administrative applications."},"sap.tnt.ToolHeaderUtilitySeparator_obj":{"extend":{"!description":"Creates a new subclass of class sap.tnt.ToolHeaderUtilitySeparator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.tnt.ToolHeaderUtilitySeparator"},"sap.tnt.SideNavigation_obj":{"extend":{"!description":"Creates a new subclass of class sap.tnt.SideNavigation with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.tnt.SideNavigation"},"sap.tnt.ToolPage":{"removeAllMainContents":{"!description":"Removes all the controls from the aggregation {@link #getMainContents mainContents}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"destroyMainContents":{"!description":"Destroys all the mainContents in the aggregation {@link #getMainContents mainContents}.","!type":"fn() -> sap.tnt.ToolPage","!category":"function","!static":false},"setSideContent":{"!description":"Sets the aggregated {@link #getSideContent sideContent}.","!type":"fn(oSideContent: sap.tnt.SideNavigation) -> sap.tnt.ToolPage","!category":"function","parameters":{"oSideContent":"type: sap.tnt.SideNavigation, description: The sideContent to set"},"!static":false},"destroySideContent":{"!description":"Destroys the sideContent in the aggregation {@link #getSideContent sideContent}.","!type":"fn() -> sap.tnt.ToolPage","!category":"function","!static":false},"extend":{"!description":"Creates a new subclass of class sap.tnt.ToolPage with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"addMainContent":{"!description":"Adds some mainContent to the aggregation {@link #getMainContents mainContents}.","!type":"fn(oMainContent: sap.ui.core.Control) -> sap.tnt.ToolPage","!category":"function","parameters":{"oMainContent":"type: sap.ui.core.Control, description: The mainContent to add; if empty, nothing is inserted"},"!static":false},"!constructorDescription":"Constructor for a new ToolPage.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSideExpanded sideExpanded} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getHeader header} : sap.tnt.ToolHeader<\/li>\n<li>{@link #getSideContent sideContent} : sap.tnt.SideNavigation<\/li>\n<li>{@link #getMainContents mainContents} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","insertMainContent":{"!description":"Inserts a mainContent into the aggregation {@link #getMainContents mainContents}.","!type":"fn(oMainContent: sap.ui.core.Control, iIndex: Number) -> sap.tnt.ToolPage","!category":"function","parameters":{"oMainContent":"type: sap.ui.core.Control, description: The mainContent to insert; if empty, nothing is inserted","iIndex":"type: int, description: The <code>0<\/code>-based index the mainContent should be inserted at; for a negative value of <code>iIndex<\/code>, the mainContent is inserted at position 0; for a value greater than the current size of the aggregation, the mainContent is inserted at the last position"},"!static":false},"!module":"sap/tnt/ToolPage","removeMainContent":{"!description":"Removes a mainContent from the aggregation {@link #getMainContents mainContents}.","!type":"fn(vMainContent: Number | String | sap.ui.core.Control) -> sap.ui.core.Control","!category":"function","parameters":{"vMainContent":"type: int|string|sap.ui.core.Control, description: The mainContent to remove or its index or id"},"!static":false},"getHeader":{"!description":"Gets content of aggregation {@link #getHeader header}.\n\nThe control to appear in the header area.","!type":"fn() -> sap.tnt.ToolHeader","!category":"function","!static":false},"setSideExpanded":{"!description":"Sets the expand/collapse state of the SideContent.","!type":"fn(isSideExpanded: Boolean) -> sap.tnt.ToolPage","!category":"function","parameters":{"isSideExpanded":"type: boolean, description: defines whether the SideNavigation is expanded."},"!static":false},"setHeader":{"!description":"Sets the aggregated {@link #getHeader header}.","!type":"fn(oHeader: sap.tnt.ToolHeader) -> sap.tnt.ToolPage","!category":"function","parameters":{"oHeader":"type: sap.tnt.ToolHeader, description: The header to set"},"!static":false},"getMainContents":{"!description":"Gets content of aggregation {@link #getMainContents mainContents}.\n\nThe content section.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"toggleSideContentMode":{"!description":"Toggles the expand/collapse state of the SideContent.","!type":"fn() -> sap.tnt.ToolPage","!category":"function","!static":false},"!description":"The ToolPage is a layout control, used to create a basic tools app that has a header, side navigation and contents area. <h4>Overview<\/h4> The control has three main areas - a header on top, navigation to the side and a content are that can hold any control. The header and side navigation use custom controls - {@link sap.tnt.ToolHeader} and {@link sap.tnt.SideNavigation}. <h4>Usage<\/h4> The main usage for the asp.tnt controls is for scenarios in the tooling or administration space.","indexOfMainContent":{"!description":"Checks for the provided <code>sap.ui.core.Control<\/code> in the aggregation {@link #getMainContents mainContents}. and returns its index if found or -1 otherwise.","!type":"fn(oMainContent: sap.ui.core.Control) -> Number","!category":"function","parameters":{"oMainContent":"type: sap.ui.core.Control, description: The mainContent whose index is looked for"},"!static":false},"destroyHeader":{"!description":"Destroys the header in the aggregation {@link #getHeader header}.","!type":"fn() -> sap.tnt.ToolPage","!category":"function","!static":false},"getSideExpanded":{"!description":"Gets current value of property {@link #getSideExpanded sideExpanded}.\n\nIndicates if the side area is expanded. Overrides the expanded property of the sideContent aggregation.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!category":"class","getSideContent":{"!description":"Gets content of aggregation {@link #getSideContent sideContent}.\n\nThe side menu of the layout.","!type":"fn() -> sap.tnt.SideNavigation","!category":"function","!static":false},"getMetadata":{"!description":"Returns a metadata object for class sap.tnt.ToolPage.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!helpDescription":"The ToolPage is a layout control, used to create a basic tools app that has a header, side navigation and contents area. <h4>Overview<\/h4> The control has three main areas - a header on top, navigation to the side and a content are that can hold any control. The header and side navigation use custom controls - {@link sap.tnt.ToolHeader} and {@link sap.tnt.SideNavigation}. <h4>Usage<\/h4> The main usage for the asp.tnt controls is for scenarios in the tooling or administration space.","!proto":"sap.ui.core.Control"},"sap.tnt.ToolPage_obj":{"extend":{"!description":"Creates a new subclass of class sap.tnt.ToolPage with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.tnt.ToolPage"},"sap":{"sap":"sap","tnt":"sap.tnt","!category":"namespace"},"sap.tnt.NavigationList":{"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!type":"fn(vItem: Number | String | sap.tnt.NavigationListItem) -> sap.tnt.NavigationListItem","!category":"function","parameters":{"vItem":"type: int|string|sap.tnt.NavigationListItem, description: The item to remove or its index or id"},"!static":false},"removeAriaLabelledBy":{"!description":"Removes an ariaLabelledBy from the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!type":"fn(vAriaLabelledBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","!category":"function","parameters":{"vAriaLabelledBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to be removed or its index or ID"},"!static":false},"getExpanded":{"!description":"Gets current value of property {@link #getExpanded expanded}.\n\nSpecifies if the control is in expanded or collapsed mode.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"fireItemSelect":{"!description":"Fires event {@link #event:itemSelect itemSelect} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.tnt.NavigationList","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"removeAriaDescribedBy":{"!description":"Removes an ariaDescribedBy from the association named {@link #getAriaDescribedBy ariaDescribedBy}.","!type":"fn(vAriaDescribedBy: Number | sap.ui.core.ID | sap.ui.core.Control) -> sap.ui.core.ID","!category":"function","parameters":{"vAriaDescribedBy":"type: int|sap.ui.core.ID|sap.ui.core.Control, description: The ariaDescribedBy to be removed or its index or ID"},"!static":false},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!type":"fn(oItem: sap.tnt.NavigationListItem) -> sap.tnt.NavigationList","!category":"function","parameters":{"oItem":"type: sap.tnt.NavigationListItem, description: The item to add; if empty, nothing is inserted"},"!static":false},"!module":"sap/tnt/NavigationList","indexOfItem":{"!description":"Checks for the provided <code>sap.tnt.NavigationListItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!type":"fn(oItem: sap.tnt.NavigationListItem) -> Number","!category":"function","parameters":{"oItem":"type: sap.tnt.NavigationListItem, description: The item whose index is looked for"},"!static":false},"setSelectedItem":{"!description":"Sets the association for selectedItem. Set <code>null<\/code> to deselect.","!type":"fn(selectedItem: String | sap.tnt.NavigationListItem, suppressInvalidate: Boolean) -> sap.tnt.NavigationList | null","!category":"function","parameters":{"suppressInvalidate":"type: boolean, description: If true, the managed object's invalidate method is not called","selectedItem":"type: string|sap.tnt.NavigationListItem, description: The control to be set as selected"},"!static":false},"getAriaDescribedBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaDescribedBy ariaDescribedBy}.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"addAriaDescribedBy":{"!description":"Adds some ariaDescribedBy into the association {@link #getAriaDescribedBy ariaDescribedBy}.","!type":"fn(vAriaDescribedBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.tnt.NavigationList","!category":"function","parameters":{"vAriaDescribedBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaDescribedBy to add; if empty, nothing is inserted"},"!static":false},"!category":"class","attachItemSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:itemSelect itemSelect} event of this <code>sap.tnt.NavigationList<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.tnt.NavigationList<\/code> itself.\n\nFired when an item is selected.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.tnt.NavigationList","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.tnt.NavigationList<\/code> itself"},"!static":false},"getWidth":{"!description":"Gets current value of property {@link #getWidth width}.\n\nSpecifies the width of the control.","!type":"fn() -> sap.ui.core.CSSSize","!category":"function","!static":false},"getAriaLabelledBy":{"!description":"Returns array of IDs of the elements which are the current targets of the association {@link #getAriaLabelledBy ariaLabelledBy}.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"setWidth":{"!description":"Sets a new value for property {@link #getWidth width}.\n\nSpecifies the width of the control.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.","!type":"fn(sWidth: sap.ui.core.CSSSize) -> sap.tnt.NavigationList","!category":"function","parameters":{"sWidth":"type: sap.ui.core.CSSSize, description: New value for property <code>width<\/code>"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.tnt.NavigationList with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"removeAllAriaLabelledBy":{"!description":"Removes all the controls in the association named {@link #getAriaLabelledBy ariaLabelledBy}.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"!constructorDescription":"Constructor for a new NavigationList.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getExpanded expanded} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.tnt.NavigationListItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getSelectedItem selectedItem} : (sap.ui.core.ID | sap.tnt.NavigationListItem)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemSelect itemSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getSelectedItem":{"!description":"Gets the currently selected <code>NavigationListItem<\/code>.","!type":"fn() -> sap.tnt.NavigationListItem | null","!category":"function","!static":false},"addAriaLabelledBy":{"!description":"Adds some ariaLabelledBy into the association {@link #getAriaLabelledBy ariaLabelledBy}.","!type":"fn(vAriaLabelledBy: sap.ui.core.ID | sap.ui.core.Control) -> sap.tnt.NavigationList","!category":"function","parameters":{"vAriaLabelledBy":"type: sap.ui.core.ID|sap.ui.core.Control, description: The ariaLabelledBy to add; if empty, nothing is inserted"},"!static":false},"!description":"The NavigationList control is an interactive control, which provides a choice of different items, ordered as a list.","getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nThe items displayed in the list.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"setExpanded":{"!description":"Sets a new value for property {@link #getExpanded expanded}.\n\nSpecifies if the control is in expanded or collapsed mode.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bExpanded: Boolean) -> sap.tnt.NavigationList","!category":"function","parameters":{"bExpanded":"type: boolean, description: New value for property <code>expanded<\/code>"},"!static":false},"detachItemSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:itemSelect itemSelect} event of this <code>sap.tnt.NavigationList<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.tnt.NavigationList","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!type":"fn() -> sap.tnt.NavigationList","!category":"function","!static":false},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"removeAllAriaDescribedBy":{"!description":"Removes all the controls in the association named {@link #getAriaDescribedBy ariaDescribedBy}.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!type":"fn(oItem: sap.tnt.NavigationListItem, iIndex: Number) -> sap.tnt.NavigationList","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.tnt.NavigationListItem, description: The item to insert; if empty, nothing is inserted"},"!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"The NavigationList control is an interactive control, which provides a choice of different items, ordered as a list.","getMetadata":{"!description":"Returns a metadata object for class sap.tnt.NavigationList.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.tnt.ToolHeaderUtilitySeparator":{"!description":"The ToolHeaderUtilitySeparator control is used in the sap.tnt.ToolHeader control to specify where the overflow button is placed.","extend":{"!description":"Creates a new subclass of class sap.tnt.ToolHeaderUtilitySeparator with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new ToolHeaderUtilitySeparator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.Control#constructor sap.ui.core.Control} can be used.","!module":"sap/tnt/ToolHeaderUtilitySeparator","getMetadata":{"!description":"Returns a metadata object for class sap.tnt.ToolHeaderUtilitySeparator.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.ui.core.Control","!helpDescription":"The ToolHeaderUtilitySeparator control is used in the sap.tnt.ToolHeader control to specify where the overflow button is placed."},"sap.tnt.NavigationList_obj":{"extend":{"!description":"Creates a new subclass of class sap.tnt.NavigationList with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!type":"fn(sId: String, mSettings: Object)","prototype":"sap.tnt.NavigationList"},"sap.tnt.SideNavigation":{"setFooter":{"!description":"Sets the aggregated {@link #getFooter footer}.","!type":"fn(oFooter: sap.tnt.NavigationList) -> sap.tnt.SideNavigation","!category":"function","parameters":{"oFooter":"type: sap.tnt.NavigationList, description: The footer to set"},"!static":false},"destroyItem":{"!description":"Destroys the item in the aggregation {@link #getItem item}.","!type":"fn() -> sap.tnt.SideNavigation","!category":"function","!static":false},"bindItem":{"!description":"Binds aggregation {@link #getItem item} to model data.\n\nSee {@link sap.ui.base.ManagedObject#bindAggregation ManagedObject.bindAggregation} for a detailed description of the possible properties of <code>oBindingInfo<\/code>.","!type":"fn(oBindingInfo: Object) -> sap.tnt.SideNavigation","!category":"function","parameters":{"oBindingInfo":"type: object, description: The binding information"},"!static":false},"getExpanded":{"!description":"Gets current value of property {@link #getExpanded expanded}.\n\nSpecifies if the control is expanded.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"destroyFixedItem":{"!description":"Destroys the fixedItem in the aggregation {@link #getFixedItem fixedItem}.","!type":"fn() -> sap.tnt.SideNavigation","!category":"function","!static":false},"fireItemSelect":{"!description":"Fires event {@link #event:itemSelect itemSelect} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.tnt.SideNavigation","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"getFixedItem":{"!description":"Gets content of aggregation {@link #getFixedItem fixedItem}.\n\nDefines the content inside the fixed part.","!type":"fn() -> sap.tnt.NavigationList","!category":"function","!static":false},"!module":"sap/tnt/SideNavigation","setItem":{"!description":"Sets the aggregated {@link #getItem item}.","!type":"fn(oItem: sap.tnt.NavigationList) -> sap.tnt.SideNavigation","!category":"function","parameters":{"oItem":"type: sap.tnt.NavigationList, description: The item to set"},"!static":false},"setSelectedItem":{"!description":"Sets the association for selectedItem","!type":"fn(selectedItem: String | sap.tnt.NavigationListItem, suppressInvalidate: Boolean) -> sap.tnt.SideNavigation | null","!category":"function","parameters":{"suppressInvalidate":"type: boolean, description: If true, the managed object's invalidate method is not called","selectedItem":"type: string|sap.tnt.NavigationListItem, description: The control to be set as selected"},"!static":false},"destroyFooter":{"!description":"Destroys the footer in the aggregation {@link #getFooter footer}.","!type":"fn() -> sap.tnt.SideNavigation","!category":"function","!static":false},"getItem":{"!description":"Gets content of aggregation {@link #getItem item}.\n\nDefines the content inside the flexible part.","!type":"fn() -> sap.tnt.NavigationList","!category":"function","!static":false},"!category":"class","attachItemSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:itemSelect itemSelect} event of this <code>sap.tnt.SideNavigation<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.tnt.SideNavigation<\/code> itself.\n\nFired when an item is selected.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.tnt.SideNavigation","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.tnt.SideNavigation<\/code> itself"},"!static":false},"getFooter":{"!description":"Gets content of aggregation {@link #getFooter footer}.\n\nDefines the content inside the footer.","!type":"fn() -> sap.tnt.NavigationList","!category":"function","!static":false},"setFixedItem":{"!description":"Sets the aggregated {@link #getFixedItem fixedItem}.","!type":"fn(oFixedItem: sap.tnt.NavigationList) -> sap.tnt.SideNavigation","!category":"function","parameters":{"oFixedItem":"type: sap.tnt.NavigationList, description: The fixedItem to set"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.tnt.SideNavigation with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!constructorDescription":"Constructor for a new SideNavigation.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getExpanded expanded} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItem item} : sap.tnt.NavigationList (default)<\/li>\n<li>{@link #getFixedItem fixedItem} : sap.tnt.NavigationList<\/li>\n<li>{@link #getFooter footer} : sap.tnt.NavigationList<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedItem selectedItem} : (sap.ui.core.ID | sap.tnt.NavigationListItem)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemSelect itemSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well.","getSelectedItem":{"!description":"ID of the element which is the current target of the association {@link #getSelectedItem selectedItem}, or <code>null<\/code>.","!type":"fn() -> sap.ui.core.ID","!category":"function","!static":false},"!description":"The SideNavigation control is a container, which consists of flexible and fixed parts on top of each other. <h4>Responsive Behavior<\/h4> <ul> <li>The flexible part adapts its size to the fixed one.<\/li> <li>The flexible part has a scrollbar when the content is larger than the available space.<\/li> <\/ul> <b>Note:<\/b> In order for the SideNavigation to stretch properly, its parent layout control should only be the sap.tnt.ToolPage.","detachItemSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:itemSelect itemSelect} event of this <code>sap.tnt.SideNavigation<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.tnt.SideNavigation","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"setExpanded":{"!description":"Sets if the control is in expanded or collapsed mode.","!type":"fn(bExpanded: Boolean, isExpanded: Boolean) -> sap.tnt.SideNavigation","!category":"function","parameters":{"isExpanded":"type: boolean, description: Indication if the SideNavigation is expanded."},"!static":true},"unbindItem":{"!description":"Unbinds aggregation {@link #getItem item} from model data.","!type":"fn() -> sap.tnt.SideNavigation","!category":"function","!static":false},"!proto":"sap.ui.core.Control","!helpDescription":"The SideNavigation control is a container, which consists of flexible and fixed parts on top of each other. <h4>Responsive Behavior<\/h4> <ul> <li>The flexible part adapts its size to the fixed one.<\/li> <li>The flexible part has a scrollbar when the content is larger than the available space.<\/li> <\/ul> <b>Note:<\/b> In order for the SideNavigation to stretch properly, its parent layout control should only be the sap.tnt.ToolPage.","getMetadata":{"!description":"Returns a metadata object for class sap.tnt.SideNavigation.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.tnt.NavigationListItem":{"removeItem":{"!description":"Removes a item from the aggregation {@link #getItems items}.","!type":"fn(vItem: Number | String | sap.tnt.NavigationListItem) -> sap.tnt.NavigationListItem","!category":"function","parameters":{"vItem":"type: int|string|sap.tnt.NavigationListItem, description: The item to remove or its index or id"},"!static":false},"getExpanded":{"!description":"Gets current value of property {@link #getExpanded expanded}.\n\nSpecifies if the item is expanded.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"addItem":{"!description":"Adds some item to the aggregation {@link #getItems items}.","!type":"fn(oItem: sap.tnt.NavigationListItem) -> sap.tnt.NavigationListItem","!category":"function","parameters":{"oItem":"type: sap.tnt.NavigationListItem, description: The item to add; if empty, nothing is inserted"},"!static":false},"!module":"sap/tnt/NavigationListItem","attachSelect":{"!description":"Attaches event handler <code>fnFunction<\/code> to the {@link #event:select select} event of this <code>sap.tnt.NavigationListItem<\/code>.\n\nWhen called, the context of the event handler (its <code>this<\/code>) will be bound to <code>oListener<\/code> if specified, otherwise it will be bound to this <code>sap.tnt.NavigationListItem<\/code> itself.\n\nFired when this item is selected.","!type":"fn(oData?: Object, fnFunction: fn(), oListener?: Object) -> sap.tnt.NavigationListItem","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called when the event occurs","oData":"type: object, description: An application-specific payload object that will be passed to the event handler along with the event object when firing the event","oListener":"type: object, description: Context object to call the event handler with. Defaults to this <code>sap.tnt.NavigationListItem<\/code> itself"},"!static":false},"getIcon":{"!description":"Gets current value of property {@link #getIcon icon}.\n\nSpecifies the icon for the item.\n\nDefault value is <code><\/code>.","!type":"fn() -> sap.ui.core.URI","!category":"function","!static":false},"indexOfItem":{"!description":"Checks for the provided <code>sap.tnt.NavigationListItem<\/code> in the aggregation {@link #getItems items}. and returns its index if found or -1 otherwise.","!type":"fn(oItem: sap.tnt.NavigationListItem) -> Number","!category":"function","parameters":{"oItem":"type: sap.tnt.NavigationListItem, description: The item whose index is looked for"},"!static":false},"setHasExpander":{"!description":"Sets a new value for property {@link #getHasExpander hasExpander}.\n\nSpecifies if the item has an expander.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bHasExpander: Boolean) -> sap.tnt.NavigationListItem","!category":"function","parameters":{"bHasExpander":"type: boolean, description: New value for property <code>hasExpander<\/code>"},"!static":false},"!category":"class","fireSelect":{"!description":"Fires event {@link #event:select select} to attached listeners.","!type":"fn(mParameters?: Object) -> sap.tnt.NavigationListItem","!category":"function","parameters":{"mParameters":"type: object, description: Parameters to pass along with the event"},"!static":false},"extend":{"!description":"Creates a new subclass of class sap.tnt.NavigationListItem with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.ui.core.Item.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"setVisible":{"!description":"Sets a new value for property {@link #getVisible visible}.\n\nSpecifies if the item should be shown.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bVisible: Boolean) -> sap.tnt.NavigationListItem","!category":"function","parameters":{"bVisible":"type: boolean, description: New value for property <code>visible<\/code>"},"!static":false},"detachSelect":{"!description":"Detaches event handler <code>fnFunction<\/code> from the {@link #event:select select} event of this <code>sap.tnt.NavigationListItem<\/code>.\n\nThe passed function and listener object must match the ones used for event registration.","!type":"fn(fnFunction: fn(), oListener: Object) -> sap.tnt.NavigationListItem","!category":"function","parameters":{"fnFunction":"type: function, description: The function to be called, when the event occurs","oListener":"type: object, description: Context object on which the given function had to be called"},"!static":false},"getHasExpander":{"!description":"Gets current value of property {@link #getHasExpander hasExpander}.\n\nSpecifies if the item has an expander.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!constructorDescription":"Constructor for a new NavigationListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getExpanded expanded} : boolean (default: true)<\/li>\n<li>{@link #getHasExpander hasExpander} : boolean (default: true)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.tnt.NavigationListItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well.","getVisible":{"!description":"Gets current value of property {@link #getVisible visible}.\n\nSpecifies if the item should be shown.\n\nDefault value is <code>true<\/code>.","!type":"fn() -> Boolean","!category":"function","!static":false},"!description":"The NavigationListItem control represents an action, which can be selected by the user. It can provide sub items.","getItems":{"!description":"Gets content of aggregation {@link #getItems items}.\n\nThe sub items.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"setExpanded":{"!description":"Sets a new value for property {@link #getExpanded expanded}.\n\nSpecifies if the item is expanded.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code>true<\/code>.","!type":"fn(bExpanded: Boolean) -> sap.tnt.NavigationListItem","!category":"function","parameters":{"bExpanded":"type: boolean, description: New value for property <code>expanded<\/code>"},"!static":false},"destroyItems":{"!description":"Destroys all the items in the aggregation {@link #getItems items}.","!type":"fn() -> sap.tnt.NavigationListItem","!category":"function","!static":false},"removeAllItems":{"!description":"Removes all the controls from the aggregation {@link #getItems items}.\n\nAdditionally, it unregisters them from the hosting UIArea.","!type":"fn() -> [[object Object]]","!category":"function","!static":false},"setIcon":{"!description":"Sets a new value for property {@link #getIcon icon}.\n\nSpecifies the icon for the item.\n\nWhen called with a value of <code>null<\/code> or <code>undefined<\/code>, the default value of the property will be restored.\n\nDefault value is <code><\/code>.","!type":"fn(sIcon: sap.ui.core.URI) -> sap.tnt.NavigationListItem","!category":"function","parameters":{"sIcon":"type: sap.ui.core.URI, description: New value for property <code>icon<\/code>"},"!static":false},"insertItem":{"!description":"Inserts a item into the aggregation {@link #getItems items}.","!type":"fn(oItem: sap.tnt.NavigationListItem, iIndex: Number) -> sap.tnt.NavigationListItem","!category":"function","parameters":{"iIndex":"type: int, description: The <code>0<\/code>-based index the item should be inserted at; for a negative value of <code>iIndex<\/code>, the item is inserted at position 0; for a value greater than the current size of the aggregation, the item is inserted at the last position","oItem":"type: sap.tnt.NavigationListItem, description: The item to insert; if empty, nothing is inserted"},"!static":false},"!proto":"sap.ui.core.Item","!helpDescription":"The NavigationListItem control represents an action, which can be selected by the user. It can provide sub items.","getMetadata":{"!description":"Returns a metadata object for class sap.tnt.NavigationListItem.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true}},"sap.tnt.ToolHeader":{"!description":"The ToolHeader control is a horizontal container that is most commonly used to display buttons, labels, and other various input controls. <h4>Overview<\/h4> The ToolHeader control is based on {@link sap.m.OverflowToolbar}. It contains clearly structured menus of commands that are available across the various apps within the same tool layout. <h4>Usage<\/h4> <ul> <li>If an app implements side navigation in addition to the tool header menu, the menu icon must be the first item on the left-hand side of the tool header.<\/li> <li>The app menu and the side navigation must not have any dependencies and must work independently.<\/li> <\/ul>","extend":{"!description":"Creates a new subclass of class sap.tnt.ToolHeader with name <code>sClassName<\/code> and enriches it with the information contained in <code>oClassInfo<\/code>.\n\n<code>oClassInfo<\/code> might contain the same kind of information as described in {@link sap.m.OverflowToolbar.extend}.","!type":"fn(sClassName: String, oClassInfo?: Object, FNMetaImpl?: fn()) -> fn()","!category":"function","parameters":{"FNMetaImpl":"type: function, description: Constructor function for the metadata object; if not given, it defaults to <code>sap.ui.core.ElementMetadata<\/code>","oClassInfo":"type: object, description: Object literal with information about the class","sClassName":"type: string, description: Name of the class being created"},"!static":true},"!category":"class","!constructorDescription":"Constructor for a new ToolHeader.","!module":"sap/tnt/ToolHeader","getMetadata":{"!description":"Returns a metadata object for class sap.tnt.ToolHeader.","!type":"fn() -> sap.ui.base.Metadata","!category":"function","!static":true},"!proto":"sap.m.OverflowToolbar","!helpDescription":"The ToolHeader control is a horizontal container that is most commonly used to display buttons, labels, and other various input controls. <h4>Overview<\/h4> The ToolHeader control is based on {@link sap.m.OverflowToolbar}. It contains clearly structured menus of commands that are available across the various apps within the same tool layout. <h4>Usage<\/h4> <ul> <li>If an app implements side navigation in addition to the tool header menu, the menu icon must be the first item on the left-hand side of the tool header.<\/li> <li>The app menu and the side navigation must not have any dependencies and must work independently.<\/li> <\/ul>"}},"!name":"sap.tnt","!version":"1.18.0"}