{"!version":"1.18.0","Templates":[{"template":"new sap.f.Avatar(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tsrc: ${src}, // sap.ui.core.URI\n\t\tinitials: \"${initials}\", // string\n\t\tdisplayShape: ${sap.f.AvatarShape.Circle}, // sap.f.AvatarShape\n\t\tdisplaySize: ${sap.f.AvatarSize.S}, // sap.f.AvatarSize\n\t\tcustomDisplaySize: ${\"3rem\"}, // sap.ui.core.CSSSize\n\t\tcustomFontSize: ${\"1.125rem\"}, // sap.ui.core.CSSSize\n\t\timageFitType: ${sap.f.AvatarImageFitType.Cover}, // sap.f.AvatarImageFitType\n\t\tdetailBox: ${detailBox}, // sap.m.LightBox\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/f/Avatar","static":"true","extends":"sap.ui.core.Control","helpDescription":"An image-like control that has different display options for representing images, initials, and icons.\n\n<h3>Overview<\/h3>\n\nThe <code>Avatar<\/code> control allows the usage of different content, shapes, and sizes depending on the use case.\n\nThe content types that can be displayed are either images, icons, or initials. The shape can be circular or square. There are several predefined sizes, as well as an option to set a custom size.\n\n<h3>Usage<\/h3>\n\nUp to two Latin letters can be displayed as initials in an <code>Avatar<\/code>. If there are more than two letters, or if there's a non-Latin character present, a default image placeholder will be created.\n\nThere are two options for how the displayed image can fit inside the available area: <ul> <li>Cover - the image is scaled to cover all of the available area<\/li> <li>Contain - the image is scaled as large as possible while both its height and width fit inside the avalable area<\/li> <\/ul> <b>Note:<\/b> To set a custom size for the <code>Avatar<\/code>, you have to choose the <code>Custom<\/code> value for the <code>displaySize<\/code> property. Then, you have to set both the <code>customDisplaySize<\/code> and <code>customFontSize<\/code> properties.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"Avatar(sId?, mSettings?) : sap.f.Avatar","name":"sap.f.Avatar","prefix":"Avatar","Experimental":false,"constructorDescription":"Constructor for a new <code>Avatar<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSrc src} : sap.ui.core.URI<\/li>\n<li>{@link #getInitials initials} : string<\/li>\n<li>{@link #getDisplayShape displayShape} : sap.f.AvatarShape (default: Circle)<\/li>\n<li>{@link #getDisplaySize displaySize} : sap.f.AvatarSize (default: S)<\/li>\n<li>{@link #getCustomDisplaySize customDisplaySize} : sap.ui.core.CSSSize (default: 3rem)<\/li>\n<li>{@link #getCustomFontSize customFontSize} : sap.ui.core.CSSSize (default: 1.125rem)<\/li>\n<li>{@link #getImageFitType imageFitType} : sap.f.AvatarImageFitType (default: Cover)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getDetailBox detailBox} : sap.m.LightBox<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.f.DynamicPage(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tpreserveHeaderStateOnScroll: ${bPreserveHeaderStateOnScroll}, // boolean\n\t\theaderExpanded: ${bHeaderExpanded}, // boolean\n\t\ttoggleHeaderOnTitleClick: ${bToggleHeaderOnTitleClick}, // boolean\n\t\tshowFooter: ${bShowFooter}, // boolean\n\t\tfitContent: ${bFitContent}, // boolean\n\t\ttitle: ${title}, // sap.f.DynamicPageTitle\n\t\theader: ${header}, // sap.f.DynamicPageHeader\n\t\tcontent: ${content}, // sap.ui.core.Control\n\t\tfooter: ${footer} // sap.m.IBar\n\t}\n)\n","module":"sap/f/DynamicPage","static":"true","extends":"sap.ui.core.Control","helpDescription":"A layout control, representing a web page, consisting of a title, header with dynamic behavior, a content area, and an optional floating footer.\n\n<h3>Overview<\/h3>\n\nThe control consist of several components:\n\n<ul><li>{@link sap.f.DynamicPageTitle DynamicPageTitle} - consists of a heading on the left side, content in the middle, and actions on the right. The displayed content changes based on the current mode of the {@link sap.f.DynamicPageHeader DynamicPageHeader}.<\/li> <li>{@link sap.f.DynamicPageHeader DynamicPageHeader} - a generic container, which can contain a single layout control and does not care about the content alignment and responsiveness. The header works in two modes - expanded and snapped and its behavior can be adjusted with the help of different properties.<\/li> <li>Content area - a generic container, which can have a single UI5 layout control and does not care about the content alignment and responsiveness.<\/li> <li>Footer - positioned at the bottom with a small offset and used for additional actions, the footer floats above the content. It can be any {@link sap.m.IBar} control.<\/li><\/ul>\n\n<h3>Usage<\/h3>\n\nUse the <code>DynamicPage<\/code> if you need to have a title, that is always visible and a header, that has configurable Expanding/Snapping functionality. If you don't need the Expanding/Snapping functionality it is better to use the {@link sap.m.Page} as a lighter control.\n\n<ul><b>Notes:<\/b> <li>If you're displaying a {@link sap.m.FlexBox} with non-adaptive content (doesn't stretch to fill the available space), it is recommended to set the <code>fitContainer<\/code> property of the {@link sap.m.FlexBox FlexBox} to <code>false<\/code>.<\/li> <li>If you are displaying a {@link sap.ui.table.Table}, keep in mind that it is non-adaptive and may cause unpredicted behavior for the <code>DynamicPage<\/code> on smaller screen sizes, such as mobile.<\/li> <li>Snapping of the {@link sap.f.DynamicPageTitle DynamicPageTitle} is not supported in the following case: When the <code>DynamicPage<\/code> has a scroll bar, the control usually scrolls to the snapping point - the point, where the {@link sap.f.DynamicPageHeader DynamicPageHeader} is scrolled out completely. However, when there is a scroll bar, but not enough content to reach the snapping point, the snapping is not possible using scrolling.<\/li><\/ul>\n\n<h3>Responsive Behavior<\/h3>\n\nThe responsive behavior of the <code>DynamicPage<\/code> depends on the behavior of the content that is displayed.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"DynamicPage(sId?, mSettings?) : sap.f.DynamicPage","name":"sap.f.DynamicPage","prefix":"DynamicPage","Experimental":false,"constructorDescription":"Constructor for a new <code>DynamicPage<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPreserveHeaderStateOnScroll preserveHeaderStateOnScroll} : boolean (default: false)<\/li>\n<li>{@link #getHeaderExpanded headerExpanded} : boolean (default: true)<\/li>\n<li>{@link #getToggleHeaderOnTitleClick toggleHeaderOnTitleClick} : boolean (default: true)<\/li>\n<li>{@link #getShowFooter showFooter} : boolean (default: false)<\/li>\n<li>{@link #getFitContent fitContent} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTitle title} : sap.f.DynamicPageTitle<\/li>\n<li>{@link #getHeader header} : sap.f.DynamicPageHeader<\/li>\n<li>{@link #getContent content} : sap.ui.core.Control<\/li>\n<li>{@link #getFooter footer} : sap.m.IBar<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.f.DynamicPageHeader(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tpinnable: ${bPinnable}, // boolean\n\t\tcontent: [${content}] // sap.ui.core.Control[]\n\t}\n)\n","module":"sap/f/DynamicPageHeader","static":"true","extends":"sap.ui.core.Control","helpDescription":"Header of the {@link sap.f.DynamicPage}.\n\n<h3>Overview<\/h3>\n\nThe <code>DynamicPageHeader<\/code> control is part of the {@link sap.f.DynamicPage} family and is used to serve as header of the {@link sap.f.DynamicPage DynamicPage}.\n\n<h3>Usage<\/h3>\n\nThe <code>DynamicPageHeader<\/code> can hold any layout control and has two states - expanded and collapsed (snapped). The switching between these states happens when:\n\n<ul><li>the user scrolls below its bottom margin<\/li> <li>the user clicks on the {@link sap.f.DynamicPageTitle DynamicPageTitle}<\/li> <li>through the {@link sap.f.DynamicPage DynamicPage} property <code>headerExpanded<\/code><\/li><\/ul>\n\n<h3>Responsive Behavior<\/h3>\n\nThe responsive behavior of the <code>DynamicPageHeader<\/code> depends on the behavior of the content that is displayed.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"DynamicPageHeader(sId?, mSettings?) : sap.f.DynamicPageHeader","name":"sap.f.DynamicPageHeader","prefix":"DynamicPageHeader","Experimental":false,"constructorDescription":"Constructor for a new <code>DynamicPageHeader<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPinnable pinnable} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.f.DynamicPageTitle(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tprimaryArea: ${sap.f.DynamicPageTitleArea.Begin}, // sap.f.DynamicPageTitleArea\n\t\theading: ${heading}, // sap.ui.core.Control\n\t\tsnappedHeading: ${snappedHeading}, // sap.ui.core.Control\n\t\texpandedHeading: ${expandedHeading}, // sap.ui.core.Control\n\t\tactions: [${actions}], // sap.ui.core.Control[]\n\t\tnavigationActions: [${navigationActions}], // sap.m.Button[]\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tsnappedContent: [${snappedContent}], // sap.ui.core.Control[]\n\t\texpandedContent: [${expandedContent}], // sap.ui.core.Control[]\n\t\tbreadcrumbs: ${breadcrumbs} // sap.m.IBreadcrumbs\n\t}\n)\n","module":"sap/f/DynamicPageTitle","static":"true","extends":"sap.ui.core.Control","helpDescription":"Title of the {@link sap.f.DynamicPage}.\n\n<h3>Overview<\/h3>\n\nThe <code>DynamicPageTitle<\/code> control is part of the {@link sap.f.DynamicPage} family and is used to serve as title of the {@link sap.f.DynamicPage DynamicPage}.\n\n<h3>Usage<\/h3>\n\nThe <code>DynamicPageTitle<\/code> can hold any control and displays the most important information regarding the object that will always remain visible while scrolling.\n\n<b>Note:<\/b> The <code>actions<\/code> aggregation accepts any UI5 control, but it`s recommended to use controls, suitable for {@link sap.m.Toolbar} and {@link sap.m.OverflowToolbar}.\n\nIf the <code>toggleHeaderOnTitleClick<\/code> property of the {@link sap.f.DynamicPage DynamicPage} is set to <code>true<\/code>, the user can switch between the expanded/collapsed states of the {@link sap.f.DynamicPageHeader DynamicPageHeader} by clicking on the <code>DynamicPageTitle<\/code> or by using the expand/collapse visual indicators, positioned at the bottom of the <code>DynamicPageTitle<\/code> and the <code>DynamicPageHeader<\/code>.\n\nIf set to <code>false<\/code>, the <code>DynamicPageTitle<\/code> is not clickable, the visual indicators are not available, and the app must provide other means for expanding/collapsing the <code>DynamicPageHeader<\/code>, if necessary.\n\n<h3>Responsive Behavior<\/h3>\n\nThe responsive behavior of the <code>DynamicPageTitle<\/code> depends on the behavior of the content that is displayed.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"DynamicPageTitle(sId?, mSettings?) : sap.f.DynamicPageTitle","name":"sap.f.DynamicPageTitle","prefix":"DynamicPageTitle","Experimental":false,"constructorDescription":"Constructor for a new <code>DynamicPageTitle<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPrimaryArea primaryArea} : sap.f.DynamicPageTitleArea (default: Begin)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getHeading heading} : sap.ui.core.Control<\/li>\n<li>{@link #getSnappedHeading snappedHeading} : sap.ui.core.Control<\/li>\n<li>{@link #getExpandedHeading expandedHeading} : sap.ui.core.Control<\/li>\n<li>{@link #getActions actions} : sap.ui.core.Control[]<\/li>\n<li>{@link #getNavigationActions navigationActions} : sap.m.Button[]<\/li>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<li>{@link #getSnappedContent snappedContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getExpandedContent expandedContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getBreadcrumbs breadcrumbs} : sap.m.IBreadcrumbs<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.f.FlexibleColumnLayout(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tlayout: ${sap.f.LayoutType.OneColumn}, // sap.f.LayoutType\n\t\tdefaultTransitionNameBeginColumn: ${\"slide\"}, // string\n\t\tdefaultTransitionNameMidColumn: ${\"slide\"}, // string\n\t\tdefaultTransitionNameEndColumn: ${\"slide\"}, // string\n\t\tbeginColumnPages: [${beginColumnPages}], // sap.ui.core.Control[]\n\t\tmidColumnPages: [${midColumnPages}], // sap.ui.core.Control[]\n\t\tendColumnPages: [${endColumnPages}], // sap.ui.core.Control[]\n\t\tinitialBeginColumnPage: ${initialBeginColumnPage}, // (sap.ui.core.Control|string)\n\t\tinitialMidColumnPage: ${initialMidColumnPage}, // (sap.ui.core.Control|string)\n\t\tinitialEndColumnPage: ${initialEndColumnPage}, // (sap.ui.core.Control|string)\n\t\tstateChange: [function (oEvent) {}, this], // function|array\n\t\tbeginColumnNavigate: [function (oEvent) {}, this], // function|array\n\t\tafterBeginColumnNavigate: [function (oEvent) {}, this], // function|array\n\t\tmidColumnNavigate: [function (oEvent) {}, this], // function|array\n\t\tafterMidColumnNavigate: [function (oEvent) {}, this], // function|array\n\t\tendColumnNavigate: [function (oEvent) {}, this], // function|array\n\t\tafterEndColumnNavigate: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/f/FlexibleColumnLayout","static":"true","extends":"sap.ui.core.Control","helpDescription":"Implements the master-detail-detail paradigm by displaying up to three pages in separate columns.\n\n<h3>Overview<\/h3>\n\nThe control is logically similar to {@link sap.m.SplitContainer} with the difference that it capable of handling three columns (referred to as <code>Begin<\/code>, <code>Mid<\/code> and <code>End<\/code>) rather than two (<code>Master<\/code>, <code>Detail<\/code>). The width of the three columns is variable.\n\nThere are several possible layouts that can be changed either with the control's API, or by the user with the help of layout arrows.\n\nInternally the control makes use of three instances of {@link sap.m.NavContainer}, thus forming the three columns.\n\n<h3>Usage<\/h3>\n\nUse this control for applications that need to display several logical levels of related information side by side (e.g. list of items, item, sub-item, etc.). The control is flexible in a sense that the application can focus the user's attention on one particular column by making it larger or even fullscreen.\n\nThe columns are accessible with the <code>beginColumnPages<\/code>, <code>midColumnPages<\/code> and <code>endColumnPages<\/code> aggregations.\n\nThe relative sizes and the visibility of the three columns are determined based on the value of the {@link sap.f.LayoutType layout} property.\n\nChanges to the layout due to user interaction are communicated to the app with the <code>stateChange<\/code> event.\n\n<ul><b>Notes:<\/b> <li>To easily implement the recommended UX design of a <code>sap.f.FlexibleColumnLayout<\/code>-based app, you can use the <code>sap.f.FlexibleColumnLayoutSemanticHelper<\/code> class.<\/li> <li>To facilitate the navigation and view loading, you can use the {@link sap.f.routing.Router} <\/li><\/ul>\n\n<h3>Responsive Behavior<\/h3>\n\nThe control automatically displays the maximum possible number of columns based on the device size and current <code>layout<\/code>. The app does not need to take into consideration the current device/screen size, but only to add content to the columns and change the value of the <code>layout<\/code> property.\n\nFor detailed information, see {@link sap.f.LayoutType LayoutType} enumeration.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"FlexibleColumnLayout(sId?, mSettings?) : sap.f.FlexibleColumnLayout","name":"sap.f.FlexibleColumnLayout","prefix":"FlexibleColumnLayout","Experimental":false,"constructorDescription":"Constructor for a new <code>sap.f.FlexibleColumnLayout<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLayout layout} : sap.f.LayoutType (default: OneColumn)<\/li>\n<li>{@link #getDefaultTransitionNameBeginColumn defaultTransitionNameBeginColumn} : string (default: slide)<\/li>\n<li>{@link #getDefaultTransitionNameMidColumn defaultTransitionNameMidColumn} : string (default: slide)<\/li>\n<li>{@link #getDefaultTransitionNameEndColumn defaultTransitionNameEndColumn} : string (default: slide)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getBeginColumnPages beginColumnPages} : sap.ui.core.Control[]<\/li>\n<li>{@link #getMidColumnPages midColumnPages} : sap.ui.core.Control[]<\/li>\n<li>{@link #getEndColumnPages endColumnPages} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getInitialBeginColumnPage initialBeginColumnPage} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<li>{@link #getInitialMidColumnPage initialMidColumnPage} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<li>{@link #getInitialEndColumnPage initialEndColumnPage} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:stateChange stateChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beginColumnNavigate beginColumnNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterBeginColumnNavigate afterBeginColumnNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:midColumnNavigate midColumnNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterMidColumnNavigate afterMidColumnNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:endColumnNavigate endColumnNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterEndColumnNavigate afterEndColumnNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireAfterBeginColumnNavigate(\n\t{\n\t\tfrom: ${from}, // sap.ui.core.Control\n\t\tfromId: \"${fromId}\", // string\n\t\tto: ${to}, // sap.ui.core.Control\n\t\ttoId: \"${toId}\", // string\n\t\tfirstTime: ${bFirstTime}, // boolean\n\t\tisTo: ${bIsTo}, // boolean\n\t\tisBack: ${bIsBack}, // boolean\n\t\tisBackToTop: ${bIsBackToTop}, // boolean\n\t\tisBackToPage: ${bIsBackToPage}, // boolean\n\t\tdirection: \"${direction}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:afterBeginColumnNavigate afterBeginColumnNavigate} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireAfterBeginColumnNavigate(mParameters?) : sap.f.FlexibleColumnLayout","Experimental":false,"prefix":"^withoutprefix","name":"sap.f.FlexibleColumnLayout.fireAfterBeginColumnNavigate"},{"template":"fireAfterEndColumnNavigate(\n\t{\n\t\tfrom: ${from}, // sap.ui.core.Control\n\t\tfromId: \"${fromId}\", // string\n\t\tto: ${to}, // sap.ui.core.Control\n\t\ttoId: \"${toId}\", // string\n\t\tfirstTime: ${bFirstTime}, // boolean\n\t\tisTo: ${bIsTo}, // boolean\n\t\tisBack: ${bIsBack}, // boolean\n\t\tisBackToTop: ${bIsBackToTop}, // boolean\n\t\tisBackToPage: ${bIsBackToPage}, // boolean\n\t\tdirection: \"${direction}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:afterEndColumnNavigate afterEndColumnNavigate} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireAfterEndColumnNavigate(mParameters?) : sap.f.FlexibleColumnLayout","Experimental":false,"prefix":"^withoutprefix","name":"sap.f.FlexibleColumnLayout.fireAfterEndColumnNavigate"},{"template":"fireAfterMidColumnNavigate(\n\t{\n\t\tfrom: ${from}, // sap.ui.core.Control\n\t\tfromId: \"${fromId}\", // string\n\t\tto: ${to}, // sap.ui.core.Control\n\t\ttoId: \"${toId}\", // string\n\t\tfirstTime: ${bFirstTime}, // boolean\n\t\tisTo: ${bIsTo}, // boolean\n\t\tisBack: ${bIsBack}, // boolean\n\t\tisBackToTop: ${bIsBackToTop}, // boolean\n\t\tisBackToPage: ${bIsBackToPage}, // boolean\n\t\tdirection: \"${direction}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:afterMidColumnNavigate afterMidColumnNavigate} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireAfterMidColumnNavigate(mParameters?) : sap.f.FlexibleColumnLayout","Experimental":false,"prefix":"^withoutprefix","name":"sap.f.FlexibleColumnLayout.fireAfterMidColumnNavigate"},{"template":"fireBeginColumnNavigate(\n\t{\n\t\tfrom: ${from}, // sap.ui.core.Control\n\t\tfromId: \"${fromId}\", // string\n\t\tto: ${to}, // sap.ui.core.Control\n\t\ttoId: \"${toId}\", // string\n\t\tfirstTime: ${bFirstTime}, // boolean\n\t\tisTo: ${bIsTo}, // boolean\n\t\tisBack: ${bIsBack}, // boolean\n\t\tisBackToTop: ${bIsBackToTop}, // boolean\n\t\tisBackToPage: ${bIsBackToPage}, // boolean\n\t\tdirection: \"${direction}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:beginColumnNavigate beginColumnNavigate} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireBeginColumnNavigate(mParameters?) : boolean","Experimental":false,"prefix":"^withoutprefix","name":"sap.f.FlexibleColumnLayout.fireBeginColumnNavigate"},{"template":"fireEndColumnNavigate(\n\t{\n\t\tfrom: ${from}, // sap.ui.core.Control\n\t\tfromId: \"${fromId}\", // string\n\t\tto: ${to}, // sap.ui.core.Control\n\t\ttoId: \"${toId}\", // string\n\t\tfirstTime: ${bFirstTime}, // boolean\n\t\tisTo: ${bIsTo}, // boolean\n\t\tisBack: ${bIsBack}, // boolean\n\t\tisBackToTop: ${bIsBackToTop}, // boolean\n\t\tisBackToPage: ${bIsBackToPage}, // boolean\n\t\tdirection: \"${direction}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:endColumnNavigate endColumnNavigate} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireEndColumnNavigate(mParameters?) : boolean","Experimental":false,"prefix":"^withoutprefix","name":"sap.f.FlexibleColumnLayout.fireEndColumnNavigate"},{"template":"fireMidColumnNavigate(\n\t{\n\t\tfrom: ${from}, // sap.ui.core.Control\n\t\tfromId: \"${fromId}\", // string\n\t\tto: ${to}, // sap.ui.core.Control\n\t\ttoId: \"${toId}\", // string\n\t\tfirstTime: ${bFirstTime}, // boolean\n\t\tisTo: ${bIsTo}, // boolean\n\t\tisBack: ${bIsBack}, // boolean\n\t\tisBackToTop: ${bIsBackToTop}, // boolean\n\t\tisBackToPage: ${bIsBackToPage}, // boolean\n\t\tdirection: \"${direction}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:midColumnNavigate midColumnNavigate} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireMidColumnNavigate(mParameters?) : boolean","Experimental":false,"prefix":"^withoutprefix","name":"sap.f.FlexibleColumnLayout.fireMidColumnNavigate"},{"template":"fireStateChange(\n\t{\n\t\tlayout: ${layout}, // sap.f.LayoutType\n\t\tmaxColumnsCount: ${maxColumnsCount}, // int\n\t\tisNavigationArrow: ${bIsNavigationArrow}, // boolean\n\t\tisResize: ${bIsResize} // boolean\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:stateChange stateChange} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireStateChange(mParameters?) : sap.f.FlexibleColumnLayout","Experimental":false,"prefix":"^withoutprefix","name":"sap.f.FlexibleColumnLayout.fireStateChange"},{"template":"new sap.f.FlexibleColumnLayoutSemanticHelper(\n\t\"${oFlexibleColumnLayout}\", // sap.f.FlexibleColumnLayout\n\t{\n\t\tdefaultTwoColumnLayoutType: ${defaultTwoColumnLayoutType}, // sap.f.LayoutType\n\t\tdefaultThreeColumnLayoutType: ${defaultThreeColumnLayoutType}, // sap.f.LayoutType\n\t\tmaxColumnsCount: ${maxColumnsCount}, // int\n\t\tinitialColumnsCount: ${initialColumnsCount}, // int\n\t\tmode: \"${mode}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Helper class, facilitating the implementation of the recommended UX design of a <code>sap.f.FlexibleColumnLayout<\/code>-based app.\n\n<b>Note:<\/b> Using this class is not mandatory in order to build an app with <code>sap.f.FlexibleColumnLayout<\/code>, but exists for convenience only.\n\n<ul>The usage of <code>sap.f.FlexibleColumnLayoutSemanticHelper<\/code> revolves around two main methods: <li><code>getCurrentUIState<\/code>Suggests which action buttons to show in each <code>sap.f.FlexibleColumnLayout<\/code> column, based on the current control state (number and visibility of columns, layout, etc..)<\/li> <li><code>getNextUIState<\/code>Suggests which <code>layout<\/code> to use when navigating to another view level (e.g. from one view to two views).<\/li><\/ul>\n\nSample usage of the class:\n\n<pre>\n<code>\n var helper = sap.f.FlexibleColumnLayoutSemanticHelper.getInstanceFor(myFlexibleColumnLayout);\n helper.getCurrentUIState();\n helper.getNextUIState(2);\n helper.getNextUIState(0);\n<\/code>\n<\/pre>\n\nCalling <code>getCurrentUIState()<\/code> will return information which action buttons (Close, FullScreen, ExitFullScreen) must be currently shown in which column, according to UX guidelines, as well as to what layout clicking them should lead.\n\nCalling <code>getNextUIState(2)<\/code> will return information about the expected layout and action buttons if the application should display three views (master-detail-detail), based on the current state.\n\nSimilarly, calling <code>getNextUIState(0)<\/code> will return information about the expected layout and action buttons if the application should display the initial view only (master), based on the current state.\n\nFor more information, see {@link sap.f.FlexibleColumnLayoutSemanticHelper#getCurrentUIState} and {@link sap.f.FlexibleColumnLayoutSemanticHelper#getNextUIState}","category":"constructor","module":"sap/f/FlexibleColumnLayoutSemanticHelper","static":"true","DeprecatedInfo":{"isDeprecated":false},"description":"FlexibleColumnLayoutSemanticHelper(oFlexibleColumnLayout, oSettings) : sap.f.FlexibleColumnLayoutSemanticHelper","Experimental":false,"prefix":"FlexibleColumnLayoutSemanticHelper","name":"sap.f.FlexibleColumnLayoutSemanticHelper","constructorDescription":"Constructor for an sap.f.FlexibleColumnLayoutSemanticHelper."},{"template":"new sap.f.routing.Targets(\n\t{\n\t\tviews: ${views}, // sap.ui.core.routing.Views\n\t\tconfig: ${config}, // object\n\t\ttargets: ${targets} // object\n\t}\n)\n","Deprecated":false,"category":"constructor","module":"sap/f/routing/Targets","static":"true","DeprecatedInfo":{"isDeprecated":false},"extends":"sap.ui.core.routing.Targets","description":"Targets(oOptions) : sap.f.routing.Targets","Experimental":false,"prefix":"Targets","name":"sap.f.routing.Targets","constructorDescription":"Provides a convenient way for placing views into the correct containers of your application.\nThe sap.f extension of Targets also handles the triggering of page navigation when the target control is a {@link sap.f.FlexibleColumnLayout}.\nOther controls are also allowed, but the extra parameters viewLevel, transition and transitionParameters are ignored and it will behave like {@link sap.ui.core.routing.Targets}.\nWhen a target is displayed, dialogs will be closed. To change this use {@link #getTargetHandler} and {@link sap.f.routing.TargetHandler#setCloseDialogs}."},{"template":"new sap.f.semantic.AddAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/f/semantic/AddAction","static":"true","extends":"sap.f.semantic.SemanticButton","helpDescription":"A semantic-specific button, eligible for the <code>addAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"AddAction(sId?, mSettings?) : sap.f.semantic.AddAction","name":"sap.f.semantic.AddAction","prefix":"AddAction","Experimental":false,"constructorDescription":"Constructor for a new <code>AddAction<\/code>."},{"template":"new sap.f.semantic.CloseAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/f/semantic/CloseAction","static":"true","extends":"sap.f.semantic.SemanticButton","helpDescription":"A semantic-specific button, eligible for the <code>closeAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"CloseAction(sId?, mSettings?) : sap.f.semantic.CloseAction","name":"sap.f.semantic.CloseAction","prefix":"CloseAction","Experimental":false,"constructorDescription":"Constructor for a new <code>CloseAction<\/code>."},{"template":"new sap.f.semantic.CopyAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/f/semantic/CopyAction","static":"true","extends":"sap.f.semantic.SemanticButton","helpDescription":"A semantic-specific button, eligible for the <code>copyAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"CopyAction(sId?, mSettings?) : sap.f.semantic.CopyAction","name":"sap.f.semantic.CopyAction","prefix":"CopyAction","Experimental":false,"constructorDescription":"Constructor for a new <code>CopyAction<\/code>."},{"template":"new sap.f.semantic.DeleteAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/f/semantic/DeleteAction","static":"true","extends":"sap.f.semantic.SemanticButton","helpDescription":"A semantic-specific button, eligible for the <code>deleteAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"DeleteAction(sId?, mSettings?) : sap.f.semantic.DeleteAction","name":"sap.f.semantic.DeleteAction","prefix":"DeleteAction","Experimental":false,"constructorDescription":"Constructor for a new <code>DeleteAction<\/code>."},{"template":"new sap.f.semantic.DiscussInJamAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/f/semantic/DiscussInJamAction","static":"true","extends":"sap.f.semantic.SemanticButton","helpDescription":"A semantic-specific button, eligible for the <code>discussInJamAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"DiscussInJamAction(sId?, mSettings?) : sap.f.semantic.DiscussInJamAction","name":"sap.f.semantic.DiscussInJamAction","prefix":"DiscussInJamAction","Experimental":false,"constructorDescription":"Constructor for a new <code>DiscussInJamAction<\/code>."},{"template":"new sap.f.semantic.EditAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/f/semantic/EditAction","static":"true","extends":"sap.f.semantic.SemanticButton","helpDescription":"A semantic-specific button, eligible for the <code>editAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"EditAction(sId?, mSettings?) : sap.f.semantic.EditAction","name":"sap.f.semantic.EditAction","prefix":"EditAction","Experimental":false,"constructorDescription":"Constructor for a new <code>EditAction<\/code>."},{"template":"new sap.f.semantic.ExitFullScreenAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/f/semantic/ExitFullScreenAction","static":"true","extends":"sap.f.semantic.SemanticButton","helpDescription":"A semantic-specific button, eligible for the <code>exitFullScreenAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ExitFullScreenAction(sId?, mSettings?) : sap.f.semantic.ExitFullScreenAction","name":"sap.f.semantic.ExitFullScreenAction","prefix":"ExitFullScreenAction","Experimental":false,"constructorDescription":"Constructor for a new <code>ExitFullScreenAction<\/code>."},{"template":"new sap.f.semantic.FavoriteAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/f/semantic/FavoriteAction","static":"true","extends":"sap.f.semantic.SemanticButton","helpDescription":"A semantic-specific button, eligible for the <code>favoriteAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"FavoriteAction(sId?, mSettings?) : sap.f.semantic.FavoriteAction","name":"sap.f.semantic.FavoriteAction","prefix":"FavoriteAction","Experimental":false,"constructorDescription":"Constructor for a new <code>FavoriteAction<\/code>."},{"template":"new sap.f.semantic.FlagAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/f/semantic/FlagAction","static":"true","extends":"sap.f.semantic.SemanticButton","helpDescription":"A semantic-specific button, eligible for the <code>flagAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"FlagAction(sId?, mSettings?) : sap.f.semantic.FlagAction","name":"sap.f.semantic.FlagAction","prefix":"FlagAction","Experimental":false,"constructorDescription":"Constructor for a new <code>FlagAction<\/code>."},{"template":"new sap.f.semantic.FooterMainAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/f/semantic/FooterMainAction","static":"true","extends":"sap.f.semantic.SemanticButton","helpDescription":"A semantic-specific button, eligible for the <code>footerMainAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its footer.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"FooterMainAction(sId?, mSettings?) : sap.f.semantic.FooterMainAction","name":"sap.f.semantic.FooterMainAction","prefix":"FooterMainAction","Experimental":false,"constructorDescription":"Constructor for a new <code>FooterMainAction<\/code>."},{"template":"new sap.f.semantic.FullScreenAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/f/semantic/FullScreenAction","static":"true","extends":"sap.f.semantic.SemanticButton","helpDescription":"A semantic-specific button, eligible for the <code>fullScreenAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"FullScreenAction(sId?, mSettings?) : sap.f.semantic.FullScreenAction","name":"sap.f.semantic.FullScreenAction","prefix":"FullScreenAction","Experimental":false,"constructorDescription":"Constructor for a new <code>FullScreenAction<\/code>."},{"template":"new sap.f.semantic.MainAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\ttext: \"${text}\" // string\n\t}\n)\n","module":"sap/f/semantic/MainAction","static":"true","extends":"sap.f.semantic.SemanticButton","helpDescription":"Serves as a base class for the {@link sap.f.semantic.TitleMainAction} and {@link sap.f.semantic.FooterMainAction} controls.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"MainAction(sId?, mSettings?) : sap.f.semantic.MainAction","name":"sap.f.semantic.MainAction","prefix":"MainAction","Experimental":false,"constructorDescription":"Constructor for a new MainAction.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.f.semantic.SemanticButton#constructor sap.f.semantic.SemanticButton}\ncan be used as well."},{"template":"new sap.f.semantic.MessagesIndicator(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/f/semantic/MessagesIndicator","static":"true","extends":"sap.f.semantic.SemanticButton","helpDescription":"A semantic-specific button, eligible for the <code>messagesIndicator<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its footer.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"MessagesIndicator(sId?, mSettings?) : sap.f.semantic.MessagesIndicator","name":"sap.f.semantic.MessagesIndicator","prefix":"MessagesIndicator","Experimental":false,"constructorDescription":"Constructor for a new <code>MessagesIndicator<\/code>."},{"template":"new sap.f.semantic.NegativeAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\ttext: \"${text}\" // string\n\t}\n)\n","module":"sap/f/semantic/NegativeAction","static":"true","extends":"sap.f.semantic.SemanticButton","helpDescription":"A semantic-specific button, eligible for the <code>negativeAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its footer.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"NegativeAction(sId?, mSettings?) : sap.f.semantic.NegativeAction","name":"sap.f.semantic.NegativeAction","prefix":"NegativeAction","Experimental":false,"constructorDescription":"Constructor for a new <code>NegativeAction<\/code>.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.f.semantic.SemanticButton#constructor sap.f.semantic.SemanticButton}\ncan be used as well."},{"template":"new sap.f.semantic.PositiveAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\ttext: \"${text}\" // string\n\t}\n)\n","module":"sap/f/semantic/PositiveAction","static":"true","extends":"sap.f.semantic.SemanticButton","helpDescription":"A semantic-specific button, eligible for the <code>positiveAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its footer.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"PositiveAction(sId?, mSettings?) : sap.f.semantic.PositiveAction","name":"sap.f.semantic.PositiveAction","prefix":"PositiveAction","Experimental":false,"constructorDescription":"Constructor for a new <code>PositiveAction<\/code>.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.f.semantic.SemanticButton#constructor sap.f.semantic.SemanticButton}\ncan be used as well."},{"template":"new sap.f.semantic.PrintAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/f/semantic/PrintAction","static":"true","extends":"sap.f.semantic.SemanticButton","helpDescription":"A semantic-specific button, eligible for the <code>printAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"PrintAction(sId?, mSettings?) : sap.f.semantic.PrintAction","name":"sap.f.semantic.PrintAction","prefix":"PrintAction","Experimental":false,"constructorDescription":"Constructor for a new <code>PrintAction<\/code>."},{"template":"new sap.f.semantic.SemanticButton(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/f/semantic/SemanticButton","static":"true","extends":"sap.f.semantic.SemanticControl","helpDescription":"A base class for the available semantic actions, such as {@link sap.f.semantic.AddAction AddAction}, {@link sap.f.semantic.CloseAction CloseAction}, etc.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SemanticButton(sId?, mSettings?) : sap.f.semantic.SemanticButton","name":"sap.f.semantic.SemanticButton","prefix":"SemanticButton","Experimental":false,"constructorDescription":"Constructor for a new <code>SemanticButton<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.f.semantic.SemanticControl#constructor sap.f.semantic.SemanticControl}\ncan be used as well."},{"template":"new sap.f.semantic.SemanticControl(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible} // boolean\n\t}\n)\n","module":"sap/f/semantic/SemanticControl","static":"true","extends":"sap.ui.core.Element","helpDescription":"The base class for the {@link sap.f.semantic.SemanticButton}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SemanticControl(sId?, mSettings?) : sap.f.semantic.SemanticControl","name":"sap.f.semantic.SemanticControl","prefix":"SemanticControl","Experimental":false,"constructorDescription":"Constructor for a new <code>SemanticControl<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."},{"template":"new sap.f.semantic.SemanticPage(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\theaderExpanded: ${bHeaderExpanded}, // boolean\n\t\theaderPinnable: ${bHeaderPinnable}, // boolean\n\t\tpreserveHeaderStateOnScroll: ${bPreserveHeaderStateOnScroll}, // boolean\n\t\ttoggleHeaderOnTitleClick: ${bToggleHeaderOnTitleClick}, // boolean\n\t\tshowFooter: ${bShowFooter}, // boolean\n\t\ttitlePrimaryArea: ${sap.f.DynamicPageTitleArea.Begin}, // sap.f.DynamicPageTitleArea\n\t\ttitleHeading: ${titleHeading}, // sap.ui.core.Control\n\t\ttitleBreadcrumbs: ${titleBreadcrumbs}, // sap.m.IBreadcrumbs\n\t\ttitleSnappedContent: [${titleSnappedContent}], // sap.ui.core.Control[]\n\t\ttitleExpandedContent: [${titleExpandedContent}], // sap.ui.core.Control[]\n\t\ttitleContent: [${titleContent}], // sap.ui.core.Control[]\n\t\ttitleMainAction: ${titleMainAction}, // sap.f.semantic.TitleMainAction\n\t\teditAction: ${editAction}, // sap.f.semantic.EditAction\n\t\tdeleteAction: ${deleteAction}, // sap.f.semantic.DeleteAction\n\t\tcopyAction: ${copyAction}, // sap.f.semantic.CopyAction\n\t\taddAction: ${addAction}, // sap.f.semantic.AddAction\n\t\tflagAction: ${flagAction}, // sap.f.semantic.FlagAction\n\t\tfavoriteAction: ${favoriteAction}, // sap.f.semantic.FavoriteAction\n\t\tfullScreenAction: ${fullScreenAction}, // sap.f.semantic.FullScreenAction\n\t\texitFullScreenAction: ${exitFullScreenAction}, // sap.f.semantic.ExitFullScreenAction\n\t\tcloseAction: ${closeAction}, // sap.f.semantic.CloseAction\n\t\ttitleCustomTextActions: [${titleCustomTextActions}], // sap.m.Button[]\n\t\ttitleCustomIconActions: [${titleCustomIconActions}], // sap.m.OverflowToolbarButton[]\n\t\theaderContent: [${headerContent}], // sap.ui.core.Control[]\n\t\tcontent: ${content}, // sap.ui.core.Control\n\t\tfooterMainAction: ${footerMainAction}, // sap.f.semantic.FooterMainAction\n\t\tmessagesIndicator: ${messagesIndicator}, // sap.f.semantic.MessagesIndicator\n\t\tdraftIndicator: ${draftIndicator}, // sap.m.DraftIndicator\n\t\tpositiveAction: ${positiveAction}, // sap.f.semantic.PositiveAction\n\t\tnegativeAction: ${negativeAction}, // sap.f.semantic.NegativeAction\n\t\tfooterCustomActions: [${footerCustomActions}], // sap.m.Button[]\n\t\tdiscussInJamAction: ${discussInJamAction}, // sap.f.semantic.DiscussInJamAction\n\t\tsaveAsTileAction: ${saveAsTileAction}, // sap.m.Button\n\t\tshareInJamAction: ${shareInJamAction}, // sap.f.semantic.ShareInJamAction\n\t\tsendMessageAction: ${sendMessageAction}, // sap.f.semantic.SendMessageAction\n\t\tsendEmailAction: ${sendEmailAction}, // sap.f.semantic.SendEmailAction\n\t\tprintAction: ${printAction}, // sap.f.semantic.PrintAction\n\t\tcustomShareActions: [${customShareActions}] // sap.m.Button[]\n\t}\n)\n","module":"sap/f/semantic/SemanticPage","static":"true","extends":"sap.ui.core.Control","helpDescription":"An enhanced {@link sap.f.DynamicPage}, that contains controls with semantic-specific meaning.\n\n<h3>Overview<\/h3>\n\nContent specified in the <code>sap.f.semantic.SemanticPage<\/code> aggregations is automatically positioned in dedicated sections of the title or the footer of the page, depending on the control's semantics.\n\nThe actions in the <code>SemanticPage<\/code> title are grouped to text actions or icon actions. When an aggregation is set, the actions appear in the following predefined order (from left to right):\n\n<ul>Text actions: <li>The main semantic text action - <code>titleMainAction<\/code><\/li> <li>Any custom text actions - <code>titleCustomTextActions<\/code><\/li> <li>The semantic text actions - <code>editAction<\/code>, <code>deleteAction<\/code>, <code>copyAction<\/code> and <code>addAction<\/code><\/li><\/ul>\n\n<ul>Icon actions: <li>Any custom icon actions - <code>titleCustomIconActions<\/code><\/li> <li>The simple semantic icon actions - <code>favoriteAction<\/code> and <code>flagAction<\/code><\/li> <li>The share menu semantic icon actions as a drop-down list with the following order: <ul><li><code>sendEmailAction<\/code><\/li> <li><code>discussInJamAction<\/code><\/li> <li><code>shareInJamAction<\/code><\/li> <li><code>sendMessageAction<\/code><\/li> <li><code>printAction<\/code><\/li> <li>Any <code>customShareActions<\/code><\/li><\/ul><\/li> <li>The navigation semantic actions - <code>fullScreenAction<\/code>, <code>exitFullScreenAction<\/code>, and <code>closeAction<\/li><\/code><\/ul>\n\nThe actions in the <code>SemanticPage<\/code> footer are positioned either on its left or right area and have the following predefined order:\n\n<ul>Footer left area: <li>The semantic text action - <code>messagesIndicator<\/code><\/li> <li>The semantic label - <code>draftIndicator<\/code><\/li><\/ul>\n\n<ul>Footer right area: <li>The main semantic text action - <code>footerMainAction<\/code><\/li> <li>The semantic text actions - <code>positiveAction<\/code> and <code>negativeAction<\/code><\/li> <li>Any custom text actions - <code>footerCustomActions<\/code><\/li><\/ul>\n\n<h3>Usage<\/h3>\n\nUsing the <code>SemanticPage<\/code> facilitates the implementation of the SAP Fiori 2.0 design guidelines.\n\n<h3>Responsive behavior<\/h3>\n\nThe responsive behavior of the <code>SemanticPage<\/code> depends on the behavior of the content that is displayed.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SemanticPage(sId?, mSettings?) : sap.f.semantic.SemanticPage","name":"sap.f.semantic.SemanticPage","prefix":"SemanticPage","Experimental":false,"constructorDescription":"Constructor for a new <code>SemanticPage<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeaderExpanded headerExpanded} : boolean (default: true)<\/li>\n<li>{@link #getHeaderPinnable headerPinnable} : boolean (default: true)<\/li>\n<li>{@link #getPreserveHeaderStateOnScroll preserveHeaderStateOnScroll} : boolean (default: false)<\/li>\n<li>{@link #getToggleHeaderOnTitleClick toggleHeaderOnTitleClick} : boolean (default: true)<\/li>\n<li>{@link #getShowFooter showFooter} : boolean (default: false)<\/li>\n<li>{@link #getTitlePrimaryArea titlePrimaryArea} : sap.f.DynamicPageTitleArea (default: Begin)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTitleHeading titleHeading} : sap.ui.core.Control<\/li>\n<li>{@link #getTitleBreadcrumbs titleBreadcrumbs} : sap.m.IBreadcrumbs<\/li>\n<li>{@link #getTitleSnappedContent titleSnappedContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getTitleExpandedContent titleExpandedContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getTitleContent titleContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getTitleMainAction titleMainAction} : sap.f.semantic.TitleMainAction<\/li>\n<li>{@link #getEditAction editAction} : sap.f.semantic.EditAction<\/li>\n<li>{@link #getDeleteAction deleteAction} : sap.f.semantic.DeleteAction<\/li>\n<li>{@link #getCopyAction copyAction} : sap.f.semantic.CopyAction<\/li>\n<li>{@link #getAddAction addAction} : sap.f.semantic.AddAction<\/li>\n<li>{@link #getFlagAction flagAction} : sap.f.semantic.FlagAction<\/li>\n<li>{@link #getFavoriteAction favoriteAction} : sap.f.semantic.FavoriteAction<\/li>\n<li>{@link #getFullScreenAction fullScreenAction} : sap.f.semantic.FullScreenAction<\/li>\n<li>{@link #getExitFullScreenAction exitFullScreenAction} : sap.f.semantic.ExitFullScreenAction<\/li>\n<li>{@link #getCloseAction closeAction} : sap.f.semantic.CloseAction<\/li>\n<li>{@link #getTitleCustomTextActions titleCustomTextActions} : sap.m.Button[]<\/li>\n<li>{@link #getTitleCustomIconActions titleCustomIconActions} : sap.m.OverflowToolbarButton[]<\/li>\n<li>{@link #getHeaderContent headerContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getContent content} : sap.ui.core.Control (default)<\/li>\n<li>{@link #getFooterMainAction footerMainAction} : sap.f.semantic.FooterMainAction<\/li>\n<li>{@link #getMessagesIndicator messagesIndicator} : sap.f.semantic.MessagesIndicator<\/li>\n<li>{@link #getDraftIndicator draftIndicator} : sap.m.DraftIndicator<\/li>\n<li>{@link #getPositiveAction positiveAction} : sap.f.semantic.PositiveAction<\/li>\n<li>{@link #getNegativeAction negativeAction} : sap.f.semantic.NegativeAction<\/li>\n<li>{@link #getFooterCustomActions footerCustomActions} : sap.m.Button[]<\/li>\n<li>{@link #getDiscussInJamAction discussInJamAction} : sap.f.semantic.DiscussInJamAction<\/li>\n<li>{@link #getSaveAsTileAction saveAsTileAction} : sap.m.Button<\/li>\n<li>{@link #getShareInJamAction shareInJamAction} : sap.f.semantic.ShareInJamAction<\/li>\n<li>{@link #getSendMessageAction sendMessageAction} : sap.f.semantic.SendMessageAction<\/li>\n<li>{@link #getSendEmailAction sendEmailAction} : sap.f.semantic.SendEmailAction<\/li>\n<li>{@link #getPrintAction printAction} : sap.f.semantic.PrintAction<\/li>\n<li>{@link #getCustomShareActions customShareActions} : sap.m.Button[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.f.semantic.SemanticToggleButton(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tpressed: ${bPressed} // boolean\n\t}\n)\n","module":"sap/f/semantic/SemanticToggleButton","static":"true","extends":"sap.f.semantic.SemanticButton","helpDescription":"A base class for the {@link sap.f.semantic.FavoriteAction} and {@link sap.f.semantic.FlagAction}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SemanticToggleButton(sId?, mSettings?) : sap.f.semantic.SemanticToggleButton","name":"sap.f.semantic.SemanticToggleButton","prefix":"SemanticToggleButton","Experimental":false,"constructorDescription":"Constructor for a new <code>SemanticToggleButton<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPressed pressed} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.f.semantic.SemanticButton#constructor sap.f.semantic.SemanticButton}\ncan be used as well."},{"template":"new sap.f.semantic.SendEmailAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/f/semantic/SendEmailAction","static":"true","extends":"sap.f.semantic.SemanticButton","helpDescription":"A semantic-specific button, eligible for the <code>sendEmailAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SendEmailAction(sId?, mSettings?) : sap.f.semantic.SendEmailAction","name":"sap.f.semantic.SendEmailAction","prefix":"SendEmailAction","Experimental":false,"constructorDescription":"Constructor for a new <code>SendEmailAction<\/code>."},{"template":"new sap.f.semantic.SendMessageAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/f/semantic/SendMessageAction","static":"true","extends":"sap.f.semantic.SemanticButton","helpDescription":"A semantic-specific button, eligible for the <code>sendMessageAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SendMessageAction(sId?, mSettings?) : sap.f.semantic.SendMessageAction","name":"sap.f.semantic.SendMessageAction","prefix":"SendMessageAction","Experimental":false,"constructorDescription":"Constructor for a new <code>SendMessageAction<\/code>."},{"template":"new sap.f.semantic.ShareInJamAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/f/semantic/ShareInJamAction","static":"true","extends":"sap.f.semantic.SemanticButton","helpDescription":"A semantic-specific button, eligible for the <code>shareInJamAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in the share menu within its title.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ShareInJamAction(sId?, mSettings?) : sap.f.semantic.ShareInJamAction","name":"sap.f.semantic.ShareInJamAction","prefix":"ShareInJamAction","Experimental":false,"constructorDescription":"Constructor for a new <code>ShareInJamAction<\/code>."},{"template":"new sap.f.semantic.TitleMainAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/f/semantic/TitleMainAction","static":"true","extends":"sap.f.semantic.SemanticButton","helpDescription":"A semantic-specific button, eligible for the <code>titleMainAction<\/code> aggregation of the {@link sap.f.semantic.SemanticPage} to be placed in its title.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"TitleMainAction(sId?, mSettings?) : sap.f.semantic.TitleMainAction","name":"sap.f.semantic.TitleMainAction","prefix":"TitleMainAction","Experimental":false,"constructorDescription":"Constructor for a new <code>TitleMainAction<\/code>."}]}