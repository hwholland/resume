{"!version":"1.18.0","Templates":[{"template":"new sap.m.ActionListItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\ttext: \"${text}\" // string\n\t}\n)\n","module":"sap/m/ActionListItem","static":"true","extends":"sap.m.ListItemBase","helpDescription":"The <code>sap.m.ActionListItem<\/code> can be used like a <code>button<\/code> to fire actions when pressed. <b>Note:<\/b> The inherited <code>selected<\/code> property of the <code>sap.m.ListItemBase<\/code> is not supported.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ActionListItem(sId?, mSettings?) : sap.m.ActionListItem","name":"sap.m.ActionListItem","prefix":"ActionListItem","Experimental":false,"constructorDescription":"Constructor for a new ActionListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well."},{"template":"new sap.m.ActionSelect(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tname: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\twidth: ${\"auto\"}, // sap.ui.core.CSSSize\n\t\tmaxWidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tselectedKey: ${\"\"}, // string\n\t\tselectedItemId: ${\"\"}, // string\n\t\ticon: ${\"\"}, // sap.ui.core.URI\n\t\ttype: ${sap.m.SelectType.Default}, // sap.m.SelectType\n\t\tautoAdjustWidth: ${bAutoAdjustWidth}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tvalueStateText: ${\"\"}, // string\n\t\tshowSecondaryValues: ${bShowSecondaryValues}, // boolean\n\t\tforceSelection: ${bForceSelection}, // boolean\n\t\titems: [${items}], // sap.ui.core.Item[]\n\t\tselectedItem: ${selectedItem}, // (sap.ui.core.Item|string)\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tbuttons: [${buttons}] // (sap.m.Button|string)[]\n\t}\n)\n","module":"sap/m/ActionSelect","static":"true","extends":"sap.m.Select","helpDescription":"The ActionSelect control provides a list of predefined items that allows end users to choose options and additionally trigger some actions.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ActionSelect(sId?, mSettings?) : sap.m.ActionSelect","name":"sap.m.ActionSelect","prefix":"ActionSelect","Experimental":false,"constructorDescription":"Constructor for a new ActionSelect.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Associations\n<ul>\n<li>{@link #getButtons buttons} : (sap.ui.core.ID | sap.m.Button)[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Select#constructor sap.m.Select}\ncan be used as well."},{"template":"new sap.m.ActionSheet(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tplacement: ${sap.m.PlacementType.Bottom}, // sap.m.PlacementType\n\t\tshowCancelButton: ${bShowCancelButton}, // boolean\n\t\tcancelButtonText: \"${cancelButtonText}\", // string\n\t\ttitle: \"${title}\", // string\n\t\tbuttons: [${buttons}], // sap.m.Button[]\n\t\tcancelButtonTap: [function (oEvent) {}, this], // function|array\n\t\tbeforeOpen: [function (oEvent) {}, this], // function|array\n\t\tafterOpen: [function (oEvent) {}, this], // function|array\n\t\tbeforeClose: [function (oEvent) {}, this], // function|array\n\t\tafterClose: [function (oEvent) {}, this], // function|array\n\t\tcancelButtonPress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/ActionSheet","static":"true","extends":"sap.ui.core.Control","helpDescription":"The action sheet holds a list of options from which the user can select to complete an action. <h3>Overview<\/h3> The options of the action sheet are represented as {@link sap.m.Button buttons} with icons. Elements in the action sheet are left-aligned. Actions should be arranged in order of importance, from top to bottom. <h3>Guidelines<\/h3> <ul> <li>Always display text or text and icons for the actions. Do not use icons only.<\/li> <li>Always provide a Cancel button on mobile phones.<\/li> <li>Avoid scrolling on action sheets.<\/li> <\/ul> <h3>Responsive Behavior<\/h3> On mobile phones the action sheet is displayed in a {@link sap.m.Dialog dialog}.\n\nOn tablets and desktop the action sheet is displayed in a {@link sap.m.Popover popover}.\n\nWhen an action is triggered, the action sheet closes and you can display a confirmation as a {@link sap.m.MessageToast message toast}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ActionSheet(sId?, mSettings?) : sap.m.ActionSheet","name":"sap.m.ActionSheet","prefix":"ActionSheet","Experimental":false,"constructorDescription":"Constructor for a new ActionSheet.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPlacement placement} : sap.m.PlacementType (default: Bottom)<\/li>\n<li>{@link #getShowCancelButton showCancelButton} : boolean (default: true)<\/li>\n<li>{@link #getCancelButtonText cancelButtonText} : string<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getButtons buttons} : sap.m.Button[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:cancelButtonTap cancelButtonTap} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeOpen beforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterOpen afterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeClose beforeClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterClose afterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancelButtonPress cancelButtonPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.App(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tautoFocus: ${bAutoFocus}, // boolean\n\t\theight: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tdefaultTransitionName: ${\"slide\"}, // string\n\t\tpages: [${pages}], // sap.ui.core.Control[]\n\t\tinitialPage: ${initialPage}, // (sap.ui.core.Control|string)\n\t\tnavigate: [function (oEvent) {}, this], // function|array\n\t\tafterNavigate: [function (oEvent) {}, this], // function|array\n\t\thomeIcon: ${homeIcon}, // any\n\t\tbackgroundColor: \"${backgroundColor}\", // string\n\t\tbackgroundImage: ${backgroundImage}, // sap.ui.core.URI\n\t\tbackgroundRepeat: ${bBackgroundRepeat}, // boolean\n\t\tbackgroundOpacity: ${1}, // float\n\t\torientationChange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/App","static":"true","extends":"sap.m.NavContainer","helpDescription":"The root element of a UI5 mobile app.\n\n<h3>Overview<\/h3>\n\nThe <code>App<\/code> inherits from {@link sap.m.NavContainer} and thus provides its navigation capabilities. It adds certain header tags to the HTML page which are considered useful for mobile apps.\n\n<h3>Usage<\/h3>\n\nYou can configure the home icon of the <code>App<\/code>. For more information, see the <code>homeIcon<\/code> property.\n\nThere are options for setting the background color and a background image with the use of the <code>backgroundColor<\/code> and <code>backgroundImage<\/code> properties.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"use sap.ui.Device.orientation.attachHandler(...)","since":"1.20.0"},"description":"App(sId?, mSettings?) : sap.m.App","name":"sap.m.App","prefix":"App","Experimental":false,"constructorDescription":"Constructor for a new <code>App<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHomeIcon homeIcon} : any<\/li>\n<li>{@link #getBackgroundColor backgroundColor} : string<\/li>\n<li>{@link #getBackgroundImage backgroundImage} : sap.ui.core.URI<\/li>\n<li>{@link #getBackgroundRepeat backgroundRepeat} : boolean (default: false)<\/li>\n<li>{@link #getBackgroundOpacity backgroundOpacity} : float (default: 1)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:orientationChange orientationChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.NavContainer#constructor sap.m.NavContainer}\ncan be used as well."},{"template":"fireOrientationChange(\n\t{\n\t\tlandscape: ${bLandscape} // boolean\n\t}\n)\n","Deprecated":true,"helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.20.0 use sap.ui.Device.orientation.attachHandler(...)<br>Fires event {@link #event:orientationChange orientationChange} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"use sap.ui.Device.orientation.attachHandler(...)","since":"1.20.0"},"description":"fireOrientationChange(mParameters?) : sap.m.App","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.App.fireOrientationChange"},{"template":"new sap.m.Bar(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tenableFlexBox: ${bEnableFlexBox}, // boolean\n\t\ttranslucent: ${bTranslucent}, // boolean\n\t\tdesign: ${sap.m.BarDesign.Auto}, // sap.m.BarDesign\n\t\tcontentLeft: [${contentLeft}], // sap.ui.core.Control[]\n\t\tcontentMiddle: [${contentMiddle}], // sap.ui.core.Control[]\n\t\tcontentRight: [${contentRight}], // sap.ui.core.Control[]\n\t\tariaLabelledBy: [${ariaLabelledBy}] // (sap.ui.core.Control|string)[]\n\t}\n)\n","module":"sap/m/Bar","static":"true","extends":"sap.ui.core.Control","helpDescription":"Used as a header, sub-header and a footer of a page.\n\n<h3>Overview<\/h3>\n\nThe <code>Bar<\/code> control consists of three areas to hold its content. It has the capability to center content, such as a title, while having other controls on the left and right side.\n\n<h3>Usage<\/h3>\n\nWith the use of the <code>design<\/code> property, you can set the style of the <code>Bar<\/code> to appear as a header, sub-header and footer.\n\n<b>Note:<\/b> Do not place a <code>sap.m.Bar<\/code> inside another <code>sap.m.Bar<\/code> or inside any bar-like control. Doing so causes unpredictable behavior.\n\n<h3>Responsive Behavior<\/h3>\n\nThe content in the middle area is centrally positioned if there is enough space. If the right or left content overlaps the middle content, the middle content will be centered in the space between.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"Bar(sId?, mSettings?) : sap.m.Bar","name":"sap.m.Bar","prefix":"Bar","Experimental":false,"constructorDescription":"Constructor for a new <code>Bar<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnableFlexBox enableFlexBox} : boolean (default: false)<\/li>\n<li>{@link #getTranslucent translucent} : boolean (default: false)<\/li>\n<li>{@link #getDesign design} : sap.m.BarDesign (default: Auto)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContentLeft contentLeft} : sap.ui.core.Control[]<\/li>\n<li>{@link #getContentMiddle contentMiddle} : sap.ui.core.Control[]<\/li>\n<li>{@link #getContentRight contentRight} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.Breadcrumbs(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tcurrentLocationText: \"${currentLocationText}\", // string\n\t\tlinks: [${links}] // sap.m.Link[]\n\t}\n)\n","module":"sap/m/Breadcrumbs","static":"true","extends":"sap.ui.core.Control","helpDescription":"Enables users to navigate between items by providing a list of links to previous steps in the user's navigation path. The last three steps can be accessed as links directly The remaining links prior to them are available in a drop-down menu.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"Breadcrumbs(sId?, mSettings?) : sap.m.Breadcrumbs","name":"sap.m.Breadcrumbs","prefix":"Breadcrumbs","Experimental":false,"constructorDescription":"Constructor for a new Breadcrumbs\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getCurrentLocationText currentLocationText} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getLinks links} : sap.m.Link[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.BusyDialog(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: ${\"\"}, // string\n\t\ttitle: ${\"\"}, // string\n\t\tcustomIcon: ${\"\"}, // sap.ui.core.URI\n\t\tcustomIconRotationSpeed: ${1000}, // int\n\t\tcustomIconDensityAware: ${bCustomIconDensityAware}, // boolean\n\t\tcustomIconWidth: ${\"44px\"}, // sap.ui.core.CSSSize\n\t\tcustomIconHeight: ${\"44px\"}, // sap.ui.core.CSSSize\n\t\tcancelButtonText: ${\"\"}, // string\n\t\tshowCancelButton: ${bShowCancelButton}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tclose: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/BusyDialog","static":"true","extends":"sap.ui.core.Control","helpDescription":"BusyDialog is used to indicate that the system is busy. <h3>Overview<\/h3> When the busy dialog is displayed, the whole application is blocked. <h3>Structure<\/h3> The busy dialog can hold several elements, most of which are optional. <ul> <li><code>title<\/code> - A title for the dialog. By default, there is no title.<\/li> <li><code>text<\/code> - A text displayed above the busy animation.<\/li> <li><code>showCancelButton<\/code> - An optional Cancel button to stop the execution.<\/li> <li><code>customIcon<\/code> - An optional alternative icon to use as a busy animation.<\/li> <\/ul> <h3>Usage<\/h3> <h4>When to use<\/h4> <ul> <li>The operation lasts more than one second.<\/li> <li>You want to indicate loading in a page-to-page navigation (lightweight version).<\/li> <li>Offer a Cancel button if you expect the process to run more than 10 seconds.<\/li> <li> If you do not show a title or text, use the {@link sap.ui.core.InvisibleText invisible text} control to provide the reason for users with assistive technologies.<\/li> <\/ul> <h4>When not to use<\/h4> <ul> <li>The screen is not supposed to be blocked. Use a {@link sap.m.BusyIndicator} for the specific application part.<\/li> <li>Do not use the title of the busy dialog. Provide a precise text describing the operation in <code>text<\/code>.<\/li> <\/ul>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"BusyDialog(sId?, mSettings?) : sap.m.BusyDialog","name":"sap.m.BusyDialog","prefix":"BusyDialog","Experimental":false,"constructorDescription":"Constructor for a new BusyDialog.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getCustomIcon customIcon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getCustomIconRotationSpeed customIconRotationSpeed} : int (default: 1000)<\/li>\n<li>{@link #getCustomIconDensityAware customIconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getCustomIconWidth customIconWidth} : sap.ui.core.CSSSize (default: 44px)<\/li>\n<li>{@link #getCustomIconHeight customIconHeight} : sap.ui.core.CSSSize (default: 44px)<\/li>\n<li>{@link #getCancelButtonText cancelButtonText} : string (default: )<\/li>\n<li>{@link #getShowCancelButton showCancelButton} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:close close} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireClose(\n\t{\n\t\tcancelPressed: ${bCancelPressed} // boolean\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:close close} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireClose(mParameters?) : sap.m.BusyDialog","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.BusyDialog.fireClose"},{"template":"new sap.m.BusyIndicator(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: ${\"\"}, // string\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tcustomIcon: ${\"\"}, // sap.ui.core.URI\n\t\tcustomIconRotationSpeed: ${1000}, // int\n\t\tcustomIconDensityAware: ${bCustomIconDensityAware}, // boolean\n\t\tcustomIconWidth: ${\"44px\"}, // sap.ui.core.CSSSize\n\t\tcustomIconHeight: ${\"44px\"}, // sap.ui.core.CSSSize\n\t\tsize: ${\"1rem\"}, // sap.ui.core.CSSSize\n\t\tdesign: ${\"auto\"}, // string\n\t\tariaLabelledBy: [${ariaLabelledBy}] // (sap.ui.core.Control|string)[]\n\t}\n)\n","module":"sap/m/BusyIndicator","static":"true","extends":"sap.ui.core.Control","helpDescription":"Informs the user about an ongoing operation. <h3>Overview<\/h3> The busy indicator implies that an action is taking place within a single control. You can set the size of the icon, the text, but also define a custom icon to be used instead. <h3>Usage<\/h3> <h4>When to use<\/h4> <ul> <li>The user needs to be able to cancel the operation.<\/li> <li>Only part of the application or a particular control is affected.<\/li> <\/ul> <h4>When not to use<\/h4> <ul> <li>The operation takes less than one second.<\/li> <li>You need to block the screen and prevent the user from starting another activity. In this case, use the {@link sap.m.BusyDialog busy dialog}.<\/li> <li>Do not change the mouse cursor to indicate the ongoing operation.<\/li> <li>Do not show multiple busy indicators at once<\/li> <\/ul>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"BusyIndicator(sId?, mSettings?) : sap.m.BusyIndicator","name":"sap.m.BusyIndicator","prefix":"BusyIndicator","Experimental":false,"constructorDescription":"Constructor for a new BusyIndicator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getCustomIcon customIcon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getCustomIconRotationSpeed customIconRotationSpeed} : int (default: 1000)<\/li>\n<li>{@link #getCustomIconDensityAware customIconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getCustomIconWidth customIconWidth} : sap.ui.core.CSSSize (default: 44px)<\/li>\n<li>{@link #getCustomIconHeight customIconHeight} : sap.ui.core.CSSSize (default: 44px)<\/li>\n<li>{@link #getSize size} : sap.ui.core.CSSSize (default: 1rem)<\/li>\n<li>{@link #getDesign design} : string (default: auto)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.Button(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: \"${text}\", // string\n\t\ttype: ${sap.m.ButtonType.Default}, // sap.m.ButtonType\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\ticonFirst: ${bIconFirst}, // boolean\n\t\tactiveIcon: ${activeIcon}, // sap.ui.core.URI\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/Button","static":"true","extends":"sap.ui.core.Control","helpDescription":"Enables users to trigger actions.\n\n<h3>Overview<\/h3>\n\nThe user triggers an action by clicking or tapping the <code>Button<\/code> or by pressing certain keyboard keys, such as Enter.\n\n<h3>Usage<\/h3>\n\nFor the <code>Button<\/code> UI, you can define text, icon, or both. You can also specify whether the text or the icon is displayed first.\n\nYou can choose from a set of predefined {@link sap.m.ButtonType ButtonTypes} that offer different styling to correspond to the triggered action.\n\nYou can set the <code>Button<\/code> as enabled or disabled. An enabled <code>Button<\/code> can be pressed by clicking or tapping it and it changes its style to provide visual feedback to the user that it is pressed or hovered over with the mouse cursor. A disabled <code>Button<\/code> appears inactive and cannot be pressed.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"Button(sId?, mSettings?) : sap.m.Button","name":"sap.m.Button","prefix":"Button","Experimental":false,"constructorDescription":"Constructor for a new <code>Button<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getType type} : sap.m.ButtonType (default: Default)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconFirst iconFirst} : boolean (default: true)<\/li>\n<li>{@link #getActiveIcon activeIcon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:tap tap} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.Carousel(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\theight: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tloop: ${bLoop}, // boolean\n\t\tshowPageIndicator: ${bShowPageIndicator}, // boolean\n\t\tpageIndicatorPlacement: ${sap.m.PlacementType.Bottom}, // sap.m.PlacementType\n\t\tshowBusyIndicator: ${bShowBusyIndicator}, // boolean\n\t\tbusyIndicatorSize: ${\"6em\"}, // sap.ui.core.CSSSize\n\t\tarrowsPlacement: ${sap.m.CarouselArrowsPlacement.Content}, // sap.m.CarouselArrowsPlacement\n\t\tpages: [${pages}], // sap.ui.core.Control[]\n\t\tactivePage: ${activePage}, // (sap.ui.core.Control|string)\n\t\tloadPage: [function (oEvent) {}, this], // function|array\n\t\tunloadPage: [function (oEvent) {}, this], // function|array\n\t\tpageChanged: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/Carousel","static":"true","extends":"sap.ui.core.Control","helpDescription":"The carousel allows the user to browse through a set of items by swiping right or left. <h3>Overview<\/h3> The control is mostly used for showing a gallery of images, but can hold any sap.m control. <h3>Structure<\/h3> The carousel consists of a the following elements: <ul> <li>Content area - displays the different items.<\/li> <li>Navigation - arrows to the left and right for switching between items.<\/li> <li>(optional) Paging - indicator at the bottom to show the current position in the set.<\/li> <\/ul> The paging indicator can be configured as follows: <ul> <li><code>showPageIndicator<\/code> - determines if the indicator is displayed.<\/li> <li>If the pages are less than 9, the page indicator is represented with bullets.<\/li> <li>If the pages are 9 or more, the page indicator is numeric.<\/li> <li><code>pageIndicatorPlacement<\/code> - determines where the indicator is located. Default (<code>sap.m.PlacementType.Bottom<\/code>) - below the content.<\/li> <\/ul> Additionally, you can also change the location of the navigation arrows. By setting <code>arrowsPlacement<\/code> to <code>sap.m.CarouselArrowsPlacement.PageIndicator<\/code>, the arrows will be located at the bottom by the paging indicator. <h3>Usage<\/h3> <h4> When to use<\/h4> <ul> <li>The items you want to display are very different from each other.<\/li> <li>You want to display the items one after the other.<\/li> <\/ul> <h4> When not to use<\/h4> <ul> <li>The items you want to display need to be visible at the same time.<\/li> <li>The items you want to display are uniform and very similar<\/li> <\/ul> <h3>Responsive Behavior<\/h3> <ul> <li>On touch devices, navigation is performed with swipe gestures (swipe right or swipe left).<\/li> <li>On desktop, navigation is done with the navigation arrows.<\/li> <li>The paging indicator (when activated) is visible on each form factor.<\/li> <\/ul>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"Since 1.18.7 pages are no longer loaded or unloaded","since":"1.18.7"},"description":"Carousel(sId?, mSettings?) : sap.m.Carousel","name":"sap.m.Carousel","prefix":"Carousel","Experimental":false,"constructorDescription":"Constructor for a new Carousel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getLoop loop} : boolean (default: false)<\/li>\n<li>{@link #getShowPageIndicator showPageIndicator} : boolean (default: true)<\/li>\n<li>{@link #getPageIndicatorPlacement pageIndicatorPlacement} : sap.m.PlacementType (default: Bottom)<\/li>\n<li>{@link #getShowBusyIndicator showBusyIndicator} : boolean (default: true)<\/li>\n<li>{@link #getBusyIndicatorSize busyIndicatorSize} : sap.ui.core.CSSSize (default: 6em)<\/li>\n<li>{@link #getArrowsPlacement arrowsPlacement} : sap.m.CarouselArrowsPlacement (default: Content)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPages pages} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getActivePage activePage} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:loadPage loadPage} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:unloadPage unloadPage} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:pageChanged pageChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireLoadPage(\n\t{\n\t\tpageId: \"${pageId}\" // string\n\t}\n)\n","Deprecated":true,"helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.7 Since 1.18.7 pages are no longer loaded or unloaded<br>Fires event {@link #event:loadPage loadPage} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Since 1.18.7 pages are no longer loaded or unloaded","since":"1.18.7"},"description":"fireLoadPage(mParameters?) : sap.m.Carousel","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.Carousel.fireLoadPage"},{"template":"firePageChanged(\n\t{\n\t\toldActivePageId: \"${oldActivePageId}\", // string\n\t\tnewActivePageId: \"${newActivePageId}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:pageChanged pageChanged} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Since 1.18.7 pages are no longer loaded or unloaded","since":"1.18.7"},"description":"firePageChanged(mParameters?) : sap.m.Carousel","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.Carousel.firePageChanged"},{"template":"fireUnloadPage(\n\t{\n\t\tpageId: \"${pageId}\" // string\n\t}\n)\n","Deprecated":true,"helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.18.7 Since 1.18.7 pages are no longer loaded or unloaded<br>Fires event {@link #event:unloadPage unloadPage} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":true,"description":"Since 1.18.7 pages are no longer loaded or unloaded","since":"1.18.7"},"description":"fireUnloadPage(mParameters?) : sap.m.Carousel","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.Carousel.fireUnloadPage"},{"template":"new sap.m.CheckBox(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tselected: ${bSelected}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tname: \"${name}\", // string\n\t\ttext: \"${text}\", // string\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\ttextAlign: ${sap.ui.core.TextAlign.Begin}, // sap.ui.core.TextAlign\n\t\twidth: ${\"\"}, // sap.ui.core.CSSSize\n\t\tuseEntireWidth: ${bUseEntireWidth}, // boolean\n\t\tactiveHandling: ${bActiveHandling}, // boolean\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselect: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/CheckBox","static":"true","extends":"sap.ui.core.Control","helpDescription":"Allows the user to set a binary value, such as true/false or yes/no for an item.\n\n<h3>Overview<\/h3>\n\nThe <code>CheckBox<\/code> control consists of a box and a label that describes its purpose. If it's checked, an indicator is displayed inside the box.\n\nTo select/deselect the <code>CheckBox<\/code>, the user has to click or tap the square box or its label. Clicking or tapping toggles the <code>CheckBox<\/code> between checked and unchecked state. The <code>CheckBox<\/code> control only has 2 states - checked and unchecked. There is no third state for partially selected.\n\n<h3>Usage<\/h3>\n\nYou can set the width of the element containing the box and the label manually with the use of the <code>width<code> property. If the text exceeds the available width, it is truncated.\n\n<b>Note:<\/b> When <code>useEntireWidth<\/code> property is set to <code>true<\/code>, the value of the <code>width<\/code> property is applied to the control as a whole (box and label). If <code>useEntireWidth<\/code> is set to <code>false<\/code>, the <code>width<\/code> is applied to the label only.\n\nThe touchable area for toggling the <code>CheckBox<\/code> ends where the text ends.\n\nIf the width allows more space than the text requires, white space is added. The text can be positioned manually in this space using the <code>textAlign<code> property.\n\n<b>Note:<\/b> Keep in mind that setting the <code>textAlign<code> property to <code>Right<\/code> can result in a large amount of white space between the box and the text.\n\nYou can disable the <code>CheckBox<\/code> by setting the <code>enabled<\/code> property to <code>false<\/code>, or use the <code>CheckBox<\/code> in read-only mode by setting the <code>editable<\/code> property to false.\n\n<b>Note:<\/b> Disabled and read-only states shouldn't be used together.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"CheckBox(sId?, mSettings?) : sap.m.CheckBox","name":"sap.m.CheckBox","prefix":"CheckBox","Experimental":false,"constructorDescription":"Constructor for a new <code>CheckBox<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getUseEntireWidth useEntireWidth} : boolean (default: false)<\/li>\n<li>{@link #getActiveHandling activeHandling} : boolean (default: true)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireSelect(\n\t{\n\t\tselected: ${bSelected} // boolean\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:select select} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireSelect(mParameters?) : sap.m.CheckBox","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.CheckBox.fireSelect"},{"template":"new sap.m.Column(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\thAlign: ${sap.ui.core.TextAlign.Begin}, // sap.ui.core.TextAlign\n\t\tvAlign: ${sap.ui.core.VerticalAlign.Inherit}, // sap.ui.core.VerticalAlign\n\t\tstyleClass: \"${styleClass}\", // string\n\t\tvisible: ${bVisible}, // boolean\n\t\tminScreenWidth: \"${minScreenWidth}\", // string\n\t\tdemandPopin: ${bDemandPopin}, // boolean\n\t\tpopinHAlign: ${sap.ui.core.TextAlign.Begin}, // sap.ui.core.TextAlign\n\t\tpopinDisplay: ${sap.m.PopinDisplay.Block}, // sap.m.PopinDisplay\n\t\tmergeDuplicates: ${bMergeDuplicates}, // boolean\n\t\tmergeFunctionName: ${\"getText\"}, // string\n\t\theader: ${header}, // sap.ui.core.Control\n\t\tfooter: ${footer} // sap.ui.core.Control\n\t}\n)\n","module":"sap/m/Column","static":"true","extends":"sap.ui.core.Element","helpDescription":"The <code>sap.m.Column<\/code> allows to define column specific properties that will be applied when rendering the <code>sap.m.Table<\/code>.\n\nSee section \"{@link topic:6f778a805bc3453dbb66e246d8271839 Defining Column Width}\" in the documentation to understand how to define the <code>width<\/code> property of the <code>sap.m.Column<\/code> to render a <code>sap.m.Table<\/code> control properly.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"Column(sId?, mSettings?) : sap.m.Column","name":"sap.m.Column","prefix":"Column","Experimental":false,"constructorDescription":"Constructor for a new Column.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHAlign hAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getVAlign vAlign} : sap.ui.core.VerticalAlign (default: Inherit)<\/li>\n<li>{@link #getStyleClass styleClass} : string<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getMinScreenWidth minScreenWidth} : string<\/li>\n<li>{@link #getDemandPopin demandPopin} : boolean (default: false)<\/li>\n<li>{@link #getPopinHAlign popinHAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getPopinDisplay popinDisplay} : sap.m.PopinDisplay (default: Block)<\/li>\n<li>{@link #getMergeDuplicates mergeDuplicates} : boolean (default: false)<\/li>\n<li>{@link #getMergeFunctionName mergeFunctionName} : string (default: getText)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getHeader header} : sap.ui.core.Control (default)<\/li>\n<li>{@link #getFooter footer} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."},{"template":"new sap.m.ColumnListItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\tvAlign: ${sap.ui.core.VerticalAlign.Inherit}, // sap.ui.core.VerticalAlign\n\t\tcells: [${cells}] // sap.ui.core.Control[]\n\t}\n)\n","module":"sap/m/ColumnListItem","static":"true","extends":"sap.m.ListItemBase","helpDescription":"<code>sap.m.ColumnListItem<\/code> can be used with the <code>cells<\/code> aggregation to create rows for the <code>sap.m.Table<\/code> control. The <code>columns<\/code> aggregation of the <code>sap.m.Table<\/code> should match with the cells aggregation.\n\n<b>Note:<\/b> This control should only be used within the <code>sap.m.Table<\/code> control. The inherited <code>counter<\/code> property of <code>sap.m.ListItemBase<\/code> is not supported.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ColumnListItem(sId?, mSettings?) : sap.m.ColumnListItem","name":"sap.m.ColumnListItem","prefix":"ColumnListItem","Experimental":false,"constructorDescription":"Constructor for a new ColumnListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVAlign vAlign} : sap.ui.core.VerticalAlign (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCells cells} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well."},{"template":"new sap.m.ComboBox(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tmaxWidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tshowButton: ${bShowButton}, // boolean\n\t\titems: [${items}], // sap.ui.core.Item[]\n\t\tloadItems: [function (oEvent) {}, this], // function|array\n\t\tselectedKey: ${\"\"}, // string\n\t\tselectedItemId: ${\"\"}, // string\n\t\tshowSecondaryValues: ${bShowSecondaryValues}, // boolean\n\t\tfilterSecondaryValues: ${bFilterSecondaryValues}, // boolean\n\t\tselectedItem: ${selectedItem}, // (sap.ui.core.Item|string)\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tselectionChange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/ComboBox","static":"true","extends":"sap.m.ComboBoxBase","helpDescription":"A drop-down list for selecting and filtering values. <h3>Overview<\/h3> The control represents a drop-down menu with a list of the available options and a text input field to narrow down the options. <h3>Structure<\/h3> The combo-box consists of the following elements: <ul> <li> Input field - displays the selected option or a custom user entry. Users can type to narrow down the list or enter their own value.<\/li> <li> Drop-down arrow - expands\\collapses the option list.<\/li> <li> Option list - the list of available options.<\/li> <\/ul> By setting the <code>showSecondaryValues<\/code> property, the combo box can display an additional value for each option (if there is one). Filtering is done only on the first option. <h3>Usage<\/h3> <h4>When to use:<\/h4> <ul> <li>You need to select only one item in a long list of options (between 13 and 200) or your custom user input.<\/li> <\/ul> <h4>When not to use:<\/h4> <ul> <li>You need to select between only two options. Use a {@link sap.m.Switch switch} control instead.<\/li> <li>You need to select between 12 options. Use a {@link sap.m.Select select} control instead.<\/li> <li>You need to select between more than 200 options. Use a {@link sap.m.Input input} control with value help instead.<\/li> <\/ul> <h3>Responsive Behavior<\/h3> <ul> <li>The width of the option list adapts to its content. The minimum width is the input field plus the drop-down arrow.<\/li> <li>There is no horizontal scrolling in the option list. Entries in the list that are too long will be truncated.<\/li> <li>On phone devices the combo box option list opens a dialog.<\/li> <\/ul>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ComboBox(sId?, mSettings?) : sap.m.ComboBox","name":"sap.m.ComboBox","prefix":"ComboBox","Experimental":false,"constructorDescription":"Constructor for a new ComboBox.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSelectedKey selectedKey} : string (default: )<\/li>\n<li>{@link #getSelectedItemId selectedItemId} : string (default: )<\/li>\n<li>{@link #getShowSecondaryValues showSecondaryValues} : boolean (default: false)<\/li>\n<li>{@link #getFilterSecondaryValues filterSecondaryValues} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedItem selectedItem} : (sap.ui.core.ID | sap.ui.core.Item)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ComboBoxBase#constructor sap.m.ComboBoxBase}\ncan be used as well."},{"template":"fireChange(\n\t{\n\t\tvalue: \"${value}\", // string\n\t\titemPressed: ${bItemPressed} // boolean\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:change change} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireChange(mParameters?) : sap.m.ComboBox","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.ComboBox.fireChange"},{"template":"fireSelectionChange(\n\t{\n\t\tselectedItem: ${selectedItem} // sap.ui.core.Item\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:selectionChange selectionChange} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireSelectionChange(mParameters?) : sap.m.ComboBox","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.ComboBox.fireSelectionChange"},{"template":"new sap.m.ComboBoxBase(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tmaxWidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tshowButton: ${bShowButton}, // boolean\n\t\titems: [${items}], // sap.ui.core.Item[]\n\t\tloadItems: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/ComboBoxBase","static":"true","extends":"sap.m.ComboBoxTextField","helpDescription":"An abstract class for combo boxes.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ComboBoxBase(sId?, mSettings?) : sap.m.ComboBoxBase","name":"sap.m.ComboBoxBase","prefix":"ComboBoxBase","Experimental":false,"constructorDescription":"Constructor for a new <code>sap.m.ComboBoxBase<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Item[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:loadItems loadItems} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ComboBoxTextField#constructor sap.m.ComboBoxTextField}\ncan be used as well."},{"template":"new sap.m.ComboBoxTextField(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tmaxWidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tshowButton: ${bShowButton} // boolean\n\t}\n)\n","module":"sap/m/ComboBoxTextField","static":"true","extends":"sap.m.InputBase","helpDescription":"The <code>sap.m.ComboBoxTextField<\/code>.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ComboBoxTextField(sId?, mSettings?) : sap.m.ComboBoxTextField","name":"sap.m.ComboBoxTextField","prefix":"ComboBoxTextField","Experimental":false,"constructorDescription":"Constructor for a new <code>sap.m.ComboBoxTextField<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMaxWidth maxWidth} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getShowButton showButton} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.InputBase#constructor sap.m.InputBase}\ncan be used as well."},{"template":"new sap.m.CustomListItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\tcontent: [${content}] // sap.ui.core.Control[]\n\t}\n)\n","module":"sap/m/CustomListItem","static":"true","extends":"sap.m.ListItemBase","helpDescription":"This control with a content aggregation can be used to customize standard list items that we don't provide. List mode and ListItem type are applied to CustomListItems as well. <b>Note:<\/b> Even though the content aggregation allows any control, complex responsive layout controls (e.g. <code>Table, Form<\/code>) should not be aggregated as content.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"CustomListItem(sId?, mSettings?) : sap.m.CustomListItem","name":"sap.m.CustomListItem","prefix":"CustomListItem","Experimental":false,"constructorDescription":"Constructor for a new CustomListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well."},{"template":"new sap.m.CustomTile(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tremovable: ${bRemovable}, // boolean\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tcontent: ${content} // sap.ui.core.Control\n\t}\n)\n","module":"sap/m/CustomTile","static":"true","extends":"sap.m.Tile","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.50 use {@link sap.m.GenericTile} instead<br>Use the CustomTile control to display application specific content in the Tile control. The tile width is 8.5em and height is 10em.","Deprecated":true,"category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"use {@link sap.m.GenericTile} instead","since":"1.50"},"description":"CustomTile(sId?, mSettings?) : sap.m.CustomTile","name":"sap.m.CustomTile","prefix":"CustomTile","Experimental":false,"constructorDescription":"Constructor for a new CustomTile.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Tile#constructor sap.m.Tile}\ncan be used as well."},{"template":"new sap.m.CustomTreeItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\tcontent: [${content}] // sap.ui.core.Control[]\n\t}\n)\n","module":"sap/m/CustomTreeItem","static":"true","extends":"sap.m.TreeItemBase","helpDescription":"The <code>CustomTreeItem<\/code> control with a content aggregation is used to customize the tree items within the <code>Tree<\/code> control.<br><b>Note:<\/b> Even though the content aggregation can be used for any control, complex responsive layout controls, such as <code>Table, Form<\/code> etc, should not be aggregated as content.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"CustomTreeItem(sId?, mSettings?) : sap.m.CustomTreeItem","name":"sap.m.CustomTreeItem","prefix":"CustomTreeItem","Experimental":false,"constructorDescription":"Constructor for a new CustomTreeItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.TreeItemBase#constructor sap.m.TreeItemBase}\ncan be used as well."},{"template":"new sap.m.DatePicker(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tdisplayFormat: \"${displayFormat}\", // string\n\t\tvalueFormat: \"${valueFormat}\", // string\n\t\tdateValue: ${dateValue}, // object\n\t\tdisplayFormatType: ${\"\"}, // string\n\t\tsecondaryCalendarType: ${secondaryCalendarType}, // sap.ui.core.CalendarType\n\t\tminDate: ${minDate}, // object\n\t\tmaxDate: ${maxDate}, // object\n\t\tspecialDates: [${specialDates}], // sap.ui.core.Element[]\n\t\tlegend: ${legend}, // (sap.ui.core.Control|string)\n\t\tnavigate: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/DatePicker","static":"true","extends":"sap.m.DateTimeField","helpDescription":"Enables the users to select a localized date.\n\n<h3>Overview<\/h3>\n\nThe <code>DatePicker<\/code> lets the users select a localized date using touch, mouse, or keyboard input. It consists of two parts: the date input field and the date picker.\n\n<b>Note:<\/b> The {@link sap.ui.unified.Calendar} is used internally only if the <code>DatePicker<\/code> is opened (not used for the initial rendering). If the <code>sap.ui.unified<\/code> library is not loaded before the <code>DatePicker<\/code> is opened, it will be loaded upon opening. This could lead to a waiting time when the <code>DatePicker<\/code> is opened for the first time. To prevent this, apps using the <code>DatePicker<\/code> should also load the <code>sap.ui.unified<\/code> library.\n\n<h3>Usage<\/h3>\n\nThe user can enter a date by: <ul><li>Using the calendar that opens in a popup<\/li> <li>Typing it in directly in the input field (not available for mobile devices)<\/li><\/ul>\n\nOn app level, there are two options to provide a date for the <code>DatePicker<\/code> - as a string to the <code>value<\/code> property or as a JavaScript Date object to the <code>dateValue<\/code> property (only one of these properties should be used at a time):\n\n<ul><li>Use the <code>value<\/code> property if you want to bind the <code>DatePicker<\/code> to a model using the <code>sap.ui.model.type.Date<\/code><\/li> <li>Use the <code>value<\/code> property if the date is provided as a string from the backend or inside the app (for example, as ABAP type DATS field)<\/li> <li>Use the <code>dateValue<\/code> property if the date is already provided as a JavaScript Date object or you want to work with a JavaScript Date object<\/li><\/ul>\n\n<h3>Formatting<\/h3>\n\nAll formatting and parsing of dates from and to strings is done using the {@link sap.ui.core.format.DateFormat}. If a date is entered by typing it into the input field, it must fit to the used date format and locale.\n\nSupported format options are pattern-based on Unicode LDML Date Format notation. See {@link http://unicode.org/reports/tr35/#Date_Field_Symbol_Table}\n\nFor example, if the <code>valueFormat<\/code> is \"yyyy-MM-dd\", the <code>displayFormat<\/code> is \"MMM d, y\", and the used locale is English, a valid value string is \"2015-07-30\", which leads to an output of \"Jul 30, 2015\".\n\nIf no placeholder is set to the <code>DatePicker<\/code>, the used <code>displayFormat<\/code> is displayed as a placeholder. If another placeholder is needed, it must be set.\n\n<b>Note:<\/b> If the string does NOT match the <code>displayFormat<\/code> (from user input) or the <code>valueFormat<\/code> (on app level), the {@link sap.ui.core.format.DateFormat} makes an attempt to parse it based on the locale settings. For more information, see the respective documentation in the API Reference.\n\n<h3>Responsive behavior<\/h3>\n\nThe <code>DatePicker<\/code> is smaller in compact mode and provides a touch-friendly size in cozy mode.\n\nOn mobile devices, one tap on the input field opens the <code>DatePicker<\/code> in full screen. To close the window, the user can select a date (which triggers the close event), or select Cancel.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"DatePicker(sId?, mSettings?) : sap.m.DatePicker","name":"sap.m.DatePicker","prefix":"DatePicker","Experimental":false,"constructorDescription":"Constructor for a new <code>DatePicker<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDisplayFormatType displayFormatType} : string (default: )<\/li>\n<li>{@link #getSecondaryCalendarType secondaryCalendarType} : sap.ui.core.CalendarType<\/li>\n<li>{@link #getMinDate minDate} : object<\/li>\n<li>{@link #getMaxDate maxDate} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSpecialDates specialDates} : sap.ui.core.Element[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getLegend legend} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:navigate navigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.DateTimeField#constructor sap.m.DateTimeField}\ncan be used as well."},{"template":"fireNavigate(\n\t{\n\t\tdateRange: ${dateRange} // sap.ui.unified.DateRange\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:navigate navigate} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireNavigate(mParameters?) : sap.m.DatePicker","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.DatePicker.fireNavigate"},{"template":"new sap.m.DateRangeSelection(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tdisplayFormat: \"${displayFormat}\", // string\n\t\tvalueFormat: \"${valueFormat}\", // string\n\t\tdateValue: ${dateValue}, // object\n\t\tdisplayFormatType: ${\"\"}, // string\n\t\tsecondaryCalendarType: ${secondaryCalendarType}, // sap.ui.core.CalendarType\n\t\tminDate: ${minDate}, // object\n\t\tmaxDate: ${maxDate}, // object\n\t\tspecialDates: [${specialDates}], // sap.ui.core.Element[]\n\t\tlegend: ${legend}, // (sap.ui.core.Control|string)\n\t\tnavigate: [function (oEvent) {}, this], // function|array\n\t\tdelimiter: ${\"-\"}, // string\n\t\tsecondDateValue: ${secondDateValue}, // object\n\t\tfrom: ${from}, // object\n\t\tto: ${to} // object\n\t}\n)\n","module":"sap/m/DateRangeSelection","static":"true","extends":"sap.m.DatePicker","helpDescription":"A single-field input control that enables the users to enter a localized date range.\n\n<h3>Overview<\/h3>\n\nThe <code>DateRangeSelection<\/code> enables the users to enter a localized date range using touch, mouse, keyboard input, or by selecting a date range in the calendar. They can also navigate directly from one month or year to another.\n\n<b>Note:<\/b> The {@link sap.ui.unified.Calendar} is used internally only if the <code>DateRangeSelection<\/code> is opened (not used for the initial rendering). If the <code>sap.ui.unified<\/code> library is not loaded before the <code>DateRangeSelection<\/code> is opened, it will be loaded upon opening. This could lead to a waiting time when the <code>DateRangeSelection<\/code> is opened for the first time. To prevent this, apps using the <code>DateRangeSelection<\/code> should also load the <code>sap.ui.unified<\/code> library.\n\n<h3>Usage<\/h3>\n\n<i>When to use?<\/i>\n\nIf you need a time range and know that your user is a power user who has to input lots of data. If the keyboard is the primary device used for navigating the app, use two input fields. This allows the user to quickly jump from field to field. By selecting a date in one of the fields, the other field should recognize the information and jump to the same selection.\n\n<i>When not to use?<\/i>\n\nIf the user's primary goal is not to select ranges or if you just want to enter a date and a time. For such cases, use the {@link sap.m.DatePicker} or {@link sap.m.TimePicker}.\n\nThe user can enter a date by: <ul><li>Using the calendar that opens in a popup<\/li> <li>Typing it in directly in the input field (not available for mobile devices)<\/li><\/ul>\n\nOn app level, there are two options to provide a date for the <code>DateRangeSelection<\/code> - date range as a string to the <code>value<\/code> property or JavaScript Date objects to the <code>dateValue<\/code> and <code>secondDateValue<\/code> properties (only one of these options should be used at a time):\n\n<ul><li>Use the <code>value<\/code> property if the date range is already provided as a formatted string<\/li> <li>Use the <code>dateValue<\/code> and <code>secondDateValue<\/code> properties if the date range is already provided as JavaScript Date objects or you want to work with JavaScript Date objects<\/li><\/ul>\n\n<h3>Formatting<\/h3>\n\nAll formatting and parsing of dates from and to strings is done using the {@link sap.ui.core.format.DateFormat}. If a date is entered by typing it into the input field, it must fit to the used date format and locale.\n\nSupported format options are pattern-based on Unicode LDML Date Format notation. See {@link http://unicode.org/reports/tr35/#Date_Field_Symbol_Table}\n\nFor example, if the <code>displayFormat<\/code> is \"MMM d, y\", delimiter is \"-\", and the used locale is English, a valid value string is \"Jul 29, 2015 - Jul 31, 2015\" and it is displayed in the same way in the input field.\n\nIf no placeholder is set to the <code>DateRangeSelection<\/code>, the used <code>displayFormat<\/code> is displayed as a placeholder. If another placeholder is needed, it must be set.\n\n<b>Note:<\/b> If the string does NOT match the <code>displayFormat<\/code> (from user input) or the <code>valueFormat<\/code> (on app level), the {@link sap.ui.core.format.DateFormat} makes an attempt to parse it based on the locale settings. For more information, see the respective documentation in the API Reference.\n\n<h3>Responsive behavior<\/h3>\n\nThe <code>DateRangeSelection<\/code> is fully responsive. It is smaller in compact mode and provides a touch-friendly size in cozy mode.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"DateRangeSelection(sId?, mSettings?) : sap.m.DateRangeSelection","name":"sap.m.DateRangeSelection","prefix":"DateRangeSelection","Experimental":false,"constructorDescription":"Constructor for a new <code>DateRangeSelection<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDelimiter delimiter} : string (default: -)<\/li>\n<li>{@link #getSecondDateValue secondDateValue} : object<\/li>\n<li>{@link #getFrom from} : object<\/li>\n<li>{@link #getTo to} : object<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.DatePicker#constructor sap.m.DatePicker}\ncan be used as well."},{"template":"new sap.m.DateTimeField(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tdisplayFormat: \"${displayFormat}\", // string\n\t\tvalueFormat: \"${valueFormat}\", // string\n\t\tdateValue: ${dateValue} // object\n\t}\n)\n","module":"sap/m/DateTimeField","static":"true","extends":"sap.m.InputBase","helpDescription":"The <code>sap.m.DateTimeField<\/code> control provides a basic functionality for date/time input controls.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"DateTimeField(sId?, mSettings?) : sap.m.DateTimeField","name":"sap.m.DateTimeField","prefix":"DateTimeField","Experimental":false,"constructorDescription":"Constructor for a new <code>sap.m.DateTimeField<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDisplayFormat displayFormat} : string<\/li>\n<li>{@link #getValueFormat valueFormat} : string<\/li>\n<li>{@link #getDateValue dateValue} : object<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.InputBase#constructor sap.m.InputBase}\ncan be used as well."},{"template":"new sap.m.DateTimeInput(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\ttype: ${sap.m.DateTimeInputType.Date}, // sap.m.DateTimeInputType\n\t\tdisplayFormat: \"${displayFormat}\", // string\n\t\tvalueFormat: \"${valueFormat}\", // string\n\t\tdateValue: ${dateValue}, // object\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/DateTimeInput","static":"true","extends":"sap.ui.core.Control","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.32.8 Instead, use the dedicated <code>sap.m.DatePicker<\/code>, <code>sap.m.TimePicker<\/code> or <code>sap.m.DateTimePicker<\/code> controls.<br>Allows end users to interact with date and/or time and select from a date and/or time pad.\n\n<b>Note:<\/b> This control should not be used any longer, instead please use the dedicated <code>sap.m.DatePicker<\/code>, <code>sap.m.TimePicker<\/code> or <code>sap.m.DateTimePicker<\/code> control.","Deprecated":true,"category":"constructor","DeprecatedInfo":{"isDeprecated":false,"description":"Instead, use the dedicated <code>sap.m.DatePicker<\/code>, <code>sap.m.TimePicker<\/code> or <code>sap.m.DateTimePicker<\/code> controls.","since":"1.32.8"},"description":"DateTimeInput(sId?, mSettings?) : sap.m.DateTimeInput","name":"sap.m.DateTimeInput","prefix":"DateTimeInput","Experimental":false,"constructorDescription":"Constructor for a new DateTimeInput.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getValueStateText valueStateText} : string<\/li>\n<li>{@link #getShowValueStateMessage showValueStateMessage} : boolean (default: true)<\/li>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getPlaceholder placeholder} : string<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Initial)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getType type} : sap.m.DateTimeInputType (default: Date)<\/li>\n<li>{@link #getDisplayFormat displayFormat} : string<\/li>\n<li>{@link #getValueFormat valueFormat} : string<\/li>\n<li>{@link #getDateValue dateValue} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireChange(\n\t{\n\t\tvalue: \"${value}\", // string\n\t\tdateValue: ${dateValue}, // object\n\t\tvalid: ${bValid} // boolean\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:change change} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"Instead, use the dedicated <code>sap.m.DatePicker<\/code>, <code>sap.m.TimePicker<\/code> or <code>sap.m.DateTimePicker<\/code> controls.","since":"1.32.8"},"description":"fireChange(mParameters?) : sap.m.DateTimeInput","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.DateTimeInput.fireChange"},{"template":"new sap.m.DateTimePicker(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tdisplayFormat: \"${displayFormat}\", // string\n\t\tvalueFormat: \"${valueFormat}\", // string\n\t\tdateValue: ${dateValue}, // object\n\t\tdisplayFormatType: ${\"\"}, // string\n\t\tsecondaryCalendarType: ${secondaryCalendarType}, // sap.ui.core.CalendarType\n\t\tminDate: ${minDate}, // object\n\t\tmaxDate: ${maxDate}, // object\n\t\tspecialDates: [${specialDates}], // sap.ui.core.Element[]\n\t\tlegend: ${legend}, // (sap.ui.core.Control|string)\n\t\tnavigate: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/DateTimePicker","static":"true","extends":"sap.m.DatePicker","helpDescription":"Enables the users to select date and time values in a combined input.\n\n<h3>Overview<\/h3>\n\nThe <code>DateTimePicker<\/code> control consists of two parts: the input field and the date/time picker.\n\n<b>Note:<\/b> The {@link sap.ui.unified.Calendar} is used internally only if the <code>DateTimePicker<\/code> is opened (not used for the initial rendering). If the <code>sap.ui.unified<\/code> library is not loaded before the <code>DateTimePicker<\/code> is opened, it will be loaded upon opening. This could lead to a waiting time when the <code>DateTimePicker<\/code> is opened for the first time. To prevent this, apps using the <code>DateTimePicker<\/code> should also load the <code>sap.ui.unified<\/code> library.\n\n<h3>Usage<\/h3>\n\nUse this control if you need a combined date and time input control.\n\nDon't use it if you want to use either a date or a time value. In this case, use the {@link sap.m.DatePicker} or the {@link sap.m.TimePicker} controls instead.\n\nThe user can enter a date by: <ul> <li>Using the calendar or a time selector that opens in a popup<\/li> <li>Typing it in directly in the input field<\/li><\/ul>\n\nOn app level, there are two options to provide a date for the <code>DateTimePicker<\/code> - as a string to the <code>value<\/code> property or as a JavaScript Date object to the <code>dateValue<\/code> property (only one of these properties should be used at a time):\n\n<ul><li>Use the <code>value<\/code> property if you want to bind the <code>DateTimePicker<\/code> to a model using the <code>sap.ui.model.type.DateTime<\/code><\/li> <li>Use the <code>value<\/code> property if the date is provided as a string from the backend or inside the app (for example, as ABAP type DATS field)<\/li> <li>Use the <code>dateValue<\/code> property if the date is already provided as a JavaScript Date object or you want to work with a JavaScript Date object<\/li><\/ul>\n\n<h3>Formatting<\/h3>\n\nAll formatting and parsing of dates from and to strings is done using the {@link sap.ui.core.format.DateFormat}. If a date is entered by typing it into the input field, it must fit to the used date format and locale.\n\nSupported format options are pattern-based on Unicode LDML Date Format notation. See {@link http://unicode.org/reports/tr35/#Date_Field_Symbol_Table}\n\nFor example, if the <code>valueFormat<\/code> is \"yyyy-MM-dd-HH-mm-ss\", the <code>displayFormat<\/code> is \"MMM d, y, HH:mm:ss\", and the used locale is English, a valid value string is \"2015-07-30-10-30-15\", which leads to an output of \"Jul 30, 2015, 10:30:15\".\n\nIf no placeholder is set to the <code>DateTimePicker<\/code>, the used <code>displayFormat<\/code> is displayed as a placeholder. If another placeholder is needed, it must be set.\n\n<b>Note:<\/b> If the string does NOT match the <code>displayFormat<\/code> (from user input) or the <code>valueFormat<\/code> (on app level), the {@link sap.ui.core.format.DateFormat} makes an attempt to parse it based on the locale settings. For more information, see the respective documentation in the API Reference.\n\n<h3>Responsive behavior<\/h3>\n\nThe <code>DateTimePicker<\/code> is responsive and fully adapts to all devices. For larger screens, such as tablet or desktop, it opens as a popover. For mobile devices, it opens in full screen.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"DateTimePicker(sId?, mSettings?) : sap.m.DateTimePicker","name":"sap.m.DateTimePicker","prefix":"DateTimePicker","Experimental":false,"constructorDescription":"Constructor for a new <code>DateTimePicker<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.DatePicker#constructor sap.m.DatePicker}\ncan be used as well."},{"template":"new sap.m.Dialog(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\ttitle: \"${title}\", // string\n\t\tshowHeader: ${bShowHeader}, // boolean\n\t\ttype: ${sap.m.DialogType.Standard}, // sap.m.DialogType\n\t\tstate: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tstretchOnPhone: ${bStretchOnPhone}, // boolean\n\t\tstretch: ${bStretch}, // boolean\n\t\tcontentWidth: ${contentWidth}, // sap.ui.core.CSSSize\n\t\tcontentHeight: ${contentHeight}, // sap.ui.core.CSSSize\n\t\thorizontalScrolling: ${bHorizontalScrolling}, // boolean\n\t\tverticalScrolling: ${bVerticalScrolling}, // boolean\n\t\tresizable: ${bResizable}, // boolean\n\t\tdraggable: ${bDraggable}, // boolean\n\t\tescapeHandler: ${escapeHandler}, // any\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tsubHeader: ${subHeader}, // sap.m.IBar\n\t\tcustomHeader: ${customHeader}, // sap.m.IBar\n\t\tbeginButton: ${beginButton}, // sap.m.Button\n\t\tendButton: ${endButton}, // sap.m.Button\n\t\tbuttons: [${buttons}], // sap.m.Button[]\n\t\tleftButton: ${leftButton}, // (sap.m.Button|string)\n\t\trightButton: ${rightButton}, // (sap.m.Button|string)\n\t\tinitialFocus: ${initialFocus}, // (sap.ui.core.Control|string)\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tbeforeOpen: [function (oEvent) {}, this], // function|array\n\t\tafterOpen: [function (oEvent) {}, this], // function|array\n\t\tbeforeClose: [function (oEvent) {}, this], // function|array\n\t\tafterClose: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/Dialog","static":"true","extends":"sap.ui.core.Control","helpDescription":"A popup that interrupts the current processing and prompts the user for an action or an input, in a modal mode. <h3>Overview<\/h3> The Dialog control is used to prompt the user for an action or a confirmation. It interrupts the current app processing as it is the only focused UI element and the main screen is dimmed/blocked. The content of the dialog is fully customizable. <h3>Structure<\/h3> A dialog consists of a title, optional subtitle, content area and a footer for action buttons. The dialog is usually displayed at the center of the screen. Its size and position can be changed by the user. To enable this, you need to set the properties <code>resizable<\/code> and <code>draggable<\/code> accordingly.\n\nThere are other specialized types of dialogs: <ul> <li>{@link sap.m.P13nDialog Personalization dialog} - used for personalizing sorting, filtering and grouping in tables<\/li> <li>{@link sap.m.SelectDialog Select dialog} - used to select one or more items from a comprehensive list<\/li> <li>{@link sap.m.TableSelectDialog Table select dialog} - used to make a selection from a comprehensive table containing multiple attributes or values<\/li> <li>{@link sap.ui.comp.valuehelpdialog.ValueHelpDialog Value help dialog} - used to help the user find and select single and multiple values<\/li> <li>{@link sap.m.ViewSettingsDialog View settings dialog} - used to sort, filter, or group data within a (master) list or a table<\/li> <li>{@link sap.m.BusyDialog Busy dialog} - used to block the screen and inform the user about an ongoing operation<\/li> <\/ul> <h3>Usage<\/h3> <h4>When to use:<\/h4> <ul> <li>You want to display a system message.<\/li> <li>You want to interrupt the user\u2019s action.<\/li> <li>You want to show a message with a short and a long description.<\/li> <\/ul> <h4>When not to use:<\/h4> <ul> <li>You just want to confirm a successful action.<\/li> <\/ul> <h3>Responsive Behavior<\/h3> <ul> <li>If the <code>stretch<\/code> property is set to true, the dialog displays on full screen.<\/li> <li>If the <code>contentWidth<\/code> and/or <code>contentHeight<\/code> properties are set, the dialog will try to fill those sizes.<\/li> <li>If there is no specific sizing, the dialog will try to adjust its size to its content.<\/li> <\/ul> <h4>Smartphones<\/h4> If the dialog has one or two actions they will cover the entire footer. If there are more actions, they will overflow. <h4>Tablets<\/h4> The action buttons in the toolbar are <b>right-aligned<\/b>. Use <b>cozy<\/b> mode on tablet devices. <h4>Desktop<\/h4> The action buttons in the toolbar are <b>right-aligned<\/b>. Use <b>compact<\/b> mode on desktop.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"Dialog(sId?, mSettings?) : sap.m.Dialog","name":"sap.m.Dialog","prefix":"Dialog","Experimental":false,"constructorDescription":"Constructor for a new Dialog.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getShowHeader showHeader} : boolean (default: true)<\/li>\n<li>{@link #getType type} : sap.m.DialogType (default: Standard)<\/li>\n<li>{@link #getState state} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getStretchOnPhone stretchOnPhone} : boolean (default: false)<\/li>\n<li>{@link #getStretch stretch} : boolean (default: false)<\/li>\n<li>{@link #getContentWidth contentWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getContentHeight contentHeight} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHorizontalScrolling horizontalScrolling} : boolean (default: true)<\/li>\n<li>{@link #getVerticalScrolling verticalScrolling} : boolean (default: true)<\/li>\n<li>{@link #getResizable resizable} : boolean (default: false)<\/li>\n<li>{@link #getDraggable draggable} : boolean (default: false)<\/li>\n<li>{@link #getEscapeHandler escapeHandler} : any<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getSubHeader subHeader} : sap.m.IBar<\/li>\n<li>{@link #getCustomHeader customHeader} : sap.m.IBar<\/li>\n<li>{@link #getBeginButton beginButton} : sap.m.Button<\/li>\n<li>{@link #getEndButton endButton} : sap.m.Button<\/li>\n<li>{@link #getButtons buttons} : sap.m.Button[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getLeftButton leftButton} : (sap.ui.core.ID | sap.m.Button)<\/li>\n<li>{@link #getRightButton rightButton} : (sap.ui.core.ID | sap.m.Button)<\/li>\n<li>{@link #getInitialFocus initialFocus} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:beforeOpen beforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterOpen afterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeClose beforeClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterClose afterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireAfterClose(\n\t{\n\t\torigin: ${origin} // sap.m.Button\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:afterClose afterClose} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireAfterClose(mParameters?) : sap.m.Dialog","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.Dialog.fireAfterClose"},{"template":"fireBeforeClose(\n\t{\n\t\torigin: ${origin} // sap.m.Button\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:beforeClose beforeClose} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireBeforeClose(mParameters?) : sap.m.Dialog","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.Dialog.fireBeforeClose"},{"template":"new sap.m.DisplayListItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\tlabel: \"${label}\", // string\n\t\tvalue: \"${value}\", // string\n\t\tvalueTextDirection: ${sap.ui.core.TextDirection.Inherit} // sap.ui.core.TextDirection\n\t}\n)\n","module":"sap/m/DisplayListItem","static":"true","extends":"sap.m.ListItemBase","helpDescription":"<code>sap.m.DisplayListItem<\/code> can be used to represent a label and a value.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"DisplayListItem(sId?, mSettings?) : sap.m.DisplayListItem","name":"sap.m.DisplayListItem","prefix":"DisplayListItem","Experimental":false,"constructorDescription":"Constructor for a new DisplayListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getValueTextDirection valueTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well."},{"template":"new sap.m.FacetFilter(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tshowPersonalization: ${bShowPersonalization}, // boolean\n\t\ttype: ${sap.m.FacetFilterType.Simple}, // sap.m.FacetFilterType\n\t\tliveSearch: ${bLiveSearch}, // boolean\n\t\tshowSummaryBar: ${bShowSummaryBar}, // boolean\n\t\tshowReset: ${bShowReset}, // boolean\n\t\tshowPopoverOKButton: ${bShowPopoverOKButton}, // boolean\n\t\tlists: [${lists}], // sap.m.FacetFilterList[]\n\t\treset: [function (oEvent) {}, this], // function|array\n\t\tconfirm: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/FacetFilter","static":"true","extends":"sap.ui.core.Control","helpDescription":"Provides filtering functionality with multiple parameters.\n\n<h3>Overview<\/h3>\n\nThe <code>FacetFilter<\/code> control is used to provide filtering functionality with multiple parameters and supports the users in finding the information they need from potentially very large data sets.\n\nYour app can have dependencies between facets where selection of filter items in one facet list limits the list of valid filters in another facet list.\n\nThe <code>FacetFilter<\/code> uses {@link sap.m.FacetFilterList FacetFilterList} and {@link sap.m.FacetFilterItem FacetFilterItem} to model facets and their associated filters.\n\n<b>Note: <\/b>{@link sap.m.FacetFilterList FacetFilterList} is a subclass of {@link sap.m.List} and supports growing enablement feature via the property <code>growing<\/code>. When you use this feature, be aware that it only works with one-way data binding. Having growing feature enabled when the <code>items<\/code> aggregation is bound to a model with two-way data binding, may lead to unexpected and/or inconsistent behavior across browsers, such as unexpected closing of the list.\n\n<h3>Usage<\/h3>\n\nUse the <code>FacetFilter<\/code> if your app displays a large list of items that can be grouped by multiple parameters, for example products by category and supplier. With the <code>FacetFilter<\/code>, you allow the users to dynamically filter the list so it only displays products from the categories and suppliers they want to see.\n\nWhile the {@link sap.m.FacetFilterList} popup is opened (when the user selects a button corresponding to the list's name), any other activities leading to focus change will close it. For example, when the popup is opened and the app developer loads a {@link sap.m.BusyDialog} or any other dialog that obtains the focus, the popup will be closed.\n\n<h3>Responsive behavior<\/h3>\n\nThe <code>FacetFilter<\/code> supports the following two types, which can be configured using the control's <code>type<\/code> property:\n\n<ul><li>Simple type (default) - only available for desktop and tablet screen sizes. The active facets are displayed as individually selectable buttons on the toolbar.<\/li> <li>Light type - automatically enabled on smart phone sized devices, but also available for desktop and tablets. The active facets and selected filter items are displayed in the summary bar. When the user selects the summary bar, a navigable dialog list of all facets is displayed. When the user selects a facet, the dialog scrolls to show the list of filters that are available for the selected facet.<\/li><\/ul>\n\n<h3>Additional Information<\/h3>\n\nFor more information, go to <b>Developer Guide<\/b> section in the Demo Kit and navigate to <b>More&nbsp;About&nbsp;Controls<\/b>&nbsp;>&nbsp;<b>sap.m<\/b>&nbsp;>&nbsp;<b>Facet&nbsp;Filter<\/b>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"FacetFilter(sId?, mSettings?) : sap.m.FacetFilter","name":"sap.m.FacetFilter","prefix":"FacetFilter","Experimental":false,"constructorDescription":"Constructor for a new <code>FacetFilter<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowPersonalization showPersonalization} : boolean (default: false)<\/li>\n<li>{@link #getType type} : sap.m.FacetFilterType (default: Simple)<\/li>\n<li>{@link #getLiveSearch liveSearch} : boolean (default: true)<\/li>\n<li>{@link #getShowSummaryBar showSummaryBar} : boolean (default: false)<\/li>\n<li>{@link #getShowReset showReset} : boolean (default: true)<\/li>\n<li>{@link #getShowPopoverOKButton showPopoverOKButton} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getLists lists} : sap.m.FacetFilterList[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:reset reset} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:confirm confirm} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.FacetFilterItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\tkey: \"${key}\", // string\n\t\ttext: \"${text}\", // string\n\t\tcount: ${count} // int\n\t}\n)\n","module":"sap/m/FacetFilterItem","static":"true","extends":"sap.m.ListItemBase","helpDescription":"Represents a value for the {@link sap.m.FacetFilterList} control.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"FacetFilterItem(sId?, mSettings?) : sap.m.FacetFilterItem","name":"sap.m.FacetFilterItem","prefix":"FacetFilterItem","Experimental":false,"constructorDescription":"Constructor for a new <code>FacetFilterItem<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getCount count} : int<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well."},{"template":"new sap.m.FacetFilterList(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tinset: ${bInset}, // boolean\n\t\theaderText: \"${headerText}\", // string\n\t\theaderDesign: ${sap.m.ListHeaderDesign.Standard}, // sap.m.ListHeaderDesign\n\t\tfooterText: \"${footerText}\", // string\n\t\tmode: ${sap.m.ListMode.None}, // sap.m.ListMode\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tincludeItemInSelection: ${bIncludeItemInSelection}, // boolean\n\t\tshowUnread: ${bShowUnread}, // boolean\n\t\tnoDataText: \"${noDataText}\", // string\n\t\tshowNoData: ${bShowNoData}, // boolean\n\t\tenableBusyIndicator: ${bEnableBusyIndicator}, // boolean\n\t\tmodeAnimationOn: ${bModeAnimationOn}, // boolean\n\t\tshowSeparators: ${sap.m.ListSeparators.All}, // sap.m.ListSeparators\n\t\tswipeDirection: ${sap.m.SwipeDirection.Both}, // sap.m.SwipeDirection\n\t\tgrowing: ${bGrowing}, // boolean\n\t\tgrowingThreshold: ${20}, // int\n\t\tgrowingTriggerText: \"${growingTriggerText}\", // string\n\t\tgrowingScrollToLoad: ${bGrowingScrollToLoad}, // boolean\n\t\tgrowingDirection: ${sap.m.ListGrowingDirection.Downwards}, // sap.m.ListGrowingDirection\n\t\trememberSelections: ${bRememberSelections}, // boolean\n\t\tkeyboardMode: ${sap.m.ListKeyboardMode.Navigation}, // sap.m.ListKeyboardMode\n\t\titems: [${items}], // sap.m.ListItemBase[]\n\t\tswipeContent: ${swipeContent}, // sap.ui.core.Control\n\t\theaderToolbar: ${headerToolbar}, // sap.m.Toolbar\n\t\tinfoToolbar: ${infoToolbar}, // sap.m.Toolbar\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselect: [function (oEvent) {}, this], // function|array\n\t\tselectionChange: [function (oEvent) {}, this], // function|array\n\t\t\"delete\": [function (oEvent) {}, this], // function|array\n\t\tswipe: [function (oEvent) {}, this], // function|array\n\t\tgrowingStarted: [function (oEvent) {}, this], // function|array\n\t\tgrowingFinished: [function (oEvent) {}, this], // function|array\n\t\tupdateStarted: [function (oEvent) {}, this], // function|array\n\t\tupdateFinished: [function (oEvent) {}, this], // function|array\n\t\titemPress: [function (oEvent) {}, this], // function|array\n\t\tbackgroundDesign: ${sap.m.BackgroundDesign.Solid}, // sap.m.BackgroundDesign\n\t\tcolumns: [${columns}], // sap.m.Column[]\n\t\ttitle: \"${title}\", // string\n\t\twordWrap: ${bWordWrap}, // boolean\n\t\tmultiSelect: ${bMultiSelect}, // boolean\n\t\tactive: ${bActive}, // boolean\n\t\tenableCaseInsensitiveSearch: ${bEnableCaseInsensitiveSearch}, // boolean\n\t\tallCount: ${allCount}, // int\n\t\tsequence: ${-1}, // int\n\t\tkey: \"${key}\", // string\n\t\tshowRemoveFacetIcon: ${bShowRemoveFacetIcon}, // boolean\n\t\tretainListSequence: ${bRetainListSequence}, // boolean\n\t\tdataType: ${sap.m.FacetFilterListDataType.String}, // sap.m.FacetFilterListDataType\n\t\tlistOpen: [function (oEvent) {}, this], // function|array\n\t\tlistClose: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/FacetFilterList","static":"true","extends":"sap.m.List","helpDescription":"Represents a list of values for the {@link sap.m.FacetFilter} control.\n\n<b>Note: <\/b><code>FacetFilterList<\/code> is a subclass of {@link sap.m.List} and supports growing enablement feature via the property <code>growing<\/code>. When you use this feature, be aware that it only works with one-way data binding. Having growing feature enabled when the <code>items<\/code> aggregation is bound to a model with two-way data binding, may lead to unexpected and/or inconsistent behavior across browsers, such as unexpected closing of the list.\n\nWhile the <code>FacetFilterList<\/code> popup is opened (when the user selects a button corresponding to the list's name), any other activities leading to focus change will close it. For example, when the popup is opened and the app developer loads a {@link sap.m.BusyDialog} or any other dialog that obtains the focus, the popup will be closed.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"FacetFilterList(sId?, mSettings?) : sap.m.FacetFilterList","name":"sap.m.FacetFilterList","prefix":"FacetFilterList","Experimental":false,"constructorDescription":"Constructor for a new <code>FacetFilterList<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getWordWrap wordWrap} : boolean (default: false)<\/li>\n<li>{@link #getMultiSelect multiSelect} : boolean (default: true)<\/li>\n<li>{@link #getActive active} : boolean (default: true)<\/li>\n<li>{@link #getEnableCaseInsensitiveSearch enableCaseInsensitiveSearch} : boolean (default: false)<\/li>\n<li>{@link #getAllCount allCount} : int<\/li>\n<li>{@link #getSequence sequence} : int (default: -1)<\/li>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getShowRemoveFacetIcon showRemoveFacetIcon} : boolean (default: true)<\/li>\n<li>{@link #getRetainListSequence retainListSequence} : boolean (default: false)<\/li>\n<li>{@link #getDataType dataType} : sap.m.FacetFilterListDataType (default: String)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:listOpen listOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:listClose listClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.List#constructor sap.m.List}\ncan be used as well."},{"template":"fireListClose(\n\t{\n\t\tselectedItems: [${selectedItems}], // [object Object][]\n\t\tallSelected: ${bAllSelected}, // boolean\n\t\tselectedKeys: ${selectedKeys} // object\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:listClose listClose} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireListClose(mParameters?) : sap.m.FacetFilterList","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.FacetFilterList.fireListClose"},{"template":"new sap.m.FeedContent(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tsize: ${sap.m.Size.Auto}, // sap.m.Size\n\t\tcontentText: \"${contentText}\", // string\n\t\tsubheader: \"${subheader}\", // string\n\t\tvalue: \"${value}\", // string\n\t\tvalueColor: ${valueColor}, // sap.m.ValueColor\n\t\ttruncateValueTo: ${4}, // int\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/FeedContent","static":"true","extends":"sap.ui.core.Control","helpDescription":"Displays a tile containing the text of the feed, a subheader, and a numeric value.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"FeedContent(sId?, mSettings?) : sap.m.FeedContent","name":"sap.m.FeedContent","prefix":"FeedContent","Experimental":false,"constructorDescription":"Constructor for a new sap.m.FeedContent control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getContentText contentText} : string<\/li>\n<li>{@link #getSubheader subheader} : string<\/li>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getValueColor valueColor} : sap.m.ValueColor<\/li>\n<li>{@link #getTruncateValueTo truncateValueTo} : int (default: 4)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.FeedInput(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tenabled: ${bEnabled}, // boolean\n\t\tmaxLength: ${0}, // int\n\t\tplaceholder: ${\"Post something here\"}, // string\n\t\tvalue: \"${value}\", // string\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\tshowIcon: ${bShowIcon}, // boolean\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\tbuttonTooltip: ${sap.ui.core.TooltipBase.Submit}, // sap.ui.core.TooltipBase\n\t\tariaLabelForPicture: \"${ariaLabelForPicture}\", // string\n\t\tpost: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/FeedInput","static":"true","extends":"sap.ui.core.Control","helpDescription":"The Feed Input allows the user to enter text for a new feed entry and then post it.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"FeedInput(sId?, mSettings?) : sap.m.FeedInput","name":"sap.m.FeedInput","prefix":"FeedInput","Experimental":false,"constructorDescription":"Constructor for a new FeedInput.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getMaxLength maxLength} : int (default: 0)<\/li>\n<li>{@link #getPlaceholder placeholder} : string (default: Post something here)<\/li>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getShowIcon showIcon} : boolean (default: true)<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getButtonTooltip buttonTooltip} : sap.ui.core.TooltipBase (default: Submit)<\/li>\n<li>{@link #getAriaLabelForPicture ariaLabelForPicture} : string<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:post post} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"firePost(\n\t{\n\t\tvalue: \"${value}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:post post} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"firePost(mParameters?) : sap.m.FeedInput","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.FeedInput.firePost"},{"template":"new sap.m.FeedListItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\tactiveIcon: ${activeIcon}, // sap.ui.core.URI\n\t\tsender: \"${sender}\", // string\n\t\ttext: \"${text}\", // string\n\t\tinfo: \"${info}\", // string\n\t\ttimestamp: \"${timestamp}\", // string\n\t\tsenderActive: ${bSenderActive}, // boolean\n\t\ticonActive: ${bIconActive}, // boolean\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\tshowIcon: ${bShowIcon}, // boolean\n\t\tconvertLinksToAnchorTags: ${sap.m.LinkConversion.None}, // sap.m.LinkConversion\n\t\tconvertedLinksDefaultTarget: ${\"_blank\"}, // string\n\t\tmaxCharacters: ${maxCharacters}, // int\n\t\tactions: [${actions}], // sap.m.FeedListItemAction[]\n\t\tsenderPress: [function (oEvent) {}, this], // function|array\n\t\ticonPress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/FeedListItem","static":"true","extends":"sap.m.ListItemBase","helpDescription":"The control provides a set of properties for text, sender information, time stamp. Beginning with release 1.23 the new feature expand / collapse was introduced, which uses the property maxCharacters. Beginning with release 1.44, sap.m.FormattedText was introduced which allows html formatted text to be displayed","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"FeedListItem(sId?, mSettings?) : sap.m.FeedListItem","name":"sap.m.FeedListItem","prefix":"FeedListItem","Experimental":false,"constructorDescription":"Constructor for a new FeedListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getActiveIcon activeIcon} : sap.ui.core.URI<\/li>\n<li>{@link #getSender sender} : string<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getInfo info} : string<\/li>\n<li>{@link #getTimestamp timestamp} : string<\/li>\n<li>{@link #getSenderActive senderActive} : boolean (default: true)<\/li>\n<li>{@link #getIconActive iconActive} : boolean (default: true)<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getShowIcon showIcon} : boolean (default: true)<\/li>\n<li>{@link #getConvertLinksToAnchorTags convertLinksToAnchorTags} : sap.m.LinkConversion (default: None)<\/li>\n<li>{@link #getConvertedLinksDefaultTarget convertedLinksDefaultTarget} : string (default: _blank)<\/li>\n<li>{@link #getMaxCharacters maxCharacters} : int<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getActions actions} : sap.m.FeedListItemAction[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:senderPress senderPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:iconPress iconPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well."},{"template":"fireIconPress(\n\t{\n\t\tdomRef: \"${domRef}\", // string\n\t\tgetDomRef: ${fn_getDomRef} // function\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:iconPress iconPress} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireIconPress(mParameters?) : sap.m.FeedListItem","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.FeedListItem.fireIconPress"},{"template":"fireSenderPress(\n\t{\n\t\tdomRef: \"${domRef}\", // string\n\t\tgetDomRef: ${fn_getDomRef} // function\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:senderPress senderPress} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireSenderPress(mParameters?) : sap.m.FeedListItem","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.FeedListItem.fireSenderPress"},{"template":"new sap.m.FeedListItemAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\ttext: ${\"\"}, // string\n\t\tkey: ${\"\"}, // string\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/FeedListItemAction","static":"true","extends":"sap.ui.core.Element","helpDescription":"An action item of FeedListItem","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"FeedListItemAction(sId?, mSettings?) : sap.m.FeedListItemAction","name":"sap.m.FeedListItemAction","prefix":"FeedListItemAction","Experimental":false,"constructorDescription":"Constructor for a new FeedListItemAction.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getKey key} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."},{"template":"new sap.m.FlexBox(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\theight: ${\"\"}, // sap.ui.core.CSSSize\n\t\twidth: ${\"\"}, // sap.ui.core.CSSSize\n\t\tdisplayInline: ${bDisplayInline}, // boolean\n\t\tdirection: ${sap.m.FlexDirection.Row}, // sap.m.FlexDirection\n\t\tfitContainer: ${bFitContainer}, // boolean\n\t\trenderType: ${sap.m.FlexRendertype.Div}, // sap.m.FlexRendertype\n\t\tjustifyContent: ${sap.m.FlexJustifyContent.Start}, // sap.m.FlexJustifyContent\n\t\talignItems: ${sap.m.FlexAlignItems.Stretch}, // sap.m.FlexAlignItems\n\t\twrap: ${sap.m.FlexWrap.NoWrap}, // sap.m.FlexWrap\n\t\talignContent: ${sap.m.FlexAlignContent.Stretch}, // sap.m.FlexAlignContent\n\t\tbackgroundDesign: ${sap.m.BackgroundDesign.Transparent}, // sap.m.BackgroundDesign\n\t\titems: [${items}] // sap.ui.core.Control[]\n\t}\n)\n","module":"sap/m/FlexBox","static":"true","extends":"sap.ui.core.Control","helpDescription":"The <code>sap.m.FlexBox<\/code> control builds the container for a flexible box layout.<br> <br> <b>Note:<\/b> Be sure to check the <code>renderType<\/code> setting to avoid issues due to browser inconsistencies.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"FlexBox(sId?, mSettings?) : sap.m.FlexBox","name":"sap.m.FlexBox","prefix":"FlexBox","Experimental":false,"constructorDescription":"Constructor for a new <code>sap.m.FlexBox<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getDisplayInline displayInline} : boolean (default: false)<\/li>\n<li>{@link #getDirection direction} : sap.m.FlexDirection (default: Row)<\/li>\n<li>{@link #getFitContainer fitContainer} : boolean (default: false)<\/li>\n<li>{@link #getRenderType renderType} : sap.m.FlexRendertype (default: Div)<\/li>\n<li>{@link #getJustifyContent justifyContent} : sap.m.FlexJustifyContent (default: Start)<\/li>\n<li>{@link #getAlignItems alignItems} : sap.m.FlexAlignItems (default: Stretch)<\/li>\n<li>{@link #getWrap wrap} : sap.m.FlexWrap (default: NoWrap)<\/li>\n<li>{@link #getAlignContent alignContent} : sap.m.FlexAlignContent (default: Stretch)<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign (default: Transparent)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.FlexItemData(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\talignSelf: ${sap.m.FlexAlignSelf.Auto}, // sap.m.FlexAlignSelf\n\t\torder: ${0}, // int\n\t\tgrowFactor: ${0}, // float\n\t\tshrinkFactor: ${1}, // float\n\t\tbaseSize: ${\"auto\"}, // sap.ui.core.CSSSize\n\t\tminHeight: ${\"auto\"}, // sap.ui.core.CSSSize\n\t\tmaxHeight: ${\"\"}, // sap.ui.core.CSSSize\n\t\tminWidth: ${\"auto\"}, // sap.ui.core.CSSSize\n\t\tmaxWidth: ${\"\"}, // sap.ui.core.CSSSize\n\t\tstyleClass: ${\"\"}, // string\n\t\tbackgroundDesign: ${sap.m.BackgroundDesign.Transparent} // sap.m.BackgroundDesign\n\t}\n)\n","module":"sap/m/FlexItemData","static":"true","extends":"sap.ui.core.LayoutData","helpDescription":"Holds layout data for a FlexBox / HBox / VBox.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"FlexItemData(sId?, mSettings?) : sap.m.FlexItemData","name":"sap.m.FlexItemData","prefix":"FlexItemData","Experimental":false,"constructorDescription":"Constructor for a new <code>sap.m.FlexItemData<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAlignSelf alignSelf} : sap.m.FlexAlignSelf (default: Auto)<\/li>\n<li>{@link #getOrder order} : int (default: 0)<\/li>\n<li>{@link #getGrowFactor growFactor} : float (default: 0)<\/li>\n<li>{@link #getShrinkFactor shrinkFactor} : float (default: 1)<\/li>\n<li>{@link #getBaseSize baseSize} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getMinHeight minHeight} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getMaxHeight maxHeight} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getMinWidth minWidth} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getMaxWidth maxWidth} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getStyleClass styleClass} : string (default: )<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign (default: Transparent)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.LayoutData#constructor sap.ui.core.LayoutData}\ncan be used as well."},{"template":"new sap.m.FormattedText(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\thtmlText: ${\"\"}, // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tconvertLinksToAnchorTags: ${sap.m.LinkConversion.None}, // sap.m.LinkConversion\n\t\tconvertedLinksDefaultTarget: ${\"_blank\"}, // string\n\t\theight: ${height} // sap.ui.core.CSSSize\n\t}\n)\n","module":"sap/m/FormattedText","static":"true","extends":"sap.ui.core.Control","helpDescription":"The FormattedText control allows the usage of a limited set of tags for inline display of formatted text in HTML format.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"FormattedText(sId?, mSettings?) : sap.m.FormattedText","name":"sap.m.FormattedText","prefix":"FormattedText","Experimental":false,"constructorDescription":"Constructor for a new FormattedText.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHtmlText htmlText} : string (default: )<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getConvertLinksToAnchorTags convertLinksToAnchorTags} : sap.m.LinkConversion (default: None)<\/li>\n<li>{@link #getConvertedLinksDefaultTarget convertedLinksDefaultTarget} : string (default: _blank)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.GenericTile(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tmode: ${sap.m.GenericTileMode.ContentMode}, // sap.m.GenericTileMode\n\t\theader: \"${header}\", // string\n\t\tsubheader: \"${subheader}\", // string\n\t\tfailedText: \"${failedText}\", // string\n\t\tsize: ${sap.m.Size.Auto}, // sap.m.Size\n\t\tframeType: ${sap.m.FrameType.OneByOne}, // sap.m.FrameType\n\t\tbackgroundImage: ${backgroundImage}, // sap.ui.core.URI\n\t\theaderImage: ${headerImage}, // sap.ui.core.URI\n\t\tstate: ${sap.m.LoadState.Loaded}, // sap.m.LoadState\n\t\timageDescription: \"${imageDescription}\", // string\n\t\tscope: ${sap.m.GenericTileScope.Display}, // sap.m.GenericTileScope\n\t\tariaLabel: \"${ariaLabel}\", // string\n\t\ttileContent: [${tileContent}], // sap.m.TileContent[]\n\t\ticon: ${icon}, // sap.ui.core.Control\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/GenericTile","static":"true","extends":"sap.ui.core.Control","helpDescription":"Displays header, subheader, and a customizable main area in a tile format. Since 1.44, also an in-line format which contains only header and subheader is supported.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"GenericTile(sId?, mSettings?) : sap.m.GenericTile","name":"sap.m.GenericTile","prefix":"GenericTile","Experimental":false,"constructorDescription":"Constructor for a new sap.m.GenericTile control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMode mode} : sap.m.GenericTileMode (default: ContentMode)<\/li>\n<li>{@link #getHeader header} : string<\/li>\n<li>{@link #getSubheader subheader} : string<\/li>\n<li>{@link #getFailedText failedText} : string<\/li>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getFrameType frameType} : sap.m.FrameType (default: OneByOne)<\/li>\n<li>{@link #getBackgroundImage backgroundImage} : sap.ui.core.URI<\/li>\n<li>{@link #getHeaderImage headerImage} : sap.ui.core.URI<\/li>\n<li>{@link #getState state} : sap.m.LoadState (default: Loaded)<\/li>\n<li>{@link #getImageDescription imageDescription} : string<\/li>\n<li>{@link #getScope scope} : sap.m.GenericTileScope (default: Display)<\/li>\n<li>{@link #getAriaLabel ariaLabel} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTileContent tileContent} : sap.m.TileContent[] (default)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"firePress(\n\t{\n\t\tscope: ${scope}, // sap.m.GenericTileScope\n\t\taction: \"${action}\", // string\n\t\tdomRef: ${domRef} // any\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:press press} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"firePress(mParameters?) : sap.m.GenericTile","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.GenericTile.firePress"},{"template":"new sap.m.GroupHeaderListItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\tcount: \"${count}\", // string\n\t\tupperCase: ${bUpperCase}, // boolean\n\t\ttitleTextDirection: ${sap.ui.core.TextDirection.Inherit} // sap.ui.core.TextDirection\n\t}\n)\n","module":"sap/m/GroupHeaderListItem","static":"true","extends":"sap.m.ListItemBase","helpDescription":"<code>sap.m.GroupHeaderListItem<\/code> is used to display the title of a group and act as separator between groups in <code>sap.m.List<\/code> and <code>sap.m.Table<\/code>. <b>Note:<\/b> The inherited properties <code>unread<\/code>, <code>selected<\/code>, <code>counter<\/code> and <code>press<\/code> event from <code>sap.m.ListItemBase<\/code> are not supported.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"GroupHeaderListItem(sId?, mSettings?) : sap.m.GroupHeaderListItem","name":"sap.m.GroupHeaderListItem","prefix":"GroupHeaderListItem","Experimental":false,"constructorDescription":"Constructor for a new GroupHeaderListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getCount count} : string<\/li>\n<li>{@link #getUpperCase upperCase} : boolean (default: false)<\/li>\n<li>{@link #getTitleTextDirection titleTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well."},{"template":"new sap.m.GrowingList(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tinset: ${bInset}, // boolean\n\t\theaderText: \"${headerText}\", // string\n\t\theaderDesign: ${sap.m.ListHeaderDesign.Standard}, // sap.m.ListHeaderDesign\n\t\tfooterText: \"${footerText}\", // string\n\t\tmode: ${sap.m.ListMode.None}, // sap.m.ListMode\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tincludeItemInSelection: ${bIncludeItemInSelection}, // boolean\n\t\tshowUnread: ${bShowUnread}, // boolean\n\t\tnoDataText: \"${noDataText}\", // string\n\t\tshowNoData: ${bShowNoData}, // boolean\n\t\tenableBusyIndicator: ${bEnableBusyIndicator}, // boolean\n\t\tmodeAnimationOn: ${bModeAnimationOn}, // boolean\n\t\tshowSeparators: ${sap.m.ListSeparators.All}, // sap.m.ListSeparators\n\t\tswipeDirection: ${sap.m.SwipeDirection.Both}, // sap.m.SwipeDirection\n\t\tgrowing: ${bGrowing}, // boolean\n\t\tgrowingThreshold: ${20}, // int\n\t\tgrowingTriggerText: \"${growingTriggerText}\", // string\n\t\tgrowingScrollToLoad: ${bGrowingScrollToLoad}, // boolean\n\t\tgrowingDirection: ${sap.m.ListGrowingDirection.Downwards}, // sap.m.ListGrowingDirection\n\t\trememberSelections: ${bRememberSelections}, // boolean\n\t\tkeyboardMode: ${sap.m.ListKeyboardMode.Navigation}, // sap.m.ListKeyboardMode\n\t\titems: [${items}], // sap.m.ListItemBase[]\n\t\tswipeContent: ${swipeContent}, // sap.ui.core.Control\n\t\theaderToolbar: ${headerToolbar}, // sap.m.Toolbar\n\t\tinfoToolbar: ${infoToolbar}, // sap.m.Toolbar\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselect: [function (oEvent) {}, this], // function|array\n\t\tselectionChange: [function (oEvent) {}, this], // function|array\n\t\t\"delete\": [function (oEvent) {}, this], // function|array\n\t\tswipe: [function (oEvent) {}, this], // function|array\n\t\tgrowingStarted: [function (oEvent) {}, this], // function|array\n\t\tgrowingFinished: [function (oEvent) {}, this], // function|array\n\t\tupdateStarted: [function (oEvent) {}, this], // function|array\n\t\tupdateFinished: [function (oEvent) {}, this], // function|array\n\t\titemPress: [function (oEvent) {}, this], // function|array\n\t\tbackgroundDesign: ${sap.m.BackgroundDesign.Solid}, // sap.m.BackgroundDesign\n\t\tcolumns: [${columns}], // sap.m.Column[]\n\t\tthreshold: ${20}, // int\n\t\ttriggerText: \"${triggerText}\", // string\n\t\tscrollToLoad: ${bScrollToLoad} // boolean\n\t}\n)\n","module":"sap/m/GrowingList","static":"true","extends":"sap.m.List","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16 Instead use \"List\" or \"Table\" control with setting \"growing\" property to \"true\"<br><code>sap.m.GrowingList<\/code> control is the container for all list items and inherits from sap.m.List control. Everything like the selection, deletion, unread states and inset style are also maintained here. In addition the control provides a loading mechanism to request data from the model and append the list items to the list. The request is started manually by tapping on the trigger at the end of the list.","Deprecated":true,"category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"Instead use \"List\" or \"Table\" control with setting \"growing\" property to \"true\"","since":"1.16"},"description":"GrowingList(sId?, mSettings?) : sap.m.GrowingList","name":"sap.m.GrowingList","prefix":"GrowingList","Experimental":false,"constructorDescription":"Constructor for a new GrowingList.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getThreshold threshold} : int (default: 20)<\/li>\n<li>{@link #getTriggerText triggerText} : string<\/li>\n<li>{@link #getScrollToLoad scrollToLoad} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.List#constructor sap.m.List}\ncan be used as well."},{"template":"new sap.m.HBox(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\theight: ${\"\"}, // sap.ui.core.CSSSize\n\t\twidth: ${\"\"}, // sap.ui.core.CSSSize\n\t\tdisplayInline: ${bDisplayInline}, // boolean\n\t\tdirection: ${sap.m.FlexDirection.Row}, // sap.m.FlexDirection\n\t\tfitContainer: ${bFitContainer}, // boolean\n\t\trenderType: ${sap.m.FlexRendertype.Div}, // sap.m.FlexRendertype\n\t\tjustifyContent: ${sap.m.FlexJustifyContent.Start}, // sap.m.FlexJustifyContent\n\t\talignItems: ${sap.m.FlexAlignItems.Stretch}, // sap.m.FlexAlignItems\n\t\twrap: ${sap.m.FlexWrap.NoWrap}, // sap.m.FlexWrap\n\t\talignContent: ${sap.m.FlexAlignContent.Stretch}, // sap.m.FlexAlignContent\n\t\tbackgroundDesign: ${sap.m.BackgroundDesign.Transparent}, // sap.m.BackgroundDesign\n\t\titems: [${items}] // sap.ui.core.Control[]\n\t}\n)\n","module":"sap/m/HBox","static":"true","extends":"sap.m.FlexBox","helpDescription":"The HBox control builds the container for a horizontal flexible box layout. HBox is a convenience control, as it is just a specialized FlexBox control.<br> <br> <b>Note:<\/b> Be sure to check the <code>renderType<\/code> setting to avoid issues due to browser inconsistencies.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"HBox(sId?, mSettings?) : sap.m.HBox","name":"sap.m.HBox","prefix":"HBox","Experimental":false,"constructorDescription":"Constructor for a new HBox."},{"template":"new sap.m.HeaderContainer(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tscrollStep: ${300}, // int\n\t\tscrollTime: ${500}, // int\n\t\tshowDividers: ${bShowDividers}, // boolean\n\t\torientation: ${sap.ui.core.Orientation.Horizontal}, // sap.ui.core.Orientation\n\t\tbackgroundDesign: ${sap.m.BackgroundDesign.Transparent}, // sap.m.BackgroundDesign\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\tcontent: [${content}] // sap.ui.core.Control[]\n\t}\n)\n","module":"sap/m/HeaderContainer","static":"true","extends":"sap.ui.core.Control","helpDescription":"The container that provides a horizontal layout. It provides a horizontal scrolling on the mobile devices. On the desktop, it provides scroll left and scroll right buttons. This control supports keyboard navigation. You can use left and right arrow keys to navigate through the inner content. The Home key puts focus on the first control and the End key puts focus on the last control. Use Enter or Space key to choose the control.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"HeaderContainer(sId?, mSettings?) : sap.m.HeaderContainer","name":"sap.m.HeaderContainer","prefix":"HeaderContainer","Experimental":false,"constructorDescription":"Constructor for the new HeaderContainer control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getScrollStep scrollStep} : int (default: 300)<\/li>\n<li>{@link #getScrollTime scrollTime} : int (default: 500)<\/li>\n<li>{@link #getShowDividers showDividers} : boolean (default: true)<\/li>\n<li>{@link #getOrientation orientation} : sap.ui.core.Orientation (default: Horizontal)<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign (default: Transparent)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.IconTabBar(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tshowSelection: ${bShowSelection}, // boolean\n\t\texpandable: ${bExpandable}, // boolean\n\t\texpanded: ${bExpanded}, // boolean\n\t\tselectedKey: \"${selectedKey}\", // string\n\t\tupperCase: ${bUpperCase}, // boolean\n\t\tstretchContentHeight: ${bStretchContentHeight}, // boolean\n\t\tapplyContentPadding: ${bApplyContentPadding}, // boolean\n\t\tbackgroundDesign: ${sap.m.BackgroundDesign.Solid}, // sap.m.BackgroundDesign\n\t\theaderMode: ${sap.m.IconTabHeaderMode.Standard}, // sap.m.IconTabHeaderMode\n\t\tshowOverflowSelectList: ${bShowOverflowSelectList}, // boolean\n\t\theaderBackgroundDesign: ${sap.m.BackgroundDesign.Solid}, // sap.m.BackgroundDesign\n\t\tenableTabReordering: ${bEnableTabReordering}, // boolean\n\t\titems: [${items}], // sap.m.IconTab[]\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tselect: [function (oEvent) {}, this], // function|array\n\t\texpand: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/IconTabBar","static":"true","extends":"sap.ui.core.Control","helpDescription":"The IconTabBar represents a collection of tabs with associated content. <h3>Overview<\/h3> The IconTabBar can be used for navigation within an object, or as a filter. Different types of IconTabBar are used based on the contents. <ul> <li>Filter - There is only one main content for all tabs. The main content can be filtered, based on the selected tab.<\/li> <li>Normal tab bar - The contents of each tab are independent from each other.<\/li> <li>Combination of the above - There can be both filtered and independent contents.<\/li> <\/ul> <h3>Structure<\/h3> The IconTabBar can hold two types of entities {@link sap.m.IconTabFilter sap.m.IconTabFilter} and {@link sap.m.IconTabSeparator sap.m.IconTabSeparator}\n\nThe IconTabBarFilter holds all information on an item - text, icon and count.\n\nThe IconTabBarSeparator holds an icon that can be used to show a process that runs from item to item. <h3>Usage<\/h3> <h4>Text only<\/h4> Uses text labels as tabs with optional counter <ul> <li>Used when there are no suitable icons for all items.<\/li> <li>Used when longer labels are needed.<\/li> <li>If <code>headerMode<\/code> property is set to <code>Inline<\/code> the text and the count are displayed in one line.<\/li> <li><code>UpperCase<\/code> is disabled.<\/li> <li>Use title case.<\/li> <\/ul> <h4>Icon Tabs<\/h4> Round tabs with optional counter and label <ul> <li>Used when there are unique icons for all items.<\/li> <li>Only shorter labels are possible.<\/li> <li>Provide labels for all icons or for none. Do not mix these.<\/li> <\/ul> <h4>Tabs as filters<\/h4> Tabs with filtered content from the same set of items <ul> <li>Provide an <i>\"All\"<\/i> tab to show all items without filtering.<\/li> <li>Use counters to show the number of items in each filter.<\/li> <\/ul> <h4>Tabs as process steps<\/h4> Tabs show a single step in a process <ul> <li>Use an arrow (e.g. triple-chevron) as a separator to connect the steps.<\/li> <li>Use counters to show the number of items in each filter.<\/li> <\/ul> <h3>Responsive Behavior<\/h3> <ul> <li>Text-only tabs are never truncated.<\/li> <li>Use the <code>expandable<\/code> property to specify whether users can collapse the tab container (default = true).<\/li> <li>On desktop, tabs can be dragged and dropped (property <code>enableTabReordering<\/code>).<\/li> <li>If you have a large number of tabs, you can scroll through them with the arrows. Additionally all tabs are available in an overflow button (property <code>showOverflowSelectList<\/code>).<\/li> <\/ul>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"IconTabBar(sId?, mSettings?) : sap.m.IconTabBar","name":"sap.m.IconTabBar","prefix":"IconTabBar","Experimental":false,"constructorDescription":"Constructor for a new IconTabBar.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowSelection showSelection} : boolean (default: true)<\/li>\n<li>{@link #getExpandable expandable} : boolean (default: true)<\/li>\n<li>{@link #getExpanded expanded} : boolean (default: true)<\/li>\n<li>{@link #getSelectedKey selectedKey} : string<\/li>\n<li>{@link #getUpperCase upperCase} : boolean (default: false)<\/li>\n<li>{@link #getStretchContentHeight stretchContentHeight} : boolean (default: false)<\/li>\n<li>{@link #getApplyContentPadding applyContentPadding} : boolean (default: true)<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign (default: Solid)<\/li>\n<li>{@link #getHeaderMode headerMode} : sap.m.IconTabHeaderMode (default: Standard)<\/li>\n<li>{@link #getShowOverflowSelectList showOverflowSelectList} : boolean (default: false)<\/li>\n<li>{@link #getHeaderBackgroundDesign headerBackgroundDesign} : sap.m.BackgroundDesign (default: Solid)<\/li>\n<li>{@link #getEnableTabReordering enableTabReordering} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.IconTab[]<\/li>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:expand expand} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireExpand(\n\t{\n\t\texpand: ${bExpand}, // boolean\n\t\tcollapse: ${bCollapse} // boolean\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:expand expand} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireExpand(mParameters?) : sap.m.IconTabBar","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.IconTabBar.fireExpand"},{"template":"fireSelect(\n\t{\n\t\titem: ${item}, // sap.m.IconTabFilter\n\t\tkey: \"${key}\", // string\n\t\tselectedItem: ${selectedItem}, // sap.m.IconTabFilter\n\t\tselectedKey: \"${selectedKey}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:select select} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireSelect(mParameters?) : sap.m.IconTabBar","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.IconTabBar.fireSelect"},{"template":"new sap.m.IconTabFilter(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\tcount: ${\"\"}, // string\n\t\tshowAll: ${bShowAll}, // boolean\n\t\ticon: ${\"\"}, // sap.ui.core.URI\n\t\ticonColor: ${sap.ui.core.IconColor.Default}, // sap.ui.core.IconColor\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\tvisible: ${bVisible}, // boolean\n\t\tdesign: ${sap.m.IconTabFilterDesign.Vertical}, // sap.m.IconTabFilterDesign\n\t\tcontent: [${content}] // sap.ui.core.Control[]\n\t}\n)\n","module":"sap/m/IconTabFilter","static":"true","extends":"sap.ui.core.Item","helpDescription":"Represents a selectable item inside an IconTabBar.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"IconTabFilter(sId?, mSettings?) : sap.m.IconTabFilter","name":"sap.m.IconTabFilter","prefix":"IconTabFilter","Experimental":false,"constructorDescription":"Constructor for a new IconTabFilter.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getCount count} : string (default: )<\/li>\n<li>{@link #getShowAll showAll} : boolean (default: false)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getIconColor iconColor} : sap.ui.core.IconColor (default: Default)<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getDesign design} : sap.m.IconTabFilterDesign (default: Vertical)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well."},{"template":"new sap.m.IconTabHeader(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tshowSelection: ${bShowSelection}, // boolean\n\t\tselectedKey: \"${selectedKey}\", // string\n\t\tvisible: ${bVisible}, // boolean\n\t\tmode: ${sap.m.IconTabHeaderMode.Standard}, // sap.m.IconTabHeaderMode\n\t\tshowOverflowSelectList: ${bShowOverflowSelectList}, // boolean\n\t\tbackgroundDesign: ${sap.m.BackgroundDesign.Solid}, // sap.m.BackgroundDesign\n\t\tenableTabReordering: ${bEnableTabReordering}, // boolean\n\t\titems: [${items}], // sap.m.IconTab[]\n\t\tselect: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/IconTabHeader","static":"true","extends":"sap.ui.core.Control","helpDescription":"This control displays a number of IconTabFilters and IconTabSeparators. If the available horizontal space is exceeded, a horizontal scrolling appears.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"IconTabHeader(sId?, mSettings?) : sap.m.IconTabHeader","name":"sap.m.IconTabHeader","prefix":"IconTabHeader","Experimental":false,"constructorDescription":"Constructor for a new IconTabHeader.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowSelection showSelection} : boolean (default: true)<\/li>\n<li>{@link #getSelectedKey selectedKey} : string<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getMode mode} : sap.m.IconTabHeaderMode (default: Standard)<\/li>\n<li>{@link #getShowOverflowSelectList showOverflowSelectList} : boolean (default: false)<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign (default: Solid)<\/li>\n<li>{@link #getEnableTabReordering enableTabReordering} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.IconTab[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireSelect(\n\t{\n\t\titem: ${item}, // sap.m.IconTabFilter\n\t\tkey: \"${key}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:select select} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireSelect(mParameters?) : sap.m.IconTabHeader","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.IconTabHeader.fireSelect"},{"template":"new sap.m.IconTabSeparator(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ticon: ${\"\"}, // sap.ui.core.URI\n\t\tvisible: ${bVisible}, // boolean\n\t\ticonDensityAware: ${bIconDensityAware} // boolean\n\t}\n)\n","module":"sap/m/IconTabSeparator","static":"true","extends":"sap.ui.core.Element","helpDescription":"Represents an Icon used to separate 2 tab filters.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"IconTabSeparator(sId?, mSettings?) : sap.m.IconTabSeparator","name":"sap.m.IconTabSeparator","prefix":"IconTabSeparator","Experimental":false,"constructorDescription":"Constructor for a new IconTabSeparator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."},{"template":"new sap.m.Image(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tsrc: ${src}, // sap.ui.core.URI\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\tdecorative: ${bDecorative}, // boolean\n\t\talt: \"${alt}\", // string\n\t\tuseMap: \"${useMap}\", // string\n\t\tdensityAware: ${bDensityAware}, // boolean\n\t\tactiveSrc: ${\"\"}, // sap.ui.core.URI\n\t\tmode: ${sap.m.ImageMode.Image}, // sap.m.ImageMode\n\t\tbackgroundSize: ${\"cover\"}, // string\n\t\tbackgroundPosition: ${\"initial\"}, // string\n\t\tbackgroundRepeat: ${\"no-repeat\"}, // string\n\t\tdetailBox: ${detailBox}, // sap.m.LightBox\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tload: [function (oEvent) {}, this], // function|array\n\t\terror: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/Image","static":"true","extends":"sap.ui.core.Control","helpDescription":"A wrapper around the IMG tag. The image can be loaded from a remote or local server.\n\nDensity related image will be loaded if image with density awareness name in format [imageName]@[densityValue].[extension] is provided. The valid desity values are 1, 1.5, 2. If the original devicePixelRatio isn't one of the three valid numbers, it's rounded up to the nearest one.\n\nThere are various size setting options available, and the images can be combined with actions.\n\nFrom version 1.30, new image mode sap.m.ImageMode.Background is added. When this mode is set, the src property is set using the css style 'background-image'. The properties 'backgroundSize', 'backgroundPosition', 'backgroundRepeat' have effect only when image is in sap.m.ImageMode.Background mode. In order to make the high density image correctly displayed, the 'backgroundSize' should be set to the dimension of the normal density version.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"Image(sId?, mSettings?) : sap.m.Image","name":"sap.m.Image","prefix":"Image","Experimental":false,"constructorDescription":"Constructor for a new Image.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSrc src} : sap.ui.core.URI<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getDecorative decorative} : boolean (default: true)<\/li>\n<li>{@link #getAlt alt} : string<\/li>\n<li>{@link #getUseMap useMap} : string<\/li>\n<li>{@link #getDensityAware densityAware} : boolean (default: true)<\/li>\n<li>{@link #getActiveSrc activeSrc} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getMode mode} : sap.m.ImageMode (default: Image)<\/li>\n<li>{@link #getBackgroundSize backgroundSize} : string (default: cover)<\/li>\n<li>{@link #getBackgroundPosition backgroundPosition} : string (default: initial)<\/li>\n<li>{@link #getBackgroundRepeat backgroundRepeat} : string (default: no-repeat)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getDetailBox detailBox} : sap.m.LightBox<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:tap tap} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:load load} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:error error} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.ImageContent(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tsrc: ${src}, // sap.ui.core.URI\n\t\tdescription: \"${description}\", // string\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/ImageContent","static":"true","extends":"sap.ui.core.Control","helpDescription":"This control can be used to display image content in a GenericTile.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ImageContent(sId?, mSettings?) : sap.m.ImageContent","name":"sap.m.ImageContent","prefix":"ImageContent","Experimental":false,"constructorDescription":"Constructor for a new sap.m.ImageContent control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSrc src} : sap.ui.core.URI<\/li>\n<li>{@link #getDescription description} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.Input(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.InputType.Text}, // sap.m.InputType\n\t\tmaxLength: ${0}, // int\n\t\tdateFormat: ${\"YYYY-MM-dd\"}, // string\n\t\tshowValueHelp: ${bShowValueHelp}, // boolean\n\t\tshowSuggestion: ${bShowSuggestion}, // boolean\n\t\tvalueHelpOnly: ${bValueHelpOnly}, // boolean\n\t\tfilterSuggests: ${bFilterSuggests}, // boolean\n\t\tmaxSuggestionWidth: ${maxSuggestionWidth}, // sap.ui.core.CSSSize\n\t\tstartSuggestion: ${1}, // int\n\t\tshowTableSuggestionValueHelp: ${bShowTableSuggestionValueHelp}, // boolean\n\t\tdescription: \"${description}\", // string\n\t\tfieldWidth: ${\"50%\"}, // sap.ui.core.CSSSize\n\t\tvalueLiveUpdate: ${bValueLiveUpdate}, // boolean\n\t\tselectedKey: ${\"\"}, // string\n\t\ttextFormatMode: ${sap.m.InputTextFormatMode.Value}, // sap.m.InputTextFormatMode\n\t\ttextFormatter: ${\"\"}, // any\n\t\tsuggestionRowValidator: ${\"\"}, // any\n\t\tenableSuggestionsHighlighting: ${bEnableSuggestionsHighlighting}, // boolean\n\t\tsuggestionItems: [${suggestionItems}], // sap.ui.core.Item[]\n\t\tsuggestionColumns: [${suggestionColumns}], // sap.m.Column[]\n\t\tsuggestionRows: [${suggestionRows}], // sap.m.ColumnListItem[]\n\t\tselectedItem: ${selectedItem}, // (sap.ui.core.Item|string)\n\t\tselectedRow: ${selectedRow}, // (sap.m.ColumnListItem|string)\n\t\tliveChange: [function (oEvent) {}, this], // function|array\n\t\tvalueHelpRequest: [function (oEvent) {}, this], // function|array\n\t\tsuggest: [function (oEvent) {}, this], // function|array\n\t\tsuggestionItemSelected: [function (oEvent) {}, this], // function|array\n\t\tsubmit: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/Input","static":"true","extends":"sap.m.InputBase","helpDescription":"Allows the user to enter and edit text or numeric values in one line.\n\n<h3>Overview<\/h3>\n\nYou can enable the autocomplete suggestion feature and the value help option to easily enter a valid value.\n\n<h3>Guidelines<\/h3>\n\n<ul> <li> Always provide a meaningful label for any input field <\/li> <li> Limit the length of the input field. This will visually emphasize the constraints for the field. <\/li> <li> Do not use the <code>placeholder<\/code> property as a label.<\/li> <li> Use the <code>description<\/code> property only for small fields with no placeholders (i.e. for currencies).<\/li> <\/ul>\n\n<h3>Structure<\/h3>\n\nThe controls inherits from {@link sap.m.InputBase} which controls the core properties like: <ul> <li> editable / read-only <\/li> <li> enabled / disabled<\/li> <li> placeholder<\/li> <li> text direction<\/li> <li> value states<\/li> <\/ul> To aid the user during input, you can enable value help (<code>showValueHelp<\/code>) or autocomplete (<code>showSuggestion<\/code>). <strong>Value help<\/strong> will open a new dialog where you can refine your input. <strong>Autocomplete<\/strong> has three types of suggestions: <ul> <li> Single value - a list of suggestions of type <code>sap.ui.core.Item<\/code> or <code>sap.ui.core.ListItem<\/code> <\/li> <li> Two values - a list of two suggestions (ID and description) of type <code>sap.ui.core.Item<\/code> or <code>sap.ui.core.ListItem<\/code> <\/li> <li> Tabular suggestions of type <code>sap.m.ColumnListItem<\/code> <\/li> <\/ul> The suggestions are stored in two aggregations <code>suggestionItems<\/code> (for single and double values) and <code>suggestionRows<\/code> (for tabular values).\n\n<h3>Usage<\/h3>\n\n<b>When to use:<\/b> Use the control for short inputs like emails, phones, passwords, fields for assisted value selection.\n\n<b>When not to use:<\/b> Don't use the control for long texts, dates, designated search fields, fields for multiple selection.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"Input(sId?, mSettings?) : sap.m.Input","name":"sap.m.Input","prefix":"Input","Experimental":false,"constructorDescription":"Constructor for a new <code>Input<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getType type} : sap.m.InputType (default: Text)<\/li>\n<li>{@link #getMaxLength maxLength} : int (default: 0)<\/li>\n<li>{@link #getDateFormat dateFormat} : string (default: YYYY-MM-dd)<\/li>\n<li>{@link #getShowValueHelp showValueHelp} : boolean (default: false)<\/li>\n<li>{@link #getShowSuggestion showSuggestion} : boolean (default: false)<\/li>\n<li>{@link #getValueHelpOnly valueHelpOnly} : boolean (default: false)<\/li>\n<li>{@link #getFilterSuggests filterSuggests} : boolean (default: true)<\/li>\n<li>{@link #getMaxSuggestionWidth maxSuggestionWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getStartSuggestion startSuggestion} : int (default: 1)<\/li>\n<li>{@link #getShowTableSuggestionValueHelp showTableSuggestionValueHelp} : boolean (default: true)<\/li>\n<li>{@link #getDescription description} : string<\/li>\n<li>{@link #getFieldWidth fieldWidth} : sap.ui.core.CSSSize (default: 50%)<\/li>\n<li>{@link #getValueLiveUpdate valueLiveUpdate} : boolean (default: false)<\/li>\n<li>{@link #getSelectedKey selectedKey} : string (default: )<\/li>\n<li>{@link #getTextFormatMode textFormatMode} : sap.m.InputTextFormatMode (default: Value)<\/li>\n<li>{@link #getTextFormatter textFormatter} : any (default: )<\/li>\n<li>{@link #getSuggestionRowValidator suggestionRowValidator} : any (default: )<\/li>\n<li>{@link #getEnableSuggestionsHighlighting enableSuggestionsHighlighting} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSuggestionItems suggestionItems} : sap.ui.core.Item[] (default)<\/li>\n<li>{@link #getSuggestionColumns suggestionColumns} : sap.m.Column[]<\/li>\n<li>{@link #getSuggestionRows suggestionRows} : sap.m.ColumnListItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedItem selectedItem} : (sap.ui.core.ID | sap.ui.core.Item)<\/li>\n<li>{@link #getSelectedRow selectedRow} : (sap.ui.core.ID | sap.m.ColumnListItem)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:valueHelpRequest valueHelpRequest} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:suggest suggest} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:suggestionItemSelected suggestionItemSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:submit submit} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.InputBase#constructor sap.m.InputBase}\ncan be used as well."},{"template":"fireLiveChange(\n\t{\n\t\tvalue: \"${value}\", // string\n\t\tescPressed: ${bEscPressed}, // boolean\n\t\tpreviousValue: \"${previousValue}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:liveChange liveChange} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireLiveChange(mParameters?) : sap.m.Input","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.Input.fireLiveChange"},{"template":"fireSubmit(\n\t{\n\t\tvalue: \"${value}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:submit submit} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireSubmit(mParameters?) : sap.m.Input","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.Input.fireSubmit"},{"template":"fireSuggest(\n\t{\n\t\tsuggestValue: \"${suggestValue}\", // string\n\t\tsuggestionColumns: ${suggestionColumns} // sap.m.ListBase\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:suggest suggest} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireSuggest(mParameters?) : sap.m.Input","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.Input.fireSuggest"},{"template":"fireSuggestionItemSelected(\n\t{\n\t\tselectedItem: ${selectedItem}, // sap.ui.core.Item\n\t\tselectedRow: ${selectedRow} // sap.m.ColumnListItem\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:suggestionItemSelected suggestionItemSelected} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireSuggestionItemSelected(mParameters?) : sap.m.Input","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.Input.fireSuggestionItemSelected"},{"template":"fireValueHelpRequest(\n\t{\n\t\tfromSuggestions: ${bFromSuggestions} // boolean\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:valueHelpRequest valueHelpRequest} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireValueHelpRequest(mParameters?) : sap.m.Input","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.Input.fireValueHelpRequest"},{"template":"new sap.m.InputBase(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/InputBase","static":"true","extends":"sap.ui.core.Control","helpDescription":"The <code>sap.m.InputBase<\/code> control provides a basic functionality for input controls.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"InputBase(sId?, mSettings?) : sap.m.InputBase","name":"sap.m.InputBase","prefix":"InputBase","Experimental":false,"constructorDescription":"Constructor for a new <code>sap.m.InputBase<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getPlaceholder placeholder} : string<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getValueStateText valueStateText} : string<\/li>\n<li>{@link #getShowValueStateMessage showValueStateMessage} : boolean (default: true)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Initial)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireChange(\n\t{\n\t\tvalue: \"${value}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:change change} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireChange(mParameters?) : sap.m.InputBase","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.InputBase.fireChange"},{"template":"new sap.m.InputListItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\tlabel: \"${label}\", // string\n\t\tlabelTextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tcontent: [${content}] // sap.ui.core.Control[]\n\t}\n)\n","module":"sap/m/InputListItem","static":"true","extends":"sap.m.ListItemBase","helpDescription":"List item should be used for a label and an input field.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"InputListItem(sId?, mSettings?) : sap.m.InputListItem","name":"sap.m.InputListItem","prefix":"InputListItem","Experimental":false,"constructorDescription":"Constructor for a new InputListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getLabelTextDirection labelTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well."},{"template":"new sap.m.Label(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tdesign: ${sap.m.LabelDesign.Standard}, // sap.m.LabelDesign\n\t\ttext: \"${text}\", // string\n\t\ttextAlign: ${sap.ui.core.TextAlign.Begin}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\twidth: ${\"\"}, // sap.ui.core.CSSSize\n\t\trequired: ${bRequired}, // boolean\n\t\tdisplayOnly: ${bDisplayOnly}, // boolean\n\t\twrapping: ${bWrapping}, // boolean\n\t\tlabelFor: ${labelFor} // (sap.ui.core.Control|string)\n\t}\n)\n","module":"sap/m/Label","static":"true","extends":"sap.ui.core.Control","helpDescription":"Provides a textual label for other controls. Label appearance can be influenced by properties such as <code>textAlign<\/code>, <code>design<\/code>, <code>displayOnly<\/code> and <code>wrapping<\/code>. As of version 1.50 the default value of the <code>wrapping<\/code> property is set to <code>false<\/code>\n\nLabels for required fields are marked with an asterisk. <h3>Overview<\/h3> Labels are used as titles for single controls or groups of controls. <h3>Usage<\/h3> <h4>When to use<\/h4> <ul> <li>It's recommended to use the <code>Label<\/code> in Form controls.<\/li> <li>Use title case for labels.<\/li> <\/ul> <h4>When not to use<\/h4> <ul> <li> It is not recommended to use labels in Bold.<\/li> <\/ul>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"Label(sId?, mSettings?) : sap.m.Label","name":"sap.m.Label","prefix":"Label","Experimental":false,"constructorDescription":"Constructor for a new Label.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDesign design} : sap.m.LabelDesign (default: Standard)<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<li>{@link #getDisplayOnly displayOnly} : boolean (default: false)<\/li>\n<li>{@link #getWrapping wrapping} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getLabelFor labelFor} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.LightBoxItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\timageSrc: ${\"\"}, // sap.ui.core.URI\n\t\talt: ${\"\"}, // string\n\t\ttitle: ${\"\"}, // string\n\t\tsubtitle: ${\"\"} // string\n\t}\n)\n","module":"sap/m/LightBoxItem","static":"true","extends":"sap.ui.core.Element","helpDescription":"Represents an item which is displayed within an sap.m.LightBox. This item holds all properties of the image as well as the title and subtitle.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"LightBoxItem(sId?, mSettings?) : sap.m.LightBoxItem","name":"sap.m.LightBoxItem","prefix":"LightBoxItem","Experimental":false,"constructorDescription":"Constructor for a new LightBoxItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getImageSrc imageSrc} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getAlt alt} : string (default: )<\/li>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getSubtitle subtitle} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."},{"template":"new sap.m.Link(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttarget: \"${target}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\thref: ${href}, // sap.ui.core.URI\n\t\twrapping: ${bWrapping}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tsubtle: ${bSubtle}, // boolean\n\t\temphasized: ${bEmphasized}, // boolean\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/Link","static":"true","extends":"sap.ui.core.Control","helpDescription":"A hyperlink control used to navigate to other apps and web pages or to trigger actions.\n\n<h3>Overview<\/h3>\n\nThe <code>Link<\/code> control is a clickable text element visualized in such a way that it stands out from the standard text. On hover, it changes its style to underlined text to provide additional feedback to the user.\n\n<h3>Usage<\/h3>\n\nYou can set the <code>Link<\/code> to be enabled or disabled.\n\nTo create a visual hierarchy in large lists of links, you can set the less important links as <code>subtle<\/code> or the more important ones as <code>emphasized<\/code>.\n\nTo specify where the linked content is opened, you can use the <code>target<\/code> property.\n\n<h3>Responsive behavior<\/h3>\n\nIf there is not enough space, the text of the <code>Link<\/code> becomes truncated. If the <code>wrapping<\/code> property is set to <code>true<\/code>, the text will be displayed on several lines, instead of being truncated.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"Link(sId?, mSettings?) : sap.m.Link","name":"sap.m.Link","prefix":"Link","Experimental":false,"constructorDescription":"Constructor for a new <code>Link<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getTarget target} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHref href} : sap.ui.core.URI<\/li>\n<li>{@link #getWrapping wrapping} : boolean (default: false)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Initial)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getSubtle subtle} : boolean (default: false)<\/li>\n<li>{@link #getEmphasized emphasized} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.List(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tinset: ${bInset}, // boolean\n\t\theaderText: \"${headerText}\", // string\n\t\theaderDesign: ${sap.m.ListHeaderDesign.Standard}, // sap.m.ListHeaderDesign\n\t\tfooterText: \"${footerText}\", // string\n\t\tmode: ${sap.m.ListMode.None}, // sap.m.ListMode\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tincludeItemInSelection: ${bIncludeItemInSelection}, // boolean\n\t\tshowUnread: ${bShowUnread}, // boolean\n\t\tnoDataText: \"${noDataText}\", // string\n\t\tshowNoData: ${bShowNoData}, // boolean\n\t\tenableBusyIndicator: ${bEnableBusyIndicator}, // boolean\n\t\tmodeAnimationOn: ${bModeAnimationOn}, // boolean\n\t\tshowSeparators: ${sap.m.ListSeparators.All}, // sap.m.ListSeparators\n\t\tswipeDirection: ${sap.m.SwipeDirection.Both}, // sap.m.SwipeDirection\n\t\tgrowing: ${bGrowing}, // boolean\n\t\tgrowingThreshold: ${20}, // int\n\t\tgrowingTriggerText: \"${growingTriggerText}\", // string\n\t\tgrowingScrollToLoad: ${bGrowingScrollToLoad}, // boolean\n\t\tgrowingDirection: ${sap.m.ListGrowingDirection.Downwards}, // sap.m.ListGrowingDirection\n\t\trememberSelections: ${bRememberSelections}, // boolean\n\t\tkeyboardMode: ${sap.m.ListKeyboardMode.Navigation}, // sap.m.ListKeyboardMode\n\t\titems: [${items}], // sap.m.ListItemBase[]\n\t\tswipeContent: ${swipeContent}, // sap.ui.core.Control\n\t\theaderToolbar: ${headerToolbar}, // sap.m.Toolbar\n\t\tinfoToolbar: ${infoToolbar}, // sap.m.Toolbar\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselect: [function (oEvent) {}, this], // function|array\n\t\tselectionChange: [function (oEvent) {}, this], // function|array\n\t\t\"delete\": [function (oEvent) {}, this], // function|array\n\t\tswipe: [function (oEvent) {}, this], // function|array\n\t\tgrowingStarted: [function (oEvent) {}, this], // function|array\n\t\tgrowingFinished: [function (oEvent) {}, this], // function|array\n\t\tupdateStarted: [function (oEvent) {}, this], // function|array\n\t\tupdateFinished: [function (oEvent) {}, this], // function|array\n\t\titemPress: [function (oEvent) {}, this], // function|array\n\t\tbackgroundDesign: ${sap.m.BackgroundDesign.Solid}, // sap.m.BackgroundDesign\n\t\tcolumns: [${columns}] // sap.m.Column[]\n\t}\n)\n","module":"sap/m/List","static":"true","extends":"sap.m.ListBase","helpDescription":"The List control provides a container for all types of list items. For mobile devices, the recommended limit of list items is 100 to assure proper performance. To improve initial rendering of large lists, use the \"growing\" feature. Please refer to the SAPUI5 Developer Guide for more information..\n\nSee section \"{@link topic:1da158152f644ba1ad408a3e982fd3df Lists}\" in the documentation for an introduction to <code>sap.m.List<\/code> control.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"List(sId?, mSettings?) : sap.m.List","name":"sap.m.List","prefix":"List","Experimental":false,"constructorDescription":"Constructor for a new List.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign (default: Solid)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getColumns columns} : sap.m.Column[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListBase#constructor sap.m.ListBase}\ncan be used as well."},{"template":"new sap.m.ListBase(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tinset: ${bInset}, // boolean\n\t\theaderText: \"${headerText}\", // string\n\t\theaderDesign: ${sap.m.ListHeaderDesign.Standard}, // sap.m.ListHeaderDesign\n\t\tfooterText: \"${footerText}\", // string\n\t\tmode: ${sap.m.ListMode.None}, // sap.m.ListMode\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tincludeItemInSelection: ${bIncludeItemInSelection}, // boolean\n\t\tshowUnread: ${bShowUnread}, // boolean\n\t\tnoDataText: \"${noDataText}\", // string\n\t\tshowNoData: ${bShowNoData}, // boolean\n\t\tenableBusyIndicator: ${bEnableBusyIndicator}, // boolean\n\t\tmodeAnimationOn: ${bModeAnimationOn}, // boolean\n\t\tshowSeparators: ${sap.m.ListSeparators.All}, // sap.m.ListSeparators\n\t\tswipeDirection: ${sap.m.SwipeDirection.Both}, // sap.m.SwipeDirection\n\t\tgrowing: ${bGrowing}, // boolean\n\t\tgrowingThreshold: ${20}, // int\n\t\tgrowingTriggerText: \"${growingTriggerText}\", // string\n\t\tgrowingScrollToLoad: ${bGrowingScrollToLoad}, // boolean\n\t\tgrowingDirection: ${sap.m.ListGrowingDirection.Downwards}, // sap.m.ListGrowingDirection\n\t\trememberSelections: ${bRememberSelections}, // boolean\n\t\tkeyboardMode: ${sap.m.ListKeyboardMode.Navigation}, // sap.m.ListKeyboardMode\n\t\titems: [${items}], // sap.m.ListItemBase[]\n\t\tswipeContent: ${swipeContent}, // sap.ui.core.Control\n\t\theaderToolbar: ${headerToolbar}, // sap.m.Toolbar\n\t\tinfoToolbar: ${infoToolbar}, // sap.m.Toolbar\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselect: [function (oEvent) {}, this], // function|array\n\t\tselectionChange: [function (oEvent) {}, this], // function|array\n\t\t\"delete\": [function (oEvent) {}, this], // function|array\n\t\tswipe: [function (oEvent) {}, this], // function|array\n\t\tgrowingStarted: [function (oEvent) {}, this], // function|array\n\t\tgrowingFinished: [function (oEvent) {}, this], // function|array\n\t\tupdateStarted: [function (oEvent) {}, this], // function|array\n\t\tupdateFinished: [function (oEvent) {}, this], // function|array\n\t\titemPress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/ListBase","static":"true","extends":"sap.ui.core.Control","helpDescription":"The <code>sap.m.ListBase<\/code> control provides a base functionality of the <code>sap.m.List<\/code> and <code>sap.m.Table<\/code> controls. Selection, deletion, unread states and inset style are also maintained in <code>sap.m.ListBase<\/code>.\n\nSee section \"{@link topic:295e44b2d0144318bcb7bdd56bfa5189 List, List Item, and Table}\" in the documentation for an introduction to subclasses of <code>sap.m.ListBase<\/code> control.\n\n<b>Note:<\/b> The ListBase including all contained items may be completely re-rendered when the data of a bound model is changed. Due to the limited hardware resources of mobile devices this can lead to longer delays for lists that contain many items. As such the usage of a list is not recommended for these use cases.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false,"description":"Use the <code>selectionChange<\/code> event instead.","since":"1.16"},"description":"ListBase(sId?, mSettings?) : sap.m.ListBase","name":"sap.m.ListBase","prefix":"ListBase","Experimental":false,"constructorDescription":"Constructor for a new ListBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getInset inset} : boolean (default: false)<\/li>\n<li>{@link #getHeaderText headerText} : string<\/li>\n<li>{@link #getHeaderDesign headerDesign} : sap.m.ListHeaderDesign (default: Standard)<\/li>\n<li>{@link #getFooterText footerText} : string<\/li>\n<li>{@link #getMode mode} : sap.m.ListMode (default: None)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getIncludeItemInSelection includeItemInSelection} : boolean (default: false)<\/li>\n<li>{@link #getShowUnread showUnread} : boolean (default: false)<\/li>\n<li>{@link #getNoDataText noDataText} : string<\/li>\n<li>{@link #getShowNoData showNoData} : boolean (default: true)<\/li>\n<li>{@link #getEnableBusyIndicator enableBusyIndicator} : boolean (default: true)<\/li>\n<li>{@link #getModeAnimationOn modeAnimationOn} : boolean (default: true)<\/li>\n<li>{@link #getShowSeparators showSeparators} : sap.m.ListSeparators (default: All)<\/li>\n<li>{@link #getSwipeDirection swipeDirection} : sap.m.SwipeDirection (default: Both)<\/li>\n<li>{@link #getGrowing growing} : boolean (default: false)<\/li>\n<li>{@link #getGrowingThreshold growingThreshold} : int (default: 20)<\/li>\n<li>{@link #getGrowingTriggerText growingTriggerText} : string<\/li>\n<li>{@link #getGrowingScrollToLoad growingScrollToLoad} : boolean (default: false)<\/li>\n<li>{@link #getGrowingDirection growingDirection} : sap.m.ListGrowingDirection (default: Downwards)<\/li>\n<li>{@link #getRememberSelections rememberSelections} : boolean (default: true)<\/li>\n<li>{@link #getKeyboardMode keyboardMode} : sap.m.ListKeyboardMode (default: Navigation)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.ListItemBase[] (default)<\/li>\n<li>{@link #getSwipeContent swipeContent} : sap.ui.core.Control<\/li>\n<li>{@link #getHeaderToolbar headerToolbar} : sap.m.Toolbar<\/li>\n<li>{@link #getInfoToolbar infoToolbar} : sap.m.Toolbar<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:delete delete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:swipe swipe} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:growingStarted growingStarted} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:growingFinished growingFinished} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:updateStarted updateStarted} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:updateFinished updateFinished} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:itemPress itemPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireDelete(\n\t{\n\t\tlistItem: ${listItem} // sap.m.ListItemBase\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:delete delete} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"Use the <code>selectionChange<\/code> event instead.","since":"1.16"},"description":"fireDelete(mParameters?) : sap.m.ListBase","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.ListBase.fireDelete"},{"template":"fireGrowingFinished(\n\t{\n\t\tactual: ${actual}, // int\n\t\ttotal: ${total} // int\n\t}\n)\n","Deprecated":true,"helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.3 Instead, use \"updateFinished\" event.<br>Fires event {@link #event:growingFinished growingFinished} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"Use the <code>selectionChange<\/code> event instead.","since":"1.16"},"description":"fireGrowingFinished(mParameters?) : sap.m.ListBase","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.ListBase.fireGrowingFinished"},{"template":"fireGrowingStarted(\n\t{\n\t\tactual: ${actual}, // int\n\t\ttotal: ${total} // int\n\t}\n)\n","Deprecated":true,"helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16.3 Instead, use <code>updateStarted<\/code> event with listening <code>changeReason<\/code>.<br>Fires event {@link #event:growingStarted growingStarted} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"Use the <code>selectionChange<\/code> event instead.","since":"1.16"},"description":"fireGrowingStarted(mParameters?) : sap.m.ListBase","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.ListBase.fireGrowingStarted"},{"template":"fireItemPress(\n\t{\n\t\tlistItem: ${listItem}, // sap.m.ListItemBase\n\t\tsrcControl: ${srcControl} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:itemPress itemPress} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"Use the <code>selectionChange<\/code> event instead.","since":"1.16"},"description":"fireItemPress(mParameters?) : sap.m.ListBase","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.ListBase.fireItemPress"},{"template":"fireSelect(\n\t{\n\t\tlistItem: ${listItem} // sap.m.ListItemBase\n\t}\n)\n","Deprecated":true,"helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.16 Use the <code>selectionChange<\/code> event instead.<br>Fires event {@link #event:select select} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"Use the <code>selectionChange<\/code> event instead.","since":"1.16"},"description":"fireSelect(mParameters?) : sap.m.ListBase","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.ListBase.fireSelect"},{"template":"fireSelectionChange(\n\t{\n\t\tlistItem: ${listItem}, // sap.m.ListItemBase\n\t\tlistItems: [${listItems}], // [object Object][]\n\t\tselected: ${bSelected}, // boolean\n\t\tselectAll: ${bSelectAll} // boolean\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:selectionChange selectionChange} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"Use the <code>selectionChange<\/code> event instead.","since":"1.16"},"description":"fireSelectionChange(mParameters?) : sap.m.ListBase","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.ListBase.fireSelectionChange"},{"template":"fireSwipe(\n\t{\n\t\tlistItem: ${listItem}, // sap.m.ListItemBase\n\t\tswipeContent: ${swipeContent}, // sap.ui.core.Control\n\t\tsrcControl: ${srcControl} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:swipe swipe} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"Use the <code>selectionChange<\/code> event instead.","since":"1.16"},"description":"fireSwipe(mParameters?) : boolean","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.ListBase.fireSwipe"},{"template":"fireUpdateFinished(\n\t{\n\t\treason: \"${reason}\", // string\n\t\tactual: ${actual}, // int\n\t\ttotal: ${total} // int\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:updateFinished updateFinished} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"Use the <code>selectionChange<\/code> event instead.","since":"1.16"},"description":"fireUpdateFinished(mParameters?) : sap.m.ListBase","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.ListBase.fireUpdateFinished"},{"template":"fireUpdateStarted(\n\t{\n\t\treason: \"${reason}\", // string\n\t\tactual: ${actual}, // int\n\t\ttotal: ${total} // int\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:updateStarted updateStarted} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"Use the <code>selectionChange<\/code> event instead.","since":"1.16"},"description":"fireUpdateStarted(mParameters?) : sap.m.ListBase","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.ListBase.fireUpdateStarted"},{"template":"new sap.m.ListItemBase(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/ListItemBase","static":"true","extends":"sap.ui.core.Control","helpDescription":"ListItemBase contains the base features of all specific list items.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ListItemBase(sId?, mSettings?) : sap.m.ListItemBase","name":"sap.m.ListItemBase","prefix":"ListItemBase","Experimental":false,"constructorDescription":"Constructor for a new ListItemBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getType type} : sap.m.ListType (default: Inactive)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getUnread unread} : boolean (default: false)<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getCounter counter} : int<\/li>\n<li>{@link #getHighlight highlight} : sap.ui.core.MessageType (default: None)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:tap tap} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:detailTap detailTap} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:detailPress detailPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.MaskInput(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tplaceholderSymbol: ${\"_\"}, // string\n\t\tmask: \"${mask}\", // string\n\t\trules: [${rules}] // sap.m.MaskInputRule[]\n\t}\n)\n","module":"sap/m/MaskInput","static":"true","extends":"sap.m.InputBase","helpDescription":"The <code>sap.m.MaskInput<\/code> control allows users to easily enter data in a certain format and in a fixed-width input (for example: date, time, phone number, credit card number, currency, IP address, MAC address, and others).","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"MaskInput(sId?, mSettings?) : sap.m.MaskInput","name":"sap.m.MaskInput","prefix":"MaskInput","Experimental":false,"constructorDescription":"Constructor for a new MaskInput.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPlaceholderSymbol placeholderSymbol} : string (default: _)<\/li>\n<li>{@link #getMask mask} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getRules rules} : sap.m.MaskInputRule[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.InputBase#constructor sap.m.InputBase}\ncan be used as well."},{"template":"new sap.m.MaskInputRule(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tmaskFormatSymbol: ${\"*\"}, // string\n\t\tregex: ${\"[a-zA-Z0-9]\"} // string\n\t}\n)\n","module":"sap/m/MaskInputRule","static":"true","extends":"sap.ui.core.Element","helpDescription":"The <code>sap.m.MaskInputRule<\/code> control holds the mapping of a single <code>maskFormatSymbol<\/code> to the regular expression <code>regex<\/code> that defines the allowed characters for the rule.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"MaskInputRule(sId?, mSettings?) : sap.m.MaskInputRule","name":"sap.m.MaskInputRule","prefix":"MaskInputRule","Experimental":false,"constructorDescription":"Constructor for a new MaskInputRule.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMaskFormatSymbol maskFormatSymbol} : string (default: *)<\/li>\n<li>{@link #getRegex regex} : string (default: [a-zA-Z0-9])<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."},{"template":"new sap.m.Menu(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\titems: [${items}], // sap.m.MenuItem[]\n\t\titemSelected: [function (oEvent) {}, this], // function|array\n\t\tclosed: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/Menu","static":"true","extends":"sap.ui.core.Control","helpDescription":"The <code>sap.m.Menu<\/code> control represents a hierarchical menu. When opened on mobile devices it occupies the whole screen.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"Menu(sId?, mSettings?) : sap.m.Menu","name":"sap.m.Menu","prefix":"Menu","Experimental":false,"constructorDescription":"Constructor for a new Menu.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.MenuItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemSelected itemSelected} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:closed closed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireItemSelected(\n\t{\n\t\titem: ${item} // sap.m.MenuItem\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:itemSelected itemSelected} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireItemSelected(mParameters?) : sap.m.Menu","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.Menu.fireItemSelected"},{"template":"new sap.m.MenuButton(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: \"${text}\", // string\n\t\ttype: ${sap.m.ButtonType.Default}, // sap.m.ButtonType\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\tactiveIcon: ${activeIcon}, // sap.ui.core.URI\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tbuttonMode: ${sap.m.MenuButtonMode.Regular}, // sap.m.MenuButtonMode\n\t\tuseDefaultActionOnly: ${bUseDefaultActionOnly}, // boolean\n\t\tmenu: ${menu}, // sap.m.Menu\n\t\tdefaultAction: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/MenuButton","static":"true","extends":"sap.ui.core.Control","helpDescription":"The <code>sap.m.MenuButton<\/code> control enables the user to show a hierarchical menu.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"MenuButton(sId?, mSettings?) : sap.m.MenuButton","name":"sap.m.MenuButton","prefix":"MenuButton","Experimental":false,"constructorDescription":"Constructor for a new MenuButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getType type} : sap.m.ButtonType (default: Default)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getActiveIcon activeIcon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getButtonMode buttonMode} : sap.m.MenuButtonMode (default: Regular)<\/li>\n<li>{@link #getUseDefaultActionOnly useDefaultActionOnly} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getMenu menu} : sap.m.Menu (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:defaultAction defaultAction} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.MenuItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\ticon: \"${icon}\", // string\n\t\tvisible: ${bVisible}, // boolean\n\t\tstartsSection: ${bStartsSection}, // boolean\n\t\titems: [${items}], // sap.m.MenuItem[]\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tpropertyChanged: [function (oEvent) {}, this], // function|array\n\t\taggregationChanged: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/MenuItem","static":"true","extends":"sap.ui.core.Item","helpDescription":"The <code>MenuItem<\/code> control is used for creating items for the <code>sap.m.Menu<\/code>. It is derived from a core <code>sap.ui.core.Item<\/code>.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"MenuItem(sId?, mSettings?) : sap.m.MenuItem","name":"sap.m.MenuItem","prefix":"MenuItem","Experimental":false,"constructorDescription":"Constructor for a new <code>MenuItem<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : string<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getStartsSection startsSection} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.MenuItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:propertyChanged propertyChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:aggregationChanged aggregationChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well."},{"template":"fireAggregationChanged(\n\t{\n\t\taggregationName: ${aggregationName}, // String\n\t\tmethodName: ${methodName}, // String\n\t\tmethodParams: ${methodParams} // Object\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:aggregationChanged aggregationChanged} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireAggregationChanged(mParameters?) : sap.m.MenuItem","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.MenuItem.fireAggregationChanged"},{"template":"firePropertyChanged(\n\t{\n\t\tpropertyKey: \"${propertyKey}\", // string\n\t\tpropertyValue: ${propertyValue} // any\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:propertyChanged propertyChanged} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"firePropertyChanged(mParameters?) : sap.m.MenuItem","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.MenuItem.firePropertyChanged"},{"template":"alert(\n\t\"${vMessage}\", // string\n\t{\n\t\tonClose: ${fn_onClose}, // function\n\t\ttitle: \"${title}\", // string\n\t\tid: \"${id}\", // string\n\t\tstyleClass: \"${styleClass}\", // string\n\t\tinitialFocus: ${initialFocus}, // string|sap.m.MessageBox.Action\n\t\ttextDirection: ${textDirection} // sap.ui.core.TextDirection\n\t}\n)\n","Deprecated":false,"helpDescription":"Displays an alert dialog with the given message and an OK button (no icons).\n\n<pre>\nsap.m.MessageBox.alert(\"This message should appear in the alert\", {\n    title: \"Alert\",                                      // default\n    onClose: null,                                       // default\n    styleClass: \"\"                                       // default\n    initialFocus: null                                   // default\n    textDirection: sap.ui.core.TextDirection.Inherit     // default\n});\n<\/pre>\n\nIf a callback is given, it is called after the alert dialog has been closed by the user via the OK button. The callback is called with the following signature:\n\n<pre>\n  function (oAction)\n<\/pre>\n\nwhere <code>oAction<\/code> can be either sap.m.MessageBox.Action.OK when the alert dialog is closed by tapping on the OK button or null when the alert dialog is closed by calling <code>sap.m.InstanceManager.closeAllDialogs()<\/code>.\n\nThe alert dialog opened by this method is processed asynchronously. Applications have to use <code>fnCallback<\/code> to continue work after the user closed the alert dialog.","category":"method","module":"sap/m/MessageBox","static":"true","DeprecatedInfo":{"isDeprecated":false},"description":"alert(vMessage, mOptions?)","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.MessageBox.alert"},{"template":"confirm(\n\t\"${vMessage}\", // string\n\t{\n\t\tonClose: ${fn_onClose}, // function\n\t\ttitle: \"${title}\", // string\n\t\tid: \"${id}\", // string\n\t\tstyleClass: \"${styleClass}\", // string\n\t\tinitialFocus: ${initialFocus}, // string|sap.m.MessageBox.Action\n\t\ttextDirection: ${textDirection} // sap.ui.core.TextDirection\n\t}\n)\n","Deprecated":false,"helpDescription":"Displays a confirmation dialog with the given message, a QUESTION icon, an OK button and a Cancel button. If a callback is given, it is called after the confirmation box has been closed by the user with one of the buttons.\n\n<pre>\nsap.m.MessageBox.confirm(\"This message should appear in the confirmation\", {\n    title: \"Confirm\",                                    // default\n    onClose: null                                        // default\n    styleClass: \"\"                                       // default\n    initialFocus: null                                   // default\n    textDirection: sap.ui.core.TextDirection.Inherit     // default\n    });\n<\/pre>\n\nThe callback is called with the following signature\n\n<pre>\n  function(oAction)\n<\/pre>\n\nwhere oAction is set by one of the following three values: 1. sap.m.MessageBox.Action.OK: OK (confirmed) button is tapped. 2. sap.m.MessageBox.Action.Cancel: Cancel (unconfirmed) button is tapped. 3. null: Confirm dialog is closed by calling <code>sap.m.InstanceManager.closeAllDialogs()<\/code>\n\nThe confirmation dialog opened by this method is processed asynchronously. Applications have to use <code>fnCallback<\/code> to continue work after the user closed the confirmation dialog","category":"method","module":"sap/m/MessageBox","static":"true","DeprecatedInfo":{"isDeprecated":false},"description":"confirm(vMessage, mOptions?)","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.MessageBox.confirm"},{"template":"error(\n\t\"${vMessage}\", // string\n\t{\n\t\tonClose: ${fn_onClose}, // function\n\t\ttitle: \"${title}\", // string\n\t\tid: \"${id}\", // string\n\t\tstyleClass: \"${styleClass}\", // string\n\t\tinitialFocus: ${initialFocus}, // string|sap.m.MessageBox.Action\n\t\ttextDirection: ${textDirection} // sap.ui.core.TextDirection\n\t}\n)\n","Deprecated":false,"helpDescription":"Displays an error dialog with the given message, an ERROR icon, a CLOSE button.. If a callback is given, it is called after the error box has been closed by the user with one of the buttons.\n\n<pre>\nsap.m.MessageBox.error(\"This message should appear in the error message box\", {\n    title: \"Error\",                                      // default\n    onClose: null                                        // default\n    styleClass: \"\"                                       // default\n    initialFocus: null                                   // default\n    textDirection: sap.ui.core.TextDirection.Inherit     // default\n    });\n<\/pre>\n\nThe callback is called with the following signature\n\n<pre>\n  function (oAction)\n<\/pre>\n\nThe error dialog opened by this method is processed asynchronously. Applications have to use <code>fnCallback<\/code> to continue work after the user closed the error dialog.","category":"method","module":"sap/m/MessageBox","static":"true","DeprecatedInfo":{"isDeprecated":false},"description":"error(vMessage, mOptions?)","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.MessageBox.error"},{"template":"information(\n\t\"${vMessage}\", // string\n\t{\n\t\tonClose: ${fn_onClose}, // function\n\t\ttitle: \"${title}\", // string\n\t\tid: \"${id}\", // string\n\t\tstyleClass: \"${styleClass}\", // string\n\t\tinitialFocus: ${initialFocus}, // string|sap.m.MessageBox.Action\n\t\ttextDirection: ${textDirection} // sap.ui.core.TextDirection\n\t}\n)\n","Deprecated":false,"helpDescription":"Displays an information dialog with the given message, an INFO icon, an OK button. If a callback is given, it is called after the info box has been closed by the user with one of the buttons.\n\n<pre>\nsap.m.MessageBox.information(\"This message should appear in the information message box\", {\n    title: \"Information\",                                // default\n    onClose: null                                        // default\n    styleClass: \"\"                                       // default\n    initialFocus: null                                   // default\n    textDirection: sap.ui.core.TextDirection.Inherit     // default\n    });\n<\/pre>\n\nThe callback is called with the following signature * <pre>\n  function (oAction)\n<\/pre>\n\nThe information dialog opened by this method is processed asynchronously. Applications have to use <code>fnCallback<\/code> to continue work after the user closed the information dialog","category":"method","module":"sap/m/MessageBox","static":"true","DeprecatedInfo":{"isDeprecated":false},"description":"information(vMessage, mOptions?)","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.MessageBox.information"},{"template":"show(\n\t\"${vMessage}\", // string\n\t{\n\t\ticon: ${icon}, // sap.m.MessageBox.Icon\n\t\ttitle: \"${title}\", // string\n\t\tactions: [${actions}], // sap.m.MessageBox.Action|[object Object][]|string|[object Object][]\n\t\tonClose: ${fn_onClose}, // function\n\t\tid: \"${id}\", // string\n\t\tstyleClass: \"${styleClass}\", // string\n\t\tinitialFocus: ${initialFocus}, // string|sap.m.MessageBox.Action\n\t\ttextDirection: ${textDirection}, // sap.ui.core.TextDirection\n\t\tdetails: \"${details}\", // string\n\t\tcontentWidth: ${contentWidth} // sap.ui.core.CSSSize\n\t}\n)\n","Deprecated":false,"helpDescription":"Creates and displays an sap.m.Dialog with type sap.m.DialogType.Message with the given text and buttons, and optionally other parts. After the user has tapped a button, the <code>onClose<\/code> function is invoked when given.\n\nThe only mandatory parameter is <code>vMessage<\/code>. Either a string with the corresponding text or even a layout control could be provided.\n\n<pre>\nsap.m.MessageBox.show(\"This message should appear in the message box\", {\n    icon: sap.m.MessageBox.Icon.NONE,                    // default\n    title: \"\",                                           // default\n    actions: sap.m.MessageBox.Action.OK                  // default\n    onClose: null                                        // default\n    styleClass: \"\"                                       // default\n    initialFocus: null                                   // default\n    textDirection: sap.ui.core.TextDirection.Inherit     // default\n});\n<\/pre>\n\nThe created dialog is executed asynchronously. When it has been created and registered for rendering, this function returns without waiting for a user reaction.\n\nWhen applications have to react on the users choice, they have to provide a callback function and postpone any reaction on the user choice until that callback is triggered.\n\nThe signature of the callback is\n\nfunction (oAction);\n\nwhere <code>oAction<\/code> is the button that the user has tapped. For example, when the user has pressed the close button, an sap.m.MessageBox.Action.Close is returned.","category":"method","module":"sap/m/MessageBox","static":"true","DeprecatedInfo":{"isDeprecated":false},"description":"show(vMessage, mOptions?)","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.MessageBox.show"},{"template":"success(\n\t\"${vMessage}\", // string\n\t{\n\t\tonClose: ${fn_onClose}, // function\n\t\ttitle: \"${title}\", // string\n\t\tid: \"${id}\", // string\n\t\tstyleClass: \"${styleClass}\", // string\n\t\tinitialFocus: ${initialFocus}, // string|sap.m.MessageBox.Action\n\t\ttextDirection: ${textDirection} // sap.ui.core.TextDirection\n\t}\n)\n","Deprecated":false,"helpDescription":"Displays a success dialog with the given message, a SUCCESS icon, an OK button. If a callback is given, it is called after the success box has been closed by the user with one of the buttons.\n\n<pre>\nsap.m.MessageBox.success(\"This message should appear in the success message box\", {\n    title: \"Success\",                                    // default\n    onClose: null                                        // default\n    styleClass: \"\"                                       // default\n    initialFocus: null                                   // default\n    textDirection: sap.ui.core.TextDirection.Inherit     // default\n    });\n<\/pre>\n\nThe callback is called with the following signature\n\n<pre>\n  function(oAction)\n<\/pre>\n\nThe success dialog opened by this method is processed asynchronously. Applications have to use <code>fnCallback<\/code> to continue work after the user closed the success dialog","category":"method","module":"sap/m/MessageBox","static":"true","DeprecatedInfo":{"isDeprecated":false},"description":"success(vMessage, mOptions?)","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.MessageBox.success"},{"template":"warning(\n\t\"${vMessage}\", // string\n\t{\n\t\tonClose: ${fn_onClose}, // function\n\t\ttitle: \"${title}\", // string\n\t\tid: \"${id}\", // string\n\t\tstyleClass: \"${styleClass}\", // string\n\t\tinitialFocus: ${initialFocus}, // string|sap.m.MessageBox.Action\n\t\ttextDirection: ${textDirection} // sap.ui.core.TextDirection\n\t}\n)\n","Deprecated":false,"helpDescription":"Displays a warning dialog with the given message, a WARNING icon, an OK button. If a callback is given, it is called after the warning box has been closed by the user with one of the buttons.\n\n<pre>\nsap.m.MessageBox.warning(\"This message should appear in the warning message box\", {\n    title: \"Warning\",                                    // default\n    onClose: null                                        // default\n    styleClass: \"\"                                       // default\n    initialFocus: null                                   // default\n    textDirection: sap.ui.core.TextDirection.Inherit     // default\n    });\n<\/pre>\n\nThe callback is called with the following signature * <pre>\n  function (oAction)\n<\/pre>\n\nThe warning dialog opened by this method is processed asynchronously. Applications have to use <code>fnCallback<\/code> to continue work after the user closed the warning dialog","category":"method","module":"sap/m/MessageBox","static":"true","DeprecatedInfo":{"isDeprecated":false},"description":"warning(vMessage, mOptions?)","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.MessageBox.warning"},{"template":"new sap.m.MessageItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\ttype: ${sap.ui.core.MessageType.Error}, // sap.ui.core.MessageType\n\t\ttitle: ${\"\"}, // string\n\t\tsubtitle: \"${subtitle}\", // string\n\t\tdescription: ${\"\"}, // string\n\t\tmarkupDescription: ${bMarkupDescription}, // boolean\n\t\tlongtextUrl: ${longtextUrl}, // sap.ui.core.URI\n\t\tcounter: ${counter}, // int\n\t\tgroupName: ${\"\"}, // string\n\t\tlink: ${link} // sap.m.Link\n\t}\n)\n","module":"sap/m/MessageItem","static":"true","extends":"sap.ui.core.Item","helpDescription":"A wrapper control used to hold different types of system messages. <h3>Structure<\/h3> The message item holds the basic set of properties for a system message: <ul> <li> Type, title, subtitle and description <\/li> <li> If the description contains markup, the <code>markupDescription<\/code> needs to be set to true, to ensure it is interpreted correctly. <\/li> <li> If the long text description can be specified by a URL by setting, the <code>longtextUrl<\/code> property. <\/li> <li> The message item can have a single {@link sap.m.Link} after the description. It is stored in the <code>link<\/code> aggregation. <\/li> <h3>Usage<\/h3> <b>Note:<\/b> The MessageItem control replaces {@link sap.m.MessagePopoverItem} as a more generic wrapper for messages.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"MessageItem(sId?, mSettings?) : sap.m.MessageItem","name":"sap.m.MessageItem","prefix":"MessageItem","Experimental":false,"constructorDescription":"Constructor for a new MessageItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getType type} : sap.ui.core.MessageType (default: Error)<\/li>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getSubtitle subtitle} : string<\/li>\n<li>{@link #getDescription description} : string (default: )<\/li>\n<li>{@link #getMarkupDescription markupDescription} : boolean (default: false)<\/li>\n<li>{@link #getLongtextUrl longtextUrl} : sap.ui.core.URI<\/li>\n<li>{@link #getCounter counter} : int<\/li>\n<li>{@link #getGroupName groupName} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getLink link} : sap.m.Link (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well."},{"template":"new sap.m.MessagePage(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: ${\"No matching items found.\"}, // string\n\t\tdescription: ${\"Check the filter settings.\"}, // string\n\t\ttitle: \"${title}\", // string\n\t\tshowHeader: ${bShowHeader}, // boolean\n\t\tshowNavButton: ${bShowNavButton}, // boolean\n\t\ticon: ${\"\"}, // \"sap-icon://documents\"\n\t\ticonAlt: \"${iconAlt}\", // string\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tcustomText: ${customText}, // sap.m.Link\n\t\tcustomDescription: ${customDescription}, // sap.m.Link\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tnavButtonPress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/MessagePage","static":"true","extends":"sap.ui.core.Control","helpDescription":"Displays an empty page with an icon and a header when certain conditions are met. <h3>Overview<\/h3> MessagePage is displayed when there is no data or matching content. There are different use cases where a MessagePage might be visualized, for example: <ul> <li>The search query returned no results<\/li> <li>The app contains no items<\/li> <li>There are too many items<\/li> <li>The application is loading<\/li> <\/ul> The layout is unchanged but the text and icon vary depending on the use case. <h3>Usage<\/h3> <b>Note:<\/b> The <code>MessagePage<\/code> is not intended to be used as a top-level control, but rather used within controls such as <code>NavContainer<\/code>, <code>App<\/code>, <code>Shell<\/code> or other container controls.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"MessagePage(sId?, mSettings?) : sap.m.MessagePage","name":"sap.m.MessagePage","prefix":"MessagePage","Experimental":false,"constructorDescription":"Constructor for a new MessagePage.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: No matching items found.)<\/li>\n<li>{@link #getDescription description} : string (default: Check the filter settings.)<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getShowHeader showHeader} : boolean (default: true)<\/li>\n<li>{@link #getShowNavButton showNavButton} : boolean (default: false)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: sap-icon://documents)<\/li>\n<li>{@link #getIconAlt iconAlt} : string<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCustomText customText} : sap.m.Link<\/li>\n<li>{@link #getCustomDescription customDescription} : sap.m.Link<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:navButtonPress navButtonPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.MessagePopover(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tasyncDescriptionHandler: ${asyncDescriptionHandler}, // any\n\t\tasyncURLHandler: ${asyncURLHandler}, // any\n\t\tplacement: ${sap.m.VerticalPlacementType.Vertical}, // sap.m.VerticalPlacementType\n\t\tinitiallyExpanded: ${bInitiallyExpanded}, // boolean\n\t\titems: [${items}], // sap.m.MessageItem[]\n\t\theaderButton: ${headerButton}, // sap.m.Button\n\t\tafterOpen: [function (oEvent) {}, this], // function|array\n\t\tafterClose: [function (oEvent) {}, this], // function|array\n\t\tbeforeOpen: [function (oEvent) {}, this], // function|array\n\t\tbeforeClose: [function (oEvent) {}, this], // function|array\n\t\titemSelect: [function (oEvent) {}, this], // function|array\n\t\tlistSelect: [function (oEvent) {}, this], // function|array\n\t\tlongtextLoaded: [function (oEvent) {}, this], // function|array\n\t\turlValidated: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/MessagePopover","static":"true","extends":"sap.ui.core.Control","helpDescription":"A summarized list of different types of messages. <h3>Overview<\/h3> A message popover is used to display a summarized list of different types of messages (errors, warnings, success and information). It provides a handy and systemized way to navigate and explore details for every message. <h4>Notes:<\/h4> <ul> <li> Messages can have descriptions pre-formatted with HTML markup. In this case, the <code>markupDescription<\/code> has to be set to <code>true<\/code>.<\/li> <li> If the message cannot be fully displayed or includes a long description, the message popover provides navigation to the detailed description.<\/li> <\/ul> <h3>Structure<\/h3> The message popover stores all messages in an association of type {@link sap.m.MessageItem} named <code>items<\/code>.\n\nA set of properties determines how the items are rendered: <ul> <li> counter - An integer that is used to indicate the number of errors for each type <\/li> <li> type - The type of message <\/li> <li> title/subtitle - The title and subtitle of the message<\/li> <li> description - The long text description of the message<\/li> <\/ul> <h3>Usage<\/h3> With the message concept, MessagePopover provides a way to centrally manage messages and show them to the user without additional work for the developer. The message popover is triggered from a messaging button in the footer toolbar. If an error has occurred at any validation point, the total number of messages should be incremented, but the user's work shouldn't be interrupted. <h3>Responsive Behavior<\/h3> On mobile phones, the message popover is automatically shown in full screen mode.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"MessagePopover(sId?, mSettings?) : sap.m.MessagePopover","name":"sap.m.MessagePopover","prefix":"MessagePopover","Experimental":false,"constructorDescription":"Constructor for a new MessagePopover.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAsyncDescriptionHandler asyncDescriptionHandler} : any<\/li>\n<li>{@link #getAsyncURLHandler asyncURLHandler} : any<\/li>\n<li>{@link #getPlacement placement} : sap.m.VerticalPlacementType (default: Vertical)<\/li>\n<li>{@link #getInitiallyExpanded initiallyExpanded} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : Array.<sap.m.MessageItem|sap.m.MessagePopoverItem> (default)<\/li>\n<li>{@link #getHeaderButton headerButton} : sap.m.Button<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterOpen afterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterClose afterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeOpen beforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeClose beforeClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:itemSelect itemSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:listSelect listSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:longtextLoaded longtextLoaded} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:urlValidated urlValidated} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireAfterClose(\n\t{\n\t\topenBy: ${openBy} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:afterClose afterClose} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireAfterClose(mParameters?) : sap.m.MessagePopover","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.MessagePopover.fireAfterClose"},{"template":"fireAfterOpen(\n\t{\n\t\topenBy: ${openBy} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:afterOpen afterOpen} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireAfterOpen(mParameters?) : sap.m.MessagePopover","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.MessagePopover.fireAfterOpen"},{"template":"fireBeforeClose(\n\t{\n\t\topenBy: ${openBy} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:beforeClose beforeClose} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireBeforeClose(mParameters?) : sap.m.MessagePopover","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.MessagePopover.fireBeforeClose"},{"template":"fireBeforeOpen(\n\t{\n\t\topenBy: ${openBy} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:beforeOpen beforeOpen} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireBeforeOpen(mParameters?) : sap.m.MessagePopover","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.MessagePopover.fireBeforeOpen"},{"template":"fireItemSelect(\n\t{\n\t\titem: ${item}, // sap.m.MessagePopoverItem\n\t\tmessageTypeFilter: ${messageTypeFilter} // sap.ui.core.MessageType\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:itemSelect itemSelect} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireItemSelect(mParameters?) : sap.m.MessagePopover","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.MessagePopover.fireItemSelect"},{"template":"fireListSelect(\n\t{\n\t\tmessageTypeFilter: ${messageTypeFilter} // sap.ui.core.MessageType\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:listSelect listSelect} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireListSelect(mParameters?) : sap.m.MessagePopover","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.MessagePopover.fireListSelect"},{"template":"setDefaultHandlers(\n\t{\n\t\tasyncDescriptionHandler: ${fn_asyncDescriptionHandler}, // function\n\t\tasyncURLHandler: ${fn_asyncURLHandler} // function\n\t}\n)\n","Deprecated":false,"helpDescription":"Setter for default description and URL validation callbacks across all instances of MessagePopover","category":"method","static":"true","DeprecatedInfo":{"isDeprecated":false},"description":"setDefaultHandlers(mDefaultHandlers)","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.MessagePopover.setDefaultHandlers"},{"template":"new sap.m.MessagePopoverItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\" // string\n\t}\n)\n","module":"sap/m/MessagePopoverItem","static":"true","extends":"sap.ui.core.Item","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46 use MessageItem instead<br>Items provide information about Error Messages in the page.","Deprecated":true,"category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"use MessageItem instead","since":"1.46"},"description":"MessagePopoverItem(sId?, mSettings?) : sap.m.MessagePopoverItem","name":"sap.m.MessagePopoverItem","prefix":"MessagePopoverItem","Experimental":false,"constructorDescription":"Constructor for a new MessagePopoverItem."},{"template":"new sap.m.MessageStrip(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: ${\"\"}, // string\n\t\ttype: ${sap.ui.core.MessageType.Information}, // sap.ui.core.MessageType\n\t\tcustomIcon: ${\"\"}, // sap.ui.core.URI\n\t\tshowIcon: ${bShowIcon}, // boolean\n\t\tshowCloseButton: ${bShowCloseButton}, // boolean\n\t\tenableFormattedText: ${bEnableFormattedText}, // boolean\n\t\tlink: ${link}, // sap.m.Link\n\t\tclose: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/MessageStrip","static":"true","extends":"sap.ui.core.Control","helpDescription":"MessageStrip is a control that enables the embedding of application-related messages in the application. <h3>Overview<\/h3> The message strip displays 4 types of messages, each with a corresponding semantic color and icon: Information, Success, Warning and Error.\n\nEach message can have a close button, so that it can be removed from the UI if needed.\n\nWith version 1.50 you can use a limited set of formatting tags for the message text by setting <code>enableFormattedText<\/code>. The allowed tags are: <ul> <li>&lt;a&gt;<\/li> <li>&lt;em&gt;<\/li> <li>&lt;strong&gt;<\/li> <li>&lt;u&gt;<\/li> <\/ul> <h3>Usage<\/h3> <h4>When to use<\/h4> <ul> <li>You want to provide information or status update within the detail area of an object<\/li> <\/ul> <h4>When not to use<\/h4> <ul> <li>You want to display information within the object page header, within a control, in the master list, or above the page header.<\/li> <\/ul>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"MessageStrip(sId?, mSettings?) : sap.m.MessageStrip","name":"sap.m.MessageStrip","prefix":"MessageStrip","Experimental":false,"constructorDescription":"Constructor for a new MessageStrip.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getType type} : sap.ui.core.MessageType (default: Information)<\/li>\n<li>{@link #getCustomIcon customIcon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getShowIcon showIcon} : boolean (default: false)<\/li>\n<li>{@link #getShowCloseButton showCloseButton} : boolean (default: false)<\/li>\n<li>{@link #getEnableFormattedText enableFormattedText} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getLink link} : sap.m.Link (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:close close} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"show(\n\t\"${sMessage}\", // string\n\t{\n\t\tduration: ${duration}, // int\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tmy: ${my}, // sap.ui.core.Popup.Dock\n\t\tat: ${at}, // sap.ui.core.Popup.Dock\n\t\tof: ${of}, // sap.ui.core.Control|Element|jQuery|Window|undefined\n\t\toffset: \"${offset}\", // string\n\t\tcollision: \"${collision}\", // string\n\t\tonClose: ${fn_onClose}, // function\n\t\tautoClose: ${bAutoClose}, // boolean\n\t\tanimationTimingFunction: \"${animationTimingFunction}\", // string\n\t\tanimationDuration: ${animationDuration}, // int\n\t\tcloseOnBrowserNavigation: ${bCloseOnBrowserNavigation} // boolean\n\t}\n)\n","Deprecated":false,"helpDescription":"Creates and displays a simple message toast notification message with the given text, and optionally other options.\n\nThe only mandatory parameter is <code>sMessage<\/code>.","category":"method","module":"sap/m/MessageToast","static":"true","DeprecatedInfo":{"isDeprecated":false},"description":"show(sMessage, mOptions?)","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.MessageToast.show"},{"template":"new sap.m.MessageView(\n\t\"${sId}\", // string\n\t{\n\t\tasyncDescriptionHandler: ${asyncDescriptionHandler}, // any\n\t\tasyncURLHandler: ${asyncURLHandler}, // any\n\t\tgroupItems: ${bGroupItems}, // boolean\n\t\tshowDetailsPageHeader: ${bShowDetailsPageHeader}, // boolean\n\t\titems: [${items}], // sap.m.MessageItem[]\n\t\theaderButton: ${headerButton}, // sap.m.Button\n\t\tafterOpen: [function (oEvent) {}, this], // function|array\n\t\titemSelect: [function (oEvent) {}, this], // function|array\n\t\tlistSelect: [function (oEvent) {}, this], // function|array\n\t\tlongtextLoaded: [function (oEvent) {}, this], // function|array\n\t\turlValidated: [function (oEvent) {}, this] // function|array\n\t}\n)\n","Deprecated":false,"helpDescription":"<strong><i>Overview<\/i><\/strong> <br><br> A {@link sap.m.MessageView} is used to display a summarized list of different types of messages (errors, warnings, success and information). It provides a handy and systemized way to navigate and explore details for every message. It is meant to be embedded into container controls. If the MessageView contains only one item, which has either description, markupDescription or longTextUrl, its details page will be displayed initially. <br><br> <strong>Notes:<\/strong> <ul> <li> Messages can have descriptions pre-formatted with HTML markup. In this case, the <code>markupDescription<\/code> has to be set to <code>true<\/code>. <\/li> <li> If the message cannot be fully displayed or includes a long description, the MessageView provides navigation to the detailed description. <\/li> <\/ul> <strong><i>Structure<\/i><\/strong> <br><br> The MessageView stores all messages in an association of type {@link sap.m.MessageItem} named <code>items<\/code>. <br> A set of properties determines how the items are rendered: <ul> <li> counter - An integer that is used to indicate the number of errors for each type <\/li> <li> type - The type of message <\/li> <li> title/subtitle - The title and subtitle of the message<\/li> <li> description - The long text description of the message<\/li> <\/ul> <strong><i>Usage<\/i><\/strong> <br><br> As part of the messaging concept, MessageView provides a way to centrally manage messages and show them to the user without additional work for the developer. <br><br>","category":"constructor","module":"sap/m/MessageView","static":"true","DeprecatedInfo":{"isDeprecated":false},"description":"MessageView(sId?, mSettings?) : sap.m.MessageView","Experimental":false,"prefix":"MessageView","name":"sap.m.MessageView","constructorDescription":"Constructor for a new MessageView\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAsyncDescriptionHandler asyncDescriptionHandler} : any<\/li>\n<li>{@link #getAsyncURLHandler asyncURLHandler} : any<\/li>\n<li>{@link #getGroupItems groupItems} : boolean (default: false)<\/li>\n<li>{@link #getShowDetailsPageHeader showDetailsPageHeader} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.MessageItem[] (default)<\/li>\n<li>{@link #getHeaderButton headerButton} : sap.m.Button<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterOpen afterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:itemSelect itemSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:listSelect listSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:longtextLoaded longtextLoaded} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:urlValidated urlValidated} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>"},{"template":"fireAfterOpen(\n\t{\n\t\topenBy: ${openBy} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:afterOpen afterOpen} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireAfterOpen(mParameters?) : sap.m.MessageView","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.MessageView.fireAfterOpen"},{"template":"fireItemSelect(\n\t{\n\t\titem: ${item}, // sap.m.MessageItem\n\t\tmessageTypeFilter: ${messageTypeFilter} // sap.ui.core.MessageType\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:itemSelect itemSelect} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireItemSelect(mParameters?) : sap.m.MessageView","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.MessageView.fireItemSelect"},{"template":"fireListSelect(\n\t{\n\t\tmessageTypeFilter: ${messageTypeFilter} // sap.ui.core.MessageType\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:listSelect listSelect} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireListSelect(mParameters?) : sap.m.MessageView","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.MessageView.fireListSelect"},{"template":"setDefaultHandlers(\n\t{\n\t\tasyncDescriptionHandler: ${fn_asyncDescriptionHandler}, // function\n\t\tasyncURLHandler: ${fn_asyncURLHandler} // function\n\t}\n)\n","Deprecated":false,"helpDescription":"Setter for default description and URL validation callbacks across all instances of MessageView","category":"method","static":"true","DeprecatedInfo":{"isDeprecated":false},"description":"setDefaultHandlers(mDefaultHandlers)","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.MessageView.setDefaultHandlers"},{"template":"new sap.m.MultiComboBox(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tmaxWidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tshowButton: ${bShowButton}, // boolean\n\t\titems: [${items}], // sap.ui.core.Item[]\n\t\tloadItems: [function (oEvent) {}, this], // function|array\n\t\tselectedKeys: ${[]}, // string[]\n\t\tselectedItems: [${selectedItems}], // (sap.ui.core.Item|string)[]\n\t\tselectionChange: [function (oEvent) {}, this], // function|array\n\t\tselectionFinish: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/MultiComboBox","static":"true","extends":"sap.m.ComboBoxBase","helpDescription":"The MultiComboBox control provides a list box with items and a text field allowing the user to either type a value directly into the control or choose from the list of existing items.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"MultiComboBox(sId?, mSettings?) : sap.m.MultiComboBox","name":"sap.m.MultiComboBox","prefix":"MultiComboBox","Experimental":false,"constructorDescription":"Constructor for a new MultiComboBox.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSelectedKeys selectedKeys} : string[] (default: [])<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedItems selectedItems} : (sap.ui.core.ID | sap.ui.core.Item)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionFinish selectionFinish} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ComboBoxBase#constructor sap.m.ComboBoxBase}\ncan be used as well."},{"template":"fireSelectionChange(\n\t{\n\t\tchangedItem: ${changedItem}, // sap.ui.core.Item\n\t\tselected: ${bSelected} // boolean\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:selectionChange selectionChange} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireSelectionChange(mParameters?) : sap.m.MultiComboBox","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.MultiComboBox.fireSelectionChange"},{"template":"fireSelectionFinish(\n\t{\n\t\tselectedItems: [${selectedItems}] // [object Object][]\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:selectionFinish selectionFinish} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireSelectionFinish(mParameters?) : sap.m.MultiComboBox","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.MultiComboBox.fireSelectionFinish"},{"template":"new sap.m.MultiEditField(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\tdisplayBlock: ${bDisplayBlock}, // boolean\n\t\tselectedItem: ${selectedItem}, // sap.ui.core.Item\n\t\tshowValueHelp: ${bShowValueHelp}, // boolean\n\t\tnullable: ${bNullable}, // boolean\n\t\trequired: ${bRequired}, // boolean\n\t\titems: [${items}], // sap.ui.core.Item[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/MultiEditField","static":"true","extends":"sap.ui.core.XMLComposite","helpDescription":"This control allows you to add items to a sap.m.Select instance. In addition, based on the property set, a set of pre-filled entries is added.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"MultiEditField(sId?, mSettings?) : sap.m.MultiEditField","name":"sap.m.MultiEditField","prefix":"MultiEditField","Experimental":false,"constructorDescription":"Constructor for MultiEditField\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSelectedItem selectedItem} : sap.ui.core.Item<\/li>\n<li>{@link #getShowValueHelp showValueHelp} : boolean (default: true)<\/li>\n<li>{@link #getNullable nullable} : boolean (default: true)<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Item[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.XMLComposite#constructor sap.ui.core.XMLComposite}\ncan be used as well."},{"template":"fireChange(\n\t{\n\t\tselectedItem: ${selectedItem} // sap.ui.core.Item\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:change change} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireChange(mParameters?) : sap.m.MultiEditField","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.MultiEditField.fireChange"},{"template":"new sap.m.MultiInput(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.InputType.Text}, // sap.m.InputType\n\t\tmaxLength: ${0}, // int\n\t\tdateFormat: ${\"YYYY-MM-dd\"}, // string\n\t\tshowValueHelp: ${bShowValueHelp}, // boolean\n\t\tshowSuggestion: ${bShowSuggestion}, // boolean\n\t\tvalueHelpOnly: ${bValueHelpOnly}, // boolean\n\t\tfilterSuggests: ${bFilterSuggests}, // boolean\n\t\tmaxSuggestionWidth: ${maxSuggestionWidth}, // sap.ui.core.CSSSize\n\t\tstartSuggestion: ${1}, // int\n\t\tshowTableSuggestionValueHelp: ${bShowTableSuggestionValueHelp}, // boolean\n\t\tdescription: \"${description}\", // string\n\t\tfieldWidth: ${\"50%\"}, // sap.ui.core.CSSSize\n\t\tvalueLiveUpdate: ${bValueLiveUpdate}, // boolean\n\t\tselectedKey: ${\"\"}, // string\n\t\ttextFormatMode: ${sap.m.InputTextFormatMode.Value}, // sap.m.InputTextFormatMode\n\t\ttextFormatter: ${\"\"}, // any\n\t\tsuggestionRowValidator: ${\"\"}, // any\n\t\tenableSuggestionsHighlighting: ${bEnableSuggestionsHighlighting}, // boolean\n\t\tsuggestionItems: [${suggestionItems}], // sap.ui.core.Item[]\n\t\tsuggestionColumns: [${suggestionColumns}], // sap.m.Column[]\n\t\tsuggestionRows: [${suggestionRows}], // sap.m.ColumnListItem[]\n\t\tselectedItem: ${selectedItem}, // (sap.ui.core.Item|string)\n\t\tselectedRow: ${selectedRow}, // (sap.m.ColumnListItem|string)\n\t\tliveChange: [function (oEvent) {}, this], // function|array\n\t\tvalueHelpRequest: [function (oEvent) {}, this], // function|array\n\t\tsuggest: [function (oEvent) {}, this], // function|array\n\t\tsuggestionItemSelected: [function (oEvent) {}, this], // function|array\n\t\tsubmit: [function (oEvent) {}, this], // function|array\n\t\tenableMultiLineMode: ${bEnableMultiLineMode}, // boolean\n\t\tmaxTokens: ${maxTokens}, // int\n\t\ttokens: [${tokens}], // sap.m.Token[]\n\t\ttokenChange: [function (oEvent) {}, this], // function|array\n\t\ttokenUpdate: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/MultiInput","static":"true","extends":"sap.m.Input","helpDescription":"<h3>Overview<\/h3> A multi-input field allows the user to enter multiple values, which are displayed as {@link sap.m.Token tokens}. These can be displayed in single and multi-line mode. You can enable auto-complete suggestions or value help to help the user choose the correct entry. You can define validator functions to define what token values are accepted. <b>Notes:<\/b> <ul> <li> New valid tokens are created, when the user presses Enter, selects a value from the suggestions drop-down, or when the focus leaves the field.<\/li> <li> Provide meaningful labels for all input fields. Do not use the placeholder as a replacement for the label.<\/li> <\/ul> <h3>Usage<\/h3> <h4>When to use:<\/h4> <ul> <li> You need to provide the value help option to help users select or search multiple business objects.<\/li> <li> The dataset to choose from is expected to increase over time (for example, to more than 200 values).<\/li> <\/ul> <h4>When not to use:<\/h4> <ul> <li> Do not use multi-line inputs in tables and forms.<\/li> <li> When you need to select only one value.<\/li> <li> When you want the user to select from a predefined set of options. Use {@link sap.m.MultiComboBox} instead.<\/li> <\/ul> <h3>Responsive Behavior<\/h3> <u>On Phones:<\/u> <ul> <li> Only the last entered token is displayed.<\/li> <li> A new full-screen dialog opens where the auto-complete suggestions can be selected.<\/li> <li> You can review the tokens by tapping on the token or the input field.<\/li> <\/ul> <u> On Tablets:<\/u> <ul> <li> The auto-complete suggestions appear below or above the multi-input field.<\/li> <li> You can review the tokens by swiping them to the left or right.<\/li> <li> (Multi-line Mode) Previously added tokens are visible above the input field.<\/li> <\/ul> <u>On Desktop:<\/u> <ul> <li> The auto-complete suggestions appear below or above the multi-input field.<\/li> <li> You can review the tokens by pressing the right or left arrows on the keyboard.<\/li> <li> You can select single tokens or a range of tokens and you can copy/cut/delete them.<\/ <li> (Multi-line Mode) Previously added tokens are visible above the input field.<\/li> <\/ul>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false,"description":"Please use the new event tokenUpdate.","since":"1.46"},"description":"MultiInput(sId?, mSettings?) : sap.m.MultiInput","name":"sap.m.MultiInput","prefix":"MultiInput","Experimental":false,"constructorDescription":"Constructor for a new MultiInput.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnableMultiLineMode enableMultiLineMode} : boolean (default: false)<\/li>\n<li>{@link #getMaxTokens maxTokens} : int<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTokens tokens} : sap.m.Token[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:tokenChange tokenChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:tokenUpdate tokenUpdate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Input#constructor sap.m.Input}\ncan be used as well."},{"template":"fireTokenChange(\n\t{\n\t\ttype: \"${type}\", // string\n\t\ttoken: ${token}, // sap.m.Token\n\t\ttokens: [${tokens}], // [object Object][]\n\t\taddedTokens: [${addedTokens}], // [object Object][]\n\t\tremovedTokens: [${removedTokens}] // [object Object][]\n\t}\n)\n","Deprecated":true,"helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.46 Please use the new event tokenUpdate.<br>Fires event {@link #event:tokenChange tokenChange} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"Please use the new event tokenUpdate.","since":"1.46"},"description":"fireTokenChange(mParameters?) : sap.m.MultiInput","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.MultiInput.fireTokenChange"},{"template":"fireTokenUpdate(\n\t{\n\t\ttype: \"${type}\", // string\n\t\taddedTokens: [${addedTokens}], // [object Object][]\n\t\tremovedTokens: [${removedTokens}] // [object Object][]\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:tokenUpdate tokenUpdate} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"Please use the new event tokenUpdate.","since":"1.46"},"description":"fireTokenUpdate(mParameters?) : boolean","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.MultiInput.fireTokenUpdate"},{"template":"new sap.m.NavContainer(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tautoFocus: ${bAutoFocus}, // boolean\n\t\theight: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tvisible: ${bVisible}, // boolean\n\t\tdefaultTransitionName: ${\"slide\"}, // string\n\t\tpages: [${pages}], // sap.ui.core.Control[]\n\t\tinitialPage: ${initialPage}, // (sap.ui.core.Control|string)\n\t\tnavigate: [function (oEvent) {}, this], // function|array\n\t\tafterNavigate: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/NavContainer","static":"true","extends":"sap.ui.core.Control","helpDescription":"The NavContainer control handles hierarchic navigation between Pages or other fullscreen controls.\n\nAll children of this control will receive navigation events like {@link sap.m.NavContainerChild#beforeShow beforeShow}, they are documented in the pseudo interface {@link sap.m.NavContainerChild sap.m.NavContainerChild}","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"NavContainer(sId?, mSettings?) : sap.m.NavContainer","name":"sap.m.NavContainer","prefix":"NavContainer","Experimental":false,"constructorDescription":"Constructor for a new NavContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAutoFocus autoFocus} : boolean (default: true)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getDefaultTransitionName defaultTransitionName} : string (default: slide)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPages pages} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getInitialPage initialPage} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:navigate navigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterNavigate afterNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireAfterNavigate(\n\t{\n\t\tfrom: ${from}, // sap.ui.core.Control\n\t\tfromId: \"${fromId}\", // string\n\t\tto: ${to}, // sap.ui.core.Control\n\t\ttoId: \"${toId}\", // string\n\t\tfirstTime: ${bFirstTime}, // boolean\n\t\tisTo: ${bIsTo}, // boolean\n\t\tisBack: ${bIsBack}, // boolean\n\t\tisBackToTop: ${bIsBackToTop}, // boolean\n\t\tisBackToPage: ${bIsBackToPage}, // boolean\n\t\tdirection: \"${direction}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:afterNavigate afterNavigate} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireAfterNavigate(mParameters?) : sap.m.NavContainer","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.NavContainer.fireAfterNavigate"},{"template":"fireNavigate(\n\t{\n\t\tfrom: ${from}, // sap.ui.core.Control\n\t\tfromId: \"${fromId}\", // string\n\t\tto: ${to}, // sap.ui.core.Control\n\t\ttoId: \"${toId}\", // string\n\t\tfirstTime: ${bFirstTime}, // boolean\n\t\tisTo: ${bIsTo}, // boolean\n\t\tisBack: ${bIsBack}, // boolean\n\t\tisBackToTop: ${bIsBackToTop}, // boolean\n\t\tisBackToPage: ${bIsBackToPage}, // boolean\n\t\tdirection: \"${direction}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:navigate navigate} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireNavigate(mParameters?) : boolean","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.NavContainer.fireNavigate"},{"template":"new sap.m.NewsContent(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tsize: ${sap.m.Size.Auto}, // sap.m.Size\n\t\tcontentText: \"${contentText}\", // string\n\t\tsubheader: \"${subheader}\", // string\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/NewsContent","static":"true","extends":"sap.ui.core.Control","helpDescription":"This control displays the news content text and subheader in a tile.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"NewsContent(sId?, mSettings?) : sap.m.NewsContent","name":"sap.m.NewsContent","prefix":"NewsContent","Experimental":false,"constructorDescription":"Constructor for a new sap.m.NewsContent control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getContentText contentText} : string<\/li>\n<li>{@link #getSubheader subheader} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.NotificationListBase(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\tpriority: ${sap.ui.core.Priority.None}, // sap.ui.core.Priority\n\t\ttitle: ${\"\"}, // string\n\t\tdatetime: ${\"\"}, // string\n\t\tshowButtons: ${bShowButtons}, // boolean\n\t\tshowCloseButton: ${bShowCloseButton}, // boolean\n\t\tauthorName: ${\"\"}, // string\n\t\tauthorPicture: ${authorPicture}, // sap.ui.core.URI\n\t\tbuttons: [${buttons}], // sap.m.Button[]\n\t\tclose: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/NotificationListBase","static":"true","extends":"sap.m.ListItemBase","helpDescription":"The NotificationListBase is the abstract base class for {@link sap.m.NotificationListItem} and {@link sap.m.NotificationListGroup}.\n\nThe NotificationList controls are designed for the SAP Fiori notification center. <h4>Overview<\/h4> NotificationListBase defines the general structure of a notification item. Most of the behavioral logic is defined for the single items or groups. <h4>Structure<\/h4> The base holds properties for the following elements: <ul> <li>Author name<\/li> <li>Author picture<\/li> <li>Time stamp<\/li> <li>Priority<\/li> <li>Title<\/li> <\/ul> Additionally, by setting these properties you can determine if buttons are shown: <ul> <li><code>showButtons<\/code> - action buttons visibility<\/li> <li><code>showCloseButton<\/code> - close button visibility<\/li> <\/ul>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"NotificationListBase(sId?, mSettings?) : sap.m.NotificationListBase","name":"sap.m.NotificationListBase","prefix":"NotificationListBase","Experimental":false,"constructorDescription":"Constructor for a new NotificationListBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPriority priority} : sap.ui.core.Priority (default: None)<\/li>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getDatetime datetime} : string (default: )<\/li>\n<li>{@link #getShowButtons showButtons} : boolean (default: true)<\/li>\n<li>{@link #getShowCloseButton showCloseButton} : boolean (default: true)<\/li>\n<li>{@link #getAuthorName authorName} : string (default: )<\/li>\n<li>{@link #getAuthorPicture authorPicture} : sap.ui.core.URI<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getButtons buttons} : sap.m.Button[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:close close} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well."},{"template":"new sap.m.NotificationListGroup(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\tpriority: ${sap.ui.core.Priority.None}, // sap.ui.core.Priority\n\t\ttitle: ${\"\"}, // string\n\t\tdatetime: ${\"\"}, // string\n\t\tshowButtons: ${bShowButtons}, // boolean\n\t\tshowCloseButton: ${bShowCloseButton}, // boolean\n\t\tauthorName: ${\"\"}, // string\n\t\tauthorPicture: ${authorPicture}, // sap.ui.core.URI\n\t\tbuttons: [${buttons}], // sap.m.Button[]\n\t\tclose: [function (oEvent) {}, this], // function|array\n\t\tcollapsed: ${bCollapsed}, // boolean\n\t\tautoPriority: ${bAutoPriority}, // boolean\n\t\tshowEmptyGroup: ${bShowEmptyGroup}, // boolean\n\t\tenableCollapseButtonWhenEmpty: ${bEnableCollapseButtonWhenEmpty}, // boolean\n\t\titems: [${items}], // sap.m.NotificationListItem[]\n\t\tonCollapse: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/NotificationListGroup","static":"true","extends":"sap.m.NotificationListBase","helpDescription":"The NotificationListItemGroup control is used for grouping {@link sap.m.NotificationListItem notification items} of the same type. <h4>Behavior<\/h4> The group handles specific behavior for different usecases: <ul> <li><code>autoPriority<\/code> - sets the group priority to the highest priority of an item in the group.<\/li> <li><code>enableCollapseButtonWhenEmpty<\/code> - displays a collapse button for an empty group.<\/li> <li><code>showEmptyGroup<\/code> - determines if the header/footer of an empty group is displayed.<\/li> <\/ul>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"NotificationListGroup(sId?, mSettings?) : sap.m.NotificationListGroup","name":"sap.m.NotificationListGroup","prefix":"NotificationListGroup","Experimental":false,"constructorDescription":"Constructor for a new NotificationListGroup.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getCollapsed collapsed} : boolean (default: false)<\/li>\n<li>{@link #getAutoPriority autoPriority} : boolean (default: true)<\/li>\n<li>{@link #getShowEmptyGroup showEmptyGroup} : boolean (default: false)<\/li>\n<li>{@link #getEnableCollapseButtonWhenEmpty enableCollapseButtonWhenEmpty} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.NotificationListItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:onCollapse onCollapse} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.NotificationListBase#constructor sap.m.NotificationListBase}\ncan be used as well."},{"template":"fireOnCollapse(\n\t{\n\t\tcollapsed: ${bCollapsed} // boolean\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:onCollapse onCollapse} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireOnCollapse(mParameters?) : sap.m.NotificationListGroup","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.NotificationListGroup.fireOnCollapse"},{"template":"new sap.m.NotificationListItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\tpriority: ${sap.ui.core.Priority.None}, // sap.ui.core.Priority\n\t\ttitle: ${\"\"}, // string\n\t\tdatetime: ${\"\"}, // string\n\t\tshowButtons: ${bShowButtons}, // boolean\n\t\tshowCloseButton: ${bShowCloseButton}, // boolean\n\t\tauthorName: ${\"\"}, // string\n\t\tauthorPicture: ${authorPicture}, // sap.ui.core.URI\n\t\tbuttons: [${buttons}], // sap.m.Button[]\n\t\tclose: [function (oEvent) {}, this], // function|array\n\t\tdescription: ${\"\"}, // string\n\t\ttruncate: ${bTruncate}, // boolean\n\t\thideShowMoreButton: ${bHideShowMoreButton}, // boolean\n\t\tprocessingMessage: ${processingMessage} // sap.m.MessageStrip\n\t}\n)\n","module":"sap/m/NotificationListItem","static":"true","extends":"sap.m.NotificationListBase","helpDescription":"The NotificationListItem control shows notifications to the user. <h4>Structure<\/h4> The notification item holds properties for the following elements: <ul> <li><code>description<\/code> - additional detail text.<\/li> <li><code>hideShowMoreButton<\/code> - visibility of the \"Show More\" button.<\/li> <li><code>truncate<\/code> - determines if title and description are truncated to the first two lines (usually needed on mobile devices).<\/li> <\/ul> For each item you can set some additional status information about the item processing by adding a {@link sap.m.MessageStrip} to the <code>processingMessage<\/code> aggregation.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"NotificationListItem(sId?, mSettings?) : sap.m.NotificationListItem","name":"sap.m.NotificationListItem","prefix":"NotificationListItem","Experimental":false,"constructorDescription":"Constructor for a new NotificationListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDescription description} : string (default: )<\/li>\n<li>{@link #getTruncate truncate} : boolean (default: true)<\/li>\n<li>{@link #getHideShowMoreButton hideShowMoreButton} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getProcessingMessage processingMessage} : sap.m.MessageStrip<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.NotificationListBase#constructor sap.m.NotificationListBase}\ncan be used as well."},{"template":"new sap.m.NumericContent(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tanimateTextChange: ${bAnimateTextChange}, // boolean\n\t\tformatterValue: ${bFormatterValue}, // boolean\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\ticonDescription: \"${iconDescription}\", // string\n\t\tindicator: ${sap.m.DeviationIndicator.None}, // sap.m.DeviationIndicator\n\t\tnullifyValue: ${bNullifyValue}, // boolean\n\t\tscale: \"${scale}\", // string\n\t\tsize: ${sap.m.Size.Auto}, // sap.m.Size\n\t\ttruncateValueTo: ${4}, // int\n\t\tvalue: \"${value}\", // string\n\t\tvalueColor: ${sap.m.ValueColor.Neutral}, // sap.m.ValueColor\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\twithMargin: ${bWithMargin}, // boolean\n\t\tstate: ${sap.m.LoadState.Loaded}, // sap.m.LoadState\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/NumericContent","static":"true","extends":"sap.ui.core.Control","helpDescription":"Shows numeric values used for example in tiles colored according to their meaning and displays deviations.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"NumericContent(sId?, mSettings?) : sap.m.NumericContent","name":"sap.m.NumericContent","prefix":"NumericContent","Experimental":false,"constructorDescription":"Constructor for a new sap.m.GenericTile control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getAnimateTextChange animateTextChange} : boolean (default: true)<\/li>\n<li>{@link #getFormatterValue formatterValue} : boolean (default: false)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconDescription iconDescription} : string<\/li>\n<li>{@link #getIndicator indicator} : sap.m.DeviationIndicator (default: None)<\/li>\n<li>{@link #getNullifyValue nullifyValue} : boolean (default: true)<\/li>\n<li>{@link #getScale scale} : string<\/li>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getTruncateValueTo truncateValueTo} : int (default: 4)<\/li>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getValueColor valueColor} : sap.m.ValueColor (default: Neutral)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getWithMargin withMargin} : boolean (default: true)<\/li>\n<li>{@link #getState state} : sap.m.LoadState (default: Loaded)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.ObjectAttribute(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttext: \"${text}\", // string\n\t\tactive: ${bActive}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tcustomContent: ${customContent}, // sap.ui.core.Control\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/ObjectAttribute","static":"true","extends":"sap.ui.core.Control","helpDescription":"The <code>ObjectAttribute<\/code> control displays a text field that can be normal or active. The <code>ObjectAttribute<\/code> fires a <code>press<\/code> event when the user chooses the active text.\n\n<b>Note:<\/b> If property <code>active<\/code> is set to <code>true<\/code>, only the value of the <code>text<\/code> property is styled and acts as a link. In this case the <code>text<\/code> property must also be set, as otherwise there will be no link displayed for the user.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ObjectAttribute(sId?, mSettings?) : sap.m.ObjectAttribute","name":"sap.m.ObjectAttribute","prefix":"ObjectAttribute","Experimental":false,"constructorDescription":"Constructor for a new <code>ObjectAttribute<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getActive active} : boolean<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCustomContent customContent} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"firePress(\n\t{\n\t\tdomRef: \"${domRef}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:press press} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"firePress(mParameters?) : sap.m.ObjectAttribute","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.ObjectAttribute.firePress"},{"template":"new sap.m.ObjectHeader(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\tnumber: \"${number}\", // string\n\t\tnumberUnit: \"${numberUnit}\", // string\n\t\tintro: \"${intro}\", // string\n\t\tintroActive: ${bIntroActive}, // boolean\n\t\ttitleActive: ${bTitleActive}, // boolean\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\ticonActive: ${bIconActive}, // boolean\n\t\ticonAlt: \"${iconAlt}\", // string\n\t\ticonTooltip: \"${iconTooltip}\", // string\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\tmarkFavorite: ${bMarkFavorite}, // boolean\n\t\tmarkFlagged: ${bMarkFlagged}, // boolean\n\t\tshowMarkers: ${bShowMarkers}, // boolean\n\t\tshowTitleSelector: ${bShowTitleSelector}, // boolean\n\t\tnumberState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tcondensed: ${bCondensed}, // boolean\n\t\tbackgroundDesign: ${backgroundDesign}, // sap.m.BackgroundDesign\n\t\tresponsive: ${bResponsive}, // boolean\n\t\tfullScreenOptimized: ${bFullScreenOptimized}, // boolean\n\t\ttitleHref: ${titleHref}, // sap.ui.core.URI\n\t\ttitleTarget: \"${titleTarget}\", // string\n\t\tintroHref: ${introHref}, // sap.ui.core.URI\n\t\tintroTarget: \"${introTarget}\", // string\n\t\ttitleTextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tintroTextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tnumberTextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\ttitleSelectorTooltip: ${\"Options\"}, // string\n\t\ttitleLevel: ${sap.ui.core.TitleLevel.H1}, // sap.ui.core.TitleLevel\n\t\tattributes: [${attributes}], // sap.m.ObjectAttribute[]\n\t\tfirstStatus: ${firstStatus}, // sap.m.ObjectStatus\n\t\tsecondStatus: ${secondStatus}, // sap.m.ObjectStatus\n\t\tstatuses: [${statuses}], // sap.ui.core.Control[]\n\t\tadditionalNumbers: [${additionalNumbers}], // sap.m.ObjectNumber[]\n\t\theaderContainer: ${headerContainer}, // sap.m.ObjectHeaderContainer\n\t\tmarkers: [${markers}], // sap.m.ObjectMarker[]\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttitlePress: [function (oEvent) {}, this], // function|array\n\t\tintroPress: [function (oEvent) {}, this], // function|array\n\t\ticonPress: [function (oEvent) {}, this], // function|array\n\t\ttitleSelectorPress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/ObjectHeader","static":"true","extends":"sap.ui.core.Control","helpDescription":"<code>ObjectHeader<\/code> is a display control that enables the user to easily identify a specific object. The object header title is the key identifier of the object and additional text and icons can be used to further distinguish it from other objects.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ObjectHeader(sId?, mSettings?) : sap.m.ObjectHeader","name":"sap.m.ObjectHeader","prefix":"ObjectHeader","Experimental":false,"constructorDescription":"Constructor for a new <\/code>ObjectHeader<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getNumber number} : string<\/li>\n<li>{@link #getNumberUnit numberUnit} : string<\/li>\n<li>{@link #getIntro intro} : string<\/li>\n<li>{@link #getIntroActive introActive} : boolean<\/li>\n<li>{@link #getTitleActive titleActive} : boolean<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconActive iconActive} : boolean<\/li>\n<li>{@link #getIconAlt iconAlt} : string<\/li>\n<li>{@link #getIconTooltip iconTooltip} : string<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getMarkFavorite markFavorite} : boolean (default: false)<\/li>\n<li>{@link #getMarkFlagged markFlagged} : boolean (default: false)<\/li>\n<li>{@link #getShowMarkers showMarkers} : boolean (default: false)<\/li>\n<li>{@link #getShowTitleSelector showTitleSelector} : boolean (default: false)<\/li>\n<li>{@link #getNumberState numberState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getCondensed condensed} : boolean (default: false)<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign<\/li>\n<li>{@link #getResponsive responsive} : boolean (default: false)<\/li>\n<li>{@link #getFullScreenOptimized fullScreenOptimized} : boolean (default: false)<\/li>\n<li>{@link #getTitleHref titleHref} : sap.ui.core.URI<\/li>\n<li>{@link #getTitleTarget titleTarget} : string<\/li>\n<li>{@link #getIntroHref introHref} : sap.ui.core.URI<\/li>\n<li>{@link #getIntroTarget introTarget} : string<\/li>\n<li>{@link #getTitleTextDirection titleTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getIntroTextDirection introTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getNumberTextDirection numberTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getTitleSelectorTooltip titleSelectorTooltip} : string (default: Options)<\/li>\n<li>{@link #getTitleLevel titleLevel} : sap.ui.core.TitleLevel (default: H1)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAttributes attributes} : sap.m.ObjectAttribute[] (default)<\/li>\n<li>{@link #getFirstStatus firstStatus} : sap.m.ObjectStatus<\/li>\n<li>{@link #getSecondStatus secondStatus} : sap.m.ObjectStatus<\/li>\n<li>{@link #getStatuses statuses} : sap.ui.core.Control[]<\/li>\n<li>{@link #getAdditionalNumbers additionalNumbers} : sap.m.ObjectNumber[]<\/li>\n<li>{@link #getHeaderContainer headerContainer} : sap.m.ObjectHeaderContainer<\/li>\n<li>{@link #getMarkers markers} : sap.m.ObjectMarker[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:titlePress titlePress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:introPress introPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:iconPress iconPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:titleSelectorPress titleSelectorPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireIconPress(\n\t{\n\t\tdomRef: ${domRef} // object\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:iconPress iconPress} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireIconPress(mParameters?) : sap.m.ObjectHeader","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.ObjectHeader.fireIconPress"},{"template":"fireIntroPress(\n\t{\n\t\tdomRef: ${domRef} // object\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:introPress introPress} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireIntroPress(mParameters?) : sap.m.ObjectHeader","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.ObjectHeader.fireIntroPress"},{"template":"fireTitlePress(\n\t{\n\t\tdomRef: ${domRef} // object\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:titlePress titlePress} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireTitlePress(mParameters?) : sap.m.ObjectHeader","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.ObjectHeader.fireTitlePress"},{"template":"fireTitleSelectorPress(\n\t{\n\t\tdomRef: ${domRef} // object\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:titleSelectorPress titleSelectorPress} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireTitleSelectorPress(mParameters?) : sap.m.ObjectHeader","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.ObjectHeader.fireTitleSelectorPress"},{"template":"new sap.m.ObjectIdentifier(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttext: \"${text}\", // string\n\t\tbadgeNotes: ${bBadgeNotes}, // boolean\n\t\tbadgePeople: ${bBadgePeople}, // boolean\n\t\tbadgeAttachments: ${bBadgeAttachments}, // boolean\n\t\tvisible: ${bVisible}, // boolean\n\t\ttitleActive: ${bTitleActive}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttitlePress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/ObjectIdentifier","static":"true","extends":"sap.ui.core.Control","helpDescription":"The ObjectIdentifier is a display control that enables the user to easily identify a specific object. The ObjectIdentifier title is the key identifier of the object and additional text and icons can be used to further distinguish it from other objects.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ObjectIdentifier(sId?, mSettings?) : sap.m.ObjectIdentifier","name":"sap.m.ObjectIdentifier","prefix":"ObjectIdentifier","Experimental":false,"constructorDescription":"Constructor for a new ObjectIdentifier.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getBadgeNotes badgeNotes} : boolean<\/li>\n<li>{@link #getBadgePeople badgePeople} : boolean<\/li>\n<li>{@link #getBadgeAttachments badgeAttachments} : boolean<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getTitleActive titleActive} : boolean (default: false)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:titlePress titlePress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireTitlePress(\n\t{\n\t\tdomRef: ${domRef} // object\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:titlePress titlePress} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireTitlePress(mParameters?) : sap.m.ObjectIdentifier","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.ObjectIdentifier.fireTitlePress"},{"template":"new sap.m.ObjectListItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\tnumber: \"${number}\", // string\n\t\tnumberUnit: \"${numberUnit}\", // string\n\t\tintro: \"${intro}\", // string\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\tactiveIcon: ${activeIcon}, // sap.ui.core.URI\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\tmarkFavorite: ${bMarkFavorite}, // boolean\n\t\tmarkFlagged: ${bMarkFlagged}, // boolean\n\t\tshowMarkers: ${bShowMarkers}, // boolean\n\t\tnumberState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\ttitleTextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tintroTextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tnumberTextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tmarkLocked: ${bMarkLocked}, // boolean\n\t\tattributes: [${attributes}], // sap.m.ObjectAttribute[]\n\t\tfirstStatus: ${firstStatus}, // sap.m.ObjectStatus\n\t\tsecondStatus: ${secondStatus}, // sap.m.ObjectStatus\n\t\tmarkers: [${markers}] // sap.m.ObjectMarker[]\n\t}\n)\n","module":"sap/m/ObjectListItem","static":"true","extends":"sap.m.ListItemBase","helpDescription":"ObjectListItem is a display control that provides summary information about an object as a list item. The ObjectListItem title is the key identifier of the object. Additional text and icons can be used to further distinguish it from other objects. Attributes and statuses can be used to provide additional meaning about the object to the user.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ObjectListItem(sId?, mSettings?) : sap.m.ObjectListItem","name":"sap.m.ObjectListItem","prefix":"ObjectListItem","Experimental":false,"constructorDescription":"Constructor for a new ObjectListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getNumber number} : string<\/li>\n<li>{@link #getNumberUnit numberUnit} : string<\/li>\n<li>{@link #getIntro intro} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getActiveIcon activeIcon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getMarkFavorite markFavorite} : boolean<\/li>\n<li>{@link #getMarkFlagged markFlagged} : boolean<\/li>\n<li>{@link #getShowMarkers showMarkers} : boolean<\/li>\n<li>{@link #getNumberState numberState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getTitleTextDirection titleTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getIntroTextDirection introTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getNumberTextDirection numberTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getMarkLocked markLocked} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAttributes attributes} : sap.m.ObjectAttribute[] (default)<\/li>\n<li>{@link #getFirstStatus firstStatus} : sap.m.ObjectStatus<\/li>\n<li>{@link #getSecondStatus secondStatus} : sap.m.ObjectStatus<\/li>\n<li>{@link #getMarkers markers} : sap.m.ObjectMarker[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well."},{"template":"new sap.m.ObjectMarker(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${type}, // sap.m.ObjectMarkerType\n\t\tvisibility: ${visibility}, // sap.m.ObjectMarkerVisibility\n\t\tadditionalInfo: ${\"\"}, // string\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/ObjectMarker","static":"true","extends":"sap.ui.core.Control","helpDescription":"The <code>sap.m.ObjectMarker<\/code> control represents one of the following predefined types: <ul> <li><code>Flagged<\/code> <li><code>Favorite<\/code> <li><code>Draft<\/code> <li><code>Locked<\/code> <li><code>LockedBy<\/code> <li><code>Unsaved<\/code> <li><code>UnsavedBy<\/code> <\/ul> <b>Note<\/b>: Use the <code>LockedBy/UnsavedBy<\/code> type along with the <code>additionalInfo<\/code> property to display the name of the user who locked/changed the object. If <code>additionalInfo<\/code> property is not set when using <code>LockedBy/UnsavedBy<\/code> types, the string \"Locked by another user\"/\"Unsaved changes by another user\" will be displayed. If you don't want to display name of the user, simply use the <code>Locked/Unsaved<\/code> types.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ObjectMarker(sId?, mSettings?) : sap.m.ObjectMarker","name":"sap.m.ObjectMarker","prefix":"ObjectMarker","Experimental":false,"constructorDescription":"Constructor for a new ObjectMarker.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getType type} : sap.m.ObjectMarkerType<\/li>\n<li>{@link #getVisibility visibility} : sap.m.ObjectMarkerVisibility<\/li>\n<li>{@link #getAdditionalInfo additionalInfo} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.ObjectNumber(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tnumber: \"${number}\", // string\n\t\tnumberUnit: \"${numberUnit}\", // string\n\t\temphasized: ${bEmphasized}, // boolean\n\t\tstate: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tunit: \"${unit}\", // string\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\ttextAlign: ${sap.ui.core.TextAlign.Begin}, // sap.ui.core.TextAlign\n\t\tariaDescribedBy: [${ariaDescribedBy}] // (sap.ui.core.Control|string)[]\n\t}\n)\n","module":"sap/m/ObjectNumber","static":"true","extends":"sap.ui.core.Control","helpDescription":"The ObjectNumber control displays number and number unit properties for an object. The number can be displayed using semantic colors to provide additional meaning about the object to the user.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ObjectNumber(sId?, mSettings?) : sap.m.ObjectNumber","name":"sap.m.ObjectNumber","prefix":"ObjectNumber","Experimental":false,"constructorDescription":"Constructor for a new ObjectNumber.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getNumber number} : string<\/li>\n<li>{@link #getNumberUnit numberUnit} : string<\/li>\n<li>{@link #getEmphasized emphasized} : boolean (default: true)<\/li>\n<li>{@link #getState state} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getUnit unit} : string<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.ObjectStatus(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttext: \"${text}\", // string\n\t\tstate: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tariaDescribedBy: [${ariaDescribedBy}] // (sap.ui.core.Control|string)[]\n\t}\n)\n","module":"sap/m/ObjectStatus","static":"true","extends":"sap.ui.core.Control","helpDescription":"Status information that can be either text with a value state, or an icon.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ObjectStatus(sId?, mSettings?) : sap.m.ObjectStatus","name":"sap.m.ObjectStatus","prefix":"ObjectStatus","Experimental":false,"constructorDescription":"Constructor for a new ObjectStatus.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getState state} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.OverflowToolbar(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tactive: ${bActive}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\theight: ${\"\"}, // sap.ui.core.CSSSize\n\t\tdesign: ${sap.m.ToolbarDesign.Auto}, // sap.m.ToolbarDesign\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/OverflowToolbar","static":"true","extends":"sap.m.Toolbar","helpDescription":"A container control based on {@link sap.m.Toolbar}, that provides overflow when its content does not fit in the visible area.\n\n<h3>Overview<\/h3>\n\nThe content of the <code>OverflowToolbar<\/code> moves into the overflow area from right to left when the available space is not enough in the visible area of the container. It can be accessed by the user through the overflow button that opens it in a popover.\n\n<b>Note:<\/b> It is recommended that you use <code>OverflowToolbar<\/code> over {@link sap.m.Toolbar}, unless you want to avoid overflow in favor of shrinking.\n\n<h3>Usage<\/h3>\n\nDifferent behavior and priorities can be set for each control inside the <code>OverflowToolbar<\/code>, such as certain actions to appear only in the overflow area or to never move there. For more information, see {@link sap.m.OverflowToolbarLayoutData} and {@link sap.m.OverflowToolbarPriority}.\n\nOnly the following controls can be moved in the overflow area:\n\n<ul><li>{@link sap.m.Button}<\/li> <li>{@link sap.m.CheckBox}<\/li> <li>{@link sap.m.ComboBox}<\/li> <li>{@link sap.m.DatePicker}<\/li> <li>{@link sap.m.DateTimeInput}<\/li> <li>{@link sap.m.DateTimePicker}<\/li> <li>{@link sap.m.Input}<\/li> <li>{@link sap.m.OverflowToolbarButton}<\/li> <li>{@link sap.m.SearchField}<\/li> <li>{@link sap.m.SegmentedButton}<\/li> <li>{@link sap.m.Select}<\/li> <li>{@link sap.m.TimePicker}<\/li> <li>{@link sap.m.ToggleButton}<\/li> <li>{@link sap.ui.comp.smartfield.SmartField}<\/li> <li>{@link sap.ui.comp.smartfield.SmartLabel}<\/li><\/ul>\n\n<b>Note:<\/b> The <code>OverflowToolbar<\/code> is an adaptive container that checks the available width and hides the part of its content that doesn't fit. It is intended that simple controls, such as {@link sap.m.Button} and {@link sap.m.Label} are used as content. Embedding other adaptive container controls, such as {@link sap.m.Breadcrumbs}, results in competition for the available space - both controls calculate the available space based on the other one's size and both change their width at the same time, leading to incorrectly distributed space.\n\n<h3>Responsive behavior<\/h3>\n\nThe height of the toolbar changes on desktop, tablet, and smartphones.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"OverflowToolbar(sId?, mSettings?) : sap.m.OverflowToolbar","name":"sap.m.OverflowToolbar","prefix":"OverflowToolbar","Experimental":false,"constructorDescription":"Constructor for a new <code>OverflowToolbar<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Toolbar#constructor sap.m.Toolbar}\ncan be used as well."},{"template":"new sap.m.OverflowToolbarButton(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: \"${text}\", // string\n\t\ttype: ${sap.m.ButtonType.Default}, // sap.m.ButtonType\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\ticonFirst: ${bIconFirst}, // boolean\n\t\tactiveIcon: ${activeIcon}, // sap.ui.core.URI\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/OverflowToolbarButton","static":"true","extends":"sap.m.Button","helpDescription":"Represents an {@link sap.m.Button} that shows its text only when in the overflow area of an {@link sap.m.OverflowToolbar}.\n\n<b>Note:<\/b> This control is intended to be used exclusively in the context of the <code>OverflowToolbar<\/code>, whenever it is required to have buttons that show only an icon in the toolbar, but icon and text in the overflow menu.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"OverflowToolbarButton(sId?, mSettings?) : sap.m.OverflowToolbarButton","name":"sap.m.OverflowToolbarButton","prefix":"OverflowToolbarButton","Experimental":false,"constructorDescription":"Constructor for a new <code>OverflowToolbarButton<\/code>."},{"template":"new sap.m.OverflowToolbarLayoutData(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tshrinkable: ${bShrinkable}, // boolean\n\t\tminWidth: ${minWidth}, // sap.ui.core.CSSSize\n\t\tmaxWidth: ${maxWidth}, // sap.ui.core.CSSSize\n\t\tmoveToOverflow: ${bMoveToOverflow}, // boolean\n\t\tstayInOverflow: ${bStayInOverflow}, // boolean\n\t\tpriority: ${sap.m.OverflowToolbarPriority.High}, // sap.m.OverflowToolbarPriority\n\t\tgroup: ${0}, // int\n\t\tcloseOverflowOnInteraction: ${bCloseOverflowOnInteraction} // boolean\n\t}\n)\n","module":"sap/m/OverflowToolbarLayoutData","static":"true","extends":"sap.m.ToolbarLayoutData","helpDescription":"Holds layout data for the {@link sap.m.OverflowToolbar} items.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"OverflowToolbarLayoutData(sId?, mSettings?) : sap.m.OverflowToolbarLayoutData","name":"sap.m.OverflowToolbarLayoutData","prefix":"OverflowToolbarLayoutData","Experimental":false,"constructorDescription":"Constructor for a new <code>OverflowToolbarLayoutData<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMoveToOverflow moveToOverflow} : boolean (default: true)<\/li>\n<li>{@link #getStayInOverflow stayInOverflow} : boolean (default: false)<\/li>\n<li>{@link #getPriority priority} : sap.m.OverflowToolbarPriority (default: High)<\/li>\n<li>{@link #getGroup group} : int (default: 0)<\/li>\n<li>{@link #getCloseOverflowOnInteraction closeOverflowOnInteraction} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ToolbarLayoutData#constructor sap.m.ToolbarLayoutData}\ncan be used as well."},{"template":"new sap.m.OverflowToolbarToggleButton(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: \"${text}\", // string\n\t\ttype: ${sap.m.ButtonType.Default}, // sap.m.ButtonType\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\ticonFirst: ${bIconFirst}, // boolean\n\t\tactiveIcon: ${activeIcon}, // sap.ui.core.URI\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tpressed: ${bPressed} // boolean\n\t}\n)\n","module":"sap/m/OverflowToolbarToggleButton","static":"true","extends":"sap.m.ToggleButton","helpDescription":"Represents an {@link sap.m.ToggleButton} that shows its text only when in the overflow area of an {@link sap.m.OverflowToolbar}.\n\n<b>Note:<\/b> This control is intended to be used exclusively in the context of the <code>OverflowToolbar<\/code>, whenever it is required to have buttons that show only an icon in the toolbar, but icon and text in the overflow menu.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"OverflowToolbarToggleButton(sId?, mSettings?) : sap.m.OverflowToolbarToggleButton","name":"sap.m.OverflowToolbarToggleButton","prefix":"OverflowToolbarToggleButton","Experimental":false,"constructorDescription":"Constructor for a new <code>OverflowToolbarToggleButton<\/code>."},{"template":"new sap.m.P13nColumnsItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\tcolumnKey: \"${columnKey}\", // string\n\t\tindex: ${index}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\twidth: \"${width}\", // string\n\t\ttotal: ${bTotal} // boolean\n\t}\n)\n","module":"sap/m/P13nColumnsItem","static":"true","extends":"sap.ui.core.Item","helpDescription":"Type for <code>columnsItems<\/code> aggregation in <code>P13nColumnsPanel<\/code> control.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"P13nColumnsItem(sId?, mSettings?) : sap.m.P13nColumnsItem","name":"sap.m.P13nColumnsItem","prefix":"P13nColumnsItem","Experimental":false,"constructorDescription":"Constructor for a new P13nColumnsItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColumnKey columnKey} : string<\/li>\n<li>{@link #getIndex index} : int<\/li>\n<li>{@link #getVisible visible} : boolean<\/li>\n<li>{@link #getWidth width} : string<\/li>\n<li>{@link #getTotal total} : boolean<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well."},{"template":"new sap.m.P13nColumnsPanel(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttitleLarge: \"${titleLarge}\", // string\n\t\ttype: \"${type}\", // string\n\t\tverticalScrolling: ${bVerticalScrolling}, // boolean\n\t\tvalidationExecutor: ${validationExecutor}, // object\n\t\tvalidationListener: ${validationListener}, // object\n\t\tchangeNotifier: ${changeNotifier}, // object\n\t\titems: [${items}], // sap.m.P13nItem[]\n\t\tbeforeNavigationTo: [function (oEvent) {}, this], // function|array\n\t\tvisibleItemsThreshold: ${-1}, // int\n\t\tcolumnsItems: [${columnsItems}], // sap.m.P13nColumnsItem[]\n\t\taddColumnsItem: [function (oEvent) {}, this], // function|array\n\t\tchangeColumnsItems: [function (oEvent) {}, this], // function|array\n\t\tsetData: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/P13nColumnsPanel","static":"true","extends":"sap.m.P13nPanel","helpDescription":"The <code>P13nColumnsPanel<\/code> control is used to define column-specific settings for table personalization.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false,"description":"replaced by extended event {@link sap.m.P13nColumnsPanel.html#changeColumnsItems}","since":"1.50"},"description":"P13nColumnsPanel(sId?, mSettings?) : sap.m.P13nColumnsPanel","name":"sap.m.P13nColumnsPanel","prefix":"P13nColumnsPanel","Experimental":false,"constructorDescription":"Constructor for a new P13nColumnsPanel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisibleItemsThreshold visibleItemsThreshold} : int (default: -1)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getColumnsItems columnsItems} : sap.m.P13nColumnsItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:addColumnsItem addColumnsItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:changeColumnsItems changeColumnsItems} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:setData setData} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.P13nPanel#constructor sap.m.P13nPanel}\ncan be used as well."},{"template":"fireAddColumnsItem(\n\t{\n\t\tnewItem: ${newItem} // sap.m.P13nColumnsItem\n\t}\n)\n","Deprecated":true,"helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.50 replaced by extended event {@link sap.m.P13nColumnsPanel.html#changeColumnsItems}<br>Fires event {@link #event:addColumnsItem addColumnsItem} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"replaced by extended event {@link sap.m.P13nColumnsPanel.html#changeColumnsItems}","since":"1.50"},"description":"fireAddColumnsItem(mParameters?) : sap.m.P13nColumnsPanel","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.P13nColumnsPanel.fireAddColumnsItem"},{"template":"fireChangeColumnsItems(\n\t{\n\t\tnewItems: [${newItems}], // [object Object][]\n\t\texistingItems: [${existingItems}], // [object Object][]\n\t\titems: [${items}] // [object Object][]\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:changeColumnsItems changeColumnsItems} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"replaced by extended event {@link sap.m.P13nColumnsPanel.html#changeColumnsItems}","since":"1.50"},"description":"fireChangeColumnsItems(mParameters?) : sap.m.P13nColumnsPanel","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.P13nColumnsPanel.fireChangeColumnsItems"},{"template":"new sap.m.P13nConditionPanel(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tmaxConditions: ${\"-1\"}, // string\n\t\texclude: ${bExclude}, // boolean\n\t\tcontainerQuery: ${bContainerQuery}, // boolean\n\t\tautoAddNewRow: ${bAutoAddNewRow}, // boolean\n\t\tdisableFirstRemoveIcon: ${bDisableFirstRemoveIcon}, // boolean\n\t\talwaysShowAddIcon: ${bAlwaysShowAddIcon}, // boolean\n\t\tusePrevConditionSetting: ${bUsePrevConditionSetting}, // boolean\n\t\tautoReduceKeyFieldItems: ${bAutoReduceKeyFieldItems}, // boolean\n\t\tlayoutMode: \"${layoutMode}\", // string\n\t\tshowLabel: ${bShowLabel}, // boolean\n\t\tdisplayFormat: \"${displayFormat}\", // string\n\t\tvalidationExecutor: ${validationExecutor}, // object\n\t\tdataChange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/P13nConditionPanel","static":"true","extends":"sap.ui.core.Control","helpDescription":"<strong style=\"color: red;\">Experimental! <\/strong>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"P13nConditionPanel(sId?, mSettings?) : sap.m.P13nConditionPanel","name":"sap.m.P13nConditionPanel","prefix":"P13nConditionPanel","Experimental":true,"constructorDescription":"Constructor for a new P13nConditionPanel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMaxConditions maxConditions} : string (default: -1)<\/li>\n<li>{@link #getExclude exclude} : boolean (default: false)<\/li>\n<li>{@link #getContainerQuery containerQuery} : boolean (default: false)<\/li>\n<li>{@link #getAutoAddNewRow autoAddNewRow} : boolean (default: false)<\/li>\n<li>{@link #getDisableFirstRemoveIcon disableFirstRemoveIcon} : boolean (default: false)<\/li>\n<li>{@link #getAlwaysShowAddIcon alwaysShowAddIcon} : boolean (default: true)<\/li>\n<li>{@link #getUsePrevConditionSetting usePrevConditionSetting} : boolean (default: true)<\/li>\n<li>{@link #getAutoReduceKeyFieldItems autoReduceKeyFieldItems} : boolean (default: false)<\/li>\n<li>{@link #getLayoutMode layoutMode} : string<\/li>\n<li>{@link #getShowLabel showLabel} : boolean (default: false)<\/li>\n<li>{@link #getDisplayFormat displayFormat} : string<\/li>\n<li>{@link #getValidationExecutor validationExecutor} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:dataChange dataChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.P13nDialog(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\ttitle: \"${title}\", // string\n\t\tshowHeader: ${bShowHeader}, // boolean\n\t\ttype: ${sap.m.DialogType.Standard}, // sap.m.DialogType\n\t\tstate: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tstretchOnPhone: ${bStretchOnPhone}, // boolean\n\t\tstretch: ${bStretch}, // boolean\n\t\tcontentWidth: ${contentWidth}, // sap.ui.core.CSSSize\n\t\tcontentHeight: ${contentHeight}, // sap.ui.core.CSSSize\n\t\thorizontalScrolling: ${bHorizontalScrolling}, // boolean\n\t\tverticalScrolling: ${bVerticalScrolling}, // boolean\n\t\tresizable: ${bResizable}, // boolean\n\t\tdraggable: ${bDraggable}, // boolean\n\t\tescapeHandler: ${escapeHandler}, // any\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tsubHeader: ${subHeader}, // sap.m.IBar\n\t\tcustomHeader: ${customHeader}, // sap.m.IBar\n\t\tbeginButton: ${beginButton}, // sap.m.Button\n\t\tendButton: ${endButton}, // sap.m.Button\n\t\tbuttons: [${buttons}], // sap.m.Button[]\n\t\tleftButton: ${leftButton}, // (sap.m.Button|string)\n\t\trightButton: ${rightButton}, // (sap.m.Button|string)\n\t\tinitialFocus: ${initialFocus}, // (sap.ui.core.Control|string)\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tbeforeOpen: [function (oEvent) {}, this], // function|array\n\t\tafterOpen: [function (oEvent) {}, this], // function|array\n\t\tbeforeClose: [function (oEvent) {}, this], // function|array\n\t\tafterClose: [function (oEvent) {}, this], // function|array\n\t\tinitialVisiblePanelType: \"${initialVisiblePanelType}\", // string\n\t\tshowReset: ${bShowReset}, // boolean\n\t\tshowResetEnabled: ${bShowResetEnabled}, // boolean\n\t\tvalidationExecutor: ${validationExecutor}, // object\n\t\tpanels: [${panels}], // sap.m.P13nPanel[]\n\t\tok: [function (oEvent) {}, this], // function|array\n\t\tcancel: [function (oEvent) {}, this], // function|array\n\t\treset: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/P13nDialog","static":"true","extends":"sap.m.Dialog","helpDescription":"The P13nDialog control provides a dialog that contains one or more panels. On each of the panels, one or more changes with regards to a table can be processed. For example, a panel to set a column to invisible, change the order of the columns or a panel to sort or filter tables.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"P13nDialog(sId?, mSettings?) : sap.m.P13nDialog","name":"sap.m.P13nDialog","prefix":"P13nDialog","Experimental":false,"constructorDescription":"Constructor for a new P13nDialog.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getInitialVisiblePanelType initialVisiblePanelType} : string<\/li>\n<li>{@link #getShowReset showReset} : boolean (default: false)<\/li>\n<li>{@link #getShowResetEnabled showResetEnabled} : boolean (default: false)<\/li>\n<li>{@link #getValidationExecutor validationExecutor} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPanels panels} : sap.m.P13nPanel[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:ok ok} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:reset reset} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Dialog#constructor sap.m.Dialog}\ncan be used as well."},{"template":"new sap.m.P13nDimMeasureItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\tcolumnKey: \"${columnKey}\", // string\n\t\tindex: ${-1}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\trole: \"${role}\" // string\n\t}\n)\n","module":"sap/m/P13nDimMeasureItem","static":"true","extends":"sap.ui.core.Item","helpDescription":"Type for <code>columnsItems<\/code> aggregation in <code>P13nDimMeasurePanel<\/code> control.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"P13nDimMeasureItem(sId?, mSettings?) : sap.m.P13nDimMeasureItem","name":"sap.m.P13nDimMeasureItem","prefix":"P13nDimMeasureItem","Experimental":false,"constructorDescription":"Constructor for a new P13nDimMeasureItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColumnKey columnKey} : string<\/li>\n<li>{@link #getIndex index} : int (default: -1)<\/li>\n<li>{@link #getVisible visible} : boolean<\/li>\n<li>{@link #getRole role} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well."},{"template":"new sap.m.P13nDimMeasurePanel(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttitleLarge: \"${titleLarge}\", // string\n\t\ttype: \"${type}\", // string\n\t\tverticalScrolling: ${bVerticalScrolling}, // boolean\n\t\tvalidationExecutor: ${validationExecutor}, // object\n\t\tvalidationListener: ${validationListener}, // object\n\t\tchangeNotifier: ${changeNotifier}, // object\n\t\titems: [${items}], // sap.m.P13nItem[]\n\t\tbeforeNavigationTo: [function (oEvent) {}, this], // function|array\n\t\tchartTypeKey: ${\"\"}, // string\n\t\tdimMeasureItems: [${dimMeasureItems}], // sap.m.P13nDimMeasureItem[]\n\t\tavailableChartTypes: [${availableChartTypes}], // sap.ui.core.Item[]\n\t\tchangeDimMeasureItems: [function (oEvent) {}, this], // function|array\n\t\tchangeChartType: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/P13nDimMeasurePanel","static":"true","extends":"sap.m.P13nPanel","helpDescription":"The P13nDimMeasurePanel control is used to define chart-specific settings like chart type, the visibility, the order and roles of dimensions and measures for table personalization.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"P13nDimMeasurePanel(sId?, mSettings?) : sap.m.P13nDimMeasurePanel","name":"sap.m.P13nDimMeasurePanel","prefix":"P13nDimMeasurePanel","Experimental":false,"constructorDescription":"Constructor for a new P13nDimMeasurePanel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getChartTypeKey chartTypeKey} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getDimMeasureItems dimMeasureItems} : sap.m.P13nDimMeasureItem[]<\/li>\n<li>{@link #getAvailableChartTypes availableChartTypes} : sap.ui.core.Item[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:changeDimMeasureItems changeDimMeasureItems} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:changeChartType changeChartType} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.P13nPanel#constructor sap.m.P13nPanel}\ncan be used as well."},{"template":"new sap.m.P13nFilterItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\toperation: \"${operation}\", // string\n\t\tvalue1: \"${value1}\", // string\n\t\tvalue2: \"${value2}\", // string\n\t\tcolumnKey: \"${columnKey}\", // string\n\t\texclude: ${bExclude} // boolean\n\t}\n)\n","module":"sap/m/P13nFilterItem","static":"true","extends":"sap.ui.core.Item","helpDescription":"Type for <code>filterItems<\/code> aggregation in P13nFilterPanel control.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"P13nFilterItem(sId?, mSettings?) : sap.m.P13nFilterItem","name":"sap.m.P13nFilterItem","prefix":"P13nFilterItem","Experimental":false,"constructorDescription":"Constructor for a new P13nFilterItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getOperation operation} : string<\/li>\n<li>{@link #getValue1 value1} : string<\/li>\n<li>{@link #getValue2 value2} : string<\/li>\n<li>{@link #getColumnKey columnKey} : string<\/li>\n<li>{@link #getExclude exclude} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well."},{"template":"new sap.m.P13nFilterPanel(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttitleLarge: \"${titleLarge}\", // string\n\t\ttype: \"${type}\", // string\n\t\tverticalScrolling: ${bVerticalScrolling}, // boolean\n\t\tvalidationExecutor: ${validationExecutor}, // object\n\t\tvalidationListener: ${validationListener}, // object\n\t\tchangeNotifier: ${changeNotifier}, // object\n\t\titems: [${items}], // sap.m.P13nItem[]\n\t\tbeforeNavigationTo: [function (oEvent) {}, this], // function|array\n\t\tmaxIncludes: ${\"-1\"}, // string\n\t\tmaxExcludes: ${\"-1\"}, // string\n\t\tcontainerQuery: ${bContainerQuery}, // boolean\n\t\tlayoutMode: \"${layoutMode}\", // string\n\t\tfilterItems: [${filterItems}], // sap.m.P13nFilterItem[]\n\t\taddFilterItem: [function (oEvent) {}, this], // function|array\n\t\tremoveFilterItem: [function (oEvent) {}, this], // function|array\n\t\tupdateFilterItem: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/P13nFilterPanel","static":"true","extends":"sap.m.P13nPanel","helpDescription":"The P13nFilterPanel control is used to define filter-specific settings for table personalization.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"P13nFilterPanel(sId?, mSettings?) : sap.m.P13nFilterPanel","name":"sap.m.P13nFilterPanel","prefix":"P13nFilterPanel","Experimental":false,"constructorDescription":"Constructor for a new P13nFilterPanel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMaxIncludes maxIncludes} : string (default: -1)<\/li>\n<li>{@link #getMaxExcludes maxExcludes} : string (default: -1)<\/li>\n<li>{@link #getContainerQuery containerQuery} : boolean (default: false)<\/li>\n<li>{@link #getLayoutMode layoutMode} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getFilterItems filterItems} : sap.m.P13nFilterItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:addFilterItem addFilterItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:removeFilterItem removeFilterItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:updateFilterItem updateFilterItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.P13nPanel#constructor sap.m.P13nPanel}\ncan be used as well."},{"template":"new sap.m.P13nGroupItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\toperation: \"${operation}\", // string\n\t\tcolumnKey: \"${columnKey}\", // string\n\t\tshowIfGrouped: ${bShowIfGrouped} // boolean\n\t}\n)\n","module":"sap/m/P13nGroupItem","static":"true","extends":"sap.ui.core.Item","helpDescription":"Type for <code>groupItems<\/code> aggregation in P13nGroupPanel control.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"P13nGroupItem(sId?, mSettings?) : sap.m.P13nGroupItem","name":"sap.m.P13nGroupItem","prefix":"P13nGroupItem","Experimental":false,"constructorDescription":"Constructor for a new P13nGroupItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getOperation operation} : string<\/li>\n<li>{@link #getColumnKey columnKey} : string<\/li>\n<li>{@link #getShowIfGrouped showIfGrouped} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well."},{"template":"new sap.m.P13nGroupPanel(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttitleLarge: \"${titleLarge}\", // string\n\t\ttype: \"${type}\", // string\n\t\tverticalScrolling: ${bVerticalScrolling}, // boolean\n\t\tvalidationExecutor: ${validationExecutor}, // object\n\t\tvalidationListener: ${validationListener}, // object\n\t\tchangeNotifier: ${changeNotifier}, // object\n\t\titems: [${items}], // sap.m.P13nItem[]\n\t\tbeforeNavigationTo: [function (oEvent) {}, this], // function|array\n\t\tmaxGroups: ${\"-1\"}, // string\n\t\tcontainerQuery: ${bContainerQuery}, // boolean\n\t\tlayoutMode: \"${layoutMode}\", // string\n\t\tgroupItems: [${groupItems}], // sap.m.P13nGroupItem[]\n\t\taddGroupItem: [function (oEvent) {}, this], // function|array\n\t\tremoveGroupItem: [function (oEvent) {}, this], // function|array\n\t\tupdateGroupItem: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/P13nGroupPanel","static":"true","extends":"sap.m.P13nPanel","helpDescription":"The P13nGroupPanel control is used to define group-specific settings for table personalization.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"P13nGroupPanel(sId?, mSettings?) : sap.m.P13nGroupPanel","name":"sap.m.P13nGroupPanel","prefix":"P13nGroupPanel","Experimental":false,"constructorDescription":"Constructor for a new P13nGroupPanel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMaxGroups maxGroups} : string (default: -1)<\/li>\n<li>{@link #getContainerQuery containerQuery} : boolean (default: false)<\/li>\n<li>{@link #getLayoutMode layoutMode} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getGroupItems groupItems} : sap.m.P13nGroupItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:addGroupItem addGroupItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:removeGroupItem removeGroupItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:updateGroupItem updateGroupItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.P13nPanel#constructor sap.m.P13nPanel}\ncan be used as well."},{"template":"new sap.m.P13nItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\tcolumnKey: \"${columnKey}\", // string\n\t\ttext: ${\"\"}, // string\n\t\tvisible: ${bVisible}, // boolean\n\t\ttype: ${\"text\"}, // string\n\t\tprecision: \"${precision}\", // string\n\t\tformatSettings: ${formatSettings}, // object\n\t\tscale: \"${scale}\", // string\n\t\tmaxLength: \"${maxLength}\", // string\n\t\twidth: \"${width}\", // string\n\t\tisDefault: ${bIsDefault}, // boolean\n\t\tvalues: [${values}], // string[]\n\t\trole: \"${role}\", // string\n\t\taggregationRole: \"${aggregationRole}\", // string\n\t\thref: \"${href}\", // string\n\t\ttarget: \"${target}\", // string\n\t\tpress: ${press} // object\n\t}\n)\n","module":"sap/m/P13nItem","static":"true","extends":"sap.ui.core.Item","helpDescription":"Base type for <code>items<\/code> aggregation in <code>P13nPanel<\/code> control.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"P13nItem(sId?, mSettings?) : sap.m.P13nItem","name":"sap.m.P13nItem","prefix":"P13nItem","Experimental":false,"constructorDescription":"Constructor for a new P13nItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getColumnKey columnKey} : string<\/li>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getVisible visible} : boolean<\/li>\n<li>{@link #getType type} : string (default: text)<\/li>\n<li>{@link #getPrecision precision} : string<\/li>\n<li>{@link #getFormatSettings formatSettings} : object<\/li>\n<li>{@link #getScale scale} : string<\/li>\n<li>{@link #getMaxLength maxLength} : string<\/li>\n<li>{@link #getWidth width} : string<\/li>\n<li>{@link #getIsDefault isDefault} : boolean (default: false)<\/li>\n<li>{@link #getValues values} : string[]<\/li>\n<li>{@link #getRole role} : string<\/li>\n<li>{@link #getAggregationRole aggregationRole} : string<\/li>\n<li>{@link #getHref href} : string<\/li>\n<li>{@link #getTarget target} : string<\/li>\n<li>{@link #getPress press} : object<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well."},{"template":"new sap.m.P13nPanel(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttitleLarge: \"${titleLarge}\", // string\n\t\ttype: \"${type}\", // string\n\t\tverticalScrolling: ${bVerticalScrolling}, // boolean\n\t\tvalidationExecutor: ${validationExecutor}, // object\n\t\tvalidationListener: ${validationListener}, // object\n\t\tchangeNotifier: ${changeNotifier}, // object\n\t\titems: [${items}], // sap.m.P13nItem[]\n\t\tbeforeNavigationTo: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/P13nPanel","static":"true","extends":"sap.ui.core.Control","helpDescription":"Base type for <code>panels<\/code> aggregation in <code>P13nDialog<\/code> control.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"P13nPanel(sId?, mSettings?) : sap.m.P13nPanel","name":"sap.m.P13nPanel","prefix":"P13nPanel","Experimental":false,"constructorDescription":"Constructor for a new P13nPanel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getTitleLarge titleLarge} : string<\/li>\n<li>{@link #getType type} : string<\/li>\n<li>{@link #getVerticalScrolling verticalScrolling} : boolean (default: true)<\/li>\n<li>{@link #getValidationExecutor validationExecutor} : object<\/li>\n<li>{@link #getValidationListener validationListener} : object<\/li>\n<li>{@link #getChangeNotifier changeNotifier} : object<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.P13nItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:beforeNavigationTo beforeNavigationTo} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.P13nSortItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\toperation: \"${operation}\", // string\n\t\tcolumnKey: \"${columnKey}\" // string\n\t}\n)\n","module":"sap/m/P13nSortItem","static":"true","extends":"sap.ui.core.Item","helpDescription":"Type for <code>sortItems<\/code> aggregation in P13nSortPanel control.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"P13nSortItem(sId?, mSettings?) : sap.m.P13nSortItem","name":"sap.m.P13nSortItem","prefix":"P13nSortItem","Experimental":false,"constructorDescription":"Constructor for a new P13nSortItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getOperation operation} : string<\/li>\n<li>{@link #getColumnKey columnKey} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well."},{"template":"new sap.m.P13nSortPanel(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttitleLarge: \"${titleLarge}\", // string\n\t\ttype: \"${type}\", // string\n\t\tverticalScrolling: ${bVerticalScrolling}, // boolean\n\t\tvalidationExecutor: ${validationExecutor}, // object\n\t\tvalidationListener: ${validationListener}, // object\n\t\tchangeNotifier: ${changeNotifier}, // object\n\t\titems: [${items}], // sap.m.P13nItem[]\n\t\tbeforeNavigationTo: [function (oEvent) {}, this], // function|array\n\t\tcontainerQuery: ${bContainerQuery}, // boolean\n\t\tlayoutMode: \"${layoutMode}\", // string\n\t\tsortItems: [${sortItems}], // sap.m.P13nSortItem[]\n\t\taddSortItem: [function (oEvent) {}, this], // function|array\n\t\tremoveSortItem: [function (oEvent) {}, this], // function|array\n\t\tupdateSortItem: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/P13nSortPanel","static":"true","extends":"sap.m.P13nPanel","helpDescription":"The P13nSortPanel control is used to define settings for sorting in table personalization.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"P13nSortPanel(sId?, mSettings?) : sap.m.P13nSortPanel","name":"sap.m.P13nSortPanel","prefix":"P13nSortPanel","Experimental":false,"constructorDescription":"Constructor for a new P13nSortPanel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContainerQuery containerQuery} : boolean (default: false)<\/li>\n<li>{@link #getLayoutMode layoutMode} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSortItems sortItems} : sap.m.P13nSortItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:addSortItem addSortItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:removeSortItem removeSortItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:updateSortItem updateSortItem} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.P13nPanel#constructor sap.m.P13nPanel}\ncan be used as well."},{"template":"new sap.m.PDFViewer(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\theight: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tsource: ${source}, // sap.ui.core.URI\n\t\terrorMessage: \"${errorMessage}\", // string\n\t\terrorPlaceholderMessage: \"${errorPlaceholderMessage}\", // string\n\t\tpopupHeaderTitle: \"${popupHeaderTitle}\", // string\n\t\ttitle: \"${title}\", // string\n\t\tshowDownloadButton: ${bShowDownloadButton}, // boolean\n\t\terrorPlaceholder: ${errorPlaceholder}, // sap.ui.core.Control\n\t\tpopupButtons: [${popupButtons}], // sap.m.Button[]\n\t\tloaded: [function (oEvent) {}, this], // function|array\n\t\terror: [function (oEvent) {}, this], // function|array\n\t\tsourceValidationFailed: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/PDFViewer","static":"true","extends":"sap.ui.core.Control","helpDescription":"This control enables you to display PDF documents within your app. It can be embedded in your user interface layout, or you can set it to open in a popup dialog.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"PDFViewer(sId?, mSettings?) : sap.m.PDFViewer","name":"sap.m.PDFViewer","prefix":"PDFViewer","Experimental":false,"constructorDescription":"Definition of PDFViewer control\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getSource source} : sap.ui.core.URI<\/li>\n<li>{@link #getErrorMessage errorMessage} : string<\/li>\n<li>{@link #getErrorPlaceholderMessage errorPlaceholderMessage} : string<\/li>\n<li>{@link #getPopupHeaderTitle popupHeaderTitle} : string<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getShowDownloadButton showDownloadButton} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getErrorPlaceholder errorPlaceholder} : sap.ui.core.Control<\/li>\n<li>{@link #getPopupButtons popupButtons} : sap.m.Button[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:loaded loaded} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:error error} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:sourceValidationFailed sourceValidationFailed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.Page(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttitleLevel: ${sap.ui.core.TitleLevel.Auto}, // sap.ui.core.TitleLevel\n\t\tshowNavButton: ${bShowNavButton}, // boolean\n\t\tshowHeader: ${bShowHeader}, // boolean\n\t\tshowSubHeader: ${bShowSubHeader}, // boolean\n\t\tnavButtonText: \"${navButtonText}\", // string\n\t\tnavButtonTooltip: \"${navButtonTooltip}\", // string\n\t\tenableScrolling: ${bEnableScrolling}, // boolean\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\tbackgroundDesign: ${sap.m.PageBackgroundDesign.Standard}, // sap.m.PageBackgroundDesign\n\t\tnavButtonType: ${sap.m.ButtonType.Back}, // sap.m.ButtonType\n\t\tshowFooter: ${bShowFooter}, // boolean\n\t\tcontentOnlyBusy: ${bContentOnlyBusy}, // boolean\n\t\tfloatingFooter: ${bFloatingFooter}, // boolean\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tcustomHeader: ${customHeader}, // sap.m.IBar\n\t\tfooter: ${footer}, // sap.m.IBar\n\t\tsubHeader: ${subHeader}, // sap.m.IBar\n\t\theaderContent: [${headerContent}], // sap.ui.core.Control[]\n\t\tlandmarkInfo: ${landmarkInfo}, // sap.m.PageAccessibleLandmarkInfo\n\t\tnavButtonTap: [function (oEvent) {}, this], // function|array\n\t\tnavButtonPress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/Page","static":"true","extends":"sap.ui.core.Control","helpDescription":"A container control that holds one whole screen of an application.\n\n<h3>Overview<\/h3> The sap.m.Page is a container control that holds one whole screen of an application. The page has three distinct areas that can hold content - a header, content area and a footer. <h3>Structure<\/h3> <h4>Header<\/h4> The top most area of the page is occupied by the header. The standard header includes a navigation button and a title. Alternatively, you can create your own custom header, which is defined in the <code>customHeader<\/code> aggregation. <h4>Content<\/h4> The content occupies the main part of the page. Only the content area is scrollable by default. This can be prevented by setting <code>enableScrolling<\/code> to <code>false<\/code>. <h4>Footer<\/h4> The footer is optional and occupies the fixed bottom part of the page. Alternatively, the footer can be floating above the bottom part of the content. This is enabled with the <code>floatingFooter<\/code> property.\n\n<b>Note:<\/b> All accessibility information for the different areas and their corresponding ARIA roles is set in the aggregation <code>landmarkInfo<\/code> of type {@link sap.m.PageAccessibleLandmarkInfo}","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"Page(sId?, mSettings?) : sap.m.Page","name":"sap.m.Page","prefix":"Page","Experimental":false,"constructorDescription":"Constructor for a new Page.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getTitleLevel titleLevel} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getShowNavButton showNavButton} : boolean (default: false)<\/li>\n<li>{@link #getShowHeader showHeader} : boolean (default: true)<\/li>\n<li>{@link #getShowSubHeader showSubHeader} : boolean (default: true)<\/li>\n<li>{@link #getNavButtonText navButtonText} : string<\/li>\n<li>{@link #getNavButtonTooltip navButtonTooltip} : string<\/li>\n<li>{@link #getEnableScrolling enableScrolling} : boolean (default: true)<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.PageBackgroundDesign (default: Standard)<\/li>\n<li>{@link #getNavButtonType navButtonType} : sap.m.ButtonType (default: Back)<\/li>\n<li>{@link #getShowFooter showFooter} : boolean (default: true)<\/li>\n<li>{@link #getContentOnlyBusy contentOnlyBusy} : boolean (default: false)<\/li>\n<li>{@link #getFloatingFooter floatingFooter} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getCustomHeader customHeader} : sap.m.IBar<\/li>\n<li>{@link #getFooter footer} : sap.m.IBar<\/li>\n<li>{@link #getSubHeader subHeader} : sap.m.IBar<\/li>\n<li>{@link #getHeaderContent headerContent} : sap.ui.core.Control[]<\/li>\n<li>{@link #getLandmarkInfo landmarkInfo} : sap.m.PageAccessibleLandmarkInfo<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:navButtonTap navButtonTap} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:navButtonPress navButtonPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.PageAccessibleLandmarkInfo(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\trootRole: ${sap.ui.core.AccessibleLandmarkRole.Region}, // sap.ui.core.AccessibleLandmarkRole\n\t\trootLabel: \"${rootLabel}\", // string\n\t\tcontentRole: ${sap.ui.core.AccessibleLandmarkRole.Main}, // sap.ui.core.AccessibleLandmarkRole\n\t\tcontentLabel: \"${contentLabel}\", // string\n\t\theaderRole: ${sap.ui.core.AccessibleLandmarkRole.Region}, // sap.ui.core.AccessibleLandmarkRole\n\t\theaderLabel: \"${headerLabel}\", // string\n\t\tsubHeaderRole: ${sap.ui.core.AccessibleLandmarkRole.None}, // sap.ui.core.AccessibleLandmarkRole\n\t\tsubHeaderLabel: \"${subHeaderLabel}\", // string\n\t\tfooterRole: ${sap.ui.core.AccessibleLandmarkRole.Region}, // sap.ui.core.AccessibleLandmarkRole\n\t\tfooterLabel: \"${footerLabel}\" // string\n\t}\n)\n","module":"sap/m/PageAccessibleLandmarkInfo","static":"true","extends":"sap.ui.core.Element","helpDescription":"Settings for accessible landmarks which can be applied to the container elements of a <code>sap.m.Page<\/code> control. These landmarks are e.g. used by assistive technologies (like screenreaders) to provide a meaningful page overview.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"PageAccessibleLandmarkInfo(sId?, mSettings?) : sap.m.PageAccessibleLandmarkInfo","name":"sap.m.PageAccessibleLandmarkInfo","prefix":"PageAccessibleLandmarkInfo","Experimental":false,"constructorDescription":"Constructor for a new <code>sap.m.PageAccessibleLandmarkInfo<\/code> element.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getRootRole rootRole} : sap.ui.core.AccessibleLandmarkRole (default: Region)<\/li>\n<li>{@link #getRootLabel rootLabel} : string<\/li>\n<li>{@link #getContentRole contentRole} : sap.ui.core.AccessibleLandmarkRole (default: Main)<\/li>\n<li>{@link #getContentLabel contentLabel} : string<\/li>\n<li>{@link #getHeaderRole headerRole} : sap.ui.core.AccessibleLandmarkRole (default: Region)<\/li>\n<li>{@link #getHeaderLabel headerLabel} : string<\/li>\n<li>{@link #getSubHeaderRole subHeaderRole} : sap.ui.core.AccessibleLandmarkRole (default: None)<\/li>\n<li>{@link #getSubHeaderLabel subHeaderLabel} : string<\/li>\n<li>{@link #getFooterRole footerRole} : sap.ui.core.AccessibleLandmarkRole (default: Region)<\/li>\n<li>{@link #getFooterLabel footerLabel} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."},{"template":"new sap.m.PagingButton(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tcount: ${1}, // int\n\t\tposition: ${1}, // int\n\t\tnextButtonTooltip: ${\"\"}, // string\n\t\tpreviousButtonTooltip: ${\"\"}, // string\n\t\tpositionChange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/PagingButton","static":"true","extends":"sap.ui.core.Control","helpDescription":"Enables users to navigate between items/entities.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"PagingButton(sId?, mSettings?) : sap.m.PagingButton","name":"sap.m.PagingButton","prefix":"PagingButton","Experimental":false,"constructorDescription":"Constructor for a new PagingButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getCount count} : int (default: 1)<\/li>\n<li>{@link #getPosition position} : int (default: 1)<\/li>\n<li>{@link #getNextButtonTooltip nextButtonTooltip} : string (default: )<\/li>\n<li>{@link #getPreviousButtonTooltip previousButtonTooltip} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:positionChange positionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"firePositionChange(\n\t{\n\t\tnewPosition: ${newPosition}, // int\n\t\toldPosition: ${oldPosition} // int\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:positionChange positionChange} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"firePositionChange(mParameters?) : sap.m.PagingButton","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.PagingButton.firePositionChange"},{"template":"new sap.m.Panel(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\theaderText: ${\"\"}, // string\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\theight: ${\"auto\"}, // sap.ui.core.CSSSize\n\t\texpandable: ${bExpandable}, // boolean\n\t\texpanded: ${bExpanded}, // boolean\n\t\texpandAnimation: ${bExpandAnimation}, // boolean\n\t\tbackgroundDesign: ${sap.m.BackgroundDesign.Translucent}, // sap.m.BackgroundDesign\n\t\taccessibleRole: ${sap.m.PanelAccessibleRole.Form}, // sap.m.PanelAccessibleRole\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\theaderToolbar: ${headerToolbar}, // sap.m.Toolbar\n\t\tinfoToolbar: ${infoToolbar}, // sap.m.Toolbar\n\t\texpand: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/Panel","static":"true","extends":"sap.ui.core.Control","helpDescription":"A container control which has a header and content. <h3>Overview<\/h3> The panel is a container for grouping and displaying information. It can be collapsed to save space on the screen. <h4>Guidelines:<\/h4> <ul> <li>Nesting two or more panels is not recommended.<\/li> <li>Do not stack too many panels on one page.<\/li> <\/ul> <h3>Structure<\/h3> A panel consists of a title bar with a header text or header toolbar, an info toolbar (optional), and a content area. Using the <code>headerToolbar<\/code> aggregation, you can add a toolbar with any toolbar content (i.e. custom buttons, spacers, titles) inside the title bar.\n\nThere are two types of panels: fixed and expandable. Expendable panels are enabled by the <code>expandable<\/code> property. Furthermore you can define an expand animation with the property <code>expandAnimation<\/code>. <h3>Usage<\/h3> <h4>When to use:<\/h4> <ul> <li>You need to group or display information and want to give users the option of hiding this information.<\/li> <li>You want to show additional information on demand (for example, a panel could show optional input fields for an advanced search).<\/li> <li>You want to create a panel with controls that do not require user interaction and are not part of a form. Depending on the usage, change the <code>accessibleRole<\/code> property from the default <code>{@link sap.m.PanelAccessibleRole Form}<\/code> to <code>{@link sap.m.PanelAccessibleRole Region}<\/code> or <code>{@link sap.m.PanelAccessibleRole Complementary}<\/code>.<\/li> <\/ul> <h3>Responsive Behavior<\/h3> <ul> <li>If the width of the panel is set to 100% (default), the panel and its children are resized responsively, depending on its parent container.<\/li> <li>If the panel has a fixed defined height, it will take up the space, even if the panel is collapsed.<\/li> <li>When the panel is expandable, an arrow icon (pointing to the right) appears in front of the header.<\/li> <li>When the animation is activated, expand/collapse uses a smooth animation to open or close the content area.<\/li> <li>When the panel expands/collapses, the arrow icon rotates 90 degrees clockwise/counter-clockwise.<\/li> <li>When the height uses the default property <code>auto<\/code>, the height of the content area is automatically adjusted to match the height of its content.<\/li> <li>When the height of the panel is set to a fixed size, the content area can be scrolled through.<\/li> <\/ul>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"Panel(sId?, mSettings?) : sap.m.Panel","name":"sap.m.Panel","prefix":"Panel","Experimental":false,"constructorDescription":"Constructor for a new Panel.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHeaderText headerText} : string (default: )<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getExpandable expandable} : boolean (default: false)<\/li>\n<li>{@link #getExpanded expanded} : boolean (default: false)<\/li>\n<li>{@link #getExpandAnimation expandAnimation} : boolean (default: true)<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign (default: Translucent)<\/li>\n<li>{@link #getAccessibleRole accessibleRole} : sap.m.PanelAccessibleRole (default: Form)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getHeaderToolbar headerToolbar} : sap.m.Toolbar<\/li>\n<li>{@link #getInfoToolbar infoToolbar} : sap.m.Toolbar<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:expand expand} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireExpand(\n\t{\n\t\texpand: ${bExpand}, // boolean\n\t\ttriggeredByInteraction: ${bTriggeredByInteraction} // boolean\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:expand expand} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireExpand(mParameters?) : sap.m.Panel","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.Panel.fireExpand"},{"template":"new sap.m.PlanningCalendar(\n\t\"${sID}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tstartDate: ${startDate}, // object\n\t\tviewKey: ${\"sap.ui.unified.CalendarIntervalType.Hour\"}, // string\n\t\tsingleSelection: ${bSingleSelection}, // boolean\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\tshowIntervalHeaders: ${bShowIntervalHeaders}, // boolean\n\t\tshowEmptyIntervalHeaders: ${bShowEmptyIntervalHeaders}, // boolean\n\t\tshowRowHeaders: ${bShowRowHeaders}, // boolean\n\t\tnoDataText: \"${noDataText}\", // string\n\t\tgroupAppointmentsMode: ${sap.ui.unified.GroupAppointmentsMode.Collapsed}, // sap.ui.unified.GroupAppointmentsMode\n\t\tappointmentsReducedHeight: ${bAppointmentsReducedHeight}, // boolean\n\t\tappointmentsVisualization: ${sap.ui.unified.CalendarAppointmentVisualization.Standard}, // sap.ui.unified.CalendarAppointmentVisualization\n\t\tminDate: ${minDate}, // object\n\t\tmaxDate: ${maxDate}, // object\n\t\tshowDayNamesLine: ${bShowDayNamesLine}, // boolean\n\t\tshowWeekNumbers: ${bShowWeekNumbers}, // boolean\n\t\tbuiltInViews: ${[]}, // string[]\n\t\trows: [${rows}], // sap.m.PlanningCalendarRow[]\n\t\tviews: [${views}], // sap.m.PlanningCalendarView[]\n\t\tspecialDates: [${specialDates}], // sap.ui.unified.DateTypeRange[]\n\t\ttoolbarContent: [${toolbarContent}], // sap.ui.core.Control[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tlegend: ${legend}, // (sap.ui.unified.CalendarLegend|string)\n\t\tappointmentSelect: [function (oEvent) {}, this], // function|array\n\t\tintervalSelect: [function (oEvent) {}, this], // function|array\n\t\trowSelectionChange: [function (oEvent) {}, this], // function|array\n\t\tstartDateChange: [function (oEvent) {}, this], // function|array\n\t\tviewChange: [function (oEvent) {}, this], // function|array\n\t\trowHeaderClick: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/PlanningCalendar","static":"true","extends":"sap.ui.core.Control","helpDescription":"Displays rows with appointments for different entities (such as persons or teams) for the selected time interval.\n\n<h3>Overview<\/h3>\n\nYou can use the <code>PlanningCalendar<\/code> to represent a calendar containing multiple rows with appointments, where each row represents a different person.\n\nYou can configure different time-interval views that the user can switch between, such as hours or days, and even a whole week/month. The available navigation allows the user to select a specific interval using a picker, or move to the previous/next interval using arrows.\n\n<b>Note:<\/b> The <code>PlanningCalendar<\/code> uses parts of the <code>sap.ui.unified<\/code> library. This library will be loaded after the <code>PlanningCalendar<\/code>, if it wasn't loaded first. This could lead to a waiting time when a <code>PlanningCalendar<\/code> is used for the first time. To prevent this, apps that use the <code>PlanningCalendar<\/code> should also load the <code>sap.ui.unified<\/code> library.\n\n<h3>Usage<\/h3>\n\nThe <code>PlanningCalendar<\/code> has the following structure from top to bottom:\n\n<ul> <li>A toolbar where you can add your own buttons or other controls using the <code>toolbarContent<\/code> aggregation.<\/li> <li>A header containing a drop-down menu for selecting the {@link sap.m.PlanningCalendarView PlanningCalendarViews}, and navigation for moving through the intervals using arrows or selecting a specific interval with a picker. Custom views can be configured using the <code>views<\/code> aggregation. If not configured, the following set of default built-in views is available - Hours, Days, 1 Week, 1 Month, and Months. Setting a custom view(s) replaces the built-in ones.<\/li> <li>The rows of the <code>PlanningCalendar<\/code> that contain the assigned appointments. They can be configured with the <code>rows<\/code> aggregation, which is of type {@link sap.m.PlanningCalendarRow PlanningCalendarRow}.<\/li> <\/ul>\n\nSince 1.48 the empty space in the cell that is below an appointment can be removed by adding the <code>sapUiCalendarAppFitVertically<\/code> CSS class to the <code>PlanningCalendar<\/code>. Please note that it should be used only for a <code>PlanningCalendar<\/code> with one appointment per day for a row that doesn't have interval headers set.\n\nSince 1.44 alternating row colors can be suppressed by adding the <code>sapMPlanCalSuppressAlternatingRowColors<\/code> CSS class to the <code>PlanningCalendar<\/code>.\n\n<h3>Responsive behavior<\/h3>\n\nYou can define the number of displayed intervals based on the size of the <code>PlanningCalendar<\/code> using the {@link sap.m.PlanningCalendarView PlanningCalendarView}'s properties.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"PlanningCalendar(sID?, mSettings?) : sap.m.PlanningCalendar","name":"sap.m.PlanningCalendar","prefix":"PlanningCalendar","Experimental":false,"constructorDescription":"Constructor for a new <code>PlanningCalendar<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getStartDate startDate} : object<\/li>\n<li>{@link #getViewKey viewKey} : string (default: sap.ui.unified.CalendarIntervalType.Hour)<\/li>\n<li>{@link #getSingleSelection singleSelection} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getShowIntervalHeaders showIntervalHeaders} : boolean (default: true)<\/li>\n<li>{@link #getShowEmptyIntervalHeaders showEmptyIntervalHeaders} : boolean (default: true)<\/li>\n<li>{@link #getShowRowHeaders showRowHeaders} : boolean (default: true)<\/li>\n<li>{@link #getNoDataText noDataText} : string<\/li>\n<li>{@link #getGroupAppointmentsMode groupAppointmentsMode} : sap.ui.unified.GroupAppointmentsMode (default: Collapsed)<\/li>\n<li>{@link #getAppointmentsReducedHeight appointmentsReducedHeight} : boolean (default: false)<\/li>\n<li>{@link #getAppointmentsVisualization appointmentsVisualization} : sap.ui.unified.CalendarAppointmentVisualization (default: Standard)<\/li>\n<li>{@link #getMinDate minDate} : object<\/li>\n<li>{@link #getMaxDate maxDate} : object<\/li>\n<li>{@link #getShowDayNamesLine showDayNamesLine} : boolean (default: false)<\/li>\n<li>{@link #getShowWeekNumbers showWeekNumbers} : boolean (default: false)<\/li>\n<li>{@link #getBuiltInViews builtInViews} : string[] (default: [])<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getRows rows} : sap.m.PlanningCalendarRow[]<\/li>\n<li>{@link #getViews views} : sap.m.PlanningCalendarView[]<\/li>\n<li>{@link #getSpecialDates specialDates} : sap.ui.unified.DateTypeRange[]<\/li>\n<li>{@link #getToolbarContent toolbarContent} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getLegend legend} : (sap.ui.core.ID | sap.ui.unified.CalendarLegend)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:appointmentSelect appointmentSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:intervalSelect intervalSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:rowSelectionChange rowSelectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:startDateChange startDateChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:viewChange viewChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:rowHeaderClick rowHeaderClick} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireAppointmentSelect(\n\t{\n\t\tappointment: ${appointment}, // sap.ui.unified.CalendarAppointment\n\t\tappointments: [${appointments}], // [object Object][]\n\t\tmultiSelect: ${bMultiSelect}, // boolean\n\t\tdomRefId: \"${domRefId}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:appointmentSelect appointmentSelect} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireAppointmentSelect(mParameters?) : sap.m.PlanningCalendar","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.PlanningCalendar.fireAppointmentSelect"},{"template":"fireIntervalSelect(\n\t{\n\t\tstartDate: ${startDate}, // object\n\t\tendDate: ${endDate}, // object\n\t\tsubInterval: ${bSubInterval}, // boolean\n\t\trow: ${row} // sap.m.PlanningCalendarRow\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:intervalSelect intervalSelect} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireIntervalSelect(mParameters?) : sap.m.PlanningCalendar","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.PlanningCalendar.fireIntervalSelect"},{"template":"fireRowSelectionChange(\n\t{\n\t\trows: [${rows}] // [object Object][]\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:rowSelectionChange rowSelectionChange} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireRowSelectionChange(mParameters?) : sap.m.PlanningCalendar","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.PlanningCalendar.fireRowSelectionChange"},{"template":"new sap.m.PlanningCalendarLegend(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tstandardItems: ${[]}, // string[]\n\t\titemsHeader: ${\"Calendar\"}, // string\n\t\tappointmentItemsHeader: ${\"Appointments\"}, // string\n\t\tappointmentItems: [${appointmentItems}] // sap.ui.unified.CalendarLegendItem[]\n\t}\n)\n","module":"sap/m/PlanningCalendarLegend","static":"true","extends":"sap.ui.core.Control","helpDescription":"A legend for the {@link sap.m.PlanningCalendar} that displays the special dates and appointments in colors with their corresponding description. The <code>PlanningCalendarLegend<\/code> extends {@link sap.ui.unified.CalendarLegend} and overwrites the default value for property <code>columnWidth<\/code> to <code>auto<\/code>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"PlanningCalendarLegend(sId?, mSettings?) : sap.m.PlanningCalendarLegend","name":"sap.m.PlanningCalendarLegend","prefix":"PlanningCalendarLegend","Experimental":false,"constructorDescription":"Constructor for a new <code>PlanningCalendarLegend<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getStandardItems standardItems} : string[] (default: Today,Selected,WorkingDay,NonWorkingDay)<\/li>\n<li>{@link #getItemsHeader itemsHeader} : string (default: Calendar)<\/li>\n<li>{@link #getAppointmentItemsHeader appointmentItemsHeader} : string (default: Appointments)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAppointmentItems appointmentItems} : sap.ui.unified.CalendarLegendItem[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.PlanningCalendarRow(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttitle: \"${title}\", // string\n\t\ttext: \"${text}\", // string\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\tnonWorkingDays: [${nonWorkingDays}], // int[]\n\t\tnonWorkingHours: [${nonWorkingHours}], // int[]\n\t\tselected: ${bSelected}, // boolean\n\t\tkey: \"${key}\", // string\n\t\tappointments: [${appointments}], // sap.ui.unified.CalendarAppointment[]\n\t\tintervalHeaders: [${intervalHeaders}] // sap.ui.unified.CalendarAppointment[]\n\t}\n)\n","module":"sap/m/PlanningCalendarRow","static":"true","extends":"sap.ui.core.Element","helpDescription":"Row in the {@link sap.m.PlanningCalendar}.\n\nThis element holds the data of one row in the @link sap.m.PlanningCalendar}. Once the header information (e.g. person information) is assigned, the appointments are assigned.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"PlanningCalendarRow(sId?, mSettings?) : sap.m.PlanningCalendarRow","name":"sap.m.PlanningCalendarRow","prefix":"PlanningCalendarRow","Experimental":false,"constructorDescription":"Constructor for a new <code>PlanningCalendarRow<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getNonWorkingDays nonWorkingDays} : int[]<\/li>\n<li>{@link #getNonWorkingHours nonWorkingHours} : int[]<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getKey key} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAppointments appointments} : sap.ui.unified.CalendarAppointment[]<\/li>\n<li>{@link #getIntervalHeaders intervalHeaders} : sap.ui.unified.CalendarAppointment[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."},{"template":"new sap.m.PlanningCalendarView(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tkey: \"${key}\", // string\n\t\tintervalType: ${sap.ui.unified.CalendarIntervalType.Hour}, // sap.ui.unified.CalendarIntervalType\n\t\tdescription: \"${description}\", // string\n\t\tintervalsS: ${6}, // int\n\t\tintervalsM: ${8}, // int\n\t\tintervalsL: ${12}, // int\n\t\tshowSubIntervals: ${bShowSubIntervals} // boolean\n\t}\n)\n","module":"sap/m/PlanningCalendarView","static":"true","extends":"sap.ui.core.Element","helpDescription":"View of the {@link sap.m.PlanningCalendar}.\n\nThe <code>PlanningCalendarView<\/code> defines the type of the intervals (hours, days, months) and how many intervals are displayed.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"PlanningCalendarView(sId?, mSettings?) : sap.m.PlanningCalendarView","name":"sap.m.PlanningCalendarView","prefix":"PlanningCalendarView","Experimental":false,"constructorDescription":"Constructor for a new <code>PlanningCalendarView<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getIntervalType intervalType} : sap.ui.unified.CalendarIntervalType (default: Hour)<\/li>\n<li>{@link #getDescription description} : string<\/li>\n<li>{@link #getIntervalsS intervalsS} : int (default: 6)<\/li>\n<li>{@link #getIntervalsM intervalsM} : int (default: 8)<\/li>\n<li>{@link #getIntervalsL intervalsL} : int (default: 12)<\/li>\n<li>{@link #getShowSubIntervals showSubIntervals} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."},{"template":"new sap.m.Popover(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tplacement: ${sap.m.PlacementType.Right}, // sap.m.PlacementType\n\t\tshowHeader: ${bShowHeader}, // boolean\n\t\ttitle: \"${title}\", // string\n\t\tmodal: ${bModal}, // boolean\n\t\toffsetX: ${0}, // int\n\t\toffsetY: ${0}, // int\n\t\tshowArrow: ${bShowArrow}, // boolean\n\t\tcontentWidth: ${contentWidth}, // sap.ui.core.CSSSize\n\t\tcontentMinWidth: ${\"\"}, // sap.ui.core.CSSSize\n\t\tcontentHeight: ${contentHeight}, // sap.ui.core.CSSSize\n\t\tenableScrolling: ${bEnableScrolling}, // boolean\n\t\tverticalScrolling: ${bVerticalScrolling}, // boolean\n\t\thorizontalScrolling: ${bHorizontalScrolling}, // boolean\n\t\tbounce: ${bBounce}, // boolean\n\t\tresizable: ${bResizable}, // boolean\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tcustomHeader: ${customHeader}, // sap.ui.core.Control\n\t\tsubHeader: ${subHeader}, // sap.ui.core.Control\n\t\tfooter: ${footer}, // sap.ui.core.Control\n\t\tbeginButton: ${beginButton}, // sap.ui.core.Control\n\t\tendButton: ${endButton}, // sap.ui.core.Control\n\t\tleftButton: ${leftButton}, // (sap.m.Button|string)\n\t\trightButton: ${rightButton}, // (sap.m.Button|string)\n\t\tinitialFocus: ${initialFocus}, // (sap.ui.core.Control|string)\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tafterOpen: [function (oEvent) {}, this], // function|array\n\t\tafterClose: [function (oEvent) {}, this], // function|array\n\t\tbeforeOpen: [function (oEvent) {}, this], // function|array\n\t\tbeforeClose: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/Popover","static":"true","extends":"sap.ui.core.Control","helpDescription":"Displays additional information for an object in a compact way.\n\n<h3>Overview<\/h3> The popover displays additional information for an object in a compact way and without leaving the page. The popover can contain various UI elements such as fields, tables, images, and charts. It can also include actions in the footer. <h3>Structure<\/h3> The popover has three main areas: <ul> <li>Header (optional) - with a back button and a title<\/li> <li>Content - holds all the controls<\/li> <li>Footer (optional) - with additional action buttons<\/li> <\/ul> <h4>Guidelines<\/h4> <ul> <li>Do not overlap popovers.<\/li> <li>You can determine the {@link sap.m.PlacementType placement} of the popover relative to the control that opens it.<\/li> <li>Ensure that the content has a basic design and shows only the most important information.<\/li> <\/ul> <h3>Usage<\/h3> <h4>When to use:<\/h4> <ul> <li>You need to define your own structure of controls within the popover.<\/li> <\/ul> <h4>When not to use:<\/h4> <ul> <li>The {@link sap.m.QuickView QuickView} is more appropriate for your use case.<\/li> <\/ul> <h3>Responsive Behavior<\/h3> The popover is closed when the user clicks or taps outside the popover or selects an action within the popover. You can prevent this with the <code>modal<\/code> property. The popover can be resized when the <code>resizable<\/code> property is enabled.\n\n<ul> <li>{@link sap.m.Popover} is <u>not<\/u> responsive on mobile devices - it will always be rendered as a popover and you have to take care of its size and position.<\/li> <li>{@link sap.m.ResponsivePopover} is adaptive and responsive. It renders as a dialog with a close button in the header on phones, and as a popover on tablets.<\/li> <\/ul>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"Popover(sId?, mSettings?) : sap.m.Popover","name":"sap.m.Popover","prefix":"Popover","Experimental":false,"constructorDescription":"Constructor for a new Popover.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPlacement placement} : sap.m.PlacementType (default: Right)<\/li>\n<li>{@link #getShowHeader showHeader} : boolean (default: true)<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getModal modal} : boolean (default: false)<\/li>\n<li>{@link #getOffsetX offsetX} : int (default: 0)<\/li>\n<li>{@link #getOffsetY offsetY} : int (default: 0)<\/li>\n<li>{@link #getShowArrow showArrow} : boolean (default: true)<\/li>\n<li>{@link #getContentWidth contentWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getContentMinWidth contentMinWidth} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getContentHeight contentHeight} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEnableScrolling enableScrolling} : boolean (default: true)<\/li>\n<li>{@link #getVerticalScrolling verticalScrolling} : boolean (default: true)<\/li>\n<li>{@link #getHorizontalScrolling horizontalScrolling} : boolean (default: true)<\/li>\n<li>{@link #getBounce bounce} : boolean<\/li>\n<li>{@link #getResizable resizable} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getCustomHeader customHeader} : sap.ui.core.Control<\/li>\n<li>{@link #getSubHeader subHeader} : sap.ui.core.Control<\/li>\n<li>{@link #getFooter footer} : sap.ui.core.Control<\/li>\n<li>{@link #getBeginButton beginButton} : sap.ui.core.Control<\/li>\n<li>{@link #getEndButton endButton} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getLeftButton leftButton} : (sap.ui.core.ID | sap.m.Button)<\/li>\n<li>{@link #getRightButton rightButton} : (sap.ui.core.ID | sap.m.Button)<\/li>\n<li>{@link #getInitialFocus initialFocus} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterOpen afterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterClose afterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeOpen beforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeClose beforeClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireAfterClose(\n\t{\n\t\topenBy: ${openBy} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:afterClose afterClose} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireAfterClose(mParameters?) : sap.m.Popover","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.Popover.fireAfterClose"},{"template":"fireAfterOpen(\n\t{\n\t\topenBy: ${openBy} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:afterOpen afterOpen} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireAfterOpen(mParameters?) : sap.m.Popover","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.Popover.fireAfterOpen"},{"template":"fireBeforeClose(\n\t{\n\t\topenBy: ${openBy} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:beforeClose beforeClose} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireBeforeClose(mParameters?) : sap.m.Popover","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.Popover.fireBeforeClose"},{"template":"fireBeforeOpen(\n\t{\n\t\topenBy: ${openBy} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:beforeOpen beforeOpen} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireBeforeOpen(mParameters?) : sap.m.Popover","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.Popover.fireBeforeOpen"},{"template":"new sap.m.ProgressIndicator(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tenabled: ${bEnabled}, // boolean\n\t\tstate: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tdisplayValue: \"${displayValue}\", // string\n\t\tpercentValue: ${0}, // float\n\t\tshowValue: ${bShowValue}, // boolean\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tdisplayOnly: ${bDisplayOnly} // boolean\n\t}\n)\n","module":"sap/m/ProgressIndicator","static":"true","extends":"sap.ui.core.Control","helpDescription":"Shows the progress of a process in a graphical way. To indicate the progress, the inside of the ProgressIndicator is filled with a color. Additionally, a user-defined string can be displayed on the ProgressIndicator.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ProgressIndicator(sId?, mSettings?) : sap.m.ProgressIndicator","name":"sap.m.ProgressIndicator","prefix":"ProgressIndicator","Experimental":false,"constructorDescription":"Constructor for a new ProgressIndicator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getState state} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getDisplayValue displayValue} : string<\/li>\n<li>{@link #getPercentValue percentValue} : float (default: 0)<\/li>\n<li>{@link #getShowValue showValue} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getDisplayOnly displayOnly} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.PullToRefresh(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tdescription: \"${description}\", // string\n\t\tshowIcon: ${bShowIcon}, // boolean\n\t\tcustomIcon: ${customIcon}, // sap.ui.core.URI\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\trefresh: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/PullToRefresh","static":"true","extends":"sap.ui.core.Control","helpDescription":"PullToRefresh control. Put it as the first control in contents of a scroll container or a scrollable page. Do not place it into a page with disabled scrolling. On touch devices it gets hidden by default and when the user pulls down the page far enough, it gets visible and triggers the \"refresh\" event. In non-touch browsers where scrollbars are used for scrolling, it is always visible and triggers the \"refresh\" event when clicked.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"PullToRefresh(sId?, mSettings?) : sap.m.PullToRefresh","name":"sap.m.PullToRefresh","prefix":"PullToRefresh","Experimental":false,"constructorDescription":"Constructor for a new PullToRefresh.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDescription description} : string<\/li>\n<li>{@link #getShowIcon showIcon} : boolean (default: false)<\/li>\n<li>{@link #getCustomIcon customIcon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:refresh refresh} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.QuickView(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tpages: [${pages}], // sap.m.QuickViewPage[]\n\t\tnavigate: [function (oEvent) {}, this], // function|array\n\t\tafterNavigate: [function (oEvent) {}, this], // function|array\n\t\tplacement: ${sap.m.PlacementType.Right}, // sap.m.PlacementType\n\t\twidth: ${\"320px\"}, // sap.ui.core.CSSSize\n\t\tafterOpen: [function (oEvent) {}, this], // function|array\n\t\tafterClose: [function (oEvent) {}, this], // function|array\n\t\tbeforeOpen: [function (oEvent) {}, this], // function|array\n\t\tbeforeClose: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/QuickView","static":"true","extends":"sap.m.QuickViewBase","helpDescription":"A responsive popover that displays information on an object in a business-card format. <h3>Overview<\/h3> The quick view is used to show business information on either a person or an entity (e.g. a company). It uses a set of pre-defined controls. Objects can be linked together and you can navigate between several objects. An unlimited number of objects can be linked. <h3>Structure<\/h3> Each card is represented by a {@link sap.m.QuickViewPage} which holds all the information (icon, title, header, description) for the object. A single quick view can hold multiple objects, each showing information on a single entity. <h3>Usage<\/h3> <h4>When to use<\/h4> <ul> <li>You want to display a concise overview of an object (an employee or a company).<\/li> <li>Information on the object can be split into concrete groups.<\/li> <\/ul> <h4>When not to use<\/h4> <ul> <li>You want to display complex information about an object.<\/li> <\/ul> <h3>Responsive Behavior<\/h3> The quick view is displayed in a {@link sap.m.Popover popover} on desktop and a full-screen {@link sap.m.Dialog dialog} on mobile devices.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"QuickView(sId?, mSettings?) : sap.m.QuickView","name":"sap.m.QuickView","prefix":"QuickView","Experimental":false,"constructorDescription":"Constructor for a new QuickView.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPlacement placement} : sap.m.PlacementType (default: Right)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 320px)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:afterOpen afterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterClose afterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeOpen beforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeClose beforeClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.QuickViewBase#constructor sap.m.QuickViewBase}\ncan be used as well."},{"template":"fireAfterClose(\n\t{\n\t\topenBy: ${openBy}, // sap.ui.core.Control\n\t\torigin: ${origin} // sap.m.Button\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:afterClose afterClose} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireAfterClose(mParameters?) : sap.m.QuickView","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.QuickView.fireAfterClose"},{"template":"fireAfterOpen(\n\t{\n\t\topenBy: ${openBy} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:afterOpen afterOpen} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireAfterOpen(mParameters?) : sap.m.QuickView","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.QuickView.fireAfterOpen"},{"template":"fireBeforeClose(\n\t{\n\t\topenBy: ${openBy}, // sap.ui.core.Control\n\t\torigin: ${origin} // sap.m.Button\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:beforeClose beforeClose} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireBeforeClose(mParameters?) : sap.m.QuickView","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.QuickView.fireBeforeClose"},{"template":"fireBeforeOpen(\n\t{\n\t\topenBy: ${openBy} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:beforeOpen beforeOpen} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireBeforeOpen(mParameters?) : sap.m.QuickView","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.QuickView.fireBeforeOpen"},{"template":"new sap.m.QuickViewBase(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tpages: [${pages}], // sap.m.QuickViewPage[]\n\t\tnavigate: [function (oEvent) {}, this], // function|array\n\t\tafterNavigate: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/QuickViewBase","static":"true","extends":"sap.ui.core.Control","helpDescription":"QuickViewBase class provides base functionality for QuickView and QuickViewCard. Do not use it directly.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"QuickViewBase(sId?, mSettings?) : sap.m.QuickViewBase","name":"sap.m.QuickViewBase","prefix":"QuickViewBase","Experimental":false,"constructorDescription":"Constructor for a new QuickViewBase.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getPages pages} : sap.m.QuickViewPage[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:navigate navigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterNavigate afterNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireAfterNavigate(\n\t{\n\t\tfrom: ${from}, // sap.ui.core.Control\n\t\tfromId: \"${fromId}\", // string\n\t\tto: ${to}, // sap.ui.core.Control\n\t\ttoId: \"${toId}\", // string\n\t\tfirstTime: ${bFirstTime}, // boolean\n\t\tisTo: ${bIsTo}, // boolean\n\t\tisBack: ${bIsBack}, // boolean\n\t\tisBackToTop: ${bIsBackToTop}, // boolean\n\t\tisBackToPage: ${bIsBackToPage}, // boolean\n\t\tdirection: \"${direction}\", // string\n\t\tisTopPage: ${bIsTopPage}, // boolean\n\t\tnavOrigin: ${navOrigin} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:afterNavigate afterNavigate} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireAfterNavigate(mParameters?) : sap.m.QuickViewBase","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.QuickViewBase.fireAfterNavigate"},{"template":"fireNavigate(\n\t{\n\t\tfrom: ${from}, // sap.ui.core.Control\n\t\tfromId: \"${fromId}\", // string\n\t\tto: ${to}, // sap.ui.core.Control\n\t\ttoId: \"${toId}\", // string\n\t\tfirstTime: ${bFirstTime}, // boolean\n\t\tisTo: ${bIsTo}, // boolean\n\t\tisBack: ${bIsBack}, // boolean\n\t\tisBackToTop: ${bIsBackToTop}, // boolean\n\t\tisBackToPage: ${bIsBackToPage}, // boolean\n\t\tdirection: \"${direction}\", // string\n\t\tnavOrigin: ${navOrigin} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:navigate navigate} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireNavigate(mParameters?) : boolean","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.QuickViewBase.fireNavigate"},{"template":"new sap.m.QuickViewCard(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tpages: [${pages}], // sap.m.QuickViewPage[]\n\t\tnavigate: [function (oEvent) {}, this], // function|array\n\t\tafterNavigate: [function (oEvent) {}, this], // function|array\n\t\tshowVerticalScrollBar: ${bShowVerticalScrollBar} // boolean\n\t}\n)\n","module":"sap/m/QuickViewCard","static":"true","extends":"sap.m.QuickViewBase","helpDescription":"The QuickViewCard control displays information of an object in a business-card format. It also allows this object to be linked to another object using one of the links. Clicking that link updates the information with the data of the linked object. Unlimited number of objects can be linked.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"QuickViewCard(sId?, mSettings?) : sap.m.QuickViewCard","name":"sap.m.QuickViewCard","prefix":"QuickViewCard","Experimental":false,"constructorDescription":"Constructor for a new QuickViewCard.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowVerticalScrollBar showVerticalScrollBar} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.QuickViewBase#constructor sap.m.QuickViewBase}\ncan be used as well."},{"template":"new sap.m.QuickViewGroup(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\theading: ${\"\"}, // string\n\t\telements: [${elements}] // sap.m.QuickViewGroupElement[]\n\t}\n)\n","module":"sap/m/QuickViewGroup","static":"true","extends":"sap.ui.core.Element","helpDescription":"QuickViewGroup consists of a title (optional) and an entity of group elements.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"QuickViewGroup(sId?, mSettings?) : sap.m.QuickViewGroup","name":"sap.m.QuickViewGroup","prefix":"QuickViewGroup","Experimental":false,"constructorDescription":"Constructor for a new QuickViewGroup.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getHeading heading} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getElements elements} : sap.m.QuickViewGroupElement[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."},{"template":"new sap.m.QuickViewGroupElement(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tlabel: ${\"\"}, // string\n\t\tvalue: ${\"\"}, // string\n\t\turl: ${\"\"}, // string\n\t\ttarget: ${\"_blank\"}, // string\n\t\ttype: ${sap.m.QuickViewGroupElementType.text}, // sap.m.QuickViewGroupElementType\n\t\tpageLinkId: ${\"\"}, // string\n\t\temailSubject: ${\"\"} // string\n\t}\n)\n","module":"sap/m/QuickViewGroupElement","static":"true","extends":"sap.ui.core.Element","helpDescription":"QuickViewGroupElement is a combination of one label and another control (Link or Text) associated to this label.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"QuickViewGroupElement(sId?, mSettings?) : sap.m.QuickViewGroupElement","name":"sap.m.QuickViewGroupElement","prefix":"QuickViewGroupElement","Experimental":false,"constructorDescription":"Constructor for a new QuickViewGroupElement.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getLabel label} : string (default: )<\/li>\n<li>{@link #getValue value} : string (default: )<\/li>\n<li>{@link #getUrl url} : string (default: )<\/li>\n<li>{@link #getTarget target} : string (default: _blank)<\/li>\n<li>{@link #getType type} : sap.m.QuickViewGroupElementType (default: text)<\/li>\n<li>{@link #getPageLinkId pageLinkId} : string (default: )<\/li>\n<li>{@link #getEmailSubject emailSubject} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."},{"template":"new sap.m.QuickViewPage(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tpageId: ${\"\"}, // string\n\t\theader: ${\"\"}, // string\n\t\ttitle: ${\"\"}, // string\n\t\ttitleUrl: ${\"\"}, // string\n\t\tcrossAppNavCallback: ${crossAppNavCallback}, // object\n\t\tdescription: ${\"\"}, // string\n\t\ticon: ${\"\"}, // string\n\t\tgroups: [${groups}] // sap.m.QuickViewGroup[]\n\t}\n)\n","module":"sap/m/QuickViewPage","static":"true","extends":"sap.ui.core.Control","helpDescription":"QuickViewPage consists of a page header, an object icon or image, an object name with short description, and an object information divided in groups. The control uses the sap.m.SimpleForm control to display information.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"QuickViewPage(sId?, mSettings?) : sap.m.QuickViewPage","name":"sap.m.QuickViewPage","prefix":"QuickViewPage","Experimental":false,"constructorDescription":"Constructor for a new QuickViewPage.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPageId pageId} : string (default: )<\/li>\n<li>{@link #getHeader header} : string (default: )<\/li>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getTitleUrl titleUrl} : string (default: )<\/li>\n<li>{@link #getCrossAppNavCallback crossAppNavCallback} : object<\/li>\n<li>{@link #getDescription description} : string (default: )<\/li>\n<li>{@link #getIcon icon} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getGroups groups} : sap.m.QuickViewGroup[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.RadioButton(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tenabled: ${bEnabled}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tgroupName: ${\"sapMRbDefaultGroup\"}, // string\n\t\ttext: \"${text}\", // string\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\twidth: ${\"\"}, // sap.ui.core.CSSSize\n\t\tuseEntireWidth: ${bUseEntireWidth}, // boolean\n\t\tactiveHandling: ${bActiveHandling}, // boolean\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\ttextAlign: ${sap.ui.core.TextAlign.Begin}, // sap.ui.core.TextAlign\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselect: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/RadioButton","static":"true","extends":"sap.ui.core.Control","helpDescription":"RadioButton is a control similar to a {@link sap.m.CheckBox checkbox}, but it allows you to choose only one of the predefined set of options. Multiple radio buttons have to belong to the same group (have the same value for <code>groupName<\/code>) in order to be mutually exclusive. A wrapper control {@link sap.m.RadioButtonGroup RadioButtonGroup} can be used instead of individual radio buttons. <h3>Structure<\/h3> <ul> <li>Radio buttons can have a value state like Error or Warning.<\/li> <li>Radio buttons can be arranged vertically by setting the <code>column<\/code> to a number higher than 1.<\/li> <li>Radio button options need to have a {@link sap.m.Label label}.<\/li> <\/ul> <h3>Usage<\/h3> <h4>When to use:<\/h4> <ul> <li>You quickly need to choose between at least two alternatives.<\/li> <li>You need to place other controls between the radio button options.<\/li> <\/ul> <h4>When not to use:<\/h4> <ul> <li>You want to select multiple values for the same option. Use {@link sap.m.CheckBox checkboxes} instead.<\/li> <li>When the default value is recommended for most users in most situations. Use a {@link sap.m.Select drop-down} instead as is saves space by not showing all the alternatives.<\/li> <li>You want have more than 8 options. Use a {@link sap.m.Select drop-down} instead.<\/li> <li>When the options are mutually exclusive e.g. ON/OFF. Use a {@link sap.m.Switch switch} instead.<\/li> <li>Avoid using horizontally aligned radio buttons as they will be cut off on phones.<\/li> <\/ul>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"RadioButton(sId?, mSettings?) : sap.m.RadioButton","name":"sap.m.RadioButton","prefix":"RadioButton","Experimental":false,"constructorDescription":"Constructor for a new RadioButton.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getGroupName groupName} : string (default: sapMRbDefaultGroup)<\/li>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getUseEntireWidth useEntireWidth} : boolean (default: false)<\/li>\n<li>{@link #getActiveHandling activeHandling} : boolean (default: true)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireSelect(\n\t{\n\t\tselected: ${bSelected} // boolean\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:select select} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireSelect(mParameters?) : sap.m.RadioButton","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.RadioButton.fireSelect"},{"template":"new sap.m.RadioButtonGroup(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tcolumns: ${1}, // int\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tselectedIndex: ${0}, // int\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tbuttons: [${buttons}], // sap.m.RadioButton[]\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselect: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/RadioButtonGroup","static":"true","extends":"sap.ui.core.Control","helpDescription":"This control is used as a wrapper for a group of {@link sap.m.RadioButton} controls, which can be used as a single UI element. You can select only one of the grouped radio buttons at a time. <h3>Structure<\/h3> <ul> <li>The radio buttons are stored in the <code>buttons<\/code> aggregation.<\/li> <li>By setting the <code>columns<\/code> property, you can create layouts like a 'matrix', 'vertical' or 'horizontal'.<\/li> <li><b>Note:<\/b>For proper display on all devices, we recommend creating radio button groups with only one row or only one column.<\/li> <\/ul> <h3>Usage<\/h3> <h4>When to use:<\/h4> <ul> <li>You want to attach a single event handler on a group of buttons, rather than on each individual button.<\/li> <\/ul> <h4>When not to use:<\/h4> <ul> <li>Do not put two radio button groups right next to each other as it is difficult to determine which buttons belong to which group.<\/li> <\/ul>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"RadioButtonGroup(sId?, mSettings?) : sap.m.RadioButtonGroup","name":"sap.m.RadioButtonGroup","prefix":"RadioButtonGroup","Experimental":false,"constructorDescription":"Constructor for a new RadioButtonGroup.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getColumns columns} : int (default: 1)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getSelectedIndex selectedIndex} : int (default: 0)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getButtons buttons} : sap.m.RadioButton[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireSelect(\n\t{\n\t\tselectedIndex: ${selectedIndex} // int\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:select select} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireSelect(mParameters?) : sap.m.RadioButtonGroup","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.RadioButtonGroup.fireSelect"},{"template":"new sap.m.RangeSlider(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tname: ${\"\"}, // string\n\t\tmin: ${0}, // float\n\t\tmax: ${100}, // float\n\t\tstep: ${1}, // float\n\t\tprogress: ${bProgress}, // boolean\n\t\tvalue: ${0}, // float\n\t\tshowHandleTooltip: ${bShowHandleTooltip}, // boolean\n\t\tshowAdvancedTooltip: ${bShowAdvancedTooltip}, // boolean\n\t\tinputsAsTooltips: ${bInputsAsTooltips}, // boolean\n\t\tenableTickmarks: ${bEnableTickmarks}, // boolean\n\t\tscale: ${scale}, // sap.m.IScale\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tliveChange: [function (oEvent) {}, this], // function|array\n\t\tvalue2: ${100}, // float\n\t\trange: ${[]} // float[]\n\t}\n)\n","module":"sap/m/RangeSlider","static":"true","extends":"sap.m.Slider","helpDescription":"Represents a numerical interval and two handles to select a sub-range within it. <h3>Overview<\/h3> The purpose of the control is to enable visual selection of sub-ranges within a given interval. <h4>Notes:<h4> <ul> <li>The RangeSlider extends the functionality of the {@link sap.m.Slider Slider}<\/li> <li>The right and left handle can be moved individually and their positions could therefore switch.<\/li> <li>The entire range can be moved along the interval.<\/li> <li>The right and left handle can select the same value<\/li> <\/ul>\n\n<h3>Usage<\/h3> The most common usecase is to select and move sub-ranges on a continuous numerical scale.\n\n<h3>Responsive Behavior<\/h3> You can move the currently selected range by clicking on it and dragging it along the interval.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"RangeSlider(sId?, mSettings?) : sap.m.RangeSlider","name":"sap.m.RangeSlider","prefix":"RangeSlider","Experimental":false,"constructorDescription":"Constructor for a new <code>RangeSlider<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue2 value2} : float (default: 100)<\/li>\n<li>{@link #getRange range} : float[] (default: 0,100)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Slider#constructor sap.m.Slider}\ncan be used as well."},{"template":"new sap.m.RatingIndicator(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tenabled: ${bEnabled}, // boolean\n\t\tmaxValue: ${5}, // int\n\t\tvalue: ${0}, // float\n\t\ticonSize: ${iconSize}, // sap.ui.core.CSSSize\n\t\ticonSelected: ${iconSelected}, // sap.ui.core.URI\n\t\ticonUnselected: ${iconUnselected}, // sap.ui.core.URI\n\t\ticonHovered: ${iconHovered}, // sap.ui.core.URI\n\t\tvisualMode: ${sap.m.RatingIndicatorVisualMode.Half}, // sap.m.RatingIndicatorVisualMode\n\t\tdisplayOnly: ${bDisplayOnly}, // boolean\n\t\teditable: ${bEditable}, // boolean\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tliveChange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/RatingIndicator","static":"true","extends":"sap.ui.core.Control","helpDescription":"The rating indicator is used to display a specific number of icons that are used to rate an item. Additionally it is also used to display the average over all ratings. <h3>Structure<\/h3> <ul> <li>The rating indicator can use different icons (default: stars) which are defined as URIs in the properties <code>iconHovered<\/code>, <code>iconSelected<\/code> and <code>iconUnselected<\/code>.<\/li> <li>The rating indicator can display half-values ({@link sap.m.RatingIndicatorVisualMode visualMode} = Half) when it is used to show the average. Half-values can't be selected by the user.<\/li> <\/ul> <h3>Usage<\/h3> The preferred number of icons is between 5 (default) and 7. <h3>Responsive Behavior<\/h3> You can display icons in 4 recommended sizes: <ul> <li>large - 32px<\/li> <li>medium(default) - 22px<\/li> <li>small - 16px<\/li> <li>XS - 12px<\/li> <\/ul> <b>Note:<\/b> If no icon size is set, the rating indicator will set it according to the content density.<\/h4>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"RatingIndicator(sId?, mSettings?) : sap.m.RatingIndicator","name":"sap.m.RatingIndicator","prefix":"RatingIndicator","Experimental":false,"constructorDescription":"Constructor for a new RatingIndicator.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getMaxValue maxValue} : int (default: 5)<\/li>\n<li>{@link #getValue value} : float (default: 0)<\/li>\n<li>{@link #getIconSize iconSize} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getIconSelected iconSelected} : sap.ui.core.URI<\/li>\n<li>{@link #getIconUnselected iconUnselected} : sap.ui.core.URI<\/li>\n<li>{@link #getIconHovered iconHovered} : sap.ui.core.URI<\/li>\n<li>{@link #getVisualMode visualMode} : sap.m.RatingIndicatorVisualMode (default: Half)<\/li>\n<li>{@link #getDisplayOnly displayOnly} : boolean (default: false)<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireChange(\n\t{\n\t\tvalue: ${value} // int\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:change change} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireChange(mParameters?) : sap.m.RatingIndicator","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.RatingIndicator.fireChange"},{"template":"fireLiveChange(\n\t{\n\t\tvalue: ${value} // float\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:liveChange liveChange} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireLiveChange(mParameters?) : sap.m.RatingIndicator","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.RatingIndicator.fireLiveChange"},{"template":"new sap.m.ResponsivePopover(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tplacement: ${sap.m.PlacementType.Right}, // sap.m.PlacementType\n\t\tshowHeader: ${bShowHeader}, // boolean\n\t\ttitle: \"${title}\", // string\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\tmodal: ${bModal}, // boolean\n\t\toffsetX: ${offsetX}, // int\n\t\toffsetY: ${offsetY}, // int\n\t\tshowArrow: ${bShowArrow}, // boolean\n\t\tcontentWidth: ${contentWidth}, // sap.ui.core.CSSSize\n\t\tcontentHeight: ${contentHeight}, // sap.ui.core.CSSSize\n\t\thorizontalScrolling: ${bHorizontalScrolling}, // boolean\n\t\tverticalScrolling: ${bVerticalScrolling}, // boolean\n\t\tshowCloseButton: ${bShowCloseButton}, // boolean\n\t\tresizable: ${bResizable}, // boolean\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tcustomHeader: ${customHeader}, // sap.m.IBar\n\t\tsubHeader: ${subHeader}, // sap.m.IBar\n\t\tbeginButton: ${beginButton}, // sap.m.Button\n\t\tendButton: ${endButton}, // sap.m.Button\n\t\tinitialFocus: ${initialFocus}, // (sap.ui.core.Control|string)\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tbeforeOpen: [function (oEvent) {}, this], // function|array\n\t\tafterOpen: [function (oEvent) {}, this], // function|array\n\t\tbeforeClose: [function (oEvent) {}, this], // function|array\n\t\tafterClose: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/ResponsivePopover","static":"true","extends":"sap.ui.core.Control","helpDescription":"<h3>Overview<\/h3> The responsive popover acts as a {@link sap.m.Popover popover} on desktop and tablet, while on phone it acts as a {@link sap.m.Dialog dialog} with <code>stretch<\/code> set to true.\n\n<b>Note:<\/b> It is recommended that <code>ResponsivePopover<\/code> is used in fragments otherwise there might be some implications on the user experience. For example, on desktop, open or close functions of the <code>Popover<\/code> might not be called.\n\n<h3>Usage<\/h3> When you want to make sure that all content is visible on any device.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ResponsivePopover(sId?, mSettings?) : sap.m.ResponsivePopover","name":"sap.m.ResponsivePopover","prefix":"ResponsivePopover","Experimental":false,"constructorDescription":"Constructor for a new ResponsivePopover.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPlacement placement} : sap.m.PlacementType (default: Right)<\/li>\n<li>{@link #getShowHeader showHeader} : boolean (default: true)<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getModal modal} : boolean<\/li>\n<li>{@link #getOffsetX offsetX} : int<\/li>\n<li>{@link #getOffsetY offsetY} : int<\/li>\n<li>{@link #getShowArrow showArrow} : boolean (default: true)<\/li>\n<li>{@link #getContentWidth contentWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getContentHeight contentHeight} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getHorizontalScrolling horizontalScrolling} : boolean (default: true)<\/li>\n<li>{@link #getVerticalScrolling verticalScrolling} : boolean (default: true)<\/li>\n<li>{@link #getShowCloseButton showCloseButton} : boolean (default: true)<\/li>\n<li>{@link #getResizable resizable} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<li>{@link #getCustomHeader customHeader} : sap.m.IBar<\/li>\n<li>{@link #getSubHeader subHeader} : sap.m.IBar<\/li>\n<li>{@link #getBeginButton beginButton} : sap.m.Button<\/li>\n<li>{@link #getEndButton endButton} : sap.m.Button<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getInitialFocus initialFocus} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:beforeOpen beforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterOpen afterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeClose beforeClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterClose afterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireAfterClose(\n\t{\n\t\topenBy: ${openBy}, // sap.ui.core.Control\n\t\torigin: ${origin} // sap.m.Button\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:afterClose afterClose} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireAfterClose(mParameters?) : sap.m.ResponsivePopover","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.ResponsivePopover.fireAfterClose"},{"template":"fireAfterOpen(\n\t{\n\t\topenBy: ${openBy} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:afterOpen afterOpen} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireAfterOpen(mParameters?) : sap.m.ResponsivePopover","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.ResponsivePopover.fireAfterOpen"},{"template":"fireBeforeClose(\n\t{\n\t\topenBy: ${openBy}, // sap.ui.core.Control\n\t\torigin: ${origin} // sap.m.Button\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:beforeClose beforeClose} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireBeforeClose(mParameters?) : sap.m.ResponsivePopover","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.ResponsivePopover.fireBeforeClose"},{"template":"fireBeforeOpen(\n\t{\n\t\topenBy: ${openBy} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:beforeOpen beforeOpen} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireBeforeOpen(mParameters?) : sap.m.ResponsivePopover","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.ResponsivePopover.fireBeforeOpen"},{"template":"new sap.m.ResponsiveScale(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttickmarksBetweenLabels: ${0} // int\n\t}\n)\n","module":"sap/m/ResponsiveScale","static":"true","extends":"sap.ui.core.Element","helpDescription":"<strong><i>Overview<\/i><\/strong>\n\nA {@link sap.m.Slider} element represents a scale with tickmarks and labels. The purpose of the element is to decouple the scale logic from other controls i.e. Slider / RangeSlider\n\nThe most important properties of the ResponsiveScale are: <ul> <li> tickmarksBetweenLabels - Puts a label on every N-th tickmark.<\/li> <\/ul>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ResponsiveScale(sId?, mSettings?) : sap.m.ResponsiveScale","name":"sap.m.ResponsiveScale","prefix":"ResponsiveScale","Experimental":false,"constructorDescription":"Constructor for a new <code>ResponsiveScale<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTickmarksBetweenLabels tickmarksBetweenLabels} : int (default: 0)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."},{"template":"new sap.m.ScrollContainer(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\twidth: ${\"auto\"}, // sap.ui.core.CSSSize\n\t\theight: ${\"auto\"}, // sap.ui.core.CSSSize\n\t\thorizontal: ${bHorizontal}, // boolean\n\t\tvertical: ${bVertical}, // boolean\n\t\tfocusable: ${bFocusable}, // boolean\n\t\tcontent: [${content}] // sap.ui.core.Control[]\n\t}\n)\n","module":"sap/m/ScrollContainer","static":"true","extends":"sap.ui.core.Control","helpDescription":"The ScrollContainer is a control that can display arbitrary content within a limited screen area and provides scrolling to make all content accessible. <h3>When not to use<\/h3> Do not nest scrolling areas that scroll in the same direction (e.g. a ScrollContainer that scrolls vertically inside a Page control with scrolling enabled).","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ScrollContainer(sId?, mSettings?) : sap.m.ScrollContainer","name":"sap.m.ScrollContainer","prefix":"ScrollContainer","Experimental":false,"constructorDescription":"Constructor for a new ScrollContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getHorizontal horizontal} : boolean (default: true)<\/li>\n<li>{@link #getVertical vertical} : boolean (default: false)<\/li>\n<li>{@link #getFocusable focusable} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.SearchField(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvisible: ${bVisible}, // boolean\n\t\tmaxLength: ${0}, // int\n\t\tplaceholder: \"${placeholder}\", // string\n\t\tshowMagnifier: ${bShowMagnifier}, // boolean\n\t\tshowRefreshButton: ${bShowRefreshButton}, // boolean\n\t\trefreshButtonTooltip: \"${refreshButtonTooltip}\", // string\n\t\tshowSearchButton: ${bShowSearchButton}, // boolean\n\t\tenableSuggestions: ${bEnableSuggestions}, // boolean\n\t\tselectOnFocus: ${bSelectOnFocus}, // boolean\n\t\tsuggestionItems: [${suggestionItems}], // sap.m.SuggestionItem[]\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tsearch: [function (oEvent) {}, this], // function|array\n\t\tliveChange: [function (oEvent) {}, this], // function|array\n\t\tsuggest: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/SearchField","static":"true","extends":"sap.ui.core.Control","helpDescription":"An input field to search for a specific item. <h3>Overview<\/h3> A search field is needed when the user needs to find specific information in large amounts of data. The search field is also the control of choice for filtering down a given amount of information. <h3>Structure<\/h3> The search input field can be used in two ways: <ul> <li>Manual search - The search is triggered after the user presses the search button. Manual search uses a \u201cstarts with\u201d approach.<\/li> <li>Live search (search-as-you-type) - The search is triggered after each button press. A suggestion list is shown below the search field. Live search uses a \u201ccontains\u201d approach.<\/li> <\/ul> <h3>Usage<\/h3> <h4>When to use:<\/h4> <ul> <li> Use live search whenever possible. <\/li> <li> Use a manual search only if the amount of data is too large and if your app would otherwise run into performance issues. <\/li> <\/ul> <h3>Responsive Behavior<\/h3> On mobile devices, there is no refresh button in the search field. \"Pull Down to Refresh\" is used instead. The \"Pull Down to Refresh\" arrow icon is animated and spins to signal that the user should release it.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SearchField(sId?, mSettings?) : sap.m.SearchField","name":"sap.m.SearchField","prefix":"SearchField","Experimental":false,"constructorDescription":"Constructor for a new SearchField.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getValue value} : string<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getMaxLength maxLength} : int (default: 0)<\/li>\n<li>{@link #getPlaceholder placeholder} : string<\/li>\n<li>{@link #getShowMagnifier showMagnifier} : boolean (default: true)<\/li>\n<li>{@link #getShowRefreshButton showRefreshButton} : boolean (default: false)<\/li>\n<li>{@link #getRefreshButtonTooltip refreshButtonTooltip} : string<\/li>\n<li>{@link #getShowSearchButton showSearchButton} : boolean (default: true)<\/li>\n<li>{@link #getEnableSuggestions enableSuggestions} : boolean (default: false)<\/li>\n<li>{@link #getSelectOnFocus selectOnFocus} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSuggestionItems suggestionItems} : sap.m.SuggestionItem[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:search search} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:suggest suggest} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireLiveChange(\n\t{\n\t\tnewValue: \"${newValue}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:liveChange liveChange} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireLiveChange(mParameters?) : sap.m.SearchField","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.SearchField.fireLiveChange"},{"template":"fireSearch(\n\t{\n\t\tquery: \"${query}\", // string\n\t\tsuggestionItem: ${suggestionItem}, // sap.m.SuggestionItem\n\t\trefreshButtonPressed: ${bRefreshButtonPressed}, // boolean\n\t\tclearButtonPressed: ${bClearButtonPressed} // boolean\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:search search} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireSearch(mParameters?) : sap.m.SearchField","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.SearchField.fireSearch"},{"template":"fireSuggest(\n\t{\n\t\tsuggestValue: \"${suggestValue}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:suggest suggest} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireSuggest(mParameters?) : sap.m.SearchField","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.SearchField.fireSuggest"},{"template":"new sap.m.SegmentedButton(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tselectedKey: ${\"\"}, // string\n\t\tbuttons: [${buttons}], // sap.m.Button[]\n\t\titems: [${items}], // sap.m.SegmentedButtonItem[]\n\t\tselectedButton: ${selectedButton}, // (sap.m.Button|string)\n\t\tselectedItem: ${selectedItem}, // (sap.m.SegmentedButtonItem|string)\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselect: [function (oEvent) {}, this], // function|array\n\t\tselectionChange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/SegmentedButton","static":"true","extends":"sap.ui.core.Control","helpDescription":"A horizontal control made of multiple buttons, which can display a title or an image.\n\n<h3>Overview<\/h3>\n\nThe <code>SegmentedButton<\/code> shows a group of buttons. When the user clicks or taps one of the buttons, it stays in a pressed state. It automatically resizes the buttons to fit proportionally within the control. When no width is set, the control uses the available width.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false,"description":"use the <code>selectionChange<\/code> event instead.","since":"1.52"},"description":"SegmentedButton(sId?, mSettings?) : sap.m.SegmentedButton","name":"sap.m.SegmentedButton","prefix":"SegmentedButton","Experimental":false,"constructorDescription":"Constructor for a new <code>SegmentedButton<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getSelectedKey selectedKey} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getButtons buttons} : sap.m.Button[] (default)<\/li>\n<li>{@link #getItems items} : sap.m.SegmentedButtonItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedButton selectedButton} : (sap.ui.core.ID | sap.m.Button)<\/li>\n<li>{@link #getSelectedItem selectedItem} : (sap.ui.core.ID | sap.m.SegmentedButtonItem)<\/li>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireSelect(\n\t{\n\t\tbutton: ${button}, // sap.m.Button\n\t\tid: \"${id}\", // string\n\t\tkey: \"${key}\" // string\n\t}\n)\n","Deprecated":true,"helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.52 use the <code>selectionChange<\/code> event instead.<br>Fires event {@link #event:select select} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"use the <code>selectionChange<\/code> event instead.","since":"1.52"},"description":"fireSelect(mParameters?) : sap.m.SegmentedButton","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.SegmentedButton.fireSelect"},{"template":"fireSelectionChange(\n\t{\n\t\titem: ${item} // sap.m.SegmentedButtonItem\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:selectionChange selectionChange} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"use the <code>selectionChange<\/code> event instead.","since":"1.52"},"description":"fireSelectionChange(mParameters?) : sap.m.SegmentedButton","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.SegmentedButton.fireSelectionChange"},{"template":"new sap.m.SegmentedButtonItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\ticon: \"${icon}\", // string\n\t\tvisible: ${bVisible}, // boolean\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/SegmentedButtonItem","static":"true","extends":"sap.ui.core.Item","helpDescription":"Used for creating buttons for the {@link sap.m.SegmentedButton}. It is derived from the {@link sap.ui.core.Item}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SegmentedButtonItem(sId?, mSettings?) : sap.m.SegmentedButtonItem","name":"sap.m.SegmentedButtonItem","prefix":"SegmentedButtonItem","Experimental":false,"constructorDescription":"Constructor for a new <code>SegmentedButtonItem<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : string<\/li>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well."},{"template":"new sap.m.Select(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tname: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\twidth: ${\"auto\"}, // sap.ui.core.CSSSize\n\t\tmaxWidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tselectedKey: ${\"\"}, // string\n\t\tselectedItemId: ${\"\"}, // string\n\t\ticon: ${\"\"}, // sap.ui.core.URI\n\t\ttype: ${sap.m.SelectType.Default}, // sap.m.SelectType\n\t\tautoAdjustWidth: ${bAutoAdjustWidth}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tvalueStateText: ${\"\"}, // string\n\t\tshowSecondaryValues: ${bShowSecondaryValues}, // boolean\n\t\tforceSelection: ${bForceSelection}, // boolean\n\t\titems: [${items}], // sap.ui.core.Item[]\n\t\tselectedItem: ${selectedItem}, // (sap.ui.core.Item|string)\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/Select","static":"true","extends":"sap.ui.core.Control","helpDescription":"The <code>sap.m.Select<\/code> control provides a list of items that allows users to select an item.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"Select(sId?, mSettings?) : sap.m.Select","name":"sap.m.Select","prefix":"Select","Experimental":false,"constructorDescription":"Constructor for a new <code>sap.m.Select<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string (default: )<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getMaxWidth maxWidth} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getSelectedKey selectedKey} : string (default: )<\/li>\n<li>{@link #getSelectedItemId selectedItemId} : string (default: )<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getType type} : sap.m.SelectType (default: Default)<\/li>\n<li>{@link #getAutoAdjustWidth autoAdjustWidth} : boolean (default: false)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Initial)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getValueStateText valueStateText} : string (default: )<\/li>\n<li>{@link #getShowSecondaryValues showSecondaryValues} : boolean (default: false)<\/li>\n<li>{@link #getForceSelection forceSelection} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Item[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedItem selectedItem} : (sap.ui.core.ID | sap.ui.core.Item)<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireChange(\n\t{\n\t\tselectedItem: ${selectedItem} // sap.ui.core.Item\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:change change} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireChange(mParameters?) : sap.m.Select","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.Select.fireChange"},{"template":"new sap.m.SelectDialog(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\tnoDataText: \"${noDataText}\", // string\n\t\tmultiSelect: ${bMultiSelect}, // boolean\n\t\tgrowingThreshold: ${growingThreshold}, // int\n\t\tcontentWidth: ${contentWidth}, // sap.ui.core.CSSSize\n\t\trememberSelections: ${bRememberSelections}, // boolean\n\t\tcontentHeight: ${contentHeight}, // sap.ui.core.CSSSize\n\t\titems: [${items}], // sap.m.ListItemBase[]\n\t\tconfirm: [function (oEvent) {}, this], // function|array\n\t\tsearch: [function (oEvent) {}, this], // function|array\n\t\tliveChange: [function (oEvent) {}, this], // function|array\n\t\tcancel: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/SelectDialog","static":"true","extends":"sap.ui.core.Control","helpDescription":"<h3>Overview<\/h3> A SelectDialog is a dialog containing a list, search functionality to filter it and a confirmation/cancel button. The list used in the dialog is a growing list and can be filled with any kind of list item. <h3>Structure<\/h3> <h4>Dialog structure<\/h4> The select dialog has the following components: <ul> <li>Header - title of the dialog<\/li> <li>Search field - input field to enter search terms<\/li> <li>Info toolbar (only in multi-select) - displays the number of currently selected items<\/li> <li>Content - {@link sap.m.StandardListItem standard list items}, {@link sap.m.DisplayListItem display list items} or {@link sap.m.FeedListItem feed list items}<\/li> <li>Button toolbar - for confirmation/cancellation buttons <\/li> <\/ul> <h4>List structure & selection<\/h4> <ul> <li> The search field triggers the events <code>search<\/code> and <code>liveChange<\/code> where a filter function can be applied to the list binding. <\/li> <li> The growing functionality of the list does not support two-way Binding, so if you use this control with a JSON model make sure the binding mode is set to <code>OneWay<\/code> and that you update the selection model manually with the items passed in the <code>confirm<\/code> event. <\/li> <li> In the multi-select mode of the select dialog, checkboxes are provided for choosing multiple entries. <\/li> <li> You can set <code>rememberSelections<\/code> to true to store the current selection and load this state when the dialog is opened again. <\/li> <li> When cancelling the selection, the event <code>change<\/code> will be fired and the selection is restored to the state when the dialog was opened. <\/li> <\/ul> <h3>Usage<\/h3> <h4>When to use:<\/h4> <ul> <li>You need to select one or more entries from a comprehensive list that contains multiple attributes or values. <\/li> <\/ul> <h4>When not to use:<\/h4> <ul> <li> You need to pick one item from a predefined set of options. Use {@link sap.m.Select select} or {@link sap.m.ComboBox combobox} instead. <\/li> <li> You need to select a range of item. Use {@link sap.ui.comp.valuehelpdialog.ValueHelpDialog value help dialog instead. <\/li> <li> You need to be able to add your own values to an existing list. Use a {@link sap.m.Dialog dialog} instead. <\/li> <\/ul> <h3>Responsive Behavior<\/h3> <ul> <li> On phones, the select dialog takes up the whole screen. <\/li> <li> On desktop and tablet devices, the select dialog appears as a popover. <\/li> <\/ul>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SelectDialog(sId?, mSettings?) : sap.m.SelectDialog","name":"sap.m.SelectDialog","prefix":"SelectDialog","Experimental":false,"constructorDescription":"Constructor for a new SelectDialog.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getNoDataText noDataText} : string<\/li>\n<li>{@link #getMultiSelect multiSelect} : boolean (default: false)<\/li>\n<li>{@link #getGrowingThreshold growingThreshold} : int<\/li>\n<li>{@link #getContentWidth contentWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getRememberSelections rememberSelections} : boolean (default: false)<\/li>\n<li>{@link #getContentHeight contentHeight} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.ListItemBase[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:confirm confirm} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:search search} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireConfirm(\n\t{\n\t\tselectedItem: ${selectedItem}, // sap.m.StandardListItem\n\t\tselectedItems: [${selectedItems}], // [object Object][]\n\t\tselectedContexts: \"${selectedContexts}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:confirm confirm} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireConfirm(mParameters?) : sap.m.SelectDialog","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.SelectDialog.fireConfirm"},{"template":"fireLiveChange(\n\t{\n\t\tvalue: \"${value}\", // string\n\t\titemsBinding: ${itemsBinding} // any\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:liveChange liveChange} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireLiveChange(mParameters?) : sap.m.SelectDialog","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.SelectDialog.fireLiveChange"},{"template":"fireSearch(\n\t{\n\t\tvalue: \"${value}\", // string\n\t\titemsBinding: ${itemsBinding} // any\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:search search} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireSearch(mParameters?) : sap.m.SelectDialog","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.SelectDialog.fireSearch"},{"template":"new sap.m.SelectList(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tenabled: ${bEnabled}, // boolean\n\t\twidth: ${\"auto\"}, // sap.ui.core.CSSSize\n\t\tmaxWidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tselectedKey: ${\"\"}, // string\n\t\tselectedItemId: ${\"\"}, // string\n\t\tshowSecondaryValues: ${bShowSecondaryValues}, // boolean\n\t\tkeyboardNavigationMode: ${sap.m.SelectListKeyboardNavigationMode.Delimited}, // sap.m.SelectListKeyboardNavigationMode\n\t\titems: [${items}], // sap.ui.core.Item[]\n\t\tselectedItem: ${selectedItem}, // (sap.ui.core.Item|string)\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselectionChange: [function (oEvent) {}, this], // function|array\n\t\titemPress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/SelectList","static":"true","extends":"sap.ui.core.Control","helpDescription":"The <code>sap.m.SelectList<\/code> displays a list of items that allows the user to select an item.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SelectList(sId?, mSettings?) : sap.m.SelectList","name":"sap.m.SelectList","prefix":"SelectList","Experimental":false,"constructorDescription":"Constructor for a new <code>sap.m.SelectList<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getMaxWidth maxWidth} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getSelectedKey selectedKey} : string (default: )<\/li>\n<li>{@link #getSelectedItemId selectedItemId} : string (default: )<\/li>\n<li>{@link #getShowSecondaryValues showSecondaryValues} : boolean (default: false)<\/li>\n<li>{@link #getKeyboardNavigationMode keyboardNavigationMode} : sap.m.SelectListKeyboardNavigationMode (default: Delimited)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Item[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedItem selectedItem} : (sap.ui.core.ID | sap.ui.core.Item)<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:itemPress itemPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireItemPress(\n\t{\n\t\titem: ${item} // sap.ui.core.Item\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:itemPress itemPress} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireItemPress(mParameters?) : sap.m.SelectList","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.SelectList.fireItemPress"},{"template":"fireSelectionChange(\n\t{\n\t\tselectedItem: ${selectedItem} // sap.ui.core.Item\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:selectionChange selectionChange} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireSelectionChange(mParameters?) : sap.m.SelectList","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.SelectList.fireSelectionChange"},{"template":"new sap.m.SelectionDetails(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\titems: [${items}], // sap.m.SelectionDetailsItem[]\n\t\tactions: [${actions}], // sap.ui.core.Item[]\n\t\tactionGroups: [${actionGroups}], // sap.ui.core.Item[]\n\t\tbeforeOpen: [function (oEvent) {}, this], // function|array\n\t\tbeforeClose: [function (oEvent) {}, this], // function|array\n\t\tnavigate: [function (oEvent) {}, this], // function|array\n\t\tactionPress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/SelectionDetails","static":"true","extends":"sap.ui.core.Control","helpDescription":"The protected control provides a popover that displays the details of the items selected in the chart. This control should only be used in the toolbars of sap.suite.ui.commons.ChartContainer and sap.ui.comp.smartchart.SmartChart controls. Initially, the control is rendered as a button that opens the popup after clicking on it. <b><i>Note:<\/i><\/b>It is protected and should only be used within the framework itself.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SelectionDetails(sId?, mSettings?) : sap.m.SelectionDetails","name":"sap.m.SelectionDetails","prefix":"SelectionDetails","Experimental":false,"constructorDescription":"Constructor for a new SelectionDetails.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.SelectionDetailsItem[] (default)<\/li>\n<li>{@link #getActions actions} : sap.ui.core.Item[]<\/li>\n<li>{@link #getActionGroups actionGroups} : sap.ui.core.Item[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:beforeOpen beforeOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeClose beforeClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:navigate navigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:actionPress actionPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireActionPress(\n\t{\n\t\taction: ${action}, // sap.ui.core.Item\n\t\titems: ${items}, // sap.m.SelectionDetailsItem\n\t\tlevel: ${level} // sap.m.SelectionDetailsActionLevel\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:actionPress actionPress} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireActionPress(mParameters?) : sap.m.SelectionDetails","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.SelectionDetails.fireActionPress"},{"template":"fireNavigate(\n\t{\n\t\titem: ${item}, // sap.m.SelectionDetailsItem\n\t\tdirection: \"${direction}\", // string\n\t\tcontent: ${content} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:navigate navigate} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireNavigate(mParameters?) : sap.m.SelectionDetails","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.SelectionDetails.fireNavigate"},{"template":"new sap.m.SelectionDetailsItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tenableNav: ${bEnableNav}, // boolean\n\t\tlines: [${lines}], // sap.m.SelectionDetailsItemLine[]\n\t\tactions: [${actions}] // sap.ui.core.Item[]\n\t}\n)\n","module":"sap/m/SelectionDetailsItem","static":"true","extends":"sap.ui.core.Element","helpDescription":"This protected element provides an item for {@link sap.m.SelectionDetails} that is shown inside a list. The item includes SelectionDetailsItemLine as its lines that are displayed in one block above the optional actions. <b><i>Note:<\/i><\/b>It is protected and should only be used within the framework itself.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SelectionDetailsItem(sId?, mSettings?) : sap.m.SelectionDetailsItem","name":"sap.m.SelectionDetailsItem","prefix":"SelectionDetailsItem","Experimental":false,"constructorDescription":"Constructor for a new SelectionDetailsItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnableNav enableNav} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getLines lines} : sap.m.SelectionDetailsItemLine[]<\/li>\n<li>{@link #getActions actions} : sap.ui.core.Item[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."},{"template":"new sap.m.SelectionDetailsItemLine(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tlabel: \"${label}\", // string\n\t\tvalue: ${value}, // any\n\t\tdisplayValue: \"${displayValue}\", // string\n\t\tunit: \"${unit}\" // string\n\t}\n)\n","module":"sap/m/SelectionDetailsItemLine","static":"true","extends":"sap.ui.core.Element","helpDescription":"This Element provides a means to fill an {@link sap.m.SelectionDetailsItem} with content. It is used for a form-like display of a label followed by a value with an optional unit. If the unit is used, the value is displayed bold. <b><i>Note:<\/i><\/b>It is protected and should ony be used within the framework itself.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SelectionDetailsItemLine(sId?, mSettings?) : sap.m.SelectionDetailsItemLine","name":"sap.m.SelectionDetailsItemLine","prefix":"SelectionDetailsItemLine","Experimental":false,"constructorDescription":"Constructor for a new SelectionDetailsItemLine.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLabel label} : string<\/li>\n<li>{@link #getValue value} : any<\/li>\n<li>{@link #getDisplayValue displayValue} : string<\/li>\n<li>{@link #getUnit unit} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."},{"template":"new sap.m.Shell(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\tlogo: ${logo}, // sap.ui.core.URI\n\t\tshowLogout: ${bShowLogout}, // boolean\n\t\theaderRightText: \"${headerRightText}\", // string\n\t\tappWidthLimited: ${bAppWidthLimited}, // boolean\n\t\tbackgroundColor: ${backgroundColor}, // sap.ui.core.CSSColor\n\t\tbackgroundImage: ${backgroundImage}, // sap.ui.core.URI\n\t\tbackgroundRepeat: ${bBackgroundRepeat}, // boolean\n\t\tbackgroundOpacity: ${1}, // float\n\t\thomeIcon: ${homeIcon}, // object\n\t\ttitleLevel: ${sap.ui.core.TitleLevel.H1}, // sap.ui.core.TitleLevel\n\t\tapp: ${app}, // sap.ui.core.Control\n\t\tlogout: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/Shell","static":"true","extends":"sap.ui.core.Control","helpDescription":"The Shell control can be used as root element of applications. It can contain an App or a <code>SplitApp<\/code> control. The Shell provides some overarching functionality for the overall application and takes care of visual adaptation, such as a frame around the App, on desktop browser platforms.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"Shell(sId?, mSettings?) : sap.m.Shell","name":"sap.m.Shell","prefix":"Shell","Experimental":false,"constructorDescription":"Constructor for a new Shell.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getLogo logo} : sap.ui.core.URI<\/li>\n<li>{@link #getShowLogout showLogout} : boolean (default: true)<\/li>\n<li>{@link #getHeaderRightText headerRightText} : string<\/li>\n<li>{@link #getAppWidthLimited appWidthLimited} : boolean (default: true)<\/li>\n<li>{@link #getBackgroundColor backgroundColor} : sap.ui.core.CSSColor<\/li>\n<li>{@link #getBackgroundImage backgroundImage} : sap.ui.core.URI<\/li>\n<li>{@link #getBackgroundRepeat backgroundRepeat} : boolean (default: false)<\/li>\n<li>{@link #getBackgroundOpacity backgroundOpacity} : float (default: 1)<\/li>\n<li>{@link #getHomeIcon homeIcon} : object<\/li>\n<li>{@link #getTitleLevel titleLevel} : sap.ui.core.TitleLevel (default: H1)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getApp app} : sap.ui.core.Control (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:logout logout} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.SlideTile(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tdisplayTime: ${5000}, // int\n\t\ttransitionTime: ${500}, // int\n\t\tscope: ${sap.m.GenericTileScope.Display}, // sap.m.GenericTileScope\n\t\ttiles: [${tiles}], // sap.m.GenericTile[]\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/SlideTile","static":"true","extends":"sap.ui.core.Control","helpDescription":"The control that displays multiple GenericTile controls as changing slides.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SlideTile(sId?, mSettings?) : sap.m.SlideTile","name":"sap.m.SlideTile","prefix":"SlideTile","Experimental":false,"constructorDescription":"Constructor for a new sap.m.SlideTile control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDisplayTime displayTime} : int (default: 5000)<\/li>\n<li>{@link #getTransitionTime transitionTime} : int (default: 500)<\/li>\n<li>{@link #getScope scope} : sap.m.GenericTileScope (default: Display)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTiles tiles} : sap.m.GenericTile[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"firePress(\n\t{\n\t\tscope: ${scope}, // sap.m.GenericTileScope\n\t\taction: \"${action}\", // string\n\t\tdomRef: ${domRef} // any\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:press press} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"firePress(mParameters?) : sap.m.SlideTile","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.SlideTile.firePress"},{"template":"new sap.m.Slider(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tname: ${\"\"}, // string\n\t\tmin: ${0}, // float\n\t\tmax: ${100}, // float\n\t\tstep: ${1}, // float\n\t\tprogress: ${bProgress}, // boolean\n\t\tvalue: ${0}, // float\n\t\tshowHandleTooltip: ${bShowHandleTooltip}, // boolean\n\t\tshowAdvancedTooltip: ${bShowAdvancedTooltip}, // boolean\n\t\tinputsAsTooltips: ${bInputsAsTooltips}, // boolean\n\t\tenableTickmarks: ${bEnableTickmarks}, // boolean\n\t\tscale: ${scale}, // sap.m.IScale\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tliveChange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/Slider","static":"true","extends":"sap.ui.core.Control","helpDescription":"<strong><i>Overview<\/i><\/strong>\n\nA {@link sap.m.Slider} control represents a numerical range and a handle. The purpose of the control is to enable visual selection of a value in a continuous numerical range by moving an adjustable handle.\n\n<strong>Notes:<\/strong> <ul><li>Only horizontal sliders are possible. <\/li> <li>The handle can be moved in steps of predefined size. This is done with the <code>step<\/code> property. <\/li> <li>Setting the property <code>showAdvancedTooltips<\/code> shows an input field above the handle<\/li> <li>Setting the property <code>inputsAsTooltips<\/code> enables the user to enter a specific value in the handle's tooltip. <\/li> <\/ul> <strong><i>Structure<\/i><\/strong>\n\nThe most important properties of the Slider are: <ul> <li> min - The minimum value of the slider range <\/li> <li> max - The maximum value of the slider range <\/li> <li> value - The current value of the slider<\/li> <li> progress - Determines if a progress bar will be shown on the slider range<\/li> <li> step - Determines the increments in which the slider will move<\/li> <\/ul> These properties determine the visualization of the tooltips: <ul> <li> showAdvancedTooltips - Determines if a tooltip should be displayed above the handle<\/li> <li> inputsAsTooltips - Determines if the tooltip displayed above the slider's handle should include an input field<\/li> <\/ul> <strong><i>Usage<\/i><\/strong>\n\nThe most common usecase is to select values on a continuous numerical scale (e.g. temperature, volume, etc. ).\n\n<strong><i>Responsive Behavior<\/i><\/strong>\n\nThe <code>sap.m.Slider<\/code> control adjusts to the size of its parent container by recalculating and resizing the width of the control. You can move the slider handle in several different ways: <ul> <li> Drag and drop to the desired value<\/li> <li> Click/tap on the range bar to move the handle to that location <\/li> <li> Enter the desired value in the input field (if available) <\/li> <li> Keyboard (Arrow keys, \"+\" and \"-\") <\/li> <\/ul>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"Slider(sId?, mSettings?) : sap.m.Slider","name":"sap.m.Slider","prefix":"Slider","Experimental":false,"constructorDescription":"Constructor for a new <code>Slider<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getName name} : string (default: )<\/li>\n<li>{@link #getMin min} : float (default: 0)<\/li>\n<li>{@link #getMax max} : float (default: 100)<\/li>\n<li>{@link #getStep step} : float (default: 1)<\/li>\n<li>{@link #getProgress progress} : boolean (default: true)<\/li>\n<li>{@link #getValue value} : float (default: 0)<\/li>\n<li>{@link #getShowHandleTooltip showHandleTooltip} : boolean (default: true)<\/li>\n<li>{@link #getShowAdvancedTooltip showAdvancedTooltip} : boolean (default: false)<\/li>\n<li>{@link #getInputsAsTooltips inputsAsTooltips} : boolean (default: false)<\/li>\n<li>{@link #getEnableTickmarks enableTickmarks} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getScale scale} : sap.m.IScale (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireChange(\n\t{\n\t\tvalue: ${value} // float\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:change change} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireChange(mParameters?) : sap.m.Slider","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.Slider.fireChange"},{"template":"fireLiveChange(\n\t{\n\t\tvalue: ${value} // float\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:liveChange liveChange} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireLiveChange(mParameters?) : sap.m.Slider","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.Slider.fireLiveChange"},{"template":"new sap.m.SplitApp(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tdefaultTransitionNameDetail: ${\"slide\"}, // string\n\t\tdefaultTransitionNameMaster: ${\"slide\"}, // string\n\t\tmode: ${sap.m.SplitAppMode.ShowHideMode}, // sap.m.SplitAppMode\n\t\tmasterButtonText: \"${masterButtonText}\", // string\n\t\tmasterButtonTooltip: \"${masterButtonTooltip}\", // string\n\t\tbackgroundColor: \"${backgroundColor}\", // string\n\t\tbackgroundImage: ${backgroundImage}, // sap.ui.core.URI\n\t\tbackgroundRepeat: ${bBackgroundRepeat}, // boolean\n\t\tbackgroundOpacity: ${1}, // float\n\t\tmasterPages: [${masterPages}], // sap.ui.core.Control[]\n\t\tdetailPages: [${detailPages}], // sap.ui.core.Control[]\n\t\tinitialDetail: ${initialDetail}, // (sap.ui.core.Control|string)\n\t\tinitialMaster: ${initialMaster}, // (sap.ui.core.Control|string)\n\t\tmasterNavigate: [function (oEvent) {}, this], // function|array\n\t\tafterMasterNavigate: [function (oEvent) {}, this], // function|array\n\t\tmasterButton: [function (oEvent) {}, this], // function|array\n\t\tbeforeMasterOpen: [function (oEvent) {}, this], // function|array\n\t\tafterMasterOpen: [function (oEvent) {}, this], // function|array\n\t\tbeforeMasterClose: [function (oEvent) {}, this], // function|array\n\t\tafterMasterClose: [function (oEvent) {}, this], // function|array\n\t\tdetailNavigate: [function (oEvent) {}, this], // function|array\n\t\tafterDetailNavigate: [function (oEvent) {}, this], // function|array\n\t\thomeIcon: ${homeIcon}, // any\n\t\torientationChange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/SplitApp","static":"true","extends":"sap.m.SplitContainer","helpDescription":"SplitApp is another possible root element of an SAPUI5 mobile application besides {@link sap.m.App}. It contains two NavContainers if running on tablet or desktop, and one on phone. The display of master NavContainer depends on the portrait/landscape mode of the device and the mode of SplitApp. <h3>Structure<\/h3> The SplitApp divides the screen into two areas: <ul> <li>Master area - contains a list of available items where the user can search and filter.<\/li> <li>Details area - contains a control which shows further details on the item(s) selected from the master view.<\/li> <\/ul> Both areas have separate headers and footer bars with navigation and actions. <h3>Usage<\/h3> <h4>When to use<\/h4> <ul> <li>You need to review and process different items quickly with minimal navigation.<\/li> <\/ul> <h4>When not to use<\/h4> <ul> <li>You need to offer complex filters for the list of items.<\/li> <li>You need to see different attributes for each item in the list, and compare these values across items.<\/li> <li>You want to display a single object. Do not use the master list to display different facets of the same object.<\/li> <\/ul> <h3>Responsive Behavior<\/h3> On narrow screens for phones (or tablet devices in portrait mode), the master list and the details are split into two separate pages.\n\nThe user can navigate between the list and details, and see all the available information for each area.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SplitApp(sId?, mSettings?) : sap.m.SplitApp","name":"sap.m.SplitApp","prefix":"SplitApp","Experimental":false,"constructorDescription":"Constructor for a new SplitApp.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getHomeIcon homeIcon} : any<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:orientationChange orientationChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.SplitContainer#constructor sap.m.SplitContainer}\ncan be used as well."},{"template":"fireOrientationChange(\n\t{\n\t\tlandscape: ${bLandscape} // boolean\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:orientationChange orientationChange} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireOrientationChange(mParameters?) : sap.m.SplitApp","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.SplitApp.fireOrientationChange"},{"template":"new sap.m.SplitContainer(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tdefaultTransitionNameDetail: ${\"slide\"}, // string\n\t\tdefaultTransitionNameMaster: ${\"slide\"}, // string\n\t\tmode: ${sap.m.SplitAppMode.ShowHideMode}, // sap.m.SplitAppMode\n\t\tmasterButtonText: \"${masterButtonText}\", // string\n\t\tmasterButtonTooltip: \"${masterButtonTooltip}\", // string\n\t\tbackgroundColor: \"${backgroundColor}\", // string\n\t\tbackgroundImage: ${backgroundImage}, // sap.ui.core.URI\n\t\tbackgroundRepeat: ${bBackgroundRepeat}, // boolean\n\t\tbackgroundOpacity: ${1}, // float\n\t\tmasterPages: [${masterPages}], // sap.ui.core.Control[]\n\t\tdetailPages: [${detailPages}], // sap.ui.core.Control[]\n\t\tinitialDetail: ${initialDetail}, // (sap.ui.core.Control|string)\n\t\tinitialMaster: ${initialMaster}, // (sap.ui.core.Control|string)\n\t\tmasterNavigate: [function (oEvent) {}, this], // function|array\n\t\tafterMasterNavigate: [function (oEvent) {}, this], // function|array\n\t\tmasterButton: [function (oEvent) {}, this], // function|array\n\t\tbeforeMasterOpen: [function (oEvent) {}, this], // function|array\n\t\tafterMasterOpen: [function (oEvent) {}, this], // function|array\n\t\tbeforeMasterClose: [function (oEvent) {}, this], // function|array\n\t\tafterMasterClose: [function (oEvent) {}, this], // function|array\n\t\tdetailNavigate: [function (oEvent) {}, this], // function|array\n\t\tafterDetailNavigate: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/SplitContainer","static":"true","extends":"sap.ui.core.Control","helpDescription":"SplitContainer maintains two NavContainers if running on tablet or desktop and one NavContainer - on phone. The display of the master NavContainer depends on the portrait/landscape mode of the device and the mode of SplitContainer.\n\nNOTE: This control must be rendered as a full screen control in order to make the show/hide master area work properly.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SplitContainer(sId?, mSettings?) : sap.m.SplitContainer","name":"sap.m.SplitContainer","prefix":"SplitContainer","Experimental":false,"constructorDescription":"Constructor for a new SplitContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getDefaultTransitionNameDetail defaultTransitionNameDetail} : string (default: slide)<\/li>\n<li>{@link #getDefaultTransitionNameMaster defaultTransitionNameMaster} : string (default: slide)<\/li>\n<li>{@link #getMode mode} : sap.m.SplitAppMode (default: ShowHideMode)<\/li>\n<li>{@link #getMasterButtonText masterButtonText} : string<\/li>\n<li>{@link #getMasterButtonTooltip masterButtonTooltip} : string<\/li>\n<li>{@link #getBackgroundColor backgroundColor} : string<\/li>\n<li>{@link #getBackgroundImage backgroundImage} : sap.ui.core.URI<\/li>\n<li>{@link #getBackgroundRepeat backgroundRepeat} : boolean (default: false)<\/li>\n<li>{@link #getBackgroundOpacity backgroundOpacity} : float (default: 1)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getMasterPages masterPages} : sap.ui.core.Control[]<\/li>\n<li>{@link #getDetailPages detailPages} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getInitialDetail initialDetail} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<li>{@link #getInitialMaster initialMaster} : (sap.ui.core.ID | sap.ui.core.Control)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:masterNavigate masterNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterMasterNavigate afterMasterNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:masterButton masterButton} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeMasterOpen beforeMasterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterMasterOpen afterMasterOpen} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeMasterClose beforeMasterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterMasterClose afterMasterClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:detailNavigate detailNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:afterDetailNavigate afterDetailNavigate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireAfterDetailNavigate(\n\t{\n\t\tfrom: ${from}, // sap.ui.core.Control\n\t\tfromId: \"${fromId}\", // string\n\t\tto: ${to}, // sap.ui.core.Control\n\t\ttoId: \"${toId}\", // string\n\t\tfirstTime: ${bFirstTime}, // boolean\n\t\tisTo: ${bIsTo}, // boolean\n\t\tisBack: ${bIsBack}, // boolean\n\t\tisBackToTop: ${bIsBackToTop}, // boolean\n\t\tisBackToPage: ${bIsBackToPage}, // boolean\n\t\tdirection: \"${direction}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:afterDetailNavigate afterDetailNavigate} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireAfterDetailNavigate(mParameters?) : sap.m.SplitContainer","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.SplitContainer.fireAfterDetailNavigate"},{"template":"fireAfterMasterNavigate(\n\t{\n\t\tfrom: ${from}, // sap.ui.core.Control\n\t\tfromId: \"${fromId}\", // string\n\t\tto: ${to}, // sap.ui.core.Control\n\t\ttoId: \"${toId}\", // string\n\t\tfirstTime: ${bFirstTime}, // boolean\n\t\tisTo: ${bIsTo}, // boolean\n\t\tisBack: ${bIsBack}, // boolean\n\t\tisBackToTop: ${bIsBackToTop}, // boolean\n\t\tisBackToPage: ${bIsBackToPage}, // boolean\n\t\tdirection: \"${direction}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:afterMasterNavigate afterMasterNavigate} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireAfterMasterNavigate(mParameters?) : sap.m.SplitContainer","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.SplitContainer.fireAfterMasterNavigate"},{"template":"fireDetailNavigate(\n\t{\n\t\tfrom: ${from}, // sap.ui.core.Control\n\t\tfromId: \"${fromId}\", // string\n\t\tto: ${to}, // sap.ui.core.Control\n\t\ttoId: \"${toId}\", // string\n\t\tfirstTime: ${bFirstTime}, // boolean\n\t\tisTo: ${bIsTo}, // boolean\n\t\tisBack: ${bIsBack}, // boolean\n\t\tisBackToTop: ${bIsBackToTop}, // boolean\n\t\tisBackToPage: ${bIsBackToPage}, // boolean\n\t\tdirection: \"${direction}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:detailNavigate detailNavigate} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireDetailNavigate(mParameters?) : boolean","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.SplitContainer.fireDetailNavigate"},{"template":"fireMasterNavigate(\n\t{\n\t\tfrom: ${from}, // sap.ui.core.Control\n\t\tfromId: \"${fromId}\", // string\n\t\tto: ${to}, // sap.ui.core.Control\n\t\ttoId: \"${toId}\", // string\n\t\tfirstTime: ${bFirstTime}, // boolean\n\t\tisTo: ${bIsTo}, // boolean\n\t\tisBack: ${bIsBack}, // boolean\n\t\tisBackToTop: ${bIsBackToTop}, // boolean\n\t\tisBackToPage: ${bIsBackToPage}, // boolean\n\t\tdirection: \"${direction}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:masterNavigate masterNavigate} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireMasterNavigate(mParameters?) : boolean","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.SplitContainer.fireMasterNavigate"},{"template":"new sap.m.StandardListItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\tdescription: \"${description}\", // string\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\ticonInset: ${bIconInset}, // boolean\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\tactiveIcon: ${activeIcon}, // sap.ui.core.URI\n\t\tinfo: \"${info}\", // string\n\t\tinfoState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tadaptTitleSize: ${bAdaptTitleSize}, // boolean\n\t\ttitleTextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tinfoTextDirection: ${sap.ui.core.TextDirection.Inherit} // sap.ui.core.TextDirection\n\t}\n)\n","module":"sap/m/StandardListItem","static":"true","extends":"sap.m.ListItemBase","helpDescription":"<code>sap.m.StandardListItem<\/code> is a list item providing the most common use cases, e.g. image, title and description.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"StandardListItem(sId?, mSettings?) : sap.m.StandardListItem","name":"sap.m.StandardListItem","prefix":"StandardListItem","Experimental":false,"constructorDescription":"Constructor for a new StandardListItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getDescription description} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getIconInset iconInset} : boolean (default: true)<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<li>{@link #getActiveIcon activeIcon} : sap.ui.core.URI<\/li>\n<li>{@link #getInfo info} : string<\/li>\n<li>{@link #getInfoState infoState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getAdaptTitleSize adaptTitleSize} : boolean (default: true)<\/li>\n<li>{@link #getTitleTextDirection titleTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getInfoTextDirection infoTextDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListItemBase#constructor sap.m.ListItemBase}\ncan be used as well."},{"template":"new sap.m.StandardTile(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tremovable: ${bRemovable}, // boolean\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\tinfo: \"${info}\", // string\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\tactiveIcon: ${activeIcon}, // sap.ui.core.URI\n\t\tnumber: \"${number}\", // string\n\t\tnumberUnit: \"${numberUnit}\", // string\n\t\tinfoState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\ttype: ${sap.m.StandardTileType.None}, // sap.m.StandardTileType\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\tariaDescribedBy: [${ariaDescribedBy}] // (sap.ui.core.Control|string)[]\n\t}\n)\n","module":"sap/m/StandardTile","static":"true","extends":"sap.m.Tile","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.50 use {@link sap.m.GenericTile} instead<br>The StandardTile control is displayed in the tile container.","Deprecated":true,"category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"use {@link sap.m.GenericTile} instead","since":"1.50"},"description":"StandardTile(sId?, mSettings?) : sap.m.StandardTile","name":"sap.m.StandardTile","prefix":"StandardTile","Experimental":false,"constructorDescription":"Constructor for a new StandardTile.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getInfo info} : string<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<li>{@link #getActiveIcon activeIcon} : sap.ui.core.URI<\/li>\n<li>{@link #getNumber number} : string<\/li>\n<li>{@link #getNumberUnit numberUnit} : string<\/li>\n<li>{@link #getInfoState infoState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getType type} : sap.m.StandardTileType (default: None)<\/li>\n<li>{@link #getIconDensityAware iconDensityAware} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Tile#constructor sap.m.Tile}\ncan be used as well."},{"template":"new sap.m.StandardTreeItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this], // function|array\n\t\ttitle: ${\"\"}, // string\n\t\ticon: ${icon} // sap.ui.core.URI\n\t}\n)\n","module":"sap/m/StandardTreeItem","static":"true","extends":"sap.m.TreeItemBase","helpDescription":"The <code>sap.m.StandardTreeItem<\/code> is a tree item providing a title, image, etc.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"StandardTreeItem(sId?, mSettings?) : sap.m.StandardTreeItem","name":"sap.m.StandardTreeItem","prefix":"StandardTreeItem","Experimental":false,"constructorDescription":"Constructor for a new StandardTreeItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.TreeItemBase#constructor sap.m.TreeItemBase}\ncan be used as well."},{"template":"new sap.m.StepInput(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tmin: ${min}, // float\n\t\tmax: ${max}, // float\n\t\tstep: ${1}, // float\n\t\tlargerStep: ${2}, // float\n\t\tvalue: ${0}, // float\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\trequired: ${bRequired}, // boolean\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tdisplayValuePrecision: ${0}, // int\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/StepInput","static":"true","extends":"sap.ui.core.Control","helpDescription":"Allows the user to change the input values with predefined increments (steps).\n\n<h3>Overview<\/h3>\n\nThe <code>StepInput<\/code> consists of an input field and buttons with icons to increase/decrease the value.\n\nThe user can change the value of the control by pressing the increase/decrease buttons, by typing a number directly, by using the keyboard up/down and page up/down, or by using the mouse scroll wheel. Decimal values are supported.\n\n<h3>Usage<\/h3>\n\nThe default step is 1 but the app developer can set a different one.\n\nOn desktop, the control supports a larger step, when using the keyboard page up/down keys. You can set a multiple of the step with the use of the <code>largerStep<\/code> property. The default value is 2 (two times the set step). For example, when using the keyboard page up/down keys the value increases/decreases with a double of the default step. If the set step is 2, the larger step is also 2 and the current value is 1, using the page up key will increase the value to 5 (1 + 2*2).\n\nApp developers can set a maximum and minimum value for the <code>StepInput<\/code>. The increase/decrease button and the up/down keyboard navigation become disabled when the value reaches the max/min or a new value is entered from the input which is greater/less than the max/min.\n\n<i>When to use<\/i> <ul> <li>To adjust amounts, quantities, or other values quickly.<\/li> <li>To adjust values for a specific step.<\/li> <\/ul>\n\n<i>When not to use<\/i> <ul> <li>To enter a static number (for example, postal code, phone number, or ID). In this case, use the regular {@link sap.m.Input} instead.<\/li> <li>To display a value that rarely needs to be adjusted and does not pertain to a particular step. In this case, use the regular {@link sap.m.Input} instead.<\/li> <li>To enter dates and times. In this case, use the {@link sap.m.DatePicker}, {@link sap.m.DateRangeSelection}, {@link sap.m.TimePicker}, or {@link sap.m.DateTimePicker} instead.<\/li> <\/ul>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"StepInput(sId?, mSettings?) : sap.m.StepInput","name":"sap.m.StepInput","prefix":"StepInput","Experimental":false,"constructorDescription":"Constructor for a new <code>StepInput<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMin min} : float<\/li>\n<li>{@link #getMax max} : float<\/li>\n<li>{@link #getStep step} : float (default: 1)<\/li>\n<li>{@link #getLargerStep largerStep} : float (default: 2)<\/li>\n<li>{@link #getValue value} : float (default: 0)<\/li>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getPlaceholder placeholder} : string<\/li>\n<li>{@link #getRequired required} : boolean (default: false)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getValueState valueState} : sap.ui.core.ValueState (default: None)<\/li>\n<li>{@link #getValueStateText valueStateText} : string<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getDisplayValuePrecision displayValuePrecision} : int (default: 0)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireChange(\n\t{\n\t\tvalue: \"${value}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:change change} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireChange(mParameters?) : sap.m.StepInput","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.StepInput.fireChange"},{"template":"new sap.m.SuggestionItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\ticon: ${\"\"}, // string\n\t\tdescription: ${\"\"} // string\n\t}\n)\n","module":"sap/m/SuggestionItem","static":"true","extends":"sap.ui.core.Item","helpDescription":"Display suggestion list items.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SuggestionItem(sId?, mSettings?) : sap.m.SuggestionItem","name":"sap.m.SuggestionItem","prefix":"SuggestionItem","Experimental":false,"constructorDescription":"Constructor for a new SuggestionItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : string (default: )<\/li>\n<li>{@link #getDescription description} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well."},{"template":"new sap.m.Switch(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tstate: ${bState}, // boolean\n\t\tcustomTextOn: ${\"\"}, // string\n\t\tcustomTextOff: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\tname: ${\"\"}, // string\n\t\ttype: ${sap.m.SwitchType.Default}, // sap.m.SwitchType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/Switch","static":"true","extends":"sap.ui.core.Control","helpDescription":"A switch is a user interface control on mobile devices that is used for change between binary states. The user can also drag the button handle or tap to change the state.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"Switch(sId?, mSettings?) : sap.m.Switch","name":"sap.m.Switch","prefix":"Switch","Experimental":false,"constructorDescription":"Constructor for a new Switch.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getState state} : boolean (default: false)<\/li>\n<li>{@link #getCustomTextOn customTextOn} : string (default: )<\/li>\n<li>{@link #getCustomTextOff customTextOff} : string (default: )<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getName name} : string (default: )<\/li>\n<li>{@link #getType type} : sap.m.SwitchType (default: Default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireChange(\n\t{\n\t\tstate: ${bState} // boolean\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:change change} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireChange(mParameters?) : sap.m.Switch","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.Switch.fireChange"},{"template":"new sap.m.TabContainer(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tshowAddNewButton: ${bShowAddNewButton}, // boolean\n\t\titems: [${items}], // sap.m.TabContainerItem[]\n\t\tselectedItem: ${selectedItem}, // (sap.m.TabContainerItem|string)\n\t\titemClose: [function (oEvent) {}, this], // function|array\n\t\titemSelect: [function (oEvent) {}, this], // function|array\n\t\taddNewButtonPress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/TabContainer","static":"true","extends":"sap.ui.core.Control","helpDescription":"A container control for managing multiple tabs, allowing the user to open and edit different items simultaneously.\n\n<h3>Overview<\/h3>\n\nThe control contains a <code>TabStrip<\/code> area where the user can choose which tab to view/edit. When the open tabs are more than what can be displayed on the screen, there is an overflow mechanism. To access the tabs hidden in the overflow area, the user has to either use the overflow button (left or right arrow) to scroll them horizontally or the overflow overview button (down arrow) and view all open items as a list.\n\nEach tab has a title and a <i>Close Tab<\/i> button. The title is truncated, if it's longer than 25 characters. On desktop, the <i>Close Tab<\/i> button is displayed on the currently active tab and for the other tabs it appears on mouse hover. On mobile devices, the <i>Close Tab<\/i> buttons are always visible.\n\nTo show that the open items have unsaved changes, the corresponding tabs can display an asterisk (*) after the title as a visual indication that the item is not saved. This is managed by the app developer using {@link sap.m.TabContainerItem TabContainerItem}'s <code>modified<\/code> property.\n\n<h3>Usage<\/h3>\n\nThe <code>TabContainer<\/code> can have an <i>Add New Tab<\/i> button, which appears as a '+' icon on the top-right area of the control. When the user clicks or taps this button, the <code>addNewButtonPress<\/code> event is fired.\n\n<h3>Responsive behavior<\/h3>\n\nThe <code>TabContainer<\/code> is a full-page container that takes 100% of its parent width and height. As the control is expected to occupy the whole parent, it should be the only child of its parent.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"TabContainer(sId?, mSettings?) : sap.m.TabContainer","name":"sap.m.TabContainer","prefix":"TabContainer","Experimental":false,"constructorDescription":"Constructor for a new <code>TabContainer<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShowAddNewButton showAddNewButton} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.TabContainerItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedItem selectedItem} : (sap.ui.core.ID | sap.m.TabContainerItem)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemClose itemClose} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:itemSelect itemSelect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:addNewButtonPress addNewButtonPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireItemClose(\n\t{\n\t\titem: ${item} // sap.m.TabContainerItem\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:itemClose itemClose} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireItemClose(mParameters?) : boolean","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.TabContainer.fireItemClose"},{"template":"fireItemSelect(\n\t{\n\t\titem: ${item} // sap.m.TabContainerItem\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:itemSelect itemSelect} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireItemSelect(mParameters?) : boolean","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.TabContainer.fireItemSelect"},{"template":"new sap.m.TabContainerItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tname: ${\"\"}, // string\n\t\tkey: \"${key}\", // string\n\t\tmodified: ${bModified}, // boolean\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\titemPropertyChanged: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/TabContainerItem","static":"true","extends":"sap.ui.core.Element","helpDescription":"An item to be used in a TabContainer.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"TabContainerItem(sId?, mSettings?) : sap.m.TabContainerItem","name":"sap.m.TabContainerItem","prefix":"TabContainerItem","Experimental":false,"constructorDescription":"Constructor for a new <code>TabContainerItem<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string (default: )<\/li>\n<li>{@link #getKey key} : string<\/li>\n<li>{@link #getModified modified} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemPropertyChanged itemPropertyChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."},{"template":"fireItemPropertyChanged(\n\t{\n\t\titemChanged: ${itemChanged}, // sap.m.TabContainerItem\n\t\tpropertyKey: \"${propertyKey}\", // string\n\t\tpropertyValue: ${propertyValue} // any\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:itemPropertyChanged itemPropertyChanged} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireItemPropertyChanged(mParameters?) : sap.m.TabContainerItem","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.TabContainerItem.fireItemPropertyChanged"},{"template":"new sap.m.Table(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tinset: ${bInset}, // boolean\n\t\theaderText: \"${headerText}\", // string\n\t\theaderDesign: ${sap.m.ListHeaderDesign.Standard}, // sap.m.ListHeaderDesign\n\t\tfooterText: \"${footerText}\", // string\n\t\tmode: ${sap.m.ListMode.None}, // sap.m.ListMode\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tincludeItemInSelection: ${bIncludeItemInSelection}, // boolean\n\t\tshowUnread: ${bShowUnread}, // boolean\n\t\tnoDataText: \"${noDataText}\", // string\n\t\tshowNoData: ${bShowNoData}, // boolean\n\t\tenableBusyIndicator: ${bEnableBusyIndicator}, // boolean\n\t\tmodeAnimationOn: ${bModeAnimationOn}, // boolean\n\t\tshowSeparators: ${sap.m.ListSeparators.All}, // sap.m.ListSeparators\n\t\tswipeDirection: ${sap.m.SwipeDirection.Both}, // sap.m.SwipeDirection\n\t\tgrowing: ${bGrowing}, // boolean\n\t\tgrowingThreshold: ${20}, // int\n\t\tgrowingTriggerText: \"${growingTriggerText}\", // string\n\t\tgrowingScrollToLoad: ${bGrowingScrollToLoad}, // boolean\n\t\tgrowingDirection: ${sap.m.ListGrowingDirection.Downwards}, // sap.m.ListGrowingDirection\n\t\trememberSelections: ${bRememberSelections}, // boolean\n\t\tkeyboardMode: ${sap.m.ListKeyboardMode.Navigation}, // sap.m.ListKeyboardMode\n\t\titems: [${items}], // sap.m.ListItemBase[]\n\t\tswipeContent: ${swipeContent}, // sap.ui.core.Control\n\t\theaderToolbar: ${headerToolbar}, // sap.m.Toolbar\n\t\tinfoToolbar: ${infoToolbar}, // sap.m.Toolbar\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselect: [function (oEvent) {}, this], // function|array\n\t\tselectionChange: [function (oEvent) {}, this], // function|array\n\t\t\"delete\": [function (oEvent) {}, this], // function|array\n\t\tswipe: [function (oEvent) {}, this], // function|array\n\t\tgrowingStarted: [function (oEvent) {}, this], // function|array\n\t\tgrowingFinished: [function (oEvent) {}, this], // function|array\n\t\tupdateStarted: [function (oEvent) {}, this], // function|array\n\t\tupdateFinished: [function (oEvent) {}, this], // function|array\n\t\titemPress: [function (oEvent) {}, this], // function|array\n\t\tbackgroundDesign: ${sap.m.BackgroundDesign.Translucent}, // sap.m.BackgroundDesign\n\t\tfixedLayout: ${bFixedLayout}, // boolean\n\t\tshowOverlay: ${bShowOverlay}, // boolean\n\t\talternateRowColors: ${bAlternateRowColors}, // boolean\n\t\tpopinLayout: ${sap.m.PopinLayout.Block}, // sap.m.PopinLayout\n\t\tcolumns: [${columns}] // sap.m.Column[]\n\t}\n)\n","module":"sap/m/Table","static":"true","extends":"sap.m.ListBase","helpDescription":"<code>sap.m.Table<\/code> control provides a set of sophisticated and convenience functions for responsive table design. To render the <code>sap.m.Table<\/code> properly, the order of the <code>columns<\/code> aggregation should match with the order of the items <code>cells<\/code> aggregation. Also <code>sap.m.Table<\/code> requires at least one visible <code>sap.m.Column<\/code> in <code>columns<\/code> aggregation. For mobile devices, the recommended limit of table rows is 100 (based on 4 columns) to assure proper performance. To improve initial rendering on large tables, use the <code>growing<\/code> feature.\n\nSee section \"{@link topic:5eb6f63e0cc547d0bdc934d3652fdc9b Creating Tables}\" and \"{@link topic:38855e06486f4910bfa6f4485f7c2bac Configuring Responsive Behavior of a Table}\" in the documentation for an introduction to <code>sap.m.Table<\/code> control.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"Table(sId?, mSettings?) : sap.m.Table","name":"sap.m.Table","prefix":"Table","Experimental":false,"constructorDescription":"Constructor for a new Table.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.BackgroundDesign (default: Translucent)<\/li>\n<li>{@link #getFixedLayout fixedLayout} : boolean (default: true)<\/li>\n<li>{@link #getShowOverlay showOverlay} : boolean (default: false)<\/li>\n<li>{@link #getAlternateRowColors alternateRowColors} : boolean (default: false)<\/li>\n<li>{@link #getPopinLayout popinLayout} : sap.m.PopinLayout (default: Block)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getColumns columns} : sap.m.Column[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListBase#constructor sap.m.ListBase}\ncan be used as well."},{"template":"new sap.m.TablePersoController(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\tcontentWidth: ${contentWidth}, // sap.ui.core.CSSSize\n\t\tcontentHeight: ${\"20rem\"}, // sap.ui.core.CSSSize\n\t\tcomponentName: \"${componentName}\", // string\n\t\thasGrouping: ${bHasGrouping}, // boolean\n\t\tshowSelectAll: ${bShowSelectAll}, // boolean\n\t\tshowResetAll: ${bShowResetAll}, // boolean\n\t\tpersoService: ${persoService}, // Object\n\t\ttable: ${table}, // (sap.m.Table|string)\n\t\ttables: [${tables}], // (sap.m.Table|string)[]\n\t\tpersonalizationsDone: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/TablePersoController","static":"true","extends":"sap.ui.base.ManagedObject","helpDescription":"Table Personalization Controller","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"TablePersoController(sId?, mSettings?) : sap.m.TablePersoController","name":"sap.m.TablePersoController","prefix":"TablePersoController","Experimental":false,"constructorDescription":"The TablePersoController can be used to connect a table that you want to provide\na personalization dialog for, with a persistence service such as one provided by\nthe unified shell.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContentWidth contentWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getContentHeight contentHeight} : sap.ui.core.CSSSize (default: 20rem)<\/li>\n<li>{@link #getComponentName componentName} : string<\/li>\n<li>{@link #getHasGrouping hasGrouping} : boolean (default: false)<\/li>\n<li>{@link #getShowSelectAll showSelectAll} : boolean (default: true)<\/li>\n<li>{@link #getShowResetAll showResetAll} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPersoService persoService} : Object<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getTable table} : (sap.ui.core.ID | sap.m.Table)<\/li>\n<li>{@link #getTables tables} : (sap.ui.core.ID | sap.m.Table)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:personalizationsDone personalizationsDone} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well."},{"template":"new sap.m.TablePersoDialog(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\tcontentWidth: ${contentWidth}, // sap.ui.core.CSSSize\n\t\tcontentHeight: ${contentHeight}, // sap.ui.core.CSSSize\n\t\tpersoMap: ${persoMap}, // object\n\t\tcolumnInfoCallback: ${columnInfoCallback}, // object\n\t\tinitialColumnState: ${initialColumnState}, // object\n\t\thasGrouping: ${bHasGrouping}, // boolean\n\t\tshowSelectAll: ${bShowSelectAll}, // boolean\n\t\tshowResetAll: ${bShowResetAll}, // boolean\n\t\tpersoService: ${persoService}, // Object\n\t\tpersoDialogFor: ${persoDialogFor}, // (sap.m.Table|string)\n\t\tconfirm: [function (oEvent) {}, this], // function|array\n\t\tcancel: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/TablePersoDialog","static":"true","extends":"sap.ui.base.ManagedObject","helpDescription":"Table Personalization Dialog","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"TablePersoDialog(sId?, mSettings?) : sap.m.TablePersoDialog","name":"sap.m.TablePersoDialog","prefix":"TablePersoDialog","Experimental":false,"constructorDescription":"The TablePersoDialog can be used to display and allow modification of personalization settings relating to a Table. It displays the columns of the table that it refers to by using\n<ul><li>The result of calling sap.m.TablePersoProvider's 'getCaption' callback if it is implemented and delivers a non-null value for a column<\/li>\n<li>the column header control's 'text' property if no caption property is available<\/li>\n<li>the column header control's 'title' property if neither 'text' nor 'caption' property are available<\/li>\n<li>the column id is displayed as last fallback, if none of the above is at hand. In that case, a warning is logged. <\/li><\/ul>\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContentWidth contentWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getContentHeight contentHeight} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getPersoMap persoMap} : object<\/li>\n<li>{@link #getColumnInfoCallback columnInfoCallback} : object<\/li>\n<li>{@link #getInitialColumnState initialColumnState} : object<\/li>\n<li>{@link #getHasGrouping hasGrouping} : boolean<\/li>\n<li>{@link #getShowSelectAll showSelectAll} : boolean<\/li>\n<li>{@link #getShowResetAll showResetAll} : boolean<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getPersoService persoService} : Object<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getPersoDialogFor persoDialogFor} : (sap.ui.core.ID | sap.m.Table)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:confirm confirm} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.base.ManagedObject#constructor sap.ui.base.ManagedObject}\ncan be used as well."},{"template":"new sap.m.TableSelectDialog(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\tnoDataText: \"${noDataText}\", // string\n\t\tmultiSelect: ${bMultiSelect}, // boolean\n\t\tgrowingThreshold: ${growingThreshold}, // int\n\t\tcontentWidth: ${contentWidth}, // sap.ui.core.CSSSize\n\t\trememberSelections: ${bRememberSelections}, // boolean\n\t\tcontentHeight: ${contentHeight}, // sap.ui.core.CSSSize\n\t\titems: [${items}], // sap.m.ColumnListItem[]\n\t\tcolumns: [${columns}], // sap.m.Column[]\n\t\tconfirm: [function (oEvent) {}, this], // function|array\n\t\tsearch: [function (oEvent) {}, this], // function|array\n\t\tliveChange: [function (oEvent) {}, this], // function|array\n\t\tcancel: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/TableSelectDialog","static":"true","extends":"sap.ui.core.Control","helpDescription":"A dialog to select items in a table containing multiple values and attributes. <h3>Overview<\/h3> The table select dialog helps users select items in a table-like structure with several attributes and values per item. A search fields helps narrow down the results. <h3>Structure<\/h3> The table select dialog consists of the following elements: <ul> <li> Search field - used to search enter search terms for a specific item.<\/li> <li> Infobar (optional) - shows additional information for the current selection (i.e. total number of selected items).<\/li> <li> Content - the table with the items.<\/li> <li> Footer (optional) - a toolbar for actions.<\/li> <\/ul> Table select dialog supports multi-selection when the <code>multiSelect<\/code> property is set.\n\nThe selected items can be stored for later editing when the <code>rememberSelections<\/code> property is set. <b>Note:<\/b> This property has to be set before the dialog is opened. <h3>Usage<\/h3> <h4>When to use:<\/h4> <ul> <li>You need to select one or more items from a comprehensive list that contains multiple attributes or values.<\/li> <\/ul> <h4>When not to use:<\/h4> <ul> <li>You need to select one item from a predefined set of options that contains only one value. Use a {@link sap.m.Select switch} control instead.<\/li> <li>You need to select items within a query-based range. Use a {@link sap.ui.comp.valuehelpdialog.ValueHelpDialog value help} control instead.<\/li> <li>You need to only filter a set of items. Use a {@link sap.ui.comp.filterbar.FilterBar filter bar} control instead.<\/li> <\/ul> <h3>Responsive Behavior<\/h3> <ul> <li>On smaller screens, the columns of the table wrap and build a list that shows all the information.<\/li> <\/ul>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"TableSelectDialog(sId?, mSettings?) : sap.m.TableSelectDialog","name":"sap.m.TableSelectDialog","prefix":"TableSelectDialog","Experimental":false,"constructorDescription":"Constructor for a new TableSelectDialog.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getNoDataText noDataText} : string<\/li>\n<li>{@link #getMultiSelect multiSelect} : boolean (default: false)<\/li>\n<li>{@link #getGrowingThreshold growingThreshold} : int<\/li>\n<li>{@link #getContentWidth contentWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getRememberSelections rememberSelections} : boolean (default: false)<\/li>\n<li>{@link #getContentHeight contentHeight} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.ColumnListItem[] (default)<\/li>\n<li>{@link #getColumns columns} : sap.m.Column[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:confirm confirm} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:search search} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireConfirm(\n\t{\n\t\tselectedItem: ${selectedItem}, // sap.m.StandardListItem\n\t\tselectedItems: [${selectedItems}], // [object Object][]\n\t\tselectedContexts: \"${selectedContexts}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:confirm confirm} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireConfirm(mParameters?) : sap.m.TableSelectDialog","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.TableSelectDialog.fireConfirm"},{"template":"fireLiveChange(\n\t{\n\t\tvalue: \"${value}\", // string\n\t\titemsBinding: ${itemsBinding} // any\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:liveChange liveChange} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireLiveChange(mParameters?) : sap.m.TableSelectDialog","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.TableSelectDialog.fireLiveChange"},{"template":"fireSearch(\n\t{\n\t\tvalue: \"${value}\", // string\n\t\titemsBinding: ${itemsBinding} // any\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:search search} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireSearch(mParameters?) : sap.m.TableSelectDialog","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.TableSelectDialog.fireSearch"},{"template":"new sap.m.Text(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: ${\"\"}, // string\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\twrapping: ${bWrapping}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Begin}, // sap.ui.core.TextAlign\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tmaxLines: ${maxLines}, // int\n\t\trenderWhitespace: ${bRenderWhitespace} // boolean\n\t}\n)\n","module":"sap/m/Text","static":"true","extends":"sap.ui.core.Control","helpDescription":"The <code>Text<\/code> control can be used for embedding longer text paragraphs, that need text wrapping, into your app. If the configured text value contains HTML code or script tags, those will be escaped.<br> <b>Note: <\/b>Line breaks (\\r\\n, \\n\\r, \\r, \\n) will always be visualized except when the <code>wrapping<\/code> property is set to <code>false<\/code>. In addition, tabs (\\t) and whitespace (\" \") can be preserved by setting the <code>renderWhitespace<\/code> property to <code>true<\/code>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"Text(sId?, mSettings?) : sap.m.Text","name":"sap.m.Text","prefix":"Text","Experimental":false,"constructorDescription":"Constructor for a new Text.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<li>{@link #getWrapping wrapping} : boolean (default: true)<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Begin)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMaxLines maxLines} : int<\/li>\n<li>{@link #getRenderWhitespace renderWhitespace} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.TextArea(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\trows: ${2}, // int\n\t\tcols: ${20}, // int\n\t\theight: ${height}, // sap.ui.core.CSSSize\n\t\tmaxLength: ${0}, // int\n\t\tshowExceededText: ${bShowExceededText}, // boolean\n\t\twrapping: ${sap.ui.core.Wrapping.None}, // sap.ui.core.Wrapping\n\t\tvalueLiveUpdate: ${bValueLiveUpdate}, // boolean\n\t\tgrowing: ${bGrowing}, // boolean\n\t\tgrowingMaxLines: ${0}, // int\n\t\tliveChange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/TextArea","static":"true","extends":"sap.m.InputBase","helpDescription":"A control that is used for multi-line input of text. <h3>Overview<\/h3> The text area is used to enter multiple lines of text. When empty, it can hold a placeholder similar to an {@link sap.m.Input input}. You can define the height and width of the text area and also determine specific behavior when handling long texts. <h3>Structure<\/h3> Parameters that determine the size: <ul> <li><code>rows<\/code> - Number of visible text lines (overruled by <code>height<\/code>, if both are set)<\/li> <li><code>cols<\/code> - Number of visible characters per line line (overruled by <code>width<\/code>, if both are set)<\/li> <li><code>height<\/code> - Height of the control<\/li> <li><code>width<\/code> - Width of the control<\/li> <\/ul> Parameters that determine the behavior: <ul> <li><code>growing<\/code> - The text area adjusts its size based on the content<\/li> <li><code>growingMaxLines<\/code> - Threshold for the <code>growing<\/code> property (shouldn't exceed the screen size)<\/li> <li><code>maxLength<\/code> - Maximum number of characters that can be entered in a text area<\/li> <li><code>wrapping<\/code> - The way the entered text is wrapped by the control<\/li> <li><code>showExceededText<\/code> - Determines how text beyond the <code>maxLength<\/code> length is handled<\/li> <\/ul> <h3>Usage<\/h3> <h4>When to use<\/h4> <ul> <li>You want to enter multiple lines of text.<\/li> <li>Always provide labels for a text area.<\/li> <li>A placeholder does not substitute a label.<\/li> <\/ul> <h3>Responsive Behavior<\/h3> <ul> <li>On smaller screens, you can scroll down the text area to see the entire text. To indicate that the text continues, the control shows only half of the last line.<\/li> <li>If you have a growing text area, have in mind that its maximum height should not exceed the height of the screen. If that is the case, the screen height is used instead.<\/li> <li>If <code>showExceededText<\/code> is set to TRUE and you paste a longer text, all characters beyond the <code>maxLength<\/code> limit are automatically selected.<\/li> <li>If <code>showExceededText<\/code> is set to TRUE, the control will display a counter for the remaining characters.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"TextArea(sId?, mSettings?) : sap.m.TextArea","name":"sap.m.TextArea","prefix":"TextArea","Experimental":false,"constructorDescription":"Constructor for a new TextArea.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getRows rows} : int (default: 2)<\/li>\n<li>{@link #getCols cols} : int (default: 20)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMaxLength maxLength} : int (default: 0)<\/li>\n<li>{@link #getShowExceededText showExceededText} : boolean (default: false)<\/li>\n<li>{@link #getWrapping wrapping} : sap.ui.core.Wrapping (default: None)<\/li>\n<li>{@link #getValueLiveUpdate valueLiveUpdate} : boolean (default: false)<\/li>\n<li>{@link #getGrowing growing} : boolean (default: false)<\/li>\n<li>{@link #getGrowingMaxLines growingMaxLines} : int (default: 0)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:liveChange liveChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.InputBase#constructor sap.m.InputBase}\ncan be used as well."},{"template":"fireLiveChange(\n\t{\n\t\tvalue: \"${value}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:liveChange liveChange} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireLiveChange(mParameters?) : sap.m.TextArea","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.TextArea.fireLiveChange"},{"template":"new sap.m.Tile(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tremovable: ${bRemovable}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/Tile","static":"true","extends":"sap.ui.core.Control","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.50 use {@link sap.m.GenericTile} instead<br>A tile to be displayed in the tile container. Use this tile as the base class for specialized tile implementations. Use the renderer _addOuterClass methods to add a style class to the main surface of the Tile. In this class set the background color, gradients or background images. Instead of implementing the default render method in the renderer, implement your content HTML in the _renderContent method of the specialized tile.","Deprecated":true,"category":"constructor","DeprecatedInfo":{"isDeprecated":true,"description":"use {@link sap.m.GenericTile} instead","since":"1.50"},"description":"Tile(sId?, mSettings?) : sap.m.Tile","name":"sap.m.Tile","prefix":"Tile","Experimental":false,"constructorDescription":"Constructor for a new Tile.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getRemovable removable} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.TileContainer(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\theight: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\teditable: ${bEditable}, // boolean\n\t\tallowAdd: ${bAllowAdd}, // boolean\n\t\ttiles: [${tiles}], // sap.m.Tile[]\n\t\ttileMove: [function (oEvent) {}, this], // function|array\n\t\ttileDelete: [function (oEvent) {}, this], // function|array\n\t\ttileAdd: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/TileContainer","static":"true","extends":"sap.ui.core.Control","helpDescription":"<strong style=\"color: red;\">Deprecated! <\/strong>Since 1.50 instead, use a container of your choice with {@link sap.m.GenericTile} instances<br>A container that arranges same-size tiles nicely on carousel pages.","Deprecated":true,"category":"constructor","DeprecatedInfo":{"isDeprecated":false,"description":"instead, use a container of your choice with {@link sap.m.GenericTile} instances","since":"1.50"},"description":"TileContainer(sId?, mSettings?) : sap.m.TileContainer","name":"sap.m.TileContainer","prefix":"TileContainer","Experimental":false,"constructorDescription":"Constructor for a new TileContainer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getEditable editable} : boolean<\/li>\n<li>{@link #getAllowAdd allowAdd} : boolean<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTiles tiles} : sap.m.Tile[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:tileMove tileMove} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:tileDelete tileDelete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:tileAdd tileAdd} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireTileDelete(\n\t{\n\t\ttile: ${tile} // sap.m.Tile\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:tileDelete tileDelete} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"instead, use a container of your choice with {@link sap.m.GenericTile} instances","since":"1.50"},"description":"fireTileDelete(mParameters?) : sap.m.TileContainer","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.TileContainer.fireTileDelete"},{"template":"fireTileMove(\n\t{\n\t\ttile: ${tile}, // sap.m.Tile\n\t\tnewIndex: ${newIndex} // int\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:tileMove tileMove} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false,"description":"instead, use a container of your choice with {@link sap.m.GenericTile} instances","since":"1.50"},"description":"fireTileMove(mParameters?) : sap.m.TileContainer","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.TileContainer.fireTileMove"},{"template":"new sap.m.TileContent(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tfooter: \"${footer}\", // string\n\t\tfooterColor: ${sap.m.ValueColor.Neutral}, // sap.m.ValueColor\n\t\tsize: ${sap.m.Size.Auto}, // sap.m.Size\n\t\tunit: \"${unit}\", // string\n\t\tdisabled: ${bDisabled}, // boolean\n\t\tframeType: ${sap.m.FrameType.Auto}, // sap.m.FrameType\n\t\tcontent: ${content} // sap.ui.core.Control\n\t}\n)\n","module":"sap/m/TileContent","static":"true","extends":"sap.ui.core.Control","helpDescription":"This control is used within the GenericTile control.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"TileContent(sId?, mSettings?) : sap.m.TileContent","name":"sap.m.TileContent","prefix":"TileContent","Experimental":false,"constructorDescription":"Constructor for a new sap.m.TileContent control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFooter footer} : string<\/li>\n<li>{@link #getFooterColor footerColor} : sap.m.ValueColor (default: Neutral)<\/li>\n<li>{@link #getSize size} : sap.m.Size (default: Auto)<\/li>\n<li>{@link #getUnit unit} : string<\/li>\n<li>{@link #getDisabled disabled} : boolean (default: false)<\/li>\n<li>{@link #getFrameType frameType} : sap.m.FrameType (default: Auto)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control (default)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.TimePicker(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tvalue: \"${value}\", // string\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\tvalueState: ${sap.ui.core.ValueState.None}, // sap.ui.core.ValueState\n\t\tname: \"${name}\", // string\n\t\tplaceholder: \"${placeholder}\", // string\n\t\teditable: ${bEditable}, // boolean\n\t\tvalueStateText: \"${valueStateText}\", // string\n\t\tshowValueStateMessage: ${bShowValueStateMessage}, // boolean\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\trequired: ${bRequired}, // boolean\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tdisplayFormat: \"${displayFormat}\", // string\n\t\tvalueFormat: \"${valueFormat}\", // string\n\t\tdateValue: ${dateValue}, // object\n\t\tlocaleId: \"${localeId}\", // string\n\t\ttitle: \"${title}\", // string\n\t\tminutesStep: ${1}, // int\n\t\tsecondsStep: ${1}, // int\n\t\tplaceholderSymbol: ${\"_\"}, // string\n\t\tmask: \"${mask}\", // string\n\t\trules: [${rules}] // sap.m.MaskInputRule[]\n\t}\n)\n","module":"sap/m/TimePicker","static":"true","extends":"sap.m.DateTimeField","helpDescription":"A single-field input control that enables the users to fill time related input fields.\n\n<h3>Overview<\/h3>\n\nThe <code>TimePicker<\/code> control enables the users to fill time related input fields using touch, mouse, or keyboard input.\n\n<h3>Usage<\/h3>\n\nUse this control if you want the user to select a time. If you want the user to select a duration (1 hour), use the {@link sap.m.Select} control instead.\n\nThe user can enter a date by:\n\n<ul><li>Using the <code>TimePicker<\/code> dropdown that opens in a popup<\/li> <li>Typing it in directly in the input field<\/li><\/ul>\n\nOn app level, there are two options to provide value for the <code>TimePicker<\/code> - as a string to the <code>value<\/code> property or as a JavaScript Date object to the <code>dateValue<\/code> property (only one of these properties should be used at a time):\n\n<ul><li>Use the <code>value<\/code> property if you want to bind the <code>TimePicker<\/code> to a model using the <code>sap.ui.model.type.Time<\/code><\/li> <li>Use the <code>value<\/code> property if the date is provided as a string from the backend or inside the app (for example, as ABAP type DATS field)<\/li> <li>Use the <code>dateValue<\/code> property if the date is already provided as a JavaScript Date object or you want to work with a JavaScript Date object<\/li><\/ul>\n\n<h3>Formatting<\/h3>\n\nAll formatting and parsing of values from and to strings is done using the {@link sap.ui.core.format.DateFormat}. If a value is entered by typing it into the input field, it must fit to the used time format and locale.\n\nSupported format options are pattern-based on Unicode LDML Date Format notation. See {@link http://unicode.org/reports/tr35/#Date_Field_Symbol_Table}\n\nA time format must be specified, otherwise the default \"HH:mm:ss a\" will be used. For example, if the <code>valueFormat<\/code> is \"HH-mm-ss a\", the <code>displayFormat<\/code> is \"HH:mm:ss a\", and the used locale is English, a valid value string is \"10-30-15 AM\", which leads to an output of \"10:30:15 AM\".\n\nIf no placeholder is set to the <code>TimePicker<\/code>, the used <code>displayFormat<\/code> is displayed as a placeholder. If another placeholder is needed, it must be set.\n\n<b>Note:<\/b> If the string does NOT match the <code>displayFormat<\/code> (from user input) or the <code>valueFormat<\/code> (on app level), the {@link sap.ui.core.format.DateFormat} makes an attempt to parse it based on the locale settings. For more information, see the respective documentation in the API Reference.\n\n<h3>Responsive behavior<\/h3>\n\nThe <code>TimePicker<\/code> is responsive and fully adapts to all device types. For larger screens, such as tablet or desktop, it opens as a popover. For mobile devices, it opens in full screen.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"TimePicker(sId?, mSettings?) : sap.m.TimePicker","name":"sap.m.TimePicker","prefix":"TimePicker","Experimental":false,"constructorDescription":"Constructor for a new <code>TimePicker<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getLocaleId localeId} : string<\/li>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getMinutesStep minutesStep} : int (default: 1)<\/li>\n<li>{@link #getSecondsStep secondsStep} : int (default: 1)<\/li>\n<li>{@link #getPlaceholderSymbol placeholderSymbol} : string (default: _)<\/li>\n<li>{@link #getMask mask} : string<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getRules rules} : sap.m.MaskInputRule[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.DateTimeField#constructor sap.m.DateTimeField}\ncan be used as well."},{"template":"new sap.m.Title(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: \"${text}\", // string\n\t\tlevel: ${sap.ui.core.TitleLevel.Auto}, // sap.ui.core.TitleLevel\n\t\ttitleStyle: ${sap.ui.core.TitleLevel.Auto}, // sap.ui.core.TitleLevel\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\ttextAlign: ${sap.ui.core.TextAlign.Initial}, // sap.ui.core.TextAlign\n\t\twrapping: ${bWrapping}, // boolean\n\t\ttitle: ${title} // (sap.ui.core.Title|string)\n\t}\n)\n","module":"sap/m/Title","static":"true","extends":"sap.ui.core.Control","helpDescription":"The Title control represents a single line of text with explicit header / title semantics.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"Title(sId?, mSettings?) : sap.m.Title","name":"sap.m.Title","prefix":"Title","Experimental":false,"constructorDescription":"Constructor for a new Title control.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<li>{@link #getLevel level} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getTitleStyle titleStyle} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getTextAlign textAlign} : sap.ui.core.TextAlign (default: Initial)<\/li>\n<li>{@link #getWrapping wrapping} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getTitle title} : (sap.ui.core.ID | sap.ui.core.Title)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.ToggleButton(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttext: \"${text}\", // string\n\t\ttype: ${sap.m.ButtonType.Default}, // sap.m.ButtonType\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tenabled: ${bEnabled}, // boolean\n\t\ticon: ${icon}, // sap.ui.core.URI\n\t\ticonFirst: ${bIconFirst}, // boolean\n\t\tactiveIcon: ${activeIcon}, // sap.ui.core.URI\n\t\ticonDensityAware: ${bIconDensityAware}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tpressed: ${bPressed} // boolean\n\t}\n)\n","module":"sap/m/ToggleButton","static":"true","extends":"sap.m.Button","helpDescription":"An enhanced {@link sap.m.Button} that can be toggled between pressed and normal state.\n\nClicking or tapping a <code>ToggleButton<\/code> changes its state to <code>pressed<\/code>. The button returns to its initial state when the user clicks or taps it again.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ToggleButton(sId?, mSettings?) : sap.m.ToggleButton","name":"sap.m.ToggleButton","prefix":"ToggleButton","Experimental":false,"constructorDescription":"Constructor for a new <code>ToggleButton<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPressed pressed} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.Button#constructor sap.m.Button}\ncan be used as well."},{"template":"new sap.m.Token(\n\t\"${sId}\", // string\n\t{\n\t\tselected: ${bSelected}, // boolean\n\t\tkey: ${\"\"}, // string\n\t\ttext: ${\"\"}, // string\n\t\teditable: ${bEditable}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\t\"delete\": [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tselect: [function (oEvent) {}, this], // function|array\n\t\tdeselect: [function (oEvent) {}, this] // function|array\n\t}\n)\n","Deprecated":false,"helpDescription":"<h3>Overview<\/h3> Tokens are small items of information (similar to tags) that mainly serve to visualize previously selected items. Tokens are manipulated by a {@link sap.m.Tokenizer Tokenizer}. <h3>Structure<\/h3> The tokens store single text items or sometimes key-value pairs, such as \"John Miller (ID1234567)\". Each token also contains a delete icon, which is invisible if the token is in edit mode.\n\n<h3>Usage<\/h3> <h4>When to use:<\/h4> Tokens can only be used with the Tokenizer as a container.","category":"constructor","module":"sap/m/Token","static":"true","DeprecatedInfo":{"isDeprecated":false},"description":"Token(sId?, mSettings?) : sap.m.Token","Experimental":false,"prefix":"Token","name":"sap.m.Token","constructorDescription":"Constructor for a new Token.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<li>{@link #getKey key} : string (default: )<\/li>\n<li>{@link #getText text} : string (default: )<\/li>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getTextDirection textDirection} : sap.ui.core.TextDirection (default: Inherit)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:delete delete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:select select} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:deselect deselect} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>"},{"template":"new sap.m.Tokenizer(\n\t\"${sId}\", // string\n\t{\n\t\teditable: ${bEditable}, // boolean\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\ttokens: [${tokens}], // sap.m.Token[]\n\t\tariaDescribedBy: [${ariaDescribedBy}], // (sap.ui.core.Control|string)[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttokenChange: [function (oEvent) {}, this], // function|array\n\t\ttokenUpdate: [function (oEvent) {}, this] // function|array\n\t}\n)\n","Deprecated":false,"helpDescription":"<h3>Overview<\/h3> A tokenizer is a container for {@link sap.m.Token Tokens}. It also handles all actions associated with the tokens like adding, deleting, selecting and editing. <h3>Structure<\/h3> The tokens are stored in the <code>tokens<\/code> aggregation. The tokenizer can determine, by setting the <code>editable<\/code> property, whether the tokens in it are editable. Still the Token itself can determine if it is <code>editable<\/code>. This allows you to have non-editable Tokens in an editable Tokenizer.\n\n<h3>Usage<\/h3> <h4>When to use:<\/h4> The tokenizer can only be used as part of {@link sap.m.MultiComboBox MultiComboBox},{@link sap.m.MultiInput MultiInput} or {@link sap.ui.comp.valuehelpdialog.ValueHelpDialog ValueHelpDialog}","category":"constructor","module":"sap/m/Tokenizer","static":"true","DeprecatedInfo":{"isDeprecated":false},"description":"Tokenizer(sId?, mSettings?) : sap.m.Tokenizer","Experimental":false,"prefix":"Tokenizer","name":"sap.m.Tokenizer","constructorDescription":"Constructor for a new Tokenizer.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEditable editable} : boolean (default: true)<\/li>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getTokens tokens} : sap.m.Token[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaDescribedBy ariaDescribedBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:tokenChange tokenChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:tokenUpdate tokenUpdate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>"},{"template":"fireTokenChange(\n\t{\n\t\ttype: \"${type}\", // string\n\t\ttoken: ${token}, // sap.m.Token\n\t\ttokens: [${tokens}], // [object Object][]\n\t\taddedTokens: [${addedTokens}], // [object Object][]\n\t\tremovedTokens: [${removedTokens}] // [object Object][]\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:tokenChange tokenChange} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireTokenChange(mParameters?) : sap.m.Tokenizer","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.Tokenizer.fireTokenChange"},{"template":"fireTokenUpdate(\n\t{\n\t\ttype: \"${type}\", // string\n\t\taddedTokens: [${addedTokens}], // [object Object][]\n\t\tremovedTokens: [${removedTokens}] // [object Object][]\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:tokenUpdate tokenUpdate} to attached listeners.\n\nListeners may prevent the default action of this event by using the <code>preventDefault<\/code>-method on the event object.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireTokenUpdate(mParameters?) : boolean","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.Tokenizer.fireTokenUpdate"},{"template":"new sap.m.Toolbar(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\twidth: ${width}, // sap.ui.core.CSSSize\n\t\tactive: ${bActive}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\theight: ${\"\"}, // sap.ui.core.CSSSize\n\t\tdesign: ${sap.m.ToolbarDesign.Auto}, // sap.m.ToolbarDesign\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/Toolbar","static":"true","extends":"sap.ui.core.Control","helpDescription":"Horizontal container most commonly used to display buttons, labels, selects and various other input controls.\n\n<h3>Overview<\/h3>\n\nBy default, the <code>Toolbar<\/code> items are shrinkable if they have percent-based width (for example, {@link sap.m.Input} and {@link sap.m.Slider}) or implement the {@link sap.ui.core.IShrinkable} interface (for example, {@link sap.m.Text} and {@link sap.m.Label}). This behavior can be overridden by providing {@link sap.m.ToolbarLayoutData} for the <code>Toolbar<\/code> items.\n\n<b>Note:<\/b> It is recommended that you use {@link sap.m.OverflowToolbar} over <code>sap.m.Toolbar<\/code>, unless you want to avoid the overflow behavior in favor of shrinking.\n\n<h3>Usage<\/h3>\n\nYou can add a visual separator between the preceding and succeeding {@link sap.m.Toolbar} item with the use of the {@link sap.m.ToolbarSeparator}. The separator is theme dependent and can be a padding, a margin or a line.\n\nTo add horizontal space between the <code>Toolbar<\/code> items, use the {@link sap.m.ToolbarSpacer}. You can define the width of the horizontal space or make it flexible to cover the remaining space between the <code>Toolbar<\/code> items (for example, to to push an item to the edge of the <code>Toolbar<\/code>.\n\n<b>Note:<\/b> {@link sap.m.ToolbarLayoutData} should not be used together with {@link sap.m.ToolbarSpacer}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"Toolbar(sId?, mSettings?) : sap.m.Toolbar","name":"sap.m.Toolbar","prefix":"Toolbar","Experimental":false,"constructorDescription":"Constructor for a new <code>Toolbar<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getActive active} : boolean (default: false)<\/li>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: )<\/li>\n<li>{@link #getDesign design} : sap.m.ToolbarDesign (default: Auto)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getAriaLabelledBy ariaLabelledBy} : (sap.ui.core.ID | sap.ui.core.Control)[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"firePress(\n\t{\n\t\tsrcControl: ${srcControl} // sap.ui.core.Control\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:press press} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"firePress(mParameters?) : sap.m.Toolbar","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.Toolbar.firePress"},{"template":"new sap.m.ToolbarLayoutData(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tshrinkable: ${bShrinkable}, // boolean\n\t\tminWidth: ${minWidth}, // sap.ui.core.CSSSize\n\t\tmaxWidth: ${maxWidth} // sap.ui.core.CSSSize\n\t}\n)\n","module":"sap/m/ToolbarLayoutData","static":"true","extends":"sap.ui.core.LayoutData","helpDescription":"Defines layout data for the {@link sap.m.Toolbar} items.\n\n<b>Note:<\/b> <code>ToolbarLayoutData<\/code> should not be used together with {@link sap.m.ToolbarSpacer}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ToolbarLayoutData(sId?, mSettings?) : sap.m.ToolbarLayoutData","name":"sap.m.ToolbarLayoutData","prefix":"ToolbarLayoutData","Experimental":false,"constructorDescription":"Constructor for a new <code>ToolbarLayoutData<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getShrinkable shrinkable} : boolean (default: false)<\/li>\n<li>{@link #getMinWidth minWidth} : sap.ui.core.CSSSize<\/li>\n<li>{@link #getMaxWidth maxWidth} : sap.ui.core.CSSSize<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.LayoutData#constructor sap.ui.core.LayoutData}\ncan be used as well."},{"template":"new sap.m.ToolbarSeparator(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/ToolbarSeparator","static":"true","extends":"sap.ui.core.Control","helpDescription":"Creates a visual separator (theme dependent: padding, margin, line) between the preceding and succeeding {@link sap.m.Toolbar} item.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ToolbarSeparator(sId?, mSettings?) : sap.m.ToolbarSeparator","name":"sap.m.ToolbarSeparator","prefix":"ToolbarSeparator","Experimental":false,"constructorDescription":"Constructor for a new <code>ToolbarSeparator<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.Control#constructor sap.ui.core.Control} can be used."},{"template":"new sap.m.ToolbarSpacer(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\twidth: ${\"\"} // sap.ui.core.CSSSize\n\t}\n)\n","module":"sap/m/ToolbarSpacer","static":"true","extends":"sap.ui.core.Control","helpDescription":"Adds horizontal space between the items used within a {@link sap.m.Toolbar}.\n\n<b>Note:<\/b> <code>ToolbarSpacer<\/code> should not be used together with {@link sap.m.ToolbarLayoutData}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ToolbarSpacer(sId?, mSettings?) : sap.m.ToolbarSpacer","name":"sap.m.ToolbarSpacer","prefix":"ToolbarSpacer","Experimental":false,"constructorDescription":"Constructor for a new <code>ToolbarSpacer<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: )<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.Tree(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tinset: ${bInset}, // boolean\n\t\theaderText: \"${headerText}\", // string\n\t\theaderDesign: ${sap.m.ListHeaderDesign.Standard}, // sap.m.ListHeaderDesign\n\t\tfooterText: \"${footerText}\", // string\n\t\tmode: ${sap.m.ListMode.None}, // sap.m.ListMode\n\t\twidth: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tincludeItemInSelection: ${bIncludeItemInSelection}, // boolean\n\t\tshowUnread: ${bShowUnread}, // boolean\n\t\tnoDataText: \"${noDataText}\", // string\n\t\tshowNoData: ${bShowNoData}, // boolean\n\t\tenableBusyIndicator: ${bEnableBusyIndicator}, // boolean\n\t\tmodeAnimationOn: ${bModeAnimationOn}, // boolean\n\t\tshowSeparators: ${sap.m.ListSeparators.All}, // sap.m.ListSeparators\n\t\tswipeDirection: ${sap.m.SwipeDirection.Both}, // sap.m.SwipeDirection\n\t\tgrowing: ${bGrowing}, // boolean\n\t\tgrowingThreshold: ${20}, // int\n\t\tgrowingTriggerText: \"${growingTriggerText}\", // string\n\t\tgrowingScrollToLoad: ${bGrowingScrollToLoad}, // boolean\n\t\tgrowingDirection: ${sap.m.ListGrowingDirection.Downwards}, // sap.m.ListGrowingDirection\n\t\trememberSelections: ${bRememberSelections}, // boolean\n\t\tkeyboardMode: ${sap.m.ListKeyboardMode.Navigation}, // sap.m.ListKeyboardMode\n\t\titems: [${items}], // sap.m.ListItemBase[]\n\t\tswipeContent: ${swipeContent}, // sap.ui.core.Control\n\t\theaderToolbar: ${headerToolbar}, // sap.m.Toolbar\n\t\tinfoToolbar: ${infoToolbar}, // sap.m.Toolbar\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\tselect: [function (oEvent) {}, this], // function|array\n\t\tselectionChange: [function (oEvent) {}, this], // function|array\n\t\t\"delete\": [function (oEvent) {}, this], // function|array\n\t\tswipe: [function (oEvent) {}, this], // function|array\n\t\tgrowingStarted: [function (oEvent) {}, this], // function|array\n\t\tgrowingFinished: [function (oEvent) {}, this], // function|array\n\t\tupdateStarted: [function (oEvent) {}, this], // function|array\n\t\tupdateFinished: [function (oEvent) {}, this], // function|array\n\t\titemPress: [function (oEvent) {}, this], // function|array\n\t\ttoggleOpenState: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/Tree","static":"true","extends":"sap.m.ListBase","helpDescription":"The <code>Tree<\/code> control provides a tree structure for displaying data in a hierarchy. <b>Note:<\/b> Growing feature is not supported by <code>Tree<\/code>.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"Tree(sId?, mSettings?) : sap.m.Tree","name":"sap.m.Tree","prefix":"Tree","Experimental":false,"constructorDescription":"Constructor for a new Tree.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Events\n<ul>\n<li>{@link #event:toggleOpenState toggleOpenState} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ListBase#constructor sap.m.ListBase}\ncan be used as well."},{"template":"fireToggleOpenState(\n\t{\n\t\titemIndex: ${itemIndex}, // int\n\t\titemContext: ${itemContext}, // object\n\t\texpanded: ${bExpanded} // boolean\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:toggleOpenState toggleOpenState} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireToggleOpenState(mParameters?) : sap.m.Tree","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.Tree.fireToggleOpenState"},{"template":"new sap.m.TreeItemBase(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttype: ${sap.m.ListType.Inactive}, // sap.m.ListType\n\t\tvisible: ${bVisible}, // boolean\n\t\tunread: ${bUnread}, // boolean\n\t\tselected: ${bSelected}, // boolean\n\t\tcounter: ${counter}, // int\n\t\thighlight: ${sap.ui.core.MessageType.None}, // sap.ui.core.MessageType\n\t\tariaLabelledBy: [${ariaLabelledBy}], // (sap.ui.core.Control|string)[]\n\t\ttap: [function (oEvent) {}, this], // function|array\n\t\tdetailTap: [function (oEvent) {}, this], // function|array\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdetailPress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/TreeItemBase","static":"true","extends":"sap.m.ListItemBase","helpDescription":"The <code>sap.m.TreeItemBase<\/code> contains the basic features of all specific tree items.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"TreeItemBase(sId?, mSettings?) : sap.m.TreeItemBase","name":"sap.m.TreeItemBase","prefix":"TreeItemBase","Experimental":false,"constructorDescription":"Constructor for a new TreeItemBase."},{"template":"new sap.m.UploadCollection(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\tfileType: [${fileType}], // string[]\n\t\tmaximumFilenameLength: ${maximumFilenameLength}, // int\n\t\tmaximumFileSize: ${maximumFileSize}, // float\n\t\tmimeType: [${mimeType}], // string[]\n\t\tmultiple: ${bMultiple}, // boolean\n\t\tnoDataText: \"${noDataText}\", // string\n\t\tnoDataDescription: \"${noDataDescription}\", // string\n\t\tsameFilenameAllowed: ${bSameFilenameAllowed}, // boolean\n\t\tshowSeparators: ${sap.m.ListSeparators.All}, // sap.m.ListSeparators\n\t\tuploadEnabled: ${bUploadEnabled}, // boolean\n\t\tuploadUrl: ${\"../../../upload\"}, // string\n\t\tinstantUpload: ${bInstantUpload}, // boolean\n\t\tnumberOfAttachmentsText: \"${numberOfAttachmentsText}\", // string\n\t\tmode: ${sap.m.ListMode.None}, // sap.m.ListMode\n\t\tuploadButtonInvisible: ${bUploadButtonInvisible}, // boolean\n\t\tterminationEnabled: ${bTerminationEnabled}, // boolean\n\t\titems: [${items}], // sap.m.UploadCollectionItem[]\n\t\theaderParameters: [${headerParameters}], // sap.m.UploadCollectionParameter[]\n\t\tparameters: [${parameters}], // sap.m.UploadCollectionParameter[]\n\t\ttoolbar: ${toolbar}, // sap.m.OverflowToolbar\n\t\tinfoToolbar: ${infoToolbar}, // sap.m.Toolbar\n\t\tchange: [function (oEvent) {}, this], // function|array\n\t\tfileDeleted: [function (oEvent) {}, this], // function|array\n\t\tfilenameLengthExceed: [function (oEvent) {}, this], // function|array\n\t\tfileRenamed: [function (oEvent) {}, this], // function|array\n\t\tfileSizeExceed: [function (oEvent) {}, this], // function|array\n\t\ttypeMissmatch: [function (oEvent) {}, this], // function|array\n\t\tuploadComplete: [function (oEvent) {}, this], // function|array\n\t\tuploadTerminated: [function (oEvent) {}, this], // function|array\n\t\tbeforeUploadStarts: [function (oEvent) {}, this], // function|array\n\t\tselectionChange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/UploadCollection","static":"true","extends":"sap.ui.core.Control","helpDescription":"This control allows you to upload single or multiple files from your devices (desktop, tablet or phone) and attach them to the application.\n\nThe consuming application needs to take into account that the consistency checks of the model during the upload of the file need to be performed, for example, if the user is editing or deleting a file.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"UploadCollection(sId?, mSettings?) : sap.m.UploadCollection","name":"sap.m.UploadCollection","prefix":"UploadCollection","Experimental":false,"constructorDescription":"Constructor for a new UploadCollection.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFileType fileType} : string[]<\/li>\n<li>{@link #getMaximumFilenameLength maximumFilenameLength} : int<\/li>\n<li>{@link #getMaximumFileSize maximumFileSize} : float<\/li>\n<li>{@link #getMimeType mimeType} : string[]<\/li>\n<li>{@link #getMultiple multiple} : boolean (default: false)<\/li>\n<li>{@link #getNoDataText noDataText} : string<\/li>\n<li>{@link #getNoDataDescription noDataDescription} : string<\/li>\n<li>{@link #getSameFilenameAllowed sameFilenameAllowed} : boolean (default: false)<\/li>\n<li>{@link #getShowSeparators showSeparators} : sap.m.ListSeparators (default: All)<\/li>\n<li>{@link #getUploadEnabled uploadEnabled} : boolean (default: true)<\/li>\n<li>{@link #getUploadUrl uploadUrl} : string (default: ../../../upload)<\/li>\n<li>{@link #getInstantUpload instantUpload} : boolean (default: true)<\/li>\n<li>{@link #getNumberOfAttachmentsText numberOfAttachmentsText} : string<\/li>\n<li>{@link #getMode mode} : sap.m.ListMode (default: None)<\/li>\n<li>{@link #getUploadButtonInvisible uploadButtonInvisible} : boolean (default: false)<\/li>\n<li>{@link #getTerminationEnabled terminationEnabled} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.UploadCollectionItem[] (default)<\/li>\n<li>{@link #getHeaderParameters headerParameters} : sap.m.UploadCollectionParameter[]<\/li>\n<li>{@link #getParameters parameters} : sap.m.UploadCollectionParameter[]<\/li>\n<li>{@link #getToolbar toolbar} : sap.m.OverflowToolbar<\/li>\n<li>{@link #getInfoToolbar infoToolbar} : sap.m.Toolbar<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:fileDeleted fileDeleted} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:filenameLengthExceed filenameLengthExceed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:fileRenamed fileRenamed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:fileSizeExceed fileSizeExceed} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:typeMissmatch typeMissmatch} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:uploadComplete uploadComplete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:uploadTerminated uploadTerminated} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:beforeUploadStarts beforeUploadStarts} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:selectionChange selectionChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireBeforeUploadStarts(\n\t{\n\t\tfileName: \"${fileName}\", // string\n\t\taddHeaderParameter: ${fn_addHeaderParameter}, // function\n\t\tgetHeaderParameter: ${fn_getHeaderParameter} // function\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:beforeUploadStarts beforeUploadStarts} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireBeforeUploadStarts(mParameters?) : sap.m.UploadCollection","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.UploadCollection.fireBeforeUploadStarts"},{"template":"fireChange(\n\t{\n\t\tdocumentId: \"${documentId}\", // string\n\t\tfiles: [${files}] // [object Object][]\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:change change} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireChange(mParameters?) : sap.m.UploadCollection","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.UploadCollection.fireChange"},{"template":"fireFileDeleted(\n\t{\n\t\tdocumentId: \"${documentId}\", // string\n\t\titem: ${item} // sap.m.UploadCollectionItem\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:fileDeleted fileDeleted} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireFileDeleted(mParameters?) : sap.m.UploadCollection","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.UploadCollection.fireFileDeleted"},{"template":"fireFilenameLengthExceed(\n\t{\n\t\tdocumentId: \"${documentId}\", // string\n\t\tfiles: [${files}] // [object Object][]\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:filenameLengthExceed filenameLengthExceed} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireFilenameLengthExceed(mParameters?) : sap.m.UploadCollection","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.UploadCollection.fireFilenameLengthExceed"},{"template":"fireFileRenamed(\n\t{\n\t\tdocumentId: \"${documentId}\", // string\n\t\tfileName: \"${fileName}\", // string\n\t\titem: ${item} // sap.m.UploadCollectionItem\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:fileRenamed fileRenamed} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireFileRenamed(mParameters?) : sap.m.UploadCollection","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.UploadCollection.fireFileRenamed"},{"template":"fireFileSizeExceed(\n\t{\n\t\tdocumentId: \"${documentId}\", // string\n\t\tfileSize: \"${fileSize}\", // string\n\t\tfiles: [${files}] // [object Object][]\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:fileSizeExceed fileSizeExceed} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireFileSizeExceed(mParameters?) : sap.m.UploadCollection","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.UploadCollection.fireFileSizeExceed"},{"template":"fireSelectionChange(\n\t{\n\t\tselectedItem: ${selectedItem}, // sap.m.UploadCollectionItem\n\t\tselectedItems: [${selectedItems}], // [object Object][]\n\t\tselected: ${bSelected} // boolean\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:selectionChange selectionChange} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireSelectionChange(mParameters?) : sap.m.UploadCollection","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.UploadCollection.fireSelectionChange"},{"template":"fireTypeMissmatch(\n\t{\n\t\tdocumentId: \"${documentId}\", // string\n\t\tfileType: \"${fileType}\", // string\n\t\tmimeType: \"${mimeType}\", // string\n\t\tfiles: [${files}] // [object Object][]\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:typeMissmatch typeMissmatch} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireTypeMissmatch(mParameters?) : sap.m.UploadCollection","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.UploadCollection.fireTypeMissmatch"},{"template":"fireUploadComplete(\n\t{\n\t\treadyStateXHR: \"${readyStateXHR}\", // string\n\t\tresponse: \"${response}\", // string\n\t\tstatus: \"${status}\", // string\n\t\tfiles: [${files}] // [object Object][]\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:uploadComplete uploadComplete} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireUploadComplete(mParameters?) : sap.m.UploadCollection","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.UploadCollection.fireUploadComplete"},{"template":"fireUploadTerminated(\n\t{\n\t\tfileName: \"${fileName}\", // string\n\t\tgetHeaderParameter: ${fn_getHeaderParameter} // function\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:uploadTerminated uploadTerminated} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireUploadTerminated(mParameters?) : sap.m.UploadCollection","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.UploadCollection.fireUploadTerminated"},{"template":"new sap.m.UploadCollectionItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tcontributor: \"${contributor}\", // string\n\t\tdocumentId: \"${documentId}\", // string\n\t\tfileName: \"${fileName}\", // string\n\t\tfileSize: ${fileSize}, // float\n\t\tmimeType: \"${mimeType}\", // string\n\t\tthumbnailUrl: \"${thumbnailUrl}\", // string\n\t\tuploadedDate: \"${uploadedDate}\", // string\n\t\turl: \"${url}\", // string\n\t\tenableEdit: ${bEnableEdit}, // boolean\n\t\tenableDelete: ${bEnableDelete}, // boolean\n\t\tvisibleEdit: ${bVisibleEdit}, // boolean\n\t\tvisibleDelete: ${bVisibleDelete}, // boolean\n\t\tariaLabelForPicture: \"${ariaLabelForPicture}\", // string\n\t\tselected: ${bSelected}, // boolean\n\t\tattributes: [${attributes}], // sap.m.ObjectAttribute[]\n\t\tstatuses: [${statuses}], // sap.m.ObjectStatus[]\n\t\tmarkers: [${markers}], // sap.m.ObjectMarker[]\n\t\tfileUploader: ${fileUploader}, // (sap.ui.unified.FileUploader|string)\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tdeletePress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/UploadCollectionItem","static":"true","extends":"sap.ui.core.Element","helpDescription":"Defines a structure of the element of the 'items' aggregation.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"UploadCollectionItem(sId?, mSettings?) : sap.m.UploadCollectionItem","name":"sap.m.UploadCollectionItem","prefix":"UploadCollectionItem","Experimental":false,"constructorDescription":"Constructor for a new UploadCollectionItem\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getContributor contributor} : string<\/li>\n<li>{@link #getDocumentId documentId} : string<\/li>\n<li>{@link #getFileName fileName} : string<\/li>\n<li>{@link #getFileSize fileSize} : float<\/li>\n<li>{@link #getMimeType mimeType} : string<\/li>\n<li>{@link #getThumbnailUrl thumbnailUrl} : string<\/li>\n<li>{@link #getUploadedDate uploadedDate} : string<\/li>\n<li>{@link #getUrl url} : string<\/li>\n<li>{@link #getEnableEdit enableEdit} : boolean (default: true)<\/li>\n<li>{@link #getEnableDelete enableDelete} : boolean (default: true)<\/li>\n<li>{@link #getVisibleEdit visibleEdit} : boolean (default: true)<\/li>\n<li>{@link #getVisibleDelete visibleDelete} : boolean (default: true)<\/li>\n<li>{@link #getAriaLabelForPicture ariaLabelForPicture} : string<\/li>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getAttributes attributes} : sap.m.ObjectAttribute[] (default)<\/li>\n<li>{@link #getStatuses statuses} : sap.m.ObjectStatus[]<\/li>\n<li>{@link #getMarkers markers} : sap.m.ObjectMarker[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getFileUploader fileUploader} : (sap.ui.core.ID | sap.ui.unified.FileUploader)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:deletePress deletePress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."},{"template":"new sap.m.UploadCollectionParameter(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tname: \"${name}\", // string\n\t\tvalue: \"${value}\" // string\n\t}\n)\n","module":"sap/m/UploadCollectionParameter","static":"true","extends":"sap.ui.core.Element","helpDescription":"Defines a structure of the element of the 'parameters' aggregation.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"UploadCollectionParameter(sId?, mSettings?) : sap.m.UploadCollectionParameter","name":"sap.m.UploadCollectionParameter","prefix":"UploadCollectionParameter","Experimental":false,"constructorDescription":"Constructor for a new UploadCollectionParameter.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getName name} : string<\/li>\n<li>{@link #getValue value} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."},{"template":"new sap.m.UploadCollectionToolbarPlaceholder(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/UploadCollectionToolbarPlaceholder","static":"true","extends":"sap.ui.core.Control","helpDescription":"Used to create a customizable toolbar for the UploadCollection. A FileUploader instance is required in the toolbar and will be placed by the application.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"UploadCollectionToolbarPlaceholder(sId?, mSettings?) : sap.m.UploadCollectionToolbarPlaceholder","name":"sap.m.UploadCollectionToolbarPlaceholder","prefix":"UploadCollectionToolbarPlaceholder","Experimental":false,"constructorDescription":"Constructor for a new UploadCollectionToolbarPlaceholder.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n\nThis class does not have its own settings, but all settings applicable to the base type\n{@link sap.ui.core.Control#constructor sap.ui.core.Control} can be used."},{"template":"new sap.m.VBox(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\theight: ${\"\"}, // sap.ui.core.CSSSize\n\t\twidth: ${\"\"}, // sap.ui.core.CSSSize\n\t\tdisplayInline: ${bDisplayInline}, // boolean\n\t\tdirection: ${sap.m.FlexDirection.Row}, // sap.m.FlexDirection\n\t\tfitContainer: ${bFitContainer}, // boolean\n\t\trenderType: ${sap.m.FlexRendertype.Div}, // sap.m.FlexRendertype\n\t\tjustifyContent: ${sap.m.FlexJustifyContent.Start}, // sap.m.FlexJustifyContent\n\t\talignItems: ${sap.m.FlexAlignItems.Stretch}, // sap.m.FlexAlignItems\n\t\twrap: ${sap.m.FlexWrap.NoWrap}, // sap.m.FlexWrap\n\t\talignContent: ${sap.m.FlexAlignContent.Stretch}, // sap.m.FlexAlignContent\n\t\tbackgroundDesign: ${sap.m.BackgroundDesign.Transparent}, // sap.m.BackgroundDesign\n\t\titems: [${items}] // sap.ui.core.Control[]\n\t}\n)\n","module":"sap/m/VBox","static":"true","extends":"sap.m.FlexBox","helpDescription":"The VBox control builds the container for a vertical flexible box layout. VBox is a convenience control, as it is just a specialized FlexBox control.<br> <br> <b>Note:<\/b> Be sure to check the <code>renderType<\/code> setting to avoid issues due to browser inconsistencies.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"VBox(sId?, mSettings?) : sap.m.VBox","name":"sap.m.VBox","prefix":"VBox","Experimental":false,"constructorDescription":"Constructor for a new VBox."},{"template":"new sap.m.ViewSettingsCustomItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\tselected: ${bSelected}, // boolean\n\t\titemPropertyChanged: [function (oEvent) {}, this], // function|array\n\t\tfilterCount: ${0}, // int\n\t\tcustomControl: ${customControl} // sap.ui.core.Control\n\t}\n)\n","module":"sap/m/ViewSettingsCustomItem","static":"true","extends":"sap.m.ViewSettingsItem","helpDescription":"The ViewSettingsCustomItem control is used for modelling custom filters in the ViewSettingsDialog.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ViewSettingsCustomItem(sId?, mSettings?) : sap.m.ViewSettingsCustomItem","name":"sap.m.ViewSettingsCustomItem","prefix":"ViewSettingsCustomItem","Experimental":false,"constructorDescription":"Constructor for a new ViewSettingsCustomItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getFilterCount filterCount} : int (default: 0)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getCustomControl customControl} : sap.ui.core.Control<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ViewSettingsItem#constructor sap.m.ViewSettingsItem}\ncan be used as well."},{"template":"new sap.m.ViewSettingsCustomTab(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\ticon: ${\"\"}, // \"sap-icon://competitor\"\n\t\ttitle: ${\"\"}, // string\n\t\tcontent: [${content}] // sap.ui.core.Control[]\n\t}\n)\n","module":"sap/m/ViewSettingsCustomTab","static":"true","extends":"sap.ui.core.Item","helpDescription":"The ViewSettingsCustomTab control is used for adding custom tabs in the ViewSettingsDialog.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ViewSettingsCustomTab(sId?, mSettings?) : sap.m.ViewSettingsCustomTab","name":"sap.m.ViewSettingsCustomTab","prefix":"ViewSettingsCustomTab","Experimental":false,"constructorDescription":"Constructor for a new ViewSettingsCustomTab.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: sap-icon://competitor)<\/li>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well."},{"template":"new sap.m.ViewSettingsDialog(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\tsortDescending: ${bSortDescending}, // boolean\n\t\tgroupDescending: ${bGroupDescending}, // boolean\n\t\tfilterSearchOperator: ${sap.m.StringFilterOperator.StartsWith}, // sap.m.StringFilterOperator\n\t\tsortItems: [${sortItems}], // sap.m.ViewSettingsItem[]\n\t\tgroupItems: [${groupItems}], // sap.m.ViewSettingsItem[]\n\t\tfilterItems: [${filterItems}], // sap.m.ViewSettingsItem[]\n\t\tpresetFilterItems: [${presetFilterItems}], // sap.m.ViewSettingsItem[]\n\t\tcustomTabs: [${customTabs}], // sap.m.ViewSettingsCustomTab[]\n\t\tselectedSortItem: ${selectedSortItem}, // (sap.m.ViewSettingsItem|string)\n\t\tselectedGroupItem: ${selectedGroupItem}, // (sap.m.ViewSettingsItem|string)\n\t\tselectedPresetFilterItem: ${selectedPresetFilterItem}, // (sap.m.ViewSettingsItem|string)\n\t\tconfirm: [function (oEvent) {}, this], // function|array\n\t\tcancel: [function (oEvent) {}, this], // function|array\n\t\tresetFilters: [function (oEvent) {}, this], // function|array\n\t\tfilterDetailPageOpened: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/ViewSettingsDialog","static":"true","extends":"sap.ui.core.Control","helpDescription":"Helps the user to sort, filter, or group data within a (master) {@link sap.m.List} or a {@link sap.m.Table}. The dialog is triggered by icon buttons in the table toolbar. Each button shows a dropdown list icon.\n\n<h3>Overview<\/h3>\n\nThe <code>ViewSettingsDialog<\/code> is a composite control, consisting of a modal {@link sap.m.Popover} and several internal lists. There are three different tabs (Sort, Group, Filter) in the dialog that can be activated by filling the respective associations. If only one association is filled, the other tabs are automatically hidden. The selected options can be used to create sorters and filters for the table.\n\n<b>Note:<\/b> If the app does not offer all three sorting, filtering, and grouping functionalities, but only one of these (such as sort), we recommend placing the icon button directly in the toolbar. Do not place sort, filter, or group buttons in the footer toolbar if they refer to a table. Place group, sort, and filter buttons in the footer toolbar if they refer to a master list.\n\n<h3>Usage<\/h3>\n\n<i>When to use?<\/i> <ul><li>If you need to allow the user to sort line items in a manageable list or table (up to 20 columns)<\/li> <li>If you need to offer custom filter settings in a manageable list or table (up to 20 columns)<\/li> <li>If you need to allow the user to group line items in a manageable list or table (up to 20 columns)<\/li><\/ul>\n\n<i>When not to use?<\/i> <ul><li>If you have complex tables (more than 20 columns)<\/li> <li>If you need to rearrange columns within your table (use the {@link sap.m.TablePersoDialog} instead)<\/li> <li>If you need very specific sort, filter, or column sorting options within complex tables (use the {@link sap.m.P13nDialog} instead)<\/li><\/ul>\n\n<h3>Responsive behavior<\/h3>\n\nThe popover dialog appears as a modal window on desktop and tablet screen sizes, but full screen on smartphones.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ViewSettingsDialog(sId?, mSettings?) : sap.m.ViewSettingsDialog","name":"sap.m.ViewSettingsDialog","prefix":"ViewSettingsDialog","Experimental":false,"constructorDescription":"Constructor for a new <code>ViewSettingsDialog<\/code>.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getSortDescending sortDescending} : boolean (default: false)<\/li>\n<li>{@link #getGroupDescending groupDescending} : boolean (default: false)<\/li>\n<li>{@link #getFilterSearchOperator filterSearchOperator} : sap.m.StringFilterOperator (default: StartsWith)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSortItems sortItems} : sap.m.ViewSettingsItem[]<\/li>\n<li>{@link #getGroupItems groupItems} : sap.m.ViewSettingsItem[]<\/li>\n<li>{@link #getFilterItems filterItems} : sap.m.ViewSettingsItem[]<\/li>\n<li>{@link #getPresetFilterItems presetFilterItems} : sap.m.ViewSettingsItem[]<\/li>\n<li>{@link #getCustomTabs customTabs} : sap.m.ViewSettingsCustomTab[]<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedSortItem selectedSortItem} : (sap.ui.core.ID | sap.m.ViewSettingsItem)<\/li>\n<li>{@link #getSelectedGroupItem selectedGroupItem} : (sap.ui.core.ID | sap.m.ViewSettingsItem)<\/li>\n<li>{@link #getSelectedPresetFilterItem selectedPresetFilterItem} : (sap.ui.core.ID | sap.m.ViewSettingsItem)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:confirm confirm} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:cancel cancel} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:resetFilters resetFilters} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:filterDetailPageOpened filterDetailPageOpened} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireConfirm(\n\t{\n\t\tsortItem: ${sortItem}, // sap.m.ViewSettingsItem\n\t\tsortDescending: ${bSortDescending}, // boolean\n\t\tgroupItem: ${groupItem}, // sap.m.ViewSettingsItem\n\t\tgroupDescending: ${bGroupDescending}, // boolean\n\t\tpresetFilterItem: ${presetFilterItem}, // sap.m.ViewSettingsItem\n\t\tfilterItems: [${filterItems}], // [object Object][]\n\t\tfilterKeys: ${filterKeys}, // object\n\t\tfilterCompoundKeys: ${filterCompoundKeys}, // object\n\t\tfilterString: \"${filterString}\" // string\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:confirm confirm} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireConfirm(mParameters?) : sap.m.ViewSettingsDialog","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.ViewSettingsDialog.fireConfirm"},{"template":"fireFilterDetailPageOpened(\n\t{\n\t\tparentFilterItem: ${parentFilterItem} // sap.m.ViewSettingsFilterItem\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:filterDetailPageOpened filterDetailPageOpened} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireFilterDetailPageOpened(mParameters?) : sap.m.ViewSettingsDialog","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.ViewSettingsDialog.fireFilterDetailPageOpened"},{"template":"new sap.m.ViewSettingsFilterItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\tselected: ${bSelected}, // boolean\n\t\titemPropertyChanged: [function (oEvent) {}, this], // function|array\n\t\tmultiSelect: ${bMultiSelect}, // boolean\n\t\titems: [${items}], // sap.m.ViewSettingsItem[]\n\t\tfilterDetailItemsAggregationChange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/ViewSettingsFilterItem","static":"true","extends":"sap.m.ViewSettingsItem","helpDescription":"A ViewSettingsFilterItem control is used for modelling filter behaviour in the ViewSettingsDialog. It is derived from a core Item, but does not support the base class properties like textDirection and enabled. Setting these properties will not have any effects.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ViewSettingsFilterItem(sId?, mSettings?) : sap.m.ViewSettingsFilterItem","name":"sap.m.ViewSettingsFilterItem","prefix":"ViewSettingsFilterItem","Experimental":false,"constructorDescription":"Constructor for a new ViewSettingsFilterItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getMultiSelect multiSelect} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.m.ViewSettingsItem[]<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:filterDetailItemsAggregationChange filterDetailItemsAggregationChange} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.ViewSettingsItem#constructor sap.m.ViewSettingsItem}\ncan be used as well."},{"template":"new sap.m.ViewSettingsItem(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\ttext: ${\"\"}, // string\n\t\tenabled: ${bEnabled}, // boolean\n\t\ttextDirection: ${sap.ui.core.TextDirection.Inherit}, // sap.ui.core.TextDirection\n\t\tkey: \"${key}\", // string\n\t\tselected: ${bSelected}, // boolean\n\t\titemPropertyChanged: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/ViewSettingsItem","static":"true","extends":"sap.ui.core.Item","helpDescription":"ViewSettingsItem is used for modelling filter behaviour in the ViewSettingsDialog. It is derived from a core Item, but does not support the base class properties \"textDirection\" and \"enabled\", setting these properties will not have any effects.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ViewSettingsItem(sId?, mSettings?) : sap.m.ViewSettingsItem","name":"sap.m.ViewSettingsItem","prefix":"ViewSettingsItem","Experimental":false,"constructorDescription":"Constructor for a new ViewSettingsItem.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getSelected selected} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:itemPropertyChanged itemPropertyChanged} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Item#constructor sap.ui.core.Item}\ncan be used as well."},{"template":"fireItemPropertyChanged(\n\t{\n\t\tchangedItem: ${changedItem}, // sap.m.ViewSettingsItem\n\t\tpropertyKey: \"${propertyKey}\", // string\n\t\tpropertyValue: ${propertyValue} // any\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:itemPropertyChanged itemPropertyChanged} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireItemPropertyChanged(mParameters?) : sap.m.ViewSettingsItem","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.ViewSettingsItem.fireItemPropertyChanged"},{"template":"new sap.m.Wizard(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\twidth: ${\"auto\"}, // sap.ui.core.CSSSize\n\t\theight: ${\"100%\"}, // sap.ui.core.CSSSize\n\t\tshowNextButton: ${bShowNextButton}, // boolean\n\t\tfinishButtonText: ${\"Review\"}, // string\n\t\tenableBranching: ${bEnableBranching}, // boolean\n\t\tsteps: [${steps}], // sap.m.WizardStep[]\n\t\tcurrentStep: ${currentStep}, // (sap.m.WizardStep|string)\n\t\tstepActivate: [function (oEvent) {}, this], // function|array\n\t\tcomplete: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/Wizard","static":"true","extends":"sap.ui.core.Control","helpDescription":"Enables users to accomplish a single goal which consists of multiple dependable sub-tasks. <h3>Overview<\/h3> The sap.m.Wizard helps users complete a complex and unfamiliar task by dividing it into sections and guiding the user through it. The wizard has two main areas - a navigation area at the top showing the step sequence and a content area below it. <h3>Structure<\/h3> <h4>Navigation Area<\/h4> The top most area of the wizard is occupied by the navigation area. It shows the sequence of {@link sap.m.WizardStep wizard steps}. <ul> <li>The minimum number of steps is 3 and the maximum is 8 and are stored in the <code>steps<\/code> aggregation.<\/li> <li>Steps can be branching depending on choices the user made in their input - this is set by the <code>enableBranching<\/code> property. <\/li> <li>Steps can have different visual representations - numbers or icons. You can add labels for better readability <\/li> <\/ul> <h4>Content<\/h4> The content occupies the main part of the page. It can hold any type of input controls. The content is kept in {@link sap.m.WizardStep wizard steps}. <h4>Next Step Button<\/h4> The next step button is displayed below the content. It can be hidden by setting <code>showNextButton<\/code> to <code>false<\/code> and displayed, for example, only after the user has filled all mandatory fields. <h3>Usage<\/h3> <h4>When to use:<\/h4> When the user has to accomplish a long or unfamiliar task. <h4>When not to use:<\/h4> When the user has to accomplish a routine task that is clear and familiar. When the task has only two steps or less. <h3>Responsive Behavior<\/h3> On mobile devices the steps in the StepNavigator are grouped together and overlap. Tapping on them will show a popover to select the step to navigate to.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"Wizard(sId?, mSettings?) : sap.m.Wizard","name":"sap.m.Wizard","prefix":"Wizard","Experimental":false,"constructorDescription":"Constructor for a new Wizard.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getWidth width} : sap.ui.core.CSSSize (default: auto)<\/li>\n<li>{@link #getHeight height} : sap.ui.core.CSSSize (default: 100%)<\/li>\n<li>{@link #getShowNextButton showNextButton} : boolean (default: true)<\/li>\n<li>{@link #getFinishButtonText finishButtonText} : string (default: Review)<\/li>\n<li>{@link #getEnableBranching enableBranching} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSteps steps} : sap.m.WizardStep[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getCurrentStep currentStep} : (sap.ui.core.ID | sap.m.WizardStep)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:stepActivate stepActivate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:complete complete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"fireStepActivate(\n\t{\n\t\tindex: ${index} // int\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:stepActivate stepActivate} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireStepActivate(mParameters?) : sap.m.Wizard","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.Wizard.fireStepActivate"},{"template":"new sap.m.WizardStep(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: ${\"\"}, // string\n\t\ticon: ${\"\"}, // sap.ui.core.URI\n\t\tvalidated: ${bValidated}, // boolean\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tsubsequentSteps: [${subsequentSteps}], // (sap.m.WizardStep|string)[]\n\t\tnextStep: ${nextStep}, // (sap.m.WizardStep|string)\n\t\tcomplete: [function (oEvent) {}, this], // function|array\n\t\tactivate: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/WizardStep","static":"true","extends":"sap.ui.core.Control","helpDescription":"A container control used to aggregate user input controls as part of an sap.m.Wizard. <h3>Overview<\/h3> WizardStep gives the developer the ability to validate, invalidate the step and define subsequent steps. The WizardStep control control is supposed to be used only as an aggregation of the {@link sap.m.Wizard Wizard} control, and should not be used as a standalone one. <h3>Structure<\/h3> <ul> <li>Each wizard step has a title. Additionally it can have an icon.<\/li> <li>Each wizard step can be validated by setting the <code>validated<\/code> property. This action will trigger the rendering of the Next step button.<\/li> <li>If the execution needs to branch after a given step, you should set all possible next steps in the <code>subsequentSteps<\/code> aggregation.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"WizardStep(sId?, mSettings?) : sap.m.WizardStep","name":"sap.m.WizardStep","prefix":"WizardStep","Experimental":false,"constructorDescription":"Constructor for a new WizardStep.\n\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string (default: )<\/li>\n<li>{@link #getIcon icon} : sap.ui.core.URI (default: )<\/li>\n<li>{@link #getValidated validated} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSubsequentSteps subsequentSteps} : (sap.ui.core.ID | sap.m.WizardStep)[]<\/li>\n<li>{@link #getNextStep nextStep} : (sap.ui.core.ID | sap.m.WizardStep)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:complete complete} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<li>{@link #event:activate activate} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.routing.Router(\n\t\"${oRoutes}\", // object|[object Object][]\n\t{\n\t\tasync: ${bAsync} // boolean\n\t},\n\t\"${oOwner}\", // sap.ui.core.UIComponent\n\t\"${oTargetsConfig}\" // object\n)\n","Deprecated":false,"category":"constructor","module":"sap/m/routing/Router","static":"true","DeprecatedInfo":{"isDeprecated":false},"extends":"sap.ui.core.routing.Router","description":"Router(oRoutes?, oConfig?, oOwner?, oTargetsConfig?) : sap.m.routing.Router","Experimental":false,"prefix":"Router","name":"sap.m.routing.Router","constructorDescription":"Instantiates a SAPUI5 mobile Router see {@link sap.ui.core.routing.Router} for the constructor arguments\nThe difference to the {@link sap.ui.core.routing.Router} are the properties viewLevel, transition and transitionParameters you can specify in every Route or Target created by this router."},{"template":"new sap.m.routing.Targets(\n\t{\n\t\tviews: ${views}, // sap.ui.core.routing.Views\n\t\tconfig: ${config}, // object\n\t\ttargets: ${targets} // object\n\t}\n)\n","Deprecated":false,"category":"constructor","module":"sap/m/routing/Targets","static":"true","DeprecatedInfo":{"isDeprecated":false},"extends":"sap.ui.core.routing.Targets","description":"Targets(oOptions) : sap.m.routing.Targets","Experimental":false,"prefix":"Targets","name":"sap.m.routing.Targets","constructorDescription":"Provides a convenient way for placing views into the correct containers of your application.\nThe mobile extension of Targets also handles the triggering of page navigation when the target control is a {@link sap.m.SplitContainer}, a {@link sap.m.NavContainer} or a control which extends one of these.\nOther controls are also allowed, but the extra parameters viewLevel, transition and transitionParameters are ignored and it will behave like {@link sap.ui.core.routing.Targets}.\nWhen a target is displayed, dialogs will be closed. To change this use {@link #getTargetHandler} and {@link sap.m.routing.TargetHandler#setCloseDialogs}."},{"template":"new sap.m.semantic.AddAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/semantic/AddAction","static":"true","extends":"sap.m.semantic.SemanticButton","helpDescription":"An AddAction button has default semantic-specific properties and is eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.\n\nSee {@link sap.m.semantic.MasterPage#addAction}, {@link sap.m.semantic.FullscreenPage#addAction}, {@link sap.m.semantic.DetailPage#addAction}","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"AddAction(sId?, mSettings?) : sap.m.semantic.AddAction","name":"sap.m.semantic.AddAction","prefix":"AddAction","Experimental":false,"constructorDescription":"Constructor for a new AddAction."},{"template":"new sap.m.semantic.CancelAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/semantic/CancelAction","static":"true","extends":"sap.m.semantic.SemanticButton","helpDescription":"A CancelAction button has default semantic-specific properties and is eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"CancelAction(sId?, mSettings?) : sap.m.semantic.CancelAction","name":"sap.m.semantic.CancelAction","prefix":"CancelAction","Experimental":false,"constructorDescription":"Constructor for a new CancelAction."},{"template":"new sap.m.semantic.DeleteAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/semantic/DeleteAction","static":"true","extends":"sap.m.semantic.SemanticButton","helpDescription":"A DeleteAction button has default semantic-specific properties and is eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"DeleteAction(sId?, mSettings?) : sap.m.semantic.DeleteAction","name":"sap.m.semantic.DeleteAction","prefix":"DeleteAction","Experimental":false,"constructorDescription":"Constructor for a new DeleteAction."},{"template":"new sap.m.semantic.DetailPage(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttitleLevel: ${sap.ui.core.TitleLevel.Auto}, // sap.ui.core.TitleLevel\n\t\tshowNavButton: ${bShowNavButton}, // boolean\n\t\tshowSubHeader: ${bShowSubHeader}, // boolean\n\t\tenableScrolling: ${bEnableScrolling}, // boolean\n\t\tshowFooter: ${bShowFooter}, // boolean\n\t\tfloatingFooter: ${bFloatingFooter}, // boolean\n\t\tsemanticRuleSet: ${sap.m.semantic.SemanticRuleSetType.Classic}, // sap.m.semantic.SemanticRuleSetType\n\t\tbackgroundDesign: ${sap.m.PageBackgroundDesign.Standard}, // sap.m.PageBackgroundDesign\n\t\tsubHeader: ${subHeader}, // sap.m.IBar\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tcustomHeaderContent: [${customHeaderContent}], // sap.m.Button[]\n\t\tcustomFooterContent: [${customFooterContent}], // sap.m.Button[]\n\t\tlandmarkInfo: ${landmarkInfo}, // sap.m.PageAccessibleLandmarkInfo\n\t\tnavButtonPress: [function (oEvent) {}, this], // function|array\n\t\tcustomShareMenuContent: [${customShareMenuContent}], // sap.m.Button[]\n\t\taddAction: ${addAction}, // sap.m.semantic.AddAction\n\t\tmainAction: ${mainAction}, // sap.m.semantic.MainAction\n\t\tpositiveAction: ${positiveAction}, // sap.m.semantic.PositiveAction\n\t\tnegativeAction: ${negativeAction}, // sap.m.semantic.NegativeAction\n\t\tforwardAction: ${forwardAction}, // sap.m.semantic.ForwardAction\n\t\teditAction: ${editAction}, // sap.m.semantic.EditAction\n\t\tsaveAction: ${saveAction}, // sap.m.semantic.SaveAction\n\t\tdeleteAction: ${deleteAction}, // sap.m.semantic.DeleteAction\n\t\tcancelAction: ${cancelAction}, // sap.m.semantic.CancelAction\n\t\tflagAction: ${flagAction}, // sap.m.semantic.FlagAction\n\t\tfavoriteAction: ${favoriteAction}, // sap.m.semantic.FavoriteAction\n\t\topenInAction: ${openInAction}, // sap.m.semantic.OpenInAction\n\t\tdiscussInJamAction: ${discussInJamAction}, // sap.m.semantic.DiscussInJamAction\n\t\tshareInJamAction: ${shareInJamAction}, // sap.m.semantic.ShareInJamAction\n\t\tsendEmailAction: ${sendEmailAction}, // sap.m.semantic.SendEmailAction\n\t\tsendMessageAction: ${sendMessageAction}, // sap.m.semantic.SendMessageAction\n\t\tprintAction: ${printAction}, // sap.m.semantic.PrintAction\n\t\tmessagesIndicator: ${messagesIndicator}, // sap.m.semantic.MessagesIndicator\n\t\tsaveAsTileAction: ${saveAsTileAction}, // sap.m.Button\n\t\tpagingAction: ${pagingAction}, // sap.m.PagingButton\n\t\tdraftIndicator: ${draftIndicator} // sap.m.DraftIndicator\n\t}\n)\n","module":"sap/m/semantic/DetailPage","static":"true","extends":"sap.m.semantic.ShareMenuPage","helpDescription":"A DetailPage is a {@link sap.m.semantic.ShareMenuPage} that supports semantic content of the following types:\n\n<ul> <li>{@link sap.m.semantic.AddAction}<\/li> <li>{@link sap.m.semantic.MainAction}<\/li> <li>{@link sap.m.semantic.PositiveAction}<\/li> <li>{@link sap.m.semantic.NegativeAction}<\/li> <li>{@link sap.m.semantic.ForwardAction}<\/li> <li>{@link sap.m.semantic.EditAction}<\/li> <li>{@link sap.m.semantic.SaveAction}<\/li> <li>{@link sap.m.semantic.DeleteAction}<\/li> <li>{@link sap.m.semantic.CancelAction}<\/li> <li>{@link sap.m.semantic.FlagAction}<\/li> <li>{@link sap.m.semantic.FavoriteAction}<\/li> <li>{@link sap.m.semantic.OpenInAction}<\/li> <li>{@link sap.m.semantic.DiscussInJamAction}<\/li> <li>{@link sap.m.semantic.ShareInJamAction}<\/li> <li>{@link sap.m.semantic.SendEmailAction}<\/li> <li>{@link sap.m.semantic.SendMessageAction}<\/li> <li>{@link sap.m.semantic.PrintAction}<\/li> <li>{@link sap.m.semantic.MessagesIndicator}<\/li> <li>{@link sap.m.DraftIndicator}<\/li> <\/ul>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"DetailPage(sId?, mSettings?) : sap.m.semantic.DetailPage","name":"sap.m.semantic.DetailPage","prefix":"DetailPage","Experimental":false,"constructorDescription":"Constructor for a new DetailPage\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getAddAction addAction} : sap.m.semantic.AddAction<\/li>\n<li>{@link #getMainAction mainAction} : sap.m.semantic.MainAction<\/li>\n<li>{@link #getPositiveAction positiveAction} : sap.m.semantic.PositiveAction<\/li>\n<li>{@link #getNegativeAction negativeAction} : sap.m.semantic.NegativeAction<\/li>\n<li>{@link #getForwardAction forwardAction} : sap.m.semantic.ForwardAction<\/li>\n<li>{@link #getEditAction editAction} : sap.m.semantic.EditAction<\/li>\n<li>{@link #getSaveAction saveAction} : sap.m.semantic.SaveAction<\/li>\n<li>{@link #getDeleteAction deleteAction} : sap.m.semantic.DeleteAction<\/li>\n<li>{@link #getCancelAction cancelAction} : sap.m.semantic.CancelAction<\/li>\n<li>{@link #getFlagAction flagAction} : sap.m.semantic.FlagAction<\/li>\n<li>{@link #getFavoriteAction favoriteAction} : sap.m.semantic.FavoriteAction<\/li>\n<li>{@link #getOpenInAction openInAction} : sap.m.semantic.OpenInAction<\/li>\n<li>{@link #getDiscussInJamAction discussInJamAction} : sap.m.semantic.DiscussInJamAction<\/li>\n<li>{@link #getShareInJamAction shareInJamAction} : sap.m.semantic.ShareInJamAction<\/li>\n<li>{@link #getSendEmailAction sendEmailAction} : sap.m.semantic.SendEmailAction<\/li>\n<li>{@link #getSendMessageAction sendMessageAction} : sap.m.semantic.SendMessageAction<\/li>\n<li>{@link #getPrintAction printAction} : sap.m.semantic.PrintAction<\/li>\n<li>{@link #getMessagesIndicator messagesIndicator} : sap.m.semantic.MessagesIndicator<\/li>\n<li>{@link #getSaveAsTileAction saveAsTileAction} : sap.m.Button<\/li>\n<li>{@link #getPagingAction pagingAction} : sap.m.PagingButton<\/li>\n<li>{@link #getDraftIndicator draftIndicator} : sap.m.DraftIndicator<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.ShareMenuPage#constructor sap.m.semantic.ShareMenuPage}\ncan be used as well."},{"template":"new sap.m.semantic.DiscussInJamAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/semantic/DiscussInJamAction","static":"true","extends":"sap.m.semantic.SemanticButton","helpDescription":"A DiscussInJamAction button has default semantic-specific properties and is eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"DiscussInJamAction(sId?, mSettings?) : sap.m.semantic.DiscussInJamAction","name":"sap.m.semantic.DiscussInJamAction","prefix":"DiscussInJamAction","Experimental":false,"constructorDescription":"Constructor for a new DiscussInJamAction."},{"template":"new sap.m.semantic.EditAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/semantic/EditAction","static":"true","extends":"sap.m.semantic.SemanticButton","helpDescription":"An EditAction button has default semantic-specific properties and is eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"EditAction(sId?, mSettings?) : sap.m.semantic.EditAction","name":"sap.m.semantic.EditAction","prefix":"EditAction","Experimental":false,"constructorDescription":"Constructor for a new EditAction."},{"template":"new sap.m.semantic.FavoriteAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tpressed: ${bPressed} // boolean\n\t}\n)\n","module":"sap/m/semantic/FavoriteAction","static":"true","extends":"sap.m.semantic.SemanticToggleButton","helpDescription":"A FavoriteAction button has default semantic-specific properties and is eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"FavoriteAction(sId?, mSettings?) : sap.m.semantic.FavoriteAction","name":"sap.m.semantic.FavoriteAction","prefix":"FavoriteAction","Experimental":false,"constructorDescription":"Constructor for a new FavoriteAction."},{"template":"new sap.m.semantic.FilterAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/semantic/FilterAction","static":"true","extends":"sap.m.semantic.SemanticButton","helpDescription":"A FilterAction is a {@link sap.m.Button} control enhanced with styling according to the semantics of a common \"Filter\" action.\n\nA FilterAction cannot be used independently but only as aggregation content of a {@link sap.m.semantic.SemanticPage}.\n\nYour app should listen to the <code>press<\/code> event of {@link sap.m.semantic.FilterAction} in order to trigger the display of the filtering options.\n\nIf your filtering options are a simple list of items and require single choice only, then you can consider using a {@link sap.m.semantic.FilterSelect} instead.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"FilterAction(sId?, mSettings?) : sap.m.semantic.FilterAction","name":"sap.m.semantic.FilterAction","prefix":"FilterAction","Experimental":false,"constructorDescription":"Constructor for a new FilterAction."},{"template":"new sap.m.semantic.FilterSelect(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tselectedKey: ${\"\"}, // string\n\t\titems: [${items}], // sap.ui.core.Item[]\n\t\tselectedItem: ${selectedItem}, // (sap.ui.core.Item|string)\n\t\tchange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/semantic/FilterSelect","static":"true","extends":"sap.m.semantic.SemanticSelect","helpDescription":"A FilterSelect is a {@link sap.m.Select} control enhanced with styling according to the semantics of a common \"Filter\" acton.\n\nA FilterSelect cannot be used independently but only as aggregation content of a {@link sap.m.semantic.SemanticPage}.\n\nThe filtering options should be added to the <code>items<\/code> aggregation of {@link sap.m.semantic.FilterSelect} and will be displayed as a pop-up list with support for single-item selection. If this simple popup list is not sufficient for your use case, you can implement your own custom dialog by using {@link sap.m.semantic.FilterAction} to trigger the dialog opening.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"FilterSelect(sId?, mSettings?) : sap.m.semantic.FilterSelect","name":"sap.m.semantic.FilterSelect","prefix":"FilterSelect","Experimental":false,"constructorDescription":"Constructor for a new FilterSelect."},{"template":"new sap.m.semantic.FlagAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tpressed: ${bPressed} // boolean\n\t}\n)\n","module":"sap/m/semantic/FlagAction","static":"true","extends":"sap.m.semantic.SemanticToggleButton","helpDescription":"A FlagAction button has default semantic-specific properties and is eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"FlagAction(sId?, mSettings?) : sap.m.semantic.FlagAction","name":"sap.m.semantic.FlagAction","prefix":"FlagAction","Experimental":false,"constructorDescription":"Constructor for a new FlagAction."},{"template":"new sap.m.semantic.ForwardAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/semantic/ForwardAction","static":"true","extends":"sap.m.semantic.SemanticButton","helpDescription":"A ForwardAction button has default semantic-specific properties and is eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ForwardAction(sId?, mSettings?) : sap.m.semantic.ForwardAction","name":"sap.m.semantic.ForwardAction","prefix":"ForwardAction","Experimental":false,"constructorDescription":"Constructor for a new ForwardAction."},{"template":"new sap.m.semantic.FullscreenPage(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttitleLevel: ${sap.ui.core.TitleLevel.Auto}, // sap.ui.core.TitleLevel\n\t\tshowNavButton: ${bShowNavButton}, // boolean\n\t\tshowSubHeader: ${bShowSubHeader}, // boolean\n\t\tenableScrolling: ${bEnableScrolling}, // boolean\n\t\tshowFooter: ${bShowFooter}, // boolean\n\t\tfloatingFooter: ${bFloatingFooter}, // boolean\n\t\tsemanticRuleSet: ${sap.m.semantic.SemanticRuleSetType.Classic}, // sap.m.semantic.SemanticRuleSetType\n\t\tbackgroundDesign: ${sap.m.PageBackgroundDesign.Standard}, // sap.m.PageBackgroundDesign\n\t\tsubHeader: ${subHeader}, // sap.m.IBar\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tcustomHeaderContent: [${customHeaderContent}], // sap.m.Button[]\n\t\tcustomFooterContent: [${customFooterContent}], // sap.m.Button[]\n\t\tlandmarkInfo: ${landmarkInfo}, // sap.m.PageAccessibleLandmarkInfo\n\t\tnavButtonPress: [function (oEvent) {}, this], // function|array\n\t\tcustomShareMenuContent: [${customShareMenuContent}], // sap.m.Button[]\n\t\taddAction: ${addAction}, // sap.m.semantic.AddAction\n\t\tmainAction: ${mainAction}, // sap.m.semantic.MainAction\n\t\tpositiveAction: ${positiveAction}, // sap.m.semantic.PositiveAction\n\t\tnegativeAction: ${negativeAction}, // sap.m.semantic.NegativeAction\n\t\tforwardAction: ${forwardAction}, // sap.m.semantic.ForwardAction\n\t\teditAction: ${editAction}, // sap.m.semantic.EditAction\n\t\tsaveAction: ${saveAction}, // sap.m.semantic.SaveAction\n\t\tdeleteAction: ${deleteAction}, // sap.m.semantic.DeleteAction\n\t\tcancelAction: ${cancelAction}, // sap.m.semantic.CancelAction\n\t\tflagAction: ${flagAction}, // sap.m.semantic.FlagAction\n\t\tfavoriteAction: ${favoriteAction}, // sap.m.semantic.FavoriteAction\n\t\topenInAction: ${openInAction}, // sap.m.semantic.OpenInAction\n\t\tdiscussInJamAction: ${discussInJamAction}, // sap.m.semantic.DiscussInJamAction\n\t\tshareInJamAction: ${shareInJamAction}, // sap.m.semantic.ShareInJamAction\n\t\tsendEmailAction: ${sendEmailAction}, // sap.m.semantic.SendEmailAction\n\t\tsendMessageAction: ${sendMessageAction}, // sap.m.semantic.SendMessageAction\n\t\tprintAction: ${printAction}, // sap.m.semantic.PrintAction\n\t\tmessagesIndicator: ${messagesIndicator}, // sap.m.semantic.MessagesIndicator\n\t\tsaveAsTileAction: ${saveAsTileAction}, // sap.m.Button\n\t\tpagingAction: ${pagingAction}, // sap.m.PagingButton\n\t\tdraftIndicator: ${draftIndicator} // sap.m.DraftIndicator\n\t}\n)\n","module":"sap/m/semantic/FullscreenPage","static":"true","extends":"sap.m.semantic.ShareMenuPage","helpDescription":"A FullscreenPage is a {@link sap.m.semantic.ShareMenuPage} that supports semantic content of the following types:\n\n<ul> <li>{@link sap.m.semantic.AddAction}<\/li> <li>{@link sap.m.semantic.MainAction}<\/li> <li>{@link sap.m.semantic.PositiveAction}<\/li> <li>{@link sap.m.semantic.NegativeAction}<\/li> <li>{@link sap.m.semantic.ForwardAction}<\/li> <li>{@link sap.m.semantic.EditAction}<\/li> <li>{@link sap.m.semantic.SaveAction}<\/li> <li>{@link sap.m.semantic.DeleteAction}<\/li> <li>{@link sap.m.semantic.CancelAction}<\/li> <li>{@link sap.m.semantic.FlagAction}<\/li> <li>{@link sap.m.semantic.FavoriteAction}<\/li> <li>{@link sap.m.semantic.OpenInAction}<\/li> <li>{@link sap.m.semantic.DiscussInJamAction}<\/li> <li>{@link sap.m.semantic.ShareInJamAction}<\/li> <li>{@link sap.m.semantic.SendEmailAction}<\/li> <li>{@link sap.m.semantic.SendMessageAction}<\/li> <li>{@link sap.m.semantic.PrintAction}<\/li> <li>{@link sap.m.semantic.MessagesIndicator}<\/li> <li>{@link sap.m.DraftIndicator}<\/li> <\/ul>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"FullscreenPage(sId?, mSettings?) : sap.m.semantic.FullscreenPage","name":"sap.m.semantic.FullscreenPage","prefix":"FullscreenPage","Experimental":false,"constructorDescription":"Constructor for a new FullscreenPage\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getAddAction addAction} : sap.m.semantic.AddAction<\/li>\n<li>{@link #getMainAction mainAction} : sap.m.semantic.MainAction<\/li>\n<li>{@link #getPositiveAction positiveAction} : sap.m.semantic.PositiveAction<\/li>\n<li>{@link #getNegativeAction negativeAction} : sap.m.semantic.NegativeAction<\/li>\n<li>{@link #getForwardAction forwardAction} : sap.m.semantic.ForwardAction<\/li>\n<li>{@link #getEditAction editAction} : sap.m.semantic.EditAction<\/li>\n<li>{@link #getSaveAction saveAction} : sap.m.semantic.SaveAction<\/li>\n<li>{@link #getDeleteAction deleteAction} : sap.m.semantic.DeleteAction<\/li>\n<li>{@link #getCancelAction cancelAction} : sap.m.semantic.CancelAction<\/li>\n<li>{@link #getFlagAction flagAction} : sap.m.semantic.FlagAction<\/li>\n<li>{@link #getFavoriteAction favoriteAction} : sap.m.semantic.FavoriteAction<\/li>\n<li>{@link #getOpenInAction openInAction} : sap.m.semantic.OpenInAction<\/li>\n<li>{@link #getDiscussInJamAction discussInJamAction} : sap.m.semantic.DiscussInJamAction<\/li>\n<li>{@link #getShareInJamAction shareInJamAction} : sap.m.semantic.ShareInJamAction<\/li>\n<li>{@link #getSendEmailAction sendEmailAction} : sap.m.semantic.SendEmailAction<\/li>\n<li>{@link #getSendMessageAction sendMessageAction} : sap.m.semantic.SendMessageAction<\/li>\n<li>{@link #getPrintAction printAction} : sap.m.semantic.PrintAction<\/li>\n<li>{@link #getMessagesIndicator messagesIndicator} : sap.m.semantic.MessagesIndicator<\/li>\n<li>{@link #getSaveAsTileAction saveAsTileAction} : sap.m.Button<\/li>\n<li>{@link #getPagingAction pagingAction} : sap.m.PagingButton<\/li>\n<li>{@link #getDraftIndicator draftIndicator} : sap.m.DraftIndicator<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.ShareMenuPage#constructor sap.m.semantic.ShareMenuPage}\ncan be used as well."},{"template":"new sap.m.semantic.GroupAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/semantic/GroupAction","static":"true","extends":"sap.m.semantic.SemanticButton","helpDescription":"A GroupAction is a {@link sap.m.Button} control enhanced with styling according to the semantics of a common \"Group\" action.\n\nA GroupAction cannot be used independently but only as aggregation content of a {@link sap.m.semantic.SemanticPage}.\n\nYour app should listen to the <code>press<\/code> event of {@link sap.m.semantic.GroupAction} in order to trigger the display of the grouping options.\n\nIf your grouping options are a simple list of items and require single choice only, then you can consider using a {@link sap.m.semantic.GroupSelect} instead.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"GroupAction(sId?, mSettings?) : sap.m.semantic.GroupAction","name":"sap.m.semantic.GroupAction","prefix":"GroupAction","Experimental":false,"constructorDescription":"Constructor for a new GroupAction."},{"template":"new sap.m.semantic.GroupSelect(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tselectedKey: ${\"\"}, // string\n\t\titems: [${items}], // sap.ui.core.Item[]\n\t\tselectedItem: ${selectedItem}, // (sap.ui.core.Item|string)\n\t\tchange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/semantic/GroupSelect","static":"true","extends":"sap.m.semantic.SemanticSelect","helpDescription":"A GroupSelect is a {@link sap.m.Select} control enhanced with styling according to the semantics of a common \"Group\" acton.\n\nA GroupSelect cannot be used independently but only as aggregation content of a {@link sap.m.semantic.SemanticPage}.\n\nThe grouping options should be added to the <code>items<\/code> aggregation of {@link sap.m.semantic.GroupSelect} and will be displayed as a pop-up list with support for single-item selection. If this simple popup list is not sufficient for your use case, you can implement your own custom dialog by using {@link sap.m.semantic.GroupAction} to trigger the dialog opening.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"GroupSelect(sId?, mSettings?) : sap.m.semantic.GroupSelect","name":"sap.m.semantic.GroupSelect","prefix":"GroupSelect","Experimental":false,"constructorDescription":"Constructor for a new GroupSelect."},{"template":"new sap.m.semantic.MainAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\ttext: \"${text}\" // string\n\t}\n)\n","module":"sap/m/semantic/MainAction","static":"true","extends":"sap.m.semantic.SemanticButton","helpDescription":"A MainAction button has default semantic-specific properties and is eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"MainAction(sId?, mSettings?) : sap.m.semantic.MainAction","name":"sap.m.semantic.MainAction","prefix":"MainAction","Experimental":false,"constructorDescription":"Constructor for a new MainAction.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.SemanticButton#constructor sap.m.semantic.SemanticButton}\ncan be used as well."},{"template":"new sap.m.semantic.MasterPage(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttitleLevel: ${sap.ui.core.TitleLevel.Auto}, // sap.ui.core.TitleLevel\n\t\tshowNavButton: ${bShowNavButton}, // boolean\n\t\tshowSubHeader: ${bShowSubHeader}, // boolean\n\t\tenableScrolling: ${bEnableScrolling}, // boolean\n\t\tshowFooter: ${bShowFooter}, // boolean\n\t\tfloatingFooter: ${bFloatingFooter}, // boolean\n\t\tsemanticRuleSet: ${sap.m.semantic.SemanticRuleSetType.Classic}, // sap.m.semantic.SemanticRuleSetType\n\t\tbackgroundDesign: ${sap.m.PageBackgroundDesign.Standard}, // sap.m.PageBackgroundDesign\n\t\tsubHeader: ${subHeader}, // sap.m.IBar\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tcustomHeaderContent: [${customHeaderContent}], // sap.m.Button[]\n\t\tcustomFooterContent: [${customFooterContent}], // sap.m.Button[]\n\t\tlandmarkInfo: ${landmarkInfo}, // sap.m.PageAccessibleLandmarkInfo\n\t\tnavButtonPress: [function (oEvent) {}, this], // function|array\n\t\taddAction: ${addAction}, // sap.m.semantic.AddAction\n\t\tmainAction: ${mainAction}, // sap.m.semantic.MainAction\n\t\tpositiveAction: ${positiveAction}, // sap.m.semantic.PositiveAction\n\t\tnegativeAction: ${negativeAction}, // sap.m.semantic.NegativeAction\n\t\tmultiSelectAction: ${multiSelectAction}, // sap.m.semantic.MultiSelectAction\n\t\tforwardAction: ${forwardAction}, // sap.m.semantic.ForwardAction\n\t\teditAction: ${editAction}, // sap.m.semantic.EditAction\n\t\tsaveAction: ${saveAction}, // sap.m.semantic.SaveAction\n\t\tdeleteAction: ${deleteAction}, // sap.m.semantic.DeleteAction\n\t\tcancelAction: ${cancelAction}, // sap.m.semantic.CancelAction\n\t\tsort: ${sort}, // sap.m.semantic.ISort\n\t\tfilter: ${filter}, // sap.m.semantic.IFilter\n\t\tgroup: ${group}, // sap.m.semantic.IGroup\n\t\tmessagesIndicator: ${messagesIndicator} // sap.m.semantic.MessagesIndicator\n\t}\n)\n","module":"sap/m/semantic/MasterPage","static":"true","extends":"sap.m.semantic.SemanticPage","helpDescription":"A MasterPage is a {@link sap.m.semantic.SemanticPage} that supports semantic content of the following types:\n\n<ul> <li>{@link sap.m.semantic.AddAction}<\/li> <li>{@link sap.m.semantic.MainAction}<\/li> <li>{@link sap.m.semantic.PositiveAction}<\/li> <li>{@link sap.m.semantic.NegativeAction}<\/li> <li>{@link sap.m.semantic.ForwardAction}<\/li> <li>{@link sap.m.semantic.EditAction}<\/li> <li>{@link sap.m.semantic.SaveAction}<\/li> <li>{@link sap.m.semantic.DeleteAction}<\/li> <li>{@link sap.m.semantic.CancelAction}<\/li> <li>{@link sap.m.semantic.MultiSelectAction}<\/li> <li>{@link sap.m.semantic.FlagAction}<\/li> <li>{@link sap.m.semantic.FavoriteAction}<\/li> <li>{@link sap.m.semantic.SortAction}<\/li> <li>{@link sap.m.semantic.SortSelect}<\/li> <li>{@link sap.m.semantic.FilterAction}<\/li> <li>{@link sap.m.semantic.FilterSelect}<\/li> <li>{@link sap.m.semantic.GroupAction}<\/li> <li>{@link sap.m.semantic.GroupSelect}<\/li> <li>{@link sap.m.semantic.MessagesIndicator}<\/li> <\/ul>","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"MasterPage(sId?, mSettings?) : sap.m.semantic.MasterPage","name":"sap.m.semantic.MasterPage","prefix":"MasterPage","Experimental":false,"constructorDescription":"Constructor for a new MasterPage\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getAddAction addAction} : sap.m.semantic.AddAction<\/li>\n<li>{@link #getMainAction mainAction} : sap.m.semantic.MainAction<\/li>\n<li>{@link #getPositiveAction positiveAction} : sap.m.semantic.PositiveAction<\/li>\n<li>{@link #getNegativeAction negativeAction} : sap.m.semantic.NegativeAction<\/li>\n<li>{@link #getMultiSelectAction multiSelectAction} : sap.m.semantic.MultiSelectAction<\/li>\n<li>{@link #getForwardAction forwardAction} : sap.m.semantic.ForwardAction<\/li>\n<li>{@link #getEditAction editAction} : sap.m.semantic.EditAction<\/li>\n<li>{@link #getSaveAction saveAction} : sap.m.semantic.SaveAction<\/li>\n<li>{@link #getDeleteAction deleteAction} : sap.m.semantic.DeleteAction<\/li>\n<li>{@link #getCancelAction cancelAction} : sap.m.semantic.CancelAction<\/li>\n<li>{@link #getSort sort} : sap.m.semantic.ISort<\/li>\n<li>{@link #getFilter filter} : sap.m.semantic.IFilter<\/li>\n<li>{@link #getGroup group} : sap.m.semantic.IGroup<\/li>\n<li>{@link #getMessagesIndicator messagesIndicator} : sap.m.semantic.MessagesIndicator<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.SemanticPage#constructor sap.m.semantic.SemanticPage}\ncan be used as well."},{"template":"new sap.m.semantic.MessagesIndicator(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/semantic/MessagesIndicator","static":"true","extends":"sap.m.semantic.SemanticButton","helpDescription":"A MessagesIndicator button has default semantic-specific properties and is eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"MessagesIndicator(sId?, mSettings?) : sap.m.semantic.MessagesIndicator","name":"sap.m.semantic.MessagesIndicator","prefix":"MessagesIndicator","Experimental":false,"constructorDescription":"Constructor for a new MessagesIndicator."},{"template":"new sap.m.semantic.MultiSelectAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tpressed: ${bPressed} // boolean\n\t}\n)\n","module":"sap/m/semantic/MultiSelectAction","static":"true","extends":"sap.m.semantic.SemanticToggleButton","helpDescription":"A MultiSelectAction button has default semantic-specific properties and is eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"MultiSelectAction(sId?, mSettings?) : sap.m.semantic.MultiSelectAction","name":"sap.m.semantic.MultiSelectAction","prefix":"MultiSelectAction","Experimental":false,"constructorDescription":"Constructor for a new MultiSelectAction."},{"template":"new sap.m.semantic.NegativeAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\ttext: \"${text}\" // string\n\t}\n)\n","module":"sap/m/semantic/NegativeAction","static":"true","extends":"sap.m.semantic.SemanticButton","helpDescription":"A NegativeAction button has default semantic-specific properties and is eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"NegativeAction(sId?, mSettings?) : sap.m.semantic.NegativeAction","name":"sap.m.semantic.NegativeAction","prefix":"NegativeAction","Experimental":false,"constructorDescription":"Constructor for a new NegativeAction.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.SemanticButton#constructor sap.m.semantic.SemanticButton}\ncan be used as well."},{"template":"new sap.m.semantic.OpenInAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/semantic/OpenInAction","static":"true","extends":"sap.m.semantic.SemanticButton","helpDescription":"An OpenInAction button has default semantic-specific properties and is eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"OpenInAction(sId?, mSettings?) : sap.m.semantic.OpenInAction","name":"sap.m.semantic.OpenInAction","prefix":"OpenInAction","Experimental":false,"constructorDescription":"Constructor for a new OpenInAction."},{"template":"new sap.m.semantic.PositiveAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\ttext: \"${text}\" // string\n\t}\n)\n","module":"sap/m/semantic/PositiveAction","static":"true","extends":"sap.m.semantic.SemanticButton","helpDescription":"A PositiveAction button has default semantic-specific properties and is eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"PositiveAction(sId?, mSettings?) : sap.m.semantic.PositiveAction","name":"sap.m.semantic.PositiveAction","prefix":"PositiveAction","Experimental":false,"constructorDescription":"Constructor for a new PositiveAction.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getText text} : string<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.SemanticButton#constructor sap.m.semantic.SemanticButton}\ncan be used as well."},{"template":"new sap.m.semantic.PrintAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/semantic/PrintAction","static":"true","extends":"sap.m.semantic.SemanticButton","helpDescription":"A PrintAction button has default semantic-specific properties and is eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"PrintAction(sId?, mSettings?) : sap.m.semantic.PrintAction","name":"sap.m.semantic.PrintAction","prefix":"PrintAction","Experimental":false,"constructorDescription":"Constructor for a new PrintAction."},{"template":"new sap.m.semantic.SaveAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/semantic/SaveAction","static":"true","extends":"sap.m.semantic.SemanticButton","helpDescription":"A SaveAction button has default semantic-specific properties and is eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SaveAction(sId?, mSettings?) : sap.m.semantic.SaveAction","name":"sap.m.semantic.SaveAction","prefix":"SaveAction","Experimental":false,"constructorDescription":"Constructor for a new SaveAction."},{"template":"new sap.m.semantic.SemanticButton(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/semantic/SemanticButton","static":"true","extends":"sap.m.semantic.SemanticControl","helpDescription":"A semantic button is either a {@link sap.m.Button} or {@link sap.m.semantic.SemanticOverflowToolbarButton} , eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SemanticButton(sId?, mSettings?) : sap.m.semantic.SemanticButton","name":"sap.m.semantic.SemanticButton","prefix":"SemanticButton","Experimental":false,"constructorDescription":"Constructor for a new SemanticButton.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:press press} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.SemanticControl#constructor sap.m.semantic.SemanticControl}\ncan be used as well."},{"template":"new sap.m.semantic.SemanticControl(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible} // boolean\n\t}\n)\n","module":"sap/m/semantic/SemanticControl","static":"true","extends":"sap.ui.core.Element","helpDescription":"A semantic control is an abstraction for either a {@link sap.m.semantic.SemanticButton} or {@link sap.m.semantic.SemanticSelect} , eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SemanticControl(sId?, mSettings?) : sap.m.semantic.SemanticControl","name":"sap.m.semantic.SemanticControl","prefix":"SemanticControl","Experimental":false,"constructorDescription":"Constructor for a new SemanticControl.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getVisible visible} : boolean (default: true)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Element#constructor sap.ui.core.Element}\ncan be used as well."},{"template":"new sap.m.semantic.SemanticPage(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttitleLevel: ${sap.ui.core.TitleLevel.Auto}, // sap.ui.core.TitleLevel\n\t\tshowNavButton: ${bShowNavButton}, // boolean\n\t\tshowSubHeader: ${bShowSubHeader}, // boolean\n\t\tenableScrolling: ${bEnableScrolling}, // boolean\n\t\tshowFooter: ${bShowFooter}, // boolean\n\t\tfloatingFooter: ${bFloatingFooter}, // boolean\n\t\tsemanticRuleSet: ${sap.m.semantic.SemanticRuleSetType.Classic}, // sap.m.semantic.SemanticRuleSetType\n\t\tbackgroundDesign: ${sap.m.PageBackgroundDesign.Standard}, // sap.m.PageBackgroundDesign\n\t\tsubHeader: ${subHeader}, // sap.m.IBar\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tcustomHeaderContent: [${customHeaderContent}], // sap.m.Button[]\n\t\tcustomFooterContent: [${customFooterContent}], // sap.m.Button[]\n\t\tlandmarkInfo: ${landmarkInfo}, // sap.m.PageAccessibleLandmarkInfo\n\t\tnavButtonPress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/semantic/SemanticPage","static":"true","extends":"sap.ui.core.Control","helpDescription":"An enhanced {@link sap.m.Page}, that can contain controls with semantic meaning, see {@link sap.m.semantic.SemanticControl}.\n\n<b>Note:<\/b> This control implements the SAP Fiori 1.0 design guidelines. For SAP Fiori 2.0, see the {@link sap.f.semantic.SemanticPage}.\n\n<h3>Overview<\/h3>\n\nThe main functionality of the <code>SemanticPage<\/code> is to predefine the placement, behavior and styles of the page elements.\n\nContent specified in the semantic aggregations will be automatically positioned in dedicated sections of the footer or the header of the page.\n\n<h3>Structure<\/h3>\n\nThe semantics of the content are the following: <ul> <li>Visual properties (for example, <code>AddAction<\/code> will be styled as an icon button)<\/li> <li>Position in the page (UX guidelines specify that some buttons should be in the header only, while others are in the footer or the \"share\" menu, so we do the correct positioning)<\/li> <li>Sequence order (UX guidelines define a specific sequence order of semantic controls with respect to each other)<\/li> <li>Default localized tooltip for icon-only buttons<\/li> <li>Overflow behavior (UX guidelines define which buttons are allowed to go to the overflow of the toolbar when the screen gets narrower). For icon buttons, we ensure that the text label of the button appears when the button is in overflow, as specified by UX.<\/li> <li>Screen reader support (invisible text for reading the semantic type)<\/li> <\/ul>\n\nIn addition to the predefined semantic controls, the <code>SemanticPage<\/code> can host also custom app controls. It preserves most of the API of the {@link sap.m.Page} for specifying page content.\n\n<h3>Usage<\/h3>\n\nThe app developer only has to specify the action type, and the required styling and positioning are automatically added.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SemanticPage(sId?, mSettings?) : sap.m.semantic.SemanticPage","name":"sap.m.semantic.SemanticPage","prefix":"SemanticPage","Experimental":false,"constructorDescription":"Constructor for a new <code>SemanticPage<\/code>.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getTitle title} : string<\/li>\n<li>{@link #getTitleLevel titleLevel} : sap.ui.core.TitleLevel (default: Auto)<\/li>\n<li>{@link #getShowNavButton showNavButton} : boolean (default: false)<\/li>\n<li>{@link #getShowSubHeader showSubHeader} : boolean (default: true)<\/li>\n<li>{@link #getEnableScrolling enableScrolling} : boolean (default: true)<\/li>\n<li>{@link #getShowFooter showFooter} : boolean (default: true)<\/li>\n<li>{@link #getFloatingFooter floatingFooter} : boolean (default: false)<\/li>\n<li>{@link #getSemanticRuleSet semanticRuleSet} : sap.m.semantic.SemanticRuleSetType (default: Classic)<\/li>\n<li>{@link #getBackgroundDesign backgroundDesign} : sap.m.PageBackgroundDesign (default: Standard)<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getSubHeader subHeader} : sap.m.IBar<\/li>\n<li>{@link #getContent content} : sap.ui.core.Control[] (default)<\/li>\n<li>{@link #getCustomHeaderContent customHeaderContent} : sap.m.Button[]<\/li>\n<li>{@link #getCustomFooterContent customFooterContent} : sap.m.Button[]<\/li>\n<li>{@link #getLandmarkInfo landmarkInfo} : sap.m.PageAccessibleLandmarkInfo<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:navButtonPress navButtonPress} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.ui.core.Control#constructor sap.ui.core.Control}\ncan be used as well."},{"template":"new sap.m.semantic.SemanticSelect(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tselectedKey: ${\"\"}, // string\n\t\titems: [${items}], // sap.ui.core.Item[]\n\t\tselectedItem: ${selectedItem}, // (sap.ui.core.Item|string)\n\t\tchange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/semantic/SemanticSelect","static":"true","extends":"sap.m.semantic.SemanticControl","helpDescription":"A semantic select is a {@link sap.m.Select} eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SemanticSelect(sId?, mSettings?) : sap.m.semantic.SemanticSelect","name":"sap.m.semantic.SemanticSelect","prefix":"SemanticSelect","Experimental":false,"constructorDescription":"Constructor for a new SemanticSelect.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getEnabled enabled} : boolean (default: true)<\/li>\n<li>{@link #getSelectedKey selectedKey} : string (default: )<\/li>\n<\/ul>\n<\/li>\n<li>Aggregations\n<ul>\n<li>{@link #getItems items} : sap.ui.core.Item[] (default)<\/li>\n<\/ul>\n<\/li>\n<li>Associations\n<ul>\n<li>{@link #getSelectedItem selectedItem} : (sap.ui.core.ID | sap.ui.core.Item)<\/li>\n<\/ul>\n<\/li>\n<li>Events\n<ul>\n<li>{@link #event:change change} : fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.SemanticControl#constructor sap.m.semantic.SemanticControl}\ncan be used as well."},{"template":"fireChange(\n\t{\n\t\tselectedItem: ${selectedItem} // sap.ui.core.Item\n\t}\n)\n","Deprecated":false,"helpDescription":"Fires event {@link #event:change change} to attached listeners.","category":"method","DeprecatedInfo":{"isDeprecated":false},"description":"fireChange(mParameters?) : sap.m.semantic.SemanticSelect","Experimental":false,"prefix":"^withoutprefix","name":"sap.m.semantic.SemanticSelect.fireChange"},{"template":"new sap.m.semantic.SemanticToggleButton(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this], // function|array\n\t\tpressed: ${bPressed} // boolean\n\t}\n)\n","module":"sap/m/semantic/SemanticToggleButton","static":"true","extends":"sap.m.semantic.SemanticButton","helpDescription":"A SemanticToggleButton is eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SemanticToggleButton(sId?, mSettings?) : sap.m.semantic.SemanticToggleButton","name":"sap.m.semantic.SemanticToggleButton","prefix":"SemanticToggleButton","Experimental":false,"constructorDescription":"Constructor for a new SemanticToggleButton.\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Properties\n<ul>\n<li>{@link #getPressed pressed} : boolean (default: false)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.SemanticButton#constructor sap.m.semantic.SemanticButton}\ncan be used as well."},{"template":"new sap.m.semantic.SendEmailAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/semantic/SendEmailAction","static":"true","extends":"sap.m.semantic.SemanticButton","helpDescription":"A SendEmailAction button has default semantic-specific properties and is eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SendEmailAction(sId?, mSettings?) : sap.m.semantic.SendEmailAction","name":"sap.m.semantic.SendEmailAction","prefix":"SendEmailAction","Experimental":false,"constructorDescription":"Constructor for a new SendEmailAction."},{"template":"new sap.m.semantic.SendMessageAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/semantic/SendMessageAction","static":"true","extends":"sap.m.semantic.SemanticButton","helpDescription":"A SendMessageAction button has default semantic-specific properties and is eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SendMessageAction(sId?, mSettings?) : sap.m.semantic.SendMessageAction","name":"sap.m.semantic.SendMessageAction","prefix":"SendMessageAction","Experimental":false,"constructorDescription":"Constructor for a new SendMessageAction."},{"template":"new sap.m.semantic.ShareInJamAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/semantic/ShareInJamAction","static":"true","extends":"sap.m.semantic.SemanticButton","helpDescription":"A ShareInJamAction button has default semantic-specific properties and is eligible for aggregation content of a {@link sap.m.semantic.SemanticPage}.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ShareInJamAction(sId?, mSettings?) : sap.m.semantic.ShareInJamAction","name":"sap.m.semantic.ShareInJamAction","prefix":"ShareInJamAction","Experimental":false,"constructorDescription":"Constructor for a new ShareInJamAction."},{"template":"new sap.m.semantic.ShareMenuPage(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tbusy: ${bBusy}, // boolean\n\t\tbusyIndicatorDelay: ${1000}, // int\n\t\tvisible: ${bVisible}, // boolean\n\t\tfieldGroupIds: ${[]}, // string[]\n\t\tvalidateFieldGroup: [function (oEvent) {}, this], // function|array\n\t\ttitle: \"${title}\", // string\n\t\ttitleLevel: ${sap.ui.core.TitleLevel.Auto}, // sap.ui.core.TitleLevel\n\t\tshowNavButton: ${bShowNavButton}, // boolean\n\t\tshowSubHeader: ${bShowSubHeader}, // boolean\n\t\tenableScrolling: ${bEnableScrolling}, // boolean\n\t\tshowFooter: ${bShowFooter}, // boolean\n\t\tfloatingFooter: ${bFloatingFooter}, // boolean\n\t\tsemanticRuleSet: ${sap.m.semantic.SemanticRuleSetType.Classic}, // sap.m.semantic.SemanticRuleSetType\n\t\tbackgroundDesign: ${sap.m.PageBackgroundDesign.Standard}, // sap.m.PageBackgroundDesign\n\t\tsubHeader: ${subHeader}, // sap.m.IBar\n\t\tcontent: [${content}], // sap.ui.core.Control[]\n\t\tcustomHeaderContent: [${customHeaderContent}], // sap.m.Button[]\n\t\tcustomFooterContent: [${customFooterContent}], // sap.m.Button[]\n\t\tlandmarkInfo: ${landmarkInfo}, // sap.m.PageAccessibleLandmarkInfo\n\t\tnavButtonPress: [function (oEvent) {}, this], // function|array\n\t\tcustomShareMenuContent: [${customShareMenuContent}] // sap.m.Button[]\n\t}\n)\n","module":"sap/m/semantic/ShareMenuPage","static":"true","extends":"sap.m.semantic.SemanticPage","helpDescription":"A ShareMenuPage is a {@link sap.m.semantic.SemanticPage} with support for \"share\" menu in the footer.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"ShareMenuPage(sId?, mSettings?) : sap.m.semantic.ShareMenuPage","name":"sap.m.semantic.ShareMenuPage","prefix":"ShareMenuPage","Experimental":false,"constructorDescription":"Constructor for a new ShareMenuPage\n\nAccepts an object literal <code>mSettings<\/code> that defines initial\nproperty values, aggregated and associated objects as well as event handlers.\nSee {@link sap.ui.base.ManagedObject#constructor} for a general description of the syntax of the settings object.\n<\/p><p>\nThe supported settings are:\n<ul>\n<li>Aggregations\n<ul>\n<li>{@link #getCustomShareMenuContent customShareMenuContent} : sap.m.Button[]<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n\nIn addition, all settings applicable to the base type {@link sap.m.semantic.SemanticPage#constructor sap.m.semantic.SemanticPage}\ncan be used as well."},{"template":"new sap.m.semantic.SortAction(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tpress: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/semantic/SortAction","static":"true","extends":"sap.m.semantic.SemanticButton","helpDescription":"A SortAction is a {@link sap.m.Button} control enhanced with styling according to the semantics of a common \"Sort\" action.\n\nA SortAction cannot be used independently but only as aggregation content of a {@link sap.m.semantic.SemanticPage}.\n\nYour app should listen to the <code>press<\/code> event of {@link sap.m.semantic.SortAction} in order to trigger the display of the sorting options.\n\nIf your sorting options are a simple list of items and require single choice only, then you can consider using a {@link sap.m.semantic.SortSelect} instead.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SortAction(sId?, mSettings?) : sap.m.semantic.SortAction","name":"sap.m.semantic.SortAction","prefix":"SortAction","Experimental":false,"constructorDescription":"Constructor for a new SortAction."},{"template":"new sap.m.semantic.SortSelect(\n\t\"${sId}\", // string\n\t{\n\t\tid: ${id}, // sap.ui.core.ID\n\t\tmodels: ${models}, // object\n\t\tbindingContexts: ${bindingContexts}, // object\n\t\tobjectBindings: ${objectBindings}, // object\n\t\tmetadataContexts: ${metadataContexts}, // object\n\t\tvalidationSuccess: [function (oEvent) {}, this], // function|array\n\t\tvalidationError: [function (oEvent) {}, this], // function|array\n\t\tparseError: [function (oEvent) {}, this], // function|array\n\t\tformatError: [function (oEvent) {}, this], // function|array\n\t\tmodelContextChange: [function (oEvent) {}, this], // function|array\n\t\ttooltip: ${tooltip}, // sap.ui.core.TooltipBase\n\t\tcustomData: [${customData}], // sap.ui.core.CustomData[]\n\t\tlayoutData: ${layoutData}, // sap.ui.core.LayoutData\n\t\tdependents: [${dependents}], // sap.ui.core.Element[]\n\t\tvisible: ${bVisible}, // boolean\n\t\tenabled: ${bEnabled}, // boolean\n\t\tselectedKey: ${\"\"}, // string\n\t\titems: [${items}], // sap.ui.core.Item[]\n\t\tselectedItem: ${selectedItem}, // (sap.ui.core.Item|string)\n\t\tchange: [function (oEvent) {}, this] // function|array\n\t}\n)\n","module":"sap/m/semantic/SortSelect","static":"true","extends":"sap.m.semantic.SemanticSelect","helpDescription":"A SortSelect is a {@link sap.m.Select} control enhanced with styling according to the semantics of a common \"Sort\" acton.\n\nA SortSelect cannot be used independently but only as aggregation content of a {@link sap.m.semantic.SemanticPage}.\n\nThe sorting options should be added to the <code>items<\/code> aggregation of {@link sap.m.semantic.SortSelect} and will be displayed as a pop-up list with support for single-item selection. If this simple popup list is not sufficient for your use case, you can implement your own custom dialog by using {@link sap.m.semantic.SortAction} to trigger the dialog opening.","Deprecated":false,"category":"constructor","DeprecatedInfo":{"isDeprecated":false},"description":"SortSelect(sId?, mSettings?) : sap.m.semantic.SortSelect","name":"sap.m.semantic.SortSelect","prefix":"SortSelect","Experimental":false,"constructorDescription":"Constructor for a new SortSelect."}]}